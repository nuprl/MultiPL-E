name: HumanEval_57_monotonic
language: sh
prompt: "#!/bin/bash\n# Return True is list elements are monotonically increasing\
  \ or decreasing.\n# >>> $(monotonic \"1 2 4 20\")\n# \"true\"\n# >>> $(monotonic\
  \ \"1 20 4 10\")\n# \"false\"\n# >>> $(monotonic \"4 1 0 -10\")\n# \"true\"\n#\n\
  # $1 is a space-separated list\nmonotonic() {\n"
tests: "}\n\ncandidate() {\n    monotonic \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1 2 4 10\") = \"true\" ]]\n    [[ $(candidate \"1 2 4 20\") = \"\
  true\" ]]\n    [[ $(candidate \"1 20 4 10\") = \"false\" ]]\n    [[ $(candidate\
  \ \"4 1 0 -10\") = \"true\" ]]\n    [[ $(candidate \"4 1 1 0\") = \"true\" ]]\n\
  \    [[ $(candidate \"1 2 3 2 5 60\") = \"false\" ]]\n    [[ $(candidate \"1 2 3\
  \ 4 5 60\") = \"true\" ]]\n    [[ $(candidate \"9 9 9 9\") = \"true\" ]]\n}\n\n\
  run_test"
completions: ["    local list=\"$1\"\n    local increasing=\"true\"\n    local decreasing=\"\
    true\"\n    local last=\"$(echo \"$list\" | awk '{print $1}')\"\n    for i in\
    \ $list; do\n        if [ \"$i\" -gt \"$last\" ]; then\n            decreasing=\"\
    false\"\n        elif [ \"$i\" -lt \"$last\" ]; then\n            increasing=\"\
    false\"\n        fi\n        last=\"$i\"\n    done\n    if [ \"$increasing\" =\
    \ \"true\" ] || [ \"$decreasing\" = \"true\" ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi", "    local -a a=($1)\n    local -i\
    \ i=0\n    local -i n=${#a[@]}\n    local -i incr=0\n    local -i decr=0\n   \
    \ local -i res=0\n    if [ $n -lt 2 ]; then\n        echo \"true\"\n        return\
    \ 0\n    fi\n    while [ $i -lt $n ]; do\n        if [ $i -eq 0 ]; then\n    \
    \        if [ ${a[$i]} -lt ${a[$i+1]} ]; then\n                incr=1\n      \
    \      elif [ ${a[$i]} -gt ${a[$i+1]} ]; then\n                decr=1\n      \
    \      fi\n        else\n            if [ $incr -eq 1 ]; then\n              \
    \  if [ ${a[$i]} -lt ${a[$i-1]} ]; then\n                    res=1\n         \
    \           break\n                fi\n            elif [ $decr -eq 1 ]; then\n\
    \                if [ ${a[$i]} -gt ${a[$i-1]} ]; then\n                    res=1\n\
    \                    break\n                fi\n            fi\n        fi\n \
    \       i=$i+1\n    done\n    if [ $res -eq 1 ]; then\n        echo \"false\"\n\
    \    else\n        echo \"true\"\n    fi", "    local list=\"$1\"\n    local direction=\"\
    $(echo \"$list\" | awk '{print ($2>$1)?\"+\":\"-\"}')\"\n    local prev=\"$(echo\
    \ \"$list\" | awk '{print $1}')\"\n    local curr\n    for curr in $list; do\n\
    \        if [ \"$direction\" == \"+\" ]; then\n            if [ \"$curr\" -lt\
    \ \"$prev\" ]; then\n                echo \"false\"\n                return\n\
    \            fi\n        else\n            if [ \"$curr\" -gt \"$prev\" ]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    fi\n        prev=\"$curr\"\n    done\n    echo \"true\"", "    local -a arr=($1)\n\
    \    local -a diffs\n    local -i i\n    local -i len=${#arr[@]}\n    local -i\
    \ sign\n    local -i prev\n    local -i curr\n\n    if (( len < 2 )); then\n \
    \       echo \"true\"\n        return\n    fi\n\n    for (( i=1; i<len; i++ ));\
    \ do\n        diffs+=($(( arr[i] - arr[i-1] )))\n    done\n\n    sign=${diffs[0]}\n\
    \    for (( i=1; i<len-1; i++ )); do\n        if (( sign * diffs[i] < 0 )); then\n\
    \            echo \"false\"\n            return\n        fi\n    done\n\n    echo\
    \ \"true\"", "  local list=\"$1\"\n  local prev=$(echo \"$list\" | head -n 1)\n\
    \  local increasing=true\n  local decreasing=true\n  for i in $list; do\n    if\
    \ [[ $i -lt $prev ]]; then\n      increasing=false\n    fi\n    if [[ $i -gt $prev\
    \ ]]; then\n      decreasing=false\n    fi\n    prev=$i\n  done\n  if [[ $increasing\
    \ == true || $decreasing == true ]]; then\n    echo \"true\"\n  else\n    echo\
    \ \"false\"\n  fi", "    local list=\"$1\"\n    local increasing=true\n    local\
    \ decreasing=true\n    local prev=0\n    for i in $list; do\n        if (( i <\
    \ prev )); then\n            increasing=false\n        fi\n        if (( i > prev\
    \ )); then\n            decreasing=false\n        fi\n        prev=$i\n    done\n\
    \    if $increasing || $decreasing; then\n        echo \"true\"\n    else\n  \
    \      echo \"false\"\n    fi", "    local list=\"$1\"\n    local prev=$(echo\
    \ \"$list\" | head -n 1)\n    local curr\n    local increasing=true\n    local\
    \ decreasing=true\n    for curr in $list; do\n        if [ \"$curr\" -lt \"$prev\"\
    \ ]; then\n            increasing=false\n        fi\n        if [ \"$curr\" -gt\
    \ \"$prev\" ]; then\n            decreasing=false\n        fi\n        prev=$curr\n\
    \    done\n    if $increasing || $decreasing; then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n    local incr=0\n\
    \    local decr=0\n    local prev=0\n    local curr=0\n    for i in $list; do\n\
    \        curr=$i\n        if [[ $curr -gt $prev ]]; then\n            incr=1\n\
    \        elif [[ $curr -lt $prev ]]; then\n            decr=1\n        fi\n  \
    \      if [[ $incr -eq 1 && $decr -eq 1 ]]; then\n            echo \"false\"\n\
    \            return\n        fi\n        prev=$curr\n    done\n    echo \"true\"",
  "    local -a list=($1)\n    local -a diffs\n    local i\n    for ((i=0; i<${#list[@]}-1;\
    \ i++)); do\n        diffs[$i]=$((list[$i+1]-list[$i]))\n    done\n    local -a\
    \ uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n\
    \    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local list=\"$1\"\n    local inc=0\n  \
    \  local dec=0\n    local prev=0\n    for i in $list; do\n        if [ $i -gt\
    \ $prev ]; then\n            inc=1\n        elif [ $i -lt $prev ]; then\n    \
    \        dec=1\n        fi\n        prev=$i\n    done\n    [ $inc -eq 1 -a $dec\
    \ -eq 0 ] && echo \"true\" || echo \"false\"", "    local list=($1)\n    local\
    \ i=0\n    local j=1\n    local increasing=true\n    local decreasing=true\n \
    \   while [ $j -lt ${#list[@]} ]; do\n        if [ ${list[$i]} -gt ${list[$j]}\
    \ ]; then\n            increasing=false\n        fi\n        if [ ${list[$i]}\
    \ -lt ${list[$j]} ]; then\n            decreasing=false\n        fi\n        i=$((i+1))\n\
    \        j=$((j+1))\n    done\n    if [ $increasing = true ] || [ $decreasing\
    \ = true ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n  \
    \  fi", "    local list=\"$1\"\n    local inc=0\n    local dec=0\n    local prev=0\n\
    \    local curr=0\n    for i in $list; do\n        curr=$i\n        if [ $prev\
    \ -gt $curr ]; then\n            dec=1\n        elif [ $prev -lt $curr ]; then\n\
    \            inc=1\n        fi\n        if [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n\
    \            echo \"false\"\n            return\n        fi\n        prev=$curr\n\
    \    done\n    echo \"true\"", "    local -a list=($1)\n    local -i i=0\n   \
    \ local -i len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local\
    \ -i curr=0\n    local -i next=0\n    local -i prev=0\n    local -i first=0\n\
    \    local -i last=0\n    local -i diff=0\n    local -i abs=0\n    local -i sign=0\n\
    \    local -i ret=0\n    local -i ret_val=0\n    local -i ret_sign=0\n    local\
    \ -i ret_abs=0\n    local -i ret_diff=0\n    local -i ret_prev=0\n    local -i\
    \ ret_next=0\n    local -i ret_first=0\n    local -i ret_last=0\n    local -i\
    \ ret_len=0\n    local -i ret_incr=0\n    local -i ret_decr=0\n    local -i ret_curr=0\n\
    \    local -i ret_i=0\n    local -i ret_i_plus_1=0\n    local -i ret_i_minus_1=0\n\
    \    local -i ret_i_plus_2=0\n    local -i ret_i_minus_2=0\n    local -i ret_i_plus_3=0\n\
    \    local -i ret_i_minus_3=0\n    local -i ret_i_plus_4=0\n    local -i ret_i_minus_4=0\n\
    \    local -i ret_i_plus_5=0\n    local -i ret_i_minus_5=0\n    local -i ret_i_plus_6=0\n\
    \    local -i ret_i_minus_6=0\n    local -i ret_i_plus_7=0\n    local -i ret_i_minus_7=0\n\
    \    local -i ret_i_plus_8=0\n    local -i ret_i_minus_8=0\n    local -i ret_i_plus_9=0\n\
    \    local -i ret_i_minus_9=0\n    local -i", "    local list=\"$1\"\n    local\
    \ prev=0\n    local curr=0\n    local increasing=0\n    local decreasing=0\n \
    \   for i in $list; do\n        curr=$i\n        if [ $curr -gt $prev ]; then\n\
    \            increasing=1\n        elif [ $curr -lt $prev ]; then\n          \
    \  decreasing=1\n        fi\n        if [ $increasing -eq 1 ] && [ $decreasing\
    \ -eq 1 ]; then\n            echo \"false\"\n            return\n        fi\n\
    \        prev=$curr\n    done\n    echo \"true\"", "    local list=\"$1\"\n  \
    \  local inc=0\n    local dec=0\n    local prev=0\n    for i in $list; do\n  \
    \      if [ $i -gt $prev ]; then\n            inc=1\n        elif [ $i -lt $prev\
    \ ]; then\n            dec=1\n        fi\n        prev=$i\n    done\n    if [\
    \ $inc -eq 1 -a $dec -eq 1 ]; then\n        echo \"false\"\n    else\n       \
    \ echo \"true\"\n    fi", "    local -a list=($1)\n    local -i i\n    local -i\
    \ len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n\
    \    for ((i=1; i<len; i++)); do\n        if [[ ${list[i]} -gt $prev ]]; then\n\
    \            incr=1\n        elif [[ ${list[i]} -lt $prev ]]; then\n         \
    \   decr=1\n        fi\n        if [[ $incr -eq 1 && $decr -eq 1 ]]; then\n  \
    \          echo \"false\"\n            return\n        fi\n        prev=${list[i]}\n\
    \    done\n    echo \"true\"", "    local list=\"$1\"\n    local prev=\n    local\
    \ curr=\n    local direction=\n    for curr in $list; do\n        if [[ -n $prev\
    \ ]]; then\n            if [[ -z $direction ]]; then\n                if [[ $prev\
    \ -lt $curr ]]; then\n                    direction=increasing\n             \
    \   elif [[ $prev -gt $curr ]]; then\n                    direction=decreasing\n\
    \                fi\n            elif [[ $direction = increasing ]]; then\n  \
    \              if [[ $prev -gt $curr ]]; then\n                    echo \"false\"\
    \n                    return\n                fi\n            elif [[ $direction\
    \ = decreasing ]]; then\n                if [[ $prev -lt $curr ]]; then\n    \
    \                echo \"false\"\n                    return\n                fi\n\
    \            fi\n        fi\n        prev=$curr\n    done\n    echo \"true\"",
  "    local list=\"$1\"\n    local prev=$(echo \"$list\" | awk '{print $1}')\n  \
    \  local prev_sign=0\n    local sign=0\n    local curr=0\n    local is_monotonic=true\n\
    \    for curr in $list; do\n        if [ $prev -eq $curr ]; then\n           \
    \ continue\n        fi\n        if [ $prev -lt $curr ]; then\n            sign=1\n\
    \        else\n            sign=-1\n        fi\n        if [ $prev_sign -eq 0\
    \ ]; then\n            prev_sign=$sign\n        elif [ $prev_sign -ne $sign ];\
    \ then\n            is_monotonic=false\n            break\n        fi\n      \
    \  prev=$curr\n    done\n    echo $is_monotonic", "    local list=\"$1\"\n   \
    \ local -a arr=($list)\n    local -i i\n    local -i len=\"${#arr[@]}\"\n    local\
    \ -i incr=0\n    local -i decr=0\n    for ((i=0; i<len-1; i++)); do\n        if\
    \ [[ ${arr[i]} -lt ${arr[i+1]} ]]; then\n            incr=1\n        elif [[ ${arr[i]}\
    \ -gt ${arr[i+1]} ]]; then\n            decr=1\n        fi\n    done\n    if [[\
    \ $incr -eq 1 && $decr -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $incr\
    \ -eq 0 && $decr -eq 1 ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local list=\"$1\"\n    local increasing=true\n    local\
    \ decreasing=true\n    local prev=0\n    for i in $list; do\n        if [ $i -lt\
    \ $prev ]; then\n            increasing=false\n        elif [ $i -gt $prev ];\
    \ then\n            decreasing=false\n        fi\n        prev=$i\n    done\n\
    \    if $increasing || $decreasing; then\n        echo \"true\"\n    else\n  \
    \      echo \"false\"\n    fi", "    local list=\"$1\"\n    local increasing=true\n\
    \    local decreasing=true\n    local prev=\n    for i in $list; do\n        if\
    \ [ -n \"$prev\" ]; then\n            if [ \"$i\" -lt \"$prev\" ]; then\n    \
    \            increasing=false\n            elif [ \"$i\" -gt \"$prev\" ]; then\n\
    \                decreasing=false\n            fi\n        fi\n        prev=\"\
    $i\"\n    done\n    if $increasing || $decreasing; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    local list=($1)\n    local i\n\
    \    local n=${#list[@]}\n    local incr=0\n    local decr=0\n    for ((i=0; i<n-1;\
    \ i++)); do\n        if (( list[i] < list[i+1] )); then\n            (( incr++\
    \ ))\n        elif (( list[i] > list[i+1] )); then\n            (( decr++ ))\n\
    \        fi\n    done\n    if (( incr == n-1 || decr == n-1 )); then\n       \
    \ echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=\"\
    $1\"\n    local prev=0\n    local curr=0\n    local incr=0\n    local decr=0\n\
    \    for i in $list; do\n        curr=$i\n        if [ $prev -gt $curr ]; then\n\
    \            decr=1\n        elif [ $prev -lt $curr ]; then\n            incr=1\n\
    \        fi\n        prev=$curr\n    done\n    if [ $incr -eq 1 -a $decr -eq 1\
    \ ]; then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi", " \
    \ local list=$1\n  local -a arr=($list)\n  local -i i=0\n  local -i len=${#arr[@]}\n\
    \  local -i inc=0\n  local -i dec=0\n  local -i diff=0\n  local -i prev=0\n  local\
    \ -i curr=0\n  local -i next=0\n  local -i last=0\n  local -i first=0\n  local\
    \ -i mid=0\n  local -i mid_prev=0\n  local -i mid_next=0\n  local -i mid_diff=0\n\
    \  local -i mid_prev_diff=0\n  local -i mid_next_diff=0\n  local -i mid_prev_diff_sign=0\n\
    \  local -i mid_next_diff_sign=0\n  local -i mid_diff_sign=0\n  local -i prev_diff_sign=0\n\
    \  local -i next_diff_sign=0\n  local -i diff_sign=0\n  local -i prev_diff=0\n\
    \  local -i next_diff=0\n  local -i last_diff=0\n  local -i first_diff=0\n  local\
    \ -i last_diff_sign=0\n  local -i first_diff_sign=0\n  local -i mid_prev_diff_sign=0\n\
    \  local -i mid_next_diff_sign=0\n  local -i mid_diff_sign=0\n  local -i prev_diff_sign=0\n\
    \  local -i next_diff_sign=0\n  local -i diff_sign=0\n  local -i prev_diff=0\n\
    \  local -i next_diff=0\n  local -i last_diff=0\n  local -i first_diff=0\n  local\
    \ -i mid=0\n  local -i mid_prev=0\n  local -i mid_next=0\n  local -i mid_diff=0\n\
    \  local -i mid_prev_diff=0\n  local -i mid_next_diff=0\n  local -i mid_prev_diff_sign=0\n\
    \  local -i mid_next_diff_sign=0\n  local -i mid", "  local list=\"$1\"\n  local\
    \ prev\n  local curr\n  local increasing=true\n  local decreasing=true\n  for\
    \ curr in $list; do\n    if [[ -n \"$prev\" ]]; then\n      if (( curr > prev\
    \ )); then\n        decreasing=false\n      elif (( curr < prev )); then\n   \
    \     increasing=false\n      fi\n    fi\n    prev=$curr\n  done\n  if $increasing\
    \ || $decreasing; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
  "    local -a arr=($1)\n    local -i i\n    local -i len=${#arr[@]}\n    local -i\
    \ incr=0\n    local -i decr=0\n    local -i prev=${arr[0]}\n    for ((i=1; i<len;\
    \ i++)); do\n        if ((prev < arr[i])); then\n            ((incr++))\n    \
    \    elif ((prev > arr[i])); then\n            ((decr++))\n        fi\n      \
    \  ((prev = arr[i]))\n    done\n    if ((incr == len-1 || decr == len-1)); then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local\
    \ list=$1\n    local direction=0\n    local last=0\n    local current=0\n    for\
    \ i in $list; do\n        current=$i\n        if [ $direction -eq 0 ]; then\n\
    \            if [ $current -gt $last ]; then\n                direction=1\n  \
    \          elif [ $current -lt $last ]; then\n                direction=-1\n \
    \           fi\n        elif [ $direction -eq 1 ]; then\n            if [ $current\
    \ -lt $last ]; then\n                echo \"false\"\n                return\n\
    \            fi\n        elif [ $direction -eq -1 ]; then\n            if [ $current\
    \ -gt $last ]; then\n                echo \"false\"\n                return\n\
    \            fi\n        fi\n        last=$current\n    done\n    echo \"true\"",
  "    local list=\"$1\"\n    local increasing=\"true\"\n    local decreasing=\"true\"\
    \n    local prev=\"$(echo \"$list\" | head -n 1)\"\n    for i in $list; do\n \
    \       if [ \"$i\" -lt \"$prev\" ]; then\n            increasing=\"false\"\n\
    \        fi\n        if [ \"$i\" -gt \"$prev\" ]; then\n            decreasing=\"\
    false\"\n        fi\n        prev=\"$i\"\n    done\n    if [ \"$increasing\" =\
    \ \"true\" ] || [ \"$decreasing\" = \"true\" ]; then\n        echo \"true\"\n\
    \    else\n        echo \"false\"\n    fi", "    local -a arr=($1)\n    local\
    \ -a diffs\n    local i\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n        diffs[$i]=$((arr[$i+1]-arr[$i]))\n\
    \    done\n    local -a uniq_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | sort\
    \ -u | tr '\\n' ' '))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=($1)\n\
    \    local direction=0\n    local last=${list[0]}\n    for i in ${list[@]}; do\n\
    \        if [[ $direction == 0 ]]; then\n            if [[ $i -gt $last ]]; then\n\
    \                direction=1\n            elif [[ $i -lt $last ]]; then\n    \
    \            direction=-1\n            fi\n        elif [[ $direction == 1 ]];\
    \ then\n            if [[ $i -lt $last ]]; then\n                echo \"false\"\
    \n                return\n            fi\n        elif [[ $direction == -1 ]];\
    \ then\n            if [[ $i -gt $last ]]; then\n                echo \"false\"\
    \n                return\n            fi\n        fi\n        last=$i\n    done\n\
    \    echo \"true\"", "    local list=\"$1\"\n    local inc=0\n    local dec=0\n\
    \    local prev=0\n    for i in $list; do\n        if [ $i -gt $prev ]; then\n\
    \            inc=1\n        elif [ $i -lt $prev ]; then\n            dec=1\n \
    \       fi\n        prev=$i\n    done\n    if [ $inc -eq 1 -a $dec -eq 1 ]; then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local\
    \ list=\"$1\"\n    local incr=true\n    local prev=0\n    local curr=0\n    local\
    \ first=true\n    for i in $list; do\n        if $first; then\n            prev=$i\n\
    \            first=false\n            continue\n        fi\n        curr=$i\n\
    \        if $incr; then\n            if [ $curr -lt $prev ]; then\n          \
    \      incr=false\n            fi\n        else\n            if [ $curr -gt $prev\
    \ ]; then\n                echo \"false\"\n                return\n          \
    \  fi\n        fi\n        prev=$curr\n    done\n    echo \"true\"", "    local\
    \ -a list=($1)\n    local -i i=0\n    local -i j=1\n    local -i len=${#list[@]}\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i result=0\n\
    \    local -i diff=0\n    local -i prev_diff=0\n    local -i abs_diff=0\n    local\
    \ -i abs_prev_diff=0\n    local -i abs_diff_gt_prev_diff=0\n    local -i abs_diff_lt_prev_diff=0\n\
    \    local -i abs_diff_eq_prev_diff=0\n    local -i abs_diff_gt_prev_diff_and_increasing=0\n\
    \    local -i abs_diff_lt_prev_diff_and_decreasing=0\n    local -i abs_diff_eq_prev_diff_and_increasing=0\n\
    \    local -i abs_diff_eq_prev_diff_and_decreasing=0\n    local -i abs_diff_gt_prev_diff_and_increasing_or_eq=0\n\
    \    local -i abs_diff_lt_prev_diff_and_decreasing_or_eq=0\n    local -i abs_diff_eq_prev_diff_and_increasing_or_eq=0\n\
    \    local -i abs_diff_eq_prev_diff_and_decreasing_or_eq=0\n    local -i abs_diff_gt_prev_diff_and_increasing_or_eq_and_increasing=0\n\
    \    local -i abs_diff_lt_prev_diff_and_decreasing_or_eq_and_decreasing=0\n  \
    \  local -i abs_diff_eq_prev_diff_and_increasing_or_eq_and_increasing=0\n    local\
    \ -i abs_diff_eq_prev_diff_and_decreasing_or_eq_and_decreasing=0\n    local -i\
    \ abs_diff_gt_prev_diff_and_increasing_or_eq_and_increasing_or_eq=0\n    local\
    \ -i abs_diff_lt_prev_diff_and_decreasing_or_eq_", "    local list=\"$1\"\n  \
    \  local incr=0\n    local prev=0\n    local curr=0\n    local i=0\n    for i\
    \ in $list; do\n        if [[ $i -lt $prev ]]; then\n            incr=-1\n   \
    \     elif [[ $i -gt $prev ]]; then\n            incr=1\n        fi\n        if\
    \ [[ $i -ne $prev && $incr -ne 0 && $incr -ne $curr ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n        curr=$incr\n        prev=$i\n\
    \    done\n    echo \"true\"", "    local list=\"$1\"\n    local prev=$(echo \"\
    $list\" | awk '{print $1}')\n    local curr\n    local increasing=true\n    local\
    \ decreasing=true\n    for curr in $list; do\n        if [[ $prev -lt $curr ]];\
    \ then\n            decreasing=false\n        elif [[ $prev -gt $curr ]]; then\n\
    \            increasing=false\n        fi\n        prev=$curr\n    done\n    if\
    \ [[ $increasing == true || $decreasing == true ]]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n    local\
    \ -a arr=($list)\n    local -a diffs\n    local i\n    local diff\n    local prev_diff\n\
    \    local is_monotonic=\"true\"\n\n    for ((i=1; i<${#arr[@]}; i++)); do\n \
    \       diff=$((${arr[$i]} - ${arr[$i-1]}))\n        diffs+=($diff)\n    done\n\
    \n    prev_diff=${diffs[0]}\n    for diff in ${diffs[@]}; do\n        if [[ $prev_diff\
    \ -ne 0 ]]; then\n            if [[ $diff -ne 0 ]]; then\n                if [[\
    \ $prev_diff -ne $diff ]]; then\n                    is_monotonic=\"false\"\n\
    \                    break\n                fi\n            fi\n        fi\n \
    \       prev_diff=$diff\n    done\n\n    echo $is_monotonic", "    local list=\"\
    $1\"\n    local prev=\"$(echo \"$list\" | head -n 1)\"\n    local curr\n    local\
    \ increasing=true\n    local decreasing=true\n    for curr in $list; do\n    \
    \    if [ \"$prev\" -lt \"$curr\" ]; then\n            decreasing=false\n    \
    \    elif [ \"$prev\" -gt \"$curr\" ]; then\n            increasing=false\n  \
    \      fi\n        prev=\"$curr\"\n    done\n    if $increasing || $decreasing;\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", "  \
    \  local -a list=($1)\n    local -a diffs\n    local i\n    for ((i=0; i<${#list[@]}-1;\
    \ i++)); do\n        diffs[i]=$((list[i+1]-list[i]))\n    done\n    if [[ ${diffs[*]}\
    \ =~ ^-?0*1+$ ]]; then\n        echo \"true\"\n    elif [[ ${diffs[*]} =~ ^-?0*-1+$\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "    local list=\"$1\"\n    local first=\"$(echo \"$list\" | cut -d' ' -f1)\"\n\
    \    local second=\"$(echo \"$list\" | cut -d' ' -f2)\"\n    local incr=0\n  \
    \  local decr=0\n    if [ \"$first\" -lt \"$second\" ]; then\n        incr=1\n\
    \    elif [ \"$first\" -gt \"$second\" ]; then\n        decr=1\n    fi\n    for\
    \ i in $(seq 3 $(echo \"$list\" | wc -w)); do\n        local current=\"$(echo\
    \ \"$list\" | cut -d' ' -f$i)\"\n        if [ \"$incr\" -eq 1 ] && [ \"$current\"\
    \ -lt \"$first\" ]; then\n            echo \"false\"\n            return\n   \
    \     elif [ \"$decr\" -eq 1 ] && [ \"$current\" -gt \"$first\" ]; then\n    \
    \        echo \"false\"\n            return\n        fi\n        first=\"$current\"\
    \n    done\n    echo \"true\"", "    local list=\"$1\"\n    local increasing=\"\
    true\"\n    local decreasing=\"true\"\n    local prev=\"$(echo \"$list\" | cut\
    \ -d ' ' -f 1)\"\n    for i in $list; do\n        if [ \"$i\" -gt \"$prev\" ];\
    \ then\n            decreasing=\"false\"\n        elif [ \"$i\" -lt \"$prev\"\
    \ ]; then\n            increasing=\"false\"\n        fi\n        prev=\"$i\"\n\
    \    done\n    if [ \"$increasing\" = \"true\" ] || [ \"$decreasing\" = \"true\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", " \
    \   local list=\"$1\"\n    local prev=$(echo \"$list\" | head -n 1)\n    local\
    \ incr=true\n    local decr=true\n    for i in $list; do\n        if [ \"$i\"\
    \ -lt \"$prev\" ]; then\n            incr=false\n        elif [ \"$i\" -gt \"\
    $prev\" ]; then\n            decr=false\n        fi\n        prev=$i\n    done\n\
    \    if [ \"$incr\" = true ] || [ \"$decr\" = true ]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n    local\
    \ prev=$(echo \"$list\" | head -n 1)\n    local curr\n    local increasing=true\n\
    \    for curr in $list; do\n        if [[ $prev -gt $curr ]]; then\n         \
    \   increasing=false\n            break\n        fi\n        prev=$curr\n    done\n\
    \    if $increasing; then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi", "    local list=\"$1\"\n    local direction=\"$(echo \"$list\" | awk\
    \ '{\n        if ($1 < $2) {\n            print \"increasing\"\n        } else\
    \ if ($1 > $2) {\n            print \"decreasing\"\n        } else {\n       \
    \     print \"equal\"\n        }\n    }')\"\n    if [ \"$direction\" == \"equal\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"$list\" | awk -v direction=\"\
    $direction\" '{\n            if (direction == \"increasing\") {\n            \
    \    if ($1 <= $2) {\n                    print \"true\"\n                } else\
    \ {\n                    print \"false\"\n                }\n            } else\
    \ if (direction == \"decreasing\") {\n                if ($1 >= $2) {\n      \
    \              print \"true\"\n                } else {\n                    print\
    \ \"false\"\n                }\n            }\n        }'\n    fi", "    local\
    \ list=($1)\n    local direction=${2:-1}\n    local i=0\n    local n=${#list[@]}\n\
    \    local result=true\n    while [ $i -lt $n ]; do\n        if [ $i -gt 0 ];\
    \ then\n            if [ $direction -eq 1 ]; then\n                if [ ${list[$i]}\
    \ -lt ${list[$i-1]} ]; then\n                    result=false\n              \
    \      break\n                fi\n            else\n                if [ ${list[$i]}\
    \ -gt ${list[$i-1]} ]; then\n                    result=false\n              \
    \      break\n                fi\n            fi\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $result", "  local -a list=($1)\n  local -i i\n  local -i\
    \ len=${#list[@]}\n  local -i incr=0\n  local -i decr=0\n  local -i prev=${list[0]}\n\
    \  for ((i=1; i<len; i++)); do\n    if [[ ${list[i]} -gt $prev ]]; then\n    \
    \  incr=1\n    elif [[ ${list[i]} -lt $prev ]]; then\n      decr=1\n    fi\n \
    \   prev=${list[i]}\n  done\n  [[ $incr -eq 1 && $decr -eq 0 ]] || [[ $incr -eq\
    \ 0 && $decr -eq 1 ]]", "    local list=($1)\n    local i\n    local incr=1\n\
    \    local prev=${list[0]}\n    for ((i=1; i<${#list[@]}; i++)); do\n        if\
    \ ((prev > ${list[i]})); then\n            incr=-1\n        elif ((prev < ${list[i]}));\
    \ then\n            incr=1\n        fi\n        if ((incr * (prev - ${list[i]})\
    \ < 0)); then\n            echo \"false\"\n            return\n        fi\n  \
    \      prev=${list[i]}\n    done\n    echo \"true\"", "    local -a list=($1)\n\
    \    local -a diffs\n    local i\n    local diff\n    local prev_diff\n    local\
    \ is_increasing\n    local is_decreasing\n    local is_monotonic\n\n    for ((i=1;\
    \ i<${#list[@]}; i++)); do\n        diff=$((${list[$i]} - ${list[$i-1]}))\n  \
    \      diffs+=(\"$diff\")\n    done\n\n    prev_diff=${diffs[0]}\n    is_increasing=true\n\
    \    is_decreasing=true\n    for diff in \"${diffs[@]}\"; do\n        if ((diff\
    \ < 0)); then\n            is_increasing=false\n        elif ((diff > 0)); then\n\
    \            is_decreasing=false\n        fi\n    done\n\n    if $is_increasing\
    \ || $is_decreasing; then\n        is_monotonic=true\n    else\n        is_monotonic=false\n\
    \    fi\n\n    echo \"$is_monotonic\"", "    local list=\"$1\"\n    local -a arr=($list)\n\
    \    local -a diffs\n    local i\n    local j\n    local diff\n    local prev_diff\n\
    \    local sign\n    local prev_sign\n    local -i len=${#arr[@]}\n    for ((i=0;\
    \ i<len-1; i++)); do\n        diffs[i]=$((arr[i+1] - arr[i]))\n    done\n    for\
    \ ((i=0; i<len-2; i++)); do\n        diff=${diffs[i]}\n        prev_diff=${diffs[i-1]}\n\
    \        sign=$((diff > 0 ? 1 : -1))\n        prev_sign=$((prev_diff > 0 ? 1 :\
    \ -1))\n        if [[ $sign != $prev_sign ]]; then\n            echo \"false\"\
    \n            return\n        fi\n    done\n    echo \"true\"", "    local -a\
    \ arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i incr=0\n\
    \    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n    local -i curr=0\n\
    \    local -i next=0\n    local -i is_monotonic=0\n\n    if [[ $len -eq 1 ]];\
    \ then\n        echo \"true\"\n        return\n    fi\n\n    for ((i=0; i<len;\
    \ i++)); do\n        curr=${arr[$i]}\n        if [[ $i -eq 0 ]]; then\n      \
    \      prev=$curr\n            continue\n        fi\n        if [[ $i -eq $((len-1))\
    \ ]]; then\n            next=$curr\n            break\n        fi\n        next=${arr[$((i+1))]}\n\
    \        diff=$((curr-prev))\n        if [[ $diff -gt 0 ]]; then\n           \
    \ incr=1\n        elif [[ $diff -lt 0 ]]; then\n            decr=1\n        fi\n\
    \        prev=$curr\n    done\n\n    if [[ $incr -eq 1 && $decr -eq 0 ]]; then\n\
    \        is_monotonic=1\n    elif [[ $incr -eq 0 && $decr -eq 1 ]]; then\n   \
    \     is_monotonic=1\n    fi\n\n    if [[ $is_monotonic -eq 1 ]]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local -a a=($1)\n\
    \    local -i i\n    local -i n=${#a[@]}\n    local -i incr=0\n    local -i decr=0\n\
    \    for ((i=1; i<n; i++)); do\n        if ((a[i] > a[i-1])); then\n         \
    \   incr=1\n        elif ((a[i] < a[i-1])); then\n            decr=1\n       \
    \ fi\n    done\n    ((incr + decr == 1)) && echo \"true\" || echo \"false\"",
  "    local list=\"$1\"\n    local prev=$(echo \"$list\" | cut -d' ' -f1)\n    local\
    \ increasing=true\n    local decreasing=true\n    for x in $list; do\n       \
    \ if (( x < prev )); then\n            increasing=false\n        elif (( x > prev\
    \ )); then\n            decreasing=false\n        fi\n        prev=$x\n    done\n\
    \    if $increasing || $decreasing; then\n        echo \"true\"\n    else\n  \
    \      echo \"false\"\n    fi", "    local -a list=($1)\n    local -i len=${#list[@]}\n\
    \    local -i i=0\n    local -i incr=0\n    local -i decr=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i result=0\n\n    if [ $len\
    \ -lt 3 ]; then\n        echo \"true\"\n        return\n    fi\n\n    for ((i=0;\
    \ i<len; i++)); do\n        curr=${list[$i]}\n        if [ $i -eq 0 ]; then\n\
    \            prev=$curr\n            continue\n        fi\n        if [ $i -eq\
    \ $((len-1)) ]; then\n            next=$curr\n            break\n        fi\n\
    \        next=${list[$((i+1))]}\n        if [ $prev -lt $curr ]; then\n      \
    \      incr=1\n        elif [ $prev -gt $curr ]; then\n            decr=1\n  \
    \      fi\n        if [ $incr -eq 1 ] && [ $decr -eq 1 ]; then\n            result=1\n\
    \            break\n        fi\n        prev=$curr\n    done\n\n    if [ $result\
    \ -eq 1 ]; then\n        echo \"false\"\n    else\n        if [ $incr -eq 1 ]\
    \ && [ $next -lt $curr ]; then\n            echo \"false\"\n        elif [ $decr\
    \ -eq 1 ] && [ $next -gt $curr ]; then\n            echo \"false\"\n        else\n\
    \            echo \"true\"\n        fi\n    fi", "    local -a arr\n    local\
    \ -i i\n    local -i len\n    local -i prev\n    local -i curr\n    local -i incr\n\
    \    local -i decr\n    local -i ret\n\n    arr=($1)\n    len=${#arr[@]}\n   \
    \ if (( len < 2 )); then\n        echo \"true\"\n        return\n    fi\n\n  \
    \  prev=${arr[0]}\n    incr=0\n    decr=0\n    for (( i=1; i<len; i++ )); do\n\
    \        curr=${arr[i]}\n        if (( curr > prev )); then\n            incr=1\n\
    \        elif (( curr < prev )); then\n            decr=1\n        fi\n      \
    \  prev=$curr\n    done\n\n    ret=0\n    if (( incr == 1 && decr == 0 )); then\n\
    \        ret=1\n    elif (( incr == 0 && decr == 1 )); then\n        ret=1\n \
    \   fi\n\n    if (( ret == 1 )); then\n        echo \"true\"\n    else\n     \
    \   echo \"false\"\n    fi", "  local list=\"$1\"\n  local direction=\"$(echo\
    \ \"$list\" | awk '{print ($1 < $2 ? \"increasing\" : \"decreasing\")}')\"\n \
    \ local result=\"true\"\n  local prev=\"$(echo \"$list\" | awk '{print $1}')\"\
    \n  for i in $list; do\n    if [[ \"$direction\" == \"increasing\" ]]; then\n\
    \      if [[ \"$i\" -lt \"$prev\" ]]; then\n        result=\"false\"\n       \
    \ break\n      fi\n    else\n      if [[ \"$i\" -gt \"$prev\" ]]; then\n     \
    \   result=\"false\"\n        break\n      fi\n    fi\n    prev=\"$i\"\n  done\n\
    \  echo \"$result\"", "    local list=\"$1\"\n    local direction=\"$(echo \"\
    $list\" | awk '{print ($2>$1)?\"increasing\":\"decreasing\"}')\"\n    local prev=\"\
    $(echo \"$list\" | awk '{print $1}')\"\n    local current\n    for current in\
    \ $list; do\n        if [[ \"$direction\" == \"increasing\" ]]; then\n       \
    \     if [[ \"$current\" -lt \"$prev\" ]]; then\n                echo \"false\"\
    \n                return\n            fi\n        else\n            if [[ \"$current\"\
    \ -gt \"$prev\" ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        fi\n        prev=\"$current\"\n    done\n    echo \"\
    true\"", "    local list=\"$1\"\n    local -a arr=($list)\n    local -a diffs\n\
    \    local -i i\n    local -i len=${#arr[@]}\n    local -i prev\n    local -i\
    \ curr\n    local -i diff\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\
    \n    for ((i=0; i<len-1; i++)); do\n        prev=${arr[i]}\n        curr=${arr[i+1]}\n\
    \        diff=$(($curr - $prev))\n        diffs[i]=$diff\n        if ((diff <\
    \ 0)); then\n            is_increasing=0\n        fi\n        if ((diff > 0));\
    \ then\n            is_decreasing=0\n        fi\n    done\n\n    if ((is_increasing\
    \ || is_decreasing)); then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi", "    local list=($1)\n    local i=0\n    local j=1\n    local incr=0\n\
    \    local decr=0\n    local len=${#list[@]}\n    while [ $j -lt $len ]; do\n\
    \        if [ ${list[$i]} -lt ${list[$j]} ]; then\n            incr=1\n      \
    \  elif [ ${list[$i]} -gt ${list[$j]} ]; then\n            decr=1\n        fi\n\
    \        i=$((i+1))\n        j=$((j+1))\n    done\n    if [ $incr -eq 1 ] && [\
    \ $decr -eq 0 ]; then\n        echo \"true\"\n    elif [ $incr -eq 0 ] && [ $decr\
    \ -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n   \
    \ fi", "    local list=\"$1\"\n    local inc=0\n    local dec=0\n    local prev=0\n\
    \    local curr=0\n    for i in $list; do\n        curr=$i\n        if [ $curr\
    \ -gt $prev ]; then\n            inc=1\n        elif [ $curr -lt $prev ]; then\n\
    \            dec=1\n        fi\n        prev=$curr\n    done\n    if [ $inc -eq\
    \ 1 -a $dec -eq 1 ]; then\n        echo \"false\"\n    else\n        echo \"true\"\
    \n    fi", "    local list=\"$1\"\n    local prev=$(echo \"$list\" | head -n 1)\n\
    \    local increasing=true\n    for i in $list; do\n        if [[ $i -lt $prev\
    \ ]]; then\n            increasing=false\n            break\n        fi\n    \
    \    prev=$i\n    done\n    if [[ $increasing == true ]]; then\n        echo \"\
    true\"\n    else\n        local decreasing=true\n        local prev=$(echo \"\
    $list\" | head -n 1)\n        for i in $list; do\n            if [[ $i -gt $prev\
    \ ]]; then\n                decreasing=false\n                break\n        \
    \    fi\n            prev=$i\n        done\n        if [[ $decreasing == true\
    \ ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    fi", "    local list=\"$1\"\n    local direction=0\n    local\
    \ prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if\
    \ [[ $direction -eq 0 ]]; then\n            if [[ $curr -gt $prev ]]; then\n \
    \               direction=1\n            elif [[ $curr -lt $prev ]]; then\n  \
    \              direction=-1\n            fi\n        elif [[ $direction -eq 1\
    \ ]]; then\n            if [[ $curr -lt $prev ]]; then\n                echo \"\
    false\"\n                return\n            fi\n        elif [[ $direction -eq\
    \ -1 ]]; then\n            if [[ $curr -gt $prev ]]; then\n                echo\
    \ \"false\"\n                return\n            fi\n        fi\n        prev=$curr\n\
    \    done\n    echo \"true\"", "    local -a list=($1)\n    local -a diffs\n \
    \   local -i i\n    local -i len=${#list[@]}\n    local -i sign=0\n    local -i\
    \ prev=0\n    local -i curr=0\n    local -i diff=0\n    local -i is_monotonic=1\n\
    \n    for ((i=0; i<len; i++)); do\n        curr=${list[$i]}\n        if ((i >\
    \ 0)); then\n            diff=$((curr - prev))\n            diffs+=($diff)\n \
    \           if ((sign == 0)); then\n                if ((diff > 0)); then\n  \
    \                  sign=1\n                elif ((diff < 0)); then\n         \
    \           sign=-1\n                fi\n            elif ((sign == 1 && diff\
    \ < 0)); then\n                is_monotonic=0\n                break\n       \
    \     elif ((sign == -1 && diff > 0)); then\n                is_monotonic=0\n\
    \                break\n            fi\n        fi\n        prev=$curr\n    done\n\
    \n    if ((is_monotonic)); then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local -a list=($1)\n    local -a diffs\n    local -i\
    \ i\n    local -i len=${#list[@]}\n    local -i sign\n    local -i last_sign\n\
    \n    # Compute differences\n    for ((i=1; i<len; i++)); do\n        diffs[i-1]=$((list[i]\
    \ - list[i-1]))\n    done\n\n    # Determine sign of first difference\n    if\
    \ ((diffs[0] > 0)); then\n        sign=1\n    elif ((diffs[0] < 0)); then\n  \
    \      sign=-1\n    else\n        sign=0\n    fi\n\n    # Make sure all differences\
    \ have the same sign\n    for ((i=1; i<len-1; i++)); do\n        last_sign=$sign\n\
    \        if ((diffs[i] > 0)); then\n            sign=1\n        elif ((diffs[i]\
    \ < 0)); then\n            sign=-1\n        else\n            sign=0\n       \
    \ fi\n        if ((sign != last_sign)); then\n            echo \"false\"\n   \
    \         return\n        fi\n    done\n\n    echo \"true\"", "    local -a arr=($1)\n\
    \    local -a diffs\n    local i\n    local prev=${arr[0]}\n    local inc=0\n\
    \    local dec=0\n    for i in \"${arr[@]:1}\"; do\n        if [[ $i -gt $prev\
    \ ]]; then\n            (( inc++ ))\n        elif [[ $i -lt $prev ]]; then\n \
    \           (( dec++ ))\n        fi\n        prev=$i\n    done\n    if [[ $inc\
    \ -gt 0 && $dec -gt 0 ]]; then\n        echo \"false\"\n    else\n        echo\
    \ \"true\"\n    fi", "    local -a list=($1)\n    local -i i=0\n    local -i n=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i result=0\n    local -i\
    \ retval=0\n\n    if (( n < 3 )); then\n        echo \"true\"\n        return\
    \ 0\n    fi\n\n    prev=${list[0]}\n    curr=${list[1]}\n    next=${list[2]}\n\
    \    diff=$(( curr - prev ))\n    if (( diff > 0 )); then\n        incr=1\n  \
    \  elif (( diff < 0 )); then\n        decr=1\n    fi\n\n    for (( i=1; i<n-1;\
    \ i++ )); do\n        prev=${list[i]}\n        curr=${list[i+1]}\n        next=${list[i+2]}\n\
    \        diff=$(( curr - prev ))\n        if (( diff > 0 )); then\n          \
    \  result=$(( incr + 1 ))\n        elif (( diff < 0 )); then\n            result=$((\
    \ decr + 1 ))\n        fi\n        if (( result > 1 )); then\n            echo\
    \ \"false\"\n            return 1\n        fi\n    done\n\n    echo \"true\"\n\
    \    return 0", "    local -a list=($1)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i direction=0\n    local -i prev=0\n    local -i curr=0\n    local\
    \ -i next=0\n    local -i is_monotonic=1\n\n    if [[ $len -lt 2 ]]; then\n  \
    \      echo \"true\"\n        return\n    fi\n\n    prev=${list[0]}\n    curr=${list[1]}\n\
    \    if [[ $prev -lt $curr ]]; then\n        direction=1\n    elif [[ $prev -gt\
    \ $curr ]]; then\n        direction=-1\n    fi\n\n    for ((i=1; i<len-1; i++));\
    \ do\n        prev=${list[i-1]}\n        curr=${list[i]}\n        next=${list[i+1]}\n\
    \        if [[ $direction -eq 1 ]]; then\n            if [[ $curr -gt $next ]];\
    \ then\n                is_monotonic=0\n                break\n            fi\n\
    \        elif [[ $direction -eq -1 ]]; then\n            if [[ $curr -lt $next\
    \ ]]; then\n                is_monotonic=0\n                break\n          \
    \  fi\n        else\n            is_monotonic=0\n            break\n        fi\n\
    \    done\n\n    if [[ $is_monotonic -eq 1 ]]; then\n        echo \"true\"\n \
    \   else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n    local -a\
    \ array=($list)\n    local -i len=${#array[@]}\n    local -i i=0\n    local -i\
    \ prev=${array[0]}\n    local -i curr=0\n    local -i incr=0\n    local -i decr=0\n\
    \    local -i ret=0\n\n    if [[ $len -eq 1 ]]; then\n        echo \"true\"\n\
    \        return 0\n    fi\n\n    for ((i=1; i<len; i++)); do\n        curr=${array[$i]}\n\
    \        if [[ $curr -gt $prev ]]; then\n            incr=1\n        elif [[ $curr\
    \ -lt $prev ]]; then\n            decr=1\n        fi\n        prev=$curr\n   \
    \ done\n\n    if [[ $incr -eq 1 && $decr -eq 1 ]]; then\n        ret=1\n    fi\n\
    \n    if [[ $ret -eq 0 ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local -a a=($1)\n    local -i i=0\n    local -i j=1\n\
    \    local -i n=${#a[@]}\n    local -i incr=1\n    local -i decr=1\n    local\
    \ -i res=0\n    if [ $n -lt 2 ]; then\n        echo \"true\"\n        return 0\n\
    \    fi\n    while [ $j -lt $n ]; do\n        if [ ${a[$i]} -gt ${a[$j]} ]; then\n\
    \            decr=0\n        elif [ ${a[$i]} -lt ${a[$j]} ]; then\n          \
    \  incr=0\n        fi\n        i=$((i+1))\n        j=$((j+1))\n    done\n    res=$((incr+decr))\n\
    \    if [ $res -eq 0 ]; then\n        echo \"false\"\n    else\n        echo \"\
    true\"\n    fi\n    return 0", "    local list=($1)\n    local i\n    local incr=0\n\
    \    local decr=0\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        if ((list[i]\
    \ < list[i+1])); then\n            incr=1\n        elif ((list[i] > list[i+1]));\
    \ then\n            decr=1\n        fi\n    done\n    if ((incr && decr)); then\n\
    \        echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local\
    \ list=\"$1\"\n    local -a arr=($list)\n    local -i len=${#arr[@]}\n    local\
    \ -i i=0\n    local -i prev=${arr[0]}\n    local -i curr=0\n    local -i incr=0\n\
    \    local -i decr=0\n    local -i ret=0\n\n    for ((i=1; i<len; i++)); do\n\
    \        curr=${arr[i]}\n        if ((curr > prev)); then\n            ((incr++))\n\
    \        elif ((curr < prev)); then\n            ((decr++))\n        fi\n    \
    \    prev=$curr\n    done\n\n    if ((incr == len-1 || decr == len-1)); then\n\
    \        ret=1\n    fi\n\n    echo $ret", "    local -a list=($1)\n    local -i\
    \ i=0\n    local -i len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n\
    \    local -i prev=${list[0]}\n    for ((i=1; i<len; i++)); do\n        if [[\
    \ ${list[i]} -gt $prev ]]; then\n            incr=1\n        elif [[ ${list[i]}\
    \ -lt $prev ]]; then\n            decr=1\n        fi\n        prev=${list[i]}\n\
    \    done\n    if [[ $incr -eq 1 && $decr -eq 0 ]]; then\n        echo \"true\"\
    \n    elif [[ $incr -eq 0 && $decr -eq 1 ]]; then\n        echo \"true\"\n   \
    \ else\n        echo \"false\"\n    fi", "    local list=$1\n    local prev=$(echo\
    \ $list | cut -d' ' -f1)\n    local increasing=true\n    for i in $list; do\n\
    \        if [[ $i -lt $prev ]]; then\n            increasing=false\n         \
    \   break\n        fi\n        prev=$i\n    done\n    if [[ $increasing == true\
    \ ]]; then\n        echo \"true\"\n    else\n        local decreasing=true\n \
    \       prev=$(echo $list | cut -d' ' -f1)\n        for i in $list; do\n     \
    \       if [[ $i -gt $prev ]]; then\n                decreasing=false\n      \
    \          break\n            fi\n            prev=$i\n        done\n        if\
    \ [[ $decreasing == true ]]; then\n            echo \"true\"\n        else\n \
    \           echo \"false\"\n        fi\n    fi", "    local -a list=($1)\n   \
    \ local -i i\n    local -i len=${#list[@]}\n    local -i incr=0\n    local -i\
    \ decr=0\n    for ((i=0; i<len-1; i++)); do\n        if ((list[i] < list[i+1]));\
    \ then\n            incr=1\n        elif ((list[i] > list[i+1])); then\n     \
    \       decr=1\n        fi\n    done\n    if ((incr && decr)); then\n        echo\
    \ \"false\"\n    else\n        echo \"true\"\n    fi", "    local -a list=($1)\n\
    \    local -a diffs\n    local i\n    for ((i=0; i<${#list[@]}-1; i++)); do\n\
    \        diffs[$i]=$((list[$i+1]-list[$i]))\n    done\n    local -a uniq_diffs=($(echo\
    \ \"${diffs[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n    if [[ ${#uniq_diffs[@]}\
    \ -eq 1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n  \
    \  fi", "    local list=\"$1\"\n    local increasing=\"true\"\n    local decreasing=\"\
    true\"\n    local prev=0\n    for i in $list; do\n        if [ $i -gt $prev ];\
    \ then\n            decreasing=\"false\"\n        elif [ $i -lt $prev ]; then\n\
    \            increasing=\"false\"\n        fi\n        prev=$i\n    done\n   \
    \ if [ \"$increasing\" == \"true\" ] || [ \"$decreasing\" == \"true\" ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local\
    \ list=\"$1\"\n    local prev=\n    local curr=\n    local incr=\n    local decr=\n\
    \    for curr in $list; do\n        if [[ -n $prev ]]; then\n            if [[\
    \ $curr -gt $prev ]]; then\n                incr=true\n            elif [[ $curr\
    \ -lt $prev ]]; then\n                decr=true\n            fi\n        fi\n\
    \        prev=$curr\n    done\n    if [[ -n $incr && -n $decr ]]; then\n     \
    \   echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local list=($1)\n\
    \    local direction=0\n    local last=${list[0]}\n    for i in \"${list[@]:1}\"\
    ; do\n        if [[ $i -gt $last ]]; then\n            if [[ $direction -eq -1\
    \ ]]; then\n                echo \"false\"\n                return\n         \
    \   fi\n            direction=1\n        elif [[ $i -lt $last ]]; then\n     \
    \       if [[ $direction -eq 1 ]]; then\n                echo \"false\"\n    \
    \            return\n            fi\n            direction=-1\n        fi\n  \
    \      last=$i\n    done\n    echo \"true\"", "    local list=\"$1\"\n    local\
    \ prev=$(echo \"$list\" | head -n 1)\n    local incr=true\n    local decr=true\n\
    \    for i in $list; do\n        if [[ $i -lt $prev ]]; then\n            incr=false\n\
    \        elif [[ $i -gt $prev ]]; then\n            decr=false\n        fi\n \
    \       prev=$i\n    done\n    if [[ $incr == true || $decr == true ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local\
    \ list=\"$1\"\n    local prev=$(echo \"$list\" | head -n 1)\n    local curr\n\
    \    local increasing=true\n    local decreasing=true\n    for curr in $list;\
    \ do\n        if (( curr < prev )); then\n            increasing=false\n     \
    \   elif (( curr > prev )); then\n            decreasing=false\n        fi\n \
    \       prev=$curr\n    done\n    if $increasing || $decreasing; then\n      \
    \  echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=\"\
    $1\"\n    local prev=0\n    local increasing=true\n    for i in $list; do\n  \
    \      if [ $prev -eq 0 ]; then\n            prev=$i\n            continue\n \
    \       fi\n        if [ $prev -gt $i ]; then\n            increasing=false\n\
    \        fi\n        if [ $increasing = false ] && [ $prev -lt $i ]; then\n  \
    \          echo \"false\"\n            return\n        fi\n        prev=$i\n \
    \   done\n    echo \"true\"", "    local list=\"$1\"\n    local first=$(echo \"\
    $list\" | head -n 1)\n    local last=$(echo \"$list\" | tail -n 1)\n    if [ \"\
    $first\" -lt \"$last\" ]; then\n        local op=\"-lt\"\n    else\n        local\
    \ op=\"-gt\"\n    fi\n    local prev=$first\n    for i in $list; do\n        if\
    \ [ \"$i\" $op \"$prev\" ]; then\n            prev=$i\n        else\n        \
    \    echo \"false\"\n            return\n        fi\n    done\n    echo \"true\"",
  "    local list=\"$1\"\n    local inc=0\n    local dec=0\n    local prev=0\n   \
    \ for i in $list; do\n        if [[ $i -gt $prev ]]; then\n            inc=1\n\
    \        elif [[ $i -lt $prev ]]; then\n            dec=1\n        fi\n      \
    \  if [[ $inc -eq 1 && $dec -eq 1 ]]; then\n            echo \"false\"\n     \
    \       return\n        fi\n        prev=$i\n    done\n    echo \"true\"", " \
    \   local list=$1\n    local prev=$(echo $list | cut -d ' ' -f 1)\n    local increasing=true\n\
    \    local decreasing=true\n    for i in $list; do\n        if (( $i > $prev ));\
    \ then\n            decreasing=false\n        elif (( $i < $prev )); then\n  \
    \          increasing=false\n        fi\n        prev=$i\n    done\n    if $increasing\
    \ || $decreasing; then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi", "    local list=\"$1\"\n    local prev=0\n    local curr=0\n    local\
    \ incr=0\n    local decr=0\n    for i in $list; do\n        curr=$i\n        if\
    \ [ $prev -gt $curr ]; then\n            decr=1\n        elif [ $prev -lt $curr\
    \ ]; then\n            incr=1\n        fi\n        prev=$curr\n    done\n    if\
    \ [ $incr -eq 1 -a $decr -eq 1 ]; then\n        echo \"false\"\n    else\n   \
    \     echo \"true\"\n    fi", "    local list=\"$1\"\n    local direction=\"$(echo\
    \ \"$list\" | awk '{print ($2 > $1) ? \"up\" : \"down\"}')\"\n    local prev=\"\
    $(echo \"$list\" | awk '{print $1}')\"\n    local curr\n    local is_monotonic=\"\
    true\"\n    shift\n    for curr in $@; do\n        if [[ \"$direction\" == \"\
    up\" ]]; then\n            if (( curr < prev )); then\n                is_monotonic=\"\
    false\"\n                break\n            fi\n        else\n            if ((\
    \ curr > prev )); then\n                is_monotonic=\"false\"\n             \
    \   break\n            fi\n        fi\n        prev=\"$curr\"\n    done\n    echo\
    \ \"$is_monotonic\"", "    local -a arr\n    arr=($1)\n    local -i i\n    local\
    \ -i len=${#arr[@]}\n    local -i incr=0\n    local -i decr=0\n    for ((i=0;\
    \ i<len-1; i++)); do\n        if (( arr[i] < arr[i+1] )); then\n            incr=1\n\
    \        elif (( arr[i] > arr[i+1] )); then\n            decr=1\n        fi\n\
    \    done\n    if (( incr && decr )); then\n        echo \"false\"\n    else\n\
    \        echo \"true\"\n    fi", "    local -a a=($1)\n    local -i i=0\n    local\
    \ -i n=${#a[@]}\n    local -i incr=0\n    local -i decr=0\n    local -i prev=${a[0]}\n\
    \    for ((i=1; i<n; i++)); do\n        if [[ ${a[i]} -lt $prev ]]; then\n   \
    \         decr=1\n        elif [[ ${a[i]} -gt $prev ]]; then\n            incr=1\n\
    \        fi\n        if [[ $incr -eq 1 && $decr -eq 1 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n        prev=${a[i]}\n    done\n\
    \    echo \"true\"", "    local -a ary=(\"$@\")\n    local -i i=0\n    local -i\
    \ len=${#ary[@]}\n    local -i incr=0\n    local -i decr=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i diff=0\n    local -i diff_prev=0\n\
    \    local -i diff_next=0\n    local -i diff_prev_next=0\n    local -i diff_prev_curr=0\n\
    \    local -i diff_curr_next=0\n    local -i diff_prev_next_curr=0\n    local\
    \ -i diff_prev_curr_next=0\n    local -i diff_curr_prev_next=0\n    local -i diff_prev_curr_next_prev=0\n\
    \    local -i diff_prev_curr_next_curr=0\n    local -i diff_prev_curr_next_next=0\n\
    \    local -i diff_prev_curr_next_prev_curr=0\n    local -i diff_prev_curr_next_curr_next=0\n\
    \    local -i diff_prev_curr_next_prev_next=0\n    local -i diff_prev_curr_next_prev_curr_next=0\n\
    \    local -i diff_prev_curr_next_prev_next_curr=0\n    local -i diff_prev_curr_next_prev_curr_next_prev=0\n\
    \    local -i diff_prev_curr_next_prev_curr_next_curr=0\n    local -i diff_prev_curr_next_prev_curr_next_next=0\n\
    \    local -i diff_prev_curr_next_prev_curr_next_prev_curr=0\n    local -i diff_prev_curr_next_prev_curr_next_curr_next=0\n\
    \    local -i diff_prev_curr_next_prev_curr_next_prev_next=0\n    local -i diff_prev_curr_next_prev_cur",
  "    local list=\"$1\"\n    local -i i=0\n    local -i j=0\n    local -i n=0\n \
    \   local -i d=0\n    local -i m=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n\
    \    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i k=0\n    local\
    \ -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n\
    \    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local\
    \ -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n\
    \    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local\
    \ -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0", "    local list=\"$1\"\n    local prev=$(echo \"\
    $list\" | head -n 1)\n    local increasing=\"true\"\n    local decreasing=\"true\"\
    \n    for i in $list; do\n        if [ $i -gt $prev ]; then\n            decreasing=\"\
    false\"\n        elif [ $i -lt $prev ]; then\n            increasing=\"false\"\
    \n        fi\n        prev=$i\n    done\n    if [ \"$increasing\" = \"true\" ]\
    \ || [ \"$decreasing\" = \"true\" ]; then\n        echo \"true\"\n    else\n \
    \       echo \"false\"\n    fi", "    local list=\"$1\"\n    local prev=$(echo\
    \ \"$list\" | head -n 1)\n    local increasing=true\n    local decreasing=true\n\
    \    for i in $list; do\n        if [ $i -lt $prev ]; then\n            increasing=false\n\
    \        elif [ $i -gt $prev ]; then\n            decreasing=false\n        fi\n\
    \        prev=$i\n    done\n    if $increasing || $decreasing; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n\
    \    local direction=\"$(echo \"$list\" | awk '{print ($2-$1)>0?\"up\":\"down\"\
    }')\"\n    local prev=\"$(echo \"$list\" | awk '{print $1}')\"\n    for x in $list;\
    \ do\n        if [ \"$direction\" == \"up\" ]; then\n            if [ \"$x\" -lt\
    \ \"$prev\" ]; then\n                echo \"false\"\n                return\n\
    \            fi\n        else\n            if [ \"$x\" -gt \"$prev\" ]; then\n\
    \                echo \"false\"\n                return\n            fi\n    \
    \    fi\n        prev=\"$x\"\n    done\n    echo \"true\"", "    local -a list=($1)\n\
    \    local -a diffs\n    local i\n    for ((i=0; i<${#list[@]}-1; i++)); do\n\
    \        diffs[$i]=$((list[$i+1]-list[$i]))\n    done\n    local -a uniq_diffs=($(printf\
    \ \"%s\\n\" \"${diffs[@]}\" | sort -u))\n    if [[ ${#uniq_diffs[@]} -eq 1 ]];\
    \ then\n        if [[ ${uniq_diffs[0]} -eq 0 ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    elif [[ ${#uniq_diffs[@]}\
    \ -eq 2 ]]; then\n        if [[ ${uniq_diffs[0]} -eq 0 ]]; then\n            echo\
    \ \"true\"\n        elif [[ ${uniq_diffs[0]} -gt 0 ]]; then\n            if [[\
    \ ${uniq_diffs[1]} -gt 0 ]]; then\n                echo \"true\"\n           \
    \ else\n                echo \"false\"\n            fi\n        else\n       \
    \     if [[ ${uniq_diffs[1]} -lt 0 ]]; then\n                echo \"true\"\n \
    \           else\n                echo \"false\"\n            fi\n        fi\n\
    \    else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n    local\
    \ inc=0\n    local dec=0\n    local prev=0\n    local curr=0\n    for i in $list;\
    \ do\n        if [ $i -lt $prev ]; then\n            dec=1\n        elif [ $i\
    \ -gt $prev ]; then\n            inc=1\n        fi\n        prev=$i\n    done\n\
    \    if [ $inc -eq 1 -a $dec -eq 1 ]; then\n        echo \"false\"\n    else\n\
    \        echo \"true\"\n    fi", "    local list=($1)\n    local len=${#list[@]}\n\
    \    local i=0\n    local inc=0\n    local dec=0\n    local prev=${list[0]}\n\
    \    for ((i=1; i<len; i++)); do\n        if [[ ${list[i]} -gt $prev ]]; then\n\
    \            inc=1\n        elif [[ ${list[i]} -lt $prev ]]; then\n          \
    \  dec=1\n        fi\n        prev=${list[i]}\n    done\n    if [[ $inc -eq 1\
    \ && $dec -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $inc -eq 0 && $dec\
    \ -eq 1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n  \
    \  fi", "    local -a list=($1)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i ret=0\n\n    if [ $len\
    \ -lt 2 ]; then\n        echo \"true\"\n        return 0\n    fi\n\n    prev=${list[0]}\n\
    \    curr=${list[1]}\n    diff=$((curr - prev))\n    if [ $diff -gt 0 ]; then\n\
    \        incr=1\n    elif [ $diff -lt 0 ]; then\n        decr=1\n    fi\n\n  \
    \  for ((i=1; i<len-1; i++)); do\n        prev=${list[i]}\n        next=${list[i+1]}\n\
    \        diff=$((next - prev))\n        if [ $diff -gt 0 ]; then\n           \
    \ if [ $decr -eq 1 ]; then\n                ret=1\n                break\n   \
    \         fi\n            incr=1\n        elif [ $diff -lt 0 ]; then\n       \
    \     if [ $incr -eq 1 ]; then\n                ret=1\n                break\n\
    \            fi\n            decr=1\n        fi\n    done\n\n    if [ $ret -eq\
    \ 0 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "    local -a list=($1)\n    local -i i=0\n    local -i len=${#list[@]}\n    local\
    \ -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    local -i curr=0\n\
    \    for ((i=1; i<len; i++)); do\n        curr=${list[i]}\n        if ((curr >\
    \ prev)); then\n            incr=1\n        elif ((curr < prev)); then\n     \
    \       decr=1\n        fi\n        prev=$curr\n    done\n    if ((incr && decr));\
    \ then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi", "  \
    \  local list=\"$1\"\n    local prev=0\n    local curr=0\n    local increasing=0\n\
    \    local decreasing=0\n    for i in $list; do\n        curr=$i\n        if [[\
    \ $curr -gt $prev ]]; then\n            increasing=1\n        elif [[ $curr -lt\
    \ $prev ]]; then\n            decreasing=1\n        fi\n        if [[ $increasing\
    \ -eq 1 && $decreasing -eq 1 ]]; then\n            echo \"false\"\n          \
    \  return\n        fi\n        prev=$curr\n    done\n    echo \"true\"", "   \
    \ local list=\"$1\"\n    local -a ary=($list)\n    local -i i=0\n    local -i\
    \ len=${#ary[@]}\n    local -i inc=0\n    local -i dec=0\n    local -i prev=${ary[0]}\n\
    \    local -i curr=0\n    local -i next=0\n    local -i ret=0\n\n    if [ $len\
    \ -eq 1 ]; then\n        echo \"true\"\n        return 0\n    fi\n\n    for ((i=1;\
    \ i<len; i++)); do\n        curr=${ary[$i]}\n        if [ $i -eq $((len-1)) ];\
    \ then\n            next=${ary[$i]}\n        else\n            next=${ary[$((i+1))]}\n\
    \        fi\n\n        if [ $curr -gt $prev ]; then\n            inc=1\n     \
    \   elif [ $curr -lt $prev ]; then\n            dec=1\n        fi\n\n        if\
    \ [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n            ret=1\n            break\n\
    \        fi\n\n        prev=$curr\n    done\n\n    if [ $ret -eq 1 ]; then\n \
    \       echo \"false\"\n    else\n        echo \"true\"\n    fi", "    local -a\
    \ list=($1)\n    local -i i=0\n    local -i len=${#list[@]}\n    local -i increasing=0\n\
    \    local -i decreasing=0\n    local -i diff=0\n    local -i prev=0\n    local\
    \ -i curr=0\n    local -i next=0\n    local -i first=0\n    local -i last=0\n\
    \    local -i mid=0\n    local -i mid_prev=0\n    local -i mid_next=0\n    local\
    \ -i mid_diff=0\n    local -i mid_prev_diff=0\n    local -i mid_next_diff=0\n\
    \    local -i mid_prev_diff_sign=0\n    local -i mid_next_diff_sign=0\n    local\
    \ -i mid_diff_sign=0\n    local -i mid_prev_diff_sign_equal=0\n    local -i mid_next_diff_sign_equal=0\n\
    \    local -i mid_diff_sign_equal=0\n    local -i mid_prev_diff_sign_equal_mid_next_diff_sign=0\n\
    \    local -i mid_prev_diff_sign_equal_mid_diff_sign=0\n    local -i mid_next_diff_sign_equal_mid_diff_sign=0\n\
    \    local -i mid_prev_diff_sign_equal_mid_next_diff_sign_equal_mid_diff_sign=0\n\
    \    local -i mid_prev_diff_sign_equal_mid_next_diff_sign_equal_mid_diff_sign_equal=0\n\
    \    local -i mid_prev_diff_sign_equal_mid_next_diff_sign_equal_mid_diff_sign_equal_1=0\n\
    \    local -i mid_prev_diff_sign_equal_mid_next_diff_sign_equal_mid_diff_sign_equal_0=0\n\
    \    local -i mid_prev_diff_sign_equal_mid_next_diff_sign_equal_mid_diff_sign_equal_1_or_0=0\n\
    \    local -i mid_prev_diff_sign_equal_mid_next_diff_sign", "    local -a arr\n\
    \    local -i i\n    local -i len\n    local -i inc\n    local -i dec\n    local\
    \ -i prev\n    local -i curr\n    arr=($1)\n    len=${#arr[@]}\n    if (( len\
    \ < 2 )); then\n        echo \"true\"\n        return\n    fi\n    inc=1\n   \
    \ dec=1\n    prev=${arr[0]}\n    for (( i=1; i<len; i++ )); do\n        curr=${arr[i]}\n\
    \        if (( curr > prev )); then\n            dec=0\n        elif (( curr <\
    \ prev )); then\n            inc=0\n        fi\n        prev=$curr\n    done\n\
    \    if (( inc || dec )); then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local list=\"$1\"\n    local prev=$(echo \"$list\"\
    \ | head -n 1)\n    local increasing=\"true\"\n    for i in $list; do\n      \
    \  if [[ $i -lt $prev ]]; then\n            increasing=\"false\"\n           \
    \ break\n        fi\n        prev=$i\n    done\n    if [[ $increasing == \"true\"\
    \ ]]; then\n        echo \"true\"\n    else\n        local decreasing=\"true\"\
    \n        local prev=$(echo \"$list\" | head -n 1)\n        for i in $list; do\n\
    \            if [[ $i -gt $prev ]]; then\n                decreasing=\"false\"\
    \n                break\n            fi\n            prev=$i\n        done\n \
    \       if [[ $decreasing == \"true\" ]]; then\n            echo \"true\"\n  \
    \      else\n            echo \"false\"\n        fi\n    fi", "    local -a list=($1)\n\
    \    local -a diffs\n    local -i i\n    local -i n=${#list[@]}\n\n    for ((i=0;\
    \ i<n-1; i++)); do\n        diffs[i]=$((list[i+1] - list[i]))\n    done\n\n  \
    \  if [[ ${diffs[@]} =~ ^([+-]?[0-9]+ )*[+-]?[0-9]+$ ]]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n  \
    \  local -i n=0\n    local -i prev=0\n    local -i curr=0\n    local -i incr=0\n\
    \    local -i decr=0\n    local -i first=0\n    local -i last=0\n    local -i\
    \ i=0\n    local -i j=0\n    local -i k=0\n    local -i m=0\n    local -i n=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n\
    \    local -i y=0\n    local -i z=0\n    local -i A=0\n    local -i B=0\n    local\
    \ -i C=0\n    local -i D=0\n    local -i E=0\n    local -i F=0\n    local -i G=0\n\
    \    local -i H=0\n    local -i I=0\n    local -i J=0\n    local -i K=0\n    local\
    \ -i L=0\n    local -i M=0\n    local -i N=0\n    local -i O=0\n    local -i P=0\n\
    \    local -i Q=0\n    local -i R=0\n    local -i S=0\n    local -i T=0\n    local\
    \ -i U=0\n    local -i V=0\n    local -i W=0\n    local -i X=0\n    local -i Y=0\n\
    \    local -i Z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local\
    \ -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local", "    local -a list=($1)\n    local -i i=0\n  \
    \  local -i len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local\
    \ -i ret=0\n    local -i prev=0\n    local -i curr=0\n\n    if [[ $len -lt 2 ]];\
    \ then\n        echo \"true\"\n        return 0\n    fi\n\n    for i in $(seq\
    \ 1 $len); do\n        prev=${list[$i-1]}\n        curr=${list[$i]}\n        if\
    \ [[ $prev -lt $curr ]]; then\n            incr=1\n        elif [[ $prev -gt $curr\
    \ ]]; then\n            decr=1\n        fi\n        if [[ $incr -eq 1 && $decr\
    \ -eq 1 ]]; then\n            ret=1\n            break\n        fi\n    done\n\
    \n    if [[ $ret -eq 0 ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "  local list=\"$1\"\n  local prev=0\n  local curr=0\n \
    \ local increasing=true\n  local decreasing=true\n  for i in $list; do\n    curr=$i\n\
    \    if [ $prev -gt $curr ]; then\n      increasing=false\n    elif [ $prev -lt\
    \ $curr ]; then\n      decreasing=false\n    fi\n    prev=$curr\n  done\n  if\
    \ [ $increasing = true ] || [ $decreasing = true ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi", "    local list=\"$1\"\n    local last_item=\"\
    \"\n    local is_increasing=\"true\"\n    local is_decreasing=\"true\"\n    for\
    \ item in $list; do\n        if [[ -n \"$last_item\" ]]; then\n            if\
    \ [[ \"$item\" -gt \"$last_item\" ]]; then\n                is_decreasing=\"false\"\
    \n            elif [[ \"$item\" -lt \"$last_item\" ]]; then\n                is_increasing=\"\
    false\"\n            fi\n        fi\n        last_item=\"$item\"\n    done\n \
    \   if [[ \"$is_increasing\" == \"true\" ]] || [[ \"$is_decreasing\" == \"true\"\
    \ ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "    local -a list=($1)\n    local -i i=0\n    local -i len=${#list[@]}\n    local\
    \ -i increasing=1\n    local -i decreasing=1\n    local -i result=0\n    local\
    \ -i prev=${list[0]}\n    local -i curr=0\n\n    if [[ $len -lt 2 ]]; then\n \
    \       echo \"true\"\n        return 0\n    fi\n\n    for ((i=1; i<len; i++));\
    \ do\n        curr=${list[$i]}\n        if [[ $curr -gt $prev ]]; then\n     \
    \       decreasing=0\n        elif [[ $curr -lt $prev ]]; then\n            increasing=0\n\
    \        fi\n        prev=$curr\n    done\n\n    if [[ $increasing -eq 1 || $decreasing\
    \ -eq 1 ]]; then\n        result=1\n    fi\n\n    if [[ $result -eq 1 ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "  local list=\"\
    $1\"\n  local prev=$(echo \"$list\" | head -n 1)\n  local increasing=true\n  local\
    \ decreasing=true\n  for i in $list; do\n    if [[ $i -lt $prev ]]; then\n   \
    \   increasing=false\n    elif [[ $i -gt $prev ]]; then\n      decreasing=false\n\
    \    fi\n    prev=$i\n  done\n  if [[ $increasing == true || $decreasing == true\
    \ ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi", "    local -a\
    \ list=($1)\n    local -i i=0\n    local -i n=${#list[@]}\n    local -i incr=0\n\
    \    local -i decr=0\n    local -i prev=${list[0]}\n    for ((i=1; i<n; i++));\
    \ do\n        if ((prev < ${list[i]})); then\n            incr=1\n        elif\
    \ ((prev > ${list[i]})); then\n            decr=1\n        fi\n        prev=${list[i]}\n\
    \    done\n    if ((incr && decr)); then\n        echo \"false\"\n    else\n \
    \       echo \"true\"\n    fi", "    local list=\"$1\"\n    local inc=0\n    local\
    \ dec=0\n    local prev=0\n    local curr=0\n    for i in $list; do\n        if\
    \ [ $i -lt $prev ]; then\n            dec=1\n        elif [ $i -gt $prev ]; then\n\
    \            inc=1\n        fi\n        prev=$i\n    done\n    [ $inc -eq 1 -a\
    \ $dec -eq 0 ] && echo \"true\" || echo \"false\"", "    local list=\"$1\"\n \
    \   local -a arr=($list)\n    local -a diffs\n    local i\n    local j\n    local\
    \ k\n    local len=${#arr[@]}\n    local diff\n    local prev_diff\n    local\
    \ increasing=true\n    local decreasing=true\n\n    for ((i=0; i<len-1; i++));\
    \ do\n        diffs[$i]=$(( arr[$i+1] - arr[$i] ))\n    done\n\n    for ((i=0;\
    \ i<len-2; i++)); do\n        diff=${diffs[$i]}\n        prev_diff=${diffs[$((i-1))]}\n\
    \        if (( diff > 0 )); then\n            if (( prev_diff < 0 )); then\n \
    \               increasing=false\n            fi\n        elif (( diff < 0 ));\
    \ then\n            if (( prev_diff > 0 )); then\n                decreasing=false\n\
    \            fi\n        fi\n    done\n\n    if $increasing || $decreasing; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local\
    \ list=\"$1\"\n    local prev=$(echo \"$list\" | head -n 1)\n    local increasing=\"\
    true\"\n    local decreasing=\"true\"\n    for i in $list; do\n        if [ \"\
    $i\" -gt \"$prev\" ]; then\n            decreasing=\"false\"\n        elif [ \"\
    $i\" -lt \"$prev\" ]; then\n            increasing=\"false\"\n        fi\n   \
    \     prev=\"$i\"\n    done\n    if [ \"$increasing\" = \"true\" ] || [ \"$decreasing\"\
    \ = \"true\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi", "    local list=\"$1\"\n    local increasing=true\n    local decreasing=true\n\
    \    local prev=0\n    for i in $list; do\n        if (( i < prev )); then\n \
    \           increasing=false\n        fi\n        if (( i > prev )); then\n  \
    \          decreasing=false\n        fi\n        prev=$i\n    done\n    if $increasing\
    \ || $decreasing; then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi", "    local -a arr\n    arr=($1)\n    local i\n    local len=${#arr[@]}\n\
    \    local incr=0\n    local decr=0\n    local prev=${arr[0]}\n    for ((i=1;\
    \ i<len; i++)); do\n        if [[ ${arr[i]} -gt $prev ]]; then\n            incr=1\n\
    \        elif [[ ${arr[i]} -lt $prev ]]; then\n            decr=1\n        fi\n\
    \        prev=${arr[i]}\n    done\n    if [[ $incr -eq 1 && $decr -eq 0 ]]; then\n\
    \        echo \"true\"\n    elif [[ $incr -eq 0 && $decr -eq 1 ]]; then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local -a arr\n\
    \    local -i i\n    local -i len\n    local -i incr\n    local -i prev\n    local\
    \ -i curr\n    local -i ret\n    local -i is_monotonic\n    local -i is_increasing\n\
    \    local -i is_decreasing\n    local -i is_equal\n\n    arr=($1)\n    len=${#arr[@]}\n\
    \    if [ $len -le 1 ]; then\n        echo \"true\"\n        return\n    fi\n\n\
    \    prev=${arr[0]}\n    is_increasing=1\n    is_decreasing=1\n    is_equal=1\n\
    \    for ((i=1; i<len; i++)); do\n        curr=${arr[i]}\n        if [ $curr -gt\
    \ $prev ]; then\n            is_decreasing=0\n        elif [ $curr -lt $prev ];\
    \ then\n            is_increasing=0\n        else\n            is_equal=1\n  \
    \      fi\n        prev=$curr\n    done\n\n    is_monotonic=$(($is_increasing\
    \ + $is_decreasing + $is_equal))\n    if [ $is_monotonic -eq 1 ]; then\n     \
    \   echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=\"\
    $1\"\n    local inc=0\n    local dec=0\n    local last=0\n    for i in $list;\
    \ do\n        if [ $i -gt $last ]; then\n            inc=1\n        fi\n     \
    \   if [ $i -lt $last ]; then\n            dec=1\n        fi\n        last=$i\n\
    \    done\n    if [ $inc -eq 1 -a $dec -eq 1 ]; then\n        echo \"false\"\n\
    \    else\n        echo \"true\"\n    fi", "    local -a list=($1)\n    local\
    \ -i i=0\n    local -i len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n\
    \    local -i val=0\n    local -i prev=0\n    local -i next=0\n    local -i ret=0\n\
    \n    if [ $len -lt 2 ]; then\n        echo \"true\"\n        return 0\n    fi\n\
    \n    prev=${list[0]}\n    for ((i=1; i<len; i++)); do\n        val=${list[i]}\n\
    \        if [ $i -lt $((len-1)) ]; then\n            next=${list[i+1]}\n     \
    \   fi\n        if [ $val -gt $prev ]; then\n            incr=1\n        elif\
    \ [ $val -lt $prev ]; then\n            decr=1\n        fi\n        if [ $incr\
    \ -eq 1 -a $decr -eq 1 ]; then\n            ret=1\n            break\n       \
    \ fi\n        prev=$val\n    done\n    if [ $ret -eq 0 ]; then\n        echo \"\
    true\"\n    else\n        echo \"false\"\n    fi", "    local list=($1)\n    local\
    \ i\n    local direction=0\n    for ((i=1; i<${#list[@]}; i++)); do\n        if\
    \ [[ ${list[$i]} -gt ${list[$i-1]} ]]; then\n            if [[ $direction -eq\
    \ -1 ]]; then\n                echo \"false\"\n                return\n      \
    \      fi\n            direction=1\n        elif [[ ${list[$i]} -lt ${list[$i-1]}\
    \ ]]; then\n            if [[ $direction -eq 1 ]]; then\n                echo\
    \ \"false\"\n                return\n            fi\n            direction=-1\n\
    \        fi\n    done\n    echo \"true\"", "    local -a list=($1)\n    local\
    \ -i i\n    local -i len=${#list[@]}\n    local -i increasing=1\n    local -i\
    \ decreasing=1\n    for ((i=1; i<len; i++)); do\n        if ((list[i] < list[i-1]));\
    \ then\n            increasing=0\n        elif ((list[i] > list[i-1])); then\n\
    \            decreasing=0\n        fi\n    done\n    if ((increasing || decreasing));\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", "  \
    \  local -a list=($1)\n    local -a diffs\n    local -i i\n    local -i n=${#list[@]}\n\
    \    local -i prev=${list[0]}\n    local -i curr\n    local -i sign=0\n    local\
    \ -i diff\n    local -i prev_sign=0\n    local -i curr_sign=0\n    local -i sign_change=0\n\
    \    local -i ret=0\n\n    for ((i=1; i<n; i++)); do\n        curr=${list[i]}\n\
    \        diff=$((curr - prev))\n        diffs[i]=$diff\n        prev=$curr\n \
    \   done\n\n    for ((i=1; i<n; i++)); do\n        curr_sign=$((diffs[i] / abs(diffs[i])))\n\
    \        if ((sign == 0)); then\n            sign=$curr_sign\n        else\n \
    \           if ((curr_sign != sign)); then\n                sign_change=1\n  \
    \              break\n            fi\n        fi\n    done\n\n    if ((sign_change\
    \ == 0)); then\n        ret=1\n    fi\n\n    echo $ret", "    local list=$1\n\
    \    local direction=0\n    local last=0\n    for i in $list; do\n        if [[\
    \ $direction == 0 ]]; then\n            if [[ $i -gt $last ]]; then\n        \
    \        direction=1\n            elif [[ $i -lt $last ]]; then\n            \
    \    direction=-1\n            fi\n        elif [[ $direction == 1 ]]; then\n\
    \            if [[ $i -lt $last ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        elif [[ $direction == -1 ]]; then\n\
    \            if [[ $i -gt $last ]]; then\n                echo \"false\"\n   \
    \             return\n            fi\n        fi\n        last=$i\n    done\n\
    \    echo \"true\"", "    local -a list=($1)\n    local -i i=0\n    local -i len=${#list[@]}\n\
    \    local -i incr=0\n    local -i decr=0\n    local -i prev=${list[0]}\n    local\
    \ -i curr=0\n    local -i next=0\n    local -i result=0\n\n    for ((i=1; i<len;\
    \ i++)); do\n        curr=${list[i]}\n        next=${list[i+1]}\n        if ((curr\
    \ > prev)); then\n            incr=1\n        elif ((curr < prev)); then\n   \
    \         decr=1\n        fi\n        prev=$curr\n    done\n\n    if ((incr ==\
    \ 1 && decr == 1)); then\n        result=0\n    else\n        result=1\n    fi\n\
    \n    echo $result", "    local list=\"$1\"\n    local prev=$(echo \"$list\" |\
    \ head -n 1)\n    local increasing=true\n    local decreasing=true\n    for i\
    \ in $list; do\n        if (( $i > $prev )); then\n            decreasing=false\n\
    \        elif (( $i < $prev )); then\n            increasing=false\n        fi\n\
    \        prev=$i\n    done\n    if $increasing || $decreasing; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local -a arr=($1)\n\
    \    local -a diffs\n    local i\n    for ((i=0; i<${#arr[@]}-1; i++)); do\n \
    \       diffs[i]=$((arr[i+1]-arr[i]))\n    done\n    local -a uniq_diffs=($(echo\
    \ \"${diffs[@]}\" | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n    if [[ ${#uniq_diffs[@]}\
    \ -eq 1 ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n  \
    \  fi", "    local list=$1\n    local direction=0\n    local last=0\n    local\
    \ current=0\n    local result=true\n    for i in $list; do\n        current=$i\n\
    \        if [ $direction -eq 0 ]; then\n            if [ $current -gt $last ];\
    \ then\n                direction=1\n            elif [ $current -lt $last ];\
    \ then\n                direction=-1\n            fi\n        elif [ $direction\
    \ -eq 1 ]; then\n            if [ $current -lt $last ]; then\n               \
    \ result=false\n                break\n            fi\n        elif [ $direction\
    \ -eq -1 ]; then\n            if [ $current -gt $last ]; then\n              \
    \  result=false\n                break\n            fi\n        fi\n        last=$current\n\
    \    done\n    echo $result", "    local -a list=($1)\n    local -a diffs\n  \
    \  local i\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((list[i+1]-list[i]))\n\
    \    done\n    if [[ ${diffs[@]} =~ ^([+-]?[0-9]+ )*[+-]?[0-9]+$ ]]; then\n  \
    \      echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=\"\
    $1\"\n    local inc=0\n    local dec=0\n    local prev=0\n    local curr=0\n \
    \   for i in $list; do\n        curr=$i\n        if [ $curr -gt $prev ]; then\n\
    \            inc=1\n        elif [ $curr -lt $prev ]; then\n            dec=1\n\
    \        fi\n        prev=$curr\n    done\n    if [ $inc -eq 1 -a $dec -eq 1 ];\
    \ then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi", "  \
    \  local list=\"$1\"\n    local prev=$(echo \"$list\" | head -n 1)\n    local\
    \ incr=true\n    local decr=true\n    for i in $list; do\n        if [[ $i -gt\
    \ $prev ]]; then\n            decr=false\n        elif [[ $i -lt $prev ]]; then\n\
    \            incr=false\n        fi\n        prev=$i\n    done\n    if [[ $incr\
    \ == true || $decr == true ]]; then\n        echo \"true\"\n    else\n       \
    \ echo \"false\"\n    fi", "    local -a list=($1)\n    local -i i=0\n    local\
    \ -i len=${#list[@]}\n    local -i incr=0\n    local -i decr=0\n    local -i ret=0\n\
    \    local -i prev=0\n    local -i curr=0\n\n    if [[ $len -eq 0 ]]; then\n \
    \       echo \"false\"\n        return\n    fi\n\n    prev=${list[0]}\n    for\
    \ ((i=1; i<len; i++)); do\n        curr=${list[i]}\n        if [[ $curr -gt $prev\
    \ ]]; then\n            incr=1\n        elif [[ $curr -lt $prev ]]; then\n   \
    \         decr=1\n        fi\n        if [[ $incr -eq 1 && $decr -eq 1 ]]; then\n\
    \            ret=1\n            break\n        fi\n        prev=$curr\n    done\n\
    \n    if [[ $ret -eq 0 ]]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi", "    local list=\"$1\"\n    local increasing=true\n    local\
    \ decreasing=true\n    local prev=0\n    local curr=0\n    for i in $list; do\n\
    \        curr=$i\n        if [ $curr -lt $prev ]; then\n            increasing=false\n\
    \        fi\n        if [ $curr -gt $prev ]; then\n            decreasing=false\n\
    \        fi\n        prev=$curr\n    done\n    if [ $increasing = true ] || [\
    \ $decreasing = true ]; then\n        echo true\n    else\n        echo false\n\
    \    fi", "    local list=($1)\n    local i=0\n    local j=1\n    local increasing=true\n\
    \    local decreasing=true\n    while [ $j -lt ${#list[@]} ]; do\n        if [\
    \ ${list[$i]} -gt ${list[$j]} ]; then\n            increasing=false\n        fi\n\
    \        if [ ${list[$i]} -lt ${list[$j]} ]; then\n            decreasing=false\n\
    \        fi\n        i=$((i+1))\n        j=$((j+1))\n    done\n    if [ $increasing\
    \ = true ] || [ $decreasing = true ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local list=\"$1\"\n    local prev=0\n \
    \   local curr=0\n    local increasing=0\n    local decreasing=0\n    for i in\
    \ $list; do\n        curr=$i\n        if [ $prev -eq 0 ]; then\n            prev=$curr\n\
    \            continue\n        fi\n        if [ $prev -lt $curr ]; then\n    \
    \        increasing=1\n        elif [ $prev -gt $curr ]; then\n            decreasing=1\n\
    \        fi\n        if [ $increasing -eq 1 ] && [ $decreasing -eq 1 ]; then\n\
    \            echo \"false\"\n            return\n        fi\n        prev=$curr\n\
    \    done\n    echo \"true\"", "    local -a list=($1)\n    local -a diffs\n \
    \   local i\n    for ((i=0; i<${#list[@]}-1; i++)); do\n        diffs[i]=$((list[i+1]-list[i]))\n\
    \    done\n    local -a unique_diffs=($(echo \"${diffs[@]}\" | tr ' ' '\\n' |\
    \ sort -u | tr '\\n' ' '))\n    if (( ${#unique_diffs[@]} == 1 )); then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=($1)\n\
    \    local i\n    local increasing=true\n    local decreasing=true\n    for ((i=0;\
    \ i<${#list[@]}-1; i++)); do\n        if ((list[i] > list[i+1])); then\n     \
    \       increasing=false\n        fi\n        if ((list[i] < list[i+1])); then\n\
    \            decreasing=false\n        fi\n    done\n    if $increasing || $decreasing;\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", "  \
    \  local -a list=($1)\n    local -a diffs\n    local -i i\n    local -i len=${#list[@]}\n\
    \    local -i diff\n    local -i prev_diff\n    local -i is_increasing=1\n   \
    \ local -i is_decreasing=1\n    local -i is_monotonic=0\n\n    for ((i=1; i<len;\
    \ i++)); do\n        diff=$((${list[$i]} - ${list[$((i-1))]}))\n        diffs+=($diff)\n\
    \    done\n\n    prev_diff=${diffs[0]}\n    for ((i=1; i<len; i++)); do\n    \
    \    diff=${diffs[$i]}\n        if ((diff < 0)); then\n            is_increasing=0\n\
    \        fi\n        if ((diff > 0)); then\n            is_decreasing=0\n    \
    \    fi\n        if ((diff * prev_diff < 0)); then\n            is_monotonic=0\n\
    \            break\n        fi\n        prev_diff=$diff\n    done\n\n    if ((is_increasing\
    \ || is_decreasing)); then\n        is_monotonic=1\n    fi\n\n    if ((is_monotonic));\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", "  \
    \  local list=\"$1\"\n    local direction=\"$(echo $list | awk '{print ($2>$1)?1:-1}')\"\
    \n    local prev=\"$(echo $list | awk '{print $1}')\"\n    local current\n   \
    \ for current in $list; do\n        if [[ \"$current\" -eq \"$prev\" ]]; then\n\
    \            continue\n        fi\n        if [[ \"$current\" -gt \"$prev\" ]]\
    \ && [[ \"$direction\" -lt 0 ]]; then\n            echo \"false\"\n          \
    \  return\n        elif [[ \"$current\" -lt \"$prev\" ]] && [[ \"$direction\"\
    \ -gt 0 ]]; then\n            echo \"false\"\n            return\n        fi\n\
    \        prev=\"$current\"\n    done\n    echo \"true\"", "    local -a arr=($1)\n\
    \    local -i i\n    local -i len=${#arr[@]}\n    local -i incr=0\n    local -i\
    \ decr=0\n    local -i curr=${arr[0]}\n    local -i next\n    for ((i=1; i<len;\
    \ i++)); do\n        next=${arr[i]}\n        if ((next > curr)); then\n      \
    \      ((incr++))\n        elif ((next < curr)); then\n            ((decr++))\n\
    \        fi\n        ((curr=next))\n    done\n    if ((incr == len-1 || decr ==\
    \ len-1)); then\n        echo \"true\"\n    else\n        echo \"false\"\n   \
    \ fi", "    local list=\"$1\"\n    local prev=\n    local curr=\n    local incr=\n\
    \    local decr=\n    for curr in $list; do\n        if [ -n \"$prev\" ]; then\n\
    \            if [ \"$curr\" -gt \"$prev\" ]; then\n                incr=true\n\
    \            elif [ \"$curr\" -lt \"$prev\" ]; then\n                decr=true\n\
    \            fi\n        fi\n        prev=$curr\n    done\n    if [ -n \"$incr\"\
    \ ] && [ -n \"$decr\" ]; then\n        echo \"false\"\n    else\n        echo\
    \ \"true\"\n    fi", "    local list=($1)\n    local direction=0\n    local last=${list[0]}\n\
    \    for i in ${list[@]:1}; do\n        if [[ $i -gt $last ]]; then\n        \
    \    if [[ $direction -eq -1 ]]; then\n                echo \"false\"\n      \
    \          return\n            fi\n            direction=1\n        elif [[ $i\
    \ -lt $last ]]; then\n            if [[ $direction -eq 1 ]]; then\n          \
    \      echo \"false\"\n                return\n            fi\n            direction=-1\n\
    \        fi\n        last=$i\n    done\n    echo \"true\"", "    local list=\"\
    $1\"\n    local prev=$(echo \"$list\" | head -n 1)\n    local increasing=\"true\"\
    \n    local decreasing=\"true\"\n    for i in $list; do\n        if [ \"$i\" -gt\
    \ \"$prev\" ]; then\n            decreasing=\"false\"\n        elif [ \"$i\" -lt\
    \ \"$prev\" ]; then\n            increasing=\"false\"\n        fi\n        prev=$i\n\
    \    done\n    if [ \"$increasing\" = \"true\" ] || [ \"$decreasing\" = \"true\"\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", " \
    \   local -a a=($1)\n    local -a b=($1)\n    local -a c=($1)\n    local -a d=($1)\n\
    \    local -a e=($1)\n    local -a f=($1)\n    local -a g=($1)\n    local -a h=($1)\n\
    \    local -a i=($1)\n    local -a j=($1)\n    local -a k=($1)\n    local -a l=($1)\n\
    \    local -a m=($1)\n    local -a n=($1)\n    local -a o=($1)\n    local -a p=($1)\n\
    \    local -a q=($1)\n    local -a r=($1)\n    local -a s=($1)\n    local -a t=($1)\n\
    \    local -a u=($1)\n    local -a v=($1)\n    local -a w=($1)\n    local -a x=($1)\n\
    \    local -a y=($1)\n    local -a z=($1)\n    local -a aa=($1)\n    local -a\
    \ ab=($1)\n    local -a ac=($1)\n    local -a ad=($1)\n    local -a ae=($1)\n\
    \    local -a af=($1)\n    local -a ag=($1)\n    local -a ah=($1)\n    local -a\
    \ ai=($1)\n    local -a aj=($1)\n    local -a ak=($1)\n    local -a al=($1)\n\
    \    local -a am=($1)\n    local -a an=($1)\n    local -a ao=($1)\n    local -a\
    \ ap=($1)\n    local -a aq=($1)\n    local -a ar=($1)\n    local -a as=($1)\n\
    \    local -a at=($1)\n    local -a au=($1)\n    local -a av=($1)\n    local -a\
    \ aw=($1)\n    local -a ax=($1)\n    local -a ay", "    local -a list=($1)\n \
    \   local -i n=${#list[@]}\n    local -i i=0\n    local -i increasing=1\n    local\
    \ -i decreasing=1\n    local -i first=${list[0]}\n    local -i second=${list[1]}\n\
    \    if (( first < second )); then\n        increasing=0\n    elif (( first >\
    \ second )); then\n        decreasing=0\n    fi\n    for (( i=1; i<n-1; i++ ));\
    \ do\n        first=${list[i]}\n        second=${list[i+1]}\n        if (( increasing\
    \ && first > second )); then\n            increasing=0\n        elif (( decreasing\
    \ && first < second )); then\n            decreasing=0\n        fi\n    done\n\
    \    if (( increasing || decreasing )); then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local -a list=($1)\n    local -i i=0\n\
    \    local -i n=${#list[@]}\n    local -i increasing=0\n    local -i decreasing=0\n\
    \    local -i equal=0\n    local -i result=0\n    local -i prev=0\n    local -i\
    \ curr=0\n    local -i next=0\n\n    if [ $n -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n\n    prev=${list[0]}\n    curr=${list[1]}\n    next=${list[2]}\n\
    \n    if [ $n -eq 1 ]; then\n        echo \"true\"\n        return\n    fi\n\n\
    \    if [ $n -eq 2 ]; then\n        if [ $prev -eq $curr ]; then\n           \
    \ echo \"true\"\n            return\n        fi\n        if [ $prev -lt $curr\
    \ ]; then\n            echo \"true\"\n            return\n        fi\n       \
    \ if [ $prev -gt $curr ]; then\n            echo \"true\"\n            return\n\
    \        fi\n    fi\n\n    if [ $prev -lt $curr ]; then\n        increasing=1\n\
    \    fi\n    if [ $prev -gt $curr ]; then\n        decreasing=1\n    fi\n    if\
    \ [ $prev -eq $curr ]; then\n        equal=1\n    fi\n\n    for ((i=2; i<$n; i++));\
    \ do\n        prev=$curr\n        curr=$next\n        next=${list[$i]}\n     \
    \   if [ $prev -lt $curr ]; then\n            increasing=1\n        fi\n     \
    \   if [ $prev -gt $curr ]; then\n            decreasing=1\n        fi\n     \
    \   if [ $prev -eq $curr ]; then\n            equal=1\n        fi\n    done\n\n\
    \    if [ $increasing -eq 1 ] && [ $decreasing -eq 1 ]; then\n        result=0\n\
    \    fi\n    if [ $increasing -eq 1 ] && [ $decreasing -eq 0 ]; then\n       \
    \ result=1\n    fi\n    if [ $increasing -eq 0 ] && [ $decreasing -eq 1 ]; then\n\
    \        result=1\n    fi\n    if [ $increasing", "    local -a list=($1)\n  \
    \  local -a diffs\n    local -i i\n    local -i n=${#list[@]}\n    local -i diff\n\
    \    local -i prev_diff\n    local -i is_monotonic=1\n    for ((i=1; i<n; i++));\
    \ do\n        diffs[i]=$((list[i] - list[i-1]))\n    done\n    prev_diff=${diffs[1]}\n\
    \    for ((i=2; i<n; i++)); do\n        diff=${diffs[i]}\n        if ((diff *\
    \ prev_diff < 0)); then\n            is_monotonic=0\n            break\n     \
    \   fi\n        prev_diff=$diff\n    done\n    echo $is_monotonic", "    local\
    \ list=\"$1\"\n    local -a arr=()\n    local -i i=0\n    local -i len=0\n   \
    \ local -i inc=0\n    local -i dec=0\n    local -i prev=0\n    local -i curr=0\n\
    \    local -i next=0\n    local -i diff=0\n    local -i diff_prev=0\n    local\
    \ -i diff_next=0\n    local -i diff_prev_next=0\n    local -i diff_next_prev=0\n\
    \    local -i diff_prev_curr=0\n    local -i diff_curr_prev=0\n    local -i diff_next_curr=0\n\
    \    local -i diff_curr_next=0\n    local -i diff_prev_next_curr=0\n    local\
    \ -i diff_curr_prev_next=0\n    local -i diff_prev_curr_next=0\n    local -i diff_curr_next_prev=0\n\
    \    local -i diff_next_prev_curr=0\n    local -i diff_next_curr_prev=0\n    local\
    \ -i diff_curr_prev_next_curr=0\n    local -i diff_curr_next_prev_curr=0\n   \
    \ local -i diff_curr_prev_curr_next=0\n    local -i diff_curr_next_curr_prev=0\n\
    \    local -i diff_prev_curr_curr_next=0\n    local -i diff_prev_curr_next_curr=0\n\
    \    local -i diff_prev_curr_curr_next_curr=0\n    local -i diff_curr_prev_curr_next_curr=0\n\
    \    local -i diff_curr_prev_curr_next_curr_prev=0\n    local -i diff_curr_prev_curr_next_curr_next=0\n\
    \    local -i diff_curr_prev_curr_next_curr_prev_curr=0\n    local -i diff_curr_prev_curr_next_curr_next_cur",
  "    local list=($1)\n    local direction=0\n    local last=${list[0]}\n    for\
    \ i in ${list[@]:1}; do\n        if [[ $i -gt $last ]]; then\n            if [[\
    \ $direction -eq -1 ]]; then\n                echo \"false\"\n               \
    \ return\n            fi\n            direction=1\n        elif [[ $i -lt $last\
    \ ]]; then\n            if [[ $direction -eq 1 ]]; then\n                echo\
    \ \"false\"\n                return\n            fi\n            direction=-1\n\
    \        fi\n        last=$i\n    done\n    echo \"true\"", "    local -a list=($1)\n\
    \    local -a diffs\n    local -i i\n    local -i n=${#list[@]}\n    local -i\
    \ incr=0\n    local -i decr=0\n    local -i diff\n    local -i prev_diff=0\n \
    \   local -i prev_diff_sign=0\n    local -i diff_sign=0\n    local -i diff_sign_changed=0\n\
    \    local -i diff_sign_changed_prev=0\n    local -i diff_sign_changed_prev_prev=0\n\
    \    local -i diff_sign_changed_prev_prev_prev=0\n    local -i diff_sign_changed_prev_prev_prev_prev=0\n\
    \    local -i diff_sign_changed_prev_prev_prev_prev_prev=0\n    local -i diff_sign_changed_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i diff_sign_changed_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i diff_sign_changed_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i\
    \ diff_sign_changed_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i diff_sign_changed_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n \
    \   local -i diff_sign_changed_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i diff_sign_changed_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i diff_sign_changed_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i diff_sign_changed_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i diff_sign_changed_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
  "    local list=\"$1\"\n    local -a array=($list)\n    local -i len=${#array[@]}\n\
    \    local -i i\n    local -i diff\n    local -i prev_diff\n    local -i is_increasing\n\
    \    local -i is_decreasing\n    local -i is_monotonic\n\n    if [[ $len -lt 2\
    \ ]]; then\n        echo \"true\"\n        return\n    fi\n\n    prev_diff=${array[1]}-${array[0]}\n\
    \    is_increasing=0\n    is_decreasing=0\n    for ((i=1; i<len-1; i++)); do\n\
    \        diff=${array[i+1]}-${array[i]}\n        if [[ $diff -gt 0 ]]; then\n\
    \            is_increasing=1\n        elif [[ $diff -lt 0 ]]; then\n         \
    \   is_decreasing=1\n        fi\n        if [[ $prev_diff -gt 0 && $diff -lt 0\
    \ ]]; then\n            is_monotonic=0\n            break\n        elif [[ $prev_diff\
    \ -lt 0 && $diff -gt 0 ]]; then\n            is_monotonic=0\n            break\n\
    \        fi\n        prev_diff=$diff\n    done\n\n    if [[ $is_increasing -eq\
    \ 1 && $is_decreasing -eq 1 ]]; then\n        is_monotonic=0\n    else\n     \
    \   is_monotonic=1\n    fi\n\n    if [[ $is_monotonic -eq 1 ]]; then\n       \
    \ echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=\"\
    $1\"\n    local -i n=0\n    local -i prev=0\n    local -i incr=0\n    local -i\
    \ decr=0\n    for i in $list; do\n        if (( n == 0 )); then\n            prev=$i\n\
    \        else\n            if (( i > prev )); then\n                (( incr++\
    \ ))\n            elif (( i < prev )); then\n                (( decr++ ))\n  \
    \          fi\n            prev=$i\n        fi\n        (( n++ ))\n    done\n\
    \    (( incr == 0 || decr == 0 )) && echo \"true\" || echo \"false\"", "    local\
    \ list=\"$1\"\n    local direction=\"$(echo \"$list\" | awk '{if ($1 < $2) {print\
    \ \"up\"} else {print \"down\"}}')\"\n    local prev=\"$(echo \"$list\" | awk\
    \ '{print $1}')\"\n    local curr=\"\"\n    for curr in $list; do\n        if\
    \ [[ \"$direction\" == \"up\" ]]; then\n            if [[ \"$curr\" -lt \"$prev\"\
    \ ]]; then\n                echo \"false\"\n                return\n         \
    \   fi\n        else\n            if [[ \"$curr\" -gt \"$prev\" ]]; then\n   \
    \             echo \"false\"\n                return\n            fi\n       \
    \ fi\n        prev=\"$curr\"\n    done\n    echo \"true\"", "    local -a a=($1)\n\
    \    local -a b=($1)\n    local -a c=($1)\n    local -a d=($1)\n    local -a e=($1)\n\
    \    local -a f=($1)\n    local -a g=($1)\n    local -a h=($1)\n    local -a i=($1)\n\
    \    local -a j=($1)\n    local -a k=($1)\n    local -a l=($1)\n    local -a m=($1)\n\
    \    local -a n=($1)\n    local -a o=($1)\n    local -a p=($1)\n    local -a q=($1)\n\
    \    local -a r=($1)\n    local -a s=($1)\n    local -a t=($1)\n    local -a u=($1)\n\
    \    local -a v=($1)\n    local -a w=($1)\n    local -a x=($1)\n    local -a y=($1)\n\
    \    local -a z=($1)\n    local -a aa=($1)\n    local -a ab=($1)\n    local -a\
    \ ac=($1)\n    local -a ad=($1)\n    local -a ae=($1)\n    local -a af=($1)\n\
    \    local -a ag=($1)\n    local -a ah=($1)\n    local -a ai=($1)\n    local -a\
    \ aj=($1)\n    local -a ak=($1)\n    local -a al=($1)\n    local -a am=($1)\n\
    \    local -a an=($1)\n    local -a ao=($1)\n    local -a ap=($1)\n    local -a\
    \ aq=($1)\n    local -a ar=($1)\n    local -a as=($1)\n    local -a at=($1)\n\
    \    local -a au=($1)\n    local -a av=($1)\n    local -a aw=($1)\n    local -a\
    \ ax=($1)\n    local -a ay", "    local -a list=($1)\n    local -a diffs\n   \
    \ local -i i\n    local -i n=${#list[@]}\n    local -i diff\n    local -i prev_diff\n\
    \    local -i is_monotonic=1\n    local -i is_increasing=1\n    local -i is_decreasing=1\n\
    \n    if ((n < 2)); then\n        echo \"true\"\n        return 0\n    fi\n\n\
    \    for ((i=1; i<n; i++)); do\n        diff=$((list[i] - list[i-1]))\n      \
    \  diffs+=($diff)\n    done\n\n    prev_diff=${diffs[0]}\n    for ((i=1; i<n-1;\
    \ i++)); do\n        diff=${diffs[i]}\n        if ((diff * prev_diff < 0)); then\n\
    \            is_monotonic=0\n            break\n        fi\n        prev_diff=$diff\n\
    \    done\n\n    if ((is_monotonic)); then\n        if ((diffs[0] > 0)); then\n\
    \            for ((i=1; i<n-1; i++)); do\n                if ((diffs[i] < 0));\
    \ then\n                    is_increasing=0\n                    break\n     \
    \           fi\n            done\n        else\n            for ((i=1; i<n-1;\
    \ i++)); do\n                if ((diffs[i] > 0)); then\n                    is_decreasing=0\n\
    \                    break\n                fi\n            done\n        fi\n\
    \    fi\n\n    if ((is_monotonic && is_increasing)); then\n        echo \"true\"\
    \n    elif ((is_monotonic && is_decreasing)); then\n        echo \"true\"\n  \
    \  else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n    local prev=$(echo\
    \ \"$list\" | head -n 1)\n    local increasing=true\n    local decreasing=true\n\
    \    for i in $list; do\n        if [[ $i -gt $prev ]]; then\n            decreasing=false\n\
    \        elif [[ $i -lt $prev ]]; then\n            increasing=false\n       \
    \ fi\n        prev=$i\n    done\n    if [[ $increasing == true || $decreasing\
    \ == true ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi", "    local list=\"$1\"\n    local -a arr=($list)\n    local -i n=${#arr[@]}\n\
    \    local -i i=0\n    local -i incr=0\n    local -i decr=0\n    local -i prev=${arr[0]}\n\
    \    local -i curr=0\n    local -i next=0\n    local -i result=0\n\n    for ((i=1;\
    \ i<n; i++)); do\n        curr=${arr[i]}\n        next=${arr[i+1]}\n        if\
    \ ((curr > prev)); then\n            incr=1\n        elif ((curr < prev)); then\n\
    \            decr=1\n        fi\n        if ((incr && decr)); then\n         \
    \   result=1\n            break\n        fi\n        prev=$curr\n    done\n  \
    \  if ((result)); then\n        echo \"false\"\n    else\n        echo \"true\"\
    \n    fi", "    local list=$1\n    local prev=$(echo $list | cut -d' ' -f1)\n\
    \    local increasing=true\n    local decreasing=true\n    for i in $list; do\n\
    \        if [[ $i -gt $prev ]]; then\n            decreasing=false\n        elif\
    \ [[ $i -lt $prev ]]; then\n            increasing=false\n        fi\n       \
    \ prev=$i\n    done\n    if [[ $increasing == true || $decreasing == true ]];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi", "  \
    \  local list=\"$1\"\n    local inc=0\n    local dec=0\n    local prev=0\n   \
    \ local curr=0\n    for i in $list; do\n        curr=$i\n        if [ $prev -lt\
    \ $curr ]; then\n            inc=1\n        elif [ $prev -gt $curr ]; then\n \
    \           dec=1\n        fi\n        if [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n\
    \            echo \"false\"\n            return\n        fi\n        prev=$curr\n\
    \    done\n    echo \"true\"", "    local list=\"$1\"\n    local first=true\n\
    \    local prev=0\n    local prev_op=\"<\"\n    for i in $list; do\n        if\
    \ $first; then\n            prev=$i\n            first=false\n            continue\n\
    \        fi\n        if [ $prev -eq $i ]; then\n            continue\n       \
    \ fi\n        if [ $prev -gt $i ]; then\n            if [ \"$prev_op\" = \"<\"\
    \ ]; then\n                prev_op=\">\"\n            else\n                echo\
    \ \"false\"\n                return\n            fi\n        else\n          \
    \  if [ \"$prev_op\" = \">\" ]; then\n                prev_op=\"<\"\n        \
    \    else\n                echo \"false\"\n                return\n          \
    \  fi\n        fi\n        prev=$i\n    done\n    echo \"true\"", "    local -a\
    \ arr=($1)\n    local -i i=0\n    local -i len=${#arr[@]}\n    local -i incr=0\n\
    \    local -i decr=0\n    local -i diff=0\n    local -i prev=0\n    local -i curr=0\n\
    \    local -i next=0\n    local -i ret=0\n\n    if [[ $len -lt 2 ]]; then\n  \
    \      echo \"true\"\n        return 0\n    fi\n\n    for ((i=0; i<len; i++));\
    \ do\n        curr=${arr[$i]}\n        if [[ $i -eq 0 ]]; then\n            prev=$curr\n\
    \            continue\n        fi\n        if [[ $i -eq $((len-1)) ]]; then\n\
    \            next=$curr\n            break\n        fi\n        next=${arr[$((i+1))]}\n\
    \        diff=$((next-curr))\n        if [[ $diff -gt 0 ]]; then\n           \
    \ incr=1\n        elif [[ $diff -lt 0 ]]; then\n            decr=1\n        fi\n\
    \        if [[ $incr -eq 1 && $decr -eq 1 ]]; then\n            ret=1\n      \
    \      break\n        fi\n        prev=$curr\n    done\n\n    if [[ $ret -eq 0\
    \ ]]; then\n        diff=$((next-prev))\n        if [[ $diff -gt 0 && $incr -eq\
    \ 0 ]]; then\n            ret=1\n        elif [[ $diff -lt 0 && $decr -eq 0 ]];\
    \ then\n            ret=1\n        fi\n    fi\n\n    if [[ $ret -eq 0 ]]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local\
    \ -a list=($1)\n    local -i i=0\n    local -i len=${#list[@]}\n    local -i incr=0\n\
    \    local -i decr=0\n    local -i curr=0\n    local -i prev=0\n    local -i next=0\n\
    \    local -i is_monotonic=0\n\n    if [ $len -lt 2 ]; then\n        echo \"true\"\
    \n        return 0\n    fi\n\n    prev=${list[0]}\n    for ((i=1; i<len; i++));\
    \ do\n        curr=${list[i]}\n        if [ $i -lt $((len-1)) ]; then\n      \
    \      next=${list[i+1]}\n        fi\n\n        if [ $curr -gt $prev ]; then\n\
    \            incr=1\n        elif [ $curr -lt $prev ]; then\n            decr=1\n\
    \        fi\n\n        if [ $incr -eq 1 ] && [ $decr -eq 1 ]; then\n         \
    \   is_monotonic=0\n            break\n        fi\n\n        if [ $incr -eq 1\
    \ ] && [ $curr -gt $next ]; then\n            is_monotonic=0\n            break\n\
    \        fi\n\n        if [ $decr -eq 1 ] && [ $curr -lt $next ]; then\n     \
    \       is_monotonic=0\n            break\n        fi\n\n        prev=$curr\n\
    \    done\n\n    if [ $is_monotonic -eq 0 ]; then\n        echo \"false\"\n  \
    \  else\n        echo \"true\"\n    fi", "    local -a list=( $1 )\n    local\
    \ -i i=0\n    local -i n=${#list[@]}\n    local -i increasing=1\n    local -i\
    \ decreasing=1\n    local -i result=0\n    local -i previous=${list[0]}\n    local\
    \ -i current=0\n\n    if [ $n -eq 1 ]; then\n        echo \"true\"\n        return\
    \ 0\n    fi\n\n    for (( i=1; i<n; i++ )); do\n        current=${list[$i]}\n\
    \        if [ $current -gt $previous ]; then\n            decreasing=0\n     \
    \   elif [ $current -lt $previous ]; then\n            increasing=0\n        fi\n\
    \        previous=$current\n    done\n\n    if [ $increasing -eq 1 ] || [ $decreasing\
    \ -eq 1 ]; then\n        result=1\n    fi\n\n    if [ $result -eq 1 ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local\
    \ list=$1\n    local increasing=true\n    local decreasing=true\n    local last=0\n\
    \    for i in $list; do\n        if (( $i > $last )); then\n            decreasing=false\n\
    \        elif (( $i < $last )); then\n            increasing=false\n        fi\n\
    \        last=$i\n    done\n    if $increasing || $decreasing; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n\
    \    local -i prev=0\n    local -i curr=0\n    local -i i=0\n    local -i len=0\n\
    \    local -i increasing=0\n    local -i decreasing=0\n    local -i monotonic=0\n\
    \    local -i first=0\n    local -i last=0\n    local -i first_gt_last=0\n   \
    \ local -i last_gt_first=0\n    local -i first_lt_last=0\n    local -i last_lt_first=0\n\
    \    local -i first_eq_last=0\n    local -i last_eq_first=0\n    local -i first_ne_last=0\n\
    \    local -i last_ne_first=0\n    local -i first_ge_last=0\n    local -i last_ge_first=0\n\
    \    local -i first_le_last=0\n    local -i last_le_first=0\n    local -i first_gt_last=0\n\
    \    local -i last_gt_first=0\n    local -i first_lt_last=0\n    local -i last_lt_first=0\n\
    \    local -i first_eq_last=0\n    local -i last_eq_first=0\n    local -i first_ne_last=0\n\
    \    local -i last_ne_first=0\n    local -i first_ge_last=0\n    local -i last_ge_first=0\n\
    \    local -i first_le_last=0\n    local -i last_le_first=0\n    local -i first_gt_last=0\n\
    \    local -i last_gt_first=0\n    local -i first_lt_last=0\n    local -i last_lt_first=0\n\
    \    local -i first_eq_last=0\n    local -i last_eq_first=0\n    local -i first_ne_last=0\n\
    \    local -i last_ne_first=0\n    local -i first_ge_last=0\n    local -i last_ge_first=0\n\
    \    local -i first_le_last=0\n    local -i last_le_", "    local -a list=($1)\n\
    \    local -a diffs\n    local -i i\n    local -i len=${#list[@]}\n    local -i\
    \ first_diff\n    local -i diff\n    local -i all_same=1\n    local -i all_increasing=1\n\
    \    local -i all_decreasing=1\n\n    for ((i=0; i<len-1; i++)); do\n        diffs[i]=$((list[i+1]\
    \ - list[i]))\n    done\n\n    first_diff=${diffs[0]}\n    for ((i=1; i<len-1;\
    \ i++)); do\n        diff=${diffs[i]}\n        if ((diff != first_diff)); then\n\
    \            all_same=0\n        fi\n        if ((diff < first_diff)); then\n\
    \            all_increasing=0\n        fi\n        if ((diff > first_diff)); then\n\
    \            all_decreasing=0\n        fi\n    done\n\n    if ((all_same || all_increasing\
    \ || all_decreasing)); then\n        echo \"true\"\n    else\n        echo \"\
    false\"\n    fi", "    local list=\"$1\"\n    local -a array=($list)\n    local\
    \ -i i=0\n    local -i len=${#array[@]}\n    local -i increasing=0\n    local\
    \ -i decreasing=0\n    local -i result=0\n    local -i prev=${array[0]}\n    local\
    \ -i curr=0\n\n    for ((i=1; i<len; i++)); do\n        curr=${array[i]}\n   \
    \     if ((curr > prev)); then\n            increasing=1\n        elif ((curr\
    \ < prev)); then\n            decreasing=1\n        fi\n        prev=$curr\n \
    \   done\n\n    if ((increasing && decreasing)); then\n        result=0\n    else\n\
    \        result=1\n    fi\n\n    echo $result", "    local list=($1)\n    local\
    \ i=0\n    local inc=0\n    local dec=0\n    local n=${#list[@]}\n    while ((\
    \ i < n - 1 )); do\n        if (( list[i] < list[i+1] )); then\n            ((\
    \ inc++ ))\n        elif (( list[i] > list[i+1] )); then\n            (( dec++\
    \ ))\n        fi\n        (( i++ ))\n    done\n    if (( inc == n - 1 || dec ==\
    \ n - 1 )); then\n        echo \"true\"\n    else\n        echo \"false\"\n  \
    \  fi", "    local -a list=($1)\n    local -a diffs\n    local -i i\n    local\
    \ -i len=${#list[@]}\n    local -i sign\n    local -i prev_sign\n    local -i\
    \ prev_diff\n\n    if (( len < 2 )); then\n        echo \"true\"\n        return\
    \ 0\n    fi\n\n    for (( i=1; i<len; i++ )); do\n        diffs[i-1]=$(( list[i]\
    \ - list[i-1] ))\n    done\n\n    prev_sign=$(( diffs[0] > 0 ? 1 : -1 ))\n   \
    \ prev_diff=${diffs[0]}\n\n    for (( i=1; i<len-1; i++ )); do\n        sign=$((\
    \ diffs[i] > 0 ? 1 : -1 ))\n        if (( prev_sign != sign )); then\n       \
    \     echo \"false\"\n            return 1\n        fi\n        if (( prev_diff\
    \ * diffs[i] < 0 )); then\n            echo \"false\"\n            return 1\n\
    \        fi\n        prev_sign=$sign\n        prev_diff=${diffs[i]}\n    done\n\
    \n    echo \"true\"\n    return 0", "    local list=$1\n    local prev=$(echo\
    \ $list | cut -d ' ' -f 1)\n    local incr=true\n    local decr=true\n    for\
    \ i in $list; do\n        if [[ $i -gt $prev ]]; then\n            decr=false\n\
    \        elif [[ $i -lt $prev ]]; then\n            incr=false\n        fi\n \
    \       prev=$i\n    done\n    if [[ $incr == true || $decr == true ]]; then\n\
    \        echo true\n    else\n        echo false\n    fi", "    local list=\"\
    $1\"\n    local inc=0\n    local dec=0\n    local prev=0\n    local curr=0\n \
    \   for i in $list; do\n        curr=$i\n        if [ $curr -gt $prev ]; then\n\
    \            inc=1\n        elif [ $curr -lt $prev ]; then\n            dec=1\n\
    \        fi\n        if [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n            echo\
    \ \"false\"\n            return\n        fi\n        prev=$curr\n    done\n  \
    \  echo \"true\"", "    local list=$1\n    local -i n=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i increasing=0\n    local -i decreasing=0\n \
    \   for n in $list; do\n        if ((n == prev)); then\n            continue\n\
    \        elif ((n > prev)); then\n            increasing=1\n            decreasing=0\n\
    \        elif ((n < prev)); then\n            increasing=0\n            decreasing=1\n\
    \        fi\n        prev=$n\n    done\n    if ((increasing == 1 || decreasing\
    \ == 1)); then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "    local -a list=($1)\n    local -i i=0\n    local -i len=${#list[@]}\n    local\
    \ -i incr=1\n    local -i decr=-1\n    local -i direction=0\n    local -i prev=0\n\
    \    local -i curr=0\n    local -i next=0\n    local -i result=0\n\n    if [ $len\
    \ -lt 2 ]; then\n        echo \"true\"\n        return\n    fi\n\n    prev=${list[0]}\n\
    \    curr=${list[1]}\n    if [ $prev -lt $curr ]; then\n        direction=$incr\n\
    \    elif [ $prev -gt $curr ]; then\n        direction=$decr\n    else\n     \
    \   echo \"true\"\n        return\n    fi\n\n    for ((i=1; i<$len-1; i++)); do\n\
    \        prev=${list[$i]}\n        next=${list[$i+1]}\n        if [ $prev -lt\
    \ $next ]; then\n            result=$incr\n        elif [ $prev -gt $next ]; then\n\
    \            result=$decr\n        else\n            result=0\n        fi\n  \
    \      if [ $result -ne $direction ]; then\n            echo \"false\"\n     \
    \       return\n        fi\n    done\n    echo \"true\"", "    local list=\"$1\"\
    \n    local inc=0\n    local dec=0\n    local prev=0\n    local curr=0\n    for\
    \ i in $list; do\n        curr=$i\n        if [ $prev -eq 0 ]; then\n        \
    \    prev=$curr\n            continue\n        fi\n        if [ $prev -lt $curr\
    \ ]; then\n            inc=1\n        elif [ $prev -gt $curr ]; then\n       \
    \     dec=1\n        fi\n        if [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n \
    \           echo \"false\"\n            return\n        fi\n        prev=$curr\n\
    \    done\n    echo \"true\"", "  local list=\"$1\"\n  local increasing=true\n\
    \  local decreasing=true\n  local prev=0\n  local curr=0\n  for i in $list; do\n\
    \    curr=$i\n    if [ $curr -lt $prev ]; then\n      increasing=false\n    fi\n\
    \    if [ $curr -gt $prev ]; then\n      decreasing=false\n    fi\n    prev=$curr\n\
    \  done\n  if [ $increasing = true ] || [ $decreasing = true ]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi", "    local list=($1)\n    local\
    \ i=0\n    local direction=0\n    local prev=${list[0]}\n    for i in $(seq 1\
    \ $((${#list[@]}-1))); do\n        if [[ $direction -eq 0 ]]; then\n         \
    \   if [[ ${list[$i]} -gt $prev ]]; then\n                direction=1\n      \
    \      elif [[ ${list[$i]} -lt $prev ]]; then\n                direction=-1\n\
    \            fi\n        elif [[ $direction -eq 1 ]]; then\n            if [[\
    \ ${list[$i]} -lt $prev ]]; then\n                echo \"false\"\n           \
    \     return\n            fi\n        elif [[ $direction -eq -1 ]]; then\n   \
    \         if [[ ${list[$i]} -gt $prev ]]; then\n                echo \"false\"\
    \n                return\n            fi\n        fi\n        prev=${list[$i]}\n\
    \    done\n    echo \"true\"", "    local -a arr\n    local -i i\n    local -i\
    \ len\n    local -i inc\n    local -i dec\n    local -i curr\n    local -i prev\n\
    \    local -i next\n    local -i is_monotonic\n    local -i is_increasing\n  \
    \  local -i is_decreasing\n    local -i is_constant\n    arr=($1)\n    len=${#arr[@]}\n\
    \    if [[ $len -lt 2 ]]; then\n        echo \"true\"\n        return\n    fi\n\
    \    inc=0\n    dec=0\n    is_increasing=1\n    is_decreasing=1\n    is_constant=1\n\
    \    prev=${arr[0]}\n    for ((i=1; i<len; i++)); do\n        curr=${arr[i]}\n\
    \        if [[ $curr -gt $prev ]]; then\n            inc=$((inc+1))\n        \
    \    is_decreasing=0\n        elif [[ $curr -lt $prev ]]; then\n            dec=$((dec+1))\n\
    \            is_increasing=0\n        else\n            is_increasing=0\n    \
    \        is_decreasing=0\n        fi\n        prev=$curr\n    done\n    is_monotonic=$((is_increasing+is_decreasing+is_constant))\n\
    \    if [[ $is_monotonic -eq 1 ]]; then\n        echo \"true\"\n    else\n   \
    \     echo \"false\"\n    fi", "    local list=($1)\n    if [ ${#list[@]} -lt\
    \ 2 ]; then\n        echo \"true\"\n        return\n    fi\n    local i=0\n  \
    \  local increasing=true\n    local decreasing=true\n    for (( i=0; i<${#list[@]}-1;\
    \ i++ )); do\n        if [ ${list[$i]} -gt ${list[$i+1]} ]; then\n           \
    \ increasing=false\n        fi\n        if [ ${list[$i]} -lt ${list[$i+1]} ];\
    \ then\n            decreasing=false\n        fi\n    done\n    if [ $increasing\
    \ = true ] || [ $decreasing = true ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local list=\"$1\"\n    local first=$(echo\
    \ \"$list\" | awk '{print $1}')\n    local last=$(echo \"$list\" | awk '{print\
    \ $NF}')\n    local increasing=$(echo \"$first < $last\" | bc)\n    local decreasing=$(echo\
    \ \"$first > $last\" | bc)\n    if [ \"$increasing\" -eq 1 ] || [ \"$decreasing\"\
    \ -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n   \
    \ fi", "    local list=\"$1\"\n    local inc=0\n    local dec=0\n    local prev=0\n\
    \    local curr=0\n    for i in $list; do\n        curr=$i\n        if [ $prev\
    \ -gt $curr ]; then\n            dec=1\n        elif [ $prev -lt $curr ]; then\n\
    \            inc=1\n        fi\n        if [ $inc -eq 1 ] && [ $dec -eq 1 ]; then\n\
    \            echo \"false\"\n            return\n        fi\n        prev=$curr\n\
    \    done\n    echo \"true\"", "    local list=\"$1\"\n    local first=$(echo\
    \ \"$list\" | awk '{print $1}')\n    local last=$(echo \"$list\" | awk '{print\
    \ $NF}')\n    local incr=$(echo \"$list\" | awk '{print $NF-$1}')\n    local decr=$(echo\
    \ \"$list\" | awk '{print $1-$NF}')\n    if [[ $incr -gt 0 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $decr -gt 0 ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local list=\"$1\"\n    local direction=\"\
    $(echo \"$list\" | awk '{print ($2>$1)?\"up\":\"down\"}')\"\n    local last=\"\
    $(echo \"$list\" | awk '{print $1}')\"\n    local monotonic=\"true\"\n    for\
    \ i in $list; do\n        if [ \"$direction\" == \"up\" ]; then\n            if\
    \ [ \"$i\" -lt \"$last\" ]; then\n                monotonic=\"false\"\n      \
    \          break\n            fi\n        else\n            if [ \"$i\" -gt \"\
    $last\" ]; then\n                monotonic=\"false\"\n                break\n\
    \            fi\n        fi\n        last=\"$i\"\n    done\n    echo \"$monotonic\"",
  "    local list=\"$1\"\n    local direction=\"$(echo \"$list\" | awk '{print ($1\
    \ < $2) ? \"up\" : \"down\"}')\"\n    local prev=\"$(echo \"$list\" | awk '{print\
    \ $1}')\"\n    local curr\n    for curr in $list; do\n        if [[ \"$direction\"\
    \ == \"up\" ]]; then\n            if [[ \"$curr\" -lt \"$prev\" ]]; then\n   \
    \             echo \"false\"\n                return\n            fi\n       \
    \ else\n            if [[ \"$curr\" -gt \"$prev\" ]]; then\n                echo\
    \ \"false\"\n                return\n            fi\n        fi\n        prev=\"\
    $curr\"\n    done\n    echo \"true\"", "    local list=\"$1\"\n    local inc=0\n\
    \    local dec=0\n    local prev=0\n    for i in $list; do\n        if [ $i -gt\
    \ $prev ]; then\n            inc=1\n        elif [ $i -lt $prev ]; then\n    \
    \        dec=1\n        fi\n        prev=$i\n    done\n    if [ $inc -eq 1 -a\
    \ $dec -eq 1 ]; then\n        echo \"false\"\n    else\n        echo \"true\"\n\
    \    fi", "    local list=\"$1\"\n    local inc=1\n    local dec=1\n    local\
    \ prev=0\n    local curr=0\n    for i in $list; do\n        curr=$i\n        if\
    \ [ $curr -lt $prev ]; then\n            inc=0\n        fi\n        if [ $curr\
    \ -gt $prev ]; then\n            dec=0\n        fi\n        prev=$curr\n    done\n\
    \    if [ $inc -eq 1 ] || [ $dec -eq 1 ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "  local list=\"$1\"\n  local -i i=0\n  local\
    \ -i n=$(echo \"$list\" | wc -w)\n  local -i prev=$(echo \"$list\" | cut -d '\
    \ ' -f 1)\n  local -i curr\n  local -i increasing=1\n  local -i decreasing=1\n\
    \  for ((i=2; i<=n; i++)); do\n    curr=$(echo \"$list\" | cut -d ' ' -f $i)\n\
    \    if ((prev > curr)); then\n      increasing=0\n    elif ((prev < curr)); then\n\
    \      decreasing=0\n    fi\n    prev=$curr\n  done\n  if ((increasing || decreasing));\
    \ then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi", "    local list=($1)\n\
    \    local len=${#list[@]}\n    local i=0\n    local j=1\n    local increasing=true\n\
    \    local decreasing=true\n    while [ $j -lt $len ]; do\n        if [ ${list[$i]}\
    \ -gt ${list[$j]} ]; then\n            increasing=false\n        fi\n        if\
    \ [ ${list[$i]} -lt ${list[$j]} ]; then\n            decreasing=false\n      \
    \  fi\n        i=$((i+1))\n        j=$((j+1))\n    done\n    if [ $increasing\
    \ = true ] || [ $decreasing = true ]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    local -a list=($1)\n    local -i len=${#list[@]}\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -", " \
    \   local list=($1)\n    local i=0\n    local len=${#list[@]}\n    local prev=${list[0]}\n\
    \    local increasing=true\n    local decreasing=true\n    while [ $i -lt $len\
    \ ]; do\n        if [ $i -gt 0 ]; then\n            if [ $prev -lt ${list[$i]}\
    \ ]; then\n                decreasing=false\n            elif [ $prev -gt ${list[$i]}\
    \ ]; then\n                increasing=false\n            fi\n        fi\n    \
    \    prev=${list[$i]}\n        i=$((i+1))\n    done\n    if [ $increasing = true\
    \ ] || [ $decreasing = true ]; then\n        echo \"true\"\n    else\n       \
    \ echo \"false\"\n    fi", "    local -a list=($1)\n    local -i i=0\n    local\
    \ -i n=${#list[@]}\n    local -i direction=0\n    local -i prev=0\n    local -i\
    \ curr=0\n    local -i next=0\n    local -i result=0\n    for ((i=0; i<n; i++));\
    \ do\n        curr=${list[$i]}\n        if ((i>0)); then\n            prev=${list[$((i-1))]}\n\
    \            if ((i<n-1)); then\n                next=${list[$((i+1))]}\n    \
    \            if ((direction==0)); then\n                    if ((prev<curr));\
    \ then\n                        direction=1\n                    elif ((prev>curr));\
    \ then\n                        direction=-1\n                    else\n     \
    \                   result=1\n                        break\n                \
    \    fi\n                else\n                    if ((direction==1 && curr>next));\
    \ then\n                        result=1\n                        break\n    \
    \                elif ((direction==-1 && curr<next)); then\n                 \
    \       result=1\n                        break\n                    fi\n    \
    \            fi\n            fi\n        fi\n    done\n    echo $result", "  \
    \  local -a list=($1)\n    local -a diffs\n    local i\n    local diff\n    local\
    \ prev\n    local prev_diff\n    local is_monotonic=true\n    for ((i=0; i<${#list[@]};\
    \ i++)); do\n        diff=$((list[i] - prev))\n        if [[ $i -gt 0 ]]; then\n\
    \            if [[ $diff -ne $prev_diff ]]; then\n                is_monotonic=false\n\
    \                break\n            fi\n        fi\n        prev=${list[i]}\n\
    \        prev_diff=$diff\n    done\n    echo $is_monotonic", "    local -a list=($1)\n\
    \    local -i i=0\n    local -i j=1\n    local -i len=${#list[@]}\n    local -i\
    \ increasing=0\n    local -i decreasing=0\n    local -i equal=0\n    local -i\
    \ result=0\n    local -i last_diff=0\n    local -i diff=0\n    local -i first_diff=0\n\
    \    local -i first_diff_set=0\n    local -i last_diff_set=0\n    local -i last_diff_increasing=0\n\
    \    local -i last_diff_decreasing=0\n    local -i last_diff_equal=0\n    local\
    \ -i last_diff_set=0\n    local -i last_diff_increasing=0\n    local -i last_diff_decreasing=0\n\
    \    local -i last_diff_equal=0\n    local -i last_diff_set=0\n    local -i last_diff_increasing=0\n\
    \    local -i last_diff_decreasing=0\n    local -i last_diff_equal=0\n    local\
    \ -i last_diff_set=0\n    local -i last_diff_increasing=0\n    local -i last_diff_decreasing=0\n\
    \    local -i last_diff_equal=0\n    local -i last_diff_set=0\n    local -i last_diff_increasing=0\n\
    \    local -i last_diff_decreasing=0\n    local -i last_diff_equal=0\n    local\
    \ -i last_diff_set=0\n    local -i last_diff_increasing=0\n    local -i last_diff_decreasing=0\n\
    \    local -i last_diff_equal=0\n    local -i last_diff_set=0\n    local -i last_diff_increasing=0\n\
    \    local -i last_diff_decreasing=0\n    local -i last_diff_equal=0\n    local\
    \ -i last_diff_set=0\n    local -i last_diff_increasing=0\n    local -i last_diff_decreasing=0\n\
    \    local -i last_diff_equal=0\n", "    local list=$1\n    local -a array\n \
    \   local -i i\n    local -i len\n    local -i increasing\n    local -i decreasing\n\
    \    local -i prev\n    local -i curr\n\n    IFS=' ' read -r -a array <<< \"$list\"\
    \n    len=${#array[@]}\n    if [[ $len -le 1 ]]; then\n        echo \"true\"\n\
    \        return\n    fi\n\n    increasing=1\n    decreasing=1\n    prev=${array[0]}\n\
    \    for ((i=1; i<len; i++)); do\n        curr=${array[i]}\n        if [[ $curr\
    \ -gt $prev ]]; then\n            decreasing=0\n        elif [[ $curr -lt $prev\
    \ ]]; then\n            increasing=0\n        fi\n        prev=$curr\n    done\n\
    \n    if [[ $increasing -eq 1 || $decreasing -eq 1 ]]; then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n    local\
    \ direction=\"$(echo \"$list\" | awk '{print ($2 > $1) ? \"up\" : \"down\"}')\"\
    \n    local prev=\"$(echo \"$list\" | awk '{print $1}')\"\n    local curr\n  \
    \  for curr in $list; do\n        if [[ \"$direction\" == \"up\" ]]; then\n  \
    \          if [[ \"$curr\" -lt \"$prev\" ]]; then\n                echo \"false\"\
    \n                return\n            fi\n        else\n            if [[ \"$curr\"\
    \ -gt \"$prev\" ]]; then\n                echo \"false\"\n                return\n\
    \            fi\n        fi\n        prev=\"$curr\"\n    done\n    echo \"true\"",
  "    local list=\"$1\"\n    local prev=\n    local curr=\n    local increasing=\n\
    \    local decreasing=\n    for curr in $list; do\n        if [[ -n \"$prev\"\
    \ ]]; then\n            if [[ $prev -lt $curr ]]; then\n                increasing=true\n\
    \            elif [[ $prev -gt $curr ]]; then\n                decreasing=true\n\
    \            fi\n        fi\n        prev=$curr\n    done\n    if [[ -n \"$increasing\"\
    \ && -n \"$decreasing\" ]]; then\n        echo \"false\"\n    else\n        echo\
    \ \"true\"\n    fi", "    local list=($1)\n    local i=0\n    local j=1\n    local\
    \ inc=0\n    local dec=0\n    local len=${#list[@]}\n    while [[ $j -lt $len\
    \ ]]; do\n        if [[ ${list[$i]} -lt ${list[$j]} ]]; then\n            inc=1\n\
    \        elif [[ ${list[$i]} -gt ${list[$j]} ]]; then\n            dec=1\n   \
    \     fi\n        if [[ $inc -eq 1 && $dec -eq 1 ]]; then\n            echo \"\
    false\"\n            return\n        fi\n        i=$j\n        j=$(($j+1))\n \
    \   done\n    echo \"true\"", "    local list=\"$1\"\n    local -a arr=($list)\n\
    \    local -i i=0\n    local -i len=${#arr[@]}\n    local -i inc=0\n    local\
    \ -i dec=0\n    local -i prev=0\n    local -i curr=0\n    local -i next=0\n  \
    \  local -i is_monotonic=0\n\n    if [ $len -eq 0 ]; then\n        echo \"false\"\
    \n        return\n    fi\n\n    prev=${arr[0]}\n    for ((i=1; i<len; i++)); do\n\
    \        curr=${arr[i]}\n        if [ $i -lt $((len-1)) ]; then\n            next=${arr[i+1]}\n\
    \        fi\n\n        if [ $curr -gt $prev ]; then\n            inc=1\n     \
    \   elif [ $curr -lt $prev ]; then\n            dec=1\n        fi\n\n        if\
    \ [ $inc -eq 1 -a $dec -eq 1 ]; then\n            is_monotonic=0\n           \
    \ break\n        elif [ $inc -eq 1 -a $next -lt $curr ]; then\n            is_monotonic=0\n\
    \            break\n        elif [ $dec -eq 1 -a $next -gt $curr ]; then\n   \
    \         is_monotonic=0\n            break\n        fi\n\n        prev=$curr\n\
    \    done\n\n    if [ $is_monotonic -eq 0 ]; then\n        echo \"false\"\n  \
    \  else\n        echo \"true\"\n    fi", "    local list=\"$1\"\n    local inc=0\n\
    \    local dec=0\n    local prev=0\n    local curr=0\n    for i in $list; do\n\
    \        curr=$i\n        if [ $curr -gt $prev ]; then\n            inc=1\n  \
    \      elif [ $curr -lt $prev ]; then\n            dec=1\n        fi\n       \
    \ prev=$curr\n    done\n    if [ $inc -eq 1 -a $dec -eq 1 ]; then\n        echo\
    \ \"false\"\n    else\n        echo \"true\"\n    fi", "    local list=\"$1\"\n\
    \    local -a arr=($list)\n    local len=${#arr[@]}\n    local i=0\n    local\
    \ increasing=1\n    local decreasing=1\n    while [ $i -lt $len ]; do\n      \
    \  if [ $i -eq 0 ]; then\n            ((i++))\n            continue\n        fi\n\
    \        if [ ${arr[$i]} -lt ${arr[$i-1]} ]; then\n            increasing=0\n\
    \        fi\n        if [ ${arr[$i]} -gt ${arr[$i-1]} ]; then\n            decreasing=0\n\
    \        fi\n        ((i++))\n    done\n    if [ $increasing -eq 1 ] || [ $decreasing\
    \ -eq 1 ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n   \
    \ fi", "    local list=\"$1\"\n    local last_value\n    local value\n    local\
    \ increasing=true\n    local decreasing=true\n    for value in $list; do\n   \
    \     if [[ -n \"$last_value\" ]]; then\n            if [[ $value -gt $last_value\
    \ ]]; then\n                decreasing=false\n            elif [[ $value -lt $last_value\
    \ ]]; then\n                increasing=false\n            fi\n        fi\n   \
    \     last_value=$value\n    done\n    if [[ $increasing == true || $decreasing\
    \ == true ]]; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi", "    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local\
    \ -i i\n    local -i len=${#arr[@]}\n    local -i incr=0\n    local -i decr=0\n\
    \    for ((i=0; i<len-1; i++)); do\n        if (( arr[i] < arr[i+1] )); then\n\
    \            incr=1\n        elif (( arr[i] > arr[i+1] )); then\n            decr=1\n\
    \        fi\n    done\n    if (( incr && decr )); then\n        echo \"false\"\
    \n    else\n        echo \"true\"\n    fi", "    local list=\"$1\"\n    local\
    \ prev=0\n    local curr=0\n    local prev_sign=0\n    local curr_sign=0\n   \
    \ local result=\"true\"\n    for curr in $list; do\n        curr_sign=$(sign $curr)\n\
    \        if [ $prev_sign -ne 0 ] && [ $curr_sign -ne 0 ] && [ $prev_sign -ne $curr_sign\
    \ ]; then\n            result=\"false\"\n            break\n        fi\n     \
    \   prev=$curr\n        prev_sign=$curr_sign\n    done\n    echo $result", " \
    \   local -a list=($1)\n    local -a diffs\n    local i\n    for ((i=0; i<${#list[@]}-1;\
    \ i++)); do\n        diffs[i]=$((list[i+1]-list[i]))\n    done\n    local first_diff=${diffs[0]}\n\
    \    for ((i=1; i<${#diffs[@]}; i++)); do\n        if [[ ${diffs[i]} -ne $first_diff\
    \ ]]; then\n            echo \"false\"\n            return\n        fi\n    done\n\
    \    echo \"true\""]
stop_tokens:
- "\n}"

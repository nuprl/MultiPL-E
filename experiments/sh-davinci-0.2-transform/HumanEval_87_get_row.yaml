name: HumanEval_87_get_row
language: sh
prompt: "#!/bin/bash\n# You are given a 2 dimensional data, as a nested lists,\n#\
  \ which is similar to matrix, however, unlike matrices,\n# each row may contain\
  \ a different number of columns.\n# Given lst, and integer x, find integers x in\
  \ the list,\n# and return list of tuples, [(x1, y1), (x2, y2) ...] such that\n#\
  \ each tuple is a coordinate - (row, columns), starting with 0.\n# Sort coordinates\
  \ initially by rows in ascending order.\n# Also, sort coordinates of the row by\
  \ columns in descending order.\n# Examples:\n# >>> $(get_row \"1 2 3 4 5 6\\n1 2\
  \ 3 4 1 6\\n1 2 3 4 5 1\" \"1\")\n# [['\"0\"', '\"0\"'], ['\"1\"', '\"4\"'], ['\"\
  1\"', '\"0\"'], ['\"2\"', '\"5\"'], ['\"2\"', '\"0\"']]\n# >>> $(get_row \"\" \"\
  1\")\n# []\n# >>> $(get_row \"\\n1\\n1 2 3\" \"3\")\n# [['\"2\"', '\"2\"']]\n#\n\
  # $1 is a newline-separated, space-separated list\n# $2 is an integer\nget_row()\
  \ {\n"
tests: "}\n\ncandidate() {\n    get_row \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 1 6\\n1 2 3 4 5 1\" \"1\") = \"0 0\\n1 4\\\
  n1 0\\n2 5\\n2 0\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4\
  \ 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 2 3 4 5 6\" \"2\") = \"0 1\\n1 1\\n2 1\\n3\
  \ 1\\n4 1\\n5 1\" ]]\n    [[ $(candidate \"1 2 3 4 5 6\\n1 2 3 4 5 6\\n1 1 3 4 5\
  \ 6\\n1 2 1 4 5 6\\n1 2 3 1 5 6\\n1 2 3 4 1 6\\n1 2 3 4 5 1\" \"1\") = \"0 0\\n1\
  \ 0\\n2 1\\n2 0\\n3 2\\n3 0\\n4 3\\n4 0\\n5 4\\n5 0\\n6 5\\n6 0\" ]]\n    [[ $(candidate\
  \ \"\" \"1\") = \"\" ]]\n    [[ $(candidate \"1\" \"2\") = \"\" ]]\n    [[ $(candidate\
  \ \"\\n1\\n1 2 3\" \"3\") = \"2 2\" ]]\n}\n\nrun_test"
completions: ["    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local\
    \ col=0\n    local res=()\n    while read -r line; do\n        col=0\n       \
    \ for y in $line; do\n            if [[ \"$y\" == \"$x\" ]]; then\n          \
    \      res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col\
    \ + 1))\n        done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    echo\
    \ \"${res[@]}\"", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local res=()\n    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n\
    \        if [[ $i == $x ]]; then\n            res+=(\"[\\\"$row\\\", \\\"$col\\\
    \"]\")\n        fi\n        if [[ $i == $'\\n' ]]; then\n            row=$((row\
    \ + 1))\n            col=0\n        else\n            col=$((col + 1))\n     \
    \   fi\n    done\n    echo \"${res[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    for i in $lst; do\n        if [ \"$i\" == \"$x\" ]; then\n            res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [ \"$i\" == \"\" ]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${res[@]}\"", "    local lst=\"$1\"\n\
    \    local x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n \
    \   while read -r line; do\n        col=0\n        for y in $line; do\n      \
    \      if [[ \"$y\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n        done\n\
    \        row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    for i in $lst; do\n        if [[ $i == $x ]]; then\n            res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == \"\" ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${res[@]}\" | tr ' ' ',' | sed -e 's/^/[/'\
    \ -e 's/$/]/'", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local res=()\n    while read -r line; do\n        col=0\n       \
    \ for i in $line; do\n            if [[ $i == $x ]]; then\n                res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${res[@]}\"",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    while read -r line; do\n        col=0\n        for i in $line; do\n     \
    \       if [[ $i == $x ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\
    \"]\")\n            fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\"", "    local lst=$1\n    local\
    \ x=$2\n    local result=()\n    local row=0\n    local col=0\n    local row_count=0\n\
    \    local col_count=0\n    local row_max=0\n    local col_max=0\n    local row_col_counts=()\n\
    \    local row_col_count=0\n    local row_col_max=0\n    local row_col_count_max=0\n\
    \    local row_col_count_max_index=0\n    local row_col_count_max_index_prev=0\n\
    \    local row_col_count_max_index_prev_prev=0\n    local row_col_count_max_index_prev_prev_prev=0\n\
    \    local row_col_count_max_index_prev_prev_prev_prev=0\n    local row_col_count_max_index_prev_prev_prev_prev_prev=0\n\
    \    local row_col_count_max_index_prev_prev_prev_prev_prev_prev=0\n    local\
    \ row_col_count_max_index_prev_prev_prev_prev_prev_prev_prev=0\n    local row_col_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local row_col_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local row_col_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local row_col_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local row_col_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local row_col_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local row_col_count_max_index_prev_prev_prev_prev_prev_prev_prev_prev", " \
    \   local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local\
    \ result=()\n    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n        if [[ $i\
    \ == $x ]]; then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n   \
    \     fi\n        if [[ $i == \"\" ]]; then\n            row=$((row + 1))\n  \
    \          col=0\n        else\n            col=$((col + 1))\n        fi\n   \
    \ done\n    echo \"${result[@]}\" | tr ' ' ',' | sed -e 's/^/[/' -e 's/$/]/'",
  "  local -a rows=($(echo \"$1\" | tr ' ' '\\n'))\n  local -a coordinates=()\n  local\
    \ -i row=0\n  for row_data in \"${rows[@]}\"; do\n    local -a columns=($(echo\
    \ \"$row_data\" | tr ' ' '\\n'))\n    local -i column=0\n    for column_data in\
    \ \"${columns[@]}\"; do\n      if [[ \"$column_data\" == \"$2\" ]]; then\n   \
    \     coordinates+=(\"[\\\"$row\\\", \\\"$column\\\"]\")\n      fi\n      column+=1\n\
    \    done\n    row+=1\n  done\n  echo \"${coordinates[@]}\"", "    local lst=\"\
    $1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n\
    \    while read -r line; do\n        col=0\n        for i in $line; do\n     \
    \       if [ \"$i\" = \"$x\" ]; then\n                result+=([\"$row,$col\"\
    ]=\"$row,$col\")\n            fi\n            col=$((col+1))\n        done\n \
    \       row=$((row+1))\n    done <<< \"$lst\"\n    if [ ${#result[@]} -eq 0 ];\
    \ then\n        echo \"[]\"\n    else\n        echo \"$(sort_by_row \"$(declare\
    \ -p result)\" | sort_by_col)\"\n    fi", "  local lst=\"$1\"\n  local x=\"$2\"\
    \n  local row=0\n  local col=0\n  local res=()\n  for line in $lst; do\n    col=0\n\
    \    for num in $line; do\n      if [[ \"$num\" == \"$x\" ]]; then\n        res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n      fi\n      col=$((col+1))\n    done\n  \
    \  row=$((row+1))\n  done\n  echo \"${res[@]}\" | tr ' ' '\\n' | sort -t '\"'\
    \ -k 1n -k 3nr | tr '\\n' ' '", "    local lst=$1\n    local x=$2\n    local row=0\n\
    \    local col=0\n    local result=()\n    local row_result=()\n    while read\
    \ line; do\n        col=0\n        row_result=()\n        for i in $line; do\n\
    \            if [[ $i -eq $x ]]; then\n                row_result+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n        done\n\
    \        if [[ ${#row_result[@]} -gt 0 ]]; then\n            result+=(\"${row_result[@]}\"\
    )\n        fi\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"[${result[@]}]\"",
  "    local -a rows\n    local -a row\n    local -a res\n    local -a res_row\n \
    \   local -a res_col\n    local -a res_row_col\n    local -a res_row_col_sorted\n\
    \    local -a res_row_col_sorted_rev\n    local -a res_row_col_sorted_rev_str\n\
    \    local -a res_row_col_sorted_rev_str_joined\n    local -a res_row_col_sorted_rev_str_joined_sorted\n\
    \    local -a res_row_col_sorted_rev_str_joined_sorted_rev\n    local -a res_row_col_sorted_rev_str_joined_sorted_rev_str\n\
    \    local -a res_row_col_sorted_rev_str_joined_sorted_rev_str_joined\n    local\
    \ -a res_row_col_sorted_rev_str_joined_sorted_rev_str_joined_sorted\n    local\
    \ -a res_row_col_sorted_rev_str_joined_sorted_rev_str_joined_sorted_rev\n    local\
    \ -a res_row_col_sorted_rev_str_joined_sorted_rev_str_joined_sorted_rev_str\n\
    \    local -a res_row_col_sorted_rev_str_joined_sorted_rev_str_joined_sorted_rev_str_joined\n\
    \    local -a res_row_col_sorted_rev_str_joined_sorted_rev_str_joined_sorted_rev_str_joined_sorted\n\
    \    local -a res_row_col_sorted_rev_str_joined_sorted_rev_str_joined_sorted_rev_str_joined_sorted_rev\n\
    \    local -a res_row_col_sorted_rev_str_joined_sorted_rev_str_joined_sorted_rev_str_joined_sorted_rev_str\n\
    \    local -a res_row_col_sorted_rev_str_joined_sorted_rev_str_joined_sorted_rev_str_joined_sorted_rev",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local result=()\n    for i in $lst; do\n        if [ \"$i\" == \"$x\" ]; then\n\
    \            result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        col=$((col+1))\n\
    \        if [ \"$i\" == \"\" ]; then\n            row=$((row+1))\n           \
    \ col=0\n        fi\n    done\n    echo \"${result[@]}\"", "    local -a matrix=($(echo\
    \ \"$1\" | tr ' ' '\\n'))\n    local -a row_indexes=()\n    local -a column_indexes=()\n\
    \    local -a row_indexes_sorted=()\n    local -a column_indexes_sorted=()\n \
    \   local -a result=()\n    local -a row_indexes_sorted_unique=()\n    local -a\
    \ column_indexes_sorted_unique=()\n    local -a result_sorted=()\n    local -a\
    \ result_sorted_unique=()\n    local -a result_sorted_unique_sorted=()\n    local\
    \ -a result_sorted_unique_sorted_sorted=()\n    local -a result_sorted_unique_sorted_sorted_sorted=()\n\
    \    local -a result_sorted_unique_sorted_sorted_sorted_sorted=()\n    local -a\
    \ result_sorted_unique_sorted_sorted_sorted_sorted_sorted=()\n    local -a result_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a result_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a result_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a result_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a result_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a result_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a result_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted",
  "    local lst=$1\n    local x=$2\n    local -a res=()\n    local -a rows=()\n \
    \   local -a cols=()\n    local -a row=()\n    local -a col=()\n    local -a row_col=()\n\
    \    local -a row_cols=()\n    local -a row_cols_sorted=()\n    local -a row_cols_sorted_rev=()\n\
    \    local -a row_cols_sorted_rev_str=()\n    local -a row_cols_sorted_rev_str_sorted=()\n\
    \    local -a row_cols_sorted_rev_str_sorted_str=()\n    local -a row_cols_sorted_rev_str_sorted_str_sorted=()\n\
    \    local -a row_cols_sorted_rev_str_sorted_str_sorted_str=()\n    local -a row_cols_sorted_rev_str_sorted_str_sorted_str_sorted=()\n\
    \    local -a row_cols_sorted_rev_str_sorted_str_sorted_str_sorted_str=()\n  \
    \  local -a row_cols_sorted_rev_str_sorted_str_sorted_str_sorted_str_sorted=()\n\
    \    local -a row_cols_sorted_rev_str_sorted_str_sorted_str_sorted_str_sorted_str=()\n\
    \    local -a row_cols_sorted_rev_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted=()\n\
    \    local -a row_cols_sorted_rev_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str=()\n\
    \    local -a row_cols_sorted_rev_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted=()\n\
    \    local -a row_cols_sorted_rev_str_sorted_str_s", "    local lst=$1\n    local\
    \ x=$2\n    local row=0\n    local col=0\n    local result=\"\"\n    for i in\
    \ $lst; do\n        if [[ $i == $x ]]; then\n            result+=\"[\\\"$row\\\
    \", \\\"$col\\\"],\"\n        fi\n        if [[ $i == \"\" ]]; then\n        \
    \    row=$((row+1))\n            col=0\n        else\n            col=$((col+1))\n\
    \        fi\n    done\n    echo \"[${result::-1}]\"", "    local lst=$1\n    local\
    \ x=$2\n    local row=0\n    local col=0\n    local result=()\n    for i in $(echo\
    \ \"$lst\" | tr ' ' '\\n'); do\n        if [[ $i == $x ]]; then\n            result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == \"\" ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local -a rows=($(echo \"$1\" | tr ' ' '\\n'))\n    local -a row_indexes=()\n\
    \    local -a column_indexes=()\n    local -a row_column_indexes=()\n    local\
    \ -a row_column_indexes_sorted=()\n    local -a row_column_indexes_sorted_unique=()\n\
    \    local -a row_column_indexes_sorted_unique_sorted=()\n    local -a row_column_indexes_sorted_unique_sorted_sorted=()\n\
    \    local -a row_column_indexes_sorted_unique_sorted_sorted_sorted=()\n    local\
    \ -a row_column_indexes_sorted_unique_sorted_sorted_sorted_sorted=()\n    local\
    \ -a row_column_indexes_sorted_unique_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a row_column_indexes_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a row_column_indexes_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a row_column_indexes_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a row_column_indexes_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a row_column_indexes_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a row_column_indexes_sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a row_column_indexes_sorted_unique_sorted_sorted_sorted", "    local\
    \ lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local result=()\n\
    \    for i in $lst; do\n        if [[ $i == $x ]]; then\n            result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == \"\" ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/'\
    \ | sed 's/$/]/'", "    local lst=\"$1\"\n    local x=\"$2\"\n    local -a rows\n\
    \    local -a cols\n    local -a row\n    local -a col\n    local -a res\n   \
    \ local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n\
    \    local -i n\n    local -i p\n    local -i q\n    local -i r\n    local -i\
    \ s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i aa\n    local -i bb\n   \
    \ local -i cc\n    local -i dd\n    local -i ee\n    local -i ff\n    local -i\
    \ gg\n    local -i hh\n    local -i ii\n    local -i jj\n    local -i kk\n   \
    \ local -i ll\n    local -i mm\n    local -i nn\n    local -i oo\n    local -i\
    \ pp\n    local -i qq\n    local -i rr\n    local -i ss\n    local -i tt\n   \
    \ local -i uu\n    local -i vv\n    local -i ww\n    local -i xx\n    local -i\
    \ yy\n    local -i zz\n    local -i aaa\n    local -i bbb\n    local -i ccc\n\
    \    local -i ddd\n    local -i eee\n    local -i fff\n    local -i ggg\n    local\
    \ -i hhh\n    local -i iii\n    local -i jjj\n    local -i kkk\n    local -i lll\n\
    \    local -i mmm\n    local -i nnn\n    local -i ooo\n    local -i ppp\n    local\
    \ -i qqq\n    local -i rrr\n    local -i sss\n    local -i ttt\n    local -i uuu\n\
    \    local -i vvv\n    local -i www\n    local -i xxx\n    local -i yyy\n    local\
    \ -i zzz\n    local -i aaaa\n   ", "    local lst=$1\n    local x=$2\n    local\
    \ row=0\n    local col=0\n    local result=()\n    for i in $lst; do\n       \
    \ if [[ $i == $x ]]; then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n        fi\n        if [[ $i == \"\" ]]; then\n            row=$((row +\
    \ 1))\n            col=0\n        else\n            col=$((col + 1))\n       \
    \ fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed -e 's/^/[/' -e 's/$/]/'",
  "    local -a lst=()\n    local -a row=()\n    local -a col=()\n    local -a res=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local", "  local lst=\"$1\"\n  local\
    \ x=\"$2\"\n  local row=0\n  local col=0\n  local res=()\n  for i in $lst; do\n\
    \    if [ \"$i\" == \"$x\" ]; then\n      res+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n    fi\n    col=$((col+1))\n    if [ \"$i\" == \"$'\\n'\" ]; then\n    \
    \  row=$((row+1))\n      col=0\n    fi\n  done\n  echo \"${res[@]}\" | sort -t\
    \ '\"' -k1n -k3nr", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local result=()\n    while read -r line; do\n        col=0\n    \
    \    for i in $line; do\n            if [ \"$i\" == \"$x\" ]; then\n         \
    \       result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n         \
    \   col=$((col+1))\n        done\n        row=$((row+1))\n    done <<< \"$lst\"\
    \n    echo \"${result[@]}\"", "    local lst=\"$1\"\n    local x=\"$2\"\n    local\
    \ -a row_cols\n    local -a rows\n    local -a cols\n    local -a row_cols_sorted\n\
    \    local -a rows_sorted\n    local -a cols_sorted\n    local -a row_cols_sorted_rev\n\
    \    local -a rows_sorted_rev\n    local -a cols_sorted_rev\n    local -a row_cols_sorted_rev_str\n\
    \    local -a rows_sorted_rev_str\n    local -a cols_sorted_rev_str\n    local\
    \ -a row_cols_sorted_rev_str_quoted\n    local -a rows_sorted_rev_str_quoted\n\
    \    local -a cols_sorted_rev_str_quoted\n    local -a row_cols_sorted_rev_str_quoted_str\n\
    \    local -a rows_sorted_rev_str_quoted_str\n    local -a cols_sorted_rev_str_quoted_str\n\
    \    local -a row_cols_sorted_rev_str_quoted_str_str\n    local -a rows_sorted_rev_str_quoted_str_str\n\
    \    local -a cols_sorted_rev_str_quoted_str_str\n    local -a row_cols_sorted_rev_str_quoted_str_str_str\n\
    \    local -a rows_sorted_rev_str_quoted_str_str_str\n    local -a cols_sorted_rev_str_quoted_str_str_str\n\
    \    local -a row_cols_sorted_rev_str_quoted_str_str_str_str\n    local -a rows_sorted_rev_str_quoted_str_str_str_str\n\
    \    local -a cols_sorted_rev_str_quoted_str_str_str_str\n    local -a row_cols_sorted_rev_str_quoted_str_str_str_str_str\n\
    \    local -a rows_sorted_rev_str", "    local lst=\"$1\"\n    local x=\"$2\"\n\
    \    local -a res\n    local -a row\n    local -a col\n    local -a row_col\n\
    \    local -a row_col_sorted\n    local -a res_sorted\n    local -a res_sorted_col\n\
    \    local -a res_sorted_col_sorted\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local u", "    local -a\
    \ lst=($(echo \"$1\" | tr ' ' '\\n'))\n    local -a res=()\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i len=${#lst[@]}\n    local -i\
    \ len2=0\n    local -i len3=0\n    local -i len4=0\n    local -i len5=0\n    local\
    \ -i len6=0\n    local -i len7=0\n    local -i len8=0\n    local -i len9=0\n \
    \   local -i len10=0\n    local -i len11=0\n    local -i len12=0\n    local -i\
    \ len13=0\n    local -i len14=0\n    local -i len15=0\n    local -i len16=0\n\
    \    local -i len17=0\n    local -i len18=0\n    local -i len19=0\n    local -i\
    \ len20=0\n    local -i len21=0\n    local -i len22=0\n    local -i len23=0\n\
    \    local -i len24=0\n    local -i len25=0\n    local -i len26=0\n    local -i\
    \ len27=0\n    local -i len28=0\n    local -i len29=0\n    local -i len30=0\n\
    \    local -i len31=0\n    local -i len32=0\n    local -i len33=0\n    local -i\
    \ len34=0\n    local -i len35=0\n    local -i len36=0\n    local -i len37=0\n\
    \    local -i len38=0\n    local -i len39=0\n    local -i len40=0\n    local -i\
    \ len41=0\n    local -i len42=0\n    local -i len43=0\n    local -i len44=0\n\
    \    local -i len45=0\n    local -i len46=0\n    local -i len47=0\n    local -i\
    \ len48=0\n    local -i len49=0\n    local -i len50=0\n   ", "    local lst=$1\n\
    \    local x=$2\n    local row=0\n    local col=0\n    local res=()\n    for i\
    \ in $(echo \"$lst\" | tr ' ' '\\n'); do\n        if [[ $i == $x ]]; then\n  \
    \          res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[\
    \ $i == $'\\n' ]]; then\n            row=$((row + 1))\n            col=0\n   \
    \     else\n            col=$((col + 1))\n        fi\n    done\n    echo \"${res[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=$1\n    local x=$2\n   \
    \ local row=0\n    local col=0\n    local res=()\n    for i in $(echo \"$lst\"\
    \ | tr ' ' '\\n'); do\n        if [[ \"$i\" == \"$x\" ]]; then\n            res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ \"$i\" == \"\" ]];\
    \ then\n            ((row++))\n            col=0\n        else\n            ((col++))\n\
    \        fi\n    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -t '\"' -k\
    \ 1n -k 3nr | tr '\\n' ' '", "    local lst=\"$1\"\n    local x=\"$2\"\n    local\
    \ row=0\n    local col=0\n    local res=()\n    while read -r line; do\n     \
    \   col=0\n        for i in $line; do\n            if [[ \"$i\" == \"$x\" ]];\
    \ then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n\
    \            col=$((col+1))\n        done\n        row=$((row+1))\n    done <<<\
    \ \"$lst\"\n    echo \"${res[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local\
    \ lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local\
    \ result=()\n    while read -r line; do\n        col=0\n        for i in $line;\
    \ do\n            if [ \"$i\" == \"$x\" ]; then\n                result+=(\"[\\\
    \"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n   \
    \     done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local result=()\n    local row_result=()\n    local row_result_sorted=()\n\
    \    local row_result_sorted_str=\"\"\n    local row_result_str=\"\"\n    local\
    \ result_str=\"\"\n    local result_str_sorted=\"\"\n    local result_str_sorted_str=\"\
    \"\n    local result_str_sorted_str_sorted=\"\"\n    local result_str_sorted_str_sorted_str=\"\
    \"\n    local result_str_sorted_str_sorted_str_sorted=\"\"\n    local result_str_sorted_str_sorted_str_sorted_str=\"\
    \"\n    local result_str_sorted_str_sorted_str_sorted_str_sorted=\"\"\n    local\
    \ result_str_sorted_str_sorted_str_sorted_str_sorted_str=\"\"\n    local result_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted=\"\
    \"\n    local result_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str=\"\
    \"\n    local result_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted=\"\
    \"\n    local result_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str=\"\
    \"\n    local result_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted=\"\
    \"\n    local result_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str=\"\
    \"\n    local result_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted=\"\
    \"\n    local result_str_sorted_str_sorted_str_sorted_str", "    local lst=\"\
    $1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local res=()\n\
    \    for line in $lst; do\n        col=0\n        for item in $line; do\n    \
    \        if [[ \"$item\" == \"$x\" ]]; then\n                res+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n        done\n\
    \        row=$((row+1))\n    done\n    echo \"${res[@]}\"", "    local -a lst=($(echo\
    \ \"$1\" | tr ' ' '\\n'))\n    local -a res=()\n    local -i i=0\n    local -i\
    \ j=0\n    for ((i=0; i<${#lst[@]}; i++)); do\n        for ((j=0; j<${#lst[$i]};\
    \ j++)); do\n            if [[ \"${lst[$i]:$j:1}\" == \"$2\" ]]; then\n      \
    \          res+=(\"[\\\"$i\\\", \\\"$j\\\"]\")\n            fi\n        done\n\
    \    done\n    echo \"${res[@]}\"", "    local lst=\"$1\"\n    local x=\"$2\"\n\
    \    local row=0\n    local col=0\n    local res=()\n    while read -r line; do\n\
    \        col=0\n        for y in $line; do\n            if [ \"$y\" = \"$x\" ];\
    \ then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n\
    \            col=$((col+1))\n        done\n        row=$((row+1))\n    done <<<\
    \ \"$lst\"\n    echo \"${res[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local\
    \ lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local\
    \ result=()\n    while read -r line; do\n        col=0\n        for i in $line;\
    \ do\n            if [ \"$i\" == \"$x\" ]; then\n                result+=(\"[\\\
    \"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n   \
    \     done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"",
  "    local lst=$1\n    local x=$2\n    local -a rows\n    local -a cols\n    local\
    \ -a res\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n\
    \    local -i m=0\n    local -i n=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local\
    \ -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local\
    \ -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local\
    \ -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local\
    \ -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local\
    \ -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local\
    \ -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local\
    \ -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local\
    \ -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local\
    \ -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local", "    local lst=\"\
    $1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n\
    \    for line in $lst; do\n        col=0\n        for num in $line; do\n     \
    \       if [[ \"$num\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n        done\n\
    \        row=$((row+1))\n    done\n    echo \"${result[@]}\"", "  local lst=$1\n\
    \  local x=$2\n  local -a rows\n  local -a cols\n  local -a row_cols\n  local\
    \ -a row_cols_sorted\n  local -a row_cols_sorted_desc\n  local -a row_cols_sorted_desc_str\n\
    \  local -a row_cols_sorted_desc_str_quoted\n  local -a row_cols_sorted_desc_str_quoted_joined\n\
    \  local -a row_cols_sorted_desc_str_quoted_joined_str\n  local -a row_cols_sorted_desc_str_quoted_joined_str_quoted\n\
    \  local -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined\n  local\
    \ -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str\n  local -a\
    \ row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted\n  local\
    \ -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted_joined\n\
    \  local -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted_joined_str\n\
    \  local -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted\n\
    \  local -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined\n\
    \  local -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str\n\
    \  local -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted\n\
    \  local -a row_cols_", "    local list=\"$1\"\n    local x=\"$2\"\n    local\
    \ row=0\n    local col=0\n    local result=()\n    while read -r line; do\n  \
    \      col=0\n        for y in $line; do\n            if [[ \"$y\" == \"$x\" ]];\
    \ then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n         \
    \   fi\n            col=$((col + 1))\n        done\n        row=$((row + 1))\n\
    \    done <<< \"$list\"\n    echo \"${result[@]}\"", "    local lst=$1\n    local\
    \ x=$2\n    local row=0\n    local col=0\n    local res=()\n    for i in $(echo\
    \ \"$lst\" | tr ' ' '\\n'); do\n        if [[ \"$i\" == \"$x\" ]]; then\n    \
    \        res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ \"\
    $i\" == \"\" ]]; then\n            row=$((row + 1))\n            col=0\n     \
    \   else\n            col=$((col + 1))\n        fi\n    done\n    echo \"${res[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/' | sed 's/$/]/'", "  local lst=\"$1\"\n  local x=\"\
    $2\"\n  local -a rows\n  local -a columns\n  local -a result\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local\
    \ -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n\
    \  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n", " \
    \ local lst=\"$1\"\n  local x=\"$2\"\n  local row=0\n  local col=0\n  local result=()\n\
    \  for line in $lst; do\n    col=0\n    for num in $line; do\n      if [ \"$num\"\
    \ = \"$x\" ]; then\n        result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n     \
    \ fi\n      col=$((col+1))\n    done\n    row=$((row+1))\n  done\n  echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -t '\"' -k2 -k1 -n | tr '\\n' ' '", "    local lst=$1\n\
    \    local x=$2\n    local row=0\n    local col=0\n    local res=()\n    for i\
    \ in $(echo \"$lst\" | tr \" \" \"\\n\"); do\n        if [[ $i == $x ]]; then\n\
    \            res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[\
    \ $i == \"\" ]]; then\n            row=$((row + 1))\n            col=0\n     \
    \   else\n            col=$((col + 1))\n        fi\n    done\n    echo \"${res[@]}\"\
    \ | tr \" \" \"\\n\" | sort -t \"\\\"\" -k1,1n -k3,3nr | tr \"\\n\" \" \"", " \
    \   local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n \
    \   local res=()\n    while read -r line; do\n        col=0\n        for i in\
    \ $line; do\n            if [ \"$i\" == \"$x\" ]; then\n                res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${res[@]}\"",
  "    local lst=$1\n    local x=$2\n    local -a rows\n    local -a cols\n    local\
    \ -a res\n    local -a row\n    local -a col\n    local -a row_col\n    local\
    \ -a row_col_sorted\n    local -a res_sorted\n    local i=0\n    local j=0\n \
    \   local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n  \
    \  local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n   \
    \ local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local\
    \ z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local\
    \ ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local\
    \ jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local\
    \ oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local\
    \ tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local\
    \ yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n  \
    \  local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0", "    local -a rows=()\n    local -a cols=()\n    local\
    \ -a row_cols=()\n    local -a row_cols_sorted=()\n    local -a row_cols_sorted_reversed=()\n\
    \    local -a row_cols_sorted_reversed_joined=()\n    local -a row_cols_sorted_reversed_joined_quoted=()\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined=()\n    local -a row_cols_sorted_reversed_joined_quoted_joined_joined=()\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined_joined_joined=()\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined_joined_joined_joined=()\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined_joined_joined_joined_joined=()\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined_joined_joined_joined_joined_joined=()\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined_joined_joined_joined_joined_joined_joined=()\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined_joined_joined_joined_joined_joined_joined_joined=()\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined_joined_joined_joined_joined_joined_joined_joined_joined=()\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined_joined_joined_joined_joined_joined_joined_joined_joined_joined=()\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined_joined_joined_joined_joined_joined_joined_joined_joined_joined_joined=()\n\
    \    local -a row_cols_sorted_reversed_joined_quoted_joined_", "    local lst=$1\n\
    \    local x=$2\n    local -a result=()\n    local -a row\n    local -a rows\n\
    \    local -a columns\n    local -a row_columns\n    local -a row_columns_sorted\n\
    \    local -a row_columns_sorted_reversed\n    local -a row_columns_sorted_reversed_string\n\
    \    local -a row_columns_sorted_reversed_string_quoted\n    local -a row_columns_sorted_reversed_string_quoted_joined\n\
    \    local -a row_columns_sorted_reversed_string_quoted_joined_string\n    local\
    \ -a row_columns_sorted_reversed_string_quoted_joined_string_quoted\n    local\
    \ -a row_columns_sorted_reversed_string_quoted_joined_string_quoted_joined\n \
    \   local -a row_columns_sorted_reversed_string_quoted_joined_string_quoted_joined_string\n\
    \    local -a row_columns_sorted_reversed_string_quoted_joined_string_quoted_joined_string_quoted\n\
    \    local -a row_columns_sorted_reversed_string_quoted_joined_string_quoted_joined_string_quoted_joined\n\
    \    local -a row_columns_sorted_reversed_string_quoted_joined_string_quoted_joined_string_quoted_joined_string\n\
    \    local -a row_columns_sorted_reversed_string_quoted_joined_string_quoted_joined_string_quoted_joined_string_quoted\n\
    \    local -a row_columns_sorted_reversed_string_quoted_joined_string_quoted_joined_string_quoted_joined_string_quoted_joined\n\
    \    local -a row_columns_sorted_reversed_string_quoted_joined_string_quoted_joined_string_quoted_joined_string_quoted_joined_string\n\
    \    local -a row_columns_sorted_reversed", "    local lst=\"$1\"\n    local x=\"\
    $2\"\n    local row=0\n    local col=0\n    local res=()\n    while read -r line;\
    \ do\n        col=0\n        for y in $line; do\n            if [[ \"$y\" == \"\
    $x\" ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n     \
    \       fi\n            col=$((col + 1))\n        done\n        row=$((row + 1))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\"", "    local lst=$1\n    local\
    \ x=$2\n    local row=0\n    local col=0\n    local result=()\n    for i in $(echo\
    \ \"$lst\" | tr ' ' '\\n'); do\n        if [[ $i == $x ]]; then\n            result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == $'\\n' ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local -a result\n    local -i i=0\n    local -i j=0\n    local -i k=0\n   \
    \ local -a row\n    local -i row_len\n    local -i row_len_prev=0\n    local -i\
    \ x\n    local -i y\n    local -i z\n    local -i len\n    local -i len_prev=0\n\
    \    local -i len_prev_prev=0\n    local -i len_prev_prev_prev=0\n    local -i\
    \ len_prev_prev_prev_prev=0\n    local -i len_prev_prev_prev_prev_prev=0\n   \
    \ local -i len_prev_prev_prev_prev_prev_prev=0\n    local -i len_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i len_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i\
    \ len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev",
  "    local lst=$1\n    local x=$2\n    local -a res=()\n    local -a row=()\n  \
    \  local -a col=()\n    local -a rows=()\n    local -a cols=()\n    local -a row_cols=()\n\
    \    local -a col_cols=()\n    local -a row_cols_cols=()\n    local -a col_cols_cols=()\n\
    \    local -a row_cols_cols_cols=()\n    local -a col_cols_cols_cols=()\n    local\
    \ -a row_cols_cols_cols_cols=()\n    local -a col_cols_cols_cols_cols=()\n   \
    \ local -a row_cols_cols_cols_cols_cols=()\n    local -a col_cols_cols_cols_cols_cols=()\n\
    \    local -a row_cols_cols_cols_cols_cols_cols=()\n    local -a col_cols_cols_cols_cols_cols_cols=()\n\
    \    local -a row_cols_cols_cols_cols_cols_cols_cols=()\n    local -a col_cols_cols_cols_cols_cols_cols_cols=()\n\
    \    local -a row_cols_cols_cols_cols_cols_cols_cols_cols=()\n    local -a col_cols_cols_cols_cols_cols_cols_cols_cols=()\n\
    \    local -a row_cols_cols_cols_cols_cols_cols_cols_cols_cols=()\n    local -a\
    \ col_cols_cols_cols_cols_cols_cols_cols_cols_cols=()\n    local -a row_cols_cols_cols_cols_cols_cols_cols_cols_cols_cols=()\n\
    \    local -a col", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local res=()\n    for i in $lst; do\n        if [ \"$i\" = \"$x\"\
    \ ]; then\n            res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n \
    \       if [ \"$i\" = \"\" ]; then\n            row=$((row + 1))\n           \
    \ col=0\n        else\n            col=$((col + 1))\n        fi\n    done\n  \
    \  echo \"${res[@]}\" | sort -t '\"' -k 1n -k 3nr", "    local lst=$1\n    local\
    \ x=$2\n    local row=0\n    local col=0\n    local res=()\n    for i in $(echo\
    \ \"$lst\" | tr ' ' '\\n'); do\n        if [[ \"$i\" == \"$x\" ]]; then\n    \
    \        res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ \"\
    $i\" == \"\" ]]; then\n            row=$((row + 1))\n            col=0\n     \
    \   else\n            col=$((col + 1))\n        fi\n    done\n    echo \"${res[@]}\"\
    \ | tr ' ' ',' | sed 's/^/[/' | sed 's/$/]/'", "    local -a arr\n    local -a\
    \ res\n    local -a row\n    local -a col\n    local -a tmp\n    local -a tmp2\n\
    \    local -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n\
    \    local -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n\
    \    local -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n\
    \    local -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n\
    \    local -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n\
    \    local -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n\
    \    local -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n\
    \    local -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n\
    \    local -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n\
    \    local -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n\
    \    local -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n\
    \    local -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n\
    \    local -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n\
    \    local -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n\
    \    local -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n\
    \    local -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n\
    \    local -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    while read -r line; do\n        col=0\n        for word in $line; do\n  \
    \          if [ \"$word\" == \"$x\" ]; then\n                res+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n        done\n\
    \        row=$((row+1))\n    done <<< \"$lst\"\n    printf '%s\\n' \"${res[@]}\"\
    \ | sort -t '\"' -k1,1n -k3,3nr", "    local lst=$1\n    local x=$2\n    local\
    \ row=0\n    local col=0\n    local result=()\n    while read -r line; do\n  \
    \      col=0\n        for i in $line; do\n            if [[ $i == $x ]]; then\n\
    \                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n\
    \            col=$((col+1))\n        done\n        row=$((row+1))\n    done <<<\
    \ \"$lst\"\n    echo \"${result[@]}\"", "    local lst=$1\n    local x=$2\n  \
    \  local row=0\n    local col=0\n    local res=()\n    for i in $lst; do\n   \
    \     if [[ $i == $x ]]; then\n            res+=([\"$row,$col\"])\n        fi\n\
    \        if [[ $i == \"\" ]]; then\n            row=$((row+1))\n            col=0\n\
    \        else\n            col=$((col+1))\n        fi\n    done\n    echo \"${res[@]}\"\
    \ | tr ' ' '\\n' | sort -t ',' -k 1 -n -k 2 -r | tr '\\n' ' '", "    local lst=$1\n\
    \    local x=$2\n    local row=0\n    local col=0\n    local res=()\n    for i\
    \ in $lst; do\n        if [[ $i == $x ]]; then\n            res+=([\"$row,$col\"\
    ])\n        fi\n        if [[ $i == \"\" ]]; then\n            ((row++))\n   \
    \         col=0\n        else\n            ((col++))\n        fi\n    done\n \
    \   local res_sorted=()\n    for i in \"${!res[@]}\"; do\n        res_sorted+=([\"\
    ${res[$i]}\"]=\"$i\")\n    done\n    local res_sorted_keys=($(printf \"%s\\n\"\
    \ \"${!res_sorted[@]}\" | sort -t, -k1n -k2nr))\n    local res_sorted_vals=()\n\
    \    for i in \"${res_sorted_keys[@]}\"; do\n        res_sorted_vals+=([\"${res_sorted[$i]}\"\
    ])\n    done\n    local res_sorted_vals_str=$(printf '[\"%s\"]\\n' \"${res_sorted_vals[@]}\"\
    )\n    echo $res_sorted_vals_str", "    local lst=\"$1\"\n    local x=\"$2\"\n\
    \    local row=0\n    local col=0\n    local res=\"\"\n    local row_res=\"\"\n\
    \    local row_res_sorted=\"\"\n    local res_sorted=\"\"\n    local res_sorted_str=\"\
    \"\n    local res_sorted_str_escaped=\"\"\n    local res_sorted_str_escaped_quoted=\"\
    \"\n    local res_sorted_str_escaped_quoted_json=\"\"\n    local res_sorted_str_escaped_quoted_json_str=\"\
    \"\n    local res_sorted_str_escaped_quoted_json_str_escaped=\"\"\n    local res_sorted_str_escaped_quoted_json_str_escaped_quoted=\"\
    \"\n    local res_sorted_str_escaped_quoted_json_str_escaped_quoted_json=\"\"\n\
    \    local res_sorted_str_escaped_quoted_json_str_escaped_quoted_json_str=\"\"\
    \n    local res_sorted_str_escaped_quoted_json_str_escaped_quoted_json_str_escaped=\"\
    \"\n    local res_sorted_str_escaped_quoted_json_str_escaped_quoted_json_str_escaped_quoted=\"\
    \"\n    local res_sorted_str_escaped_quoted_json_str_escaped_quoted_json_str_escaped_quoted_json=\"\
    \"\n    local res_sorted_str_escaped_quoted_json_str_escaped_quoted_json_str_escaped_quoted_json_str=\"\
    \"\n    local res_sorted_str_escaped_quoted_json_str_escaped_quoted_json_str_escaped_quoted_json_str_escaped=\"\
    \"\n    local res_sorted_str_escaped_quoted_json_str_escaped_quoted_json_str_escaped_quoted_json_str_escaped_quoted=\"\
    \"\n    local res_sorted_str_escaped_quoted_json_str_escaped_quoted_json_str_escaped_",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local -a res=()\n    local -a row=()\n\
    \    local -a col=()\n    local -a row_col=()\n    local -a row_col_sorted=()\n\
    \    local -a res_sorted=()\n    local -a row_sorted=()\n    local -a col_sorted=()\n\
    \    local -a row_col_sorted_rev=()\n    local -a res_sorted_rev=()\n    local\
    \ -a row_sorted_rev=()\n    local -a col_sorted_rev=()\n    local -a row_col_sorted_rev_sorted=()\n\
    \    local -a res_sorted_rev_sorted=()\n    local -a row_sorted_rev_sorted=()\n\
    \    local -a col_sorted_rev_sorted=()\n    local -a row_col_sorted_rev_sorted_rev=()\n\
    \    local -a res_sorted_rev_sorted_rev=()\n    local -a row_sorted_rev_sorted_rev=()\n\
    \    local -a col_sorted_rev_sorted_rev=()\n    local -a row_col_sorted_rev_sorted_rev_sorted=()\n\
    \    local -a res_sorted_rev_sorted_rev_sorted=()\n    local -a row_sorted_rev_sorted_rev_sorted=()\n\
    \    local -a col_sorted_rev_sorted_rev_sorted=()\n    local -a row_col_sorted_rev_sorted_rev_sorted_rev=()\n\
    \    local -a res_sorted_rev_sorted_rev_sorted_rev=()\n    local -a row_sorted_rev_sorted_rev_sorted_rev=()\n\
    \    local -a col_sorted_rev_sorted_rev_sorted_rev=()\n    local -a row_col_sorted_rev_sorted_rev_sorted_rev_sorted=()\n\
    \    local -a res_sorted_rev_s", "    local lst=$1\n    local x=$2\n    local\
    \ -a rows\n    local -a cols\n    local -a result\n    local -a row\n    local\
    \ -a col\n    local -a row_col\n    local -a row_cols\n    local -a row_cols_sorted\n\
    \    local -a row_cols_sorted_reversed\n    local -a row_cols_sorted_reversed_string\n\
    \    local -a row_cols_sorted_reversed_string_quoted\n    local -a result_string\n\
    \    local -a result_string_quoted\n    local -a result_string_quoted_joined\n\
    \    local -a result_string_quoted_joined_string\n    local -a result_string_quoted_joined_string_quoted\n\
    \    local -a result_string_quoted_joined_string_quoted_joined\n    local -a result_string_quoted_joined_string_quoted_joined_string\n\
    \    local -a result_string_quoted_joined_string_quoted_joined_string_quoted\n\
    \    local -a result_string_quoted_joined_string_quoted_joined_string_quoted_joined\n\
    \    local -a result_string_quoted_joined_string_quoted_joined_string_quoted_joined_string\n\
    \    local -a result_string_quoted_joined_string_quoted_joined_string_quoted_joined_string_quoted\n\
    \    local -a result_string_quoted_joined_string_quoted_joined_string_quoted_joined_string_quoted_joined\n\
    \    local -a result_string_quoted_joined_string_quoted_joined_string_quoted_joined_string_quoted_joined_string\n\
    \    local -a result_string_quoted_joined_string_quoted_joined_string_quoted_joined_string_quoted_joined_string_quoted\n\
    \    local -a result_string_quoted_joined_string_quoted_joined_string_quoted_joined_string_quoted_joined_string_quoted_joined\n\
    \    local -a result_string_quoted_joined_", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n    local row_result=()\n\
    \    local row_result_sorted=()\n    local row_result_sorted_str=()\n    local\
    \ result_str=()\n    while read -r line; do\n        col=0\n        row_result=()\n\
    \        row_result_sorted=()\n        row_result_sorted_str=()\n        for word\
    \ in $line; do\n            if [[ \"$word\" == \"$x\" ]]; then\n             \
    \   row_result+=(\"$row\" \"$col\")\n            fi\n            ((col++))\n \
    \       done\n        if [[ \"${#row_result[@]}\" -gt 0 ]]; then\n           \
    \ row_result_sorted=($(printf '%s\\n' \"${row_result[@]}\" | sort -n -k1 -k2))\n\
    \            for i in \"${row_result_sorted[@]}\"; do\n                row_result_sorted_str+=(\"\
    \\\"$i\\\"\")\n            done\n            result+=(\"[${row_result_sorted_str[*]}]\"\
    )\n        fi\n        ((row++))\n    done <<< \"$lst\"\n    for i in \"${result[@]}\"\
    ; do\n        result_str+=(\"$i\")\n    done\n    echo \"[${result_str[*]}]\"",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local result=()\n\
    \    for i in $lst; do\n        if [[ $i == $x ]]; then\n            result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        col=$((col + 1))\n      \
    \  if [[ $i == $'\\n' ]]; then\n            row=$((row + 1))\n            col=0\n\
    \        fi\n    done\n    echo \"${result[@]}\"", "  local lst=$1\n  local x=$2\n\
    \  local -a res\n  local -a row\n  local -a col\n  local -a row_col\n  local i=0\n\
    \  local j=0\n  local -a rows=($(echo \"$lst\" | tr ' ' '\\n'))\n  for row in\
    \ \"${rows[@]}\"; do\n    local -a cols=($(echo \"$row\" | tr ' ' '\\n'))\n  \
    \  for col in \"${cols[@]}\"; do\n      if [[ \"$col\" == \"$x\" ]]; then\n  \
    \      row_col=(\"$i\" \"$j\")\n        res+=(\"$(printf '[\"%s\", \"%s\"]' \"\
    ${row_col[@]}\")\")\n      fi\n      j=$((j+1))\n    done\n    i=$((i+1))\n  \
    \  j=0\n  done\n  echo \"${res[@]}\"", "    local row=0\n    local col=0\n   \
    \ local result=()\n    while read -r line; do\n        col=0\n        for num\
    \ in $line; do\n            if [ \"$num\" = \"$2\" ]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n\
    \        done\n        row=$((row + 1))\n    done <<< \"$1\"\n    echo \"${result[@]}\"",
  "    local -a lst=()\n    local -a row=()\n    local -a col=()\n    local -a res=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=0\n    local\
    \ -i m=0\n    local -i x=$2\n    local -i y=0\n    local -i z=0\n    local -i\
    \ p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i a=0\n    local\
    \ -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n\
    \    local -i g=0\n    local -i h=0\n    local -i l=0\n    local -i o=0\n    local\
    \ -i row_len=0\n    local -i col_len=0\n    local -i res_len=0\n    local -i row_max=0\n\
    \    local -i col_max=0\n    local -i res_max=0\n    local -i row_min=0\n    local\
    \ -i col_min=0\n    local -i res_min=0\n    local -i row_sum=0\n    local -i col_sum=0\n\
    \    local -i res_sum=0\n    local -i row_avg=0\n    local -i col_avg=0\n    local\
    \ -i res_avg=0\n    local -i row_med=0\n    local -i col_med=0\n    local -i res_med=0\n\
    \    local -i row_mod=0\n    local -i col_mod=0\n    local -i res_mod=0\n    local\
    \ -i row_var=0\n    local -i col_var=0\n    local -i res_var=0\n    local -i row_std=0\n\
    \    local -i col_std=0\n    local -i res_std", "    local lst=$1\n    local x=$2\n\
    \    local -a res\n    local -a row\n    local -a col\n    local -a row_col\n\
    \    local -a row_col_sorted\n    local -a row_col_sorted_rev\n    local -a res_sorted\n\
    \    local -a res_sorted_rev\n    local -a res_sorted_rev_str\n    local -a res_sorted_rev_str_quoted\n\
    \    local -a res_sorted_rev_str_quoted_joined\n    local -a res_sorted_rev_str_quoted_joined_str\n\
    \    local -a res_sorted_rev_str_quoted_joined_str_quoted\n    local -a res_sorted_rev_str_quoted_joined_str_quoted_joined\n\
    \    local -a res_sorted_rev_str_quoted_joined_str_quoted_joined_str\n    local\
    \ -a res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted\n    local\
    \ -a res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined\n  \
    \  local -a res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str\n\
    \    local -a res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted\n\
    \    local -a res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined\n\
    \    local -a res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str\n\
    \    local -a res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted\n\
    \    local -a res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted",
  "    local -r lst=\"$1\"\n    local -r x=\"$2\"\n    local -r rows=$(echo \"$lst\"\
    \ | wc -l)\n    local -r cols=$(echo \"$lst\" | head -n 1 | wc -w)\n    local\
    \ -r max_cols=$(echo \"$lst\" | awk '{print NF}' | sort -n | tail -n 1)\n    local\
    \ -r max_cols_plus_one=$((max_cols + 1))\n    local -r max_cols_plus_one_str=$(printf\
    \ \"%d\" \"$max_cols_plus_one\")\n    local -r max_cols_plus_one_str_len=$(printf\
    \ \"%d\" \"$max_cols_plus_one\" | wc -c)\n    local -r max_cols_plus_one_str_len_minus_one=$((max_cols_plus_one_str_len\
    \ - 1))\n    local -r max_cols_plus_one_str_len_minus_one_str=$(printf \"%d\"\
    \ \"$max_cols_plus_one_str_len_minus_one\")\n    local -r max_cols_plus_one_str_len_minus_one_str_len=$(printf\
    \ \"%d\" \"$max_cols_plus_one_str_len_minus_one\" | wc -c)\n    local -r max_cols_plus_one_str_len_minus_one_str_len_minus_one=$((max_cols_plus_one_str_len_minus_one_str_len\
    \ - 1))\n    local -r max_cols_plus_one_str_len_minus_one_str_len_minus_one_str=$(printf\
    \ \"%d\" \"$max_cols_plus_one_str_len_minus_one_str_len_minus_one\")\n    local\
    \ -r max_cols_plus_one_str_len_minus_one_str_len_minus_one_str_len=$(printf \"\
    %d\" \"$max_cols_plus_one_str_len_minus_one_str_len_minus_", "    local lst=\"\
    $1\"\n    local x=\"$2\"\n    local -a res\n    local -a row\n    local -a col\n\
    \    local -a row_col\n    local -a row_col_sort\n    local -a row_col_sort_rev\n\
    \    local -a row_col_sort_rev_sort\n    local -a row_col_sort_rev_sort_rev\n\
    \    local -a row_col_sort_rev_sort_rev_sort\n    local -a row_col_sort_rev_sort_rev_sort_rev\n\
    \    local -a row_col_sort_rev_sort_rev_sort_rev_sort\n    local -a row_col_sort_rev_sort_rev_sort_rev_sort_rev\n\
    \    local -a row_col_sort_rev_sort_rev_sort_rev_sort_rev_sort\n    local -a row_col_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev\n\
    \    local -a row_col_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort\n    local\
    \ -a row_col_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev\n    local\
    \ -a row_col_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort\n    local\
    \ -a row_col_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev\n\
    \    local -a row_col_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort\n\
    \    local -a row_col_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev\n\
    \    local -a row_col_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort_rev_sort\n\
    \    local -a row_col_sort_rev_sort_rev_sort_rev_sort_rev_sort_", "    local lst=$1\n\
    \    local x=$2\n    local row=0\n    local col=0\n    local res=()\n    for i\
    \ in $lst; do\n        if [[ $i == $x ]]; then\n            res+=([\"$row,$col\"\
    ]=\"$row,$col\")\n        fi\n        col=$((col+1))\n        if [[ $i == $'\\\
    n' ]]; then\n            row=$((row+1))\n            col=0\n        fi\n    done\n\
    \    if [[ ${#res[@]} -eq 0 ]]; then\n        echo \"[]\"\n    else\n        echo\
    \ \"$(sort_by_row \"$(declare -p res)\" | sort_by_col)\"\n    fi", "    local\
    \ lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n        if [[ $i == $x ]];\
    \ then\n            res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n    \
    \    if [[ $i == $'\\n' ]]; then\n            row=$((row + 1))\n            col=0\n\
    \        else\n            col=$((col + 1))\n        fi\n    done\n    echo \"\
    ${res[@]}\" | tr ' ' ',' | jq -s 'sort_by(.0) | reverse | sort_by(.1) | reverse'",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local result=()\n\
    \    for i in $lst; do\n        if [[ $i == $x ]]; then\n            result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == \"\" ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local -a lst=($(echo \"$1\" | tr ' ' '\\n'))\n    local -a res=()\n    local\
    \ -a row=()\n    local -a col=()\n    local -a tmp=()\n    local -a tmp2=()\n\
    \    local -a tmp3=()\n    local -a tmp4=()\n    local -a tmp5=()\n    local -a\
    \ tmp6=()\n    local -a tmp7=()\n    local -a tmp8=()\n    local -a tmp9=()\n\
    \    local -a tmp10=()\n    local -a tmp11=()\n    local -a tmp12=()\n    local\
    \ -a tmp13=()\n    local -a tmp14=()\n    local -a tmp15=()\n    local -a tmp16=()\n\
    \    local -a tmp17=()\n    local -a tmp18=()\n    local -a tmp19=()\n    local\
    \ -a tmp20=()\n    local -a tmp21=()\n    local -a tmp22=()\n    local -a tmp23=()\n\
    \    local -a tmp24=()\n    local -a tmp25=()\n    local -a tmp26=()\n    local\
    \ -a tmp27=()\n    local -a tmp28=()\n    local -a tmp29=()\n    local -a tmp30=()\n\
    \    local -a tmp31=()\n    local -a tmp32=()\n    local -a tmp33=()\n    local\
    \ -a tmp34=()\n    local -a tmp35=()\n    local -a tmp36=()\n    local -a tmp37=()\n\
    \    local -a tmp38=()\n    local -a tmp39=()\n    local -a tmp40=()\n    local\
    \ -a tmp41=()\n    local -a tmp42=()\n    local -a tmp43=()\n    local -a tmp44=()\n\
    \    local -a tmp45=()\n    local -a tmp46=()\n    local -a tmp47=()\n    local\
    \ -a tmp48=()\n    local -a tmp49=()\n    local -a tmp50=()\n    local -a tmp51=()\n\
    \    local -a tmp52", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n\
    \    local col=0\n    local result=()\n    while read -r line; do\n        col=0\n\
    \        for i in $line; do\n            if [ \"$i\" == \"$x\" ]; then\n     \
    \           result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n     \
    \       col=$((col+1))\n        done\n        row=$((row+1))\n    done <<< \"\
    $lst\"\n    echo \"${result[@]}\"", "    local -a lst=()\n    local -a row=()\n\
    \    local -a col=()\n    local -a res=()\n    local -a tmp=()\n    local -a tmp2=()\n\
    \    local -a tmp3=()\n    local -a tmp4=()\n    local -a tmp5=()\n    local -a\
    \ tmp6=()\n    local -a tmp7=()\n    local -a tmp8=()\n    local -a tmp9=()\n\
    \    local -a tmp10=()\n    local -a tmp11=()\n    local -a tmp12=()\n    local\
    \ -a tmp13=()\n    local -a tmp14=()\n    local -a tmp15=()\n    local -a tmp16=()\n\
    \    local -a tmp17=()\n    local -a tmp18=()\n    local -a tmp19=()\n    local\
    \ -a tmp20=()\n    local -a tmp21=()\n    local -a tmp22=()\n    local -a tmp23=()\n\
    \    local -a tmp24=()\n    local -a tmp25=()\n    local -a tmp26=()\n    local\
    \ -a tmp27=()\n    local -a tmp28=()\n    local -a tmp29=()\n    local -a tmp30=()\n\
    \    local -a tmp31=()\n    local -a tmp32=()\n    local -a tmp33=()\n    local\
    \ -a tmp34=()\n    local -a tmp35=()\n    local -a tmp36=()\n    local -a tmp37=()\n\
    \    local -a tmp38=()\n    local -a tmp39=()\n    local -a tmp40=()\n    local\
    \ -a tmp41=()\n    local -a tmp42=()\n    local -a tmp43=()\n    local -a tmp44=()\n\
    \    local -a tmp45=()\n    local -a tmp46=()\n    local -a tmp47=()\n    local\
    \ -a tmp48=()\n    local -a tmp49=()\n    local -a tmp50=()\n    local -a tmp51=()\n\
    \    local -a tmp52=()\n    local -a tmp53=()\n    local", "    local lst=$1\n\
    \    local x=$2\n    local row=0\n    local col=0\n    local result=()\n    for\
    \ i in $lst; do\n        if [[ $i == $x ]]; then\n            result+=(\"[\\\"\
    $row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == \"\" ]]; then\n  \
    \          row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo ${result[@]} | tr ' ' ',' | sed 's/^/[/'\
    \ | sed 's/$/]/'", "    local lst=$1\n    local x=$2\n    local -a row_cols\n\
    \    local -a row_cols_sorted\n    local -a row_cols_sorted_desc\n    local -a\
    \ row_cols_sorted_desc_str\n    local -a row_cols_sorted_desc_str_json\n    local\
    \ -a row_cols_sorted_desc_str_json_str\n    local -a row_cols_sorted_desc_str_json_str_json\n\
    \    local -a row_cols_sorted_desc_str_json_str_json_str\n    local -a row_cols_sorted_desc_str_json_str_json_str_json\n\
    \    local -a row_cols_sorted_desc_str_json_str_json_str_json_str\n    local -a\
    \ row_cols_sorted_desc_str_json_str_json_str_json_str_json\n    local -a row_cols_sorted_desc_str_json_str_json_str_json_str_json_str\n\
    \    local -a row_cols_sorted_desc_str_json_str_json_str_json_str_json_str_json\n\
    \    local -a row_cols_sorted_desc_str_json_str_json_str_json_str_json_str_json_str\n\
    \    local -a row_cols_sorted_desc_str_json_str_json_str_json_str_json_str_json_str_json\n\
    \    local -a row_cols_sorted_desc_str_json_str_json_str_json_str_json_str_json_str_json_str\n\
    \    local -a row_cols_sorted_desc_str_json_str_json_str_json_str_json_str_json_str_json_str_json\n\
    \    local -a row_cols_sorted_desc_str_json_str_json_str_json_str_json_str_json_str_json_str_json_str\n\
    \    local -a row_cols_sorted_desc", "    local lst=\"$1\"\n    local x=\"$2\"\
    \n    local row=0\n    local col=0\n    local res=()\n    while read -r line;\
    \ do\n        col=0\n        for item in $line; do\n            if [[ \"$item\"\
    \ == \"$x\" ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n\
    \            fi\n            col=$((col + 1))\n        done\n        row=$((row\
    \ + 1))\n    done <<< \"$lst\"\n    echo \"${res[@]}\"", "    local lst=\"$1\"\
    \n    local x=\"$2\"\n    local row=0\n    local col=0\n    local res=()\n   \
    \ local row_res=()\n    local row_res_sorted=()\n    local row_res_sorted_rev=()\n\
    \    local res_sorted=()\n    local res_sorted_rev=()\n    local res_sorted_rev_str=()\n\
    \    local res_sorted_rev_str_quoted=()\n    local res_sorted_rev_str_quoted_joined=()\n\
    \    local res_sorted_rev_str_quoted_joined_str=()\n    local res_sorted_rev_str_quoted_joined_str_quoted=()\n\
    \    local res_sorted_rev_str_quoted_joined_str_quoted_joined=()\n    local res_sorted_rev_str_quoted_joined_str_quoted_joined_str=()\n\
    \    local res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted=()\n\
    \    local res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined=()\n\
    \    local res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str=()\n\
    \    local res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted=()\n\
    \    local res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined=()\n\
    \    local res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str=()\n\
    \    local res_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted=()\n\
    \    local res_sorted_rev_str_quoted_joined_str_quoted_joined_str_", "    local\
    \ lst=\"$1\"\n    local x=\"$2\"\n    local -a rows=()\n    local -a cols=()\n\
    \    local -a res=()\n    local i=0\n    local j=0\n    local row=0\n    local\
    \ col=0\n    local row_len=0\n    local col_len=0\n    local row_str=\"\"\n  \
    \  local col_str=\"\"\n    local row_str_len=0\n    local col_str_len=0\n    local\
    \ res_str=\"\"\n    local res_str_len=0\n    local res_str_len_max=0\n    local\
    \ res_str_len_max_str=\"\"\n    local res_str_len_max_str_len=0\n    local res_str_len_max_str_len_max=0\n\
    \    local res_str_len_max_str_len_max_str=\"\"\n    local res_str_len_max_str_len_max_str_len=0\n\
    \    local res_str_len_max_str_len_max_str_len_max=0\n    local res_str_len_max_str_len_max_str_len_max_str=\"\
    \"\n    local res_str_len_max_str_len_max_str_len_max_str_len=0\n    local res_str_len_max_str_len_max_str_len_max_str_len_max=0\n\
    \    local res_str_len_max_str_len_max_str_len_max_str_len_max_str=\"\"\n    local\
    \ res_str_len_max_str_len_max_str_len_max_str_len_max_str_len=0\n    local res_str_len_max_str_len_max_str_len_max_str_len_max_str_len_max=0\n\
    \    local res_str_len_max_str_len_max_str_len_max_str_len_max_str_len_max_str=\"\
    \"\n    local res_str_len_max_str_len_max_str_len_max_str_len_max_str_len_max",
  "    local -a lst=($(echo \"$1\" | tr ' ' '\\n'))\n    local -a res=()\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=${#lst[@]}\n  \
    \  for ((i=0; i<len; i++)); do\n        if [[ \"${lst[i]}\" == \"$2\" ]]; then\n\
    \            res[k]=\"[\\\"$i\\\", \\\"$j\\\"]\"\n            ((k++))\n      \
    \  fi\n        if [[ \"${lst[i]}\" == \"\\n\" ]]; then\n            ((j++))\n\
    \        fi\n    done\n    echo \"${res[@]}\"", "    local -a row\n    local -a\
    \ col\n    local -a result\n    local -a tmp\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local", "    local lst=\"$1\"\n    local x=\"\
    $2\"\n    local row=0\n    local col=0\n    local result=()\n    while read -r\
    \ line; do\n        col=0\n        for y in $line; do\n            if [[ \"$y\"\
    \ == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\"\
    )\n            fi\n            col=$((col + 1))\n        done\n        row=$((row\
    \ + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"", "    local -a rows\n\
    \    local -a cols\n    local -a result\n    local -a row\n    local -a col\n\
    \    local -a row_col\n    local -a row_col_sorted\n    local -a row_col_sorted_desc\n\
    \    local -a row_col_sorted_desc_str\n    local -a row_col_sorted_desc_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str\n    local -a row_col_sorted_desc_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str\n    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str\n    local\
    \ -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted\n    local\
    \ -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str\n   \
    \ local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a row_col", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n\
    \    local col=0\n    local result=()\n    while read -r line; do\n        col=0\n\
    \        for i in $line; do\n            if [ \"$i\" == \"$x\" ]; then\n     \
    \           result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n     \
    \       col=$((col+1))\n        done\n        row=$((row+1))\n    done <<< \"\
    $lst\"\n    echo \"${result[@]}\"", "    local lst=$1\n    local x=$2\n    local\
    \ -a res\n    local -a row\n    local -a col\n    local -a row_col\n    local\
    \ -a row_col_rev\n    local -a row_col_rev_str\n    local -a row_col_rev_str_sorted\n\
    \    local -a row_col_rev_str_sorted_rev\n    local -a row_col_rev_str_sorted_rev_str\n\
    \    local -a row_col_rev_str_sorted_rev_str_sorted\n    local -a row_col_rev_str_sorted_rev_str_sorted_rev\n\
    \    local -a row_col_rev_str_sorted_rev_str_sorted_rev_str\n    local -a row_col_rev_str_sorted_rev_str_sorted_rev_str_sorted\n\
    \    local -a row_col_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev\n    local\
    \ -a row_col_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str\n    local -a\
    \ row_col_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted\n    local\
    \ -a row_col_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev\n\
    \    local -a row_col_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str\n\
    \    local -a row_col_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted\n\
    \    local -a row_col_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev\n\
    \    local -a row_col_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str", " \
    \   local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local\
    \ res=()\n    for i in $lst; do\n        if [[ $i == $x ]]; then\n           \
    \ res+=([\"$row,$col\"])\n        fi\n        if [[ $i == $'\\n' ]]; then\n  \
    \          row=$((row+1))\n            col=0\n        else\n            col=$((col+1))\n\
    \        fi\n    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -t ',' -k\
    \ 1n -k 2nr | tr '\\n' ' '", "    local lst=\"$1\"\n    local x=\"$2\"\n    local\
    \ row=0\n    local col=0\n    local res=()\n    local row_res=()\n    while read\
    \ -r line; do\n        col=0\n        row_res=()\n        for y in $line; do\n\
    \            if [[ \"$y\" == \"$x\" ]]; then\n                row_res+=(\"\\\"\
    $row\\\" \\\"$col\\\"\")\n            fi\n            col=$((col+1))\n       \
    \ done\n        if [[ \"${#row_res[@]}\" -gt 0 ]]; then\n            res+=(\"\
    [${row_res[*]}]\")\n        fi\n        row=$((row+1))\n    done <<< \"$lst\"\n\
    \    echo \"[${res[*]}]\"", "  local lst=\"$1\"\n  local x=\"$2\"\n  local row=0\n\
    \  local col=0\n  local result=()\n  while read -r line; do\n    col=0\n    for\
    \ i in $line; do\n      if [[ \"$i\" == \"$x\" ]]; then\n        result+=(\"[\\\
    \"$row\\\", \\\"$col\\\"]\")\n      fi\n      col=$((col+1))\n    done\n    row=$((row+1))\n\
    \  done <<< \"$lst\"\n  echo \"${result[@]}\"", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local row=0\n    local col=0\n    local res=()\n    while read\
    \ -r line; do\n        col=0\n        for i in $line; do\n            if [ \"\
    $i\" = \"$x\" ]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\"\
    )\n            fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\"", "    local -a lst=()\n    local\
    \ -a row=()\n    local -a col=()\n    local -a res=()\n    local -a tmp=()\n \
    \   local -a tmp2=()\n    local -a tmp3=()\n    local -a tmp4=()\n    local -a\
    \ tmp5=()\n    local -a tmp6=()\n    local -a tmp7=()\n    local -a tmp8=()\n\
    \    local -a tmp9=()\n    local -a tmp10=()\n    local -a tmp11=()\n    local\
    \ -a tmp12=()\n    local -a tmp13=()\n    local -a tmp14=()\n    local -a tmp15=()\n\
    \    local -a tmp16=()\n    local -a tmp17=()\n    local -a tmp18=()\n    local\
    \ -a tmp19=()\n    local -a tmp20=()\n    local -a tmp21=()\n    local -a tmp22=()\n\
    \    local -a tmp23=()\n    local -a tmp24=()\n    local -a tmp25=()\n    local\
    \ -a tmp26=()\n    local -a tmp27=()\n    local -a tmp28=()\n    local -a tmp29=()\n\
    \    local -a tmp30=()\n    local -a tmp31=()\n    local -a tmp32=()\n    local\
    \ -a tmp33=()\n    local -a tmp34=()\n    local -a tmp35=()\n    local -a tmp36=()\n\
    \    local -a tmp37=()\n    local -a tmp38=()\n    local -a tmp39=()\n    local\
    \ -a tmp40=()\n    local -a tmp41=()\n    local -a tmp42=()\n    local -a tmp43=()\n\
    \    local -a tmp44=()\n    local -a tmp45=()\n    local -a tmp46=()\n    local\
    \ -a tmp47=()\n    local -a tmp48=()\n    local -a tmp49=()\n    local -a tmp50=()\n\
    \    local -a tmp51=()\n    local -a tmp52=()\n    local -a tmp53=()\n    local",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    while read -r line; do\n        col=0\n        for i in $line; do\n     \
    \       if [[ $i == $x ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\
    \"]\")\n            fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\"", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local -a res\n    local -a row\n    local -a col\n    local -a\
    \ row_col\n    local -a row_col_sorted\n    local i=0\n    local j=0\n    local\
    \ -a lst_arr=($(echo \"$lst\" | tr ' ' '\\n'))\n    local lst_arr_len=${#lst_arr[@]}\n\
    \    local row_len=0\n    local row_col_len=0\n    for ((i=0; i<lst_arr_len; i++));\
    \ do\n        if [[ ${lst_arr[$i]} == $x ]]; then\n            row+=($j)\n   \
    \         col+=($((i - row_len)))\n        elif [[ ${lst_arr[$i]} == \"\" ]];\
    \ then\n            row_len=$((row_len + row_len + 1))\n            j=$((j + 1))\n\
    \        fi\n    done\n    row_col=($(paste -d ' ' <(printf \"%s\\n\" \"${row[@]}\"\
    ) <(printf \"%s\\n\" \"${col[@]}\")))\n    row_col_sorted=($(echo \"${row_col[@]}\"\
    \ | tr ' ' '\\n' | sort -k1 -n -k2 -r | tr '\\n' ' '))\n    row_col_len=${#row_col_sorted[@]}\n\
    \    for ((i=0; i<row_col_len; i++)); do\n        res+=($(printf '[\"%s\", \"\
    %s\"]' \"${row_col_sorted[$i]}\" \"${row_col_sorted[$((i + 1))]}\"))\n       \
    \ i=$((i + 1))\n    done\n    echo \"${res[@]}\"", "    local lst=$1\n    local\
    \ x=$2\n    local row=0\n    local col=0\n    local res=()\n    while read line;\
    \ do\n        col=0\n        for i in $line; do\n            if [ \"$i\" == \"\
    $x\" ]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n      \
    \      fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -t '\"' -k\
    \ 1n -k 3nr | tr '\\n' ' '", "    local lst=$1\n    local x=$2\n    local -a res=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=0\n  \
    \  local -i len2=0\n    local -a row=()\n    local -a row2=()\n    local -a row3=()\n\
    \    local -a row4=()\n    local -a row5=()\n    local -a row6=()\n    local -a\
    \ row7=()\n    local -a row8=()\n    local -a row9=()\n    local -a row10=()\n\
    \    local -a row11=()\n    local -a row12=()\n    local -a row13=()\n    local\
    \ -a row14=()\n    local -a row15=()\n    local -a row16=()\n    local -a row17=()\n\
    \    local -a row18=()\n    local -a row19=()\n    local -a row20=()\n    local\
    \ -a row21=()\n    local -a row22=()\n    local -a row23=()\n    local -a row24=()\n\
    \    local -a row25=()\n    local -a row26=()\n    local -a row27=()\n    local\
    \ -a row28=()\n    local -a row29=()\n    local -a row30=()\n    local -a row31=()\n\
    \    local -a row32=()\n    local -a row33=()\n    local -a row34=()\n    local\
    \ -a row35=()\n    local -a row36=()\n    local -a row37=()\n    local -a row38=()\n\
    \    local -a row39=()\n    local -a row40=()\n    local -a row41=()\n    local\
    \ -a row42=()\n    local -a row43=()\n    local -a row44=()\n    local -a row45=()\n\
    \    local -a row46=()\n    local -a row47=()\n    local -a row48=()\n    local\
    \ -a row49=()\n    local -a row50=()\n", "    local lst=$1\n    local x=$2\n \
    \   local -a rows\n    local -a columns\n    local -a result\n    local i=0\n\
    \    local j=0\n    local k=0\n    local row\n    local column\n    local -a row_array\n\
    \    local -a column_array\n    local -a row_column_array\n    local row_column_array_length\n\
    \    local row_column_array_length_minus_one\n    local row_column_array_length_minus_two\n\
    \    local row_column_array_length_minus_three\n    local row_column_array_length_minus_four\n\
    \    local row_column_array_length_minus_five\n    local row_column_array_length_minus_six\n\
    \    local row_column_array_length_minus_seven\n    local row_column_array_length_minus_eight\n\
    \    local row_column_array_length_minus_nine\n    local row_column_array_length_minus_ten\n\
    \    local row_column_array_length_minus_eleven\n    local row_column_array_length_minus_twelve\n\
    \    local row_column_array_length_minus_thirteen\n    local row_column_array_length_minus_fourteen\n\
    \    local row_column_array_length_minus_fifteen\n    local row_column_array_length_minus_sixteen\n\
    \    local row_column_array_length_minus_seventeen\n    local row_column_array_length_minus_eighteen\n\
    \    local row_column_array_length_minus_nineteen\n    local row_column_array_length_minus_twenty\n\
    \    local row_column_array_length_minus_twenty_one\n    local row_column_array_length_minus_twenty_two\n\
    \    local row_column_array_length_minus_twenty_three\n    local row_column_array_length_minus_twenty_four\n\
    \    local row_column_array_length_minus_twenty_five\n    local row_column_array_length_minus_twenty_six\n\
    \    local row_column_array_length_minus_twenty_seven\n    local row_column_array_",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local -a res\n    local -a row\n\
    \    local -a rows\n    local -a cols\n    local -a col\n    local -a col_idx\n\
    \    local -a row_idx\n    local -a col_idx_sorted\n    local -a row_idx_sorted\n\
    \    local -a res_sorted\n    local -a res_sorted_col\n    local -a res_sorted_row\n\
    \    local -a res_sorted_col_idx\n    local -a res_sorted_row_idx\n    local -a\
    \ res_sorted_col_idx_sorted\n    local -a res_sorted_row_idx_sorted\n    local\
    \ -a res_sorted_col_idx_sorted_sorted\n    local -a res_sorted_row_idx_sorted_sorted\n\
    \    local -a res_sorted_col_idx_sorted_sorted_sorted\n    local -a res_sorted_row_idx_sorted_sorted_sorted\n\
    \    local -a res_sorted_col_idx_sorted_sorted_sorted_sorted\n    local -a res_sorted_row_idx_sorted_sorted_sorted_sorted\n\
    \    local -a res_sorted_col_idx_sorted_sorted_sorted_sorted_sorted\n    local\
    \ -a res_sorted_row_idx_sorted_sorted_sorted_sorted_sorted\n    local -a res_sorted_col_idx_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a res_sorted_row_idx_sorted_sorted_sorted_sorted_sorted_sorted\n \
    \   local -a res_sorted_col_idx_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a res_sorted_row_idx_sorted_sorted_sorted_sorted_sorted_sorted_s",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local res=()\n    local row_res=()\n    local row_res_sorted=()\n    local\
    \ row_res_sorted_rev=()\n    local row_res_sorted_rev_str=()\n    local res_str=()\n\
    \    local res_str_sorted=()\n    local res_str_sorted_rev=()\n    local res_str_sorted_rev_str=()\n\
    \    local res_str_sorted_rev_str_str=()\n    local res_str_sorted_rev_str_str_str=()\n\
    \    local res_str_sorted_rev_str_str_str_str=()\n    local res_str_sorted_rev_str_str_str_str_str=()\n\
    \    local res_str_sorted_rev_str_str_str_str_str_str=()\n    local res_str_sorted_rev_str_str_str_str_str_str_str=()\n\
    \    local res_str_sorted_rev_str_str_str_str_str_str_str_str=()\n    local res_str_sorted_rev_str_str_str_str_str_str_str_str_str=()\n\
    \    local res_str_sorted_rev_str_str_str_str_str_str_str_str_str_str=()\n   \
    \ local res_str_sorted_rev_str_str_str_str_str_str_str_str_str_str_str=()\n  \
    \  local res_str_sorted_rev_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local res_str_sorted_rev_str_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local res_str_sorted_rev_str_str_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local res_str", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local result=()\n    for i in $lst; do\n        if [[ $i == $x ]];\
    \ then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n \
    \       if [[ $i == \"\" ]]; then\n            row=$((row + 1))\n            col=0\n\
    \        else\n            col=$((col + 1))\n        fi\n    done\n    echo \"\
    ${result[@]}\" | tr \" \" \"\\n\" | sort -t '\"' -k 2 -n -r | sort -t '\"' -k\
    \ 1 -n", "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n\
    \    local res=()\n    while read -r line; do\n        col=0\n        for i in\
    \ $line; do\n            if [[ $i -eq $x ]]; then\n                res+=(\"[\\\
    \"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n   \
    \     done\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${res[@]}\"",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local rows=()\n    local row=()\n\
    \    local i=0\n    local j=0\n    local k=0\n    local row_i=0\n    local row_j=0\n\
    \    local row_k=0\n    local row_l=0\n    local row_m=0\n    local row_n=0\n\
    \    local row_o=0\n    local row_p=0\n    local row_q=0\n    local row_r=0\n\
    \    local row_s=0\n    local row_t=0\n    local row_u=0\n    local row_v=0\n\
    \    local row_w=0\n    local row_x=0\n    local row_y=0\n    local row_z=0\n\
    \    local row_aa=0\n    local row_ab=0\n    local row_ac=0\n    local row_ad=0\n\
    \    local row_ae=0\n    local row_af=0\n    local row_ag=0\n    local row_ah=0\n\
    \    local row_ai=0\n    local row_aj=0\n    local row_ak=0\n    local row_al=0\n\
    \    local row_am=0\n    local row_an=0\n    local row_ao=0\n    local row_ap=0\n\
    \    local row_aq=0\n    local row_ar=0\n    local row_as=0\n    local row_at=0\n\
    \    local row_au=0\n    local row_av=0\n    local row_aw=0\n    local row_ax=0\n\
    \    local row_ay=0\n    local row_az=0\n    local row_ba=0\n    local row_bb=0\n\
    \    local row_bc=0\n    local row_bd=0\n    local row_be=0\n    local row_bf=0\n\
    \    local row_bg=0\n    local row_bh=0\n    local row_bi=0\n    local row_bj=0\n\
    \    local row_bk=0\n    local row_bl=0\n    local row_bm=0\n    local row_bn=0",
  "    local lst=$1\n    local x=$2\n    local -a res=()\n    local -a row\n    local\
    \ -a col\n    local -a rows\n    local -a cols\n    local -a row_col\n    local\
    \ -a row_cols\n    local -a row_col_str\n    local -a row_cols_str\n    local\
    \ -a row_col_str_sorted\n    local -a row_cols_str_sorted\n    local -a row_col_str_sorted_rev\n\
    \    local -a row_cols_str_sorted_rev\n    local -a row_col_str_sorted_rev_str\n\
    \    local -a row_cols_str_sorted_rev_str\n    local -a row_col_str_sorted_rev_str_sorted\n\
    \    local -a row_cols_str_sorted_rev_str_sorted\n    local -a row_col_str_sorted_rev_str_sorted_rev\n\
    \    local -a row_cols_str_sorted_rev_str_sorted_rev\n    local -a row_col_str_sorted_rev_str_sorted_rev_str\n\
    \    local -a row_cols_str_sorted_rev_str_sorted_rev_str\n    local -a row_col_str_sorted_rev_str_sorted_rev_str_sorted\n\
    \    local -a row_cols_str_sorted_rev_str_sorted_rev_str_sorted\n    local -a\
    \ row_col_str_sorted_rev_str_sorted_rev_str_sorted_rev\n    local -a row_cols_str_sorted_rev_str_sorted_rev_str_sorted_rev\n\
    \    local -a row_col_str_sorted_rev_str_sorted_rev_str_sorted_rev_str\n    local\
    \ -a row_cols_str_sorted_rev_str_sorted_rev_str_sorted_rev_str\n    local -a row_col_str_sorted_rev_str_sorted_rev_",
  "    local -a arr\n    local -a row\n    local -a col\n    local -a res\n    local\
    \ -a tmp\n    local -a tmp2\n    local -a tmp3\n    local -a tmp4\n    local -a\
    \ tmp5\n    local -a tmp6\n    local -a tmp7\n    local -a tmp8\n    local -a\
    \ tmp9\n    local -a tmp10\n    local -a tmp11\n    local -a tmp12\n    local\
    \ -a tmp13\n    local -a tmp14\n    local -a tmp15\n    local -a tmp16\n    local\
    \ -a tmp17\n    local -a tmp18\n    local -a tmp19\n    local -a tmp20\n    local\
    \ -a tmp21\n    local -a tmp22\n    local -a tmp23\n    local -a tmp24\n    local\
    \ -a tmp25\n    local -a tmp26\n    local -a tmp27\n    local -a tmp28\n    local\
    \ -a tmp29\n    local -a tmp30\n    local -a tmp31\n    local -a tmp32\n    local\
    \ -a tmp33\n    local -a tmp34\n    local -a tmp35\n    local -a tmp36\n    local\
    \ -a tmp37\n    local -a tmp38\n    local -a tmp39\n    local -a tmp40\n    local\
    \ -a tmp41\n    local -a tmp42\n    local -a tmp43\n    local -a tmp44\n    local\
    \ -a tmp45\n    local -a tmp46\n    local -a tmp47\n    local -a tmp48\n    local\
    \ -a tmp49\n    local -a tmp50\n    local -a tmp51\n    local -a tmp52\n    local\
    \ -a tmp53\n    local -a tmp54\n    local -a tmp55\n    local -a tmp56\n    local\
    \ -a tmp57\n    local -a tmp58\n    local -a tmp59\n    local -a tmp60\n    local\
    \ -a tmp61\n    local -a tmp62\n    local -a tmp63\n    local -a tmp64\n    local\
    \ -a tmp65\n    local -a tmp66\n    local -a tmp67\n    local -a tmp68\n    local\
    \ -a tmp69\n    local -a tmp", "    local lst=\"$1\"\n    local x=\"$2\"\n   \
    \ local row=0\n    local col=0\n    local res=()\n    local row_res=()\n    while\
    \ read -r line; do\n        col=0\n        row_res=()\n        for y in $line;\
    \ do\n            if [[ \"$y\" == \"$x\" ]]; then\n                row_res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n\
    \        done\n        if [[ ${#row_res[@]} -gt 0 ]]; then\n            res+=(\"\
    ${row_res[@]}\")\n        fi\n        row=$((row+1))\n    done <<< \"$lst\"\n\
    \    echo \"${res[@]}\"", "    local lst=$1\n    local x=$2\n    local row=0\n\
    \    local col=0\n    local res=()\n    while read -r line; do\n        col=0\n\
    \        for n in $line; do\n            if [[ $n -eq $x ]]; then\n          \
    \      res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col\
    \ + 1))\n        done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    echo\
    \ \"${res[@]}\"", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local res=()\n    for i in $(echo \"$lst\" | tr \" \" \"\\n\"); do\n\
    \        if [[ $i == $x ]]; then\n            res+=(\"[\\\"$row\\\", \\\"$col\\\
    \"]\")\n        fi\n        if [[ $i == $'\\n' ]]; then\n            row=$((row\
    \ + 1))\n            col=0\n        else\n            col=$((col + 1))\n     \
    \   fi\n    done\n    echo \"${res[@]}\" | tr \" \" \"\\n\" | sort -t \"\\\"\"\
    \ -k 1n -k 3nr | tr \"\\n\" \" \"", "    local lst=$1\n    local x=$2\n    local\
    \ row=0\n    local col=0\n    local res=()\n    while read -r line; do\n     \
    \   col=0\n        for i in $line; do\n            if [[ $i -eq $x ]]; then\n\
    \                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n   \
    \         col=$((col+1))\n        done\n        row=$((row+1))\n    done <<< \"\
    $lst\"\n    echo \"${res[@]}\"", "    local lst=\"$1\"\n    local x=\"$2\"\n \
    \   local row=0\n    local col=0\n    local result=()\n    while read -r line;\
    \ do\n        col=0\n        for i in $line; do\n            if [[ \"$i\" == \"\
    $x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n  \
    \          fi\n            col=$((col + 1))\n        done\n        row=$((row\
    \ + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"", "    local -a row\n\
    \    local -a col\n    local -a result\n    local -a lines\n    local -a line\n\
    \    local -a coordinates\n    local -a coordinate\n    local -a sorted_coordinates\n\
    \    local -a sorted_coordinate\n    local -a sorted_result\n    local -a sorted_row\n\
    \    local -a sorted_col\n    local -a sorted_lines\n    local -a sorted_line\n\
    \    local -a sorted_coordinates\n    local -a sorted_coordinate\n    local -a\
    \ sorted_result\n    local -a sorted_row\n    local -a sorted_col\n    local -a\
    \ sorted_lines\n    local -a sorted_line\n    local -a sorted_coordinates\n  \
    \  local -a sorted_coordinate\n    local -a sorted_result\n    local -a sorted_row\n\
    \    local -a sorted_col\n    local -a sorted_lines\n    local -a sorted_line\n\
    \    local -a sorted_coordinates\n    local -a sorted_coordinate\n    local -a\
    \ sorted_result\n    local -a sorted_row\n    local -a sorted_col\n    local -a\
    \ sorted_lines\n    local -a sorted_line\n    local -a sorted_coordinates\n  \
    \  local -a sorted_coordinate\n    local -a sorted_result\n    local -a sorted_row\n\
    \    local -a sorted_col\n    local -a sorted_lines\n    local -a sorted_line\n\
    \    local -a sorted_coordinates\n    local -a sorted_coordinate\n    local -a\
    \ sorted_result\n    local -a sorted_row\n    local -a sorted_col\n    local -a\
    \ sorted_lines\n    local -a sorted_line\n    local -a sorted_coordinates\n  \
    \  local -a sorted_coordinate\n    local -a sorted_result\n    local -a sorted_row\n\
    \    local -a sorted_col\n    local -a sorted_lines\n    local -a sorted_line\n\
    \    local -a sorted_coordinates\n    local -a sorted_coordinate\n    local -a\
    \ sorted_result\n    local -a sorted_row\n    local -a sorted_col\n    local -a\
    \ sorted_lines\n    local -a sorted_line\n    local -a sorted", "    local lst=\"\
    $1\"\n    local x=\"$2\"\n    local -a res\n    local -a row\n    local -a col\n\
    \    local -a row_col\n    local -a row_col_sorted\n    local -a res_sorted\n\
    \    local -a row_col_sorted_rev\n    local -a res_sorted_rev\n    local -a row_col_sorted_rev_str\n\
    \    local -a res_sorted_rev_str\n    local -a res_str\n    local -a res_str_sorted\n\
    \    local -a res_str_sorted_rev\n    local -a res_str_sorted_rev_str\n    local\
    \ -a res_str_sorted_rev_str_sorted\n    local -a res_str_sorted_rev_str_sorted_rev\n\
    \    local -a res_str_sorted_rev_str_sorted_rev_str\n    local -a res_str_sorted_rev_str_sorted_rev_str_sorted\n\
    \    local -a res_str_sorted_rev_str_sorted_rev_str_sorted_rev\n    local -a res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str\n\
    \    local -a res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted\n  \
    \  local -a res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev\n\
    \    local -a res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str\n\
    \    local -a res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted\n\
    \    local -a res_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev_str_sorted_rev\n\
    \    local -a res_str_sorted_rev_str_sorted_rev_str_sorted_rev", "    local lst=$1\n\
    \    local x=$2\n    local -a rows\n    local -a cols\n    local -a row\n    local\
    \ -a col\n    local -a res\n    local -a res_row\n    local -a res_col\n    local\
    \ -a res_row_col\n    local -a res_row_col_str\n    local -a res_row_col_str_quoted\n\
    \    local -a res_row_col_str_quoted_str\n    local -a res_row_col_str_quoted_str_quoted\n\
    \    local -a res_row_col_str_quoted_str_quoted_str\n    local -a res_row_col_str_quoted_str_quoted_str_quoted\n\
    \    local -a res_row_col_str_quoted_str_quoted_str_quoted_str\n    local -a res_row_col_str_quoted_str_quoted_str_quoted_str_quoted\n\
    \    local -a res_row_col_str_quoted_str_quoted_str_quoted_str_quoted_str\n  \
    \  local -a res_row_col_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted\n\
    \    local -a res_row_col_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str\n\
    \    local -a res_row_col_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted\n\
    \    local -a res_row_col_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str\n\
    \    local -a res_row_col_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted\n\
    \    local -a res_row_col_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str_quoted_str_",
  "    local lst=$1\n    local x=$2\n    local -a rows\n    local -a cols\n    local\
    \ -a res\n    local -a row\n    local -a col\n    local -a r\n    local -a c\n\
    \    local -a i\n    local -a j\n    local -a k\n    local -a tmp\n    local -a\
    \ tmp_r\n    local -a tmp_c\n    local -a tmp_i\n    local -a tmp_j\n    local\
    \ -a tmp_k\n    local -a tmp_res\n    local -a tmp_row\n    local -a tmp_col\n\
    \    local -a tmp_rows\n    local -a tmp_cols\n    local -a tmp_res\n    local\
    \ -a tmp_row\n    local -a tmp_col\n    local -a tmp_rows\n    local -a tmp_cols\n\
    \    local -a tmp_res\n    local -a tmp_row\n    local -a tmp_col\n    local -a\
    \ tmp_rows\n    local -a tmp_cols\n    local -a tmp_res\n    local -a tmp_row\n\
    \    local -a tmp_col\n    local -a tmp_rows\n    local -a tmp_cols\n    local\
    \ -a tmp_res\n    local -a tmp_row\n    local -a tmp_col\n    local -a tmp_rows\n\
    \    local -a tmp_cols\n    local -a tmp_res\n    local -a tmp_row\n    local\
    \ -a tmp_col\n    local -a tmp_rows\n    local -a tmp_cols\n    local -a tmp_res\n\
    \    local -a tmp_row\n    local -a tmp_col\n    local -a tmp_rows\n    local\
    \ -a tmp_cols\n    local -a tmp_res\n    local -a tmp_row\n    local -a tmp_col\n\
    \    local -a tmp_rows\n    local -a tmp_cols\n    local -a tmp_res\n    local\
    \ -a tmp_row\n    local -a tmp_col\n    local -a tmp_rows\n    local -a tmp_cols\n\
    \    local -a tmp_res\n    local -a tmp_row\n    local -a tmp_", "  local lst=\"\
    $1\"\n  local x=\"$2\"\n  local row=0\n  local col=0\n  local result=()\n  while\
    \ read -r line; do\n    col=0\n    for i in $line; do\n      if [[ \"$i\" == \"\
    $x\" ]]; then\n        result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n      fi\n\
    \      col=$((col+1))\n    done\n    row=$((row+1))\n  done <<< \"$lst\"\n  echo\
    \ \"${result[@]}\"", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local res=()\n    for i in $lst; do\n        if [[ $i == $x ]]; then\n\
    \            res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[\
    \ $i == \"\" ]]; then\n            ((row++))\n            col=0\n        else\n\
    \            ((col++))\n        fi\n    done\n    echo \"${res[@]}\" | tr ' '\
    \ ',' | sed 's/^/[/' | sed 's/$/]/'", "    local lst=$1\n    local x=$2\n    local\
    \ -a result\n    local -a row\n    local -a col\n    local -a row_col\n    local\
    \ -a row_col_sorted\n    local -a row_col_sorted_desc\n    local -a row_col_sorted_desc_str\n\
    \    local -a row_col_sorted_desc_str_joined\n    local -a row_col_sorted_desc_str_joined_quoted\n\
    \    local -a row_col_sorted_desc_str_joined_quoted_joined\n    local -a row_col_sorted_desc_str_joined_quoted_joined_quoted\n\
    \    local -a row_col_sorted_desc_str_joined_quoted_joined_quoted_joined\n   \
    \ local -a row_col_sorted_desc_str_joined_quoted_joined_quoted_joined_quoted\n\
    \    local -a row_col_sorted_desc_str_joined_quoted_joined_quoted_joined_quoted_joined\n\
    \    local -a row_col_sorted_desc_str_joined_quoted_joined_quoted_joined_quoted_joined_quoted\n\
    \    local -a row_col_sorted_desc_str_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined\n\
    \    local -a row_col_sorted_desc_str_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted\n\
    \    local -a row_col_sorted_desc_str_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined\n\
    \    local -a row_col_sorted_desc_str_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted\n\
    \    local -a row_col_sorted_desc_str_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined_quoted_joined\n\
    \    local -a row_col_sorted_desc_str", "    local lst=$1\n    local x=$2\n  \
    \  local i=0\n    local j=0\n    local res=()\n    for row in $lst; do\n     \
    \   j=0\n        for col in $row; do\n            if [ \"$col\" == \"$x\" ]; then\n\
    \                res+=(\"[\\\"$i\\\", \\\"$j\\\"]\")\n            fi\n       \
    \     j=$((j+1))\n        done\n        i=$((i+1))\n    done\n    echo \"${res[@]}\"\
    \ | sort -t '\"' -k1,1n -k3,3nr", "    local lst=$1\n    local x=$2\n    local\
    \ -a res=()\n    local -a rows=()\n    local -a cols=()\n    local -a row=()\n\
    \    local -a col=()\n    local -a tmp=()\n    local -a tmp2=()\n    local -a\
    \ tmp3=()\n    local -a tmp4=()\n    local -a tmp5=()\n    local -a tmp6=()\n\
    \    local -a tmp7=()\n    local -a tmp8=()\n    local -a tmp9=()\n    local -a\
    \ tmp10=()\n    local -a tmp11=()\n    local -a tmp12=()\n    local -a tmp13=()\n\
    \    local -a tmp14=()\n    local -a tmp15=()\n    local -a tmp16=()\n    local\
    \ -a tmp17=()\n    local -a tmp18=()\n    local -a tmp19=()\n    local -a tmp20=()\n\
    \    local -a tmp21=()\n    local -a tmp22=()\n    local -a tmp23=()\n    local\
    \ -a tmp24=()\n    local -a tmp25=()\n    local -a tmp26=()\n    local -a tmp27=()\n\
    \    local -a tmp28=()\n    local -a tmp29=()\n    local -a tmp30=()\n    local\
    \ -a tmp31=()\n    local -a tmp32=()\n    local -a tmp33=()\n    local -a tmp34=()\n\
    \    local -a tmp35=()\n    local -a tmp36=()\n    local -a tmp37=()\n    local\
    \ -a tmp38=()\n    local -a tmp39=()\n    local -a tmp40=()\n    local -a tmp41=()\n\
    \    local -a tmp42=()\n    local -a tmp43=()\n    local -a tmp44=()\n    local\
    \ -a tmp45=()\n    local -a tmp46=()\n    local -a tmp47=()\n    local -a tmp48=()\n\
    \    local -a tmp49=()\n    local -a tmp50=()\n    local -a tmp51=()", "    local\
    \ lst=\"$1\"\n    local x=\"$2\"\n    local -a rows\n    local -a row\n    local\
    \ -a result\n    local -i i\n    local -i j\n    local -i k\n    local -i n\n\
    \    local -i m\n    local -i p\n    local -i q\n    local -i r\n    local -i\
    \ s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local\
    \ -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local\
    \ -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local\
    \ -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local", "  local lst=\"$1\"\n  local x=\"$2\"\n  local -a res=()\n\
    \  local -a row=()\n  local -a rows=()\n  local -a cols=()\n  local -a col=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local -i n=0\n  local -i m=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local i=0\n    local j=0\n    local row=\"\"\n    local rows=()\n\
    \    local cols=()\n    local res=()\n    while read -r row; do\n        rows[i]=\"\
    $row\"\n        i=$((i+1))\n    done <<< \"$lst\"\n    for ((i=0; i<${#rows[@]};\
    \ i++)); do\n        row=\"${rows[i]}\"\n        j=0\n        while read -r col;\
    \ do\n            if [[ \"$col\" == \"$x\" ]]; then\n                cols[j]=\"\
    $i\"\n                j=$((j+1))\n            fi\n        done <<< \"$row\"\n\
    \    done\n    for ((i=0; i<${#cols[@]}; i++)); do\n        res[i]=\"[\\\"${cols[i]}\\\
    \"]\"\n    done\n    echo \"${res[@]}\"", "    local lst=\"$1\"\n    local x=\"\
    $2\"\n    local -a res\n    local -i i=0\n    local -i j=0\n    while read -r\
    \ line; do\n        j=0\n        for y in $line; do\n            if [[ \"$y\"\
    \ == \"$x\" ]]; then\n                res+=(\"[\\\"$i\\\", \\\"$j\\\"]\")\n  \
    \          fi\n            ((j++))\n        done\n        ((i++))\n    done <<<\
    \ \"$lst\"\n    echo \"${res[@]}\"", "    local -a lst=()\n    local -a row=()\n\
    \    local -a col=()\n    local -a res=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i n=0\n    local -i m=0\n    local -i x=$2\n   \
    \ local -i y=0\n    local -i z=0\n    local -i w=0\n    local -i p=0\n    local\
    \ -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n\
    \    local -i v=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n    local\
    \ -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i aa=0\n    local -i bb=0\n\
    \    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n\
    \    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n\
    \    local -i ooo=0\n    local -i ppp=0\n    local -i qqq=0\n    local -i rrr=0\n\
    \    local -i sss=", "    local lst=$1\n    local x=$2\n    local row=0\n    local\
    \ col=0\n    local res=()\n    while read -r line; do\n        col=0\n       \
    \ for y in $line; do\n            if [[ $y -eq $x ]]; then\n                res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n\
    \        done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${res[@]}\"",
  "    local lst=$1\n    local x=$2\n    local -a rows\n    local -a row\n    local\
    \ -a res\n    local -a row_res\n    local -a row_res_sorted\n    local -a res_sorted\n\
    \    local -a res_sorted_rev\n    local -a row_res_sorted_rev\n    local -a row_res_sorted_rev_str\n\
    \    local -a res_sorted_rev_str\n    local -a res_sorted_rev_str_str\n    local\
    \ -a res_sorted_rev_str_str_str\n    local -a res_sorted_rev_str_str_str_str\n\
    \    local -a res_sorted_rev_str_str_str_str_str\n    local -a res_sorted_rev_str_str_str_str_str_str\n\
    \    local -a res_sorted_rev_str_str_str_str_str_str_str\n    local -a res_sorted_rev_str_str_str_str_str_str_str_str\n\
    \    local -a res_sorted_rev_str_str_str_str_str_str_str_str_str\n    local -a\
    \ res_sorted_rev_str_str_str_str_str_str_str_str_str_str\n    local -a res_sorted_rev_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a res_sorted_rev_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a res_sorted_rev_str_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a res_sorted_rev_str_str_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a res_sorted_rev_str_str_str_str_str_str_str_str_str_str_str_str_str_str_str\n\
    \    local -a res_sorted", "    local lst=$1\n    local x=$2\n    local -a rows\n\
    \    local -a row\n    local -a row_idx\n    local -a col_idx\n    local -a row_idx_sorted\n\
    \    local -a col_idx_sorted\n    local -a result\n    local -a result_sorted\n\
    \    local -a result_sorted_sorted\n    local -a result_sorted_sorted_sorted\n\
    \    local -a result_sorted_sorted_sorted_sorted\n    local -a result_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a result_sorted_sorted_sorted_sorted_sorted_sorted\n    local -a result_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a result_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a result_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a result_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a result_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a result_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a result_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a result_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a result_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    for i in $lst; do\n        if [[ $i == $x ]]; then\n            res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == \"\" ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${res[@]}\" | tr ' ' ',' | sed 's/^/[/'\
    \ | sed 's/$/]/'", "  local lst=$1\n  local x=$2\n  local -a result=()\n  local\
    \ -a rows=()\n  local -a columns=()\n  local -a row=()\n  local -a column=()\n\
    \  local -a row_column=()\n  local -a row_columns=()\n  local -a row_columns_sorted=()\n\
    \  local -a rows_columns=()\n  local -a rows_columns_sorted=()\n  local -a rows_columns_sorted_reversed=()\n\
    \  local -a rows_columns_sorted_reversed_string=()\n  local -a rows_columns_sorted_reversed_string_quoted=()\n\
    \  local -a rows_columns_sorted_reversed_string_quoted_joined=()\n  local -a rows_columns_sorted_reversed_string_quoted_joined_string=()\n\
    \  local -a rows_columns_sorted_reversed_string_quoted_joined_string_quoted=()\n\
    \  local -a rows_columns_sorted_reversed_string_quoted_joined_string_quoted_joined=()\n\
    \  local -a rows_columns_sorted_reversed_string_quoted_joined_string_quoted_joined_string=()\n\
    \  local -a rows_columns_sorted_reversed_string_quoted_joined_string_quoted_joined_string_quoted=()\n\
    \  local -a rows_columns_sorted_reversed_string_quoted_joined_string_quoted_joined_string_quoted_joined=()\n\
    \  local -a rows_columns_sorted_reversed_string_quoted_joined_string_quoted_joined_string_quoted_joined_string=()\n\
    \  local -a rows_columns_sorted_reversed_string_quoted_joined_string_quoted_joined_string_quoted_joined_string_quoted=()\n\
    \  local -a rows_columns_sorted_reversed_string_quoted_joined_string_quoted_",
  "    local lst=$1\n    local x=$2\n    local -a rows\n    local -a cols\n    local\
    \ -a result\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i\
    \ l=0\n    local -i m=0\n    local -i n=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local\
    \ -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n\
    \    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n\
    \    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n   ", "    local\
    \ lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    for i in $lst; do\n        if [[ $i == $x ]]; then\n            res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == \"\" ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${res[@]}\" | sort -t '\"' -k 1n -k\
    \ 3nr", "    local data=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local\
    \ col=0\n    while read line; do\n        col=0\n        for y in $line; do\n\
    \            if [[ \"$y\" == \"$x\" ]]; then\n                echo \"[\\\"$row\\\
    \", \\\"$col\\\"]\"\n            fi\n            col=$((col+1))\n        done\n\
    \        row=$((row+1))\n    done <<< \"$data\" | sort -n -t ',' -k 1 -k 2", " \
    \   local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local\
    \ result=()\n    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n        if [[ $i\
    \ -eq $x ]]; then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n  \
    \      fi\n        col=$((col + 1))\n        if [[ $i == $'\\n' ]]; then\n   \
    \         row=$((row + 1))\n            col=0\n        fi\n    done\n    echo\
    \ \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local -a data=($(echo\
    \ \"$1\" | tr ' ' '\\n'))\n    local -a result=()\n    local -i i=0\n    local\
    \ -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
    \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
    \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n   \
    \ local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local -i ae=0\n   \
    \ local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local -i ai=0\n   \
    \ local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local -i am=0\n   \
    \ local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local -i aq=0\n   \
    \ local -i ar=0\n    local -i as=0\n    local -i at=0\n    local -i au=0\n   \
    \ local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local -i ay=0\n   \
    \ local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local -i bc=0\n   \
    \ local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local -i bg=0\n   \
    \ local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local -i bk=0\n   \
    \ local -i bl=0\n    local -i bm=0\n    local -i bn=0\n    local", "    local\
    \ lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local result=()\n\
    \    while read -r line; do\n        col=0\n        for i in $line; do\n     \
    \       if [[ $i == $x ]]; then\n                result+=([\"$row,$col\"])\n \
    \           fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -t ','\
    \ -k1n -k2nr | tr '\\n' ' '", "  local -a lst\n  local -a row\n  local -a col\n\
    \  local -a result\n  local -a row_result\n  local -a col_result\n  local -a row_col_result\n\
    \  local -a row_col_result_sorted\n  local -a row_col_result_sorted_rev\n  local\
    \ -a result_sorted\n  local -a result_sorted_rev\n  local -a result_sorted_rev_str\n\
    \  local -a result_sorted_rev_str_quoted\n  local -a result_sorted_rev_str_quoted_joined\n\
    \  local -a result_sorted_rev_str_quoted_joined_str\n  local -a result_sorted_rev_str_quoted_joined_str_quoted\n\
    \  local -a result_sorted_rev_str_quoted_joined_str_quoted_joined\n  local -a\
    \ result_sorted_rev_str_quoted_joined_str_quoted_joined_str\n  local -a result_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted\n\
    \  local -a result_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined\n\
    \  local -a result_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str\n\
    \  local -a result_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted\n\
    \  local -a result_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined\n\
    \  local -a result_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str\n\
    \  local -a result_sorted_rev_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted\n\
    \  local -a result_sorted_rev_str_", "    local -a lst\n    local -a row\n   \
    \ local -a col\n    local -a res\n    local -a tmp\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i n\n    local -i m\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n", "    local lst=\"$1\"\
    \n    local x=\"$2\"\n    local row=0\n    local col=0\n    local res=()\n   \
    \ while read -r line; do\n        col=0\n        for word in $line; do\n     \
    \       if [[ \"$word\" == \"$x\" ]]; then\n                res+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n            fi\n            col=$((col+1))\n        done\n\
    \        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${res[@]}\"", "   \
    \ local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n   \
    \ local result=()\n    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n        if\
    \ [[ \"$i\" == \"$x\" ]]; then\n            result+=(\"[\\\"$row\\\", \\\"$col\\\
    \"]\")\n        fi\n        if [[ \"$i\" == \"\" ]]; then\n            row=$((row\
    \ + 1))\n            col=0\n        else\n            col=$((col + 1))\n     \
    \   fi\n    done\n    echo \"${result[@]}\" | tr ' ' ',' | sed 's/^/[/' | sed\
    \ 's/$/]/'", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local\
    \ col=0\n    local result=()\n    while read -r line; do\n        col=0\n    \
    \    for y in $line; do\n            if [ \"$y\" == \"$x\" ]; then\n         \
    \       result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n         \
    \   col=$((col+1))\n        done\n        row=$((row+1))\n    done <<< \"$lst\"\
    \n    echo \"${result[@]}\"", "    local lst=$1\n    local x=$2\n    local row=0\n\
    \    local col=0\n    local result=\"\"\n    while read -r line; do\n        col=0\n\
    \        for i in $line; do\n            if [[ $i -eq $x ]]; then\n          \
    \      result+=\"[\\\"$row\\\", \\\"$col\\\"], \"\n            fi\n          \
    \  col=$((col+1))\n        done\n        row=$((row+1))\n    done <<< \"$lst\"\
    \n    echo \"[${result%, }]\"", "    local lst=\"$1\"\n    local x=\"$2\"\n  \
    \  local row=0\n    local col=0\n    local res=()\n    while read -r line; do\n\
    \        col=0\n        for i in $line; do\n            if [[ \"$i\" == \"$x\"\
    \ ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        \
    \    fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n  \
    \  done <<< \"$lst\"\n    echo \"${res[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n        if [[ $i == $x ]];\
    \ then\n            res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n    \
    \    if [[ $i == $'\\n' ]]; then\n            row=$((row + 1))\n            col=0\n\
    \        else\n            col=$((col + 1))\n        fi\n    done\n    echo \"\
    ${res[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local -a res\n    local -a row\n    local -a col\n    local -a\
    \ row_col\n    local i=0\n    local j=0\n    local k=0\n    local -a arr\n   \
    \ IFS=$'\\n' read -r -a arr <<< \"$lst\"\n    for ((i=0; i<${#arr[@]}; i++));\
    \ do\n        IFS=$' ' read -r -a row <<< \"${arr[$i]}\"\n        for ((j=0; j<${#row[@]};\
    \ j++)); do\n            if [[ \"${row[$j]}\" == \"$x\" ]]; then\n           \
    \     row_col[$k]=\"$i $j\"\n                ((k++))\n            fi\n       \
    \ done\n    done\n    if [[ \"${#row_col[@]}\" -eq 0 ]]; then\n        echo \"\
    []\"\n        return\n    fi\n    IFS=$'\\n' read -r -a row_col <<< \"$(printf\
    \ '%s\\n' \"${row_col[@]}\" | sort -n)\"\n    for ((i=0; i<${#row_col[@]}; i++));\
    \ do\n        IFS=$' ' read -r -a col <<< \"${row_col[$i]}\"\n        res[$i]=\"\
    [\\\"${col[0]}\\\"\"\n        res[$i]=\"${res[$i]}, \\\"${col[1]}\\\"]\"\n   \
    \ done\n    echo \"[${res[*]}]\"", "  local lst=\"$1\"\n  local x=\"$2\"\n  local\
    \ row=0\n  local col=0\n  local res=()\n  while read -r line; do\n    col=0\n\
    \    for y in $line; do\n      if [[ \"$y\" == \"$x\" ]]; then\n        res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n      fi\n      col=$((col + 1))\n    done\n\
    \    row=$((row + 1))\n  done <<< \"$lst\"\n  echo \"${res[@]}\"", "    local\
    \ lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local\
    \ result=()\n    local row_result=()\n    while read -r line; do\n        col=0\n\
    \        row_result=()\n        for y in $line; do\n            if [[ \"$y\" ==\
    \ \"$x\" ]]; then\n                row_result+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n            fi\n            col=$((col+1))\n        done\n        if [[\
    \ \"${#row_result[@]}\" -gt 0 ]]; then\n            result+=(\"${row_result[@]}\"\
    )\n        fi\n        row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    for i in $lst; do\n        if [[ $i == $x ]]; then\n            res+=([\"\
    $row,$col\"]=\"$row,$col\")\n        fi\n        col=$((col+1))\n        if [[\
    \ $i == $'\\n' ]]; then\n            row=$((row+1))\n            col=0\n     \
    \   fi\n    done\n    local -a sorted_res=()\n    for i in \"${!res[@]}\"; do\n\
    \        sorted_res+=($i)\n    done\n    IFS=$'\\n' sorted_res=($(sort <<<\"${sorted_res[*]}\"\
    ))\n    unset IFS\n    local -a res_arr=()\n    for i in \"${sorted_res[@]}\"\
    ; do\n        res_arr+=($(echo \"${res[$i]}\" | tr ',' ' '))\n    done\n    echo\
    \ \"${res_arr[@]}\"", "  local lst=$1\n  local x=$2\n  local row=0\n  local col=0\n\
    \  local result=()\n  for i in $lst; do\n    if [ \"$i\" = \"$x\" ]; then\n  \
    \    result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n    fi\n    if [ \"$i\" = \"\"\
    \ ]; then\n      row=$((row + 1))\n      col=0\n    else\n      col=$((col + 1))\n\
    \    fi\n  done\n  echo \"${result[@]}\"", "    local lst=$1\n    local x=$2\n\
    \    local row=0\n    local col=0\n    local res=()\n    for i in $lst; do\n \
    \       if [ \"$i\" = \"$x\" ]; then\n            res+=(\"[\\\"$row\\\", \\\"\
    $col\\\"]\")\n        fi\n        if [ \"$i\" = \"\\n\" ]; then\n            row=$((row\
    \ + 1))\n            col=0\n        else\n            col=$((col + 1))\n     \
    \   fi\n    done\n    echo \"${res[@]}\" | sort -t '\"' -k 1n -k 3nr", "    local\
    \ lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local\
    \ result=()\n    for line in $lst; do\n        for num in $line; do\n        \
    \    if [[ \"$num\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\
    \", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n        done\n\
    \        col=0\n        row=$((row + 1))\n    done\n    echo \"${result[@]}\"",
  "    local -a lst=()\n    local -a row=()\n    local -a col=()\n    local -a res=()\n\
    \    local -a tmp=()\n    local -a tmp2=()\n    local -a tmp3=()\n    local -a\
    \ tmp4=()\n    local -a tmp5=()\n    local -a tmp6=()\n    local -a tmp7=()\n\
    \    local -a tmp8=()\n    local -a tmp9=()\n    local -a tmp10=()\n    local\
    \ -a tmp11=()\n    local -a tmp12=()\n    local -a tmp13=()\n    local -a tmp14=()\n\
    \    local -a tmp15=()\n    local -a tmp16=()\n    local -a tmp17=()\n    local\
    \ -a tmp18=()\n    local -a tmp19=()\n    local -a tmp20=()\n    local -a tmp21=()\n\
    \    local -a tmp22=()\n    local -a tmp23=()\n    local -a tmp24=()\n    local\
    \ -a tmp25=()\n    local -a tmp26=()\n    local -a tmp27=()\n    local -a tmp28=()\n\
    \    local -a tmp29=()\n    local -a tmp30=()\n    local -a tmp31=()\n    local\
    \ -a tmp32=()\n    local -a tmp33=()\n    local -a tmp34=()\n    local -a tmp35=()\n\
    \    local -a tmp36=()\n    local -a tmp37=()\n    local -a tmp38=()\n    local\
    \ -a tmp39=()\n    local -a tmp40=()\n    local -a tmp41=()\n    local -a tmp42=()\n\
    \    local -a tmp43=()\n    local -a tmp44=()\n    local -a tmp45=()\n    local\
    \ -a tmp46=()\n    local -a tmp47=()\n    local -a tmp48=()\n    local -a tmp49=()\n\
    \    local -a tmp50=()\n    local -a tmp51=()\n    local -a tmp52=()\n    local\
    \ -a tmp53=()\n    local", "    local lst=\"$1\"\n    local x=\"$2\"\n    local\
    \ row=0\n    local col=0\n    local res=()\n    local row_res=()\n    local row_res_str=\"\
    \"\n    local res_str=\"\"\n    for i in $lst; do\n        if [[ \"$i\" == \"\
    $x\" ]]; then\n            row_res+=(\"$row\")\n            row_res+=(\"$col\"\
    )\n        fi\n        if [[ \"$i\" == \"\" ]]; then\n            row=$((row +\
    \ 1))\n            col=0\n            if [[ \"${#row_res[@]}\" -gt 0 ]]; then\n\
    \                row_res_str=$(printf '[\"%s\"]' \"${row_res[@]}\")\n        \
    \        res+=($row_res_str)\n                row_res=()\n            fi\n   \
    \     else\n            col=$((col + 1))\n        fi\n    done\n    if [[ \"${#row_res[@]}\"\
    \ -gt 0 ]]; then\n        row_res_str=$(printf '[\"%s\"]' \"${row_res[@]}\")\n\
    \        res+=($row_res_str)\n    fi\n    res_str=$(printf '[\"%s\"]' \"${res[@]}\"\
    )\n    echo $res_str", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n\
    \    local col=0\n    local result=()\n    while read -r line; do\n        col=0\n\
    \        for y in $line; do\n            if [[ \"$y\" == \"$x\" ]]; then\n   \
    \             result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n   \
    \         ((col++))\n        done\n        ((row++))\n    done <<< \"$lst\"\n\
    \    echo \"${result[@]}\"", "    local lst=$1\n    local x=$2\n    local -a result\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i row_count=0\n\
    \    local -i col_count=0\n    local -i row_count_max=0\n    local -i col_count_max=0\n\
    \    local -i row_count_min=0\n    local -i col_count_min=0\n    local -i row_count_prev=0\n\
    \    local -i col_count_prev=0\n    local -i row_count_next=0\n    local -i col_count_next=0\n\
    \    local -i row_count_prev_max=0\n    local -i col_count_prev_max=0\n    local\
    \ -i row_count_next_max=0\n    local -i col_count_next_max=0\n    local -i row_count_prev_min=0\n\
    \    local -i col_count_prev_min=0\n    local -i row_count_next_min=0\n    local\
    \ -i col_count_next_min=0\n    local -i row_count_prev_max_prev=0\n    local -i\
    \ col_count_prev_max_prev=0\n    local -i row_count_next_max_prev=0\n    local\
    \ -i col_count_next_max_prev=0\n    local -i row_count_prev_min_prev=0\n    local\
    \ -i col_count_prev_min_prev=0\n    local -i row_count_next_min_prev=0\n    local\
    \ -i col_count_next_min_prev=0\n    local -i row_count_prev_max_next=0\n    local\
    \ -i col_count_prev_max_next=0\n    local -i row_count_next_max_next=0\n    local\
    \ -i col_count_next_max_next=0\n    local -i row_count_prev_min_next=0\n    local\
    \ -i col_count_prev_min_next=0\n    local -i row_count_next_min_next=0\n", " \
    \   local lst=$1\n    local x=$2\n    local -a row_cols\n    local -a row_cols_sorted\n\
    \    local -a row_cols_sorted_desc\n    local -a row_cols_sorted_desc_str\n  \
    \  local -a row_cols_sorted_desc_str_quoted\n    local -a row_cols_sorted_desc_str_quoted_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_str\n    local -a row_cols_sorted_desc_str_quoted_joined_str_quoted\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined\n    local\
    \ -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str\n    local -a\
    \ row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted\n    local\
    \ -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted_joined_str\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted\n\
    \    local -a row_cols_sorted_desc_str_quoted_joined_str", "    local -a row\n\
    \    local -a col\n    local -a list\n    local -a list_row\n    local -a list_col\n\
    \    local -a list_row_col\n    local -a list_row_col_sorted\n    local -a list_row_col_sorted_row\n\
    \    local -a list_row_col_sorted_row_col\n    local -a list_row_col_sorted_row_col_sorted\n\
    \    local -a list_row_col_sorted_row_col_sorted_row\n    local -a list_row_col_sorted_row_col_sorted_row_col\n\
    \    local -a list_row_col_sorted_row_col_sorted_row_col_sorted\n    local -a\
    \ list_row_col_sorted_row_col_sorted_row_col_sorted_row\n    local -a list_row_col_sorted_row_col_sorted_row_col_sorted_row_col\n\
    \    local -a list_row_col_sorted_row_col_sorted_row_col_sorted_row_col_sorted\n\
    \    local -a list_row_col_sorted_row_col_sorted_row_col_sorted_row_col_sorted_row\n\
    \    local -a list_row_col_sorted_row_col_sorted_row_col_sorted_row_col_sorted_row_col\n\
    \    local -a list_row_col_sorted_row_col_sorted_row_col_sorted_row_col_sorted_row_col_sorted\n\
    \    local -a list_row_col_sorted_row_col_sorted_row_col_sorted_row_col_sorted_row_col_sorted_row\n\
    \    local -a list_row_col_sorted_row_col_sorted_row_col_sorted_row_col_sorted_row_col_sorted_row_col\n\
    \    local -a list_row_col_sorted_row_col_sorted_row_col_sorted_row_col_s", " \
    \   local -a lst=()\n    local -a row=()\n    local -a col=()\n    local -a res=()\n\
    \    local -a tmp=()\n    local -a tmp2=()\n    local -a tmp3=()\n    local -a\
    \ tmp4=()\n    local -a tmp5=()\n    local -a tmp6=()\n    local -a tmp7=()\n\
    \    local -a tmp8=()\n    local -a tmp9=()\n    local -a tmp10=()\n    local\
    \ -a tmp11=()\n    local -a tmp12=()\n    local -a tmp13=()\n    local -a tmp14=()\n\
    \    local -a tmp15=()\n    local -a tmp16=()\n    local -a tmp17=()\n    local\
    \ -a tmp18=()\n    local -a tmp19=()\n    local -a tmp20=()\n    local -a tmp21=()\n\
    \    local -a tmp22=()\n    local -a tmp23=()\n    local -a tmp24=()\n    local\
    \ -a tmp25=()\n    local -a tmp26=()\n    local -a tmp27=()\n    local -a tmp28=()\n\
    \    local -a tmp29=()\n    local -a tmp30=()\n    local -a tmp31=()\n    local\
    \ -a tmp32=()\n    local -a tmp33=()\n    local -a tmp34=()\n    local -a tmp35=()\n\
    \    local -a tmp36=()\n    local -a tmp37=()\n    local -a tmp38=()\n    local\
    \ -a tmp39=()\n    local -a tmp40=()\n    local -a tmp41=()\n    local -a tmp42=()\n\
    \    local -a tmp43=()\n    local -a tmp44=()\n    local -a tmp45=()\n    local\
    \ -a tmp46=()\n    local -a tmp47=()\n    local -a tmp48=()\n    local -a tmp49=()\n\
    \    local -a tmp50=()\n    local -a tmp51=()\n    local -a tmp52=()\n    local\
    \ -a tmp53=()\n    local", "    local lst=\"$1\"\n    local x=\"$2\"\n    local\
    \ row=0\n    local col=0\n    local res=()\n    while read -r line; do\n     \
    \   col=0\n        for i in $line; do\n            if [ \"$i\" == \"$x\" ]; then\n\
    \                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n   \
    \         col=$((col+1))\n        done\n        row=$((row+1))\n    done <<< \"\
    $lst\"\n    echo \"${res[@]}\"", "    local -a lst=($(echo \"$1\" | tr ' ' '\\\
    n'))\n    local -a res=()\n    local -i i=0\n    local -i j=0\n    local -i len=${#lst[@]}\n\
    \    local -i x=$2\n    while [[ $i -lt $len ]]; do\n        if [[ ${lst[$i]}\
    \ -eq $x ]]; then\n            res+=(\"[\\\"$j\\\", \\\"$i\\\"]\")\n        fi\n\
    \        ((i++))\n        if [[ $i -eq $len || ${lst[$i]} == \"\" ]]; then\n \
    \           ((j++))\n            i=$j\n        fi\n    done\n    echo \"${res[@]}\"\
    \ | tr ' ' '\\n' | sort -t '\"' -k2 -n -k4 -r", "    local lst=$1\n    local x=$2\n\
    \    local row=0\n    local col=0\n    local res=()\n    while read -r line; do\n\
    \        col=0\n        for y in $line; do\n            if [[ $y -eq $x ]]; then\n\
    \                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n   \
    \         col=$((col + 1))\n        done\n        row=$((row + 1))\n    done <<<\
    \ \"$lst\"\n    echo \"${res[@]}\" | tr ' ' ',' | jq -s . | jq -s 'sort_by(.[0])\
    \ | reverse'", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n  \
    \  local col=0\n    local result=()\n    while read -r line; do\n        col=0\n\
    \        for i in $line; do\n            if [ \"$i\" = \"$x\" ]; then\n      \
    \          result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n      \
    \      col=$((col+1))\n        done\n        row=$((row+1))\n    done <<< \"$lst\"\
    \n    echo \"${result[@]}\"", "    local lst=\"$1\"\n    local x=\"$2\"\n    local\
    \ -a result\n    local -a row\n    local -a col\n    local -a row_col\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local\
    \ -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local\
    \ -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local\
    \ -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local\
    \ -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local\
    \ -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local\
    \ -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local\
    \ -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local\
    \ -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local\
    \ -i kkk=0\n   ", "    local lst=$1\n    local x=$2\n    local -a res=()\n   \
    \ local -a row\n    local -a col\n    local -a row_col\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local -a lst_arr=($(echo $lst))\n    for ((i=0; i<${#lst_arr[@]};\
    \ i++)); do\n        row=($(echo ${lst_arr[$i]}))\n        for ((j=0; j<${#row[@]};\
    \ j++)); do\n            if [[ ${row[$j]} -eq $x ]]; then\n                row_col=($i\
    \ $j)\n                res[$k]=${row_col[@]}\n                ((k++))\n      \
    \      fi\n        done\n    done\n    for ((i=0; i<${#res[@]}; i++)); do\n  \
    \      row=($(echo ${res[$i]}))\n        for ((j=i+1; j<${#res[@]}; j++)); do\n\
    \            col=($(echo ${res[$j]}))\n            if [[ ${row[0]} -gt ${col[0]}\
    \ ]]; then\n                res[$i]=${col[@]}\n                res[$j]=${row[@]}\n\
    \            elif [[ ${row[0]} -eq ${col[0]} ]]; then\n                if [[ ${row[1]}\
    \ -lt ${col[1]} ]]; then\n                    res[$i]=${col[@]}\n            \
    \        res[$j]=${row[@]}\n                fi\n            fi\n        done\n\
    \    done\n    for ((i=0; i<${#res[@]}; i++)); do\n        row=($(echo ${res[$i]}))\n\
    \        res[$i]=\"[\\\"${row[0]}\\\"\"\n        res[$i]=\"${res[$i]}, \\\"${row[1]}\\\
    \"]\"\n    done\n    echo ${res[@]}", "    local lst=\"$1\"\n    local x=\"$2\"\
    \n    local row=0\n    local col=0\n    local res=()\n    while read -r line;\
    \ do\n        col=0\n        for y in $line; do\n            if [[ \"$y\" == \"\
    $x\" ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n     \
    \       fi\n            col=$((col + 1))\n        done\n        row=$((row + 1))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\"", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n    while read\
    \ -r line; do\n        col=0\n        for i in $line; do\n            if [[ \"\
    $i\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"\
    ]\")\n            fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${result[@]}\"", "    local lst=\"$1\"\n  \
    \  local x=\"$2\"\n    local -a rows\n    local -a cols\n    local -a result\n\
    \    local -i i=0\n    local -i j=0\n    local -i row=0\n    local -i col=0\n\
    \    local -i k=0\n    local -i len=0\n    local -i len_rows=0\n    local -i len_cols=0\n\
    \    local -i len_result=0\n    local -i row_index=0\n    local -i col_index=0\n\
    \    local -i row_index_max=0\n    local -i col_index_max=0\n    local -i row_index_min=0\n\
    \    local -i col_index_min=0\n    local -i row_index_max_prev=0\n    local -i\
    \ col_index_max_prev=0\n    local -i row_index_min_prev=0\n    local -i col_index_min_prev=0\n\
    \    local -i row_index_max_next=0\n    local -i col_index_max_next=0\n    local\
    \ -i row_index_min_next=0\n    local -i col_index_min_next=0\n    local -i row_index_max_tmp=0\n\
    \    local -i col_index_max_tmp=0\n    local -i row_index_min_tmp=0\n    local\
    \ -i col_index_min_tmp=0\n    local -i row_index_max_tmp_prev=0\n    local -i\
    \ col_index_max_tmp_prev=0\n    local -i row_index_min_tmp_prev=0\n    local -i\
    \ col_index_min_tmp_prev=0\n    local -i row_index_max_tmp_next=0\n    local -i\
    \ col_index_max_tmp_next=0\n    local -i row_index_min_tmp_next=0\n    local -i\
    \ col_index_min_tmp_next=0\n    local -i row_index_max_tmp_prev_prev=0\n    local\
    \ -i col_index_max_tmp_prev_", "    local -a arr\n    local -a arr2\n    local\
    \ -a arr3\n    local -a arr4\n    local -a arr5\n    local -a arr6\n    local\
    \ -a arr7\n    local -a arr8\n    local -a arr9\n    local -a arr10\n    local\
    \ -a arr11\n    local -a arr12\n    local -a arr13\n    local -a arr14\n    local\
    \ -a arr15\n    local -a arr16\n    local -a arr17\n    local -a arr18\n    local\
    \ -a arr19\n    local -a arr20\n    local -a arr21\n    local -a arr22\n    local\
    \ -a arr23\n    local -a arr24\n    local -a arr25\n    local -a arr26\n    local\
    \ -a arr27\n    local -a arr28\n    local -a arr29\n    local -a arr30\n    local\
    \ -a arr31\n    local -a arr32\n    local -a arr33\n    local -a arr34\n    local\
    \ -a arr35\n    local -a arr36\n    local -a arr37\n    local -a arr38\n    local\
    \ -a arr39\n    local -a arr40\n    local -a arr41\n    local -a arr42\n    local\
    \ -a arr43\n    local -a arr44\n    local -a arr45\n    local -a arr46\n    local\
    \ -a arr47\n    local -a arr48\n    local -a arr49\n    local -a arr50\n    local\
    \ -a arr51\n    local -a arr52\n    local -a arr53\n    local -a arr54\n    local\
    \ -a arr55\n    local -a arr56\n    local -a arr57\n    local -a arr58\n    local\
    \ -a arr59\n    local -a arr60\n    local -a arr61\n    local -a arr62\n    local\
    \ -a arr63\n    local -a arr64\n    local -a arr65\n    local -a arr66\n    local\
    \ -a arr67\n    local -a arr68\n    local -a arr69\n    local -a arr70\n    local\
    \ -a arr71\n    local -a arr72\n    local -a arr73\n   ", "    local lst=\"$1\"\
    \n    local x=\"$2\"\n    local -a row_cols\n    local -a rows\n    local -a cols\n\
    \    local -a result\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i\
    \ cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i\
    \ gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local -i ddd=0\n    local\
    \ -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local -i hhh=0\n    local\
    \ -i iii=0\n    local -i jjj=0\n    local -i kkk=0", "    local lst=$1\n    local\
    \ x=$2\n    local row=0\n    local col=0\n    local res=()\n    while read -r\
    \ line; do\n        col=0\n        for i in $line; do\n            if [ \"$i\"\
    \ == \"$x\" ]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n\
    \            fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\"", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local -a arr\n    local -a res\n    local -a row\n    local -a\
    \ col\n    local -a tmp\n    local -a tmp2\n    local -a tmp3\n    local i\n \
    \   local j\n    local k\n    local m\n    local n\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local a\n    local b\n    local c\n\
    \    local d\n    local e\n    local f\n    local g\n    local h\n    local -i\
    \ cnt\n    local -i cnt2\n    local -i cnt3\n    local -i cnt4\n    local -i cnt5\n\
    \    local -i cnt6\n    local -i cnt7\n    local -i cnt8\n    local -i cnt9\n\
    \    local -i cnt10\n    local -i cnt11\n    local -i cnt12\n    local -i cnt13\n\
    \    local -i cnt14\n    local -i cnt15\n    local -i cnt16\n    local -i cnt17\n\
    \    local -i cnt18\n    local -i cnt19\n    local -i cnt20\n    local -i cnt21\n\
    \    local -i cnt22\n    local -i cnt23\n    local -i cnt24\n    local -i cnt25\n\
    \    local -i cnt26\n    local -i cnt27\n    local -i cnt28\n    local -i cnt29\n\
    \    local -i cnt30\n    local -i cnt31\n    local -i cnt32\n    local -i cnt33\n\
    \    local -i cnt34\n    local -i cnt35\n    local -i cnt36\n    local -i cnt37\n\
    \    local -i cnt38\n    local -i cnt39\n    local -i cnt40\n    local -i cnt41\n\
    \    local -i cnt42\n    local -i cnt43\n    local -i cnt44\n    local -", " \
    \   local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n \
    \   local result=()\n    for i in $lst; do\n        if [ \"$i\" = \"$x\" ]; then\n\
    \            result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if\
    \ [ \"$i\" = \"$'\\n'\" ]; then\n            row=$((row + 1))\n            col=0\n\
    \        else\n            col=$((col + 1))\n        fi\n    done\n    echo \"\
    ${result[@]}\"", "    local -a row_cols=()\n    local -a rows=()\n    local -a\
    \ cols=()\n    local -a result=()\n    local -a row=()\n    local -a col=()\n\
    \    local -a row_col=()\n    local -a row_col_sorted=()\n    local -a row_col_sorted_rev=()\n\
    \    local -a row_col_sorted_rev_sorted=()\n    local -a row_col_sorted_rev_sorted_rev=()\n\
    \    local -a row_col_sorted_rev_sorted_rev_sorted=()\n    local -a row_col_sorted_rev_sorted_rev_sorted_rev=()\n\
    \    local -a row_col_sorted_rev_sorted_rev_sorted_rev_sorted=()\n    local -a\
    \ row_col_sorted_rev_sorted_rev_sorted_rev_sorted_rev=()\n    local -a row_col_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted=()\n\
    \    local -a row_col_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted_rev=()\n\
    \    local -a row_col_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted=()\n\
    \    local -a row_col_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted_rev=()\n\
    \    local -a row_col_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted=()\n\
    \    local -a row_col_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted_rev=()\n\
    \    local -a row_col_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted_rev_sorted_rev_",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    while read -r line; do\n        col=0\n        for i in $line; do\n     \
    \       if [[ $i -eq $x ]]; then\n                res+=(\"[\\\"$row\\\", \\\"\
    $col\\\"]\")\n            fi\n            col=$((col+1))\n        done\n     \
    \   row=$((row+1))\n    done <<< \"$lst\"\n    echo \"${res[@]}\"", "    local\
    \ lst=$1\n    local x=$2\n    local -a result=()\n    local -a row=()\n    local\
    \ -a col=()\n    local -a rows=()\n    local -a cols=()\n    local -a row_col=()\n\
    \    local -a col_col=()\n    local -a row_col_col=()\n    local -a row_col_col_col=()\n\
    \    local -a row_col_col_col_col=()\n    local -a row_col_col_col_col_col=()\n\
    \    local -a row_col_col_col_col_col_col=()\n    local -a row_col_col_col_col_col_col_col=()\n\
    \    local -a row_col_col_col_col_col_col_col_col=()\n    local -a row_col_col_col_col_col_col_col_col_col=()\n\
    \    local -a row_col_col_col_col_col_col_col_col_col_col=()\n    local -a row_col_col_col_col_col_col_col_col_col_col_col=()\n\
    \    local -a row_col_col_col_col_col_col_col_col_col_col_col_col=()\n    local\
    \ -a row_col_col_col_col_col_col_col_col_col_col_col_col_col=()\n    local -a\
    \ row_col_col_col_col_col_col_col_col_col_col_col_col_col_col=()\n    local -a\
    \ row_col_col_col_col_col_col_col_col_col_col_col_col_col_col_col=()\n    local\
    \ -a row_col_col_col_col_col_col_col_col_col_col_col_col_col_col_col_col=()\n\
    \    local -a row_col_col_col_col_col_col_col_col_col_col_col_col_col_col_col_col_col=()\n\
    \    local -a row", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n\
    \    local col=0\n    local result=()\n    while read -r line; do\n        col=0\n\
    \        for i in $line; do\n            if [[ \"$i\" == \"$x\" ]]; then\n   \
    \             result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n   \
    \         col=$((col+1))\n        done\n        row=$((row+1))\n    done <<< \"\
    $lst\"\n    echo \"${result[@]}\"", "    local lst=$1\n    local x=$2\n    local\
    \ -a res=()\n    local -a row\n    local -a col\n    local -a row_col\n    local\
    \ -a row_col_sorted\n    local -a row_col_sorted_rev\n    local -a row_col_sorted_rev_str\n\
    \    local -a row_col_sorted_rev_str_json\n    local -a row_col_sorted_rev_str_json_str\n\
    \    local -a row_col_sorted_rev_str_json_str_sorted\n    local -a row_col_sorted_rev_str_json_str_sorted_rev\n\
    \    local -a row_col_sorted_rev_str_json_str_sorted_rev_str\n    local -a row_col_sorted_rev_str_json_str_sorted_rev_str_json\n\
    \    local -a row_col_sorted_rev_str_json_str_sorted_rev_str_json_str\n    local\
    \ -a row_col_sorted_rev_str_json_str_sorted_rev_str_json_str_sorted\n    local\
    \ -a row_col_sorted_rev_str_json_str_sorted_rev_str_json_str_sorted_rev\n    local\
    \ -a row_col_sorted_rev_str_json_str_sorted_rev_str_json_str_sorted_rev_str\n\
    \    local -a row_col_sorted_rev_str_json_str_sorted_rev_str_json_str_sorted_rev_str_json\n\
    \    local -a row_col_sorted_rev_str_json_str_sorted_rev_str_json_str_sorted_rev_str_json_str\n\
    \    local -a row_col_sorted_rev_str_json_str_sorted_rev_str_json_str_sorted_rev_str_json_str_sorted\n\
    \    local -a row_col_sorted_rev_str_json_str_sorted_rev_str_json_str_sorted_rev_str",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local result=()\n\
    \    local row_result=()\n    while read -r line; do\n        col=0\n        row_result=()\n\
    \        for i in $line; do\n            if [[ $i == $x ]]; then\n           \
    \     row_result+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n       \
    \     col=$((col+1))\n        done\n        if [[ ${#row_result[@]} > 0 ]]; then\n\
    \            result+=($(printf \"%s\\n\" \"${row_result[@]}\" | sort -r))\n  \
    \      fi\n        row=$((row+1))\n    done <<< \"$lst\"\n    if [[ ${#result[@]}\
    \ > 0 ]]; then\n        printf \"[%s]\" \"$(printf \", %s\" \"${result[@]}\")\"\
    \n    else\n        printf \"[]\"\n    fi", "    local lst=\"$1\"\n    local x=\"\
    $2\"\n    local row=0\n    local col=0\n    local res=()\n    while read -r line;\
    \ do\n        col=0\n        for i in $line; do\n            if [[ \"$i\" == \"\
    $x\" ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n     \
    \       fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local result=()\n\
    \    while read -r line; do\n        col=0\n        for y in $line; do\n     \
    \       if [[ $y -eq $x ]]; then\n                result+=(\"[\\\"$row\\\", \\\
    \"$col\\\"]\")\n            fi\n            col=$((col + 1))\n        done\n \
    \       row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"", " \
    \   local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local\
    \ res=()\n    for i in $lst; do\n        if [[ $i == $x ]]; then\n           \
    \ res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        col=$((col+1))\n\
    \        if [[ $i == \"\" ]]; then\n            row=$((row+1))\n            col=0\n\
    \        fi\n    done\n    echo \"${res[@]}\"", "    local lst=$1\n    local x=$2\n\
    \    local row=0\n    local col=0\n    local res=()\n    while read -r line; do\n\
    \        col=0\n        for y in $line; do\n            if [[ $y -eq $x ]]; then\n\
    \                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n   \
    \         col=$((col + 1))\n        done\n        row=$((row + 1))\n    done <<<\
    \ \"$lst\"\n    echo \"${res[@]}\" | tr ' ' ',' | sed 's/^/[/;s/$/]/'", "    local\
    \ lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    while read -r line; do\n        col=0\n        for i in $line; do\n     \
    \       if [[ $i == $x ]]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\
    \"]\")\n            fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\"", "    local lst=\"$1\"\n    local\
    \ x=\"$2\"\n    local -a result=()\n    local -i row=0\n    local -i col=0\n \
    \   local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i len=0\n   \
    \ local -i len_row=0\n    local -i len_col=0\n    local -i len_result=0\n    local\
    \ -i len_row_result=0\n    local -i len_col_result=0\n    local -i len_row_result_prev=0\n\
    \    local -i len_col_result_prev=0\n    local -i len_row_result_prev_prev=0\n\
    \    local -i len_col_result_prev_prev=0\n    local -i len_row_result_prev_prev_prev=0\n\
    \    local -i len_col_result_prev_prev_prev=0\n    local -i len_row_result_prev_prev_prev_prev=0\n\
    \    local -i len_col_result_prev_prev_prev_prev=0\n    local -i len_row_result_prev_prev_prev_prev_prev=0\n\
    \    local -i len_col_result_prev_prev_prev_prev_prev=0\n    local -i len_row_result_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_col_result_prev_prev_prev_prev_prev_prev=0\n    local -i len_row_result_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_col_result_prev_prev_prev_prev_prev_prev_prev=0\n    local -i\
    \ len_row_result_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i len_col_result_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_row_result_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i len_col_result_prev_prev_prev_prev_", "    local lst=\"$1\"\n  \
    \  local x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n   \
    \ local row_result=()\n    for i in $(echo \"$lst\" | tr ' ' '\\n'); do\n    \
    \    if [[ \"$i\" == \"$x\" ]]; then\n            row_result+=(\"$row\")\n   \
    \         row_result+=(\"$col\")\n            result+=(\"[\\\"$row\\\", \\\"$col\\\
    \"]\")\n        fi\n        if [[ \"$i\" == \"\" ]]; then\n            row=$((row\
    \ + 1))\n            col=0\n        else\n            col=$((col + 1))\n     \
    \   fi\n    done\n    echo \"[$(IFS=,; echo \"${result[*]}\")]\"", "    local\
    \ lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n    local\
    \ res=()\n    for i in $lst; do\n        if [ \"$i\" == \"$x\" ]; then\n     \
    \       res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [ \"$i\"\
    \ == \"$'\\n'\" ]; then\n            row=$((row + 1))\n            col=0\n   \
    \     else\n            col=$((col + 1))\n        fi\n    done\n    echo \"${res[@]}\"\
    \ | sort -t '\"' -k 1n -k 3nr", "    local lst=\"$1\"\n    local x=\"$2\"\n  \
    \  local row=0\n    local col=0\n    local result=()\n    while read -r line;\
    \ do\n        col=0\n        for num in $line; do\n            if [[ \"$num\"\
    \ == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\", \\\"$col\\\"]\"\
    )\n            fi\n            col=$((col + 1))\n        done\n        row=$((row\
    \ + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"", "    local lst=\"\
    $1\"\n    local x=\"$2\"\n    local -a rows\n    local -a columns\n    local -a\
    \ result\n    local -a row\n    local -a column\n    local -a row_column\n   \
    \ local -a row_columns\n    local -a row_columns_sorted\n    local -a row_columns_sorted_reversed\n\
    \    local -a result_sorted\n    local -a result_sorted_reversed\n    local i\n\
    \    local j\n    local k\n    local row_count\n    local column_count\n    local\
    \ row_column_count\n    local row_columns_count\n    local result_count\n    local\
    \ result_sorted_count\n    local result_sorted_reversed_count\n    local row_columns_sorted_count\n\
    \    local row_columns_sorted_reversed_count\n    local row_columns_sorted_reversed_row_count\n\
    \    local row_columns_sorted_reversed_row_column_count\n    local row_columns_sorted_reversed_row_columns_count\n\
    \    local row_columns_sorted_reversed_row_columns_sorted_count\n    local row_columns_sorted_reversed_row_columns_sorted_reversed_count\n\
    \    local row_columns_sorted_reversed_row_columns_sorted_reversed_row_count\n\
    \    local row_columns_sorted_reversed_row_columns_sorted_reversed_row_column_count\n\
    \    local row_columns_sorted_reversed_row_columns_sorted_reversed_row_columns_count\n\
    \    local row_columns_sorted_reversed_row_columns_sorted_reversed_row_columns_sorted_count\n\
    \    local row_columns_sorted_reversed_row_columns_sorted_reversed_row_columns_sorted_reversed_count\n\
    \    local row_columns_sorted_reversed_row_columns", "    local lst=\"$1\"\n \
    \   local x=\"$2\"\n    local row=0\n    local col=0\n    local result=()\n  \
    \  while read -r line; do\n        col=0\n        for y in $line; do\n       \
    \     if [[ \"$y\" == \"$x\" ]]; then\n                result+=(\"[\\\"$row\\\"\
    , \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n        done\n\
    \        row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\"",
  "    local -a rows\n    local -a cols\n    local -a row\n    local -a col\n    local\
    \ -a result\n    local -a row_result\n    local -a col_result\n    local -a row_col_result\n\
    \    local -a row_col_result_sorted\n    local -a row_col_result_sorted_desc\n\
    \    local -a row_col_result_sorted_desc_result\n    local -a row_col_result_sorted_desc_result_sorted\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result\n    local -a row_col_result_sorted_desc_result_sorted_result_sorted\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted_result\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted\n\
    \    local -a row_col_result_sorted_desc_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted_result_sorted_result\n\
    \    local -a row_col", "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n\
    \    local col=0\n    local res=()\n    local row_res=()\n    local row_res_sorted=()\n\
    \    local res_sorted=()\n    local res_sorted_str=()\n    local res_sorted_str_json=()\n\
    \    while read -r line; do\n        col=0\n        row_res=()\n        for i\
    \ in $line; do\n            if [[ \"$i\" == \"$x\" ]]; then\n                row_res+=(\"\
    $row\" \"$col\")\n            fi\n            col=$((col+1))\n        done\n \
    \       row_res_sorted=($(printf '%s\\n' \"${row_res[@]}\" | sort -nr))\n    \
    \    res+=(\"${row_res_sorted[@]}\")\n        row=$((row+1))\n    done <<< \"\
    $lst\"\n    res_sorted=($(printf '%s\\n' \"${res[@]}\" | sort -n))\n    for i\
    \ in \"${res_sorted[@]}\"; do\n        res_sorted_str+=(\"\\\"$i\\\"\")\n    done\n\
    \    res_sorted_str_json=\"[${res_sorted_str[*]}]\"\n    echo \"$res_sorted_str_json\"",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    for i in $lst; do\n        if [[ $i == $x ]]; then\n            res+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        if [[ $i == \"\" ]]; then\n\
    \            row=$((row + 1))\n            col=0\n        else\n            col=$((col\
    \ + 1))\n        fi\n    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -t\
    \ '\"' -k1n -k3nr | tr '\\n' ' '", "    local lst=$1\n    local x=$2\n    local\
    \ -a result\n    local -a row\n    local -a col\n    local -a row_col\n    local\
    \ -a row_col_sorted\n    local -a row_col_sorted_desc\n    local -a row_col_sorted_desc_str\n\
    \    local -a row_col_sorted_desc_str_json\n    local -a row_col_sorted_desc_str_json_str\n\
    \    local -a row_col_sorted_desc_str_json_str_sorted\n    local -a row_col_sorted_desc_str_json_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_json_str_sorted_str_json\n    local -a row_col_sorted_desc_str_json_str_sorted_str_json_str\n\
    \    local -a row_col_sorted_desc_str_json_str_sorted_str_json_str_sorted\n  \
    \  local -a row_col_sorted_desc_str_json_str_sorted_str_json_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_json_str_sorted_str_json_str_sorted_str_json\n\
    \    local -a row_col_sorted_desc_str_json_str_sorted_str_json_str_sorted_str_json_str\n\
    \    local -a row_col_sorted_desc_str_json_str_sorted_str_json_str_sorted_str_json_str_sorted\n\
    \    local -a row_col_sorted_desc_str_json_str_sorted_str_json_str_sorted_str_json_str_sorted_str\n\
    \    local -a row_col_sorted_desc_str_json_str_sorted_str_json_str_sorted_str_json_str_sorted_str_json\n\
    \    local -a row_col_sorted_desc_str_json_str_sorted_str_json_str_sorted_str_json_",
  "    local lst=$1\n    local x=$2\n    local -a rows\n    local -a row\n    local\
    \ -a row_coordinates\n    local -a coordinates\n    local -a sorted_coordinates\n\
    \    local -a sorted_row_coordinates\n    local -a sorted_rows\n    local -a sorted_row\n\
    \    local -a sorted_row_coordinates\n    local -a sorted_coordinates\n    local\
    \ -a sorted_row_coordinates\n    local -a sorted_coordinates\n    local -a sorted_row_coordinates\n\
    \    local -a sorted_coordinates\n    local -a sorted_row_coordinates\n    local\
    \ -a sorted_coordinates\n    local -a sorted_row_coordinates\n    local -a sorted_coordinates\n\
    \    local -a sorted_row_coordinates\n    local -a sorted_coordinates\n    local\
    \ -a sorted_row_coordinates\n    local -a sorted_coordinates\n    local -a sorted_row_coordinates\n\
    \    local -a sorted_coordinates\n    local -a sorted_row_coordinates\n    local\
    \ -a sorted_coordinates\n    local -a sorted_row_coordinates\n    local -a sorted_coordinates\n\
    \    local -a sorted_row_coordinates\n    local -a sorted_coordinates\n    local\
    \ -a sorted_row_coordinates\n    local -a sorted_coordinates\n    local -a sorted_row_coordinates\n\
    \    local -a sorted_coordinates\n    local -a sorted_row_coordinates\n    local\
    \ -a sorted_coordinates\n    local -a sorted_row_coordinates\n    local -a sorted_coordinates\n\
    \    local -a sorted_row_coordinates\n    local -a sorted_coordinates\n    local\
    \ -a sorted_row_coordinates\n    local -a sorted_coordinates\n    local -a sorted_row_coordinates\n\
    \    local -a sorted_coordinates\n    local -a sorted_row_coordinates\n    local\
    \ -a sorted_coordinates\n    local -a sorted_row_coordinates\n    local -a sorted_coordinates\n\
    \    local -a sorted_row_coordinates\n    local -a sorted_coordinates\n    local\
    \ -a sorted_row_coordinates\n    local -a", "    local lst=\"$1\"\n    local x=\"\
    $2\"\n    local row=0\n    local col=0\n    local res=()\n    while read -r line;\
    \ do\n        col=0\n        for y in $line; do\n            if [ \"$y\" = \"\
    $x\" ]; then\n                res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n      \
    \      fi\n            col=$((col+1))\n        done\n        row=$((row+1))\n\
    \    done <<< \"$lst\"\n    echo \"${res[@]}\"", "    local lst=$1\n    local\
    \ x=$2\n    local -a rows\n    local -a cols\n    local -a row\n    local -a col\n\
    \    local -a res\n    local -a res_row\n    local -a res_col\n    local -a res_row_col\n\
    \    local -a res_row_col_str\n    local -a res_row_col_str_sorted\n    local\
    \ -a res_row_col_str_sorted_str\n    local -a res_row_col_str_sorted_str_sorted\n\
    \    local -a res_row_col_str_sorted_str_sorted_str\n    local -a res_row_col_str_sorted_str_sorted_str_sorted\n\
    \    local -a res_row_col_str_sorted_str_sorted_str_sorted_str\n    local -a res_row_col_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a res_row_col_str_sorted_str_sorted_str_sorted_str_sorted_str\n  \
    \  local -a res_row_col_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a res_row_col_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a res_row_col_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a res_row_col_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str\n\
    \    local -a res_row_col_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted\n\
    \    local -a res_row_col_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_sorted_str_",
  "    local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local result=()\n\
    \    for i in $lst; do\n        if [ $i -eq $x ]; then\n            result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n        col=$((col+1))\n        if\
    \ [ $i == $'\\n' ]; then\n            row=$((row+1))\n            col=0\n    \
    \    fi\n    done\n    echo ${result[@]} | tr ' ' ',' | sed 's/^/[/' | sed 's/$/]/'",
  "    local -a lst=($(echo \"$1\" | tr ' ' '\\n'))\n    local -a result=()\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n    local\
    \ -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n    local\
    \ -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n    local\
    \ -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n    local\
    \ -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n    local\
    \ -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n    local\
    \ -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n    local\
    \ -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n    local\
    \ -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n    local\
    \ -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=0\n   ", "  \
    \  local lst=$1\n    local x=$2\n    local row=0\n    local col=0\n    local res=()\n\
    \    local row_res=()\n    for i in $lst; do\n        if [[ $i == $x ]]; then\n\
    \            row_res+=(\"[\\\"$row\\\", \\\"$col\\\"]\")\n        fi\n       \
    \ if [[ $i == \"\" ]]; then\n            if [[ ${#row_res[@]} -gt 0 ]]; then\n\
    \                res+=(\"[${row_res[@]}]\")\n                row_res=()\n    \
    \        fi\n            row=$((row + 1))\n            col=0\n        else\n \
    \           col=$((col + 1))\n        fi\n    done\n    if [[ ${#row_res[@]} -gt\
    \ 0 ]]; then\n        res+=(\"[${row_res[@]}]\")\n    fi\n    echo \"[${res[@]}]\"",
  "    local lst=\"$1\"\n    local x=\"$2\"\n    local row=0\n    local col=0\n  \
    \  local result=()\n    while read -r line; do\n        col=0\n        for y in\
    \ $line; do\n            if [[ \"$y\" == \"$x\" ]]; then\n                result+=(\"\
    [\\\"$row\\\", \\\"$col\\\"]\")\n            fi\n            col=$((col + 1))\n\
    \        done\n        row=$((row + 1))\n    done <<< \"$lst\"\n    echo \"${result[@]}\""]
stop_tokens:
- "\n}"

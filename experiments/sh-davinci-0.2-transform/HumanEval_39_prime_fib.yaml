name: HumanEval_39_prime_fib
language: sh
prompt: "#!/bin/bash\n# prime_fib returns n-th number that is a Fibonacci number and\
  \ it's also prime.\n# >>> $(prime_fib \"1\")\n# \"2\"\n# >>> $(prime_fib \"2\")\n\
  # \"3\"\n# >>> $(prime_fib \"3\")\n# \"5\"\n# >>> $(prime_fib \"4\")\n# \"13\"\n\
  # >>> $(prime_fib \"5\")\n# \"89\"\n#\n# $1 is an integer\nprime_fib() {\n"
tests: "}\n\ncandidate() {\n    prime_fib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1\") = \"2\" ]]\n    [[ $(candidate \"2\") = \"3\" ]]\n    [[ $(candidate\
  \ \"3\") = \"5\" ]]\n    [[ $(candidate \"4\") = \"13\" ]]\n    [[ $(candidate \"\
  5\") = \"89\" ]]\n    [[ $(candidate \"6\") = \"233\" ]]\n    [[ $(candidate \"\
  7\") = \"1597\" ]]\n    [[ $(candidate \"8\") = \"28657\" ]]\n    [[ $(candidate\
  \ \"9\") = \"514229\" ]]\n    [[ $(candidate \"10\") = \"433494437\" ]]\n}\n\nrun_test"
completions: ["    local n=$1\n    local fib_n=$(fib \"$n\")\n    local i=0\n    local\
    \ fib_i=0\n    while [ $i -lt $n ]; do\n        fib_i=$(fib \"$i\")\n        if\
    \ [ $(is_prime \"$fib_i\") -eq 1 ]; then\n            ((i++))\n        fi\n  \
    \  done\n    echo \"$fib_i\"", "  local n=$1\n  local fib_n\n  local fib_n_1\n\
    \  local fib_n_2\n  local prime_fib_n\n  local i\n  local prime_flag\n  local\
    \ fib_n_1_sqrt\n  local j\n\n  if [[ \"$n\" =~ ^[0-9]+$ ]]; then\n    if [ \"\
    $n\" -eq 1 ]; then\n      echo \"2\"\n    elif [ \"$n\" -eq 2 ]; then\n      echo\
    \ \"3\"\n    else\n      fib_n_2=1\n      fib_n_1=2\n      for ((i=3; i<=n; i++));\
    \ do\n        fib_n=$((fib_n_1 + fib_n_2))\n        fib_n_2=$fib_n_1\n       \
    \ fib_n_1=$fib_n\n      done\n      prime_fib_n=$fib_n\n      prime_flag=1\n \
    \     fib_n_1_sqrt=$(echo \"sqrt($fib_n_1)\" | bc)\n      for ((j=2; j<=fib_n_1_sqrt;\
    \ j++)); do\n        if [ $((fib_n_1 % j)) -eq 0 ]; then\n          prime_flag=0\n\
    \          break\n        fi\n      done\n      if [ $prime_flag -eq 1 ]; then\n\
    \        echo \"$fib_n_1\"\n      else\n        echo \"$prime_fib_n\"\n      fi\n\
    \    fi\n  else\n    echo \"Error: $n is not an integer\"\n  fi", "    local n=$1\n\
    \    local i=0\n    local fib=0\n    local fib_prev=1\n    while [[ $i -lt $n\
    \ ]]; do\n        local fib_tmp=$fib\n        fib=$((fib + fib_prev))\n      \
    \  fib_prev=$fib_tmp\n        if is_prime $fib; then\n            i=$((i + 1))\n\
    \        fi\n    done\n    echo $fib", "    local n=$1\n    local i=0\n    local\
    \ fib=0\n    local fib_prev=1\n    local fib_next=1\n    while [ $i -lt $n ];\
    \ do\n        fib=$fib_next\n        fib_next=$((fib + fib_prev))\n        fib_prev=$fib\n\
    \        if [ $(is_prime $fib) -eq 1 ]; then\n            i=$((i + 1))\n     \
    \   fi\n    done\n    echo $fib", "  local n=$1\n  local i=1\n  local f=1\n  local\
    \ f_prev=1\n  local f_next=1\n  local is_prime=1\n  local is_fib=1\n  local is_prime_fib=1\n\
    \  local prime_fib_n=1\n  while [ $i -lt $n ]; do\n    f_next=$((f + f_prev))\n\
    \    f_prev=$f\n    f=$f_next\n    is_prime=1\n    for ((j=2; j<$f; j++)); do\n\
    \      if [ $((f % j)) -eq 0 ]; then\n        is_prime=0\n        break\n    \
    \  fi\n    done\n    if [ $is_prime -eq 1 ]; then\n      prime_fib_n=$f\n    \
    \  i=$((i + 1))\n    fi\n  done\n  echo $prime_fib_n", "    local n=$1\n    local\
    \ i=0\n    local fib=0\n    local fib_prev=1\n    local fib_next=1\n    while\
    \ [ $i -lt $n ]; do\n        fib=$fib_next\n        fib_next=$((fib + fib_prev))\n\
    \        fib_prev=$fib\n        if [ $(is_prime $fib) -eq 1 ]; then\n        \
    \    i=$((i + 1))\n        fi\n    done\n    echo $fib", "    local n=$1\n   \
    \ local i=1\n    local fib=1\n    local fib_prev=1\n    local fib_tmp\n    local\
    \ is_prime\n    while [ $i -lt $n ]; do\n        fib_tmp=$fib\n        fib=$((fib\
    \ + fib_prev))\n        fib_prev=$fib_tmp\n        is_prime=$(is_prime $fib)\n\
    \        if [ \"$is_prime\" = \"true\" ]; then\n            i=$((i + 1))\n   \
    \     fi\n    done\n    echo $fib", "  local n=$1\n  local i=0\n  local fib=0\n\
    \  local fib_prev=1\n  local fib_tmp=0\n  while [ $i -lt $n ]; do\n    fib_tmp=$fib\n\
    \    fib=$((fib + fib_prev))\n    fib_prev=$fib_tmp\n    if [ $((fib % 2)) -eq\
    \ 0 ]; then\n      continue\n    fi\n    if [ $(is_prime \"$fib\") -eq 1 ]; then\n\
    \      i=$((i + 1))\n    fi\n  done\n  echo \"$fib\"", "    local n=$1\n    local\
    \ i=1\n    local fib=1\n    local fib_prev=1\n    local fib_next=1\n    local\
    \ is_prime=0\n    while [ $i -lt $n ]; do\n        fib_next=$((fib + fib_prev))\n\
    \        fib_prev=$fib\n        fib=$fib_next\n        if [ $fib -gt $n ]; then\n\
    \            break\n        fi\n        is_prime=$(is_prime $fib)\n        if\
    \ [ $is_prime -eq 1 ]; then\n            i=$((i + 1))\n        fi\n    done\n\
    \    echo $fib", "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        echo $(fib \"$1\"\
    \ | grep -E \"^[0-9]+$\" | head -n 1)\n    else\n        echo \"Error: argument\
    \ must be an integer\"\n    fi", "  local n=$1\n  local i=1\n  local fib=0\n \
    \ local fib_prev=1\n  local fib_tmp=0\n  local fib_is_prime=0\n  local fib_is_prime_prev=0\n\
    \  local fib_is_prime_tmp=0\n  local fib_is_prime_count=0\n  local fib_is_prime_count_prev=0\n\
    \  local fib_is_prime_count_tmp=0\n  while [[ $fib_is_prime_count -lt $n ]]; do\n\
    \    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n    fib_prev=$fib_tmp\n    fib_is_prime_tmp=$fib_is_prime\n\
    \    fib_is_prime=$(is_prime $fib)\n    fib_is_prime_prev=$fib_is_prime_tmp\n\
    \    fib_is_prime_count_tmp=$fib_is_prime_count\n    fib_is_prime_count=$((fib_is_prime_count\
    \ + fib_is_prime))\n    fib_is_prime_count_prev=$fib_is_prime_count_tmp\n  done\n\
    \  echo $fib", "  local n=$1\n  local i=1\n  local fib=1\n  local fib_prev=1\n\
    \  local fib_tmp=0\n  local prime=0\n  local prime_count=0\n  while [ $prime_count\
    \ -lt $n ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n    fib_prev=$fib_tmp\n\
    \    if [ $fib -gt $i ]; then\n      i=$((i + 1))\n      if is_prime $i; then\n\
    \        prime_count=$((prime_count + 1))\n        prime=$i\n      fi\n    fi\n\
    \  done\n  echo $prime", "    local n=$1\n    local i=1\n    local fib=1\n   \
    \ local fib_prev=1\n    local fib_tmp=0\n    local prime_fib=0\n    while [ $i\
    \ -lt $n ]; do\n        fib_tmp=$fib\n        fib=$((fib + fib_prev))\n      \
    \  fib_prev=$fib_tmp\n        if [ $(is_prime $fib) -eq 1 ]; then\n          \
    \  prime_fib=$fib\n            i=$((i + 1))\n        fi\n    done\n    echo $prime_fib",
  "  local n=$1\n  local fib_n=$(fib \"$n\")\n  local fib_n_1=$(fib \"$((n - 1))\"\
    )\n  local fib_n_2=$(fib \"$((n - 2))\")\n  local fib_n_3=$(fib \"$((n - 3))\"\
    )\n  local fib_n_4=$(fib \"$((n - 4))\")\n  local fib_n_5=$(fib \"$((n - 5))\"\
    )\n  local fib_n_6=$(fib \"$((n - 6))\")\n  local fib_n_7=$(fib \"$((n - 7))\"\
    )\n  local fib_n_8=$(fib \"$((n - 8))\")\n  local fib_n_9=$(fib \"$((n - 9))\"\
    )\n  local fib_n_10=$(fib \"$((n - 10))\")\n  local fib_n_11=$(fib \"$((n - 11))\"\
    )\n  local fib_n_12=$(fib \"$((n - 12))\")\n  local fib_n_13=$(fib \"$((n - 13))\"\
    )\n  local fib_n_14=$(fib \"$((n - 14))\")\n  local fib_n_15=$(fib \"$((n - 15))\"\
    )\n  local fib_n_16=$(fib \"$((n - 16))\")\n  local fib_n_17=$(fib \"$((n - 17))\"\
    )\n  local fib_n_18=$(fib \"$((n - 18))\")\n  local fib_n_19=$(fib \"$((n - 19))\"\
    )\n  local fib_n_20=$(fib \"$((n - 20))\")\n  local fib_n_21=$(fib \"$((n - 21))\"\
    )\n  local fib_n_22=$(fib \"$((n - 22))\")\n  local fib_n_23=$(fib \"$((n - 23))\"\
    )\n  local fib_n_24=$(fib \"$((n - 24))\")\n  local fib_n_25=$(fib \"$((n - 25))\"\
    )\n  local fib_n_26=$(fib \"$((n - 26))", "    local n=$1\n    local i=0\n   \
    \ local f=0\n    local f1=1\n    local f2=1\n    while [ $i -lt $n ]; do\n   \
    \     if is_prime $f; then\n            i=$((i+1))\n        fi\n        f=$((f1+f2))\n\
    \        f1=$f2\n        f2=$f\n    done\n    echo $f", "  local n=$1\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_tmp=0\n  while [ $i -lt\
    \ $n ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n    fib_prev=$fib_tmp\n\
    \    if [ $(is_prime $fib) -eq 1 ]; then\n      i=$((i + 1))\n    fi\n  done\n\
    \  echo $fib", "  local n=$1\n  local i=1\n  local fib=1\n  local fib_prev=1\n\
    \  local prime_fib=2\n  while [ $i -lt $n ]; do\n    local fib_tmp=$fib\n    fib=$((fib\
    \ + fib_prev))\n    fib_prev=$fib_tmp\n    if is_prime $fib; then\n      prime_fib=$fib\n\
    \      i=$((i + 1))\n    fi\n  done\n  echo $prime_fib", "  local n=$1\n  local\
    \ fib_n=$(fib \"$n\")\n  local fib_n_1=$(fib \"$((n - 1))\")\n  local fib_n_2=$(fib\
    \ \"$((n - 2))\")\n  local fib_n_3=$(fib \"$((n - 3))\")\n  local fib_n_4=$(fib\
    \ \"$((n - 4))\")\n  local fib_n_5=$(fib \"$((n - 5))\")\n  local fib_n_6=$(fib\
    \ \"$((n - 6))\")\n  local fib_n_7=$(fib \"$((n - 7))\")\n  local fib_n_8=$(fib\
    \ \"$((n - 8))\")\n  local fib_n_9=$(fib \"$((n - 9))\")\n  local fib_n_10=$(fib\
    \ \"$((n - 10))\")\n  local fib_n_11=$(fib \"$((n - 11))\")\n  local fib_n_12=$(fib\
    \ \"$((n - 12))\")\n  local fib_n_13=$(fib \"$((n - 13))\")\n  local fib_n_14=$(fib\
    \ \"$((n - 14))\")\n  local fib_n_15=$(fib \"$((n - 15))\")\n  local fib_n_16=$(fib\
    \ \"$((n - 16))\")\n  local fib_n_17=$(fib \"$((n - 17))\")\n  local fib_n_18=$(fib\
    \ \"$((n - 18))\")\n  local fib_n_19=$(fib \"$((n - 19))\")\n  local fib_n_20=$(fib\
    \ \"$((n - 20))\")\n  local fib_n_21=$(fib \"$((n - 21))\")\n  local fib_n_22=$(fib\
    \ \"$((n - 22))\")\n  local fib_n_23=$(fib \"$((n - 23))\")\n  local fib_n_24=$(fib\
    \ \"$((n - 24))\")\n  local fib_n_25=$(fib \"$((n - 25))\")\n  local fib_n_26=$(fib\
    \ \"$((n - 26))", "    local n=$1\n    local fib_n=$(fib \"$n\")\n    local is_prime=$(is_prime\
    \ \"$fib_n\")\n    if [[ \"$is_prime\" == \"True\" ]]; then\n        echo \"$fib_n\"\
    \n    else\n        prime_fib \"$((n + 1))\"\n    fi", "  local n=\"$1\"\n  local\
    \ i=0\n  local fib=0\n  local fib_prev=1\n  local fib_tmp=0\n  while [ $i -lt\
    \ $n ]; do\n    fib_tmp=$fib\n    fib=$((fib + fib_prev))\n    fib_prev=$fib_tmp\n\
    \    if is_prime \"$fib\"; then\n      i=$((i + 1))\n    fi\n  done\n  echo \"\
    $fib\""]
stop_tokens:
- "\n}"

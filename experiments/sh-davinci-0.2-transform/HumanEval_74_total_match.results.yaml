language: sh
name: HumanEval_74_total_match
results:
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n\
    \    done\n    if ((total1 < total2)); then\n        echo \"${list1[@]}\"\n  \
    \  else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    for word in $list1; do\n   \
    \     total1=$((total1 + ${#word}))\n    done\n    for word in $list2; do\n  \
    \      total2=$((total2 + ${#word}))\n    done\n    if [ $total1 -lt $total2 ];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # TODO: Write your code here\n\
    \    local list1=($1)\n    local list2=($2)\n    local total1=0\n    local total2=0\n\
    \    for item in ${list1[@]}; do\n        total1=$((total1 + ${#item}))\n    done\n\
    \    for item in ${list2[@]}; do\n        total2=$((total2 + ${#item}))\n    done\n\
    \    if [[ $total1 -lt $total2 ]]; then\n        echo \"${list1[@]}\"\n    else\n\
    \        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=$1\n    local list2=$2\n\
    \    local list1_total=0\n    local list2_total=0\n    local list1_arr=($list1)\n\
    \    local list2_arr=($list2)\n    local list1_len=${#list1_arr[@]}\n    local\
    \ list2_len=${#list2_arr[@]}\n    local i=0\n    local j=0\n    local list1_str=\"\
    \"\n    local list2_str=\"\"\n    local list1_str_len=0\n    local list2_str_len=0\n\
    \    local list1_str_arr=()\n    local list2_str_arr=()\n    local list1_str_arr_len=0\n\
    \    local list2_str_arr_len=0\n    local list1_str_arr_i=0\n    local list2_str_arr_i=0\n\
    \    local list1_str_arr_j=0\n    local list2_str_arr_j=0\n    local list1_str_arr_k=0\n\
    \    local list2_str_arr_k=0\n    local list1_str_arr_l=0\n    local list2_str_arr_l=0\n\
    \    local list1_str_arr_m=0\n    local list2_str_arr_m=0\n    local list1_str_arr_n=0\n\
    \    local list2_str_arr_n=0\n    local list1_str_arr_o=0\n    local list2_str_arr_o=0\n\
    \    local list1_str_arr_p=0\n    local list2_str_arr_p=0\n    local list1_str_arr_q=0\n\
    \    local list2_str_arr_q=0\n    local list1_str_arr_r=0\n    local list2_str_arr_r=0\n\
    \    local list1_str_arr_s=0\n    local list2_str_arr_s=0\n    local list1_str_arr_t=0\n\
    \    local list2_str_arr_t=0\n    local list1_str_arr_u=\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i=0\n    local -i sum1=0\n    local -i sum2=0\n    local -i len=0\n\
    \    local -i sum=0\n    local -a result=()\n    if [ $len1 -eq 0 -a $len2 -eq\
    \ 0 ]; then\n        echo \"[]\"\n        return\n    fi\n    for ((i=0; i<len1;\
    \ i++)); do\n        len=${#list1[$i]}\n        sum1=$sum1+$len\n    done\n  \
    \  for ((i=0; i<len2; i++)); do\n        len=${#list2[$i]}\n        sum2=$sum2+$len\n\
    \    done\n    if [ $sum1 -lt $sum2 ]; then\n        for ((i=0; i<len1; i++));\
    \ do\n            result[$i]=\"\\\"${list1[$i]}\\\"\"\n        done\n    else\n\
    \        for ((i=0; i<len2; i++)); do\n            result[$i]=\"\\\"${list2[$i]}\\\
    \"\"\n        done\n    fi\n    echo \"[${result[@]}]\"\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local i\n    for i in $list1;\
    \ do\n        total1=$((total1 + ${#i}))\n    done\n    for i in $list2; do\n\
    \        total2=$((total2 + ${#i}))\n    done\n    if [[ $total1 -lt $total2 ]];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=0\n  local total2=0\n  local list1_len=0\n  local list2_len=0\n\
    \  local i=0\n  local j=0\n  local len=0\n  local str=\"\"\n  local result=\"\"\
    \n  local result_len=0\n  local result_str=\"\"\n  local result_str_len=0\n  local\
    \ result_str_len_max=0\n  local result_str_max=\"\"\n  local result_str_max_len=0\n\
    \  local result_str_max_len_max=0\n  local result_str_max_max=\"\"\n  local result_str_max_max_len=0\n\
    \  local result_str_max_max_len_max=0\n  local result_str_max_max_max=\"\"\n \
    \ local result_str_max_max_max_len=0\n  local result_str_max_max_max_len_max=0\n\
    \  local result_str_max_max_max_max=\"\"\n  local result_str_max_max_max_max_len=0\n\
    \  local result_str_max_max_max_max_len_max=0\n  local result_str_max_max_max_max_max=\"\
    \"\n  local result_str_max_max_max_max_max_len=0\n  local result_str_max_max_max_max_max_len_max=0\n\
    \  local result_str_max_max_max_max_max_max=\"\"\n  local result_str_max_max_max_max_max_max_len=0\n\
    \  local result_str_max_max_max_max_max_max_len_max=0\n  local result_str_max_max_max_max_max_max_max=\"\
    \"\n  local result_str_max_max_max_max_max_max_max_len=0\n  local result_str_max_max_max_max_max_max_max_len_max=0\n\
    \  local result_str_max_max_max_max_max_max_max_max=\"\"\n  local\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=0\n  local total2=0\n  local i\n  for i in $list1; do\n \
    \   total1=$((total1 + ${#i}))\n  done\n  for i in $list2; do\n    total2=$((total2\
    \ + ${#i}))\n  done\n  if [ $total1 -lt $total2 ]; then\n    echo \"$list1\"\n\
    \  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # TODO: Write your code here\n\
    \    # Hint: You can use the following command to get the length of a string\n\
    \    # ${#STRING}\n    #\n    # Hint: You can use the following command to convert\
    \ a string to an array\n    # read -a ARRAY <<< \"$STRING\"\n    #\n    # Hint:\
    \ You can use the following command to convert an array to a string\n    # echo\
    \ \"${ARRAY[@]}\"\n    #\n    # Hint: You can use the following command to get\
    \ the length of an array\n    # ${#ARRAY[@]}\n    #\n    # Hint: You can use the\
    \ following command to sort an array\n    # sort -n <<< \"${ARRAY[*]}\"\n    #\n\
    \    # Hint: You can use the following command to get the first element of an\
    \ array\n    # echo \"${ARRAY[0]}\"\n    #\n    # Hint: You can use the following\
    \ command to get the last element of an array\n    # echo \"${ARRAY[-1]}\"\n \
    \   #\n    # Hint: You can use the following command to get the nth element of\
    \ an array\n    # echo \"${ARRAY[n]}\"\n    #\n    # Hint: You can use the following\
    \ command to get the length of the nth element of an array\n    # echo \"${#ARRAY[n]}\"\
    \n    #\n    # Hint: You can use the following command to remove the nth element\
    \ of an array\n    # unset ARRAY[n]\n    #\n    # Hint: You can use the following\
    \ command to remove the first element of an array\n    # unset ARRAY[0]\n    #\n\
    \    # Hint: You can use the following command to remove the last element of an\
    \ array\n    # unset ARRAY[-1]\n    #\n    # Hint: You can use the following command\
    \ to remove the first n elements of an array\n    # unset ARRAY[@:n]\n    #\n\
    \    # Hint: You can use the following command to remove the last n elements of\
    \ an array\n    # unset ARRAY[@:n]\n    #\n    # Hint: You can use the following\
    \ command to remove the\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpf4jbkhm8.sh: line 64: syntax error near unexpected token `}''

    /tmp/tmpf4jbkhm8.sh: line 64: `}''

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo $list1 | wc -c)\n    local list2_len=$(echo $list2\
    \ | wc -c)\n    if [ $list1_len -lt $list2_len ]; then\n        echo $list1\n\
    \    else\n        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # your code here\n    echo \"Not\
    \ yet implemented\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # your code here\n    local -a\
    \ list1=($1)\n    local -a list2=($2)\n    local -a result=()\n    local -i sum1=0\n\
    \    local -i sum2=0\n    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n\
    \    local -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        sum1=$((sum1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        sum2=$((sum2\
    \ + ${#list2[j]}))\n    done\n    if [[ $sum1 -lt $sum2 ]]; then\n        result=(\"\
    ${list1[@]}\")\n    elif [[ $sum1 -gt $sum2 ]]; then\n        result=(\"${list2[@]}\"\
    )\n    else\n        result=(\"${list1[@]}\")\n    fi\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n  \
    \      echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_count=0\n\
    \    local list2_count=0\n    local list1_item\n    local list2_item\n    local\
    \ list1_item_len\n    local list2_item_len\n    local list1_item_count\n    local\
    \ list2_item_count\n    local list1_item_count_len\n    local list2_item_count_len\n\
    \    local list1_item_count_len_total\n    local list2_item_count_len_total\n\
    \    local list1_item_count_len_total_min\n    local list2_item_count_len_total_min\n\
    \    local list1_item_count_len_total_min_index\n    local list2_item_count_len_total_min_index\n\
    \    local list1_item_count_len_total_min_index_item\n    local list2_item_count_len_total_min_index_item\n\
    \    local list1_item_count_len_total_min_index_item_len\n    local list2_item_count_len_total_min_index_item_len\n\
    \    local list1_item_count_len_total_min_index_item_len_total\n    local list2_item_count_len_total_min_index_item_len_total\n\
    \    local list1_item_count_len_total_min_index_item_len_total_min\n    local\
    \ list2_item_count_len_total_min_index_item_len_total_min\n    local list1_item_count_len_total_min_index_item_len_total_min_index\n\
    \    local list2_item_count_len_total_min_index_item_len_total_min_index\n   \
    \ local list1_item_count_len_total_min_index_item_len_total_min_index_item\n \
    \   local list2_item_count_len_total_min_index_item_len_total_min_index_item\n\
    \    local list1_item_\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=$1\n    local list2=$2\n\
    \    local list1_len=$(echo $list1 | wc -c)\n    local list2_len=$(echo $list2\
    \ | wc -c)\n    if [ $list1_len -lt $list2_len ]; then\n        echo $list1\n\
    \    else\n        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    local -i i=0\n    local -i j=0\n    local -i sum1=0\n\
    \    local -i sum2=0\n    local -i len=0\n    local -i len_min=0\n    local -i\
    \ len_max=0\n    local -i sum_min=0\n    local -i sum_max=0\n    local -i index_min=0\n\
    \    local -i index_max=0\n    local -i index=0\n    local -i k=0\n    local -i\
    \ l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n\
    \    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n    local\
    \ -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n\
    \    local -i z=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n \
    \   local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n \
    \   local -i hh=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n \
    \   local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n \
    \   local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n \
    \   local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n \
    \   local -i xx=0\n    local -i yy\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # Write your code here\n    #\n\
    \    # The output should be a space-separated list\n    #\n    # The output should\
    \ be a space-separated list\n    #\n    # The output should be a space-separated\
    \ list\n    #\n    # The output should be a space-separated list\n    #\n    #\
    \ The output should be a space-separated list\n    #\n    # The output should\
    \ be a space-separated list\n    #\n    # The output should be a space-separated\
    \ list\n    #\n    # The output should be a space-separated list\n    #\n    #\
    \ The output should be a space-separated list\n    #\n    # The output should\
    \ be a space-separated list\n    #\n    # The output should be a space-separated\
    \ list\n    #\n    # The output should be a space-separated list\n    #\n    #\
    \ The output should be a space-separated list\n    #\n    # The output should\
    \ be a space-separated list\n    #\n    # The output should be a space-separated\
    \ list\n    #\n    # The output should be a space-separated list\n    #\n    #\
    \ The output should be a space-separated list\n    #\n    # The output should\
    \ be a space-separated list\n    #\n    # The output should be a space-separated\
    \ list\n    #\n    # The output should be a space-separated list\n    #\n    #\
    \ The output should be a space-separated list\n    #\n    # The output should\
    \ be a space-separated list\n    #\n    # The output should be a space-separated\
    \ list\n    #\n    # The output should be a space-separated list\n    #\n    #\
    \ The output should be a space-separated list\n    #\n    # The output should\
    \ be a space-separated list\n    #\n    # The output should be a space-separated\
    \ list\n    #\n    # The output should be a space-separated list\n    #\n    #\
    \ The output should be a space-separated list\n    #\n    # The output should\
    \ be a space-separated list\n    #\n    # The output should be a space-separated\
    \ list\n    #\n    # The output should\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: SyntaxError
  stderr: '/tmp/tmpymk62mp0.sh: line 85: syntax error near unexpected token `}''

    /tmp/tmpymk62mp0.sh: line 85: `}''

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total_chars=0\n    local list2_total_chars=0\n    local\
    \ list1_total_chars_count=0\n    local list2_total_chars_count=0\n    local list1_total_chars_count_with_quotes=0\n\
    \    local list2_total_chars_count_with_quotes=0\n    local list1_total_chars_count_with_quotes_and_spaces=0\n\
    \    local list2_total_chars_count_with_quotes_and_spaces=0\n    local list1_total_chars_count_with_quotes_and_spaces_and_commas=0\n\
    \    local list2_total_chars_count_with_quotes_and_spaces_and_commas=0\n    local\
    \ list1_total_chars_count_with_quotes_and_spaces_and_commas_and_brackets=0\n \
    \   local list2_total_chars_count_with_quotes_and_spaces_and_commas_and_brackets=0\n\
    \    local list1_total_chars_count_with_quotes_and_spaces_and_commas_and_brackets_and_newlines=0\n\
    \    local list2_total_chars_count_with_quotes_and_spaces_and_commas_and_brackets_and_newlines=0\n\
    \    local list1_total_chars_count_with_quotes_and_spaces_and_commas_and_brackets_and_newlines_and_backslashes=0\n\
    \    local list2_total_chars_count_with_quotes_and_spaces_and_commas_and_brackets_and_newlines_and_backslashes=0\n\
    \    local list1_total_chars_count_with_quotes_and_spaces_and_commas_and_brackets_and_newlines_and_backslashes_and_dollar_signs=0\n\
    \    local list2_total_chars\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n\
    \    done\n    if [[ $total1 -lt $total2 ]]; then\n        echo \"${list1[@]}\"\
    \n    else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local -a list1=($1)\n  local -a list2=($2)\n\
    \  local -a result=()\n  local -i total1=0\n  local -i total2=0\n  local -i i=0\n\
    \  local -i j=0\n  local -i len1=${#list1[@]}\n  local -i len2=${#list2[@]}\n\
    \  local -i len=0\n  local -i min=0\n  local -i max=0\n  local -i count=0\n  local\
    \ -i index=0\n  local -i min_index=0\n  local -i max_index=0\n  local -i min_count=0\n\
    \  local -i max_count=0\n  local -i min_total=0\n  local -i max_total=0\n  local\
    \ -i min_len=0\n  local -i max_len=0\n  local -i min_len_index=0\n  local -i max_len_index=0\n\
    \  local -i min_len_count=0\n  local -i max_len_count=0\n  local -i min_len_total=0\n\
    \  local -i max_len_total=0\n  local -i min_len_len=0\n  local -i max_len_len=0\n\
    \  local -i min_len_len_index=0\n  local -i max_len_len_index=0\n  local -i min_len_len_count=0\n\
    \  local -i max_len_len_count=0\n  local -i min_len_len_total=0\n  local -i max_len_len_total=0\n\
    \  local -i min_len_len_len=0\n  local -i max_len_len_len=0\n  local -i min_len_len_len_index=0\n\
    \  local -i max_len_len_len_index=0\n  local -i min_len_len_len_count=0\n  local\
    \ -i max_len_len_len_count=0\n  local -i min_len_len_len_total=0\n  local -i max_len_len\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  for word in $list1; do\n\
    \    list1_total=$((list1_total + ${#word}))\n  done\n  for word in $list2; do\n\
    \    list2_total=$((list2_total + ${#word}))\n  done\n  if [ $list1_total -lt\
    \ $list2_total ]; then\n    echo \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=0\n  local total2=0\n  local result=\"\"\n  local i=0\n \
    \ local j=0\n  local len1=0\n  local len2=0\n  local len=0\n  local item=\"\"\n\
    \  local item1=\"\"\n  local item2=\"\"\n  local temp=\"\"\n  local temp1=\"\"\
    \n  local temp2=\"\"\n  local temp3=\"\"\n  local temp4=\"\"\n  local temp5=\"\
    \"\n  local temp6=\"\"\n  local temp7=\"\"\n  local temp8=\"\"\n  local temp9=\"\
    \"\n  local temp10=\"\"\n  local temp11=\"\"\n  local temp12=\"\"\n  local temp13=\"\
    \"\n  local temp14=\"\"\n  local temp15=\"\"\n  local temp16=\"\"\n  local temp17=\"\
    \"\n  local temp18=\"\"\n  local temp19=\"\"\n  local temp20=\"\"\n  local temp21=\"\
    \"\n  local temp22=\"\"\n  local temp23=\"\"\n  local temp24=\"\"\n  local temp25=\"\
    \"\n  local temp26=\"\"\n  local temp27=\"\"\n  local temp28=\"\"\n  local temp29=\"\
    \"\n  local temp30=\"\"\n  local temp31=\"\"\n  local temp32=\"\"\n  local temp33=\"\
    \"\n  local temp34=\"\"\n  local temp35=\"\"\n  local temp36=\"\"\n  local temp37=\"\
    \"\n  local temp38=\"\"\n  local temp39=\"\"\n  local temp40=\"\"\n  local temp41=\"\
    \"\n  local temp42=\"\"\n  local temp43=\"\"\n  local temp44=\"\"\n  local temp45=\"\
    \"\n  local temp46=\"\"\n  local temp47=\"\"\n  local temp48=\"\"\n  local temp49=\"\
    \"\n  local temp50=\"\"\n  local temp51=\"\"\n  local temp52=\"\"\n  local temp53=\"\
    \"\n  local temp54=\"\"\n  local temp55=\"\"\n  local temp56=\"\"\n  local temp57=\"\
    \"\n  local temp58=\"\"\n  local temp59=\"\"\n  local temp60=\"\"\n  local temp61=\"\
    \"\n  local temp62=\"\"\n  local temp63=\"\"\n  local temp64=\"\"\n  local temp65=\"\
    \"\n  local temp66=\"\"\n  local temp67=\"\"\n  local temp68=\"\"\n  local temp69=\"\
    \"\n  local temp70=\"\"\n\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_item\n\
    \    local list2_item\n    local list1_item_len\n    local list2_item_len\n  \
    \  for list1_item in $list1; do\n        list1_item_len=${#list1_item}\n     \
    \   list1_total=$((list1_total + list1_item_len))\n    done\n    for list2_item\
    \ in $list2; do\n        list2_item_len=${#list2_item}\n        list2_total=$((list2_total\
    \ + list2_item_len))\n    done\n    if [ $list1_total -lt $list2_total ]; then\n\
    \        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_item\n\
    \    local list2_item\n    local list1_item_len\n    local list2_item_len\n  \
    \  local list1_item_quoted\n    local list2_item_quoted\n    local list1_result=\"\
    \"\n    local list2_result=\"\"\n    local result=\"\"\n    local i\n\n    for\
    \ list1_item in $list1; do\n        list1_item_len=${#list1_item}\n        list1_total=$((list1_total\
    \ + list1_item_len))\n    done\n\n    for list2_item in $list2; do\n        list2_item_len=${#list2_item}\n\
    \        list2_total=$((list2_total + list2_item_len))\n    done\n\n    if [ $list1_total\
    \ -lt $list2_total ]; then\n        result=$list1\n    elif [ $list1_total -gt\
    \ $list2_total ]; then\n        result=$list2\n    else\n        result=$list1\n\
    \    fi\n\n    for i in $result; do\n        echo -n \"\\\"$i\\\" \"\n    done\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_item\n  local\
    \ list2_item\n  local list1_item_len\n  local list2_item_len\n  local list1_item_len_total=0\n\
    \  local list2_item_len_total=0\n  local list1_item_len_total_max=0\n  local list2_item_len_total_max=0\n\
    \  local list1_item_len_total_max_item\n  local list2_item_len_total_max_item\n\
    \  local list1_item_len_total_max_item_len\n  local list2_item_len_total_max_item_len\n\
    \  local list1_item_len_total_max_item_len_total=0\n  local list2_item_len_total_max_item_len_total=0\n\
    \  local list1_item_len_total_max_item_len_total_max=0\n  local list2_item_len_total_max_item_len_total_max=0\n\
    \  local list1_item_len_total_max_item_len_total_max_item\n  local list2_item_len_total_max_item_len_total_max_item\n\
    \  local list1_item_len_total_max_item_len_total_max_item_len\n  local list2_item_len_total_max_item_len_total_max_item_len\n\
    \  local list1_item_len_total_max_item_len_total_max_item_len_total=0\n  local\
    \ list2_item_len_total_max_item_len_total_max_item_len_total=0\n  local list1_item_len_total_max_item_len_total_max_item_len_total_max=0\n\
    \  local list2_item_len_total_max_item_len_total_max_item_len_total_max=0\n  local\
    \ list1_item_len_total_max_item_len_total_\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local item\n    for item in\
    \ $list1; do\n        total1=$((total1 + ${#item}))\n    done\n    for item in\
    \ $list2; do\n        total2=$((total2 + ${#item}))\n    done\n    if [ $total1\
    \ -lt $total2 ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2\
    \ + ${#list2[j]}))\n    done\n    if [[ $total1 -lt $total2 ]]; then\n       \
    \ result=(${list1[@]})\n    elif [[ $total1 -gt $total2 ]]; then\n        result=(${list2[@]})\n\
    \    else\n        result=(${list1[@]})\n    fi\n    echo ${result[@]}\n}\n\n\
    candidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=$(echo \"$list1\" | wc -c)\n    local total2=$(echo \"\
    $list2\" | wc -c)\n    if [ $total1 -lt $total2 ]; then\n        echo \"$list1\"\
    \n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # Your code goes here\n  local -a\
    \ list1=($1)\n  local -a list2=($2)\n  local -a result=()\n  local -i total1=0\n\
    \  local -i total2=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i A=0\n  local -i B=0\n  local -i C=0\n  local -i D=0\n  local -i E=0\n  local\
    \ -i F=0\n  local -i G=0\n  local -i H=0\n  local -i I=0\n  local -i J=0\n  local\
    \ -i K=0\n  local -i L=0\n  local -i M=0\n  local -i N=0\n  local -i O=0\n  local\
    \ -i P=0\n  local -i Q=0\n  local -i R=0\n  local -i S=0\n  local -i T=0\n  local\
    \ -i U=0\n  local -i V=0\n  local -i W=0\n  local -i X=0\n  local -i Y=0\n  local\
    \ -i Z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local\
    \ -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local\
    \ -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2\
    \ + ${#list2[j]}))\n    done\n    if ((total1 < total2)); then\n        result=(\"\
    ${list1[@]}\")\n    elif ((total1 > total2)); then\n        result=(\"${list2[@]}\"\
    )\n    else\n        result=(\"${list1[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=0\n  local total2=0\n  local result=\"\"\n  for word in $list1;\
    \ do\n    total1=$((total1 + ${#word}))\n  done\n  for word in $list2; do\n  \
    \  total2=$((total2 + ${#word}))\n  done\n  if [[ $total1 -lt $total2 ]]; then\n\
    \    result=$list1\n  elif [[ $total1 -gt $total2 ]]; then\n    result=$list2\n\
    \  else\n    result=$list1\n  fi\n  echo \"$result\"\n}\n\ncandidate() {\n   \
    \ total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2\
    \ + ${#list2[j]}))\n    done\n    if ((total1 < total2)); then\n        result=(\"\
    ${list1[@]}\")\n    elif ((total1 > total2)); then\n        result=(\"${list2[@]}\"\
    )\n    else\n        result=(\"${list1[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    for word in $list1;\
    \ do\n        list1_total=$((list1_total + ${#word}))\n    done\n    for word\
    \ in $list2; do\n        list2_total=$((list2_total + ${#word}))\n    done\n \
    \   if [ $list1_total -lt $list2_total ]; then\n        echo \"$list1\"\n    else\n\
    \        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i total1=0\n    local -i total2=0\n    local -i i=0\n    local -i\
    \ j=0\n    local -i len=0\n    local -i len_max=0\n    local -a result=()\n  \
    \  local -a result_max=()\n    local -a result_tmp=()\n    local -a result_tmp_max=()\n\
    \    local -a list_tmp=()\n    local -a list_tmp_max=()\n    local -a list_tmp_max_max=()\n\
    \    local -a list_tmp_max_max_max=()\n    local -a list_tmp_max_max_max_max=()\n\
    \    local -a list_tmp_max_max_max_max_max=()\n    local -a list_tmp_max_max_max_max_max_max=()\n\
    \    local -a list_tmp_max_max_max_max_max_max_max=()\n    local -a list_tmp_max_max_max_max_max_max_max_max=()\n\
    \    local -a list_tmp_max_max_max_max_max_max_max_max_max=()\n    local -a list_tmp_max_max_max_max_max_max_max_max_max_max=()\n\
    \    local -a list_tmp_max_max_max_max_max_max_max_max_max_max_max=()\n    local\
    \ -a list_tmp_max_max_max_max_max_max_max_max_max_max_max_max=()\n    local -a\
    \ list_tmp_max_max_max_max_max_max_max_max_max_max_max_max_max=()\n    local -a\
    \ list_tmp_max_max_max_max_max_max_max_max_max_max_max_max_max_max=()\n    local\
    \ -a list_tmp\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_item\n\
    \    local list2_item\n    local list1_item_len\n    local list2_item_len\n  \
    \  local list1_item_quoted\n    local list2_item_quoted\n    local list1_result\n\
    \    local list2_result\n    local result\n\n    for list1_item in $list1; do\n\
    \        list1_item_len=${#list1_item}\n        list1_total=$((list1_total + list1_item_len))\n\
    \    done\n\n    for list2_item in $list2; do\n        list2_item_len=${#list2_item}\n\
    \        list2_total=$((list2_total + list2_item_len))\n    done\n\n    if [ $list1_total\
    \ -lt $list2_total ]; then\n        result=$list1\n    elif [ $list1_total -gt\
    \ $list2_total ]; then\n        result=$list2\n    else\n        result=$list1\n\
    \    fi\n\n    for item in $result; do\n        item_quoted=\"\\\"$item\\\"\"\n\
    \        result=\"$result_quoted $item_quoted\"\n    done\n\n    echo \"[$result]\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i min_len=$((len1 < len2 ? len1 : len2))\n    local -i max_len=$((len1\
    \ > len2 ? len1 : len2))\n    local -i min_total=$((total1 < total2 ? total1 :\
    \ total2))\n    local -i max_total=$((total1 > total2 ? total1 : total2))\n  \
    \  local -a result=()\n    local -i result_len=0\n    local -i result_total=0\n\
    \    local -i result_min_len=0\n    local -i result_max_len=0\n    local -i result_min_total=0\n\
    \    local -i result_max_total=0\n    local -i result_min_len_total=0\n    local\
    \ -i result_max_len_total=0\n    local -i result_min_total_len=0\n    local -i\
    \ result_max_total_len=0\n    local -i result_min_len_total_len=0\n    local -i\
    \ result_max_len_total_len=0\n    local -i result_min_total_len_len=0\n    local\
    \ -i result_max_total_len_len=0\n    local -i result_min_len_total_len_len=0\n\
    \    local -i result_max_len_total_len_len=0\n    local -i result_min_total_len_len_len=0\n\
    \    local -i result_max_total_len_len_len=0\n    local -i result_min_len_total_len_len_len=0\n\
    \    local -i result_max_len_total_len_len_len=0\n    local -i result_min_total_len_len_len_len=0\n\
    \    local -i result_max_total\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    local -i len=0\n    local -i len_min=0\n    local\
    \ -i len_max=0\n    local -i total_min=0\n    local -i total_max=0\n    local\
    \ -i total=0\n    local -i total_min_index=0\n    local -i total_max_index=0\n\
    \    local -i total_index=0\n    local -i total_min_index_len=0\n    local -i\
    \ total_max_index_len=0\n    local -i total_index_len=0\n    local -i total_min_index_len_min=0\n\
    \    local -i total_max_index_len_min=0\n    local -i total_index_len_min=0\n\
    \    local -i total_min_index_len_max=0\n    local -i total_max_index_len_max=0\n\
    \    local -i total_index_len_max=0\n    local -i total_min_index_len_min_index=0\n\
    \    local -i total_max_index_len_min_index=0\n    local -i total_index_len_min_index=0\n\
    \    local -i total_min_index_len_max_index=0\n    local -i total_max_index_len_max_index=0\n\
    \    local -i total_index_len_max_index=0\n    local -i total_min_index_len_min_index_len=0\n\
    \    local -i total_max_index_len_min_index_len=0\n    local -i total_index_len_min_index_len=0\n\
    \    local -i total_min_index_len_max_index_len=0\n    local -i total_max_index_len_max\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2\
    \ + ${#list2[j]}))\n    done\n    if ((total1 < total2)); then\n        result=(\"\
    ${list1[@]}\")\n    elif ((total1 > total2)); then\n        result=(\"${list2[@]}\"\
    )\n    else\n        result=(\"${list1[@]}\")\n    fi\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_len=$(echo \"$list1\" | wc -c)\n  local list2_len=$(echo \"\
    $list2\" | wc -c)\n  if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n    echo\
    \ \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_item\n  local\
    \ list2_item\n  local list1_item_len\n  local list2_item_len\n  local list1_item_len_total=0\n\
    \  local list2_item_len_total=0\n  local list1_item_len_total_prev=0\n  local\
    \ list2_item_len_total_prev=0\n  local list1_item_len_total_diff=0\n  local list2_item_len_total_diff=0\n\
    \  local list1_item_len_total_diff_prev=0\n  local list2_item_len_total_diff_prev=0\n\
    \  local list1_item_len_total_diff_prev_prev=0\n  local list2_item_len_total_diff_prev_prev=0\n\
    \  local list1_item_len_total_diff_prev_prev_prev=0\n  local list2_item_len_total_diff_prev_prev_prev=0\n\
    \  local list1_item_len_total_diff_prev_prev_prev_prev=0\n  local list2_item_len_total_diff_prev_prev_prev_prev=0\n\
    \  local list1_item_len_total_diff_prev_prev_prev_prev_prev=0\n  local list2_item_len_total_diff_prev_prev_prev_prev_prev=0\n\
    \  local list1_item_len_total_diff_prev_prev_prev_prev_prev_prev=0\n  local list2_item_len_total_diff_prev_prev_prev_prev_prev_prev=0\n\
    \  local list1_item_len_total_diff_prev_prev_prev_prev_prev_prev_prev=0\n  local\
    \ list2_item_len_total_diff_prev_prev_prev_prev_prev_prev_prev=0\n  local list1_item_len_total_diff_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \  local list2\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i i=0\n    local -i j=0\n    local -i sum1=0\n   \
    \ local -i sum2=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i min_len=0\n    local -i max_len=0\n    local -i min_sum=0\n    local\
    \ -i max_sum=0\n    local -a min_list=()\n    local -a max_list=()\n    local\
    \ -a result=()\n\n    if [ $len1 -eq 0 ] && [ $len2 -eq 0 ]; then\n        echo\
    \ \"[]\"\n        return\n    fi\n\n    if [ $len1 -eq 0 ]; then\n        echo\
    \ \"[$2]\"\n        return\n    fi\n\n    if [ $len2 -eq 0 ]; then\n        echo\
    \ \"[$1]\"\n        return\n    fi\n\n    for ((i=0; i<len1; i++)); do\n     \
    \   sum1=$((sum1 + ${#list1[i]}))\n    done\n\n    for ((i=0; i<len2; i++)); do\n\
    \        sum2=$((sum2 + ${#list2[i]}))\n    done\n\n    if [ $sum1 -eq $sum2 ];\
    \ then\n        echo \"[$1]\"\n        return\n    fi\n\n    if [ $sum1 -lt $sum2\
    \ ]; then\n        min_sum=$sum1\n        max_sum=$sum2\n        min_len=$len1\n\
    \        max_len=$len2\n        min_list=(${list1[@]})\n        max_list=(${list2[@]})\n\
    \    else\n        min_sum=$sum2\n        max_sum=$sum1\n        min_len=$len2\n\
    \        max_len=$len1\n        min_list=(${list2[@]})\n        max_list=(${list1[@]})\n\
    \    fi\n\n    for ((i=0; i<min_len; i++)); do\n        for ((j=0; j<max_len;\
    \ j++)); do\n            if\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpp_ide_wj.sh: line 83: syntax error near unexpected token `}''

    /tmp/tmpp_ide_wj.sh: line 83: `}''

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_item\n\
    \    local list2_item\n    local list1_item_len\n    local list2_item_len\n  \
    \  for list1_item in $list1; do\n        list1_item_len=${#list1_item}\n     \
    \   list1_total=$((list1_total + list1_item_len))\n    done\n    for list2_item\
    \ in $list2; do\n        list2_item_len=${#list2_item}\n        list2_total=$((list2_total\
    \ + list2_item_len))\n    done\n    if [ $list1_total -lt $list2_total ]; then\n\
    \        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local result=\"\"\n    for word\
    \ in $list1; do\n        total1=$((total1 + ${#word}))\n    done\n    for word\
    \ in $list2; do\n        total2=$((total2 + ${#word}))\n    done\n    if [ $total1\
    \ -lt $total2 ]; then\n        result=$list1\n    elif [ $total1 -gt $total2 ];\
    \ then\n        result=$list2\n    else\n        result=$list1\n    fi\n    echo\
    \ $result\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n\
    \    done\n    if ((total1 < total2)); then\n        echo \"${list1[@]}\"\n  \
    \  else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n\
    \    done\n    if ((total1 < total2)); then\n        echo \"${list1[@]}\"\n  \
    \  else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2\
    \ + ${#list2[j]}))\n    done\n    if ((total1 < total2)); then\n        result=(\"\
    ${list1[@]}\")\n    elif ((total1 > total2)); then\n        result=(\"${list2[@]}\"\
    )\n    else\n        result=(\"${list1[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total_chars=0\n    local list2_total_chars=0\n    local\
    \ list1_item\n    local list2_item\n    local list1_item_len\n    local list2_item_len\n\
    \    local result_list\n\n    for list1_item in $list1; do\n        list1_item_len=${#list1_item}\n\
    \        list1_total_chars=$((list1_total_chars + list1_item_len))\n    done\n\
    \n    for list2_item in $list2; do\n        list2_item_len=${#list2_item}\n  \
    \      list2_total_chars=$((list2_total_chars + list2_item_len))\n    done\n\n\
    \    if [ $list1_total_chars -lt $list2_total_chars ]; then\n        result_list=\"\
    $list1\"\n    elif [ $list1_total_chars -gt $list2_total_chars ]; then\n     \
    \   result_list=\"$list2\"\n    else\n        result_list=\"$list1\"\n    fi\n\
    \n    echo \"[$result_list]\"\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_item\n  local\
    \ list2_item\n  local list1_item_len\n  local list2_item_len\n  local list1_item_len_total=0\n\
    \  local list2_item_len_total=0\n  local list1_item_len_total_less_than_list2=0\n\
    \  local list2_item_len_total_less_than_list1=0\n  local list1_item_len_total_less_than_list2_list1_item\n\
    \  local list2_item_len_total_less_than_list1_list2_item\n  local list1_item_len_total_less_than_list2_list1_item_len\n\
    \  local list2_item_len_total_less_than_list1_list2_item_len\n  local list1_item_len_total_less_than_list2_list1_item_len_total=0\n\
    \  local list2_item_len_total_less_than_list1_list2_item_len_total=0\n  local\
    \ list1_item_len_total_less_than_list2_list1_item_len_total_less_than_list2=0\n\
    \  local list2_item_len_total_less_than_list1_list2_item_len_total_less_than_list1=0\n\
    \  local list1_item_len_total_less_than_list2_list1_item_len_total_less_than_list2_list1_item\n\
    \  local list2_item_len_total_less_than_list1_list2_item_len_total_less_than_list1_list2_item\n\
    \  local list1_item_len_total_less_than_list2_list1_item_len_total_less_than_list2_list1_item_len\n\
    \  local list2_item_len_total_less_than_list1_list2_item_len_total_less_than_list\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i\n    local -i j\n    local -i sum1=0\n    local -i sum2=0\n  \
    \  local -i len\n    local -i len_min\n    local -i len_max\n    local -i sum_min\n\
    \    local -i sum_max\n    local -a list_min\n    local -a list_max\n    local\
    \ -a list_ret\n    local -i index\n    local -i len_ret\n\n    if [ $len1 -eq\
    \ 0 -a $len2 -eq 0 ]; then\n        echo \"[]\"\n        return\n    fi\n\n  \
    \  if [ $len1 -eq 0 ]; then\n        echo \"[${list2[@]}]\"\n        return\n\
    \    fi\n\n    if [ $len2 -eq 0 ]; then\n        echo \"[${list1[@]}]\"\n    \
    \    return\n    fi\n\n    for ((i=0; i<len1; i++)); do\n        len=${#list1[$i]}\n\
    \        sum1=$((sum1 + len))\n    done\n\n    for ((i=0; i<len2; i++)); do\n\
    \        len=${#list2[$i]}\n        sum2=$((sum2 + len))\n    done\n\n    if [\
    \ $sum1 -lt $sum2 ]; then\n        list_min=(${list1[@]})\n        list_max=(${list2[@]})\n\
    \        sum_min=$sum1\n        sum_max=$sum2\n    else\n        list_min=(${list2[@]})\n\
    \        list_max=(${list1[@]})\n        sum_min=$sum2\n        sum_max=$sum1\n\
    \    fi\n\n    len_min=${#list_min[@]}\n    len_max=${#list_max[@]}\n    len_ret=0\n\
    \    for ((i=0; i<len_min; i++)); do\n        for ((j=0; j<len_max; j++)); do\n\
    \            if [\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp84icffxv.sh: line 82: syntax error near unexpected token `}''

    /tmp/tmp84icffxv.sh: line 82: `}''

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i min=0\n    local -i max=0\n    local -i min_index=0\n    local -i\
    \ max_index=0\n    local -a result=()\n\n    for ((i=0; i<len1; i++)); do\n  \
    \      total1=$((total1 + ${#list1[i]}))\n    done\n    for ((i=0; i<len2; i++));\
    \ do\n        total2=$((total2 + ${#list2[i]}))\n    done\n\n    if [[ $total1\
    \ -lt $total2 ]]; then\n        min=$total1\n        min_index=1\n        max=$total2\n\
    \        max_index=2\n    else\n        min=$total2\n        min_index=2\n   \
    \     max=$total1\n        max_index=1\n    fi\n\n    for ((i=0; i<len1; i++));\
    \ do\n        for ((j=0; j<len2; j++)); do\n            if [[ ${#list1[i]} -eq\
    \ ${#list2[j]} ]]; then\n                result+=(\"\\\"${list1[i]}\\\"\")\n \
    \               break\n            fi\n        done\n    done\n\n    if [[ ${#result[@]}\
    \ -eq 0 ]]; then\n        if [[ $min_index -eq 1 ]]; then\n            echo \"\
    ${list1[@]}\"\n        else\n            echo \"${list2[@]}\"\n        fi\n  \
    \  else\n        echo \"${result[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_item\n  local\
    \ list2_item\n  local list1_item_len\n  local list2_item_len\n  local list1_item_len_total=0\n\
    \  local list2_item_len_total=0\n  local list1_item_len_total_str\n  local list2_item_len_total_str\n\
    \  local list1_item_len_total_str_len\n  local list2_item_len_total_str_len\n\
    \  local list1_item_len_total_str_len_total=0\n  local list2_item_len_total_str_len_total=0\n\
    \  local list1_item_len_total_str_len_total_str\n  local list2_item_len_total_str_len_total_str\n\
    \  local list1_item_len_total_str_len_total_str_len\n  local list2_item_len_total_str_len_total_str_len\n\
    \  local list1_item_len_total_str_len_total_str_len_total=0\n  local list2_item_len_total_str_len_total_str_len_total=0\n\
    \  local list1_item_len_total_str_len_total_str_len_total_str\n  local list2_item_len_total_str_len_total_str_len_total_str\n\
    \  local list1_item_len_total_str_len_total_str_len_total_str_len\n  local list2_item_len_total_str_len_total_str_len_total_str_len\n\
    \  local list1_item_len_total_str_len_total_str_len_total_str_len_total=0\n  local\
    \ list2_item_len_total_str_len_total_str_len_total_str_len_total=0\n  local list1_item_len_total_str_len_total_str_len_total_str_len_\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total_chars=0\n  local list2_total_chars=0\n  local list1_item\n\
    \  local list2_item\n  local list1_items\n  local list2_items\n  local list1_items_count\n\
    \  local list2_items_count\n  local list1_items_count_index=0\n  local list2_items_count_index=0\n\
    \  local list1_items_count_index_max\n  local list2_items_count_index_max\n  local\
    \ list1_items_count_index_max_minus_1\n  local list2_items_count_index_max_minus_1\n\
    \  local list1_items_count_index_max_minus_2\n  local list2_items_count_index_max_minus_2\n\
    \  local list1_items_count_index_max_minus_3\n  local list2_items_count_index_max_minus_3\n\
    \  local list1_items_count_index_max_minus_4\n  local list2_items_count_index_max_minus_4\n\
    \  local list1_items_count_index_max_minus_5\n  local list2_items_count_index_max_minus_5\n\
    \  local list1_items_count_index_max_minus_6\n  local list2_items_count_index_max_minus_6\n\
    \  local list1_items_count_index_max_minus_7\n  local list2_items_count_index_max_minus_7\n\
    \  local list1_items_count_index_max_minus_8\n  local list2_items_count_index_max_minus_8\n\
    \  local list1_items_count_index_max_minus_9\n  local list2_items_count_index_max_minus_9\n\
    \  local list1_items_count_index_max_minus_10\n  local list2_items_count_index_max_minus_10\n\
    \  local list1_items_count_index_max_minus_11\n  local list2_items_count_index_max_minus\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local i=0\n    local j=0\n \
    \   local len1=0\n    local len2=0\n    local str1=\"\"\n    local str2=\"\"\n\
    \    local str1_len=0\n    local str2_len=0\n    local result=\"\"\n    local\
    \ result_len=0\n    local result_total=0\n    local result_index=0\n    local\
    \ result_index_len=0\n    local result_index_total=0\n    local result_index_str=\"\
    \"\n    local result_index_str_len=0\n    local result_index_str_total=0\n   \
    \ local result_index_str_total_len=0\n    local result_index_str_total_len_str=\"\
    \"\n    local result_index_str_total_len_str_len=0\n    local result_index_str_total_len_str_total=0\n\
    \    local result_index_str_total_len_str_total_len=0\n    local result_index_str_total_len_str_total_len_str=\"\
    \"\n    local result_index_str_total_len_str_total_len_str_len=0\n    local result_index_str_total_len_str_total_len_str_total=0\n\
    \    local result_index_str_total_len_str_total_len_str_total_len=0\n    local\
    \ result_index_str_total_len_str_total_len_str_total_len_str=\"\"\n    local result_index_str_total_len_str_total_len_str_total_len_str_len=0\n\
    \    local result_index_str_total_len_str_total_len_str_total_len_str_total=0\n\
    \    local result_index_str_total_len_str_total_len_str_total_len_str_total_len=0\n\
    \    local result_index_str_total_len_str_total_len_str_total_len_str_total_len_str=\"\
    \"\n    local result_index_str_total\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_item\n\
    \    local list2_item\n    local list1_item_len\n    local list2_item_len\n  \
    \  local list1_item_len_total=0\n    local list2_item_len_total=0\n    local list1_item_len_total_min=0\n\
    \    local list2_item_len_total_min=0\n    local list1_item_len_total_min_item\n\
    \    local list2_item_len_total_min_item\n    local list1_item_len_total_min_item_len\n\
    \    local list2_item_len_total_min_item_len\n    local list1_item_len_total_min_item_len_total=0\n\
    \    local list2_item_len_total_min_item_len_total=0\n    local list1_item_len_total_min_item_len_total_min=0\n\
    \    local list2_item_len_total_min_item_len_total_min=0\n    local list1_item_len_total_min_item_len_total_min_item\n\
    \    local list2_item_len_total_min_item_len_total_min_item\n    local list1_item_len_total_min_item_len_total_min_item_len\n\
    \    local list2_item_len_total_min_item_len_total_min_item_len\n    local list1_item_len_total_min_item_len_total_min_item_len_total=0\n\
    \    local list2_item_len_total_min_item_len_total_min_item_len_total=0\n    local\
    \ list1_item_len_total_min_item_len_total_min_item_len_total_min=0\n    local\
    \ list2_item_len_total_min_item_len_total_min_item_len_total_min=0\n    local\
    \ list1_item_len_total_min_item_len_total_\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i\n    local -i j\n    local -i sum1=0\n    local -i sum2=0\n  \
    \  local -i len\n    local -i len_min\n    local -i len_max\n    local -i sum_min\n\
    \    local -i sum_max\n    local -a list_min\n    local -a list_max\n    local\
    \ -a list_ret\n    local -i ret_len=0\n    local -i ret_len_max=0\n    local -i\
    \ ret_len_min=0\n    local -i ret_len_max_min=0\n    local -i ret_len_min_min=0\n\
    \    local -i ret_len_max_max=0\n    local -i ret_len_min_max=0\n    local -i\
    \ ret_len_max_min_min=0\n    local -i ret_len_min_min_min=0\n    local -i ret_len_max_max_min=0\n\
    \    local -i ret_len_min_max_min=0\n    local -i ret_len_max_min_max=0\n    local\
    \ -i ret_len_min_min_max=0\n    local -i ret_len_max_max_max=0\n    local -i ret_len_min_max_max=0\n\
    \    local -i ret_len_max_min_min_min=0\n    local -i ret_len_min_min_min_min=0\n\
    \    local -i ret_len_max_max_min_min=0\n    local -i ret_len_min_max_min_min=0\n\
    \    local -i ret_len_max_min_max_min=0\n    local -i ret_len_min_min_max_min=0\n\
    \    local -i ret_len_max_max_max_min=0\n    local -i ret_len_min_max_max_min=0\n\
    \    local -i ret\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local item\n    for item in\
    \ $list1; do\n        total1=$((total1 + ${#item}))\n    done\n    for item in\
    \ $list2; do\n        total2=$((total2 + ${#item}))\n    done\n    if [ $total1\
    \ -lt $total2 ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i sum1=0\n    local -i sum2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        sum1=$((sum1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        sum2=$((sum2\
    \ + ${#list2[j]}))\n    done\n    if [[ $sum1 -lt $sum2 ]]; then\n        result=(\"\
    ${list1[@]}\")\n    elif [[ $sum1 -gt $sum2 ]]; then\n        result=(\"${list2[@]}\"\
    )\n    else\n        result=(\"${list1[@]}\")\n    fi\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i=0\n    local -i j=0\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i len=0\n    local -i len_tmp=0\n    local -i tmp=0\n    local -i\
    \ index=0\n    local -i index_tmp=0\n    local -i flag=0\n    local -i flag_tmp=0\n\
    \    local -a result=()\n    local -a result_tmp=()\n    local -a tmp_list=()\n\
    \    local -a tmp_list_tmp=()\n    local -a tmp_list_tmp2=()\n    local -a tmp_list_tmp3=()\n\
    \    local -a tmp_list_tmp4=()\n    local -a tmp_list_tmp5=()\n    local -a tmp_list_tmp6=()\n\
    \    local -a tmp_list_tmp7=()\n    local -a tmp_list_tmp8=()\n    local -a tmp_list_tmp9=()\n\
    \    local -a tmp_list_tmp10=()\n    local -a tmp_list_tmp11=()\n    local -a\
    \ tmp_list_tmp12=()\n    local -a tmp_list_tmp13=()\n    local -a tmp_list_tmp14=()\n\
    \    local -a tmp_list_tmp15=()\n    local -a tmp_list_tmp16=()\n    local -a\
    \ tmp_list_tmp17=()\n    local -a tmp_list_tmp18=()\n    local -a tmp_list_tmp19=()\n\
    \    local -a tmp_list_tmp20=()\n    local -a tmp_list_tmp21=()\n    local -a\
    \ tmp_list_tmp22=()\n    local -a tmp_list_tmp23=()\n    local -a tmp_list_tmp24=()\n\
    \    local -a tmp_list_tmp25=()\n    local -a tmp_list_tmp26=\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local item\n    for item in\
    \ $list1; do\n        total1=$((total1 + ${#item}))\n    done\n    for item in\
    \ $list2; do\n        total2=$((total2 + ${#item}))\n    done\n    if [ $total1\
    \ -lt $total2 ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i=0\n    local -i j=0\n    local -i sum1=0\n    local -i sum2=0\n\
    \    local -i len=0\n    local -i len_min=0\n    local -i len_max=0\n    local\
    \ -i sum_min=0\n    local -i sum_max=0\n    local -a list_min=()\n    local -a\
    \ list_max=()\n    local -a list_res=()\n    local -a list_tmp=()\n    local -a\
    \ list_tmp2=()\n    local -a list_tmp3=()\n    local -a list_tmp4=()\n    local\
    \ -a list_tmp5=()\n    local -a list_tmp6=()\n    local -a list_tmp7=()\n    local\
    \ -a list_tmp8=()\n    local -a list_tmp9=()\n    local -a list_tmp10=()\n   \
    \ local -a list_tmp11=()\n    local -a list_tmp12=()\n    local -a list_tmp13=()\n\
    \    local -a list_tmp14=()\n    local -a list_tmp15=()\n    local -a list_tmp16=()\n\
    \    local -a list_tmp17=()\n    local -a list_tmp18=()\n    local -a list_tmp19=()\n\
    \    local -a list_tmp20=()\n    local -a list_tmp21=()\n    local -a list_tmp22=()\n\
    \    local -a list_tmp23=()\n    local -a list_tmp24=()\n    local -a list_tmp25=()\n\
    \    local -a list_tmp26=()\n    local -a list_tmp27=()\n    local -a list_tmp28=()\n\
    \    local -a list_tmp29=()\n    local -a list_tmp30=()\n    local -a list_tmp31=()\n\
    \    local -a list_tmp\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_item\n\
    \    local list2_item\n    local list1_item_len\n    local list2_item_len\n  \
    \  local list1_item_len_total=0\n    local list2_item_len_total=0\n    local list1_item_len_total_max=0\n\
    \    local list2_item_len_total_max=0\n    local list1_item_len_total_max_item\n\
    \    local list2_item_len_total_max_item\n    local list1_item_len_total_max_item_len\n\
    \    local list2_item_len_total_max_item_len\n    local list1_item_len_total_max_item_len_total=0\n\
    \    local list2_item_len_total_max_item_len_total=0\n    local list1_item_len_total_max_item_len_total_max=0\n\
    \    local list2_item_len_total_max_item_len_total_max=0\n    local list1_item_len_total_max_item_len_total_max_item\n\
    \    local list2_item_len_total_max_item_len_total_max_item\n    local list1_item_len_total_max_item_len_total_max_item_len\n\
    \    local list2_item_len_total_max_item_len_total_max_item_len\n    local list1_item_len_total_max_item_len_total_max_item_len_total=0\n\
    \    local list2_item_len_total_max_item_len_total_max_item_len_total=0\n    local\
    \ list1_item_len_total_max_item_len_total_max_item_len_total_max=0\n    local\
    \ list2_item_len_total_max_item_len_total_max_item_len_total_max=0\n    local\
    \ list1_item_len_total_max_item_len_total_\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i total1=0\n    local -i total2=0\n    local -i i=0\n    local -i\
    \ j=0\n    local -i len=0\n    local -i len_max=0\n    local -a result=()\n  \
    \  local -a result_max=()\n    local -a result_tmp=()\n    local -a result_tmp_max=()\n\
    \    local -a list=()\n    local -a list_max=()\n    local -a list_tmp=()\n  \
    \  local -a list_tmp_max=()\n    local -a list_tmp_max_max=()\n    local -a list_tmp_max_max_max=()\n\
    \    local -a list_tmp_max_max_max_max=()\n    local -a list_tmp_max_max_max_max_max=()\n\
    \    local -a list_tmp_max_max_max_max_max_max=()\n    local -a list_tmp_max_max_max_max_max_max_max=()\n\
    \    local -a list_tmp_max_max_max_max_max_max_max_max=()\n    local -a list_tmp_max_max_max_max_max_max_max_max_max=()\n\
    \    local -a list_tmp_max_max_max_max_max_max_max_max_max_max=()\n    local -a\
    \ list_tmp_max_max_max_max_max_max_max_max_max_max_max=()\n    local -a list_tmp_max_max_max_max_max_max_max_max_max_max_max_max=()\n\
    \    local -a list_tmp_max_max_max_max_max_max_max_max_max_max_max_max_max=()\n\
    \    local -a list_tmp_max_max_max_max_max_max_max_max_max_max\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    local -i len=0\n    local -i min=0\n    local -i max=0\n\
    \    local -i min_total=0\n    local -i max_total=0\n    local -i min_len=0\n\
    \    local -i max_len=0\n    local -i min_index=0\n    local -i max_index=0\n\
    \    local -i min_total_index=0\n    local -i max_total_index=0\n    local -i\
    \ min_len_index=0\n    local -i max_len_index=0\n    local -i min_index_index=0\n\
    \    local -i max_index_index=0\n    local -i min_total_index_index=0\n    local\
    \ -i max_total_index_index=0\n    local -i min_len_index_index=0\n    local -i\
    \ max_len_index_index=0\n    local -i min_index_index_index=0\n    local -i max_index_index_index=0\n\
    \    local -i min_total_index_index_index=0\n    local -i max_total_index_index_index=0\n\
    \    local -i min_len_index_index_index=0\n    local -i max_len_index_index_index=0\n\
    \    local -i min_index_index_index_index=0\n    local -i max_index_index_index_index=0\n\
    \    local -i min_total_index_index_index_index=0\n    local -i max_total_index_index_index_index=0\n\
    \    local -i min_len_index_index_index_index=0\n    local -i max_len_index_index_index_index=0\n\
    \    local -i min_index_index\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_item\n\
    \    local list2_item\n    for list1_item in $list1; do\n        list1_total=$((list1_total\
    \ + ${#list1_item}))\n    done\n    for list2_item in $list2; do\n        list2_total=$((list2_total\
    \ + ${#list2_item}))\n    done\n    if [ $list1_total -lt $list2_total ]; then\n\
    \        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    local -i len=0\n    local -i min=0\n    local -i max=0\n\
    \    local -i min_total=0\n    local -i max_total=0\n    local -i min_index=0\n\
    \    local -i max_index=0\n    local -i min_len=0\n    local -i max_len=0\n  \
    \  local -i min_len_index=0\n    local -i max_len_index=0\n    local -i min_len_total=0\n\
    \    local -i max_len_total=0\n    local -i min_len_total_index=0\n    local -i\
    \ max_len_total_index=0\n    local -i min_len_total_len=0\n    local -i max_len_total_len=0\n\
    \    local -i min_len_total_len_index=0\n    local -i max_len_total_len_index=0\n\
    \    local -i min_len_total_len_total=0\n    local -i max_len_total_len_total=0\n\
    \    local -i min_len_total_len_total_index=0\n    local -i max_len_total_len_total_index=0\n\
    \    local -i min_len_total_len_total_len=0\n    local -i max_len_total_len_total_len=0\n\
    \    local -i min_len_total_len_total_len_index=0\n    local -i max_len_total_len_total_len_index=0\n\
    \    local -i min_len_total_len_total_len_total=0\n    local -i max_len_total_len_total_len_total=0\n\
    \    local -i min_len_total_len_total\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # Write your code here\n    # You\
    \ can use the following command to get the length of a string:\n    # ${#string}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[@]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[*]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[@]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[*]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[@]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[*]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[@]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[*]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[@]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[*]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[@]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[*]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[@]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[*]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[@]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[*]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[@]}\n\
    \    # You can use the following command to get the length of a list:\n    # ${#list[*]}\n\
    \    # You can use the following command to get the length\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6qq7jdnk.sh: line 60: syntax error near unexpected token `}''

    /tmp/tmp6qq7jdnk.sh: line 60: `}''

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # Write your code here\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuo6edujb.sh: line 190: syntax error near unexpected token `}''

    /tmp/tmpuo6edujb.sh: line 190: `}''

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=($1)\n    local list2=($2)\n\
    \    local total1=0\n    local total2=0\n    local i=0\n    local j=0\n    local\
    \ len1=${#list1[@]}\n    local len2=${#list2[@]}\n    local result=()\n    for\
    \ ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n    done\n\
    \    for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n\
    \    done\n    if [ $total1 -lt $total2 ]; then\n        result=(\"${list1[@]}\"\
    )\n    elif [ $total1 -gt $total2 ]; then\n        result=(\"${list2[@]}\")\n\
    \    else\n        result=(\"${list1[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=$1\n    local list2=$2\n\
    \    local list1_total=0\n    local list2_total=0\n    local list1_item\n    local\
    \ list2_item\n    for list1_item in $list1; do\n        list1_total=$((list1_total\
    \ + ${#list1_item}))\n    done\n    for list2_item in $list2; do\n        list2_total=$((list2_total\
    \ + ${#list2_item}))\n    done\n    if [ $list1_total -lt $list2_total ]; then\n\
    \        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=$1\n    local list2=$2\n\
    \    local list1_len=$(echo $list1 | wc -c)\n    local list2_len=$(echo $list2\
    \ | wc -c)\n    if [ $list1_len -lt $list2_len ]; then\n        echo $list1\n\
    \    else\n        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    for word in $list1;\
    \ do\n        list1_total=$((list1_total + ${#word}))\n    done\n    for word\
    \ in $list2; do\n        list2_total=$((list2_total + ${#word}))\n    done\n \
    \   if [ $list1_total -lt $list2_total ]; then\n        echo \"$list1\"\n    else\n\
    \        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # Write your code here\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpuo6edujb.sh: line 190: syntax error near unexpected token `}''

    /tmp/tmpuo6edujb.sh: line 190: `}''

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_len=$(echo \"$list1\" | wc -c)\n  local list2_len=$(echo \"\
    $list2\" | wc -c)\n  if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n    echo\
    \ \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo \"$list1\" | awk '{print length}')\n    local\
    \ list2_len=$(echo \"$list2\" | awk '{print length}')\n    if [ $list1_len -lt\
    \ $list2_len ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2\
    \ + ${#list2[j]}))\n    done\n    if ((total1 < total2)); then\n        result=(\"\
    ${list1[@]}\")\n    elif ((total1 > total2)); then\n        result=(\"${list2[@]}\"\
    )\n    else\n        result=(\"${list1[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n  \
    \      echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local list1_array=()\n    local\
    \ list2_array=()\n    local i=0\n    local j=0\n    local result=()\n    for word\
    \ in $list1; do\n        list1_array[$i]=$word\n        ((i++))\n    done\n  \
    \  for word in $list2; do\n        list2_array[$j]=$word\n        ((j++))\n  \
    \  done\n    for word in ${list1_array[@]}; do\n        total1=$((total1 + ${#word}))\n\
    \    done\n    for word in ${list2_array[@]}; do\n        total2=$((total2 + ${#word}))\n\
    \    done\n    if [[ $total1 -lt $total2 ]]; then\n        result=(\"${list1_array[@]}\"\
    )\n    else\n        result=(\"${list2_array[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2\
    \ + ${#list2[j]}))\n    done\n    if [[ $total1 -lt $total2 ]]; then\n       \
    \ result=(${list1[@]})\n    elif [[ $total1 -gt $total2 ]]; then\n        result=(${list2[@]})\n\
    \    else\n        result=(${list1[@]})\n    fi\n    echo ${result[@]}\n}\n\n\
    candidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_array=()\n\
    \    local list2_array=()\n    local list1_array_len=0\n    local list2_array_len=0\n\
    \    local i=0\n    local j=0\n    local list1_item=\"\"\n    local list2_item=\"\
    \"\n    local list1_item_len=0\n    local list2_item_len=0\n    local result_list=()\n\
    \    local result_list_len=0\n    local result_list_item=\"\"\n    local result_list_item_len=0\n\
    \    local result_list_item_len_total=0\n    local result_list_item_len_total_min=0\n\
    \    local result_list_item_len_total_min_index=0\n    local result_list_item_len_total_min_index_list=0\n\
    \    local result_list_item_len_total_min_index_list_item=\"\"\n    local result_list_item_len_total_min_index_list_item_len=0\n\
    \    local result_list_item_len_total_min_index_list_item_len_total=0\n    local\
    \ result_list_item_len_total_min_index_list_item_len_total_min=0\n    local result_list_item_len_total_min_index_list_item_len_total_min_index=0\n\
    \    local result_list_item_len_total_min_index_list_item_len_total_min_index_list=0\n\
    \    local result_list_item_len_total_min_index_list_item_len_total_min_index_list_item=\"\
    \"\n    local result_list_item_len_total_min_index_list_item_len_total_min_index_list_item_len=0\n\
    \    local result_list_item_len_total_min_index_list_item_len_total_min_index_list_item_len_total=0\n\
    \    local result_list_item_len_\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_len=$(echo \"$list1\" | wc -c)\n  local list2_len=$(echo \"\
    $list2\" | wc -c)\n  if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n    echo\
    \ \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n  \
    \      echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total_len=0\n    local list2_total_len=0\n    local list1_len=0\n\
    \    local list2_len=0\n    local list1_item\n    local list2_item\n    local\
    \ list1_item_len\n    local list2_item_len\n    local list1_item_quoted\n    local\
    \ list2_item_quoted\n    local list1_item_quoted_len\n    local list2_item_quoted_len\n\
    \    local list1_item_escaped\n    local list2_item_escaped\n    local list1_item_escaped_len\n\
    \    local list2_item_escaped_len\n    local list1_item_escaped_quoted\n    local\
    \ list2_item_escaped_quoted\n    local list1_item_escaped_quoted_len\n    local\
    \ list2_item_escaped_quoted_len\n    local list1_item_escaped_quoted_len_diff\n\
    \    local list2_item_escaped_quoted_len_diff\n    local list1_item_escaped_quoted_len_diff_abs\n\
    \    local list2_item_escaped_quoted_len_diff_abs\n    local list1_item_escaped_quoted_len_diff_abs_min\n\
    \    local list2_item_escaped_quoted_len_diff_abs_min\n    local list1_item_escaped_quoted_len_diff_abs_min_index\n\
    \    local list2_item_escaped_quoted_len_diff_abs_min_index\n    local list1_item_escaped_quoted_len_diff_abs_min_index_item\n\
    \    local list2_item_escaped_quoted_len_diff_abs_min_index_item\n    local list1_item_escaped_quoted_len_diff_abs_min_index_item_len\n\
    \    local list2_item_escaped_quoted_len_diff_abs_min_index_item_len\n    local\
    \ list1_item_escaped_quoted_\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n\
    \    done\n    if ((total1 < total2)); then\n        echo \"${list1[@]}\"\n  \
    \  else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i=0\n    local -i j=0\n    local -i sum1=0\n    local -i sum2=0\n\
    \    local -i sum=0\n    local -i len=0\n    local -i len_list1=0\n    local -i\
    \ len_list2=0\n    local -a list_return=()\n    local -a list_return1=()\n   \
    \ local -a list_return2=()\n    local -a list_return3=()\n    local -a list_return4=()\n\
    \    local -a list_return5=()\n    local -a list_return6=()\n    local -a list_return7=()\n\
    \    local -a list_return8=()\n    local -a list_return9=()\n    local -a list_return10=()\n\
    \    local -a list_return11=()\n    local -a list_return12=()\n    local -a list_return13=()\n\
    \    local -a list_return14=()\n    local -a list_return15=()\n    local -a list_return16=()\n\
    \    local -a list_return17=()\n    local -a list_return18=()\n    local -a list_return19=()\n\
    \    local -a list_return20=()\n    local -a list_return21=()\n    local -a list_return22=()\n\
    \    local -a list_return23=()\n    local -a list_return24=()\n    local -a list_return25=()\n\
    \    local -a list_return26=()\n    local -a list_return27=()\n    local -a list_return28=()\n\
    \    local -a list_return29=()\n    local -a list_return30=()\n    local -a list_return31=()\n\
    \    local -a list_return32=()\n    local -a list_return33=()\n    local -a list_return34=()\n\
    \    local -\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n  \
    \      echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=$1\n    local list2=$2\n\
    \    local list1_total=0\n    local list2_total=0\n    local list1_count=0\n \
    \   local list2_count=0\n    local list1_item\n    local list2_item\n    local\
    \ list1_item_count\n    local list2_item_count\n    local list1_item_count_total=0\n\
    \    local list2_item_count_total=0\n    local list1_item_count_total_last=0\n\
    \    local list2_item_count_total_last=0\n    local list1_item_count_total_last_last=0\n\
    \    local list2_item_count_total_last_last=0\n    local list1_item_count_total_last_last_last=0\n\
    \    local list2_item_count_total_last_last_last=0\n    local list1_item_count_total_last_last_last_last=0\n\
    \    local list2_item_count_total_last_last_last_last=0\n    local list1_item_count_total_last_last_last_last_last=0\n\
    \    local list2_item_count_total_last_last_last_last_last=0\n    local list1_item_count_total_last_last_last_last_last_last=0\n\
    \    local list2_item_count_total_last_last_last_last_last_last=0\n    local list1_item_count_total_last_last_last_last_last_last_last=0\n\
    \    local list2_item_count_total_last_last_last_last_last_last_last=0\n    local\
    \ list1_item_count_total_last_last_last_last_last_last_last_last=0\n    local\
    \ list2_item_count_total_last_last_last_last_last_last_last_last=0\n    local\
    \ list1_item_count_total_last_last_last_last_last_last_last_last_last=0\n    local\
    \ list2_item_count_total_last_last_last_last_last\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n\
    \    done\n    if ((total1 < total2)); then\n        echo \"${list1[@]}\"\n  \
    \  else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=$1\n    local list2=$2\n\
    \    local list1_len=$(echo $list1 | wc -c)\n    local list2_len=$(echo $list2\
    \ | wc -c)\n    if [ $list1_len -lt $list2_len ]; then\n        echo $list1\n\
    \    else\n        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local total1=0\n    local total2=0\n\
    \    local i\n    for i in \"${list1[@]}\"; do\n        total1=$((total1 + ${#i}))\n\
    \    done\n    for i in \"${list2[@]}\"; do\n        total2=$((total2 + ${#i}))\n\
    \    done\n    if [ $total1 -lt $total2 ]; then\n        result=(\"${list1[@]}\"\
    )\n    else\n        result=(\"${list2[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_len=$(echo \"$list1\" | awk '{print NF}')\n  local list2_len=$(echo\
    \ \"$list2\" | awk '{print NF}')\n  local list1_total_len=$(echo \"$list1\" |\
    \ awk '{for(i=1;i<=NF;i++) {print length($i)}}' | paste -sd+ - | bc)\n  local\
    \ list2_total_len=$(echo \"$list2\" | awk '{for(i=1;i<=NF;i++) {print length($i)}}'\
    \ | paste -sd+ - | bc)\n  if [ \"$list1_total_len\" -lt \"$list2_total_len\" ];\
    \ then\n    echo \"$list1\"\n  elif [ \"$list1_total_len\" -gt \"$list2_total_len\"\
    \ ]; then\n    echo \"$list2\"\n  else\n    echo \"$list1\"\n  fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpo43n4ata.sh: line 26: [: : integer expression expected

    /tmp/tmpo43n4ata.sh: line 28: [: : integer expression expected

    /tmp/tmpo43n4ata.sh: line 26: [: : integer expression expected

    /tmp/tmpo43n4ata.sh: line 28: [: : integer expression expected

    /tmp/tmpo43n4ata.sh: line 26: [: : integer expression expected

    /tmp/tmpo43n4ata.sh: line 28: [: : integer expression expected

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_len=$(echo \"$list1\" | wc -c)\n  local list2_len=$(echo \"\
    $list2\" | wc -c)\n  if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n    echo\
    \ \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=$1\n    local list2=$2\n\
    \    local list1_total=0\n    local list2_total=0\n    local list1_array=($list1)\n\
    \    local list2_array=($list2)\n    local list1_len=${#list1_array[@]}\n    local\
    \ list2_len=${#list2_array[@]}\n    local i=0\n    local j=0\n    local list1_str\n\
    \    local list2_str\n    local list1_str_len\n    local list2_str_len\n    local\
    \ result_list=()\n    local result_list_len=0\n    local result_list_str\n   \
    \ local result_list_str_len\n    local result_list_str_len_max=0\n    local result_list_str_len_min=0\n\
    \    local result_list_str_len_max_index=0\n    local result_list_str_len_min_index=0\n\
    \    local result_list_str_len_max_str\n    local result_list_str_len_min_str\n\
    \    local result_list_str_len_max_str_len\n    local result_list_str_len_min_str_len\n\
    \    local result_list_str_len_max_str_len_index=0\n    local result_list_str_len_min_str_len_index=0\n\
    \    local result_list_str_len_max_str_len_str\n    local result_list_str_len_min_str_len_str\n\
    \    local result_list_str_len_max_str_len_str_len\n    local result_list_str_len_min_str_len_str_len\n\
    \    local result_list_str_len_max_str_len_str_len_index=0\n    local result_list_str_len_min_str_len_str_len_index=0\n\
    \    local result_list_str_len_max_str_len_str_len_str\n    local result_list_str_len_min_str_len_str_len_str\n\
    \    local result_list_str_len_max_str\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i=0\n    local -i j=0\n    local -i sum1=0\n    local -i sum2=0\n\
    \    local -i len=0\n    local -i len_min=0\n    local -i len_max=0\n    local\
    \ -i sum_min=0\n    local -i sum_max=0\n    local -a list_min=()\n    local -a\
    \ list_max=()\n    local -a list_ret=()\n    local -a list_tmp=()\n    local str=\"\
    \"\n    local str_tmp=\"\"\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
    \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n   \
    \ local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n   \
    \ local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n   \
    \ local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n   \
    \ local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n   \
    \ local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n   \
    \ local -i vv=0\n    local -i ww=0\n    local -i xx=\n}\n\ncandidate() {\n   \
    \ total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local total1=0\n    local total2=0\n\
    \    local i=0\n    local j=0\n    local len1=0\n    local len2=0\n    local list1=($1)\n\
    \    local list2=($2)\n    len1=${#list1[@]}\n    len2=${#list2[@]}\n    for ((i=0;\
    \ i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n    done\n   \
    \ for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n  \
    \  done\n    if [ $total1 -lt $total2 ]; then\n        echo \"${list1[@]}\"\n\
    \    else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    local -i len=0\n    local -i min=0\n    local -i max=0\n\
    \    local -i tmp=0\n    local -i tmp1=0\n    local -i tmp2=0\n    local -i tmp3=0\n\
    \    local -i tmp4=0\n    local -i tmp5=0\n    local -i tmp6=0\n    local -i tmp7=0\n\
    \    local -i tmp8=0\n    local -i tmp9=0\n    local -i tmp10=0\n    local -i\
    \ tmp11=0\n    local -i tmp12=0\n    local -i tmp13=0\n    local -i tmp14=0\n\
    \    local -i tmp15=0\n    local -i tmp16=0\n    local -i tmp17=0\n    local -i\
    \ tmp18=0\n    local -i tmp19=0\n    local -i tmp20=0\n    local -i tmp21=0\n\
    \    local -i tmp22=0\n    local -i tmp23=0\n    local -i tmp24=0\n    local -i\
    \ tmp25=0\n    local -i tmp26=0\n    local -i tmp27=0\n    local -i tmp28=0\n\
    \    local -i tmp29=0\n    local -i tmp30=0\n    local -i tmp31=0\n    local -i\
    \ tmp32=0\n    local -i tmp33=0\n    local -i tmp34=0\n    local -i tmp35=0\n\
    \    local -i tmp36=0\n    local -i tmp37=0\n    local -i tmp38=0\n    local -i\
    \ tmp39=0\n    local -i tmp40=0\n    local -i tmp41=0\n    local -i tmp42=0\n\
    \    local -i tmp43=\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2\
    \ + ${#list2[j]}))\n    done\n    if ((total1 < total2)); then\n        result=(\"\
    ${list1[@]}\")\n    elif ((total1 > total2)); then\n        result=(\"${list2[@]}\"\
    )\n    else\n        result=(\"${list1[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local total1=0\n    local total2=0\n\
    \    local list1=()\n    local list2=()\n    for word in $1; do\n        list1+=($word)\n\
    \        total1=$((total1 + ${#word}))\n    done\n    for word in $2; do\n   \
    \     list2+=($word)\n        total2=$((total2 + ${#word}))\n    done\n    if\
    \ [[ $total1 -lt $total2 ]]; then\n        echo ${list1[@]}\n    else\n      \
    \  echo ${list2[@]}\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i min_len=0\n    local -i max_len=0\n    local -i min_total=0\n  \
    \  local -i max_total=0\n    local -a min_list=()\n    local -a max_list=()\n\
    \    local -a result=()\n\n    if [ $len1 -eq 0 -a $len2 -eq 0 ]; then\n     \
    \   echo \"[]\"\n        return\n    fi\n\n    if [ $len1 -eq 0 ]; then\n    \
    \    echo \"[${list2[@]}]\"\n        return\n    fi\n\n    if [ $len2 -eq 0 ];\
    \ then\n        echo \"[${list1[@]}]\"\n        return\n    fi\n\n    for ((i=0;\
    \ i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n    done\n\n \
    \   for ((i=0; i<len2; i++)); do\n        total2=$((total2 + ${#list2[i]}))\n\
    \    done\n\n    if [ $total1 -eq $total2 ]; then\n        echo \"[${list1[@]}]\"\
    \n        return\n    fi\n\n    if [ $total1 -lt $total2 ]; then\n        min_total=$total1\n\
    \        min_len=$len1\n        min_list=(${list1[@]})\n        max_total=$total2\n\
    \        max_len=$len2\n        max_list=(${list2[@]})\n    else\n        min_total=$total2\n\
    \        min_len=$len2\n        min_list=(${list2[@]})\n        max_total=$total1\n\
    \        max_len=$len1\n        max_list=(${list1[@]})\n    fi\n\n    for ((i=0;\
    \ i<min_len; i++)); do\n        if [ ${#min_list[\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1vr7q6ap.sh: line 102: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local\
    \ -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
    \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i A=0\n\
    \    local -i B=0\n    local -i C=0\n    local -i D=0\n    local -i E=0\n    local\
    \ -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n    local -i J=0\n\
    \    local -i K=0\n    local -i L=0\n    local -i M=0\n    local -i N=0\n    local\
    \ -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n    local -i S=0\n\
    \    local -i T=0\n    local -i U=0\n    local -i V=0\n    local -i W=0\n    local\
    \ -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i space=0\n    local\
    \ -i other=0\n    local -i total=0\n    local -i total_list1=0\n    local -i total_list2=0\n\
    \    local -i total_list1_less_than_list2=0\n    local -i total_list2_less_than_list1=0\n\
    \    local -i total_list1_equal_list2=0\n    local -i total_list2_equal_list1=0\n\
    \    local -i total\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=0\n  local total2=0\n  local list1_array=()\n  local list2_array=()\n\
    \  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local\
    \ m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local\
    \ s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local\
    \ y=0\n  local z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local\
    \ e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n  local\
    \ c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ a=0\n  local b=0\n  local c=0\n  local d=0\n  local e=0\n  local f=0\n}\n\n\
    candidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2\
    \ + ${#list2[j]}))\n    done\n    if ((total1 < total2)); then\n        result=(\"\
    ${list1[@]}\")\n    elif ((total1 > total2)); then\n        result=(\"${list2[@]}\"\
    )\n    else\n        result=(\"${list1[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=$(total_chars \"$list1\")\n    local total2=$(total_chars\
    \ \"$list2\")\n    if [ $total1 -lt $total2 ]; then\n        echo \"$list1\"\n\
    \    elif [ $total1 -gt $total2 ]; then\n        echo \"$list2\"\n    else\n \
    \       echo \"$list1\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphlndezop.sh: line 22: total_chars: command not found

    /tmp/tmphlndezop.sh: line 23: total_chars: command not found

    /tmp/tmphlndezop.sh: line 22: total_chars: command not found

    /tmp/tmphlndezop.sh: line 23: total_chars: command not found

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    for word in $list1; do\n   \
    \     total1=$((total1 + ${#word}))\n    done\n    for word in $list2; do\n  \
    \      total2=$((total2 + ${#word}))\n    done\n    if [ $total1 -lt $total2 ];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    for ((i=0; i<${#list1[@]}; i++)); do\n\
    \        total1=$((total1 + ${#list1[$i]}))\n    done\n    for ((i=0; i<${#list2[@]};\
    \ i++)); do\n        total2=$((total2 + ${#list2[$i]}))\n    done\n    if ((total1\
    \ < total2)); then\n        result=(\"${list1[@]}\")\n    elif ((total1 > total2));\
    \ then\n        result=(\"${list2[@]}\")\n    else\n        result=(\"${list1[@]}\"\
    )\n    fi\n    for ((i=0; i<${#result[@]}; i++)); do\n        result[$i]=\"\\\"\
    ${result[$i]}\\\"\"\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=$1\n  local list2=$2\n\
    \  local list1_len=$(echo $list1 | tr -d ' ' | wc -c)\n  local list2_len=$(echo\
    \ $list2 | tr -d ' ' | wc -c)\n  if [ $list1_len -lt $list2_len ]; then\n    echo\
    \ $list1\n  else\n    echo $list2\n  fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n  \
    \      echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    for word in $list1; do\n   \
    \     total1=$((total1 + ${#word}))\n    done\n    for word in $list2; do\n  \
    \      total2=$((total2 + ${#word}))\n    done\n    if [ $total1 -lt $total2 ];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i min_len=0\n    local -i max_len=0\n    local -i min_total=0\n  \
    \  local -i max_total=0\n    local -a min_list=()\n    local -a max_list=()\n\
    \    local -a result=()\n\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((i=0; i<len2; i++)); do\n        total2=$((total2\
    \ + ${#list2[i]}))\n    done\n\n    if [ $total1 -lt $total2 ]; then\n       \
    \ min_len=$len1\n        max_len=$len2\n        min_total=$total1\n        max_total=$total2\n\
    \        min_list=(\"${list1[@]}\")\n        max_list=(\"${list2[@]}\")\n    else\n\
    \        min_len=$len2\n        max_len=$len1\n        min_total=$total2\n   \
    \     max_total=$total1\n        min_list=(\"${list2[@]}\")\n        max_list=(\"\
    ${list1[@]}\")\n    fi\n\n    for ((i=0; i<min_len; i++)); do\n        if [ ${#min_list[i]}\
    \ -lt ${#max_list[i]} ]; then\n            result+=(\"${min_list[i]}\")\n    \
    \    else\n            result+=(\"${max_list[i]}\")\n        fi\n    done\n  \
    \  for ((i=min_len; i<max_len; i++)); do\n        result+=(\"${max_list[i]}\"\
    )\n    done\n\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # TODO: Write your code here\n\
    \    # Hint: You can use the following command to get the length of a string\n\
    \    # ${#string}\n    # Hint: You can use the following command to get the length\
    \ of an array\n    # ${#array[@]}\n    # Hint: You can use the following command\
    \ to convert a string to an array\n    # array=($string)\n    # Hint: You can\
    \ use the following command to convert an array to a string\n    # string=\"${array[@]}\"\
    \n    # Hint: You can use the following command to get the sum of an array\n \
    \   # sum=(${array[@]} + 0)\n    # Hint: You can use the following command to\
    \ get the minimum of an array\n    # min=(${array[@]} - 0)\n    # Hint: You can\
    \ use the following command to get the maximum of an array\n    # max=(${array[@]}\
    \ - 0)\n    # Hint: You can use the following command to get the average of an\
    \ array\n    # avg=(${array[@]} / ${#array[@]})\n    # Hint: You can use the following\
    \ command to sort an array\n    # sorted=($(printf '%s\\n' \"${array[@]}\" | sort))\n\
    \    # Hint: You can use the following command to reverse an array\n    # reversed=($(printf\
    \ '%s\\n' \"${array[@]}\" | sort -r))\n    # Hint: You can use the following command\
    \ to get the unique elements of an array\n    # unique=($(printf '%s\\n' \"${array[@]}\"\
    \ | sort -u))\n    # Hint: You can use the following command to get the elements\
    \ of an array that are not in another array\n    # diff=($(printf '%s\\n' \"${array1[@]}\"\
    \ \"${array2[@]}\" | sort -u))\n    # Hint: You can use the following command\
    \ to get the elements of an array that are in another array\n    # intersect=($(printf\
    \ '%s\\n' \"${array1[@]}\" \"${array2[@]}\" | sort -u | uniq -d))\n    # Hint:\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpqtziqxs8.sh: line 48: syntax error near unexpected token `}''

    /tmp/tmpqtziqxs8.sh: line 48: `}''

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo \"$list1\" | awk '{print length}')\n    local\
    \ list2_len=$(echo \"$list2\" | awk '{print length}')\n    if [ $list1_len -lt\
    \ $list2_len ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_array=()\n \
    \ local list2_array=()\n  local list1_array_index=0\n  local list2_array_index=0\n\
    \  local list1_array_length=0\n  local list2_array_length=0\n  local list1_array_element=''\n\
    \  local list2_array_element=''\n  local list1_array_element_length=0\n  local\
    \ list2_array_element_length=0\n  local result=''\n  local result_array=()\n \
    \ local result_array_index=0\n  local result_array_length=0\n  local result_array_element=''\n\
    \  local result_array_element_length=0\n  local result_array_element_length_max=0\n\
    \  local result_array_element_length_max_index=0\n  local result_array_element_length_max_element=''\n\
    \  local result_array_element_length_max_element_length=0\n  local result_array_element_length_max_element_length_max=0\n\
    \  local result_array_element_length_max_element_length_max_index=0\n  local result_array_element_length_max_element_length_max_element=''\n\
    \  local result_array_element_length_max_element_length_max_element_length=0\n\
    \  local result_array_element_length_max_element_length_max_element_length_max=0\n\
    \  local result_array_element_length_max_element_length_max_element_length_max_index=0\n\
    \  local result_array_element_length_max_element_length_max_element_length_max_element=''\n\
    \  local result_array_element_length_max_element_length_max_element_length_max_element_length=0\n\
    \  local result_array_element_length_max_element_length_max_element_length_max_element_length_max=0\n\
    \  local result_array_element_length_max_element\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local total_1=0\n  local total_2=0\n\
    \  local list_1=()\n  local list_2=()\n  local list_1_len=0\n  local list_2_len=0\n\
    \  local i=0\n  local j=0\n  local k=0\n  local tmp=0\n  local tmp_len=0\n  local\
    \ tmp_list=()\n  local tmp_list_len=0\n  local tmp_list_str=\"\"\n  local tmp_list_str_len=0\n\
    \  local tmp_list_str_len_min=0\n  local tmp_list_str_len_min_index=0\n  local\
    \ tmp_list_str_len_min_index_list=()\n  local tmp_list_str_len_min_index_list_len=0\n\
    \  local tmp_list_str_len_min_index_list_str=\"\"\n  local tmp_list_str_len_min_index_list_str_len=0\n\
    \  local tmp_list_str_len_min_index_list_str_len_min=0\n  local tmp_list_str_len_min_index_list_str_len_min_index=0\n\
    \  local tmp_list_str_len_min_index_list_str_len_min_index_list=()\n  local tmp_list_str_len_min_index_list_str_len_min_index_list_len=0\n\
    \  local tmp_list_str_len_min_index_list_str_len_min_index_list_str=\"\"\n  local\
    \ tmp_list_str_len_min_index_list_str_len_min_index_list_str_len=0\n  local tmp_list_str_len_min_index_list_str_len_min_index_list_str_len_min=0\n\
    \  local tmp_list_str_len_min_index_list_str_len_min_index_list_str_len_min_index=0\n\
    \  local tmp_list_str_len_min_index_list_str_len_min_index_list_str_len_min_index_list=()\n\
    \  local\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    local -i len=0\n    local -i min=0\n    local -i max=0\n\
    \    local -i tmp=0\n    local -i tmp1=0\n    local -i tmp2=0\n    local -i tmp3=0\n\
    \    local -i tmp4=0\n    local -i tmp5=0\n    local -i tmp6=0\n    local -i tmp7=0\n\
    \    local -i tmp8=0\n    local -i tmp9=0\n    local -i tmp10=0\n    local -i\
    \ tmp11=0\n    local -i tmp12=0\n    local -i tmp13=0\n    local -i tmp14=0\n\
    \    local -i tmp15=0\n    local -i tmp16=0\n    local -i tmp17=0\n    local -i\
    \ tmp18=0\n    local -i tmp19=0\n    local -i tmp20=0\n    local -i tmp21=0\n\
    \    local -i tmp22=0\n    local -i tmp23=0\n    local -i tmp24=0\n    local -i\
    \ tmp25=0\n    local -i tmp26=0\n    local -i tmp27=0\n    local -i tmp28=0\n\
    \    local -i tmp29=0\n    local -i tmp30=0\n    local -i tmp31=0\n    local -i\
    \ tmp32=0\n    local -i tmp33=0\n    local -i tmp34=0\n    local -i tmp35=0\n\
    \    local -i tmp36=0\n    local -i tmp37=0\n    local -i tmp38=0\n    local -i\
    \ tmp39=0\n    local -i tmp40=0\n    local -i tmp41=0\n    local -i tmp42=0\n\
    \    local -i tmp43=\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    for word in $list1;\
    \ do\n        list1_total=$((list1_total + ${#word}))\n    done\n    for word\
    \ in $list2; do\n        list2_total=$((list2_total + ${#word}))\n    done\n \
    \   if [ $list1_total -lt $list2_total ]; then\n        echo \"$list1\"\n    else\n\
    \        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i min_len=0\n    local -i min_total=0\n    local -i min_index=0\n\
    \    local -i min_total_index=0\n    local -a min_list=()\n    local -a min_total_list=()\n\
    \    local -a result=()\n    local -i result_index=0\n    local -i result_len=0\n\
    \    local -i result_total=0\n    local -i result_total_index=0\n    local -a\
    \ result_total_list=()\n    local -i result_total_len=0\n    local -i result_total_total=0\n\
    \    local -i result_total_total_index=0\n    local -a result_total_total_list=()\n\
    \    local -i result_total_total_len=0\n    local -i result_total_total_total=0\n\
    \    local -i result_total_total_total_index=0\n    local -a result_total_total_total_list=()\n\
    \    local -i result_total_total_total_len=0\n    local -i result_total_total_total_total=0\n\
    \    local -i result_total_total_total_total_index=0\n    local -a result_total_total_total_total_list=()\n\
    \    local -i result_total_total_total_total_len=0\n    local -i result_total_total_total_total_total=0\n\
    \    local -i result_total_total_total_total_total_index=0\n    local -a result_total_total_total_total_total_list=()\n\
    \    local -i result_total_total_total_total_total_len=0\n    local -i result_total_total_total_total_total_total=0\n\
    \    local -\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_item\n  local\
    \ list2_item\n  for list1_item in $list1; do\n    list1_total=$((list1_total +\
    \ ${#list1_item}))\n  done\n  for list2_item in $list2; do\n    list2_total=$((list2_total\
    \ + ${#list2_item}))\n  done\n  if [ $list1_total -lt $list2_total ]; then\n \
    \   echo \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n \
    \   total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local list1_array\n    local\
    \ list2_array\n    local i\n    local j\n    local item\n    local item_length\n\
    \    local result\n\n    # Calculate the total number of chars in list1\n    for\
    \ item in $list1; do\n        item_length=${#item}\n        total1=$((total1 +\
    \ item_length))\n    done\n\n    # Calculate the total number of chars in list2\n\
    \    for item in $list2; do\n        item_length=${#item}\n        total2=$((total2\
    \ + item_length))\n    done\n\n    # If the total number of chars in list1 is\
    \ less than list2,\n    # return list1.\n    if [ $total1 -lt $total2 ]; then\n\
    \        echo \"$list1\"\n        return\n    fi\n\n    # If the total number\
    \ of chars in list2 is less than list1,\n    # return list2.\n    if [ $total2\
    \ -lt $total1 ]; then\n        echo \"$list2\"\n        return\n    fi\n\n   \
    \ # If the total number of chars in list1 is equal to list2,\n    # return list1.\n\
    \    if [ $total1 -eq $total2 ]; then\n        echo \"$list1\"\n        return\n\
    \    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local sum1=0\n    local sum2=0\n    local result=()\n    for word in\
    \ $list1; do\n        sum1=$((sum1 + ${#word}))\n    done\n    for word in $list2;\
    \ do\n        sum2=$((sum2 + ${#word}))\n    done\n    if [ $sum1 -lt $sum2 ];\
    \ then\n        result=($list1)\n    else\n        result=($list2)\n    fi\n \
    \   echo ${result[@]}\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i=0\n    local -i j=0\n    local -i sum1=0\n    local -i sum2=0\n\
    \    local -i len=0\n    local -i len_str=0\n    local -i len_str_max=0\n    local\
    \ -i len_str_min=0\n    local -i len_str_max_index=0\n    local -i len_str_min_index=0\n\
    \    local -i len_str_max_index_max=0\n    local -i len_str_min_index_min=0\n\
    \    local -i len_str_max_index_min=0\n    local -i len_str_min_index_max=0\n\
    \    local -i len_str_max_index_max_index=0\n    local -i len_str_min_index_min_index=0\n\
    \    local -i len_str_max_index_min_index=0\n    local -i len_str_min_index_max_index=0\n\
    \    local -i len_str_max_index_max_index_max=0\n    local -i len_str_min_index_min_index_min=0\n\
    \    local -i len_str_max_index_min_index_min=0\n    local -i len_str_min_index_max_index_max=0\n\
    \    local -i len_str_max_index_max_index_min=0\n    local -i len_str_min_index_min_index_max=0\n\
    \    local -i len_str_max_index_min_index_max=0\n    local -i len_str_min_index_max_index_min=0\n\
    \    local -i len_str_max_index_max_index_max_index=0\n    local -i len_str_min_index_min_index_min_index=0\n\
    \    local -i len_str_max_index_min_index\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # Write your code here\n    # echo\
    \ $1\n    # echo $2\n    # echo $1 | wc -c\n    # echo $2 | wc -c\n    # echo\
    \ $1 | wc -c\n    # echo $2 | wc -c\n    # echo $1 | wc -c\n    # echo $2 | wc\
    \ -c\n    # echo $1 | wc -c\n    # echo $2 | wc -c\n    # echo $1 | wc -c\n  \
    \  # echo $2 | wc -c\n    # echo $1 | wc -c\n    # echo $2 | wc -c\n    # echo\
    \ $1 | wc -c\n    # echo $2 | wc -c\n    # echo $1 | wc -c\n    # echo $2 | wc\
    \ -c\n    # echo $1 | wc -c\n    # echo $2 | wc -c\n    # echo $1 | wc -c\n  \
    \  # echo $2 | wc -c\n    # echo $1 | wc -c\n    # echo $2 | wc -c\n    # echo\
    \ $1 | wc -c\n    # echo $2 | wc -c\n    # echo $1 | wc -c\n    # echo $2 | wc\
    \ -c\n    # echo $1 | wc -c\n    # echo $2 | wc -c\n    # echo $1 | wc -c\n  \
    \  # echo $2 | wc -c\n    # echo $1 | wc -c\n    # echo $2 | wc -c\n    # echo\
    \ $1 | wc -c\n    # echo $2 | wc -c\n    # echo $1 | wc -c\n    # echo $2 | wc\
    \ -c\n    # echo $1 | wc -c\n    # echo $2 | wc -c\n    # echo $1 | wc -c\n  \
    \  # echo $2 | wc -c\n    # echo $1 | wc -c\n    # echo $2 | wc -c\n    # echo\
    \ $1 | wc -c\n    # echo $2 | wc -c\n    # echo $1 | wc\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd8yhe7m3.sh: line 68: syntax error near unexpected token `}''

    /tmp/tmpd8yhe7m3.sh: line 68: `}''

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_item\n\
    \    local list2_item\n    for list1_item in $list1; do\n        list1_total=$((list1_total\
    \ + ${#list1_item}))\n    done\n    for list2_item in $list2; do\n        list2_total=$((list2_total\
    \ + ${#list2_item}))\n    done\n    if [ $list1_total -lt $list2_total ]; then\n\
    \        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_item\n  local\
    \ list2_item\n  local list1_item_len\n  local list2_item_len\n  local list1_item_len_total=0\n\
    \  local list2_item_len_total=0\n  local list1_item_len_total_max=0\n  local list2_item_len_total_max=0\n\
    \  local list1_item_len_total_max_item\n  local list2_item_len_total_max_item\n\
    \  local list1_item_len_total_max_item_len\n  local list2_item_len_total_max_item_len\n\
    \  local list1_item_len_total_max_item_len_max\n  local list2_item_len_total_max_item_len_max\n\
    \  local list1_item_len_total_max_item_len_max_item\n  local list2_item_len_total_max_item_len_max_item\n\
    \  local list1_item_len_total_max_item_len_max_item_len\n  local list2_item_len_total_max_item_len_max_item_len\n\
    \  local list1_item_len_total_max_item_len_max_item_len_max\n  local list2_item_len_total_max_item_len_max_item_len_max\n\
    \  local list1_item_len_total_max_item_len_max_item_len_max_item\n  local list2_item_len_total_max_item_len_max_item_len_max_item\n\
    \  local list1_item_len_total_max_item_len_max_item_len_max_item_len\n  local\
    \ list2_item_len_total_max_item_len_max_item_len_max_item_len\n  local list1_item_len_total_max_item_len_max_item_len_max_item_len_max\n\
    \  local list2\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo \"$list1\" | awk '{print length}')\n    local\
    \ list2_len=$(echo \"$list2\" | awk '{print length}')\n    if [ $list1_len -lt\
    \ $list2_len ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local total1=0\n    local total2=0\n\
    \    for word in $1; do\n        total1=$((total1 + ${#word}))\n    done\n   \
    \ for word in $2; do\n        total2=$((total2 + ${#word}))\n    done\n    if\
    \ [[ $total1 -lt $total2 ]]; then\n        echo \"$1\"\n    else\n        echo\
    \ \"$2\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i sum1=0\n    local -i sum2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        sum1+=${#list1[i]}\n    done\n    for\
    \ ((j=0; j<len2; j++)); do\n        sum2+=${#list2[j]}\n    done\n    if ((sum1<sum2));\
    \ then\n        echo \"${list1[@]}\"\n    else\n        echo \"${list2[@]}\"\n\
    \    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=0\n  local total2=0\n  local list1_len=0\n  local list2_len=0\n\
    \  local i=0\n  local j=0\n  local list1_arr=()\n  local list2_arr=()\n  local\
    \ result=()\n  local item=\"\"\n  local item_len=0\n  local result_str=\"\"\n\n\
    \  # get the total length of list1\n  for item in $list1; do\n    item_len=${#item}\n\
    \    total1=$((total1 + item_len))\n  done\n\n  # get the total length of list2\n\
    \  for item in $list2; do\n    item_len=${#item}\n    total2=$((total2 + item_len))\n\
    \  done\n\n  # get the length of list1\n  list1_len=$(echo $list1 | wc -w)\n\n\
    \  # get the length of list2\n  list2_len=$(echo $list2 | wc -w)\n\n  # split\
    \ list1 into an array\n  for item in $list1; do\n    list1_arr[$i]=$item\n   \
    \ i=$((i + 1))\n  done\n\n  # split list2 into an array\n  for item in $list2;\
    \ do\n    list2_arr[$j]=$item\n    j=$((j + 1))\n  done\n\n  # compare the total\
    \ length of the two lists\n  if [ $total1 -lt $total2 ]; then\n    for ((i=0;\
    \ i<list1_len; i++)); do\n      result[$i]=${list1_arr[$i]}\n    done\n  elif\
    \ [ $total1 -gt $total2 ]; then\n    for ((i=0; i<list2_len; i++)); do\n     \
    \ result[$i]=${list2_arr[$i]}\n    done\n  else\n    for ((i=0; i<list1_len; i++));\
    \ do\n      result[$i]=${list1_arr[$i]}\n    done\n  fi\n\n  # convert the result\
    \ array into a string\n  result_\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpqwnufn5u.sh: line 81: result_: command not found

    /tmp/tmpqwnufn5u.sh: line 81: result_: command not found

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=0\n  local total2=0\n  local i=0\n  local j=0\n  local len1=0\n\
    \  local len2=0\n  local str1=\"\"\n  local str2=\"\"\n  local result=\"\"\n \
    \ local -a array1\n  local -a array2\n  local -a array3\n  local -a array4\n \
    \ local -a array5\n  local -a array6\n  local -a array7\n  local -a array8\n \
    \ local -a array9\n  local -a array10\n  local -a array11\n  local -a array12\n\
    \  local -a array13\n  local -a array14\n  local -a array15\n  local -a array16\n\
    \  local -a array17\n  local -a array18\n  local -a array19\n  local -a array20\n\
    \  local -a array21\n  local -a array22\n  local -a array23\n  local -a array24\n\
    \  local -a array25\n  local -a array26\n  local -a array27\n  local -a array28\n\
    \  local -a array29\n  local -a array30\n  local -a array31\n  local -a array32\n\
    \  local -a array33\n  local -a array34\n  local -a array35\n  local -a array36\n\
    \  local -a array37\n  local -a array38\n  local -a array39\n  local -a array40\n\
    \  local -a array41\n  local -a array42\n  local -a array43\n  local -a array44\n\
    \  local -a array45\n  local -a array46\n  local -a array47\n  local -a array48\n\
    \  local -a array49\n  local -a array50\n  local -a array51\n  local -a array52\n\
    \  local -a array53\n  local -a array54\n  local -a array55\n  local -a array56\n\
    \  local -a array57\n  local -a array58\n  local -a array59\n  local -a array60\n\
    \  local -a array61\n  local -a array62\n  local\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local total1=0\n    local total2=0\n\
    \    local list1=($1)\n    local list2=($2)\n    for i in ${list1[@]}; do\n  \
    \      total1=$((total1 + ${#i}))\n    done\n    for i in ${list2[@]}; do\n  \
    \      total2=$((total2 + ${#i}))\n    done\n    if [ $total1 -lt $total2 ]; then\n\
    \        echo \"${list1[@]}\"\n    else\n        echo \"${list2[@]}\"\n    fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_item\n\
    \    local list2_item\n    for list1_item in $list1; do\n        list1_total=$((list1_total\
    \ + ${#list1_item}))\n    done\n    for list2_item in $list2; do\n        list2_total=$((list2_total\
    \ + ${#list2_item}))\n    done\n    if [ $list1_total -lt $list2_total ]; then\n\
    \        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=$1\n    local list2=$2\n\
    \    local total1=0\n    local total2=0\n    local list1_arr=($list1)\n    local\
    \ list2_arr=($list2)\n    local i=0\n    local j=0\n    local result=()\n    for\
    \ i in ${list1_arr[@]}; do\n        total1=$((total1 + ${#i}))\n    done\n   \
    \ for j in ${list2_arr[@]}; do\n        total2=$((total2 + ${#j}))\n    done\n\
    \    if [[ $total1 -lt $total2 ]]; then\n        result=($list1)\n    elif [[\
    \ $total1 -gt $total2 ]]; then\n        result=($list2)\n    else\n        result=($list1)\n\
    \    fi\n    echo ${result[@]}\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local -a list1=($1)\n  local -a list2=($2)\n\
    \  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i len1=${#list1[@]}\n\
    \  local -i len2=${#list2[@]}\n  local -i total1=0\n  local -i total2=0\n  local\
    \ -i total=0\n  local -i total_min=0\n  local -i total_max=0\n  local -i total_min_index=0\n\
    \  local -i total_max_index=0\n  local -i total_min_index_list1=0\n  local -i\
    \ total_min_index_list2=0\n  local -i total_max_index_list1=0\n  local -i total_max_index_list2=0\n\
    \  local -i total_min_list1=0\n  local -i total_min_list2=0\n  local -i total_max_list1=0\n\
    \  local -i total_max_list2=0\n  local -i total_list1=0\n  local -i total_list2=0\n\
    \  local -i total_list1_index=0\n  local -i total_list2_index=0\n  local -i total_list1_index_list1=0\n\
    \  local -i total_list1_index_list2=0\n  local -i total_list2_index_list1=0\n\
    \  local -i total_list2_index_list2=0\n  local -i total_list1_list1=0\n  local\
    \ -i total_list1_list2=0\n  local -i total_list2_list1=0\n  local -i total_list2_list2=0\n\
    \  local -i total_min_list1_index=0\n  local -i total_min_list2_index=0\n  local\
    \ -i total_min_list1_index_list1=0\n  local -i total_min_list1_index_list2=0\n\
    \  local -i total_min_list2_index_list1=0\n \n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local total1=0\n    local total2=0\n    local i\n    for\
    \ ((i=0; i<${#list1[@]}; i++)); do\n        total1=$((total1 + ${#list1[$i]}))\n\
    \    done\n    for ((i=0; i<${#list2[@]}; i++)); do\n        total2=$((total2\
    \ + ${#list2[$i]}))\n    done\n    if ((total1 < total2)); then\n        echo\
    \ \"${list1[@]}\"\n    else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=0\n  local total2=0\n  local i=0\n  local j=0\n  local len1=0\n\
    \  local len2=0\n  local str1=''\n  local str2=''\n  local result=''\n  local\
    \ result_list=''\n  local result_list_len=0\n  local result_list_i=0\n  local\
    \ result_list_j=0\n  local result_list_str=''\n  local result_list_str_len=0\n\
    \  local result_list_str_i=0\n  local result_list_str_j=0\n  local result_list_str_char=''\n\
    \  local result_list_str_char_code=0\n  local result_list_str_char_code_hex=''\n\
    \  local result_list_str_char_code_hex_len=0\n  local result_list_str_char_code_hex_i=0\n\
    \  local result_list_str_char_code_hex_j=0\n  local result_list_str_char_code_hex_char=''\n\
    \  local result_list_str_char_code_hex_char_code=0\n  local result_list_str_char_code_hex_char_code_hex=''\n\
    \  local result_list_str_char_code_hex_char_code_hex_len=0\n  local result_list_str_char_code_hex_char_code_hex_i=0\n\
    \  local result_list_str_char_code_hex_char_code_hex_j=0\n  local result_list_str_char_code_hex_char_code_hex_char=''\n\
    \  local result_list_str_char_code_hex_char_code_hex_char_code=0\n  local result_list_str_char_code_hex_char_code_hex_char_code_hex=''\n\
    \  local result_list_str_char_code_hex_char_code_hex_char_code_hex_len=0\n  local\
    \ result_list_str_char_code_hex\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_len=$(echo \"$list1\" | wc -c)\n  local list2_len=$(echo \"\
    $list2\" | wc -c)\n  if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n    echo\
    \ \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local l1=\"$1\"\n  local l2=\"$2\"\
    \n  local l1_total=0\n  local l2_total=0\n  local l1_item\n  local l2_item\n \
    \ local l1_item_len\n  local l2_item_len\n  local l1_item_len_total=0\n  local\
    \ l2_item_len_total=0\n  for l1_item in $l1; do\n    l1_item_len=${#l1_item}\n\
    \    l1_item_len_total=$((l1_item_len_total + l1_item_len))\n  done\n  for l2_item\
    \ in $l2; do\n    l2_item_len=${#l2_item}\n    l2_item_len_total=$((l2_item_len_total\
    \ + l2_item_len))\n  done\n  if [[ $l1_item_len_total -lt $l2_item_len_total ]];\
    \ then\n    echo \"$l1\"\n  else\n    echo \"$l2\"\n  fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=$1\n  local list2=$2\n\
    \  local list1_len=$(echo $list1 | awk '{print length}')\n  local list2_len=$(echo\
    \ $list2 | awk '{print length}')\n  if [ $list1_len -lt $list2_len ]; then\n \
    \   echo $list1\n  else\n    echo $list2\n  fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=$(total_chars \"$list1\")\n  local total2=$(total_chars \"\
    $list2\")\n  if [ $total1 -lt $total2 ]; then\n    echo \"$list1\"\n  elif [ $total1\
    \ -gt $total2 ]; then\n    echo \"$list2\"\n  else\n    echo \"$list1\"\n  fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpebxalrf8.sh: line 22: total_chars: command not found

    /tmp/tmpebxalrf8.sh: line 23: total_chars: command not found

    /tmp/tmpebxalrf8.sh: line 22: total_chars: command not found

    /tmp/tmpebxalrf8.sh: line 23: total_chars: command not found

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_item\n\
    \    local list2_item\n    local list1_item_len\n    local list2_item_len\n  \
    \  for list1_item in $list1; do\n        list1_item_len=${#list1_item}\n     \
    \   list1_total=$((list1_total + list1_item_len))\n    done\n    for list2_item\
    \ in $list2; do\n        list2_item_len=${#list2_item}\n        list2_total=$((list2_total\
    \ + list2_item_len))\n    done\n    if [ $list1_total -lt $list2_total ]; then\n\
    \        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_item\n  local\
    \ list2_item\n  local list1_item_len\n  local list2_item_len\n  for list1_item\
    \ in $list1; do\n    list1_item_len=${#list1_item}\n    list1_total=$((list1_total\
    \ + list1_item_len))\n  done\n  for list2_item in $list2; do\n    list2_item_len=${#list2_item}\n\
    \    list2_total=$((list2_total + list2_item_len))\n  done\n  if [ $list1_total\
    \ -lt $list2_total ]; then\n    echo \"$list1\"\n  else\n    echo \"$list2\"\n\
    \  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total_chars=0\n    local list2_total_chars=0\n    local\
    \ list1_total_chars_str=\"\"\n    local list2_total_chars_str=\"\"\n    local\
    \ list1_str=\"\"\n    local list2_str=\"\"\n    local list1_str_arr=()\n    local\
    \ list2_str_arr=()\n    local list1_str_arr_len=0\n    local list2_str_arr_len=0\n\
    \    local i=0\n    local j=0\n    local list1_str_len=0\n    local list2_str_len=0\n\
    \    local list1_str_total_chars=0\n    local list2_str_total_chars=0\n    local\
    \ list1_str_total_chars_str=\"\"\n    local list2_str_total_chars_str=\"\"\n \
    \   local list1_str_total_chars_str_arr=()\n    local list2_str_total_chars_str_arr=()\n\
    \    local list1_str_total_chars_str_arr_len=0\n    local list2_str_total_chars_str_arr_len=0\n\
    \    local list1_str_total_chars_str_arr_i=0\n    local list2_str_total_chars_str_arr_i=0\n\
    \    local list1_str_total_chars_str_arr_j=0\n    local list2_str_total_chars_str_arr_j=0\n\
    \    local list1_str_total_chars_str_arr_i_len=0\n    local list2_str_total_chars_str_arr_i_len=0\n\
    \    local list1_str_total_chars_str_arr_j_len=0\n    local list2_str_total_chars_str_arr_j_len=0\n\
    \    local list1_str_total_chars_str_arr_i_len_str=\"\"\n    local list2_str_total_chars_str_arr_i_len_\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local list1_array=()\n    local\
    \ list2_array=()\n    local i=0\n    local j=0\n    local result=()\n    local\
    \ result_index=0\n    local list1_len=0\n    local list2_len=0\n    local list1_item=''\n\
    \    local list2_item=''\n    local list1_item_len=0\n    local list2_item_len=0\n\
    \n    # split list1 into an array\n    IFS=' ' read -r -a list1_array <<< \"$list1\"\
    \n    list1_len=${#list1_array[@]}\n\n    # split list2 into an array\n    IFS='\
    \ ' read -r -a list2_array <<< \"$list2\"\n    list2_len=${#list2_array[@]}\n\n\
    \    # calculate total chars in list1\n    for ((i=0; i<list1_len; i++)); do\n\
    \        list1_item=${list1_array[$i]}\n        list1_item_len=${#list1_item}\n\
    \        total1=$((total1 + list1_item_len))\n    done\n\n    # calculate total\
    \ chars in list2\n    for ((i=0; i<list2_len; i++)); do\n        list2_item=${list2_array[$i]}\n\
    \        list2_item_len=${#list2_item}\n        total2=$((total2 + list2_item_len))\n\
    \    done\n\n    # compare total chars in list1 and list2\n    if [ $total1 -lt\
    \ $total2 ]; then\n        result=(\"${list1_array[@]}\")\n    elif [ $total1\
    \ -gt $total2 ]; then\n        result=(\"${list2_array[@]}\")\n    else\n    \
    \    result=(\"${list1_array[@]}\")\n    fi\n\n    # print the result\n    result_index=0\n\
    \    for ((i=0; i<${#result[@]}; i++)); do\n        if [ $\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkky27tve.sh: line 72: syntax error near unexpected token `}''

    /tmp/tmpkky27tve.sh: line 72: `}''

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total_chars=0\n  local list2_total_chars=0\n  local list1_array=()\n\
    \  local list2_array=()\n  local list1_array_len=0\n  local list2_array_len=0\n\
    \  local i=0\n  local j=0\n  local list1_total_chars_array=()\n  local list2_total_chars_array=()\n\
    \  local list1_total_chars_array_len=0\n  local list2_total_chars_array_len=0\n\
    \  local list1_total_chars_array_index=0\n  local list2_total_chars_array_index=0\n\
    \  local list1_total_chars_array_index_value=0\n  local list2_total_chars_array_index_value=0\n\
    \  local list1_total_chars_array_index_value_len=0\n  local list2_total_chars_array_index_value_len=0\n\
    \  local list1_total_chars_array_index_value_len_value=0\n  local list2_total_chars_array_index_value_len_value=0\n\
    \  local list1_total_chars_array_index_value_len_value_len=0\n  local list2_total_chars_array_index_value_len_value_len=0\n\
    \  local list1_total_chars_array_index_value_len_value_len_value=0\n  local list2_total_chars_array_index_value_len_value_len_value=0\n\
    \  local list1_total_chars_array_index_value_len_value_len_value_len=0\n  local\
    \ list2_total_chars_array_index_value_len_value_len_value_len=0\n  local list1_total_chars_array_index_value_len_value_len_value_len_value=0\n\
    \  local list2_total_chars_array_index_value_len_value\n}\n\ncandidate() {\n \
    \   total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=$(echo \"$list1\" | tr ' ' '\\n' | wc -c)\n  local total2=$(echo\
    \ \"$list2\" | tr ' ' '\\n' | wc -c)\n  if [ $total1 -lt $total2 ]; then\n   \
    \ echo \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n}\n\ncandidate() {\n   \
    \ total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=$1\n  local list2=$2\n\
    \  local list1_total=0\n  local list2_total=0\n  local list1_len=0\n  local list2_len=0\n\
    \  local list1_item\n  local list2_item\n  local i\n  local j\n  local result\n\
    \n  for i in $list1; do\n    list1_len=$((list1_len + 1))\n    list1_total=$((list1_total\
    \ + ${#i}))\n  done\n\n  for j in $list2; do\n    list2_len=$((list2_len + 1))\n\
    \    list2_total=$((list2_total + ${#j}))\n  done\n\n  if [ $list1_total -lt $list2_total\
    \ ]; then\n    result=$list1\n  elif [ $list1_total -gt $list2_total ]; then\n\
    \    result=$list2\n  else\n    result=$list1\n  fi\n\n  echo $result\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    # Write your code here\n    local\
    \ -a list1=($1)\n    local -a list2=($2)\n    local -i total1=0\n    local -i\
    \ total2=0\n    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n\
    \    local -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2\
    \ + ${#list2[j]}))\n    done\n    if [ $total1 -lt $total2 ]; then\n        echo\
    \ ${list1[@]}\n    else\n        echo ${list2[@]}\n    fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total_chars=0\n    local list2_total_chars=0\n    local\
    \ list1_item\n    local list2_item\n    local list1_item_chars\n    local list2_item_chars\n\
    \    local list1_item_chars_total=0\n    local list2_item_chars_total=0\n    local\
    \ list1_item_chars_total_list=()\n    local list2_item_chars_total_list=()\n \
    \   local list1_item_chars_total_list_str\n    local list2_item_chars_total_list_str\n\
    \    local list1_item_chars_total_list_str_len\n    local list2_item_chars_total_list_str_len\n\
    \    local list1_item_chars_total_list_str_len_str\n    local list2_item_chars_total_list_str_len_str\n\
    \    local list1_item_chars_total_list_str_len_str_len\n    local list2_item_chars_total_list_str_len_str_len\n\
    \    local list1_item_chars_total_list_str_len_str_len_str\n    local list2_item_chars_total_list_str_len_str_len_str\n\
    \    local list1_item_chars_total_list_str_len_str_len_str_len\n    local list2_item_chars_total_list_str_len_str_len_str_len\n\
    \    local list1_item_chars_total_list_str_len_str_len_str_len_str\n    local\
    \ list2_item_chars_total_list_str_len_str_len_str_len_str\n    local list1_item_chars_total_list_str_len_str_len_str_len_str_len\n\
    \    local list2_item_chars_total_list_str_len_str_len_str_len_str_len\n    local\
    \ list1_item_\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=0\n  local total2=0\n  for word in $list1; do\n    total1=$((total1\
    \ + ${#word}))\n  done\n  for word in $list2; do\n    total2=$((total2 + ${#word}))\n\
    \  done\n  if [ $total1 -lt $total2 ]; then\n    echo \"$list1\"\n  else\n   \
    \ echo \"$list2\"\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a list1_len=()\n    local -a list2_len=()\n    local\
    \ -a list1_str=()\n    local -a list2_str=()\n    local -a list1_str_len=()\n\
    \    local -a list2_str_len=()\n    local -a list1_str_len_sorted=()\n    local\
    \ -a list2_str_len_sorted=()\n    local -a list1_str_len_sorted_index=()\n   \
    \ local -a list2_str_len_sorted_index=()\n    local -a list1_str_len_sorted_index_str=()\n\
    \    local -a list2_str_len_sorted_index_str=()\n    local -a list1_str_len_sorted_index_str_len=()\n\
    \    local -a list2_str_len_sorted_index_str_len=()\n    local -a list1_str_len_sorted_index_str_len_sorted=()\n\
    \    local -a list2_str_len_sorted_index_str_len_sorted=()\n    local -a list1_str_len_sorted_index_str_len_sorted_index=()\n\
    \    local -a list2_str_len_sorted_index_str_len_sorted_index=()\n    local -a\
    \ list1_str_len_sorted_index_str_len_sorted_index_str=()\n    local -a list2_str_len_sorted_index_str_len_sorted_index_str=()\n\
    \    local -a list1_str_len_sorted_index_str_len_sorted_index_str_len=()\n   \
    \ local -a list2_str_len_sorted_index_str_len_sorted_index_str_len=()\n    local\
    \ -a list1_str_len_sorted_index_str_len_sorted_index_str_len_sorted=()\n    local\
    \ -a list2_str_\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local list1_array\n    local\
    \ list2_array\n    local i\n    local j\n    local len1\n    local len2\n    local\
    \ str\n    local str_len\n    local result\n    local result_array\n    local\
    \ result_len\n    local result_str\n    local result_str_len\n    local result_total=0\n\
    \    local result_index=0\n    local result_index_array\n\n    # get the total\
    \ number of chars in list1\n    for str in $list1; do\n        str_len=${#str}\n\
    \        total1=$((total1 + str_len))\n    done\n\n    # get the total number\
    \ of chars in list2\n    for str in $list2; do\n        str_len=${#str}\n    \
    \    total2=$((total2 + str_len))\n    done\n\n    # if the total number of chars\
    \ in list1 is less than list2, return list1\n    if [ $total1 -lt $total2 ]; then\n\
    \        echo $list1\n        return\n    fi\n\n    # if the total number of chars\
    \ in list2 is less than list1, return list2\n    if [ $total2 -lt $total1 ]; then\n\
    \        echo $list2\n        return\n    fi\n\n    # if the total number of chars\
    \ in list1 is equal to list2, return list1\n    if [ $total1 -eq $total2 ]; then\n\
    \        echo $list1\n        return\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  # your code here\n  local list1=$1\n\
    \  local list2=$2\n  local list1_total=0\n  local list2_total=0\n  local list1_array=($list1)\n\
    \  local list2_array=($list2)\n  local list1_len=${#list1_array[@]}\n  local list2_len=${#list2_array[@]}\n\
    \  local i=0\n  while [ $i -lt $list1_len ]; do\n    list1_total=$((list1_total\
    \ + ${#list1_array[$i]}))\n    i=$((i + 1))\n  done\n  i=0\n  while [ $i -lt $list2_len\
    \ ]; do\n    list2_total=$((list2_total + ${#list2_array[$i]}))\n    i=$((i +\
    \ 1))\n  done\n  if [ $list1_total -lt $list2_total ]; then\n    echo $list1\n\
    \  else\n    echo $list2\n  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    local -i len=0\n    local -i len_min=0\n    local\
    \ -i len_max=0\n    local -i total_min=0\n    local -i total_max=0\n    local\
    \ -i total=0\n    local -i total_min_index=0\n    local -i total_max_index=0\n\
    \    local -i total_index=0\n    local -i total_min_index_len=0\n    local -i\
    \ total_max_index_len=0\n    local -i total_index_len=0\n    local -i total_min_index_len_min=0\n\
    \    local -i total_max_index_len_min=0\n    local -i total_index_len_min=0\n\
    \    local -i total_min_index_len_max=0\n    local -i total_max_index_len_max=0\n\
    \    local -i total_index_len_max=0\n    local -i total_min_index_len_min_index=0\n\
    \    local -i total_max_index_len_min_index=0\n    local -i total_index_len_min_index=0\n\
    \    local -i total_min_index_len_max_index=0\n    local -i total_max_index_len_max_index=0\n\
    \    local -i total_index_len_max_index=0\n    local -i total_min_index_len_min_index_len=0\n\
    \    local -i total_max_index_len_min_index_len=0\n    local -i total_index_len_min_index_len=0\n\
    \    local -i total_min_index_len_max_index_len=0\n    local -i total_max_index_len_max\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i A=0\n    local -i B=0\n    local -i C=0\n    local -i D=0\n    local\
    \ -i E=0\n    local -i F=0\n    local -i G=0\n    local -i H=0\n    local -i I=0\n\
    \    local -i J=0\n    local -i K=0\n    local -i L=0\n    local -i M=0\n    local\
    \ -i N=0\n    local -i O=0\n    local -i P=0\n    local -i Q=0\n    local -i R=0\n\
    \    local -i S=0\n    local -i T=0\n    local -i U=0\n    local -i V=0\n    local\
    \ -i W=0\n    local -i X=0\n    local -i Y=0\n    local -i Z=0\n    local -i a=0\n\
    \    local -i b=0\n    local -i c=0\n    local -i d=0\n    local -i e=0\n    local\
    \ -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ n\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total_chars=0\n    local list2_total_chars=0\n    local\
    \ list1_count=0\n    local list2_count=0\n    local list1_item\n    local list2_item\n\
    \    local list1_item_count\n    local list2_item_count\n    local list1_item_count_str\n\
    \    local list2_item_count_str\n    local list1_item_count_str_len\n    local\
    \ list2_item_count_str_len\n    local list1_item_count_str_len_total=0\n    local\
    \ list2_item_count_str_len_total=0\n    local list1_item_count_str_len_total_str\n\
    \    local list2_item_count_str_len_total_str\n    local list1_item_count_str_len_total_str_len\n\
    \    local list2_item_count_str_len_total_str_len\n    local list1_item_count_str_len_total_str_len_total=0\n\
    \    local list2_item_count_str_len_total_str_len_total=0\n    local list1_item_count_str_len_total_str_len_total_str\n\
    \    local list2_item_count_str_len_total_str_len_total_str\n    local list1_item_count_str_len_total_str_len_total_str_len\n\
    \    local list2_item_count_str_len_total_str_len_total_str_len\n    local list1_item_count_str_len_total_str_len_total_str_len_total=0\n\
    \    local list2_item_count_str_len_total_str_len_total_str_len_total=0\n    local\
    \ list1_item_count_str_len_total_str_len_total_str_len_total_str\n    local list2_item_count_str_len_total_str_len_total_str_len_total_str\n\
    \    local list1_item_\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_count=0\n\
    \    local list2_count=0\n    local list1_str=\"\"\n    local list2_str=\"\"\n\
    \    local list1_arr=()\n    local list2_arr=()\n    local list1_arr_count=0\n\
    \    local list2_arr_count=0\n    local i=0\n    local j=0\n    local list1_total_str=\"\
    \"\n    local list2_total_str=\"\"\n    local list1_total_arr=()\n    local list2_total_arr=()\n\
    \    local list1_total_arr_count=0\n    local list2_total_arr_count=0\n    local\
    \ list1_total_str_count=0\n    local list2_total_str_count=0\n    local list1_total_str_arr=()\n\
    \    local list2_total_str_arr=()\n    local list1_total_str_arr_count=0\n   \
    \ local list2_total_str_arr_count=0\n    local list1_total_str_arr_count_str=\"\
    \"\n    local list2_total_str_arr_count_str=\"\"\n    local list1_total_str_arr_count_str_count=0\n\
    \    local list2_total_str_arr_count_str_count=0\n    local list1_total_str_arr_count_str_count_arr=()\n\
    \    local list2_total_str_arr_count_str_count_arr=()\n    local list1_total_str_arr_count_str_count_arr_count=0\n\
    \    local list2_total_str_arr_count_str_count_arr_count=0\n    local list1_total_str_arr_count_str_count_arr_count_str=\"\
    \"\n    local list2_total_str_arr_count_str_count_arr_count_str=\"\"\n    local\
    \ list1_total_str_arr_count_str_count_arr_count_str_count=0\n    local list2_total\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_item\n  local\
    \ list2_item\n  local list1_item_len\n  local list2_item_len\n  for list1_item\
    \ in $list1; do\n    list1_item_len=${#list1_item}\n    list1_total=$((list1_total\
    \ + list1_item_len))\n  done\n  for list2_item in $list2; do\n    list2_item_len=${#list2_item}\n\
    \    list2_total=$((list2_total + list2_item_len))\n  done\n  if [ $list1_total\
    \ -lt $list2_total ]; then\n    echo \"$list1\"\n  else\n    echo \"$list2\"\n\
    \  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    for word in $list1; do\n   \
    \     total1=$((total1 + ${#word}))\n    done\n    for word in $list2; do\n  \
    \      total2=$((total2 + ${#word}))\n    done\n    if [ $total1 -lt $total2 ];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    for word in \"${list1[@]}\"; do\n        total1=$((total1 + ${#word}))\n\
    \    done\n    for word in \"${list2[@]}\"; do\n        total2=$((total2 + ${#word}))\n\
    \    done\n    if ((total1 < total2)); then\n        result=(\"${list1[@]}\")\n\
    \    else\n        result=(\"${list2[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=0\n  local total2=0\n  local i=0\n  local j=0\n  local list1_len=0\n\
    \  local list2_len=0\n  local list1_arr=()\n  local list2_arr=()\n  local result=()\n\
    \  local result_len=0\n  local result_str=\"\"\n\n  # get the length of the two\
    \ lists\n  list1_len=$(echo \"$list1\" | wc -w)\n  list2_len=$(echo \"$list2\"\
    \ | wc -w)\n\n  # convert the two lists to arrays\n  list1_arr=($list1)\n  list2_arr=($list2)\n\
    \n  # get the total number of chars in the two lists\n  for ((i=0; i<list1_len;\
    \ i++)); do\n    total1=$((total1 + ${#list1_arr[$i]}))\n  done\n  for ((i=0;\
    \ i<list2_len; i++)); do\n    total2=$((total2 + ${#list2_arr[$i]}))\n  done\n\
    \n  # compare the two lists\n  if [ $total1 -lt $total2 ]; then\n    result=(\"\
    ${list1_arr[@]}\")\n  elif [ $total1 -gt $total2 ]; then\n    result=(\"${list2_arr[@]}\"\
    )\n  else\n    result=(\"${list1_arr[@]}\")\n  fi\n\n  # convert the array to\
    \ a string\n  result_len=${#result[@]}\n  for ((i=0; i<result_len; i++)); do\n\
    \    result_str=\"$result_str \\\"${result[$i]}\\\"\"\n  done\n\n  # return the\
    \ result\n  echo \"[$result_str]\"\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=0\n  local total2=0\n  local list1_array=()\n  local list2_array=()\n\
    \  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local list1_len=0\n\
    \  local list2_len=0\n  local result_len=0\n  local list1_item=\"\"\n  local list2_item=\"\
    \"\n  local result_item=\"\"\n  local list1_item_len=0\n  local list2_item_len=0\n\
    \  local result_item_len=0\n  local list1_item_len_str=\"\"\n  local list2_item_len_str=\"\
    \"\n  local result_item_len_str=\"\"\n  local list1_item_len_str_len=0\n  local\
    \ list2_item_len_str_len=0\n  local result_item_len_str_len=0\n  local list1_item_len_str_len_str=\"\
    \"\n  local list2_item_len_str_len_str=\"\"\n  local result_item_len_str_len_str=\"\
    \"\n  local list1_item_len_str_len_str_len=0\n  local list2_item_len_str_len_str_len=0\n\
    \  local result_item_len_str_len_str_len=0\n  local list1_item_len_str_len_str_len_str=\"\
    \"\n  local list2_item_len_str_len_str_len_str=\"\"\n  local result_item_len_str_len_str_len_str=\"\
    \"\n  local list1_item_len_str_len_str_len_str_len=0\n  local list2_item_len_str_len_str_len_str_len=0\n\
    \  local result_item_len_str_len_str_len_str_len=0\n  local list1_item_len_str_len_str_len_str_len_str=\"\
    \"\n  local list2_item_len_str_len_str_len_str_len_str=\"\"\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a list3=()\n    local -a list4=()\n    local -a list5=()\n\
    \    local -a list6=()\n    local -a list7=()\n    local -a list8=()\n    local\
    \ -a list9=()\n    local -a list10=()\n    local -a list11=()\n    local -a list12=()\n\
    \    local -a list13=()\n    local -a list14=()\n    local -a list15=()\n    local\
    \ -a list16=()\n    local -a list17=()\n    local -a list18=()\n    local -a list19=()\n\
    \    local -a list20=()\n    local -a list21=()\n    local -a list22=()\n    local\
    \ -a list23=()\n    local -a list24=()\n    local -a list25=()\n    local -a list26=()\n\
    \    local -a list27=()\n    local -a list28=()\n    local -a list29=()\n    local\
    \ -a list30=()\n    local -a list31=()\n    local -a list32=()\n    local -a list33=()\n\
    \    local -a list34=()\n    local -a list35=()\n    local -a list36=()\n    local\
    \ -a list37=()\n    local -a list38=()\n    local -a list39=()\n    local -a list40=()\n\
    \    local -a list41=()\n    local -a list42=()\n    local -a list43=()\n    local\
    \ -a list44=()\n    local -a list45=()\n    local -a list46=()\n    local -a list47=()\n\
    \    local -a list48=()\n    local -a list49=()\n    local -a list50=()\n    local\
    \ -a list51=()\n    local -a list52=()\n    local -a list53=()\n    local -a list54=()\n\
    \    local -a list55=()\n    local -a list56=()\n    local -\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i\n    local -i sum1=0\n    local -i sum2=0\n    local -i sum\n\
    \    local -i min_sum\n    local -i min_index\n    local -i min_len\n    local\
    \ -i min_len_index\n    local -i min_len_sum\n    local -i min_len_sum_index\n\
    \    local -i min_len_sum_index_len\n    local -i min_len_sum_index_len_index\n\
    \    local -i min_len_sum_index_len_index_sum\n    local -i min_len_sum_index_len_index_sum_index\n\
    \    local -i min_len_sum_index_len_index_sum_index_len\n    local -i min_len_sum_index_len_index_sum_index_len_index\n\
    \    local -i min_len_sum_index_len_index_sum_index_len_index_sum\n    local -i\
    \ min_len_sum_index_len_index_sum_index_len_index_sum_index\n    local -i min_len_sum_index_len_index_sum_index_len_index_sum_index_len\n\
    \    local -i min_len_sum_index_len_index_sum_index_len_index_sum_index_len_index\n\
    \    local -i min_len_sum_index_len_index_sum_index_len_index_sum_index_len_index_sum\n\
    \    local -i min_len_sum_index_len_index_sum_index_len_index_sum_index_len_index_sum_index\n\
    \    local -i min_len_sum_index_len_index_sum_index_len_index_sum_index_len_index_sum_index_len\n\
    \    local -i min_len_sum_index_len_index_sum_index_len_index_sum_index_len_index_sum_index\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_item\n\
    \    local list2_item\n    for list1_item in $list1; do\n        list1_total=$((list1_total\
    \ + ${#list1_item}))\n    done\n    for list2_item in $list2; do\n        list2_total=$((list2_total\
    \ + ${#list2_item}))\n    done\n    if [ $list1_total -lt $list2_total ]; then\n\
    \        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local list1_array=()\n    local\
    \ list2_array=()\n    local i=0\n    local j=0\n    local k=0\n    local result=()\n\
    \    local temp=0\n    local temp_array=()\n    local temp_array2=()\n    local\
    \ temp_array3=()\n    local temp_array4=()\n    local temp_array5=()\n    local\
    \ temp_array6=()\n    local temp_array7=()\n    local temp_array8=()\n    local\
    \ temp_array9=()\n    local temp_array10=()\n    local temp_array11=()\n    local\
    \ temp_array12=()\n    local temp_array13=()\n    local temp_array14=()\n    local\
    \ temp_array15=()\n    local temp_array16=()\n    local temp_array17=()\n    local\
    \ temp_array18=()\n    local temp_array19=()\n    local temp_array20=()\n    local\
    \ temp_array21=()\n    local temp_array22=()\n    local temp_array23=()\n    local\
    \ temp_array24=()\n    local temp_array25=()\n    local temp_array26=()\n    local\
    \ temp_array27=()\n    local temp_array28=()\n    local temp_array29=()\n    local\
    \ temp_array30=()\n    local temp_array31=()\n    local temp_array32=()\n    local\
    \ temp_array33=()\n    local temp_array34=()\n    local temp_array35=()\n    local\
    \ temp_array36=()\n    local temp_array37=()\n    local temp_array38=()\n    local\
    \ temp_array39=()\n    local temp_array40=()\n    local temp_array41=()\n    local\
    \ temp_array42=()\n    local temp_array43=()\n    local temp_array44=()\n    local\
    \ temp_array45=()\n    local temp_array46=()\n    local temp_array47=()\n    local\
    \ temp_array48=()\n\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=$1\n    local list2=$2\n\
    \    local list1_len=$(echo $list1 | wc -c)\n    local list2_len=$(echo $list2\
    \ | wc -c)\n    if [ $list1_len -lt $list2_len ]; then\n        echo $list1\n\
    \    else\n        echo $list2\n    fi\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_count=0\n\
    \    local list2_count=0\n    local list1_item\n    local list2_item\n    local\
    \ list1_array\n    local list2_array\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local aa\n    local bb\n    local\
    \ cc\n    local dd\n    local ee\n    local ff\n    local gg\n    local hh\n \
    \   local ii\n    local jj\n    local kk\n    local ll\n    local mm\n    local\
    \ nn\n    local oo\n    local pp\n    local qq\n    local rr\n    local ss\n \
    \   local tt\n    local uu\n    local vv\n    local ww\n    local xx\n    local\
    \ yy\n    local zz\n    local aaa\n    local bbb\n    local ccc\n    local ddd\n\
    \    local eee\n    local fff\n    local ggg\n    local hhh\n    local iii\n \
    \   local jjj\n    local kkk\n    local lll\n    local mmm\n    local nnn\n  \
    \  local ooo\n    local ppp\n    local qqq\n    local rrr\n    local sss\n   \
    \ local ttt\n    local uuu\n    local vvv\n    local www\n    local xxx\n    local\
    \ yyy\n    local zzz\n    local aaaa\n    local bbbb\n    local cccc\n    local\
    \ dddd\n    local eeee\n    local ffff\n    local gggg\n    local hhhh\n    local\
    \ iiii\n    local jjjj\n    local kkkk\n    local llll\n    local mmmm\n    local\
    \ nnnn\n    local oooo\n    local pppp\n    local qqqq\n    local rrrr\n    local\
    \ ssss\n   \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    for word in $list1;\
    \ do\n        list1_total=$((list1_total + ${#word}))\n    done\n    for word\
    \ in $list2; do\n        list2_total=$((list2_total + ${#word}))\n    done\n \
    \   if [[ $list1_total -lt $list2_total ]]; then\n        echo \"$list1\"\n  \
    \  else\n        echo \"$list2\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    local list1_item\n\
    \    local list2_item\n    local list1_result=()\n    local list2_result=()\n\
    \    for list1_item in $list1; do\n        list1_total=$((list1_total + ${#list1_item}))\n\
    \    done\n    for list2_item in $list2; do\n        list2_total=$((list2_total\
    \ + ${#list2_item}))\n    done\n    if [[ $list1_total -lt $list2_total ]]; then\n\
    \        for list1_item in $list1; do\n            list1_result+=(\"\\\"$list1_item\\\
    \"\")\n        done\n        echo \"${list1_result[@]}\"\n    elif [[ $list1_total\
    \ -gt $list2_total ]]; then\n        for list2_item in $list2; do\n          \
    \  list2_result+=(\"\\\"$list2_item\\\"\")\n        done\n        echo \"${list2_result[@]}\"\
    \n    else\n        for list1_item in $list1; do\n            list1_result+=(\"\
    \\\"$list1_item\\\"\")\n        done\n        echo \"${list1_result[@]}\"\n  \
    \  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local list1_array=()\n    local\
    \ list2_array=()\n    local i=0\n    local j=0\n    local k=0\n    local result=()\n\
    \    local temp=0\n    local temp_array=()\n    local temp_array_length=0\n  \
    \  local temp_array_length_max=0\n    local temp_array_length_max_index=0\n  \
    \  local temp_array_length_max_index_array=()\n    local temp_array_length_max_index_array_length=0\n\
    \    local temp_array_length_max_index_array_length_max=0\n    local temp_array_length_max_index_array_length_max_index=0\n\
    \    local temp_array_length_max_index_array_length_max_index_array=()\n    local\
    \ temp_array_length_max_index_array_length_max_index_array_length=0\n    local\
    \ temp_array_length_max_index_array_length_max_index_array_length_max=0\n    local\
    \ temp_array_length_max_index_array_length_max_index_array_length_max_index=0\n\
    \    local temp_array_length_max_index_array_length_max_index_array_length_max_index_array=()\n\
    \    local temp_array_length_max_index_array_length_max_index_array_length_max_index_array_length=0\n\
    \    local temp_array_length_max_index_array_length_max_index_array_length_max_index_array_length_max=0\n\
    \    local temp_array_length_max_index_array_length_max_index_array_length_max_index_array_length_max_index=0\n\
    \    local temp_array_length_max_index_array_length_max_index_array_length_max_index_array_length_max_index_array=()\n\
    \    local temp_array_length_max_index_array_length_max_index_array_length\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n    if [[ $list1_len -gt $list2_len ]]; then\n        echo\
    \ \"$list2\"\n    else\n        echo \"$list1\"\n    fi\n}\n\ncandidate() {\n\
    \    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\
    \") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n   \
    \ [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n  \
    \      echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    for word in $list1; do\n   \
    \     total1=$((total1 + ${#word}))\n    done\n    for word in $list2; do\n  \
    \      total2=$((total2 + ${#word}))\n    done\n    if [ $total1 -lt $total2 ];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i=0\n    local -i j=0\n    local -i sum1=0\n    local -i sum2=0\n\
    \    local -i len=0\n    local -i len_max=0\n    local -i len_min=0\n    local\
    \ -i sum_max=0\n    local -i sum_min=0\n    local -a list_max=()\n    local -a\
    \ list_min=()\n    local -a list_ret=()\n    local -a list_tmp=()\n    local str=\"\
    \"\n    local str_tmp=\"\"\n    local -i index=0\n    local -i index_max=0\n \
    \   local -i index_min=0\n    local -i index_ret=0\n    local -i index_tmp=0\n\
    \    local -i flag=0\n    local -i flag_max=0\n    local -i flag_min=0\n    local\
    \ -i flag_ret=0\n    local -i flag_tmp=0\n    local -i flag_tmp_max=0\n    local\
    \ -i flag_tmp_min=0\n    local -i flag_tmp_ret=0\n    local -i flag_tmp_tmp=0\n\
    \    local -i flag_tmp_tmp_max=0\n    local -i flag_tmp_tmp_min=0\n    local -i\
    \ flag_tmp_tmp_ret=0\n    local -i flag_tmp_tmp_tmp=0\n    local -i flag_tmp_tmp_tmp_max=0\n\
    \    local -i flag_tmp_tmp_tmp_min=0\n    local -i flag_tmp_tmp_tmp_ret=0\n  \
    \  local -i flag_tmp_tmp_tmp_tmp=0\n    local -i flag_tmp_tmp_tmp_tmp_max=0\n\
    \    local -i flag_tmp_tmp_tmp_tmp_min=0\n    local -i flag_tmp_tmp_tmp_tmp_ret=0\n\
    \    local -i flag_tmp\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin\
    \ project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    local -i len=0\n    local -i len_min=0\n    local\
    \ -i len_max=0\n    local -i total_min=0\n    local -i total_max=0\n    local\
    \ -i total=0\n    local -i total_min=0\n    local -i total_max=0\n    local -i\
    \ total=0\n    local -i total_min=0\n    local -i total_max=0\n    local -i total=0\n\
    \    local -i total_min=0\n    local -i total_max=0\n    local -i total=0\n  \
    \  local -i total_min=0\n    local -i total_max=0\n    local -i total=0\n    local\
    \ -i total_min=0\n    local -i total_max=0\n    local -i total=0\n    local -i\
    \ total_min=0\n    local -i total_max=0\n    local -i total=0\n    local -i total_min=0\n\
    \    local -i total_max=0\n    local -i total=0\n    local -i total_min=0\n  \
    \  local -i total_max=0\n    local -i total=0\n    local -i total_min=0\n    local\
    \ -i total_max=0\n    local -i total=0\n    local -i total_min=0\n    local -i\
    \ total_max=0\n    local -i total=0\n    local -i total_min=0\n    local -i total_max=0\n\
    \    local -i total=0\n    local -i total_min=0\n    local -i total_max=0\n  \
    \  local -i total=0\n    local -i total_min=0\n    local -i total_max=0\n    local\
    \ -i total\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local total1=0\n  local total2=0\n  local list1_array=()\n  local list2_array=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local result=()\n  local result_array=()\n\
    \  local result_str=\"\"\n  local temp=\"\"\n  local temp_array=()\n  local temp_str=\"\
    \"\n  local temp_total=0\n  local temp_total_array=()\n  local temp_total_str=\"\
    \"\n  local temp_total_total=0\n  local temp_total_total_array=()\n  local temp_total_total_str=\"\
    \"\n  local temp_total_total_total=0\n  local temp_total_total_total_array=()\n\
    \  local temp_total_total_total_str=\"\"\n  local temp_total_total_total_total=0\n\
    \  local temp_total_total_total_total_array=()\n  local temp_total_total_total_total_str=\"\
    \"\n  local temp_total_total_total_total_total=0\n  local temp_total_total_total_total_total_array=()\n\
    \  local temp_total_total_total_total_total_str=\"\"\n  local temp_total_total_total_total_total_total=0\n\
    \  local temp_total_total_total_total_total_total_array=()\n  local temp_total_total_total_total_total_total_str=\"\
    \"\n  local temp_total_total_total_total_total_total_total=0\n  local temp_total_total_total_total_total_total_total_array=()\n\
    \  local temp_total_total_total_total_total_total_total_str=\"\"\n  local temp_total_total_total_total_total_total_total_total=0\n\
    \  local temp_total_total_total_total_total_total_total_total_array=()\n  local\
    \ temp_total_total_total_total_total_total_total_total_str=\"\"\n  local temp_total_total_total_total_total_total_total_\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n\tlocal -a list1=($1)\n\tlocal -a list2=($2)\n\
    \tlocal -a result=()\n\tlocal -i total1=0\n\tlocal -i total2=0\n\tlocal -i i=0\n\
    \tlocal -i j=0\n\tlocal -i len1=${#list1[@]}\n\tlocal -i len2=${#list2[@]}\n\t\
    local -i len=0\n\tlocal -i len_min=0\n\tlocal -i len_max=0\n\tlocal -i len_diff=0\n\
    \tlocal -i len_diff_min=0\n\tlocal -i len_diff_max=0\n\tlocal -i len_diff_min_index=0\n\
    \tlocal -i len_diff_max_index=0\n\tlocal -i len_diff_min_index_min=0\n\tlocal\
    \ -i len_diff_min_index_max=0\n\tlocal -i len_diff_max_index_min=0\n\tlocal -i\
    \ len_diff_max_index_max=0\n\tlocal -i len_diff_min_index_min_min=0\n\tlocal -i\
    \ len_diff_min_index_min_max=0\n\tlocal -i len_diff_min_index_max_min=0\n\tlocal\
    \ -i len_diff_min_index_max_max=0\n\tlocal -i len_diff_max_index_min_min=0\n\t\
    local -i len_diff_max_index_min_max=0\n\tlocal -i len_diff_max_index_max_min=0\n\
    \tlocal -i len_diff_max_index_max_max=0\n\tlocal -i len_diff_min_index_min_min_min=0\n\
    \tlocal -i len_diff_min_index_min_min_max=0\n\tlocal -i len_diff_min_index_min_max_min=0\n\
    \tlocal -i len_diff_min_index_min_max_max=0\n\tlocal -i len_diff_min_index_max_min_min=0\n\
    \tlocal -i len_diff_min_index_max_min_max=0\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local -a list1=($1)\n  local -a list2=($2)\n\
    \  local -a result=()\n  local -i total1=0\n  local -i total2=0\n  local -i i=0\n\
    \  local -i j=0\n  local -i len1=${#list1[@]}\n  local -i len2=${#list2[@]}\n\
    \  local -i len=0\n  local -i min=0\n  local -i max=0\n  local -i tmp=0\n  local\
    \ -i tmp1=0\n  local -i tmp2=0\n  local -i tmp3=0\n  local -i tmp4=0\n  local\
    \ -i tmp5=0\n  local -i tmp6=0\n  local -i tmp7=0\n  local -i tmp8=0\n  local\
    \ -i tmp9=0\n  local -i tmp10=0\n  local -i tmp11=0\n  local -i tmp12=0\n  local\
    \ -i tmp13=0\n  local -i tmp14=0\n  local -i tmp15=0\n  local -i tmp16=0\n  local\
    \ -i tmp17=0\n  local -i tmp18=0\n  local -i tmp19=0\n  local -i tmp20=0\n  local\
    \ -i tmp21=0\n  local -i tmp22=0\n  local -i tmp23=0\n  local -i tmp24=0\n  local\
    \ -i tmp25=0\n  local -i tmp26=0\n  local -i tmp27=0\n  local -i tmp28=0\n  local\
    \ -i tmp29=0\n  local -i tmp30=0\n  local -i tmp31=0\n  local -i tmp32=0\n  local\
    \ -i tmp33=0\n  local -i tmp34=0\n  local -i tmp35=0\n  local -i tmp36=0\n  local\
    \ -i tmp37=0\n  local -i tmp38=0\n  local -i tmp39=0\n  local -i tmp40=0\n  local\
    \ -i tmp41=0\n  local -i tmp42=0\n  local -i tmp43=\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_item\n  local\
    \ list2_item\n  local list1_item_len\n  local list2_item_len\n  local list1_item_quoted\n\
    \  local list2_item_quoted\n  local list1_item_len_quoted\n  local list2_item_len_quoted\n\
    \  local list1_item_len_quoted_escaped\n  local list2_item_len_quoted_escaped\n\
    \  local list1_item_len_quoted_escaped_len\n  local list2_item_len_quoted_escaped_len\n\
    \  local list1_item_len_quoted_escaped_len_quoted\n  local list2_item_len_quoted_escaped_len_quoted\n\
    \  local list1_item_len_quoted_escaped_len_quoted_escaped\n  local list2_item_len_quoted_escaped_len_quoted_escaped\n\
    \  local list1_item_len_quoted_escaped_len_quoted_escaped_len\n  local list2_item_len_quoted_escaped_len_quoted_escaped_len\n\
    \  local list1_item_len_quoted_escaped_len_quoted_escaped_len_quoted\n  local\
    \ list2_item_len_quoted_escaped_len_quoted_escaped_len_quoted\n  local list1_item_len_quoted_escaped_len_quoted_escaped_len_quoted_escaped\n\
    \  local list2_item_len_quoted_escaped_len_quoted_escaped_len_quoted_escaped\n\
    \  local list1_item_len_quoted_escaped_len_quoted_escaped_len_quoted_escaped_len\n\
    \  local list2_item_len_quoted_escaped_len_quoted_escaped_len_quoted_escaped_len\n\
    \  local list1_item_len_quoted_escaped_\n}\n\ncandidate() {\n    total_match \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n   \
    \ [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\"\
    \ \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI\
    \ Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n \
    \   [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n  \
    \      echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local list1_array=()\n    local\
    \ list2_array=()\n    local i=0\n    local j=0\n    local k=0\n    local result=()\n\
    \    local temp=()\n    local temp_total=0\n    local temp_index=0\n    local\
    \ temp_index2=0\n    local temp_index3=0\n    local temp_index4=0\n    local temp_index5=0\n\
    \    local temp_index6=0\n    local temp_index7=0\n    local temp_index8=0\n \
    \   local temp_index9=0\n    local temp_index10=0\n    local temp_index11=0\n\
    \    local temp_index12=0\n    local temp_index13=0\n    local temp_index14=0\n\
    \    local temp_index15=0\n    local temp_index16=0\n    local temp_index17=0\n\
    \    local temp_index18=0\n    local temp_index19=0\n    local temp_index20=0\n\
    \    local temp_index21=0\n    local temp_index22=0\n    local temp_index23=0\n\
    \    local temp_index24=0\n    local temp_index25=0\n    local temp_index26=0\n\
    \    local temp_index27=0\n    local temp_index28=0\n    local temp_index29=0\n\
    \    local temp_index30=0\n    local temp_index31=0\n    local temp_index32=0\n\
    \    local temp_index33=0\n    local temp_index34=0\n    local temp_index35=0\n\
    \    local temp_index36=0\n    local temp_index37=0\n    local temp_index38=0\n\
    \    local temp_index39=0\n    local temp_index40=0\n    local temp_index41=0\n\
    \    local temp_index42=0\n    local temp_index43=0\n    local temp_index44=0\n\
    \    local temp_index45=0\n    local temp_index46=0\n    local temp_index47=0\n\
    \   \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 2
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i\n    local -i j\n    local -i sum1=0\n    local -i sum2=0\n  \
    \  local -i len\n    local -i len_min\n    local -i len_max\n    local -i sum_min\n\
    \    local -i sum_max\n    local -a list_min\n    local -a list_max\n    local\
    \ -a list_ret\n\n    if [ $len1 -eq 0 -a $len2 -eq 0 ]; then\n        echo \"\
    []\"\n        return\n    fi\n\n    if [ $len1 -eq 0 ]; then\n        echo \"\
    [$2]\"\n        return\n    fi\n\n    if [ $len2 -eq 0 ]; then\n        echo \"\
    [$1]\"\n        return\n    fi\n\n    for ((i=0; i<len1; i++)); do\n        len=${#list1[$i]}\n\
    \        sum1=$((sum1 + len))\n    done\n\n    for ((i=0; i<len2; i++)); do\n\
    \        len=${#list2[$i]}\n        sum2=$((sum2 + len))\n    done\n\n    if [\
    \ $sum1 -eq $sum2 ]; then\n        echo \"[$1]\"\n        return\n    fi\n\n \
    \   if [ $sum1 -lt $sum2 ]; then\n        list_min=($1)\n        list_max=($2)\n\
    \        sum_min=$sum1\n        sum_max=$sum2\n    else\n        list_min=($2)\n\
    \        list_max=($1)\n        sum_min=$sum2\n        sum_max=$sum1\n    fi\n\
    \n    len_min=${#list_min[@]}\n    len_max=${#list_max[@]}\n\n    for ((i=0; i<len_max;\
    \ i++)); do\n        len=${#list_max[$i]}\n        sum_max=$((sum_max - len))\n\
    \        if [ $sum_max -lt $sum_min\n}\n\ncandidate() {\n    total_match \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzejxvyvw.sh: line 86: syntax error near unexpected token `}''

    /tmp/tmpzejxvyvw.sh: line 86: `}''

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i\n\
    \    for ((i=0; i<${#list1[@]}; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n\
    \    done\n    for ((i=0; i<${#list2[@]}; i++)); do\n        total2=$((total2\
    \ + ${#list2[i]}))\n    done\n    if ((total1 < total2)); then\n        echo \"\
    ${list1[@]}\"\n    else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local i\n    for i in $list1;\
    \ do\n        total1=$((total1 + ${#i}))\n    done\n    for i in $list2; do\n\
    \        total2=$((total2 + ${#i}))\n    done\n    if [ $total1 -lt $total2 ];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=$(total_chars \"$list1\")\n    local total2=$(total_chars\
    \ \"$list2\")\n    if [ $total1 -lt $total2 ]; then\n        echo \"$list1\"\n\
    \    elif [ $total1 -gt $total2 ]; then\n        echo \"$list2\"\n    else\n \
    \       echo \"$list1\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphlndezop.sh: line 22: total_chars: command not found

    /tmp/tmphlndezop.sh: line 23: total_chars: command not found

    /tmp/tmphlndezop.sh: line 22: total_chars: command not found

    /tmp/tmphlndezop.sh: line 23: total_chars: command not found

    '
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=$1\n    local list2=$2\n\
    \    local list1_total=0\n    local list2_total=0\n    local list1_count=0\n \
    \   local list2_count=0\n    local list1_array=($list1)\n    local list2_array=($list2)\n\
    \    local list1_len=${#list1_array[@]}\n    local list2_len=${#list2_array[@]}\n\
    \    local i=0\n    local j=0\n    local list1_item=\"\"\n    local list2_item=\"\
    \"\n    local list1_item_len=0\n    local list2_item_len=0\n    local list1_item_count=0\n\
    \    local list2_item_count=0\n    local list1_item_total=0\n    local list2_item_total=0\n\
    \    local list1_item_array=()\n    local list2_item_array=()\n    local list1_item_len=0\n\
    \    local list2_item_len=0\n    local list1_item_count=0\n    local list2_item_count=0\n\
    \    local list1_item_total=0\n    local list2_item_total=0\n    local list1_item_array=()\n\
    \    local list2_item_array=()\n    local list1_item_len=0\n    local list2_item_len=0\n\
    \    local list1_item_count=0\n    local list2_item_count=0\n    local list1_item_total=0\n\
    \    local list2_item_total=0\n    local list1_item_array=()\n    local list2_item_array=()\n\
    \    local list1_item_len=0\n    local list2_item_len=0\n    local list1_item_count=0\n\
    \    local list2_item_count=0\n    local list1_item_total=0\n    local list2_item_total=0\n\
    \    local list1_item_array=()\n    local list2_item_array=()\n    local list1_item_len=0\n\
    \    local list2_item_len=0\n   \n}\n\ncandidate() {\n    total_match \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_total=0\n    local list2_total=0\n    for word in $list1;\
    \ do\n        list1_total=$((list1_total + ${#word}))\n    done\n    for word\
    \ in $list2; do\n        list2_total=$((list2_total + ${#word}))\n    done\n \
    \   if [[ $list1_total -lt $list2_total ]]; then\n        echo \"$1\"\n    else\n\
    \        echo \"$2\"\n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local len1=0\n    local len2=0\n\
    \    local i=0\n    local j=0\n    local word1=\"\"\n    local word2=\"\"\n  \
    \  local result=\"\"\n    local result1=\"\"\n    local result2=\"\"\n    local\
    \ result3=\"\"\n    local result4=\"\"\n    local result5=\"\"\n    local result6=\"\
    \"\n    local result7=\"\"\n    local result8=\"\"\n    local result9=\"\"\n \
    \   local result10=\"\"\n    local result11=\"\"\n    local result12=\"\"\n  \
    \  local result13=\"\"\n    local result14=\"\"\n    local result15=\"\"\n   \
    \ local result16=\"\"\n    local result17=\"\"\n    local result18=\"\"\n    local\
    \ result19=\"\"\n    local result20=\"\"\n    local result21=\"\"\n    local result22=\"\
    \"\n    local result23=\"\"\n    local result24=\"\"\n    local result25=\"\"\n\
    \    local result26=\"\"\n    local result27=\"\"\n    local result28=\"\"\n \
    \   local result29=\"\"\n    local result30=\"\"\n    local result31=\"\"\n  \
    \  local result32=\"\"\n    local result33=\"\"\n    local result34=\"\"\n   \
    \ local result35=\"\"\n    local result36=\"\"\n    local result37=\"\"\n    local\
    \ result38=\"\"\n    local result39=\"\"\n    local result40=\"\"\n    local result41=\"\
    \"\n    local result42=\"\"\n    local result43=\"\"\n    local result44=\"\"\n\
    \    local result45=\"\"\n    local result46=\"\"\n    local result47=\"\"\n \
    \   local result48=\"\"\n    local result49=\"\"\n    local result50=\"\"\n  \
    \  local result51=\"\"\n    local result52=\"\"\n    local result53=\"\"\n   \
    \ local result54=\"\"\n    local result55=\"\"\n    local result56=\"\"\n    local\
    \ result57=\"\"\n    local result58=\"\"\n    local result59=\"\"\n    local result60=\"\
    \"\n    local result61=\"\"\n    local result62=\"\"\n    local result63=\"\"\n\
    \    local result64=\"\"\n    local result65=\"\"\n    local result66=\"\"\n \
    \   local result67=\"\"\n    local result68=\"\"\n    local result69=\"\"\n  \
    \  local result70=\"\"\n    local result71=\"\"\n    local result72=\"\"\n   \
    \ local result73\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local -a list1=($1)\n  local -a list2=($2)\n\
    \  local -i len1=${#list1[@]}\n  local -i len2=${#list2[@]}\n  local -i i\n  local\
    \ -i j\n  local -i sum1=0\n  local -i sum2=0\n  local -i len\n  local -i char\n\
    \  local -i char1\n  local -i char2\n  local -i char3\n  local -i char4\n  local\
    \ -i char5\n  local -i char6\n  local -i char7\n  local -i char8\n  local -i char9\n\
    \  local -i char10\n  local -i char11\n  local -i char12\n  local -i char13\n\
    \  local -i char14\n  local -i char15\n  local -i char16\n  local -i char17\n\
    \  local -i char18\n  local -i char19\n  local -i char20\n  local -i char21\n\
    \  local -i char22\n  local -i char23\n  local -i char24\n  local -i char25\n\
    \  local -i char26\n  local -i char27\n  local -i char28\n  local -i char29\n\
    \  local -i char30\n  local -i char31\n  local -i char32\n  local -i char33\n\
    \  local -i char34\n  local -i char35\n  local -i char36\n  local -i char37\n\
    \  local -i char38\n  local -i char39\n  local -i char40\n  local -i char41\n\
    \  local -i char42\n  local -i char43\n  local -i char44\n  local -i char45\n\
    \  local -i char46\n  local -i char47\n  local -i char48\n  local -i char49\n\
    \  local -i char50\n  local -i char51\n  local -i char52\n  local -i char53\n\
    \  local -i char54\n  local -i char55\n  local -i char56\n  local -i char57\n\
    \  local -i char58\n  local -i char59\n  local -i\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_array=()\n \
    \ local list2_array=()\n  local list1_array_index=0\n  local list2_array_index=0\n\
    \  local list1_array_size=0\n  local list2_array_size=0\n  local list1_array_element=''\n\
    \  local list2_array_element=''\n  local list1_array_element_size=0\n  local list2_array_element_size=0\n\
    \  local list1_array_element_size_total=0\n  local list2_array_element_size_total=0\n\
    \  local result_array=()\n  local result_array_index=0\n  local result_array_size=0\n\
    \  local result_array_element=''\n  local result_array_element_size=0\n  local\
    \ result_array_element_size_total=0\n  local result_array_element_size_total_min=0\n\
    \  local result_array_element_size_total_min_index=0\n  local result_array_element_size_total_min_index_array=()\n\
    \  local result_array_element_size_total_min_index_array_index=0\n  local result_array_element_size_total_min_index_array_size=0\n\
    \  local result_array_element_size_total_min_index_array_element=''\n  local result_array_element_size_total_min_index_array_element_size=0\n\
    \  local result_array_element_size_total_min_index_array_element_size_total=0\n\
    \  local result_array_element_size_total_min_index_array_element_size_total_min=0\n\
    \  local result_array_element_size_total_min_index_array_element_size_total_min_index=0\n\
    \  local result_array_element_size_total_min_index_array_element_size_total_min_index_array=()\n\
    \  local result_array_element_size_total\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    for word in $list1; do\n   \
    \     total1=$((total1 + ${#word}))\n    done\n    for word in $list2; do\n  \
    \      total2=$((total2 + ${#word}))\n    done\n    if [ $total1 -lt $total2 ];\
    \ then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local total1=0\n    local total2=0\n    local item\n    for item in\
    \ $list1; do\n        total1=$((total1 + ${#item}))\n    done\n    for item in\
    \ $list2; do\n        total2=$((total2 + ${#item}))\n    done\n    if [ $total1\
    \ -lt $total2 ]; then\n        echo \"$list1\"\n    else\n        echo \"$list2\"\
    \n    fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local total1=0\n    local total2=0\n\
    \    local i=0\n    local j=0\n    local len1=${#list1[@]}\n    local len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n\
    \    done\n    if [[ $total1 -lt $total2 ]]; then\n        result=(\"${list1[@]}\"\
    )\n    elif [[ $total1 -gt $total2 ]]; then\n        result=(\"${list2[@]}\")\n\
    \    else\n        result=(\"${list1[@]}\")\n    fi\n    echo ${result[@]}\n}\n\
    \ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\"\
    \ ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"\
    hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi\
    \ hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    local -i i\n    local -i j\n    local -i sum1=0\n    local -i sum2=0\n  \
    \  local -i len\n    local -i len_max\n    local -i len_min\n    local -i len_diff\n\
    \    local -i len_diff_max\n    local -i len_diff_min\n    local -i len_diff_max_index\n\
    \    local -i len_diff_min_index\n    local -i len_diff_max_index_max\n    local\
    \ -i len_diff_min_index_min\n    local -i len_diff_max_index_min\n    local -i\
    \ len_diff_min_index_max\n    local -i len_diff_max_index_max_max\n    local -i\
    \ len_diff_min_index_min_min\n    local -i len_diff_max_index_min_min\n    local\
    \ -i len_diff_min_index_max_max\n    local -i len_diff_max_index_max_min\n   \
    \ local -i len_diff_min_index_min_max\n    local -i len_diff_max_index_min_max\n\
    \    local -i len_diff_min_index_max_min\n    local -i len_diff_max_index_min_min_max\n\
    \    local -i len_diff_min_index_max_max_min\n    local -i len_diff_max_index_min_max_min\n\
    \    local -i len_diff_min_index_max_min_max\n    local -i len_diff_max_index_min_min_min\n\
    \    local -i len_diff_min_index_max_min_min\n    local -i len_diff_max_index_min_max_max\n\
    \    local -i len_diff_min_index_max_min_max\n    local -i len_diff_max_index_min_min_max\n\
    \    local -i len_diff_min\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_item\n  local\
    \ list2_item\n  local list1_item_len\n  local list2_item_len\n  local list1_items\n\
    \  local list2_items\n  local list1_items_len\n  local list2_items_len\n  local\
    \ list1_items_len_max\n  local list2_items_len_max\n  local list1_items_len_max_index\n\
    \  local list2_items_len_max_index\n  local list1_items_len_max_item\n  local\
    \ list2_items_len_max_item\n  local list1_items_len_max_item_len\n  local list2_items_len_max_item_len\n\
    \  local list1_items_len_max_item_len_index\n  local list2_items_len_max_item_len_index\n\
    \  local list1_items_len_max_item_len_index_item\n  local list2_items_len_max_item_len_index_item\n\
    \  local list1_items_len_max_item_len_index_item_len\n  local list2_items_len_max_item_len_index_item_len\n\
    \  local list1_items_len_max_item_len_index_item_len_index\n  local list2_items_len_max_item_len_index_item_len_index\n\
    \  local list1_items_len_max_item_len_index_item_len_index_item\n  local list2_items_len_max_item_len_index_item_len_index_item\n\
    \  local list1_items_len_max_item_len_index_item_len_index_item_len\n  local list2_items_len_max_item_len_index_item_len_index_item_len\n\
    \  local list1_items_len_max_item_len_index_item_len_index_item_len_index\n  local\
    \ list2_items_len_max_item_len\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\"\
    ) = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\"\
    ) = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    for ((i=0; i<len1; i++)); do\n        total1=$((total1\
    \ + ${#list1[i]}))\n    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2\
    \ + ${#list2[j]}))\n    done\n    if ((total1 < total2)); then\n        result=(\"\
    ${list1[@]}\")\n    elif ((total1 > total2)); then\n        result=(\"${list2[@]}\"\
    )\n    else\n        result=(\"${list1[@]}\")\n    fi\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  for word in $list1; do\n\
    \    list1_total=$((list1_total + ${#word}))\n  done\n  for word in $list2; do\n\
    \    list2_total=$((list2_total + ${#word}))\n  done\n  if [ $list1_total -lt\
    \ $list2_total ]; then\n    echo \"$list1\"\n  else\n    echo \"$list2\"\n  fi\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_item\n  local\
    \ list2_item\n  local list1_item_len\n  local list2_item_len\n  for list1_item\
    \ in $list1; do\n    list1_item_len=${#list1_item}\n    list1_total=$((list1_total\
    \ + list1_item_len))\n  done\n  for list2_item in $list2; do\n    list2_item_len=${#list2_item}\n\
    \    list2_total=$((list2_total + list2_item_len))\n  done\n  if [ $list1_total\
    \ -lt $list2_total ]; then\n    echo \"$list1\"\n  else\n    echo \"$list2\"\n\
    \  fi\n}\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi\
    \ hi\") = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\"\
    ) = \"hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[\
    \ $(candidate \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi\
    \ admin\" \"hI hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"\
    hI hi hii\") = \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n\
    \    [[ $(candidate \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -i total1=0\n    local -i total2=0\n    local -i i=0\n\
    \    local -i j=0\n    local -i len1=${#list1[@]}\n    local -i len2=${#list2[@]}\n\
    \    for ((i=0; i<len1; i++)); do\n        total1=$((total1 + ${#list1[i]}))\n\
    \    done\n    for ((j=0; j<len2; j++)); do\n        total2=$((total2 + ${#list2[j]}))\n\
    \    done\n    if ((total1 < total2)); then\n        echo \"${list1[@]}\"\n  \
    \  else\n        echo \"${list2[@]}\"\n    fi\n}\n\ncandidate() {\n    total_match\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\" \"\") = \"\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n    [[ $(candidate\
    \ \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\" \"hI Hi\")\
    \ = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"hI hi hi\"\
    \ ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n    [[\
    \ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\") = \"\
    \" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015369
- exit_code: 0
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local list1=\"$1\"\n    local list2=\"\
    $2\"\n    local list1_len=$(echo \"$list1\" | wc -c)\n    local list2_len=$(echo\
    \ \"$list2\" | wc -c)\n    if [ \"$list1_len\" -lt \"$list2_len\" ]; then\n  \
    \      echo \"$list1\"\n    else\n        echo \"$list2\"\n    fi\n}\n\ncandidate()\
    \ {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\") = \"hi hi\" ]]\n\
    \    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate \"hi admin\"\
    \ \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hi\") = \"\
    hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") = \"hi admin\" ]]\n\
    \    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate \"this\" \"\"\
    ) = \"\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n    local -a list1=($1)\n    local\
    \ -a list2=($2)\n    local -a result=()\n    local -i total1=0\n    local -i total2=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i len1=${#list1[@]}\n    local\
    \ -i len2=${#list2[@]}\n    local -i len=0\n    local -i min_len=0\n    local\
    \ -i max_len=0\n    local -i min_total=0\n    local -i max_total=0\n    local\
    \ -i min_index=0\n    local -i max_index=0\n    local -i min_total_index=0\n \
    \   local -i max_total_index=0\n    local -i min_total_len=0\n    local -i max_total_len=0\n\
    \    local -i min_total_index_len=0\n    local -i max_total_index_len=0\n    local\
    \ -i min_total_index_len_total=0\n    local -i max_total_index_len_total=0\n \
    \   local -i min_total_index_len_total_len=0\n    local -i max_total_index_len_total_len=0\n\
    \    local -i min_total_index_len_total_len_total=0\n    local -i max_total_index_len_total_len_total=0\n\
    \    local -i min_total_index_len_total_len_total_len=0\n    local -i max_total_index_len_total_len_total_len=0\n\
    \    local -i min_total_index_len_total_len_total_len_total=0\n    local -i max_total_index_len_total_len_total_len_total=0\n\
    \    local -i min_total_index_len_total_len_total_len_total_len=0\n    local -i\
    \ max_total_index_len_total_len_total_len_total_len=0\n    local -i min_total_index_len_total_len_total_len_total\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370
- exit_code: 1
  program: "#!/bin/bash\n# Write a function that accepts two lists of strings and\
    \ returns the list that has \n# total number of chars in the all strings of the\
    \ list less than the other list.\n# if the two lists have the same number of chars,\
    \ return the first list.\n# Examples\n# >>> $(total_match \"\" \"\")\n# []\n#\
    \ >>> $(total_match \"hi admin\" \"hI Hi\")\n# ['\"hI\"', '\"Hi\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hi hi admin project\")\n# ['\"hi\"', '\"admin\"']\n# >>> $(total_match\
    \ \"hi admin\" \"hI hi hi\")\n# ['\"hI\"', '\"hi\"', '\"hi\"']\n# >>> $(total_match\
    \ \"4\" \"1 2 3 4 5\")\n# ['\"4\"']\n#\n# $1 is a space-separated list\n# $2 is\
    \ a space-separated list\ntotal_match() {\n  local list1=\"$1\"\n  local list2=\"\
    $2\"\n  local list1_total=0\n  local list2_total=0\n  local list1_item\n  local\
    \ list2_item\n  local list1_item_len\n  local list2_item_len\n  local list1_item_quoted\n\
    \  local list2_item_quoted\n  local list1_item_quoted_len\n  local list2_item_quoted_len\n\
    \  local list1_item_quoted_len_total=0\n  local list2_item_quoted_len_total=0\n\
    \  local list1_item_len_total=0\n  local list2_item_len_total=0\n  local list1_item_len_total_quoted\n\
    \  local list2_item_len_total_quoted\n  local list1_item_len_total_quoted_len\n\
    \  local list2_item_len_total_quoted_len\n  local list1_item_len_total_quoted_len_total=0\n\
    \  local list2_item_len_total_quoted_len_total=0\n  local list1_item_quoted_len_total_quoted\n\
    \  local list2_item_quoted_len_total_quoted\n  local list1_item_quoted_len_total_quoted_len\n\
    \  local list2_item_quoted_len_total_quoted_len\n  local list1_item_quoted_len_total_quoted_len_total=0\n\
    \  local list2_item_quoted_len_total_quoted_len_total=0\n  local list1_item_quoted_len_total_quoted_len_total_quoted\n\
    \  local list2_item_quoted_len_total_quoted_len_total_quoted\n  local list1_item_quoted_len_total_quoted_len_total_quoted_len\n\
    \  local list2_item_quoted_len_total_quoted_len_total_quoted_len\n  local list1_item_quoted_len_total_quoted_len_total_quoted\n\
    }\n\ncandidate() {\n    total_match \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\" \"\") = \"\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi\"\
    ) = \"hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hi hi admin project\") = \"\
    hi admin\" ]]\n    [[ $(candidate \"4\" \"1 2 3 4 5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"hi admin\" \"hI Hi\") = \"hI Hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI\
    \ hi hi\") = \"hI hi hi\" ]]\n    [[ $(candidate \"hi admin\" \"hI hi hii\") =\
    \ \"hi admin\" ]]\n    [[ $(candidate \"\" \"this\") = \"\" ]]\n    [[ $(candidate\
    \ \"this\" \"\") = \"\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015370

name: HumanEval_49_modp
language: sh
prompt: "#!/bin/bash\n# Return 2^n modulo p (be aware of numerics).\n# >>> $(modp\
  \ \"3\" \"5\")\n# \"3\"\n# >>> $(modp \"1101\" \"101\")\n# \"2\"\n# >>> $(modp \"\
  0\" \"101\")\n# \"1\"\n# >>> $(modp \"3\" \"11\")\n# \"8\"\n# >>> $(modp \"100\"\
  \ \"101\")\n# \"1\"\n#\n# $1 is an integer\n# $2 is an integer\nmodp() {\n"
tests: "}\n\ncandidate() {\n    modp \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"3\" \"5\") = \"3\" ]]\n    [[ $(candidate \"1101\" \"101\") = \"2\" ]]\n   \
  \ [[ $(candidate \"0\" \"101\") = \"1\" ]]\n    [[ $(candidate \"3\" \"11\") = \"\
  8\" ]]\n    [[ $(candidate \"100\" \"101\") = \"1\" ]]\n    [[ $(candidate \"30\"\
  \ \"5\") = \"4\" ]]\n    [[ $(candidate \"31\" \"5\") = \"3\" ]]\n}\n\nrun_test"
completions: ["    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\n    local\
    \ i=0\n    local l=${#n}\n    while [ $i -lt $l ]; do\n        if [ \"${n:$i:1}\"\
    \ = \"1\" ]; then\n            r=$(($r*2))\n            r=$(($r%$p))\n       \
    \ fi\n        i=$(($i+1))\n    done\n    echo \"$r\"", "    local n=$1\n    local\
    \ p=$2\n    local r=1\n    local i=0\n    local l=${#n}\n    while [ $i -lt $l\
    \ ]; do\n        if [ \"${n:$i:1}\" == \"1\" ]; then\n            r=$((r*2%p))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $r", "    local x=\"$1\"\n\
    \    local p=\"$2\"\n    local result=\"1\"\n    local i\n    for ((i=${#x}-1;\
    \ i>=0; i--)); do\n        local bit=\"${x:$i:1}\"\n        if [[ \"$bit\" ==\
    \ \"1\" ]]; then\n            result=$(mul \"$result\" \"$result\")\n        \
    \    result=$(mul \"$result\" \"$p\")\n        else\n            result=$(mul\
    \ \"$result\" \"$result\")\n        fi\n    done\n    echo \"$result\"", "   \
    \ local n=$1\n    local p=$2\n    local r=1\n    local i\n    for ((i=0; i<${#n};\
    \ i++)); do\n        if [[ ${n:$i:1} -eq 1 ]]; then\n            r=$((r*r%p))\n\
    \        fi\n        r=$((r*r%p))\n    done\n    echo $r", "  local n=\"$1\"\n\
    \  local p=\"$2\"\n  local r=\"1\"\n  local i\n  for ((i=0; i<${#n}; i++)); do\n\
    \    if [[ \"${n:$i:1}\" == \"1\" ]]; then\n      r=$(($r * $r % $p))\n    fi\n\
    \    r=$(($r * $r % $p))\n  done\n  echo \"$r\"", "    local n=\"$1\"\n    local\
    \ p=\"$2\"\n    local res=\"1\"\n    local i\n    for ((i=0; i<${#n}; i++)); do\n\
    \        if [[ \"${n:$i:1}\" == \"1\" ]]; then\n            res=$(mul \"$res\"\
    \ \"$res\")\n            res=$(mod \"$res\" \"$p\")\n        fi\n        res=$(mul\
    \ \"$res\" \"$res\")\n        res=$(mod \"$res\" \"$p\")\n    done\n    echo \"\
    $res\"", "    local n=$1\n    local p=$2\n    local result=1\n    local i=0\n\
    \    while [ $i -lt $n ]; do\n        result=$((result * 2))\n        result=$((result\
    \ % p))\n        i=$((i + 1))\n    done\n    echo $result", "    local n=\"$1\"\
    \n    local p=\"$2\"\n    local r=\"$n\"\n    local i=1\n    while [ $i -lt ${#n}\
    \ ]; do\n        r=$(($r*$r%$p))\n        i=$(($i+1))\n    done\n    echo $r",
  "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local len=${#n}\n\
    \    while [ $i -lt $len ]; do\n        local c=${n:$i:1}\n        if [ $c -eq\
    \ 1 ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n\
    \    local l=${#n}\n    while [ $i -lt $l ]; do\n        if [ \"${n:$i:1}\" -eq\
    \ 1 ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo $r", "    local n=$1\n    local p=$2\n    local result=1\n    local\
    \ i\n    for ((i=0; i<${#n}; i++)); do\n        if [[ ${n:$i:1} == 1 ]]; then\n\
    \            result=$((result * result % p))\n        fi\n        result=$((result\
    \ * result % p))\n    done\n    echo $result", "    local n=$1\n    local p=$2\n\
    \    local res=1\n    local i=0\n    local len=${#n}\n    while [ $i -lt $len\
    \ ]; do\n        local digit=${n:$i:1}\n        if [ $digit -eq 1 ]; then\n  \
    \          res=$((res * res % p))\n        fi\n        res=$((res * res % p))\n\
    \        i=$((i + 1))\n    done\n    echo $res", "    local n=\"$1\"\n    local\
    \ p=\"$2\"\n    local r=\"$n\"\n    local i=0\n    local l=${#n}\n    while [\
    \ $i -lt $l ]; do\n        if [ \"${n:$i:1}\" == \"1\" ]; then\n            r=$(($r\
    \ * $r % $p))\n        fi\n        i=$(($i + 1))\n        r=$(($r * $r % $p))\n\
    \    done\n    echo \"$r\"", "  local n=$1\n  local p=$2\n  local res=1\n  local\
    \ i=0\n  local len=${#n}\n  while [ $i -lt $len ]; do\n    local bit=${n:$i:1}\n\
    \    if [ $bit -eq 1 ]; then\n      res=$((res * res % p))\n      res=$((res *\
    \ 2 % p))\n    else\n      res=$((res * res % p))\n    fi\n    i=$((i + 1))\n\
    \  done\n  echo $res", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i=0\n    local n_len=${#n}\n    local n_bin=$(echo \"obase=2;$n\" | bc)\n  \
    \  local n_bin_len=${#n_bin}\n    local n_bin_rev=$(echo $n_bin | rev)\n    local\
    \ n_bin_rev_len=${#n_bin_rev}\n    local n_bin_rev_i=0\n    local n_bin_rev_i_val=0\n\
    \    local n_bin_rev_i_val_int=0\n    local n_bin_rev_i_val_int_pow=0\n    local\
    \ n_bin_rev_i_val_int_pow_mod=0\n    local n_bin_rev_i_val_int_pow_mod_r=0\n \
    \   local n_bin_rev_i_val_int_pow_mod_r_mod=0\n    for (( i=0; i<n_bin_rev_len;\
    \ i++ )); do\n        n_bin_rev_i_val=${n_bin_rev:$i:1}\n        n_bin_rev_i_val_int=$(echo\
    \ \"ibase=2;$n_bin_rev_i_val\" | bc)\n        n_bin_rev_i_val_int_pow=$(echo \"\
    2^$i\" | bc)\n        n_bin_rev_i_val_int_pow_mod=$(echo \"$n_bin_rev_i_val_int_pow\
    \ % $p\" | bc)\n        n_bin_rev_i_val_int_pow_mod_r=$(echo \"$n_bin_rev_i_val_int\
    \ * $n_bin_rev_i_val_int_pow_mod\" | bc)\n        n_bin_rev_i_val_int_pow_mod_r_mod=$(echo\
    \ \"$n_bin_rev_i_val_int_pow_mod_r % $p\" | bc)\n        r=$(echo \"$r + $n_bin",
  "\tlocal n=\"$1\"\n\tlocal p=\"$2\"\n\tlocal r=\"$n\"\n\tlocal i=1\n\twhile [ $i\
    \ -lt ${#n} ]; do\n\t\tr=$(mul \"$r\" \"$r\" \"$p\")\n\t\ti=$((i+1))\n\tdone\n\
    \techo \"$r\"", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n\
    \    local n_len=${#n}\n    local n_i\n    local n_i_val\n    local n_i_val_pow\n\
    \    local n_i_val_pow_mod\n    local n_i_val_pow_mod_r\n    for ((i=0; i<n_len;\
    \ i++)); do\n        n_i=${n:$i:1}\n        n_i_val=$((n_i))\n        n_i_val_pow=$((n_i_val\
    \ * n_i_val))\n        n_i_val_pow_mod=$((n_i_val_pow % p))\n        n_i_val_pow_mod_r=$((n_i_val_pow_mod\
    \ * r))\n        r=$((n_i_val_pow_mod_r % p))\n    done\n    echo $r", "    local\
    \ n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local len=${#n}\n  \
    \  while [ $i -lt $len ]; do\n        local c=${n:$i:1}\n        if [ $c -eq 1\
    \ ]; then\n            r=$(((r * r) % p))\n        fi\n        r=$(((r * r) %\
    \ p))\n        i=$((i + 1))\n    done\n    echo $r", "    local n=\"$1\"\n   \
    \ local p=\"$2\"\n    local r=\"1\"\n    local i=\"0\"\n    local len=\"${#n}\"\
    \n    while [ \"$i\" -lt \"$len\" ]; do\n        local c=\"${n:$i:1}\"\n     \
    \   if [ \"$c\" -eq \"1\" ]; then\n            r=$(($r * $r % $p))\n        fi\n\
    \        i=$(($i + 1))\n        r=$(($r * $r % $p))\n    done\n    echo \"$r\"",
  "    local n=$1\n    local p=$2\n    local res=1\n    local i=0\n    while [ $i\
    \ -lt $n ]; do\n        res=$((res*2))\n        res=$((res%p))\n        i=$((i+1))\n\
    \    done\n    echo $res", "    local n=$1\n    local p=$2\n    local r=1\n  \
    \  local i=0\n    local j=0\n    local k=0\n    local m=0\n    local t=0\n   \
    \ local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local\
    \ z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n\
    \    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n \
    \   local k=0\n    local m=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n   \
    \ local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local\
    \ g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local m=0\n\
    \    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n \
    \   local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n  \
    \  local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n   \
    \ local i=0\n    local j=0\n    local k=0\n    local m=0\n    local t=0\n    local\
    \ u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n\
    \    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n \
    \   local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local m=0\n    local t=0\n    local u=0\n   ", "    local n=$1\n\
    \    local p=$2\n    local result=1\n    local i=0\n    while [ $i -lt ${#n} ];\
    \ do\n        local digit=${n:$i:1}\n        if [ $digit -eq 1 ]; then\n     \
    \       result=$((result * 2 % p))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo $result", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i=0\n    local nlen=${#n}\n    local nbits=$(($nlen * 4))\n    local nbit=0\n\
    \    local bit=0\n    local bitmask=0\n    local bitmask2=0\n    local bitmask3=0\n\
    \    local bitmask4=0\n    local bitmask5=0\n    local bitmask6=0\n    local bitmask7=0\n\
    \    local bitmask8=0\n    local bitmask9=0\n    local bitmask10=0\n    local\
    \ bitmask11=0\n    local bitmask12=0\n    local bitmask13=0\n    local bitmask14=0\n\
    \    local bitmask15=0\n    local bitmask16=0\n    local bitmask17=0\n    local\
    \ bitmask18=0\n    local bitmask19=0\n    local bitmask20=0\n    local bitmask21=0\n\
    \    local bitmask22=0\n    local bitmask23=0\n    local bitmask24=0\n    local\
    \ bitmask25=0\n    local bitmask26=0\n    local bitmask27=0\n    local bitmask28=0\n\
    \    local bitmask29=0\n    local bitmask30=0\n    local bitmask31=0\n    local\
    \ bitmask32=0\n    local bitmask33=0\n    local bitmask34=0\n    local bitmask35=0\n\
    \    local bitmask36=0\n    local bitmask37=0\n    local bitmask38=0\n    local\
    \ bitmask39=0\n    local bitmask40=0\n    local bitmask41=0\n    local bitmask42=0\n\
    \    local bitmask43=0\n    local bitmask44=0\n    local bitmask45=0\n    local\
    \ bitmask46=0\n    local bitmask47=0\n    local bitmask48=0\n    local bitmask49=0\n\
    \    local bitmask50=0\n    local bitmask51=0\n    local bitmask52=0\n    local\
    \ bitmask53=0\n    local bitmask54=0\n    local bitmask55=0\n    local bitmask56=0\n\
    \    local bitmask", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"1\"\
    \n    local i\n    for ((i=${#n}-1; i>=0; i--)); do\n        r=$(($r*$r%$p))\n\
    \        if [[ \"${n:$i:1}\" == \"1\" ]]; then\n            r=$(($r*2%$p))\n \
    \       fi\n    done\n    echo \"$r\"", "    local n=$1\n    local p=$2\n    local\
    \ r=1\n    local i=0\n    local n_len=${#n}\n    while [ $i -lt $n_len ]; do\n\
    \        local d=${n:$i:1}\n        if [ $d -eq 1 ]; then\n            r=$((r\
    \ * 2 % p))\n        fi\n        i=$((i + 1))\n    done\n    echo $r", "    local\
    \ n=$1\n    local p=$2\n    local res=1\n    local i=0\n    while [[ $i -lt $n\
    \ ]]; do\n        res=$((res*2))\n        res=$((res%p))\n        i=$((i+1))\n\
    \    done\n    echo $res", "    local n=$1\n    local p=$2\n    local r=1\n  \
    \  local i=0\n    local nlen=${#n}\n    local nbit=0\n    local nbit_prev=0\n\
    \    local nbit_prev_prev=0\n    local nbit_prev_prev_prev=0\n    local nbit_prev_prev_prev_prev=0\n\
    \    local nbit_prev_prev_prev_prev_prev=0\n    local nbit_prev_prev_prev_prev_prev_prev=0\n\
    \    local nbit_prev_prev_prev_prev_prev_prev_prev=0\n    local nbit_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local nbit_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local nbit_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local nbit_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n   \
    \ local nbit_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n \
    \   local nbit_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local nbit_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local nbit_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local nbit_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local nbit_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local nbit_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local", "    local n=$1\n    local p=$2\n    local result=1\n    local i=0\n\
    \    while [ $i -lt ${#n} ]; do\n        local c=${n:$i:1}\n        if [ $c -eq\
    \ 1 ]; then\n            result=$((result * 2 % p))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo $result", "    local n=$1\n    local p=$2\n    local\
    \ r=1\n    local i=0\n    local n_len=${#n}\n    local n_bin=$(echo \"obase=2;\
    \ ibase=10; $n\" | bc)\n    local n_bin_len=${#n_bin}\n    local n_bin_rev=$(echo\
    \ $n_bin | rev)\n    local n_bin_rev_len=${#n_bin_rev}\n    local n_bin_rev_i=0\n\
    \    local n_bin_rev_i_val=0\n    local n_bin_rev_i_val_pow=0\n    local n_bin_rev_i_val_pow_mod=0\n\
    \    local n_bin_rev_i_val_pow_mod_r=0\n    local n_bin_rev_i_val_pow_mod_r_mod=0\n\
    \    local n_bin_rev_i_val_pow_mod_r_mod_r=0\n    local n_bin_rev_i_val_pow_mod_r_mod_r_mod=0\n\
    \    local n_bin_rev_i_val_pow_mod_r_mod_r_mod_r=0\n    local n_bin_rev_i_val_pow_mod_r_mod_r_mod_r_mod=0\n\
    \    local n_bin_rev_i_val_pow_mod_r_mod_r_mod_r_mod_r=0\n    local n_bin_rev_i_val_pow_mod_r_mod_r_mod_r_mod_r_mod=0\n\
    \    local n_bin_rev_i_val_pow_mod_r_mod_r_mod_r_mod_r_mod_r=0\n    local n_bin_rev_i_val_pow_mod_r_mod_r_mod_r_mod_r_mod_r_mod=0\n\
    \    local n_bin_rev_i_val_pow_mod_r_mod_r_mod_r_mod_r_mod_r_mod", "    local\
    \ n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local n_len=${#n}\n\
    \    for ((i=0; i<n_len; i++)); do\n        local n_i=${n:$i:1}\n        if [[\
    \ $n_i == 1 ]]; then\n            r=$((r*2%p))\n        fi\n        r=$((r*r%p))\n\
    \    done\n    echo $r", "    local n=$1\n    local p=$2\n    local result=1\n\
    \    local i\n    for ((i=0; i<${#n}; i++)); do\n        if [[ ${n:$i:1} -eq 1\
    \ ]]; then\n            result=$((result * result % p))\n        fi\n        result=$((result\
    \ * result % p))\n    done\n    echo $result", "    local a=$1\n    local p=$2\n\
    \    local r=1\n    local b=2\n    local n=$((${#a}-1))\n    while [ $n -ge 0\
    \ ]; do\n        local d=${a:$n:1}\n        if [ $d -eq 1 ]; then\n          \
    \  r=$(((r*b)%p))\n        fi\n        b=$(((b*b)%p))\n        n=$((n-1))\n  \
    \  done\n    echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"\
    1\"\n    local i\n    for ((i=${#n}-1; i>=0; i--)); do\n        r=$(mul \"$r\"\
    \ \"$r\" \"$p\")\n        if [[ \"${n:$i:1}\" == \"1\" ]]; then\n            r=$(mul\
    \ \"$r\" \"2\" \"$p\")\n        fi\n    done\n    echo \"$r\"", "    local n=$1\n\
    \    local p=$2\n    local result=1\n    local i=0\n    local len=${#n}\n    while\
    \ [ $i -lt $len ]; do\n        local digit=${n:$i:1}\n        if [ $digit -eq\
    \ 1 ]; then\n            result=$((result * 2 % p))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo $result", "    local n=\"$1\"\n    local p=\"$2\"\n\
    \    local r=\"$n\"\n    local i=\"$((${#n}-1))\"\n    while [ \"$i\" -gt 0 ];\
    \ do\n        r=$(($r*$r%$p))\n        if [ \"${n:$i:1}\" -eq 1 ]; then\n    \
    \        r=$(($r*$n%$p))\n        fi\n        i=$(($i-1))\n    done\n    echo\
    \ \"$r\"", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n   \
    \ local l=${#n}\n    while [ $i -lt $l ]; do\n        if [ \"${n:$i:1}\" == \"\
    1\" ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\n \
    \   local i=0\n    local l=$((${#n}-1))\n    while [ $i -lt $l ]; do\n       \
    \ r=$(($r*$r%$p))\n        i=$(($i+1))\n    done\n    echo $r", "  local n=$1\n\
    \  local p=$2\n  local r=1\n  local i=0\n  while [ $i -lt ${#n} ]; do\n    if\
    \ [ \"${n:$i:1}\" -eq 1 ]; then\n      r=$(($r * 2))\n      r=$(($r % $p))\n \
    \   fi\n    i=$(($i + 1))\n  done\n  echo $r", "    local n=$1\n    local p=$2\n\
    \    local r=1\n    local i=0\n    local len=${#n}\n    for ((i=0; i<len; i++));\
    \ do\n        if [[ ${n:$i:1} == \"1\" ]]; then\n            r=$((r*r%p))\n  \
    \      fi\n        r=$((r*r%p))\n    done\n    echo $r", "    local n=$1\n   \
    \ local p=$2\n    local r=1\n    local i=0\n    local l=${#n}\n    while [ $i\
    \ -lt $l ]; do\n        local c=${n:$i:1}\n        if [ $c -eq 1 ]; then\n   \
    \         r=$((r*r%p))\n        fi\n        r=$((r*r%p))\n        i=$((i+1))\n\
    \    done\n    echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"\
    $n\"\n    local i=1\n    while [ \"$i\" -lt \"${#n}\" ]; do\n        r=$(($r*$r%$p))\n\
    \        i=$(($i+1))\n    done\n    echo \"$r\"", "    local n=\"$1\"\n    local\
    \ p=\"$2\"\n    local r=\"1\"\n    local i\n    for ((i=${#n}-1; i>=0; i--));\
    \ do\n        if [[ \"${n:$i:1}\" == \"1\" ]]; then\n            r=$(mulmod \"\
    $r\" \"$r\" \"$p\")\n            r=$(mulmod \"$r\" \"${n:0:$i}\" \"$p\")\n   \
    \     else\n            r=$(mulmod \"$r\" \"$r\" \"$p\")\n        fi\n    done\n\
    \    echo \"$r\"", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\
    \n    local i=0\n    while [ $i -lt ${#n} ]; do\n        if [ \"${n:$i:1}\" -eq\
    \ \"1\" ]; then\n            r=$(($r * $r % $p))\n        fi\n        i=$(($i\
    \ + 1))\n    done\n    echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n   \
    \ local r=\"$n\"\n    local i=0\n    local l=${#n}\n    while [ $i -lt $l ]; do\n\
    \        if [ \"${n:$i:1}\" == \"1\" ]; then\n            r=$(($r * $r % $p))\n\
    \        fi\n        i=$(($i + 1))\n        r=$(($r * $r % $p))\n    done\n  \
    \  echo \"$r\"", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n\
    \    while [[ $i -lt ${#n} ]]; do\n        local c=${n:$i:1}\n        if [[ $c\
    \ -eq 1 ]]; then\n            r=$((r * 2 % p))\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo $r", "    local n=$1\n    local p=$2\n    local result=1\n\
    \    local i=0\n    local len=${#n}\n    while [ $i -lt $len ]; do\n        local\
    \ digit=${n:$i:1}\n        if [ $digit -eq 1 ]; then\n            result=$((result\
    \ * 2 % p))\n        fi\n        i=$((i + 1))\n    done\n    echo $result", " \
    \   local n=\"$1\"\n    local p=\"$2\"\n    local r=\"1\"\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local m=0\n    local b=0\n    local d=0\n    local\
    \ c=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n\
    \    local y=0\n    local z=0\n    local q=0\n    local s=0\n    local a=0\n \
    \   local f=0\n    local g=0\n    local h=0\n    local l=0\n    local e=0\n  \
    \  local o=0\n    local p1=0\n    local p2=0\n    local p3=0\n    local p4=0\n\
    \    local p5=0\n    local p6=0\n    local p7=0\n    local p8=0\n    local p9=0\n\
    \    local p10=0\n    local p11=0\n    local p12=0\n    local p13=0\n    local\
    \ p14=0\n    local p15=0\n    local p16=0\n    local p17=0\n    local p18=0\n\
    \    local p19=0\n    local p20=0\n    local p21=0\n    local p22=0\n    local\
    \ p23=0\n    local p24=0\n    local p25=0\n    local p26=0\n    local p27=0\n\
    \    local p28=0\n    local p29=0\n    local p30=0\n    local p31=0\n    local\
    \ p32=0\n    local p33=0\n    local p34=0\n    local p35=0\n    local p36=0\n\
    \    local p37=0\n    local p38=0\n    local p39=0\n    local p40=0\n    local\
    \ p41=0\n    local p42=0\n    local p43=0\n    local p44=0\n    local p45=0\n\
    \    local p46=0\n    local p47=0\n    local p48=0\n    local p49=0\n    local\
    \ p50=0\n", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n  \
    \  local len=${#n}\n    while [ $i -lt $len ]; do\n        local bit=${n:$i:1}\n\
    \        if [ $bit -eq 1 ]; then\n            r=$((r*2%p))\n        fi\n     \
    \   i=$((i+1))\n    done\n    echo $r", "    local n=$1\n    local p=$2\n    local\
    \ r=1\n    local i=0\n    local len=${#n}\n    while [ $i -lt $len ]; do\n   \
    \     local c=${n:$i:1}\n        if [ $c -eq 1 ]; then\n            r=$((r*2%p))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $r", "  local n=$1\n  local\
    \ p=$2\n  local r=1\n  local i=0\n  local len=${#n}\n  for ((i=0; i<len; i++));\
    \ do\n    local bit=${n:$i:1}\n    if [[ $bit == 1 ]]; then\n      r=$((r*2%p))\n\
    \    fi\n    r=$((r*r%p))\n  done\n  echo $r", "    local n=$1\n    local p=$2\n\
    \    local r=1\n    while [ \"$n\" -gt 0 ]; do\n        if [ \"$((n&1))\" -eq\
    \ 1 ]; then\n            r=$((r*2%p))\n        fi\n        n=$((n>>1))\n    done\n\
    \    echo \"$r\"", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\
    \n    local i=1\n    while [ \"$i\" -lt \"${#n}\" ]; do\n        r=$(($r*$r%$p))\n\
    \        i=$(($i+1))\n    done\n    echo \"$r\"", "  local n=$1\n  local p=$2\n\
    \  local r=1\n  local i=0\n  local l=$(echo \"$n\" | wc -c)\n  while [ $i -lt\
    \ $l ]; do\n    local c=$(echo \"$n\" | cut -c $((i+1)))\n    if [ \"$c\" == \"\
    1\" ]; then\n      r=$((r*2%p))\n    fi\n    i=$((i+1))\n  done\n  echo \"$r\"",
  "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local len=${#n}\n\
    \    local n_i\n    local n_i_pow\n    local n_i_pow_mod\n    for ((i=0; i<len;\
    \ i++)); do\n        n_i=${n:$i:1}\n        if [[ $n_i -eq 1 ]]; then\n      \
    \      n_i_pow=$((2**i))\n            n_i_pow_mod=$(($n_i_pow % $p))\n       \
    \     r=$(($r * $n_i_pow_mod))\n            r=$(($r % $p))\n        fi\n    done\n\
    \    echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\n \
    \   local i=1\n    while [ \"$i\" -lt \"${#n}\" ]; do\n        r=$(($r*$r % $p))\n\
    \        i=$(($i+1))\n    done\n    echo \"$r\"", "    local n=\"$1\"\n    local\
    \ p=\"$2\"\n    local r=\"$n\"\n    local i=1\n    local l=\"${#n}\"\n    while\
    \ [ $i -lt $l ]; do\n        r=$(($r * $r % $p))\n        i=$(($i + 1))\n    done\n\
    \    echo \"$r\"", "  local n=$1\n  local p=$2\n  local result=1\n  local i=0\n\
    \  local len=${#n}\n  while [ $i -lt $len ]; do\n    local digit=${n:$i:1}\n \
    \   if [ $digit -eq 1 ]; then\n      result=$((result * 2 % p))\n    fi\n    i=$((i\
    \ + 1))\n  done\n  echo $result", "  local n=\"$1\"\n  local p=\"$2\"\n  local\
    \ result=\"1\"\n  local i\n  for ((i=0; i<${#n}; i++)); do\n    if [[ \"${n:$i:1}\"\
    \ == \"1\" ]]; then\n      result=$(($result * $result % $p))\n    fi\n    result=$(($result\
    \ * $result % $p))\n  done\n  echo \"$result\"", "    local n=\"$1\"\n    local\
    \ p=\"$2\"\n    local r=\"1\"\n    local i\n    for ((i=${#n}-1; i>=0; i--));\
    \ do\n        if [ \"${n:$i:1}\" == \"1\" ]; then\n            r=$(mul \"$r\"\
    \ \"$r\" \"$p\")\n        fi\n        r=$(mul \"$r\" \"$r\" \"$p\")\n    done\n\
    \    echo \"$r\"", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"1\"\n\
    \    local i\n    for ((i=${#n}-1; i>=0; i--)); do\n        if [[ \"${n:$i:1}\"\
    \ == \"1\" ]]; then\n            r=$(mul \"$r\" \"$r\" \"$p\")\n        fi\n \
    \       r=$(mul \"$r\" \"$r\" \"$p\")\n    done\n    echo \"$r\"", "    local\
    \ n=\"$1\"\n    local p=\"$2\"\n    local r=\"1\"\n    local i\n    for ((i=0;\
    \ i<${#n}; i++)); do\n        if [[ \"${n:$i:1}\" == \"1\" ]]; then\n        \
    \    r=$(mul \"$r\" \"$r\" \"$p\")\n        fi\n        r=$(mul \"$r\" \"$r\"\
    \ \"$p\")\n    done\n    echo \"$r\"", "    local n=$1\n    local p=$2\n    local\
    \ r=1\n    local i=0\n    local l=${#n}\n    local b=0\n    local t=0\n    local\
    \ x=0\n    local y=0\n    local z=0\n    local q=0\n    local s=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local a=0\n    local b=0\n    local c=0\n \
    \   local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n  \
    \  local k=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n   \
    \ local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local\
    \ v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n\
    \    local B=0\n    local C=0\n    local D=0\n    local E=0\n    local F=0\n \
    \   local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n  \
    \  local L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n   \
    \ local Q=0\n    local R=0\n    local S=0\n    local T=0\n    local U=0\n    local\
    \ V=0\n    local W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local aa=0\n\
    \    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n\
    \    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n\
    \    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n\
    \    local aq=0\n    local ar=0\n    local as=0\n    local at=", "    local n=$1\n\
    \    local p=$2\n    local r=$n\n    local i=1\n    while [ $i -lt $p ]; do\n\
    \        r=$(($r*$n))\n        r=$(($r%$p))\n        i=$(($i+1))\n    done\n \
    \   echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local x=\"1\"\n   \
    \ local i\n    for ((i=0; i<${#n}; i++)); do\n        if [[ \"${n:$i:1}\" == \"\
    1\" ]]; then\n            x=$(mul \"$x\" \"$x\" \"$p\")\n        fi\n        x=$(mul\
    \ \"$x\" \"$x\" \"$p\")\n    done\n    echo \"$x\"", "    local n=$1\n    local\
    \ p=$2\n    local r=1\n    local i=0\n    local l=$(echo $n | wc -c)\n    while\
    \ [ $i -lt $l ]; do\n        local c=$(echo $n | cut -c $((i+1)))\n        if\
    \ [ $c -eq 1 ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i\n    for ((i=0; i<${#n}; i++)); do\n        if [[ ${n:$i:1} == \"1\" ]]; then\n\
    \            r=$((r*r%p))\n        fi\n        r=$((r*r%p))\n    done\n    echo\
    \ $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\n    local\
    \ i=1\n    while [ \"$i\" -lt \"${#n}\" ]; do\n        r=$(($r*$r%$p))\n     \
    \   i=$(($i+1))\n    done\n    echo \"$r\"", "    local n=$1\n    local p=$2\n\
    \    local r=1\n    local i=0\n    local n_len=${#n}\n    local n_i\n    for ((i=0;\
    \ i<n_len; i++)); do\n        n_i=${n:i:1}\n        if [[ $n_i == \"1\" ]]; then\n\
    \            r=$((r*r%p))\n        fi\n        r=$((r*r%p))\n    done\n    echo\
    \ $r", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local\
    \ n_len=${#n}\n    local n_i=0\n    local n_i_val=0\n    local n_i_val_pow=0\n\
    \    local n_i_val_pow_mod=0\n    local n_i_val_pow_mod_r=0\n    local n_i_val_pow_mod_r_mod=0\n\
    \    local n_i_val_pow_mod_r_mod_r=0\n    local n_i_val_pow_mod_r_mod_r_mod=0\n\
    \    local n_i_val_pow_mod_r_mod_r_mod_r=0\n    local n_i_val_pow_mod_r_mod_r_mod_r_mod=0\n\
    \    local n_i_val_pow_mod_r_mod_r_mod_r_mod_r=0\n    local n_i_val_pow_mod_r_mod_r_mod_r_mod_r_mod=0\n\
    \    local n_i_val_pow_mod_r_mod_r_mod_r_mod_r_mod_r=0\n    local n_i_val_pow_mod_r_mod_r_mod_r_mod_r_mod_r_mod=0\n\
    \    local n_i_val_pow_mod_r_mod_r_mod_r_mod_r_mod_r_mod_r=0\n    local n_i_val_pow_mod_r_mod_r_mod_r_mod_r_mod_r_mod_r_mod=0\n\
    \    local n_i_val_pow_mod_r_mod_r_mod_r_mod_r_mod_r_mod_r_mod_r=0\n    local\
    \ n_i_val_pow_mod_r_mod_r_mod_r_mod_r_mod_r_mod_r_mod_r_mod=0\n    local n_i_val_pow",
  "    local n=$1\n    local p=$2\n    local res=1\n    local i\n    for ((i=${#n}-1;\
    \ i>=0; i--)); do\n        res=$((res*res%p))\n        if [[ ${n:$i:1} -eq 1 ]];\
    \ then\n            res=$((res*2%p))\n        fi\n    done\n    echo $res", " \
    \   local n=$1\n    local p=$2\n    local result=1\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local nlen=${#n}\n    local\
    \ plen=${#p}\n    local nlen_minus_1=$((nlen-1))\n    local plen_minus_1=$((plen-1))\n\
    \    local n_i=0\n    local p_j=0\n    local p_k=0\n    local p_l=0\n    local\
    \ p_m=0\n    local p_j_times_2=0\n    local p_k_times_2=0\n    local p_l_times_2=0\n\
    \    local p_m_times_2=0\n    local p_j_times_2_plus_1=0\n    local p_k_times_2_plus_1=0\n\
    \    local p_l_times_2_plus_1=0\n    local p_m_times_2_plus_1=0\n    local p_j_times_2_plus_1_times_2=0\n\
    \    local p_k_times_2_plus_1_times_2=0\n    local p_l_times_2_plus_1_times_2=0\n\
    \    local p_m_times_2_plus_1_times_2=0\n    local p_j_times_2_plus_1_times_2_plus_1=0\n\
    \    local p_k_times_2_plus_1_times_2_plus_1=0\n    local p_l_times_2_plus_1_times_2_plus_1=0\n\
    \    local p_m_times_2_plus_1_times_2_plus_1=0\n    local p_j_times_2_plus_1_times_2_plus_1_times_2=0\n\
    \    local p_k_times_2_plus_1_times_2_plus_1_times_2=0\n    local p_l_times_2_plus_1_times_2_plus_1_times_2=0",
  "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local n_len=${#n}\n\
    \    while [ $i -lt $n_len ]; do\n        local digit=${n:$i:1}\n        if [\
    \ $digit -eq 1 ]; then\n            r=$(($r * 2 % $p))\n        fi\n        i=$(($i\
    \ + 1))\n    done\n    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n\
    \    local i=0\n    local len=${#n}\n    while [ $i -lt $len ]; do\n        local\
    \ digit=${n:$i:1}\n        if [ $digit -eq 1 ]; then\n            r=$((r * 2 %\
    \ p))\n        fi\n        i=$((i + 1))\n    done\n    echo $r", "    local n=$1\n\
    \    local p=$2\n    local r=1\n    local i=0\n    local l=${#n}\n    while [\
    \ $i -lt $l ]; do\n        if [ \"${n:$i:1}\" == \"1\" ]; then\n            r=$((r*2%p))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $r", "    local n=$1\n   \
    \ local p=$2\n    local r=1\n    local i=0\n    local len=${#n}\n    while [ $i\
    \ -lt $len ]; do\n        local c=${n:$i:1}\n        if [ $c -eq 1 ]; then\n \
    \           r=$((r*2%p))\n        fi\n        i=$((i+1))\n    done\n    echo $r",
  "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local n_len=${#n}\n\
    \    local n_i\n    local n_i_int\n    local n_i_int_pow\n    local n_i_int_pow_mod\n\
    \    local r_mod\n    for ((i=0; i<n_len; i++)); do\n        n_i=${n:$i:1}\n \
    \       n_i_int=$(echo \"ibase=2; $n_i\" | bc)\n        n_i_int_pow=$(echo \"\
    ibase=10; $r * $r\" | bc)\n        n_i_int_pow_mod=$(echo \"ibase=10; $n_i_int_pow\
    \ % $p\" | bc)\n        r=$n_i_int_pow_mod\n        if [[ $n_i_int -eq 1 ]]; then\n\
    \            r_mod=$(echo \"ibase=10; $r * 2\" | bc)\n            r=$(echo \"\
    ibase=10; $r_mod % $p\" | bc)\n        fi\n    done\n    echo $r", "    local\
    \ n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\n    local i=1\n    while [\
    \ $i -lt ${#n} ]; do\n        r=$(mul \"$r\" \"$r\" \"$p\")\n        i=$((i+1))\n\
    \    done\n    echo \"$r\"", "    local n=$1\n    local p=$2\n    local r=1\n\
    \    local i=0\n    local l=${#n}\n    while [ $i -lt $l ]; do\n        if [ \"\
    ${n:$i:1}\" -eq 1 ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local result=\"\
    1\"\n    local i\n    for ((i=0; i<${#n}; i++)); do\n        if [[ \"${n:$i:1}\"\
    \ == \"1\" ]]; then\n            result=$(mul \"$result\" \"$result\")\n     \
    \       result=$(mod \"$result\" \"$p\")\n        fi\n        if [[ \"$i\" -lt\
    \ \"$(( ${#n} - 1 ))\" ]]; then\n            result=$(mul \"$result\" \"$result\"\
    )\n            result=$(mod \"$result\" \"$p\")\n        fi\n    done\n    echo\
    \ \"$result\"", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n\
    \    for (( i=0; i<${#n}; i++ )); do\n        if [[ ${n:$i:1} -eq 1 ]]; then\n\
    \            r=$(( (r*r) % p ))\n        fi\n        r=$(( (r*r) % p ))\n    done\n\
    \    echo $r", "    local n=$1\n    local p=$2\n    local res=1\n    local i=0\n\
    \    local len=${#n}\n    for ((i=0; i<len; i++)); do\n        if [[ \"${n:$i:1}\"\
    \ == \"1\" ]]; then\n            res=$((res*res%p))\n        fi\n        res=$((res*res%p))\n\
    \    done\n    echo $res", "    local n=\"$1\"\n    local p=\"$2\"\n    local\
    \ r=\"1\"\n    local i\n    for ((i=${#n}-1; i>=0; i--)); do\n        r=$(($r*$r%$p))\n\
    \        if [[ ${n:$i:1} == \"1\" ]]; then\n            r=$(($r*2%$p))\n     \
    \   fi\n    done\n    echo \"$r\"", "    local n=$1\n    local p=$2\n    local\
    \ r=1\n    local i=0\n    while [ $i -lt $n ]; do\n        r=$((r*2))\n      \
    \  r=$((r%p))\n        i=$((i+1))\n    done\n    echo $r", "    local n=$1\n \
    \   local p=$2\n    local r=1\n    local i=0\n    local len=${#n}\n    while [\
    \ $i -lt $len ]; do\n        local c=${n:$i:1}\n        if [ $c -eq 1 ]; then\n\
    \            r=$((r*2%p))\n        fi\n        i=$((i+1))\n    done\n    echo\
    \ $r", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    while\
    \ [ $i -lt $n ]; do\n        r=$((r*2))\n        r=$((r%p))\n        i=$((i+1))\n\
    \    done\n    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i=0\n    local len=${#n}\n    while [ $i -lt $len ]; do\n        local c=${n:$i:1}\n\
    \        if [ $c -eq 1 ]; then\n            r=$((r*2%p))\n        fi\n       \
    \ i=$((i+1))\n    done\n    echo $r", "    local n=$1\n    local p=$2\n    local\
    \ r=1\n    local i\n    for ((i=0; i<${#n}; i++)); do\n        if [[ ${n:$i:1}\
    \ == 1 ]]; then\n            r=$((r*r%p))\n        fi\n        r=$((r*r%p))\n\
    \    done\n    echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local result=\"\
    1\"\n    local i\n    for ((i=0; i<${#n}; i++)); do\n        if [ \"${n:$i:1}\"\
    \ == \"1\" ]; then\n            result=$(mul \"$result\" \"$result\")\n      \
    \      result=$(mul \"$result\" \"$p\")\n        else\n            result=$(mul\
    \ \"$result\" \"$result\")\n        fi\n    done\n    echo \"$result\"", "   \
    \ local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local len=${#n}\n\
    \    while [ $i -lt $len ]; do\n        local d=${n:$i:1}\n        if [ $d -eq\
    \ 1 ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n\
    \    local l=${#n}\n    while [ $i -lt $l ]; do\n        local c=${n:$i:1}\n \
    \       if [ $c -eq 1 ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i=0\n    local l=${#n}\n    while [ $i -lt $l ]; do\n        if [ \"${n:$i:1}\"\
    \ == \"1\" ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $r", "    local n=$1\n    local p=$2\n    local result=1\n\
    \    local i=0\n    local len=${#n}\n    local n_i\n    local n_i_int\n    for\
    \ ((i=0; i<len; i++)); do\n        n_i=${n:$i:1}\n        n_i_int=$(echo \"$n_i\"\
    \ | bc)\n        if [[ $n_i_int -eq 1 ]]; then\n            result=$(echo \"$result\
    \ * 2\" | bc)\n            result=$(echo \"$result % $p\" | bc)\n        fi\n\
    \    done\n    echo \"$result\"", "    local n=$1\n    local p=$2\n    local r=1\n\
    \    local i=0\n    local n_len=${#n}\n    local n_len_minus_one=$((n_len - 1))\n\
    \    local n_i\n    local n_i_int\n    local n_i_int_minus_one\n    local n_i_int_minus_one_pow_two\n\
    \    local n_i_int_minus_one_pow_two_mod_p\n    local n_i_int_minus_one_pow_two_mod_p_pow_two\n\
    \    local n_i_int_minus_one_pow_two_mod_p_pow_two_mod_p\n    local n_i_int_minus_one_pow_two_mod_p_pow_two_mod_p_pow_two\n\
    \    local n_i_int_minus_one_pow_two_mod_p_pow_two_mod_p_pow_two_mod_p\n    local\
    \ n_i_int_minus_one_pow_two_mod_p_pow_two_mod_p_pow_two_mod_p_pow_two\n    local\
    \ n_i_int_minus_one_pow_two_mod_p_pow_two_mod_p_pow_two_mod_p_pow_two_mod_p\n\
    \    local n_i_int_minus_one_pow_two_mod_p_pow_two_mod_p_pow_two_mod_p_pow_two_mod_p_pow_two\n\
    \    local n_i_int_minus_one_pow_two_mod_p_pow_two_mod_p_pow_two_mod_p_pow_two_mod_p_pow_two_mod_p\n\
    \    local n_i_int_minus_one_pow_two_mod_p_pow_two_mod_p_pow_two_mod_p_pow_two_mod_p_pow_two_mod_p_pow_two\n",
  "  local n=\"$1\"\n  local p=\"$2\"\n  local result=\"1\"\n  local i\n  for ((i=0;\
    \ i<${#n}; i++)); do\n    if [[ \"${n:$i:1}\" == \"1\" ]]; then\n      result=$(($result\
    \ * $result % $p))\n    fi\n    result=$(($result * $result % $p))\n  done\n \
    \ echo $result", "    local n=$1\n    local p=$2\n    local a=1\n    local b=2\n\
    \    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n \
    \   local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n  \
    \  local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n   \
    \ local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local\
    \ w=0\n    local x=0\n    local y=0\n    local z=0\n    local A=0\n    local B=0\n\
    \    local C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n \
    \   local H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n  \
    \  local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n   \
    \ local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n    local\
    \ W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local _=0\n    local aa=0\n\
    \    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n\
    \    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n\
    \    local al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n\
    \    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n\
    \    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n\
    \    local aA=0\n    local aB=0\n    local aC=", "    local n=$1\n    local p=$2\n\
    \    local r=1\n    local i=0\n    local len=${#n}\n    while [ $i -lt $len ];\
    \ do\n        local c=${n:$i:1}\n        if [ $c -eq 1 ]; then\n            r=$((r*2%p))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $r", "    local n=$1\n   \
    \ local p=$2\n    local r=1\n    local i=0\n    local m=${#n}\n    while [ $i\
    \ -lt $m ]; do\n        local d=${n:$i:1}\n        if [ $d -eq 1 ]; then\n   \
    \         r=$(((r * 2) % p))\n        fi\n        i=$((i + 1))\n    done\n   \
    \ echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local i\n    for\
    \ ((i=${#n}-1; i>=0; i--)); do\n        r=$((r*r%p))\n        if [[ ${n:$i:1}\
    \ == 1 ]]; then\n            r=$((r*2%p))\n        fi\n    done\n    echo $r",
  "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\n    local i=0\n   \
    \ local j=0\n    local k=0\n    local l=0\n    local m=0\n    local t=0\n    local\
    \ u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n\
    \    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n \
    \   local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local l=0\n    local m=0\n    local t=0\n    local u=0\n   \
    \ local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n    local\
    \ a=0\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n\
    \    local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n \
    \   local l=0\n    local m=0\n    local t=0\n    local u=0\n    local v=0\n  \
    \  local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n   \
    \ local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n    local\
    \ g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n\
    \    local m=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n  \
    \  local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n   \
    \ local h=0\n    local i=0\n   ", "    local n=$1\n    local p=$2\n    local r=1\n\
    \    local i=0\n    local len=${#n}\n    while [ $i -lt $len ]; do\n        local\
    \ c=${n:$i:1}\n        if [ $c -eq 1 ]; then\n            r=$((r*2%p))\n     \
    \   fi\n        i=$((i+1))\n    done\n    echo $r", "    local n=$1\n    local\
    \ p=$2\n    local r=1\n    while [ \"$n\" -gt 0 ]; do\n        if [ \"$((n & 1))\"\
    \ -eq 1 ]; then\n            r=$((r * 2 % p))\n        fi\n        n=$((n >> 1))\n\
    \    done\n    echo \"$r\"", "    local n=$1\n    local p=$2\n    local res=1\n\
    \    local i=0\n    local len=${#n}\n    while [ $i -lt $len ]; do\n        local\
    \ bit=${n:$i:1}\n        if [ $bit -eq 1 ]; then\n            res=$((res * res\
    \ % p))\n            res=$((res * 2 % p))\n        else\n            res=$((res\
    \ * res % p))\n        fi\n        i=$((i + 1))\n    done\n    echo $res", " \
    \   local n=\"$1\"\n    local p=\"$2\"\n    local r=\"1\"\n    local i\n    for\
    \ ((i=0; i<${#n}; i++)); do\n        if [ \"${n:$i:1}\" == \"1\" ]; then\n   \
    \         r=$(($r * $r % $p))\n        fi\n        r=$(($r * $r % $p))\n    done\n\
    \    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n\
    \    for ((i=0; i<${#n}; i++)); do\n        if [[ ${n:$i:1} == \"1\" ]]; then\n\
    \            r=$((r*r%p))\n        fi\n        r=$((r*r%p))\n    done\n    echo\
    \ $r", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local\
    \ l=${#n}\n    while [ $i -lt $l ]; do\n        local d=${n:$i:1}\n        if\
    \ [ $d -eq 1 ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i=0\n    while [ $i -lt ${#n} ]; do\n        local c=${n:$i:1}\n        if [\
    \ $c -eq 1 ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"\
    $n\"\n    local i=1\n    while [ $i -lt $n ]; do\n        r=$(($r * 2))\n    \
    \    r=$(($r % $p))\n        i=$(($i + 1))\n    done\n    echo \"$r\"", "    local\
    \ n=\"$1\"\n    local p=\"$2\"\n    local r=1\n    while [ \"$n\" -gt 0 ]; do\n\
    \        if [ \"$((n & 1))\" -eq 1 ]; then\n            r=$(((r * 2) % p))\n \
    \       fi\n        n=$((n >> 1))\n    done\n    echo \"$r\"", "    local n=$1\n\
    \    local p=$2\n    local r=1\n    local i=0\n    local l=${#n}\n    while [\
    \ $i -lt $l ]; do\n        local d=${n:$i:1}\n        if [ $d -eq 1 ]; then\n\
    \            r=$((r*2%p))\n        fi\n        i=$((i+1))\n    done\n    echo\
    \ $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"1\"\n    local i\n\
    \    for ((i=${#n}-1; i>=0; i--)); do\n        r=$(($r*$r%$p))\n        if [[\
    \ \"${n:$i:1}\" == \"1\" ]]; then\n            r=$(($r*2%$p))\n        fi\n  \
    \  done\n    echo \"$r\"", "    local n=$1\n    local p=$2\n    local result=1\n\
    \    local i=0\n    local n_len=${#n}\n    local n_len_minus_one=$((n_len - 1))\n\
    \    local n_len_minus_one_minus_i\n    local n_i\n    local n_i_minus_one\n \
    \   local n_i_minus_one_minus_j\n    local n_i_minus_one_minus_j_plus_one\n  \
    \  local n_i_minus_one_minus_j_plus_one_times_2\n    local n_i_minus_one_minus_j_plus_one_times_2_mod_p\n\
    \    local n_i_minus_one_minus_j_plus_one_times_2_mod_p_plus_n_i_minus_one_minus_j\n\
    \    local n_i_minus_one_minus_j_plus_one_times_2_mod_p_plus_n_i_minus_one_minus_j_mod_p\n\
    \    local n_i_minus_one_minus_j_plus_one_times_2_mod_p_plus_n_i_minus_one_minus_j_mod_p_times_2\n\
    \    local n_i_minus_one_minus_j_plus_one_times_2_mod_p_plus_n_i_minus_one_minus_j_mod_p_times_2_mod_p\n\
    \    local n_i_minus_one_minus_j_plus_one_times_2_mod_p_plus_n_i_minus_one_minus_j_mod_p_times_2_mod_p_plus_n_i_minus_one_minus_j_plus_one\n\
    \    local n_i_minus_one_minus_j_plus_one_times_2_mod_p_plus_n_i_minus_one_minus_j_mod_p_times_2_mod_p_plus_n_i_minus_one_minus_j_plus_one_mod_p\n\
    \    local n_i_minus_one_minus_j_plus_one_times_", "    local n=$1\n    local\
    \ p=$2\n    local r=1\n    local i=0\n    while [ $i -lt $n ]; do\n        r=$((r*2))\n\
    \        r=$((r%p))\n        i=$((i+1))\n    done\n    echo $r", "    local n=$1\n\
    \    local p=$2\n    local r=1\n    local i\n    for ((i=0; i<${#n}; i++)); do\n\
    \        r=$((r*r%p))\n        if [[ ${n:$i:1} -eq 1 ]]; then\n            r=$((r*2%p))\n\
    \        fi\n    done\n    echo $r", "    local n=$1\n    local p=$2\n    local\
    \ r=1\n    local i=0\n    local len=${#n}\n    for ((i=0; i<len; i++)); do\n \
    \       if [[ ${n:$i:1} -eq 1 ]]; then\n            r=$((r*r%p))\n        fi\n\
    \        r=$((r*r%p))\n    done\n    echo $r", "    local n=\"$1\"\n    local\
    \ p=\"$2\"\n    local r=\"$n\"\n    local i=1\n    while [ $i -lt \"${#n}\" ];\
    \ do\n        r=$(($r * $r % $p))\n        i=$(($i + 1))\n    done\n    echo \"\
    $r\"", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"1\"\n    local i\n\
    \    for ((i=${#n}-1; i>=0; i--)); do\n        r=$(($r*$r%$p))\n        if [[\
    \ \"${n:$i:1}\" == \"1\" ]]; then\n            r=$(($r*2%$p))\n        fi\n  \
    \  done\n    echo \"$r\"", "    local n=$1\n    local p=$2\n    local r=1\n  \
    \  local i=0\n    local l=${#n}\n    while [ $i -lt $l ]; do\n        local c=${n:$i:1}\n\
    \        if [ $c -eq 1 ]; then\n            r=$((r*2%p))\n        fi\n       \
    \ i=$((i+1))\n    done\n    echo $r", "    local n=$1\n    local p=$2\n    local\
    \ r=1\n    local i=0\n    while [ $i -lt ${#n} ]; do\n        local c=${n:$i:1}\n\
    \        if [ $c -eq 1 ]; then\n            r=$((r*2%p))\n        fi\n       \
    \ i=$((i+1))\n    done\n    echo $r", "    local n=$1\n    local p=$2\n    local\
    \ r=1\n    local i=0\n    local len=${#n}\n    while [ $i -lt $len ]; do\n   \
    \     local c=${n:$i:1}\n        if [ $c -eq 1 ]; then\n            r=$((r*2%p))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $r", "    local n=$1\n   \
    \ local p=$2\n    local result=1\n    local i=0\n    local len=${#n}\n    for\
    \ ((i=0; i<len; i++)); do\n        local digit=${n:$i:1}\n        if [[ $digit\
    \ == \"1\" ]]; then\n            result=$((result * result % p))\n        fi\n\
    \        result=$((result * result % p))\n    done\n    echo $result", "    local\
    \ n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\n    local i=0\n    local l=\"\
    ${#n}\"\n    while [ $i -lt $l ]; do\n        local b=\"${n:$i:1}\"\n        if\
    \ [ \"$b\" = \"1\" ]; then\n            r=$(($r * 2))\n            r=$(($r % $p))\n\
    \        fi\n        i=$(($i + 1))\n    done\n    echo \"$r\"", "    local n=$1\n\
    \    local p=$2\n    local r=1\n    while [ \"$n\" -gt 0 ]; do\n        if [ \"\
    $(($n & 1))\" -eq 1 ]; then\n            r=$(($r * $r % $p))\n        fi\n   \
    \     n=$(($n >> 1))\n    done\n    echo $r", "    local n=\"$1\"\n    local p=\"\
    $2\"\n    local r=\"1\"\n    while [ \"$n\" -gt \"0\" ]; do\n        if [ \"$(($n\
    \ % 2))\" -eq \"1\" ]; then\n            r=$(($r * $r % $p))\n        fi\n   \
    \     n=$(($n / 2))\n    done\n    echo \"$r\"", "    local n=\"$1\"\n    local\
    \ p=\"$2\"\n    local result=\"1\"\n    local i\n    for ((i=${#n}-1; i>=0; i--));\
    \ do\n        if [[ \"${n:$i:1}\" == \"1\" ]]; then\n            result=$(mul\
    \ \"$result\" \"$result\")\n            result=$(mul \"$result\" \"$p\")\n   \
    \     else\n            result=$(mul \"$result\" \"$result\")\n        fi\n  \
    \  done\n    echo \"$result\"", "    local n=$1\n    local p=$2\n    if [ $n -eq\
    \ 0 ]; then\n        echo 1\n    else\n        local r=$(modp \"$((n/2))\" \"\
    $p\")\n        local r2=$((r*r))\n        if [ $((n%2)) -eq 0 ]; then\n      \
    \      echo $((r2%p))\n        else\n            echo $(((r2*2)%p))\n        fi\n\
    \    fi", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local\
    \ len=${#n}\n    local b\n    local pow2\n    while [ $i -lt $len ]; do\n    \
    \    b=${n:$i:1}\n        if [ $b -eq 1 ]; then\n            pow2=$((2**(len-i-1)))\n\
    \            r=$(((r*pow2)%p))\n        fi\n        i=$((i+1))\n    done\n   \
    \ echo $r", "    local n=$1\n    local p=$2\n    local r=$(($n % $p))\n    if\
    \ [ $r -lt 0 ]; then\n        r=$((r + $p))\n    fi\n    echo $r", "    local\
    \ n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\n    local i=\"0\"\n    while\
    \ [ \"$i\" -lt \"${#n}\" ]; do\n        local c=\"${n:$i:1}\"\n        if [ \"\
    $c\" = \"1\" ]; then\n            r=\"$(($r * 2))\"\n            r=\"$(($r % $p))\"\
    \n        fi\n        i=\"$(($i + 1))\"\n    done\n    echo \"$r\"", "    local\
    \ n=$1\n    local p=$2\n    local res=1\n    local i=0\n    while [ $i -lt $n\
    \ ]; do\n        res=$((res*2))\n        res=$((res%p))\n        i=$((i+1))\n\
    \    done\n    echo $res", "    local n=$1\n    local p=$2\n    local res=1\n\
    \    local i\n    for ((i=0; i<${#n}; i++)); do\n        if [[ ${n:$i:1} == 1\
    \ ]]; then\n            res=$((res*2%p))\n        fi\n        res=$((res*res%p))\n\
    \    done\n    echo $res", "    local n=$1\n    local p=$2\n    local r=1\n  \
    \  local i=0\n    local n_len=${#n}\n    local n_i\n    local n_i_int\n    local\
    \ r_int\n    local r_int_new\n    local r_new\n    local r_len\n    local r_len_new\n\
    \    local r_len_diff\n    local r_len_diff_abs\n    local r_len_diff_abs_str\n\
    \    local r_len_diff_abs_str_len\n    local r_len_diff_abs_str_len_str\n    local\
    \ r_len_diff_abs_str_len_str_len\n    local r_len_diff_abs_str_len_str_len_str\n\
    \    local r_len_diff_abs_str_len_str_len_str_len\n    local r_len_diff_abs_str_len_str_len_str_len_str\n\
    \    local r_len_diff_abs_str_len_str_len_str_len_str_len\n    local r_len_diff_abs_str_len_str_len_str_len_str_len_str\n\
    \    local r_len_diff_abs_str_len_str_len_str_len_str_len_str_len\n    local r_len_diff_abs_str_len_str_len_str_len_str_len_str_len_str\n\
    \    local r_len_diff_abs_str_len_str_len_str_len_str_len_str_len_str_len\n  \
    \  local r_len_diff_abs_str_len_str_len_str_len_str_len_str_len_str_len_str\n\
    \    local r_len_diff_abs_str_len_str_len_str_len_str_len_str_len_str_len_str_len\n\
    \    local r_len_diff_abs_str_len_str_len_str_len_str_len_str_len_str_len_str_len_str\n\
    \    local r_len_diff_abs_str_len_str_len_str_", "    local n=$1\n    local p=$2\n\
    \    local r=1\n    local i=0\n    local l=${#n}\n    while [ $i -lt $l ]; do\n\
    \        local c=${n:$i:1}\n        if [ $c -eq 1 ]; then\n            r=$((r*2%p))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $r", "    local n=\"$1\"\n\
    \    local p=\"$2\"\n    local r=\"$n\"\n    local i=\"1\"\n    while [ \"$i\"\
    \ -lt \"${#n}\" ]; do\n        r=$(($r * $r % $p))\n        i=$(($i + 1))\n  \
    \  done\n    echo \"$r\"", "    local n=$1\n    local p=$2\n    local result=1\n\
    \    while [ \"$n\" -gt 0 ]; do\n        if [ \"$((n & 1))\" -eq 1 ]; then\n \
    \           result=$((result * result % p))\n        fi\n        n=$((n >> 1))\n\
    \    done\n    echo \"$result\"", "    local n=$1\n    local p=$2\n    local r=1\n\
    \    local i=0\n    local nlen=${#n}\n    while [ $i -lt $nlen ]; do\n       \
    \ local digit=${n:$i:1}\n        if [ $digit -eq 1 ]; then\n            r=$((r*2%p))\n\
    \        fi\n        i=$((i+1))\n    done\n    echo $r", "    local n=$1\n   \
    \ local p=$2\n    local r=1\n    local i=0\n    local l=${#n}\n    while [ $i\
    \ -lt $l ]; do\n        local d=${n:$i:1}\n        if [ $d -eq 1 ]; then\n   \
    \         r=$(((r*r)%p))\n        fi\n        i=$((i+1))\n    done\n    echo $r",
  "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"1\"\n    local i\n    for\
    \ ((i=${#n}-1; i>=0; i--)); do\n        r=$(mul \"$r\" \"$r\" \"$p\")\n      \
    \  if [[ \"${n:$i:1}\" == \"1\" ]]; then\n            r=$(mul \"$r\" \"2\" \"\
    $p\")\n        fi\n    done\n    echo \"$r\"", "    local n=$1\n    local p=$2\n\
    \    local r=1\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n \
    \   local m=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n   \
    \ local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local\
    \ h=0\n    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n\
    \    local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n \
    \   local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n \
    \   local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n\
    \    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n\
    \    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n\
    \    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n\
    \    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n\
    \    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n\
    \    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n\
    \    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp",
  "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local len=${#n}\n\
    \    while [ $i -lt $len ]; do\n        local d=${n:$i:1}\n        if [ $d -eq\
    \ 1 ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\n \
    \   local i=1\n    while [ $i -lt \"${#n}\" ]; do\n        r=$(($r * $r % $p))\n\
    \        i=$(($i + 1))\n    done\n    echo $r", "    local n=$1\n    local p=$2\n\
    \    local r=1\n    local i=0\n    local n_len=${#n}\n    local n_i\n    for ((i=0;\
    \ i<n_len; i++)); do\n        n_i=${n:$i:1}\n        if [[ $n_i == 1 ]]; then\n\
    \            r=$((r*r%p))\n        fi\n        r=$((r*r%p))\n    done\n    echo\
    \ $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\n    local\
    \ i=1\n    local l=\"${#n}\"\n    while [ $i -lt $l ]; do\n        r=$(($r*$r\
    \ % $p))\n        i=$(($i+1))\n    done\n    echo \"$r\"", "    local n=\"$1\"\
    \n    local p=\"$2\"\n    local r=\"1\"\n    local i\n    for ((i=0; i<${#n};\
    \ i++)); do\n        if [[ \"${n:$i:1}\" == \"1\" ]]; then\n            r=$(($r\
    \ * $r % $p))\n        fi\n        r=$(($r * $r % $p))\n    done\n    echo \"\
    $r\"", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local\
    \ n_len=${#n}\n    local n_len_minus_1=$((n_len - 1))\n    local n_i\n    local\
    \ n_i_int\n    local n_i_int_minus_1\n    local n_i_int_minus_1_times_2\n    local\
    \ n_i_int_minus_1_times_2_mod_p\n    local n_i_int_minus_1_times_2_mod_p_times_r\n\
    \    local n_i_int_minus_1_times_2_mod_p_times_r_mod_p\n    while [ $i -lt $n_len\
    \ ]; do\n        n_i=${n:$i:1}\n        n_i_int=$((n_i))\n        if [ $n_i_int\
    \ -eq 1 ]; then\n            if [ $i -eq $n_len_minus_1 ]; then\n            \
    \    r=$((r * 2))\n            else\n                n_i_int_minus_1=$((n_i_int\
    \ * 2))\n                n_i_int_minus_1_times_2=$((n_i_int_minus_1 * 2))\n  \
    \              n_i_int_minus_1_times_2_mod_p=$((n_i_int_minus_1_times_2 % p))\n\
    \                n_i_int_minus_1_times_2_mod_p_times_r=$((n_i_int_minus_1_times_2_mod_p\
    \ * r))\n                n_i_int_minus_1_times_2_mod_p_times_r_mod_p=$((n_i_int_minus_1_times_2_mod_p_times_r\
    \ % p))\n                r=$n_i_int_minus_1_times_2_mod_p_times_r_mod_p\n    \
    \        fi\n        fi\n        i=$((i + 1))\n    done\n    echo $r", "    local\
    \ n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local n_len=${#n}\n\
    \    local n_len_minus_1=$((n_len - 1))\n    local n_len_minus_1_minus_i\n   \
    \ local n_i\n    local n_i_minus_1\n    local n_i_minus_1_minus_i\n    local n_i_minus_1_minus_i_plus_1\n\
    \    local n_i_minus_1_minus_i_plus_1_minus_i\n    local n_i_minus_1_minus_i_plus_1_minus_i_plus_1\n\
    \    local n_i_minus_1_minus_i_plus_1_minus_i_plus_1_minus_i\n    local n_i_minus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1\n\
    \    local n_i_minus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1_minus_i\n\
    \    local n_i_minus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1\n\
    \    local n_i_minus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1_minus_i\n\
    \    local n_i_minus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1\n\
    \    local n_i_minus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1_minus_i\n\
    \    local n_i_minus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1_minus_i_plus_1_minus_i_",
  "    local n=\"$1\"\n    local p=\"$2\"\n    local result=\"1\"\n    local i\n \
    \   for ((i=0; i<${#n}; i++)); do\n        if [[ \"${n:$i:1}\" == \"1\" ]]; then\n\
    \            result=$(mult \"$result\" \"$result\")\n            result=$(mult\
    \ \"$result\" \"$p\")\n        else\n            result=$(mult \"$result\" \"\
    $result\")\n        fi\n    done\n    echo \"$result\"", "    local n=$1\n   \
    \ local p=$2\n    local x=1\n    local i=0\n    local len=${#n}\n    while [ $i\
    \ -lt $len ]; do\n        local bit=${n:$i:1}\n        if [ $bit -eq 1 ]; then\n\
    \            x=$((x*2%p))\n        fi\n        i=$((i+1))\n    done\n    echo\
    \ $x", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\n    local\
    \ i=0\n    local l=${#n}\n    local m=$((l-1))\n    local c\n    while [ $i -lt\
    \ $m ]; do\n        c=${n:$i:1}\n        if [ \"$c\" == \"1\" ]; then\n      \
    \      r=$(modmul \"$r\" \"2\" \"$p\")\n        fi\n        i=$((i+1))\n    done\n\
    \    echo \"$r\"", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\
    \n    local i=1\n    local j=2\n    local k=0\n    local l=0\n    local m=0\n\
    \    local nl=0\n    local nr=0\n    local nr2=0\n    local nr3=0\n    local nr4=0\n\
    \    local nr5=0\n    local nr6=0\n    local nr7=0\n    local nr8=0\n    local\
    \ nr9=0\n    local nr10=0\n    local nr11=0\n    local nr12=0\n    local nr13=0\n\
    \    local nr14=0\n    local nr15=0\n    local nr16=0\n    local nr17=0\n    local\
    \ nr18=0\n    local nr19=0\n    local nr20=0\n    local nr21=0\n    local nr22=0\n\
    \    local nr23=0\n    local nr24=0\n    local nr25=0\n    local nr26=0\n    local\
    \ nr27=0\n    local nr28=0\n    local nr29=0\n    local nr30=0\n    local nr31=0\n\
    \    local nr32=0\n    local nr33=0\n    local nr34=0\n    local nr35=0\n    local\
    \ nr36=0\n    local nr37=0\n    local nr38=0\n    local nr39=0\n    local nr40=0\n\
    \    local nr41=0\n    local nr42=0\n    local nr43=0\n    local nr44=0\n    local\
    \ nr45=0\n    local nr46=0\n    local nr47=0\n    local nr48=0\n    local nr49=0\n\
    \    local nr50=0\n    local nr51=0\n    local nr52=0\n    local nr53=0\n    local\
    \ nr54=0\n    local nr55=0\n    local nr56=0\n    local n", "    local n=\"$1\"\
    \n    local p=\"$2\"\n    local r=\"1\"\n    local i\n    for ((i=0; i<${#n};\
    \ i++)); do\n        if [[ \"${n:$i:1}\" == \"1\" ]]; then\n            r=$(mul\
    \ \"$r\" \"$r\" \"$p\")\n        fi\n        r=$(mul \"$r\" \"$r\" \"$p\")\n \
    \   done\n    echo \"$r\"", "    local n=$1\n    local p=$2\n    local r=1\n \
    \   local i=0\n    while [ $i -lt ${#n} ]; do\n        local d=${n:$i:1}\n   \
    \     if [ $d -eq 1 ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i=0\n    local len=${#n}\n    while [ $i -lt $len ]; do\n        local digit=${n:$i:1}\n\
    \        if [ $digit -eq 1 ]; then\n            r=$((r*2%p))\n        fi\n   \
    \     i=$((i+1))\n    done\n    echo $r", "    local n=$1\n    local p=$2\n  \
    \  local r=1\n    local i=0\n    local len=${#n}\n    while [ $i -lt $len ]; do\n\
    \        if [ \"${n:$i:1}\" -eq 1 ]; then\n            r=$((r*2%p))\n        fi\n\
    \        i=$((i+1))\n    done\n    echo $r", "    local n=$1\n    local p=$2\n\
    \    local r=1\n    local i=0\n    local n_len=${#n}\n    while [ $i -lt $n_len\
    \ ]; do\n        local n_i=$(echo $n | cut -c $((i+1)))\n        if [ $n_i -eq\
    \ 1 ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n    done\n\
    \    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local i\n \
    \   for ((i=0; i<${#n}; i++)); do\n        r=$((r*r%p))\n        if [[ ${n:$i:1}\
    \ == 1 ]]; then\n            r=$((r*2%p))\n        fi\n    done\n    echo $r",
  "    local n=$1\n    local p=$2\n    local result=1\n    local i=0\n    local len=${#n}\n\
    \    for ((i=0; i<len; i++)); do\n        local digit=${n:$i:1}\n        if [\
    \ \"$digit\" == \"1\" ]; then\n            result=$((result * result % p))\n \
    \       fi\n        result=$((result * result % p))\n    done\n    echo $result",
  "    local n=$1\n    local p=$2\n    local r=1\n    local i\n    for ((i=${#n}-1;\
    \ i>=0; i--)); do\n        r=$((r*r%p))\n        if [[ ${n:$i:1} -eq 1 ]]; then\n\
    \            r=$((r*2%p))\n        fi\n    done\n    echo $r", "    local n=\"\
    $1\"\n    local p=\"$2\"\n    local r=\"$n\"\n    local l=\"${#n}\"\n    local\
    \ i\n    for ((i=1; i<l; i++)); do\n        r=$(mul \"$r\" \"$r\" \"$p\")\n  \
    \  done\n    echo \"$r\"", "    local n=$1\n    local p=$2\n    local res=1\n\
    \    local i\n    for ((i=0; i<${#n}; i++)); do\n        if [[ ${n:$i:1} == \"\
    1\" ]]; then\n            res=$((res*res%p))\n        fi\n        res=$((res*res%p))\n\
    \    done\n    echo $res", "    local n=$1\n    local p=$2\n    local r=1\n  \
    \  local i=0\n    while [ $i -lt $n ]; do\n        r=$((r*2))\n        r=$((r%p))\n\
    \        i=$((i+1))\n    done\n    echo $r", "    local n=$1\n    local p=$2\n\
    \    local result=1\n    local i=0\n    local len=${#n}\n    while [ $i -lt $len\
    \ ]; do\n        if [ \"${n:$i:1}\" == \"1\" ]; then\n            result=$((result\
    \ * 2 % p))\n        fi\n        i=$((i + 1))\n    done\n    echo $result", " \
    \   local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local l=${#n}\n\
    \    while [ $i -lt $l ]; do\n        local c=${n:$i:1}\n        if [ $c -eq 1\
    \ ]; then\n            r=$((r*r%p))\n        fi\n        r=$((r*r%p))\n      \
    \  i=$((i+1))\n    done\n    echo $r", "  local n=\"$1\"\n  local p=\"$2\"\n \
    \ local r=\"$n\"\n  local i=\"1\"\n  while [ \"$i\" -lt \"${#n}\" ]; do\n    r=$(($r*$r%$p))\n\
    \    i=$(($i+1))\n  done\n  echo \"$r\"", "    local n=$1\n    local p=$2\n  \
    \  local result=1\n    local i=0\n    while [ $i -lt $n ]; do\n        result=$((result\
    \ * 2))\n        result=$((result % p))\n        i=$((i + 1))\n    done\n    echo\
    \ $result", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"1\"\n    local\
    \ i\n    for ((i=${#n}-1; i>=0; i--)); do\n        r=$(mulmod \"$r\" \"$r\" \"\
    $p\")\n        if [[ \"${n:$i:1}\" == \"1\" ]]; then\n            r=$(mulmod \"\
    $r\" \"2\" \"$p\")\n        fi\n    done\n    echo \"$r\"", "    local n=$1\n\
    \    local p=$2\n    local r=1\n    local i=0\n    while [ $i -lt $((${#n}-1))\
    \ ]; do\n        r=$(($r*2))\n        r=$(($r%$p))\n        i=$(($i+1))\n    done\n\
    \    local i=0\n    while [ $i -lt ${#n} ]; do\n        if [ \"${n:$i:1}\" ==\
    \ \"1\" ]; then\n            r=$(($r*2))\n            r=$(($r%$p))\n        fi\n\
    \        i=$(($i+1))\n    done\n    echo $r", "\tlocal n=$1\n\tlocal p=$2\n\t\
    local r=1\n\tlocal i=0\n\tlocal len=${#n}\n\tfor ((i=0; i<len; i++)); do\n\t\t\
    if [[ ${n:$i:1} == \"1\" ]]; then\n\t\t\tr=$((r*r%p))\n\t\tfi\n\t\tr=$((r*r%p))\n\
    \tdone\n\techo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i=0\n    local len=${#n}\n    while [ $i -lt $len ]; do\n        if [ \"${n:$i:1}\"\
    \ == \"1\" ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $r", "    local n=$1\n    local p=$2\n    local result=1\n\
    \    local i=0\n    local len=${#n}\n    while [ $i -lt $len ]; do\n        local\
    \ bit=$(echo $n | cut -c $((i+1)) )\n        if [ $bit -eq 1 ]; then\n       \
    \     result=$((result*2))\n            result=$((result%p))\n        fi\n   \
    \     i=$((i+1))\n    done\n    echo $result", "    local n=$1\n    local p=$2\n\
    \    local result=1\n    local i=0\n    local len=${#n}\n    while [ $i -lt $len\
    \ ]; do\n        local digit=${n:$i:1}\n        if [ $digit -eq 1 ]; then\n  \
    \          result=$((result * 2 % p))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo $result", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i=0\n    while [ $i -lt $n ]; do\n        r=$((r*2))\n        r=$((r%p))\n \
    \       i=$((i+1))\n    done\n    echo $r", "    local n=$1\n    local p=$2\n\
    \    local r=1\n    local i=0\n    local n_len=${#n}\n    local n_i\n    local\
    \ n_i_int\n    local r_int\n    local r_mod_p\n    while [ $i -lt $n_len ]; do\n\
    \        n_i=${n:$i:1}\n        n_i_int=$(echo \"$n_i\" | bc)\n        if [ $n_i_int\
    \ -eq 1 ]; then\n            r_int=$(echo \"$r\" | bc)\n            r_mod_p=$(echo\
    \ \"$r_int % $p\" | bc)\n            r=$(echo \"$r_mod_p * 2\" | bc)\n       \
    \ fi\n        i=$(($i + 1))\n    done\n    r_int=$(echo \"$r\" | bc)\n    r_mod_p=$(echo\
    \ \"$r_int % $p\" | bc)\n    echo \"$r_mod_p\"", "  local n=$1\n  local p=$2\n\
    \  local r=1\n  local i=0\n  local l=${#n}\n  while [ $i -lt $l ]; do\n    if\
    \ [ ${n:$i:1} -eq 1 ]; then\n      r=$((r*2%p))\n    fi\n    i=$((i+1))\n    r=$((r*r%p))\n\
    \  done\n  echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"1\"\
    \n    local i\n    for ((i=0; i<${#n}; i++)); do\n        if [[ ${n:$i:1} == \"\
    1\" ]]; then\n            r=$(mulmod \"$r\" \"2\" \"$p\")\n        fi\n      \
    \  r=$(mulmod \"$r\" \"$r\" \"$p\")\n    done\n    echo \"$r\"", "    local n=$1\n\
    \    local p=$2\n    local result=1\n    local i\n    for ((i=0; i<${#n}; i++));\
    \ do\n        if [[ ${n:$i:1} -eq 1 ]]; then\n            result=$((result * result\
    \ % p))\n        fi\n        result=$((result * result % p))\n    done\n    echo\
    \ $result", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"$n\"\n    local\
    \ i=1\n    while [ \"$i\" -lt \"${#n}\" ]; do\n        r=$(($r * $r % $p))\n \
    \       i=$(($i + 1))\n    done\n    echo \"$r\"", "    local n=$1\n    local\
    \ p=$2\n    local r=1\n    local i\n    for ((i=0; i<${#n}; i++)); do\n      \
    \  r=$((r*r%p))\n        if [[ ${n:$i:1} -eq 1 ]]; then\n            r=$((r*2%p))\n\
    \        fi\n    done\n    echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n\
    \    local r=\"1\"\n    local i\n    for ((i=0; i<${#n}; i++)); do\n        if\
    \ [[ \"${n:$i:1}\" == \"1\" ]]; then\n            r=$(mul \"$r\" \"$r\" \"$p\"\
    )\n        fi\n        r=$(mul \"$r\" \"$r\" \"$p\")\n    done\n    echo \"$r\"",
  "    local n=$1\n    local p=$2\n    local res=1\n    local i=0\n    local len=${#n}\n\
    \    while [ $i -lt $len ]; do\n        if [ \"${n:$i:1}\" == \"1\" ]; then\n\
    \            res=$((res * res % p))\n        fi\n        res=$((res * res % p))\n\
    \        i=$((i + 1))\n    done\n    echo $res", "    local n=$1\n    local p=$2\n\
    \    local r=1\n    while [ \"$n\" -gt 0 ]; do\n        if [ $(($n & 1)) -eq 1\
    \ ]; then\n            r=$(($r * $r % $p))\n        fi\n        n=$(($n >> 1))\n\
    \    done\n    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i=0\n    local n_len=${#n}\n    local n_len_minus_1=$((n_len - 1))\n    local\
    \ n_len_minus_i\n    local n_i\n    local n_i_int\n    local n_i_int_minus_1\n\
    \    local n_i_int_minus_1_pow_2\n    local n_i_int_minus_1_pow_2_mod_p\n    local\
    \ r_pow_2\n    local r_pow_2_mod_p\n    local r_pow_2_mod_p_times_n_i_int_minus_1_pow_2_mod_p\n\
    \    local r_pow_2_mod_p_times_n_i_int_minus_1_pow_2_mod_p_mod_p\n    local r_pow_2_mod_p_times_n_i_int_minus_1_pow_2_mod_p_mod_p_plus_r\n\
    \    local r_pow_2_mod_p_times_n_i_int_minus_1_pow_2_mod_p_mod_p_plus_r_mod_p\n\
    \    local r_pow_2_mod_p_times_n_i_int_minus_1_pow_2_mod_p_mod_p_plus_r_mod_p_int\n\
    \    while [ $i -lt $n_len ]; do\n        n_len_minus_i=$((n_len_minus_1 - i))\n\
    \        n_i=${n:$n_len_minus_i:1}\n        n_i_int=$((10#$n_i))\n        if [\
    \ $n_i_int -eq 1 ]; then\n            n_i_int_minus_1=$((n_i_int - 1))\n     \
    \       n_i_int_minus_1_pow_2=$((n_i_int_minus_1 * n_i_int_minus_1))\n       \
    \     n_i_int_minus_1", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i=0\n    local len=${#n}\n    for ((i=0; i<len; i++)); do\n        if [[ ${n:$i:1}\
    \ == \"1\" ]]; then\n            r=$((r*r%p))\n        fi\n        r=$((r*r%p))\n\
    \    done\n    echo $r", "    local n=\"$1\"\n    local p=\"$2\"\n    local r=\"\
    1\"\n    local i\n    for ((i=0; i<${#n}; i++)); do\n        if [[ \"${n:$i:1}\"\
    \ == \"1\" ]]; then\n            r=$(mulmod \"$r\" \"2\" \"$p\")\n        fi\n\
    \        r=$(mulmod \"$r\" \"$r\" \"$p\")\n    done\n    echo \"$r\"", "    local\
    \ n=$1\n    local p=$2\n    local r=1\n    local i=0\n    while [ $i -lt $n ];\
    \ do\n        r=$((r*2%p))\n        i=$((i+1))\n    done\n    echo $r", "    local\
    \ n=$1\n    local p=$2\n    local r=1\n    local i=0\n    while [ $i -lt $n ];\
    \ do\n        r=$((r*2))\n        r=$((r%p))\n        i=$((i+1))\n    done\n \
    \   echo $r", "    local n=$1\n    local p=$2\n    local result=1\n    local i\n\
    \    for ((i=0; i<${#n}; i++)); do\n        if [[ ${n:$i:1} == 1 ]]; then\n  \
    \          result=$((result * result % p))\n        fi\n        result=$((result\
    \ * result % p))\n    done\n    echo $result", "    local n=\"$1\"\n    local\
    \ p=\"$2\"\n    local result=\"1\"\n    local i\n    for ((i=0; i<${#n}; i++));\
    \ do\n        if [[ \"${n:$i:1}\" == \"1\" ]]; then\n            result=$(($result\
    \ * $result % $p))\n        fi\n        result=$(($result * $result % $p))\n \
    \   done\n    echo \"$result\"", "    local n=$1\n    local p=$2\n    local r=1\n\
    \    local i=0\n    local l=${#n}\n    while [ $i -lt $l ]; do\n        if [ \"\
    ${n:$i:1}\" == \"1\" ]; then\n            r=$((r*2%p))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $r", "  local n=\"$1\"\n  local p=\"$2\"\n  local r=\"$n\"\
    \n  local i\n  for ((i=1; i<${#n}; i++)); do\n    r=$(mul \"$r\" \"$r\" \"$p\"\
    )\n  done\n  echo \"$r\"", "    local n=$1\n    local p=$2\n    local r=1\n  \
    \  local i=0\n    local len=${#n}\n    while [ $i -lt $len ]; do\n        local\
    \ d=${n:$i:1}\n        if [ $d -eq 1 ]; then\n            r=$((r*2%p))\n     \
    \   fi\n        i=$((i+1))\n    done\n    echo $r", "    local n=$1\n    local\
    \ p=$2\n    local r=1\n    local i=0\n    local len=${#n}\n    for ((i=0; i<len;\
    \ i++)); do\n        local digit=${n:$i:1}\n        if [ \"$digit\" == \"1\" ];\
    \ then\n            r=$((r*r%p))\n        fi\n        r=$((r*r%p))\n    done\n\
    \    echo $r", "    local n=$1\n    local p=$2\n    local result=1\n    local\
    \ i\n    for ((i=0; i<${#n}; i++)); do\n        if [[ ${n:$i:1} == 1 ]]; then\n\
    \            result=$((result * result % p))\n        fi\n        result=$((result\
    \ * result % p))\n    done\n    echo $result", "    local n=$1\n    local p=$2\n\
    \    local r=1\n    local i=0\n    local l=${#n}\n    while (( i < l )); do\n\
    \        if [[ ${n:$i:1} == 1 ]]; then\n            r=$(( (r * r) % p ))\n   \
    \     fi\n        r=$(( (r * r) % p ))\n        i=$(( i + 1 ))\n    done\n   \
    \ echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n  \
    \  local b=0\n    local l=${#n}\n    while [ $i -lt $l ]; do\n        b=$(echo\
    \ \"$n\" | cut -c $((i+1)) )\n        if [ \"$b\" -eq \"1\" ]; then\n        \
    \    r=$(( (r*r) % p ))\n        fi\n        r=$(( (r*r) % p ))\n        i=$((i+1))\n\
    \    done\n    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i=0\n    local l=${#n}\n    while [ $i -lt $l ]; do\n        local c=${n:$i:1}\n\
    \        if [ $c -eq 1 ]; then\n            r=$((r*r%p))\n        fi\n       \
    \ r=$((r*r%p))\n        i=$((i+1))\n    done\n    echo $r", "    local n=\"$1\"\
    \n    local p=\"$2\"\n    local r=\"$n\"\n    local i=0\n    local l=$((${#n}-1))\n\
    \    while [ $i -lt $l ]; do\n        r=$(($r*$r%$p))\n        i=$(($i+1))\n \
    \   done\n    echo $r", "    local n=$1\n    local p=$2\n    local r=1\n    local\
    \ i=0\n    local l=$(echo $n | wc -c)\n    while [ $i -lt $l ]; do\n        local\
    \ c=$(echo $n | cut -c $((i+1)))\n        if [ $c -eq 1 ]; then\n            r=$((r*r%p))\n\
    \        fi\n        r=$((r*r%p))\n        i=$((i+1))\n    done\n    echo $r",
  "    local n=$1\n    local p=$2\n    local r=1\n    local i=0\n    local n_len=${#n}\n\
    \    local n_bin=$(echo \"obase=2; ibase=10; $n\" | bc)\n    while [ $i -lt $n_len\
    \ ]; do\n        local bit=$(echo $n_bin | cut -c $((n_len - i))- | cut -c 1)\n\
    \        if [ $bit -eq 1 ]; then\n            r=$((r * 2 % p))\n        fi\n \
    \       i=$((i + 1))\n    done\n    echo $r", "    local n=\"$1\"\n    local p=\"\
    $2\"\n    local r=\"$n\"\n    local i=1\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n \
    \   local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local ab=0\n\
    \    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local ag=0\n\
    \    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local al=0\n\
    \    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local aq=0\n\
    \    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local av=0\n\
    \    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local ba=0\n\
    \    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local bf=0\n\
    \    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local bk=0\n\
    \    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local bp=0\n\
    \    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local bu=0\n\
    \    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local bz=0\n\
    \    local ca=0\n    local cb=0\n    local cc=0\n    local cd=0\n    local ce=0\n\
    \    local cf=0\n    local cg=0\n    local ch=0\n", "    local n=\"$1\"\n    local\
    \ p=\"$2\"\n    local r=\"$n\"\n    local i\n    for ((i=0; i<${#n}-1; i++));\
    \ do\n        r=$(($r*2))\n        if [ \"$r\" -ge \"$p\" ]; then\n          \
    \  r=$(($r-$p))\n        fi\n    done\n    echo \"$r\""]
stop_tokens:
- "\n}"

name: HumanEval_47_median
language: sh
prompt: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median \"\
  3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n#\n#\
  \ $1 is a space-separated list\nmedian() {\n"
tests: "}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
  \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
  \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
completions: ["    local l=($1)\n    local len=${#l[@]}\n    local mid=$((len/2))\n\
    \    local m\n    if ((len % 2 == 0)); then\n        m=$(echo \"scale=1; (${l[mid]}\
    \ + ${l[mid-1]})/2\" | bc)\n    else\n        m=${l[mid]}\n    fi\n    echo $m",
  "    local l=($1)\n    local m=${#l[@]}\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local t=0\n    for ((i=0; i<m; i++)); do\n        for ((j=i+1; j<m;\
    \ j++)); do\n            if ((${l[i]} > ${l[j]})); then\n                t=${l[i]}\n\
    \                l[i]=${l[j]}\n                l[j]=$t\n            fi\n     \
    \   done\n    done\n    if ((m % 2 == 0)); then\n        ((k = m / 2))\n     \
    \   echo \"$(echo \"scale=1; (${l[k-1]} + ${l[k]})/2\" | bc)\"\n    else\n   \
    \     ((k = (m - 1) / 2))\n        echo \"${l[k]}\"\n    fi", "    local l=($1)\n\
    \    local i=0\n    local m=0\n    local n=${#l[@]}\n    local sum=0\n    local\
    \ avg=0\n    local mid=0\n    local max=0\n    local min=0\n    local med=0\n\
    \    local med_low=0\n    local med_high=0\n    local med_low_index=0\n    local\
    \ med_high_index=0\n    local med_index=0\n    local med_index_low=0\n    local\
    \ med_index_high=0\n    local med_index_low_index=0\n    local med_index_high_index=0\n\
    \    local med_index_index=0\n    local med_index_index_low=0\n    local med_index_index_high=0\n\
    \    local med_index_index_low_index=0\n    local med_index_index_high_index=0\n\
    \    local med_index_index_index=0\n    local med_index_index_index_low=0\n  \
    \  local med_index_index_index_high=0\n    local med_index_index_index_low_index=0\n\
    \    local med_index_index_index_high_index=0\n    local med_index_index_index_index=0\n\
    \    local med_index_index_index_index_low=0\n    local med_index_index_index_index_high=0\n\
    \    local med_index_index_index_index_low_index=0\n    local med_index_index_index_index_high_index=0\n\
    \    local med_index_index_index_index_index=0\n    local med_index_index_index_index_index_low=0\n\
    \    local med_index_index_index_index_index_high=0\n    local med_index_index_index_index_index_low_index=0\n\
    \    local med_index_index_index_index_index_high_index=0\n    local med_index_index_index_index_index_index=0\n\
    \    local med_index_index_index_index_index_index_low=0\n    local med_index_index_index_",
  "    local l=($1)\n    local i=0\n    local j=0\n    local temp=0\n    local n=${#l[@]}\n\
    \    for ((i=0; i<n; i++))\n    do\n        for ((j=0; j<n-i-1; j++))\n      \
    \  do\n            if ((${l[j]} > ${l[$((j+1))]}))\n            then\n       \
    \         temp=${l[j]}\n                l[$j]=${l[$((j+1))]}\n               \
    \ l[$((j+1))]=$temp\n            fi\n        done\n    done\n    if (($n % 2 ==\
    \ 0))\n    then\n        echo \"$(echo \"scale=1; (${l[$((n/2))]} + ${l[$((n/2-1))]})/2\"\
    \ | bc -l)\"\n    else\n        echo \"${l[$((n/2))]}\"\n    fi", "    local l=($1)\n\
    \    local m=${#l[@]}\n    local i\n    local s\n    local sum=0\n    for i in\
    \ ${l[@]}; do\n        sum=$(echo \"$sum + $i\" | bc)\n    done\n    s=$(echo\
    \ \"$sum / $m\" | bc -l)\n    echo $s", "    local l=($1)\n    local m=${#l[@]}\n\
    \    local s=0\n    local i=0\n    for e in ${l[@]}; do\n        s=$(echo \"$s\
    \ + $e\" | bc)\n    done\n    echo \"$s / $m\" | bc -l", "  local l=($1)\n  local\
    \ n=${#l[@]}\n  local m=$((n/2))\n  local s=$(echo \"${l[@]}\" | tr ' ' '\\n'\
    \ | sort -n | awk '{s+=$1} END {print s}')\n  if ((n%2==1)); then\n    echo \"\
    ${l[$m]}\"\n  else\n    echo \"$(echo \"scale=1; $s/$n\" | bc -l)\"\n  fi", " \
    \   local l=($1)\n    local m=${#l[@]}\n    local i\n    local j\n    local tmp\n\
    \    for ((i=0; i<m; i++)); do\n        for ((j=i+1; j<m; j++)); do\n        \
    \    if (($(echo \"${l[$i]} > ${l[$j]}\" | bc -l))); then\n                tmp=${l[$i]}\n\
    \                l[$i]=${l[$j]}\n                l[$j]=$tmp\n            fi\n\
    \        done\n    done\n    if (($(echo \"$m % 2 == 0\" | bc -l))); then\n  \
    \      echo \"$(echo \"scale=1; (${l[$(($m/2))]} + ${l[$(($m/2-1))]}) / 2\" |\
    \ bc -l)\"\n    else\n        echo \"${l[$(($m/2))]}\"\n    fi", "    local l=($1)\n\
    \    local m=${#l[@]}\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ t=0\n    local s=0\n    local r=0\n    local p=0\n    local q=0\n    local n=0\n\
    \    local o=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n \
    \   local g=0\n    local h=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local a=0\n    local b=0\n    local v=0\n    local w=0\n    local u=0\n   \
    \ local A=0\n    local B=0\n    local C=0\n    local D=0\n    local E=0\n    local\
    \ F=0\n    local G=0\n    local H=0\n    local I=0\n    local J=0\n    local K=0\n\
    \    local L=0\n    local M=0\n    local N=0\n    local O=0\n    local P=0\n \
    \   local Q=0\n    local R=0\n    local S=0\n    local T=0\n    local U=0\n  \
    \  local V=0\n    local W=0\n    local X=0\n    local Y=0\n    local Z=0\n   \
    \ local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n\
    \    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n\
    \    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n\
    \    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n\
    \    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n\
    \    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n\
    \    local be=", "    local l=($1)\n    local i\n    local m\n    local n\n  \
    \  local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local aa\n    local bb\n    local cc\n    local dd\n    local ee\n    local\
    \ ff\n    local gg\n    local hh\n    local ii\n    local jj\n    local kk\n \
    \   local ll\n    local mm\n    local nn\n    local oo\n    local pp\n    local\
    \ qq\n    local rr\n    local ss\n    local tt\n    local uu\n    local vv\n \
    \   local ww\n    local xx\n    local yy\n    local zz\n    local aaa\n    local\
    \ bbb\n    local ccc\n    local ddd\n    local eee\n    local fff\n    local ggg\n\
    \    local hhh\n    local iii\n    local jjj\n    local kkk\n    local lll\n \
    \   local mmm\n    local nnn\n    local ooo\n    local ppp\n    local qqq\n  \
    \  local rrr\n    local sss\n    local ttt\n    local uuu\n    local vvv\n   \
    \ local www\n    local xxx\n    local yyy\n    local zzz\n    local aaaa\n   \
    \ local bbbb\n    local cccc\n    local dddd\n    local eeee\n    local ffff\n\
    \    local gggg\n    local hhhh\n    local iiii\n    local jjjj\n    local kkkk\n\
    \    local llll\n    local mmmm\n    local nnnn\n    local oooo\n    local pppp\n\
    \    local qqqq\n    local rrrr\n    local ssss\n    local tttt\n    local uuuu\n\
    \    local vvvv\n    local wwww\n    local xxxx\n    local yyyy\n    local zzzz\n\
    \    local aaaaa\n    local bbbbb\n    local ccccc\n    local ddddd\n    local\
    \ eeeee\n    local fffff\n    local ggggg\n    local hhhhh\n    local iii", " \
    \   local l=($1)\n    local i=$((${#l[@]}/2))\n    local m=$(echo \"${l[@]}\"\
    \ | tr ' ' '\\n' | sort -n | sed -n \"${i}p\")\n    echo \"$m\"", "    local l=$1\n\
    \    local n=$(echo \"$l\" | wc -w)\n    local m=$((n/2))\n    local s=$(echo\
    \ \"$l\" | tr ' ' '\\n' | sort -n)\n    local r=$(echo \"$s\" | sed -n \"${m}p\"\
    )\n    if [ $((n%2)) -eq 0 ]; then\n        local r2=$(echo \"$s\" | sed -n \"\
    $((m-1))p\")\n        r=$(echo \"scale=1; ($r+$r2)/2\" | bc)\n    fi\n    echo\
    \ \"$r\"", "    local l=($1)\n    local n=${#l[@]}\n    local m=$((n/2))\n   \
    \ local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=$(printf \"%s\\\
    n\" \"$s\" | sed -n \"$((m+1))p\")\n    if ((n%2==0)); then\n        local v2=$(printf\
    \ \"%s\\n\" \"$s\" | sed -n \"$((m))p\")\n        v=$(echo \"scale=1; ($v+$v2)/2\"\
    \ | bc)\n    fi\n    echo \"$v\"", "    local l=($1)\n    local m=$(( ${#l[@]}\
    \ / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s", " \
    \   local l=($1)\n    local n=${#l[@]}\n    local i\n    local m\n    local s\n\
    \    local t\n    local v\n    for i in $(seq 0 $((n-1))); do\n        v=${l[$i]}\n\
    \        if [[ -z $m ]]; then\n            m=$v\n        elif [[ $v -lt $m ]];\
    \ then\n            t=$m\n            m=$v\n            v=$t\n        fi\n   \
    \     if [[ -z $s ]]; then\n            s=$v\n        elif [[ $v -gt $s ]]; then\n\
    \            t=$s\n            s=$v\n            v=$t\n        fi\n    done\n\
    \    if [[ $((n%2)) -eq 0 ]]; then\n        echo $(((m+s)/2))\n    else\n    \
    \    echo $m\n    fi", "  local l=($1)\n  local n=${#l[@]}\n  local m=$((n/2))\n\
    \  local s=${l[@]}\n  local i\n  for ((i=0; i<n; i++)); do\n    s=${s//${l[i]}/}\n\
    \    if ((${#s}<m)); then\n      echo ${l[i]}\n      return\n    fi\n  done",
  "    local l=$1\n    local n=$(echo \"$l\" | wc -w)\n    local m=$((n / 2))\n  \
    \  local s=$(echo \"$l\" | sort -n)\n    if ((n % 2 == 0)); then\n        echo\
    \ \"$s\" | awk -v m=$m '{print ($m + $(m + 1)) / 2.0}'\n    else\n        echo\
    \ \"$s\" | awk -v m=$m '{print $m}'\n    fi", "  local l=($1)\n  local m=$(( ${#l[@]}\
    \ / 2 ))\n  local r=$(( ${#l[@]} % 2 ))\n  local s=$(printf \"%s\\n\" \"${l[@]}\"\
    \ | sort -n)\n  local v=($s)\n  if (( r == 0 )); then\n    echo \"$(( (${v[$m-1]}\
    \ + ${v[$m]}) / 2 ))\"\n  else\n    echo \"${v[$m]}\"\n  fi", "    local l=($1)\n\
    \    local n=${#l[@]}\n    local i=0\n    local j=0\n    local tmp=0\n    local\
    \ m=0\n    local n2=0\n    local n4=0\n    local n5=0\n    local n6=0\n    local\
    \ n7=0\n    local n8=0\n    local n9=0\n    local n10=0\n    local n11=0\n   \
    \ local n12=0\n    local n13=0\n    local n14=0\n    local n15=0\n    local n16=0\n\
    \    local n17=0\n    local n18=0\n    local n19=0\n    local n20=0\n    local\
    \ n21=0\n    local n22=0\n    local n23=0\n    local n24=0\n    local n25=0\n\
    \    local n26=0\n    local n27=0\n    local n28=0\n    local n29=0\n    local\
    \ n30=0\n    local n31=0\n    local n32=0\n    local n33=0\n    local n34=0\n\
    \    local n35=0\n    local n36=0\n    local n37=0\n    local n38=0\n    local\
    \ n39=0\n    local n40=0\n    local n41=0\n    local n42=0\n    local n43=0\n\
    \    local n44=0\n    local n45=0\n    local n46=0\n    local n47=0\n    local\
    \ n48=0\n    local n49=0\n    local n50=0\n    local n51=0\n    local n52=0\n\
    \    local n53=0\n    local n54=0\n    local n55=0\n    local n56=0\n    local\
    \ n57=0\n    local n58=0\n    local n59=0\n    local n60=0\n    local n61=0\n\
    \    local n62=0\n    local n63=0\n    local n64=0\n    local n65=0\n    local\
    \ n66=0\n    local n67=0\n    local n68=0\n    local n69=0", "    local l=($(echo\
    \ $1 | tr ' ' '\\n' | sort -n))\n    local n=$((${#l[@]} / 2))\n    echo ${l[$n]}"]
stop_tokens:
- "\n}"

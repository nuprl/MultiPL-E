name: HumanEval_30_get_positive
language: sh
prompt: "#!/bin/bash\n# Return only positive numbers in the list.\n# >>> $(get_positive\
  \ \"-1 2 -4 5 6\")\n# ['\"2\"', '\"5\"', '\"6\"']\n# >>> $(get_positive \"5 3 -5\
  \ 2 -3 3 9 0 123 1 -10\")\n# ['\"5\"', '\"3\"', '\"2\"', '\"3\"', '\"9\"', '\"123\"\
  ', '\"1\"']\n#\n# $1 is a space-separated list\nget_positive() {\n"
tests: "}\n\ncandidate() {\n    get_positive \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"-1 -2 4 5 6\") = \"4 5 6\" ]]\n    [[ $(candidate \"5 3 -5\
  \ 2 3 3 9 0 123 1 -10\") = \"5 3 2 3 3 9 123 1\" ]]\n    [[ $(candidate \"-1 -2\"\
  ) = \"\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n}\n\nrun_test"
completions: ["    local list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n\
    \        if [ $i -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n\
    \    done\n    echo \"$result\"", '    echo "$1" | tr " " "\n" | grep -E "^[0-9]+$"
    | tr "\n" " "', "    local list=$1\n    local result=()\n    for i in ${list};\
    \ do\n        if [[ ${i} -gt 0 ]]; then\n            result+=(${i})\n        fi\n\
    \    done\n    echo ${result[@]}", "  local list=\"$1\"\n  local result=\"\"\n\
    \  for num in $list; do\n    if [ $num -ge 0 ]; then\n      result=\"$result $num\"\
    \n    fi\n  done\n  echo \"$result\"", "    local list=\"$1\"\n    local result=\"\
    \"\n    for i in $list; do\n        if [ $i -ge 0 ]; then\n            result=\"\
    $result $i\"\n        fi\n    done\n    echo \"[$(echo $result | sed 's/ /\",\
    \ \"/g')]\"", "    local numbers=($1)\n    local positive_numbers=()\n    for\
    \ number in \"${numbers[@]}\"; do\n        if [[ $number -gt 0 ]]; then\n    \
    \        positive_numbers+=(\"$number\")\n        fi\n    done\n    echo \"${positive_numbers[@]}\"",
  "  local list=\"$1\"\n  local result=()\n  for i in $list; do\n    if [[ $i -ge\
    \ 0 ]]; then\n      result+=(\"$i\")\n    fi\n  done\n  echo \"${result[@]}\"",
  "    local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [\
    \ $i -gt 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n\
    \    echo $result", "    local -a arr=()\n    for i in $1; do\n        if [ $i\
    \ -ge 0 ]; then\n            arr+=(\"$i\")\n        fi\n    done\n    echo \"\
    ${arr[@]}\"", "    local list=$1\n    local positive_list=()\n    for i in $list;\
    \ do\n        if [[ $i -gt 0 ]]; then\n            positive_list+=(\"$i\")\n \
    \       fi\n    done\n    echo \"${positive_list[@]}\"", "    local list=\"$1\"\
    \n    local result=\"\"\n    for i in $list; do\n        if [ $i -ge 0 ]; then\n\
    \            result=\"$result $i\"\n        fi\n    done\n    echo $result", " \
    \   echo \"$1\" | tr ' ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' '", "    local\
    \ list=$1\n    local positive_list=\"\"\n    for i in $list; do\n        if [\
    \ $i -gt 0 ]; then\n            positive_list=\"$positive_list $i\"\n        fi\n\
    \    done\n    echo $positive_list", "  local list=$1\n  local result=()\n  for\
    \ i in $list; do\n    if [[ $i -gt 0 ]]; then\n      result+=($i)\n    fi\n  done\n\
    \  echo \"${result[@]}\"", "    local list=\"$1\"\n    local result=\"\"\n   \
    \ for number in $list; do\n        if [ \"$number\" -ge 0 ]; then\n          \
    \  result=\"$result $number\"\n        fi\n    done\n    echo $result", "    local\
    \ list=\"$1\"\n    local result=\"\"\n    for i in $list; do\n        if [ $i\
    \ -ge 0 ]; then\n            result=\"$result $i\"\n        fi\n    done\n   \
    \ echo \"[$(echo $result | sed -e 's/ /\", \"/g')]\"", '    echo "$1" | tr " "
    "\n" | grep -E "^[0-9]+$" | tr "\n" " "', "    local list=\"$1\"\n    local result=\"\
    \"\n    for i in $list; do\n        if [ $i -ge 0 ]; then\n            result=\"\
    $result $i\"\n        fi\n    done\n    echo $result", "    echo \"$1\" | tr '\
    \ ' '\\n' | grep -E '^[0-9]+$' | tr '\\n' ' '", "    local list=$1\n    local\
    \ positive_list=\"\"\n    for i in $list; do\n        if [ $i -gt 0 ]; then\n\
    \            positive_list=\"$positive_list $i\"\n        fi\n    done\n    echo\
    \ \"[$(join_by \",\" $positive_list)]\""]
stop_tokens:
- "\n}"

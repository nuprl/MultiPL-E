language: sh
name: HumanEval_21_rescale_to_unit
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"; do\n        if ((\
    \ $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n   \
    \     if (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n     \
    \   fi\n    done\n    for n in \"${numbers[@]}\"; do\n        echo $(echo \"scale=2;\
    \ ($n - $min) / ($max - $min)\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019978
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled_numbers=()\n    for number in \"${numbers[@]}\"\
    ; do\n        local rescaled_number=$(echo \"($number - $min) / $range\" | bc\
    \ -l)\n        rescaled_numbers+=(\"$rescaled_number\")\n    done\n    echo \"\
    ${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019978
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local -a numbers=($1)\n  local min=${numbers[0]}\n\
    \  local max=${numbers[0]}\n  for i in \"${numbers[@]}\"; do\n    if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n      min=$i\n    fi\n    if (( $(echo \"$i\
    \ > $max\" | bc -l) )); then\n      max=$i\n    fi\n  done\n  local range=$(echo\
    \ \"$max - $min\" | bc -l)\n  local rescaled=()\n  for i in \"${numbers[@]}\"\
    ; do\n    local rescaled_i=$(echo \"($i - $min) / $range\" | bc -l)\n    rescaled+=($rescaled_i)\n\
    \  done\n  echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019978
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n\
    \        fi\n        if (( $(echo \"$n > $max\" | bc -l) )); then\n          \
    \  max=$n\n        fi\n    done\n    for n in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019978
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if [[ $i -lt\
    \ $min ]]; then\n            min=$i\n        fi\n        if [[ $i -gt $max ]];\
    \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
    \ - $min\" | bc)\n    local -a rescaled=()\n    for i in \"${list[@]}\"; do\n\
    \        local rescaled_i=$(echo \"($i - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_i)\n\
    \    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsyle5ro0.sh: line 13: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpsyle5ro0.sh: line 16: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpsyle5ro0.sh: line 13: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmpsyle5ro0.sh: line 16: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    Runtime error (func=(main), adr=13): Divide by zero

    Runtime error (func=(main), adr=14): Divide by zero

    '
  stdout: ''
  timestamp: 1660019978
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i\n    for\
    \ i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"scale=2; ($i - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a arr\n    IFS=' ' read -r -a arr <<<\
    \ \"$1\"\n    local min=${arr[0]}\n    local max=${arr[0]}\n    for i in \"${arr[@]}\"\
    ; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n\
    \        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n          \
    \  max=$i\n        fi\n    done\n    local diff=$(echo \"$max - $min\" | bc -l)\n\
    \    local result=()\n    for i in \"${arr[@]}\"; do\n        local scaled=$(echo\
    \ \"($i - $min) / $diff\" | bc -l)\n        result+=(\"$scaled\")\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n  \
    \  [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0\
    \ 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0\
    \ 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0\
    \ 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019978
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a input=($1)\n    local -a output=()\n\
    \    local min=${input[0]}\n    local max=${input[0]}\n    local i=0\n    local\
    \ n=${#input[@]}\n    for ((i=0; i<n; i++)); do\n        if (( $(echo \"${input[$i]}\
    \ < $min\" | bc -l) )); then\n            min=${input[$i]}\n        fi\n     \
    \   if (( $(echo \"${input[$i]} > $max\" | bc -l) )); then\n            max=${input[$i]}\n\
    \        fi\n    done\n    for ((i=0; i<n; i++)); do\n        output[$i]=$(echo\
    \ \"scale=2; (${input[$i]} - $min) / ($max - $min)\" | bc -l)\n    done\n    echo\
    \ \"${output[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019978
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local min=$(echo \"$1\" | tr ' ' '\\n' | sort\
    \ -n | head -n 1)\n    local max=$(echo \"$1\" | tr ' ' '\\n' | sort -n | tail\
    \ -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo \"$1\" | tr '\
    \ ' '\\n' | while read x\n    do\n        echo \"$(echo \"($x - $min) / $range\"\
    \ | bc -l)\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for i in \"${list[@]}\"; do\n        rescaled+=($(echo \"($i - $min) / $range\"\
    \ | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local -a numbers=($1)\n  local min=${numbers[0]}\n\
    \  local max=${numbers[0]}\n  for number in ${numbers[@]}; do\n    if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n      min=$number\n    fi\n    if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n      max=$number\n    fi\n  done\n  local\
    \ range=$(echo \"$max - $min\" | bc -l)\n  for number in ${numbers[@]}; do\n \
    \   echo -n \"\\\"$(echo \"($number - $min) / $range\" | bc -l)\\\" \"\n  done\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local input_list=$1\n  local min=$(echo \"$input_list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n  local max=$(echo \"$input_list\" |\
    \ tr ' ' '\\n' | sort -n | tail -n 1)\n  local range=$(echo \"$max - $min\" |\
    \ bc)\n  local output_list=$(echo \"$input_list\" | tr ' ' '\\n' | while read\
    \ x; do echo \"$(echo \"($x - $min) / $range\" | bc)\"; done)\n  echo \"$output_list\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local min=$(echo \"$1\" | tr ' ' '\\n' | sort\
    \ -n | head -n 1)\n    local max=$(echo \"$1\" | tr ' ' '\\n' | sort -n | tail\
    \ -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo \"$1\" | tr '\
    \ ' '\\n' | while read x; do\n        echo \"$(echo \"($x - $min) / $range\" |\
    \ bc -l)\"\n    done | tr '\\n' ' '\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for n in ${numbers[@]};\
    \ do\n        echo $(echo \"($n - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local numbers=($1)\n  local min=${numbers[0]}\n\
    \  local max=${numbers[0]}\n  for number in ${numbers[@]}; do\n    if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n      min=$number\n    fi\n    if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n      max=$number\n    fi\n  done\n  local\
    \ range=$(echo \"$max - $min\" | bc -l)\n  local result=()\n  for number in ${numbers[@]};\
    \ do\n    local rescaled=$(echo \"($number - $min) / $range\" | bc -l)\n    result+=(\"\
    $rescaled\")\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local rescaled_numbers=()\n    for number in \"${numbers[@]}\"\
    ; do\n        local rescaled_number=$(echo \"($number - $min) / $range\" | bc\
    \ -l)\n        rescaled_numbers+=($rescaled_number)\n    done\n    echo \"${rescaled_numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if [[ $number < $min ]]; then\n            min=$number\n        fi\n      \
    \  if [[ $number > $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    local -a rescaled=()\n    for\
    \ number in \"${numbers[@]}\"; do\n        local rescaled_number=$(echo \"($number\
    \ - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n    done\n\
    \    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local -a numbers=($1)\n  local -a rescaled_numbers=()\n\
    \  local max=${numbers[0]}\n  local min=${numbers[0]}\n  for number in \"${numbers[@]}\"\
    ; do\n    if (( $(echo \"$number > $max\" | bc -l) )); then\n      max=$number\n\
    \    fi\n    if (( $(echo \"$number < $min\" | bc -l) )); then\n      min=$number\n\
    \    fi\n  done\n  for number in \"${numbers[@]}\"; do\n    rescaled_numbers+=($(echo\
    \ \"scale=2; ($number - $min) / ($max - $min)\" | bc -l))\n  done\n  echo \"${rescaled_numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for i in \"${list[@]}\"; do\n        rescaled+=($(echo \"($i - $min) / $range\"\
    \ | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local result=\"\"\n    for number in \"${numbers[@]}\"; do\n \
    \       local rescaled=$(echo \"($number - $min) / $range\" | bc -l)\n       \
    \ result=\"$result \\\"$rescaled\\\"\"\n    done\n    echo \"[$result]\"\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"; do\n        if ((\
    \ $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n   \
    \     if (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n     \
    \   fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for n in\
    \ \"${numbers[@]}\"; do\n        echo $(echo \"($n - $min) / $range\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=($1)\n    local min=${list[0]}\n \
    \   local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if [[ $i <\
    \ $min ]]; then\n            min=$i\n        fi\n        if [[ $i > $max ]]; then\n\
    \            max=$i\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc)\n    local result=\"\"\n    for i in \"${list[@]}\"; do\n        local\
    \ scaled=$(echo \"($i - $min) / $range\" | bc -l)\n        result+=\"\\\"$scaled\\\
    \" \"\n    done\n    echo \"[$result]\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i\n    for\
    \ i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"scale=2; ($i - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for i in \"${numbers[@]}\"; do\n        if ((\
    \ $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n   \
    \     if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n     \
    \   fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a\
    \ rescaled=()\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"\
    ($i - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local input=\"$1\"\n    local min=$(echo \"$input\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$input\" | tr\
    \ ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    echo \"$input\" | tr ' ' '\\n' | while read x; do\n        echo \"$(echo\
    \ \"($x - $min) / $range\" | bc -l)\"\n    done | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=($1)\n    local min=${list[0]}\n \
    \   local max=${list[0]}\n    for i in ${list[@]}; do\n        if (( $(echo \"\
    $i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc -l)\n    local result=\"\"\n    for\
    \ i in ${list[@]}; do\n        local scaled=$(echo \"($i - $min) / $range\" |\
    \ bc -l)\n        result+=\"\\\"$scaled\\\" \"\n    done\n    echo \"[$result]\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    echo \"$list\" | tr ' ' '\\n' | while read x; do\n        local scaled=$(echo\
    \ \"($x - $min) / $range\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=($1)\n    local min=${list[0]}\n \
    \   local max=${list[0]}\n    for i in ${list[@]}; do\n        if (( $(echo \"\
    $i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
    \    local diff=$(echo \"$max - $min\" | bc -l)\n    local result=\"\"\n    for\
    \ i in ${list[@]}; do\n        local scaled=$(echo \"($i - $min) / $diff\" | bc\
    \ -l)\n        result+=\"\\\"$scaled\\\" \"\n    done\n    echo $result\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($number - $min)\
    \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in ${numbers[@]}; do\n        echo $(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local min=$(echo \"$1\" | tr \" \" \"\\n\" |\
    \ sort -n | head -n 1)\n    local max=$(echo \"$1\" | tr \" \" \"\\n\" | sort\
    \ -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    local list=$(echo\
    \ \"$1\" | tr \" \" \"\\n\")\n    local rescaled=\"\"\n    for x in $list; do\n\
    \        local rescaled_x=$(echo \"($x - $min) / $range\" | bc -l)\n        rescaled=\"\
    $rescaled $rescaled_x\"\n    done\n    echo $rescaled\n}\n\ncandidate() {\n  \
    \  rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0\
    \ 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n\
    \    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n\
    \    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"; do\n        if ((\
    \ $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n   \
    \     if (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n     \
    \   fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for n in\
    \ \"${numbers[@]}\"; do\n        echo $(echo \"($n - $min) / $range\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    for n in ${numbers[@]}; do\n        echo -n \"\\\"$(echo \"scale=2;\
    \ ($n - $min) / ($max - $min)\" | bc -l)\\\" \"\n    done\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"; do\n        if ((\
    \ $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n   \
    \     if (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n     \
    \   fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a\
    \ rescaled=()\n    for n in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"\
    ($n - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled=()\n\
    \    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"($n - $min) / $range\"\
    \ | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in ${numbers[@]}; do\n        local scaled=$(echo \"\
    ($number - $min) / $range\" | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a vals=($1)\n    local min=${vals[0]}\n\
    \    local max=${vals[0]}\n    for v in ${vals[@]}; do\n        if (( $(echo \"\
    $v < $min\" | bc -l) )); then\n            min=$v\n        fi\n        if (( $(echo\
    \ \"$v > $max\" | bc -l) )); then\n            max=$v\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc -l)\n    for v in ${vals[@]}; do\n\
    \        echo $(echo \"($v - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local -a sorted=()\n    local -a sorted_rescaled=()\n    local min=0\n  \
    \  local max=0\n    local range=0\n    local i=0\n    local j=0\n    local n=0\n\
    \    local rescaled_number=0\n\n    # Sort the list\n    for i in \"${numbers[@]}\"\
    ; do\n        sorted+=($(echo \"$i\" | sort -n))\n    done\n\n    # Get the min\
    \ and max\n    min=${sorted[0]}\n    max=${sorted[-1]}\n\n    # Get the range\n\
    \    range=$(echo \"$max - $min\" | bc)\n\n    # Rescale the numbers\n    for\
    \ i in \"${sorted[@]}\"; do\n        rescaled_number=$(echo \"($i - $min) / $range\"\
    \ | bc -l)\n        rescaled+=($rescaled_number)\n    done\n\n    # Sort the rescaled\
    \ numbers\n    for i in \"${rescaled[@]}\"; do\n        sorted_rescaled+=($(echo\
    \ \"$i\" | sort -n))\n    done\n\n    # Print the rescaled numbers\n    for i\
    \ in \"${sorted_rescaled[@]}\"; do\n        echo -n \"\\\"$i\\\"\"\n        n=$((n+1))\n\
    \        if [ $n -lt ${#sorted_rescaled[@]} ]; then\n            echo -n \", \"\
    \n        fi\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a arr=(\"$@\")\n    local min=${arr[0]}\n\
    \    local max=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if [[ $i < $min\
    \ ]]; then\n            min=$i\n        fi\n        if [[ $i > $max ]]; then\n\
    \            max=$i\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc)\n    local res=\"\"\n    for i in \"${arr[@]}\"; do\n        local scaled=$(echo\
    \ \"($i - $min) / $range\" | bc -l)\n        res=\"$res \\\"$scaled\\\"\"\n  \
    \  done\n    echo \"[$res]\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"\
    ; do\n        echo $(echo \"($i - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n\
    \        fi\n        if (( $(echo \"$n > $max\" | bc -l) )); then\n          \
    \  max=$n\n        fi\n    done\n    for n in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019978
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=($1)\n    local min=${list[0]}\n \
    \   local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled=()\n\
    \    for i in \"${list[@]}\"; do\n        local rescaled_i=$(echo \"($i - $min)\
    \ / $range\" | bc -l)\n        rescaled+=($rescaled_i)\n    done\n    echo \"\
    ${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=($1)\n    local min=${list[0]}\n \
    \   local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    for i in \"${list[@]}\"; do\n        echo -n \"\\\"$(echo \"scale=2;\
    \ ($i - $min) / ($max - $min)\" | bc -l)\\\" \"\n    done\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i\n    for\
    \ i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${numbers[@]}\"\
    ; do\n        rescaled_numbers+=($(echo \"scale=2; ($i - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i\n    for\
    \ i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"($i - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local diff=$(echo \"$max - $min\"\
    \ | bc -l)\n    local result=\"\"\n    for number in ${numbers[@]}; do\n     \
    \   local scaled=$(echo \"($number - $min) / $diff\" | bc -l)\n        result=\"\
    $result \\\"$scaled\\\"\"\n    done\n    echo \"[$result]\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local result=\"\"\n    for number in ${numbers[@]}; do\n     \
    \   local scaled=$(echo \"($number - $min) / $range\" | bc -l)\n        result=\"\
    $result $scaled\"\n    done\n    echo $result\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($number - $min)\
    \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in \"${numbers[@]}\"; do\n        echo $(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($number - $min)\
    \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -n arr=$1\n    local min=${arr[0]}\n  \
    \  local max=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if (( $(echo \"\
    $i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\";\
    \ do\n        echo $(echo \"($i - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_b5udi6z.sh: line 9: local: `2.0 49.9'': invalid variable name
    for name reference

    (standard_in) 2: syntax error

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for i in \"${list[@]}\"; do\n        rescaled+=($(echo \"($i - $min) / $range\"\
    \ | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=$1\n    local min=$(echo \"$numbers\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$numbers\" | tr\
    \ ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n        local rescaled=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        echo \"\\\"$rescaled\\\"\"\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers\n    local -a rescaled\n   \
    \ local min\n    local max\n    local i\n    local n\n    local rescaled_n\n \
    \   numbers=($1)\n    min=${numbers[0]}\n    max=${numbers[0]}\n    for n in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$n < $min\" | bc -l) )); then\n  \
    \          min=$n\n        fi\n        if (( $(echo \"$n > $max\" | bc -l) ));\
    \ then\n            max=$n\n        fi\n    done\n    for i in \"${!numbers[@]}\"\
    ; do\n        n=${numbers[$i]}\n        rescaled_n=$(echo \"($n - $min) / ($max\
    \ - $min)\" | bc -l)\n        rescaled[$i]=$rescaled_n\n    done\n    echo \"\
    ${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=$1\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    echo \"$list\" | tr ' ' '\\n' | while read x; do\n        echo \"$(echo \"\
    ($x - $min) / $range\" | bc -l)\"\n    done | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=($1)\n    local min=${list[0]}\n \
    \   local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled=()\n\
    \    for i in \"${list[@]}\"; do\n        local rescaled_i=$(echo \"($i - $min)\
    \ / $range\" | bc -l)\n        rescaled+=($rescaled_i)\n    done\n    echo \"\
    ${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a arr=()\n    local -a arr_rescaled=()\n\
    \    local min=0\n    local max=0\n    local range=0\n    local i=0\n    local\
    \ n=0\n    local rescaled=0\n\n    # Convert to array\n    IFS=' ' read -r -a\
    \ arr <<< \"$1\"\n\n    # Get min and max\n    min=${arr[0]}\n    max=${arr[0]}\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        if (( $(echo \"${arr[$i]} < $min\"\
    \ | bc -l) )); then\n            min=${arr[$i]}\n        fi\n        if (( $(echo\
    \ \"${arr[$i]} > $max\" | bc -l) )); then\n            max=${arr[$i]}\n      \
    \  fi\n    done\n\n    # Rescale\n    range=$(echo \"$max - $min\" | bc -l)\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        rescaled=$(echo \"(${arr[$i]}\
    \ - $min) / $range\" | bc -l)\n        arr_rescaled[$i]=$rescaled\n    done\n\n\
    \    # Convert to string\n    n=${#arr_rescaled[@]}\n    for ((i=0; i<n; i++));\
    \ do\n        echo -n \"\\\"${arr_rescaled[$i]}\\\"\"\n        if (( i < n-1 ));\
    \ then\n            echo -n \", \"\n        fi\n    done\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in \"${numbers[@]}\"; do\n        echo $(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"; do\n        if ((\
    \ $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n   \
    \     if (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n     \
    \   fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a\
    \ rescaled=()\n    for n in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"\
    ($n - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n\
    \        fi\n        if (( $(echo \"$n > $max\" | bc -l) )); then\n          \
    \  max=$n\n        fi\n    done\n    for n in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=($1)\n    local min=${list[0]}\n \
    \   local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local output=()\n\
    \    for i in \"${list[@]}\"; do\n        output+=($(echo \"($i - $min) / $range\"\
    \ | bc -l))\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local -r list=\"$1\"\n  local -r min=$(echo \"\
    $list\" | tr ' ' '\\n' | sort -n | head -n 1)\n  local -r max=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n  local -r range=$(echo \"$max - $min\"\
    \ | bc)\n  local -r scale=$(echo \"1 / $range\" | bc -l)\n  echo \"$list\" | tr\
    \ ' ' '\\n' | while read x; do\n    local -r y=$(echo \"($x - $min) * $scale\"\
    \ | bc -l)\n    echo \"\\\"$y\\\"\"\n  done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpuhwtmhsj.sh: line 15: local: y: readonly variable

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if [[ $n\
    \ -lt $min ]]; then\n            min=$n\n        fi\n        if [[ $n -gt $max\
    \ ]]; then\n            max=$n\n        fi\n    done\n    local -a rescaled\n\
    \    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"scale=2; ($n - $min)\
    \ / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpgqjb_ltv.sh: line 13: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpgqjb_ltv.sh: line 16: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpgqjb_ltv.sh: line 13: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmpgqjb_ltv.sh: line 16: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    Runtime error (func=(main), adr=29): Divide by zero

    Runtime error (func=(main), adr=30): Divide by zero

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a arr=(\"$@\")\n    local min=${arr[0]}\n\
    \    local max=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local diff=$(echo \"$max - $min\" | bc -l)\n    for i in \"${arr[@]}\"\
    ; do\n        local val=$(echo \"($i - $min) / $diff\" | bc -l)\n        echo\
    \ \"\\\"$val\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local -a numbers=($1)\n  local -a rescaled=()\n\
    \  local min=${numbers[0]}\n  local max=${numbers[0]}\n  for n in \"${numbers[@]}\"\
    ; do\n    if (( $(echo \"$n < $min\" | bc -l) )); then\n      min=$n\n    fi\n\
    \    if (( $(echo \"$n > $max\" | bc -l) )); then\n      max=$n\n    fi\n  done\n\
    \  for n in \"${numbers[@]}\"; do\n    rescaled+=($(echo \"scale=2; ($n - $min)\
    \ / ($max - $min)\" | bc -l))\n  done\n  echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local scale=$(echo \"scale=10;\
    \ 1 / ($max - $min)\" | bc -l)\n    local -a rescaled_numbers=()\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled_numbers+=($(echo \"scale=10; ($number\
    \ - $min) * $scale\" | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local -a rescaled_list=()\n\
    \    local min=${list[0]}\n    local max=${list[0]}\n    local i\n    for i in\
    \ \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n \
    \           min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
    \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
    \ - $min\" | bc -l)\n    for i in \"${list[@]}\"; do\n        rescaled_list+=($(echo\
    \ \"($i - $min) / $range\" | bc -l))\n    done\n    echo \"${rescaled_list[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if [[ $number -lt $min ]]; then\n            min=$number\n\
    \        fi\n        if [[ $number -gt $max ]]; then\n            max=$number\n\
    \        fi\n    done\n    for number in \"${numbers[@]}\"; do\n        rescaled_numbers+=($(echo\
    \ \"scale=2; ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo\
    \ \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpx3yjh9fr.sh: line 14: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpx3yjh9fr.sh: line 17: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpx3yjh9fr.sh: line 14: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmpx3yjh9fr.sh: line 17: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    Runtime error (func=(main), adr=29): Divide by zero

    Runtime error (func=(main), adr=30): Divide by zero

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local -a rescaled=()\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($number - $min)\
    \ / ($max - $min)\" | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a nums=($1)\n    local min=${nums[0]}\n\
    \    local max=${nums[0]}\n    for num in ${nums[@]}; do\n        if [[ $num <\
    \ $min ]]; then\n            min=$num\n        fi\n        if [[ $num > $max ]];\
    \ then\n            max=$num\n        fi\n    done\n    local range=$(echo \"\
    $max - $min\" | bc)\n    local -a rescaled=()\n    for num in ${nums[@]}; do\n\
    \        local rescaled_num=$(echo \"($num - $min) / $range\" | bc -l)\n     \
    \   rescaled+=($rescaled_num)\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in ${list[@]}; do\n        if (( $(echo \"\
    $i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc -l)\n    for i in ${list[@]}; do\n\
    \        echo $(echo \"($i - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for i in \"${numbers[@]}\"; do\n        if ((\
    \ $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n   \
    \     if (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n     \
    \   fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for i in\
    \ \"${numbers[@]}\"; do\n        echo -n \"\\\"$(echo \"($i - $min) / $range\"\
    \ | bc -l)\\\" \"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i=0\n   \
    \ for number in \"${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\"\
    \ | bc -l) )); then\n            min=$number\n        fi\n        if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n            max=$number\n        fi\n\
    \    done\n    for number in \"${numbers[@]}\"; do\n        rescaled_numbers[$i]=$(echo\
    \ \"scale=2; ($number - $min) / ($max - $min)\" | bc -l)\n        i=$((i+1))\n\
    \    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local list=($1)\n  local min=${list[0]}\n  local\
    \ max=${list[0]}\n  for i in \"${list[@]}\"; do\n    if (( $(echo \"$i < $min\"\
    \ | bc -l) )); then\n      min=$i\n    fi\n    if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n      max=$i\n    fi\n  done\n  local range=$(echo \"$max - $min\"\
    \ | bc -l)\n  local result=\"\"\n  for i in \"${list[@]}\"; do\n    local scaled=$(echo\
    \ \"($i - $min) / $range\" | bc -l)\n    result+=\"\\\"$scaled\\\" \"\n  done\n\
    \  echo $result\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i\n    for\
    \ i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"scale=2; ($i - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    echo \"$list\" | tr ' ' '\\n' | awk -v min=\"$min\" -v range=\"$range\" '{print\
    \ \"\\\"\" ($1 - min) / range \"\\\"\"}' | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local input=($1)\n    local min=${input[0]}\n\
    \    local max=${input[0]}\n    for i in \"${input[@]}\"; do\n        if [[ $i\
    \ < $min ]]; then\n            min=$i\n        fi\n        if [[ $i > $max ]];\
    \ then\n            max=$i\n        fi\n    done\n    local range=$(echo \"$max\
    \ - $min\" | bc)\n    local output=()\n    for i in \"${input[@]}\"; do\n    \
    \    local scaled=$(echo \"($i - $min) / $range\" | bc -l)\n        output+=(\"\
    $scaled\")\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local number\n\
    \    local rescaled_number\n    for number in \"${numbers[@]}\"; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in \"${numbers[@]}\";\
    \ do\n        rescaled_number=$(echo \"scale=2; ($number - $min) / ($max - $min)\"\
    \ | bc -l)\n        rescaled_numbers+=($rescaled_number)\n    done\n    echo \"\
    ${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if [[ $number < $min ]]; then\n            min=$number\n        fi\n      \
    \  if [[ $number > $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    for number in \"${numbers[@]}\"\
    ; do\n        echo -n \"\\\"$(echo \"($number - $min) / $range\" | bc)\\\" \"\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local -a new_list=()\n\
    \    local min=${list[0]}\n    local max=${list[0]}\n    local i\n    for i in\
    \ \"${list[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n \
    \           min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
    \ then\n            max=$i\n        fi\n    done\n    for i in \"${list[@]}\"\
    ; do\n        new_list+=($(echo \"scale=2; ($i - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo \"${new_list[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($number - $min)\
    \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"; do\n        if ((\
    \ $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n   \
    \     if (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n     \
    \   fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for n in\
    \ \"${numbers[@]}\"; do\n        echo $(echo \"($n - $min) / $range\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i=0\n   \
    \ local n=${#numbers[@]}\n    local number\n    local rescaled_number\n    for\
    \ ((i=0; i<n; i++)); do\n        number=${numbers[$i]}\n        if (( $(echo \"\
    $number < $min\" | bc -l) )); then\n            min=$number\n        fi\n    \
    \    if (( $(echo \"$number > $max\" | bc -l) )); then\n            max=$number\n\
    \        fi\n    done\n    for ((i=0; i<n; i++)); do\n        number=${numbers[$i]}\n\
    \        rescaled_number=$(echo \"scale=2; ($number - $min) / ($max - $min)\"\
    \ | bc -l)\n        rescaled[$i]=$rescaled_number\n    done\n    echo ${rescaled[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local scale=$(echo \"scale=10; 1\
    \ / ($max - $min)\" | bc -l)\n    local result=()\n    for number in ${numbers[@]};\
    \ do\n        result+=($(echo \"scale=10; ($number - $min) * $scale\" | bc -l))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -r list=\"$1\"\n    local -r min=$(echo\
    \ \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"\
    $list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max\
    \ - $min\" | bc)\n    local -r scaled_list=$(echo \"$list\" | tr ' ' '\\n' | awk\
    \ -v min=\"$min\" -v range=\"$range\" '{print \"\\\"\" ($1 - min) / range \"\\\
    \"\"}')\n    echo \"[$scaled_list]\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    local\
    \ range=$(echo \"$max - $min\" | bc -l)\n    for number in \"${numbers[@]}\";\
    \ do\n        local rescaled_number=$(echo \"($number - $min) / $range\" | bc\
    \ -l)\n        rescaled+=(\"$rescaled_number\")\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local rescaled_numbers=()\n    for number in ${numbers[@]}; do\n\
    \        local rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n\
    \        rescaled_numbers+=($rescaled_number)\n    done\n    echo ${rescaled_numbers[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local rescaled=()\n    for number in \"${numbers[@]}\"; do\n \
    \       rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"\
    ; do\n        echo $(echo \"($i - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local list=$1\n  local min=$(echo \"$list\" | tr\
    \ ' ' '\\n' | sort -n | head -n 1)\n  local max=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n  local range=$(echo \"$max - $min\" | bc)\n  local\
    \ rescaled_list=$(echo \"$list\" | tr ' ' '\\n' | while read x; do\n    echo \"\
    $x - $min\" | bc | awk -v range=$range '{printf \"%.2f\\n\", $1 / range}'\n  done)\n\
    \  echo \"$rescaled_list\" | tr '\\n' ' ' | sed 's/ $//'\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in ${numbers[@]}; do\n  \
    \      rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n \
    \   echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=($1)\n    local min=${list[0]}\n \
    \   local max=${list[0]}\n    for i in ${list[@]}; do\n        if (( $(echo \"\
    $i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
    \    local diff=$(echo \"$max - $min\" | bc -l)\n    local result=()\n    for\
    \ i in ${list[@]}; do\n        local scaled=$(echo \"($i - $min) / $diff\" | bc\
    \ -l)\n        result+=($scaled)\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for i in \"${list[@]}\"; do\n        rescaled+=(\"$(echo \"($i - $min) /\
    \ $range\" | bc -l)\")\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -r list=\"$1\"\n    local -r min=$(echo\
    \ \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"\
    $list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max\
    \ - $min\" | bc)\n    echo \"$list\" | tr ' ' '\\n' | awk -v min=\"$min\" -v range=\"\
    $range\" '{print \"\\\"\" ($1 - min) / range \"\\\"\"}' | tr '\\n' ' '\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($number - $min)\
    \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local range\n \
    \   local i\n    local number\n    local rescaled_number\n\n    # Find min and\
    \ max\n    for i in \"${!numbers[@]}\"; do\n        number=${numbers[$i]}\n  \
    \      if [[ $number < $min ]]; then\n            min=$number\n        fi\n  \
    \      if [[ $number > $max ]]; then\n            max=$number\n        fi\n  \
    \  done\n\n    # Rescale\n    range=$(echo \"$max - $min\" | bc)\n    for i in\
    \ \"${!numbers[@]}\"; do\n        number=${numbers[$i]}\n        rescaled_number=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        rescaled_numbers[$i]=$rescaled_number\n\
    \    done\n\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ \"$number\" < \"$min\" ]]; then\n            min=$number\n        fi\n  \
    \      if [[ \"$number\" > \"$max\" ]]; then\n            max=$number\n      \
    \  fi\n    done\n    local range=$(echo \"$max - $min\" | bc)\n    for number\
    \ in ${numbers[@]}; do\n        local rescaled=$(echo \"($number - $min) / $range\"\
    \ | bc -l)\n        echo \"\\\"$rescaled\\\"\"\n    done\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in ${numbers[@]}; do\n        echo $(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local result=\"\
    \"\n    for i in \"${list[@]}\"; do\n        local value=$(echo \"($i - $min)\
    \ / $range\" | bc -l)\n        result=\"$result \\\"$value\\\"\"\n    done\n \
    \   echo \"[$result]\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local rescaled=()\n    for number in ${numbers[@]}; do\n     \
    \   local rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n    \
    \    rescaled+=($rescaled_number)\n    done\n    echo \"${rescaled[@]}\"\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n\
    \        rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local rescaled_list=$(echo \"$list\" | tr ' ' '\\n' | awk -v min=\"$min\"\
    \ -v range=\"$range\" '{print ($1 - min) / range}')\n    echo \"$rescaled_list\"\
    \ | tr '\\n' ' ' | sed 's/^ *//g' | sed 's/ *$//g'\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=($1)\n    local min=${list[0]}\n \
    \   local max=${list[0]}\n    for i in ${list[@]}; do\n        if (( $(echo \"\
    $i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc -l)\n    for i in ${list[@]}; do\n\
    \        echo $(echo \"($i - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers=()\n\
    \    local -i number_count=${#numbers[@]}\n    local -i i\n    local -r min_number=$(min\
    \ \"${numbers[@]}\")\n    local -r max_number=$(max \"${numbers[@]}\")\n    local\
    \ -r range=$(echo \"$max_number - $min_number\" | bc -l)\n    for ((i=0; i<number_count;\
    \ i++)); do\n        local -r number=${numbers[$i]}\n        local -r rescaled_number=$(echo\
    \ \"($number - $min_number) / $range\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpnf5si8zl.sh: line 13: min: command not found

    /tmp/tmpnf5si8zl.sh: line 14: max: command not found

    (standard_in) 2: syntax error

    (standard_in) 1: syntax error

    /tmp/tmpnf5si8zl.sh: line 17: local: number: readonly variable

    (standard_in) 1: syntax error

    /tmp/tmpnf5si8zl.sh: line 18: local: rescaled_number: readonly variable

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local input=($1)\n    local min=${input[0]}\n\
    \    local max=${input[0]}\n    for i in \"${input[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local output=()\n\
    \    for i in \"${input[@]}\"; do\n        local scaled=$(echo \"($i - $min) /\
    \ $range\" | bc -l)\n        output+=($scaled)\n    done\n    echo ${output[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local min=$(echo \"$1\" | tr ' ' '\\n' | sort -n\
    \ | head -n 1)\n  local max=$(echo \"$1\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\
    \  local range=$(echo \"$max - $min\" | bc)\n  local result=\"\"\n  for x in $1;\
    \ do\n    local scaled=$(echo \"($x - $min) / $range\" | bc -l)\n    result=\"\
    $result $(printf \"%0.2f\" $scaled)\"\n  done\n  echo \"[$(echo \"$result\" |\
    \ tr ' ' ',')]\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local input=\"$1\"\n    local min=$(echo \"$input\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$input\" | tr\
    \ ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local output=\"\"\n    for i in $input; do\n        local scaled=$(echo \"\
    ($i - $min) / $range\" | bc -l)\n        output=\"$output $(printf '%.2f' $scaled)\"\
    \n    done\n    echo $output\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local rescaled=()\n    for number in ${numbers[@]}; do\n     \
    \   local rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n    \
    \    rescaled+=($rescaled_number)\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local result=\"\"\n    for x in $list; do\n        local scaled=$(echo \"\
    ($x - $min) / $range\" | bc -l)\n        result=\"$result $(printf \"%0.2f\" $scaled)\"\
    \n    done\n    echo \"$result\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i\n    for\
    \ i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    local range=$(echo\
    \ \"$max - $min\" | bc -l)\n    for i in \"${numbers[@]}\"; do\n        rescaled_numbers+=($(echo\
    \ \"($i - $min) / $range\" | bc -l))\n    done\n    echo ${rescaled_numbers[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($number - $min)\
    \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=$(echo \"${numbers[@]}\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"${numbers[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\"\
    \ | bc)\n    local rescaled=()\n    for number in \"${numbers[@]}\"; do\n    \
    \    local rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n   \
    \     rescaled+=($rescaled_number)\n    done\n    echo \"${rescaled[@]}\"\n}\n\
    \ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local input=($1)\n    local min=${input[0]}\n\
    \    local max=${input[0]}\n    for i in \"${input[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${input[@]}\"\
    ; do\n        echo $(echo \"($i - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled_list=()\n\
    \    for i in \"${list[@]}\"; do\n        rescaled_list+=($(echo \"($i - $min)\
    \ / $range\" | bc -l))\n    done\n    echo \"${rescaled_list[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if [[ $number < $min ]]; then\n            min=$number\n\
    \        fi\n        if [[ $number > $max ]]; then\n            max=$number\n\
    \        fi\n    done\n    for number in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($number - $min) / ($max - $min)\" | bc -l))\n    done\n    echo\
    \ \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=\"$1\"\n    local min=$(echo \"\
    $numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$numbers\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\"\
    \ | bc)\n    echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n      \
    \  echo \"$number - $min\" | bc | awk -v range=\"$range\" '{printf \"%.2f\\n\"\
    , $1 / range}'\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local -r numbers=\"$1\"\n  local -r min=$(echo\
    \ \"$numbers\" | tr ' ' '\\n' | sort -n | head -n 1)\n  local -r max=$(echo \"\
    $numbers\" | tr ' ' '\\n' | sort -n | tail -n 1)\n  local -r range=$(echo \"$max\
    \ - $min\" | bc)\n  echo \"$numbers\" | tr ' ' '\\n' | while read number; do\n\
    \    echo \"$(echo \"($number - $min) / $range\" | bc -l)\"\n  done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers\n    local -a rescaled\n   \
    \ local min\n    local max\n    local range\n    local i\n    numbers=($1)\n \
    \   min=${numbers[0]}\n    max=${numbers[0]}\n    for i in \"${numbers[@]}\";\
    \ do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n\
    \        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n          \
    \  max=$i\n        fi\n    done\n    range=$(echo \"$max - $min\" | bc -l)\n \
    \   for i in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"($i - $min) /\
    \ $range\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local -a numbers=($1)\n  local min=${numbers[0]}\n\
    \  local max=${numbers[0]}\n  for number in \"${numbers[@]}\"; do\n    if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n      min=$number\n    fi\n    if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n      max=$number\n    fi\n  done\n  local\
    \ range=$(echo \"$max - $min\" | bc -l)\n  for number in \"${numbers[@]}\"; do\n\
    \    echo $(echo \"($number - $min) / $range\" | bc -l)\n  done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local min=$(echo \"$1\" | tr ' ' '\\n' | sort\
    \ -n | head -n 1)\n    local max=$(echo \"$1\" | tr ' ' '\\n' | sort -n | tail\
    \ -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo \"$1\" | tr '\
    \ ' '\\n' | while read x; do\n        echo \"$(echo \"($x - $min) / $range\" |\
    \ bc -l)\"\n    done | tr '\\n' ' '\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=($1)\n    local min=${list[0]}\n \
    \   local max=${list[0]}\n    for i in ${list[@]}; do\n        if (( $(echo \"\
    $i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled=()\n    for\
    \ i in ${list[@]}; do\n        local rescaled_i=$(echo \"($i - $min) / $range\"\
    \ | bc -l)\n        rescaled+=($rescaled_i)\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number < $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number > $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    local result=\"\"\n    for\
    \ number in ${numbers[@]}; do\n        local rescaled=$(echo \"($number - $min)\
    \ / $range\" | bc -l)\n        result+=\"\\\"$rescaled\\\" \"\n    done\n    echo\
    \ $result\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local rescaled_list=$(echo \"$list\" | tr ' ' '\\n' | while read x; do\n\
    \        echo \"$x - $min\" | bc\n    done | while read x; do\n        echo \"\
    $x / $range\" | bc\n    done)\n    echo \"$rescaled_list\" | tr '\\n' ' ' | sed\
    \ 's/^ *//' | sed 's/ *$//'\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a scaled_numbers\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i\n    for\
    \ i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${numbers[@]}\"\
    ; do\n        scaled_numbers+=($(echo \"scale=2; ($i - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo \"${scaled_numbers[@]}\"\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -r numbers=\"$1\"\n    local -r min=$(echo\
    \ \"$numbers\" | tr \" \" \"\\n\" | sort -n | head -n 1)\n    local -r max=$(echo\
    \ \"$numbers\" | tr \" \" \"\\n\" | sort -n | tail -n 1)\n    local -r range=$(echo\
    \ \"$max - $min\" | bc)\n    echo \"$numbers\" | tr \" \" \"\\n\" | while read\
    \ -r number; do\n        local -r scaled=$(echo \"($number - $min) / $range\"\
    \ | bc -l)\n        echo \"\\\"$scaled\\\"\"\n    done\n}\n\ncandidate() {\n \
    \   rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0\
    \ 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n\
    \    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n\
    \    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n\
    \    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp5qqvoc9x.sh: line 14: local: scaled: readonly variable

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a arr=($1)\n    local min=${arr[0]}\n\
    \    local max=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local scale=$(echo\
    \ \"1.0 / $range\" | bc -l)\n    local -a out=()\n    for i in \"${arr[@]}\";\
    \ do\n        out+=($(echo \"($i - $min) * $scale\" | bc -l))\n    done\n    echo\
    \ \"${out[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for i in \"${list[@]}\"\
    ; do\n        echo $(echo \"($i - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local result=\"\"\n    for element in $list; do\n        local scaled=$(echo\
    \ \"($element - $min) / $range\" | bc -l)\n        result=\"$result $scaled\"\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($number - $min)\
    \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number -lt $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number -gt $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    for number in ${numbers[@]};\
    \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done\n}\n\
    \ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfkqzvxwz.sh: line 13: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpfkqzvxwz.sh: line 16: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpfkqzvxwz.sh: line 13: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmpfkqzvxwz.sh: line 16: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    Runtime error (func=(main), adr=13): Divide by zero

    Runtime error (func=(main), adr=14): Divide by zero

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if [[ $n\
    \ -lt $min ]]; then\n            min=$n\n        fi\n        if [[ $n -gt $max\
    \ ]]; then\n            max=$n\n        fi\n    done\n    local range=$(echo \"\
    $max - $min\" | bc)\n    for n in ${numbers[@]}; do\n        echo $(echo \"($n\
    \ - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpve2wzr7z.sh: line 13: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpve2wzr7z.sh: line 16: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpve2wzr7z.sh: line 13: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmpve2wzr7z.sh: line 16: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    Runtime error (func=(main), adr=13): Divide by zero

    Runtime error (func=(main), adr=14): Divide by zero

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=$1\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local rescaled_list=$(echo \"$list\" | tr ' ' '\\n' | while read x; do echo\
    \ \"$x - $min\" | bc; done)\n    local rescaled_list=$(echo \"$rescaled_list\"\
    \ | tr ' ' '\\n' | while read x; do echo \"$x / $range\" | bc; done)\n    echo\
    \ \"$rescaled_list\" | tr '\\n' ' '\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in \"${numbers[@]}\"; do\n        echo -n \"\\\"$(echo\
    \ \"($number - $min) / $range\" | bc -l)\\\" \"\n    done\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    echo \"$list\" | tr ' ' '\\n' | while read x; do\n        local y=$(echo\
    \ \"($x - $min) / $range\" | bc -l)\n        echo -n \"\\\"$y\\\" \"\n    done\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i\n    for\
    \ i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"scale=2; ($i - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local numbers=($1)\n  local min=${numbers[0]}\n\
    \  local max=${numbers[0]}\n  for number in ${numbers[@]}; do\n    if (( $(echo\
    \ \"$number < $min\" | bc -l) )); then\n      min=$number\n    fi\n    if (( $(echo\
    \ \"$number > $max\" | bc -l) )); then\n      max=$number\n    fi\n  done\n  local\
    \ range=$(echo \"$max - $min\" | bc -l)\n  local rescaled=()\n  for number in\
    \ ${numbers[@]}; do\n    local rescaled_number=$(echo \"($number - $min) / $range\"\
    \ | bc -l)\n    rescaled+=($rescaled_number)\n  done\n  echo ${rescaled[@]}\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers\n    local -a rescaled_numbers\n\
    \    local min\n    local max\n    local range\n    local number\n    local rescaled_number\n\
    \    local i\n\n    numbers=($1)\n    min=${numbers[0]}\n    max=${numbers[0]}\n\
    \    for number in \"${numbers[@]}\"; do\n        if [[ $number < $min ]]; then\n\
    \            min=$number\n        fi\n        if [[ $number > $max ]]; then\n\
    \            max=$number\n        fi\n    done\n    range=$(echo \"$max - $min\"\
    \ | bc)\n    for i in \"${!numbers[@]}\"; do\n        number=${numbers[$i]}\n\
    \        rescaled_number=$(echo \"($number - $min) / $range\" | bc -l)\n     \
    \   rescaled_numbers[$i]=$rescaled_number\n    done\n    echo \"${rescaled_numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local factor=$(echo \"scale=10;\
    \ 1 / ($max - $min)\" | bc -l)\n    local -a rescaled=()\n    for number in \"\
    ${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=10; ($number - $min) *\
    \ $factor\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a arr=()\n    local -a arr_rescaled=()\n\
    \    local min=0\n    local max=0\n    local range=0\n    local i=0\n    local\
    \ rescaled=0\n    local -a arr=($1)\n    min=${arr[0]}\n    max=${arr[0]}\n  \
    \  for i in \"${arr[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    range=$(echo \"\
    $max - $min\" | bc -l)\n    for i in \"${arr[@]}\"; do\n        rescaled=$(echo\
    \ \"($i - $min) / $range\" | bc -l)\n        arr_rescaled+=($rescaled)\n    done\n\
    \    echo \"${arr_rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local input=($1)\n  local min=${input[0]}\n  local\
    \ max=${input[0]}\n  local output=()\n  for i in \"${input[@]}\"; do\n    if ((\
    \ $(echo \"$i < $min\" | bc -l) )); then\n      min=$i\n    fi\n    if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n      max=$i\n    fi\n  done\n  for i in \"\
    ${input[@]}\"; do\n    output+=($(echo \"scale=2; ($i - $min) / ($max - $min)\"\
    \ | bc -l))\n  done\n  echo \"${output[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    for number in ${numbers[@]}; do\n\
    \        echo $(echo \"scale=2; ($number - $min) / ($max - $min)\" | bc -l)\n\
    \    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n\
    \        rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=($1)\n    local min=${list[0]}\n \
    \   local max=${list[0]}\n    for i in ${list[@]}; do\n        if (( $(echo \"\
    $i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc -l)\n    local result=\"\"\n    for\
    \ i in ${list[@]}; do\n        local scaled=$(echo \"($i - $min) / $range\" |\
    \ bc -l)\n        result=\"$result $(printf \"%.2f\" $scaled)\"\n    done\n  \
    \  echo $result\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local rescaled_list=$(echo \"$list\" | tr ' ' '\\n' | while read x; do\n\
    \        echo \"scale=2; ($x - $min) / $range\" | bc\n    done)\n    echo \"$rescaled_list\"\
    \ | tr '\\n' ' '\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local -a rescaled=()\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($number - $min)\
    \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -r numbers=($1)\n    local -r min=${numbers[0]}\n\
    \    local -r max=${numbers[-1]}\n    local -r range=$(echo \"$max - $min\" |\
    \ bc)\n    local -r scale=$(echo \"1 / $range\" | bc -l)\n    local -r offset=$(echo\
    \ \"-$min * $scale\" | bc -l)\n    local -r rescaled=$(echo \"$1\" | tr ' ' '\\\
    n' | awk -v scale=$scale -v offset=$offset '{print $1 * scale + offset}')\n  \
    \  echo \"$rescaled\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local max=${numbers[0]}\n\
    \    local min=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n        if\
    \ (( $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"($n - $min) / $range\"\
    \ | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local list=$1\n  local min=$(echo \"$list\" | tr\
    \ ' ' '\\n' | sort -n | head -n 1)\n  local max=$(echo \"$list\" | tr ' ' '\\\
    n' | sort -n | tail -n 1)\n  local range=$(echo \"$max - $min\" | bc)\n  local\
    \ result=\"\"\n  for x in $list; do\n    local scaled=$(echo \"($x - $min) / $range\"\
    \ | bc -l)\n    result=\"$result $(printf \"%0.2f\" $scaled)\"\n  done\n  echo\
    \ $result\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a arr=(\"$@\")\n    local min=${arr[0]}\n\
    \    local max=${arr[0]}\n    for i in \"${arr[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local scale=$(echo \"scale=2; 1 / ($max - $min)\" | bc -l)\n  \
    \  local -a rescaled=()\n    for i in \"${arr[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($i - $min) * $scale\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '(standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -r list=\"$1\"\n    local -r min=$(echo\
    \ \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"\
    $list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max\
    \ - $min\" | bc)\n    echo \"$list\" | tr ' ' '\\n' | awk -v min=\"$min\" -v range=\"\
    $range\" '{print \"\\\"\" ($1 - min) / range \"\\\"\"}' | tr '\\n' ' '\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -i n=${#numbers[@]}\n\
    \    local -i i\n    local -i min=${numbers[0]}\n    local -i max=${numbers[0]}\n\
    \    for ((i=1; i<n; i++)); do\n        if (( ${numbers[i]} < min )); then\n \
    \           min=${numbers[i]}\n        fi\n        if (( ${numbers[i]} > max ));\
    \ then\n            max=${numbers[i]}\n        fi\n    done\n    local -i range=$((max\
    \ - min))\n    local -i number\n    local -i rescaled\n    for ((i=0; i<n; i++));\
    \ do\n        number=${numbers[i]}\n        rescaled=$(((number - min) * 100 /\
    \ range))\n        numbers[i]=$(printf \"%0.2f\" $(bc -l <<< \"scale=2; $rescaled\
    \ / 100\"))\n    done\n    echo \"${numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2y02thd1.sh: line 12: local: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in \"${numbers[@]}\"; do\n        local rescaled=$(echo\
    \ \"($number - $min) / $range\" | bc -l)\n        echo -n \"\\\"$rescaled\\\"\
    \ \"\n    done\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local result=\"\"\n    for x in $list; do\n        local scaled=$(echo \"\
    ($x - $min) / $range\" | bc -l)\n        result=\"$result $scaled\"\n    done\n\
    \    echo \"$result\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    for number\
    \ in \"${numbers[@]}\"; do\n        rescaled+=($(echo \"scale=2; ($number - $min)\
    \ / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number < $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number > $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    for number in ${numbers[@]};\
    \ do\n        echo $(echo \"($number - $min) / $range\" | bc -l)\n    done\n}\n\
    \ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number -lt $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number -gt $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    local -a rescaled=()\n    for\
    \ number in ${numbers[@]}; do\n        local rescaled_number=$(echo \"($number\
    \ - $min) / $range\" | bc -l)\n        rescaled+=($rescaled_number)\n    done\n\
    \    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmppfqcpcis.sh: line 13: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmppfqcpcis.sh: line 16: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmppfqcpcis.sh: line 13: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmppfqcpcis.sh: line 16: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    Runtime error (func=(main), adr=13): Divide by zero

    Runtime error (func=(main), adr=14): Divide by zero

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i\n    for\
    \ i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${numbers[@]}\"\
    ; do\n        rescaled_numbers+=($(echo \"scale=2; ($i - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if [[ $n\
    \ < $min ]]; then\n            min=$n\n        fi\n        if [[ $n > $max ]];\
    \ then\n            max=$n\n        fi\n    done\n    local range=$(echo \"$max\
    \ - $min\" | bc)\n    local rescaled=()\n    for n in ${numbers[@]}; do\n    \
    \    local r=$(echo \"($n - $min) / $range\" | bc -l)\n        rescaled+=($r)\n\
    \    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\"\
    \ ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local rescaled=()\n\
    \    for n in ${numbers[@]}; do\n        rescaled+=($(echo \"($n - $min) / $range\"\
    \ | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local -a numbers=($1)\n  local min=${numbers[0]}\n\
    \  local max=${numbers[0]}\n  for n in \"${numbers[@]}\"; do\n    if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n      min=$n\n    fi\n    if (( $(echo \"$n\
    \ > $max\" | bc -l) )); then\n      max=$n\n    fi\n  done\n  local range=$(echo\
    \ \"$max - $min\" | bc -l)\n  for n in \"${numbers[@]}\"; do\n    echo -n \"\\\
    \"$(echo \"($n - $min) / $range\" | bc -l)\\\" \"\n  done\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if [[ \"$number\" < \"$min\" ]]; then\n         \
    \   min=$number\n        fi\n        if [[ \"$number\" > \"$max\" ]]; then\n \
    \           max=$number\n        fi\n    done\n    for number in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"scale=2; ($number - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in ${numbers[@]}; do\n  \
    \      rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n \
    \   echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for number in \"\
    ${numbers[@]}\"; do\n        if (( $(echo \"$number < $min\" | bc -l) )); then\n\
    \            min=$number\n        fi\n        if (( $(echo \"$number > $max\"\
    \ | bc -l) )); then\n            max=$number\n        fi\n    done\n    local\
    \ range=$(echo \"$max - $min\" | bc -l)\n    for number in \"${numbers[@]}\";\
    \ do\n        local rescaled_number=$(echo \"($number - $min) / $range\" | bc\
    \ -l)\n        rescaled_numbers+=($rescaled_number)\n    done\n    echo \"${rescaled_numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local min=$(echo \"$1\" | tr ' ' '\\n' | sort\
    \ -n | head -n 1)\n    local max=$(echo \"$1\" | tr ' ' '\\n' | sort -n | tail\
    \ -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    echo \"$1\" | tr '\
    \ ' '\\n' | while read x; do\n        local scaled=$(echo \"($x - $min) / $range\"\
    \ | bc -l)\n        echo -n \"\\\"$scaled\\\" \"\n    done\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers\n\
    \    local min_number=${numbers[0]}\n    local max_number=${numbers[0]}\n    local\
    \ number\n    local rescaled_number\n    for number in \"${numbers[@]}\"; do\n\
    \        if (( $(echo \"$number < $min_number\" | bc -l) )); then\n          \
    \  min_number=$number\n        fi\n        if (( $(echo \"$number > $max_number\"\
    \ | bc -l) )); then\n            max_number=$number\n        fi\n    done\n  \
    \  for number in \"${numbers[@]}\"; do\n        rescaled_number=$(echo \"scale=2;\
    \ ($number - $min_number) / ($max_number - $min_number)\" | bc -l)\n        rescaled_numbers+=($rescaled_number)\n\
    \    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i\n    for\
    \ i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${numbers[@]}\"\
    ; do\n        rescaled_numbers+=($(echo \"scale=2; ($i - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n\
    \        rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local min=$(echo \"$1\" | tr ' ' '\\n' | sort -n\
    \ | head -n 1)\n  local max=$(echo \"$1\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\
    \  local range=$(echo \"$max - $min\" | bc)\n  local result=\"\"\n  for x in $1;\
    \ do\n    local rescaled=$(echo \"($x - $min) / $range\" | bc -l)\n    result=\"\
    $result $(printf \"%0.2f\" $rescaled)\"\n  done\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a arr=()\n    local min=0\n    local max=0\n\
    \    local i=0\n    local x=0\n    local y=0\n    local -a res=()\n    local -a\
    \ arr=($1)\n    min=${arr[0]}\n    max=${arr[0]}\n    for i in \"${arr[@]}\";\
    \ do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n\
    \        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n          \
    \  max=$i\n        fi\n    done\n    for i in \"${arr[@]}\"; do\n        x=$(echo\
    \ \"scale=2; ($i - $min) / ($max - $min)\" | bc -l)\n        res+=($x)\n    done\n\
    \    echo \"${res[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local result=\"\"\n    for x in $list; do\n        local scaled=$(echo \"\
    ($x - $min) / $range\" | bc -l)\n        result=\"$result $scaled\"\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local min=$(echo \"$1\" | tr ' ' '\\n' | sort\
    \ -n | head -n 1)\n    local max=$(echo \"$1\" | tr ' ' '\\n' | sort -n | tail\
    \ -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n    local result=\"\"\n\
    \    for i in $1; do\n        local scaled=$(echo \"($i - $min) / $range\" | bc\
    \ -l)\n        result=\"$result $scaled\"\n    done\n    echo \"$result\"\n}\n\
    \ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if (( $(echo\
    \ \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n        if\
    \ (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    for n in ${numbers[@]};\
    \ do\n        echo $(echo \"($n - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local rescaled_list=$(echo \"$list\" | tr ' ' '\\n' | while read x; do\n\
    \        echo \"$(echo \"($x - $min) / $range\" | bc -l)\"\n    done)\n    echo\
    \ \"$rescaled_list\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local min=$(echo \"$1\" | tr ' ' '\\n' | sort -n\
    \ | head -n 1)\n  local max=$(echo \"$1\" | tr ' ' '\\n' | sort -n | tail -n 1)\n\
    \  local range=$(echo \"$max - $min\" | bc)\n  local result=\"\"\n  for i in $1;\
    \ do\n    local scaled=$(echo \"($i - $min) / $range\" | bc -l)\n    result=\"\
    $result \\\"$scaled\\\"\"\n  done\n  echo \"[$result]\"\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in \"${numbers[@]}\"; do\n        echo $(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -r list=\"$1\"\n    local -r min=$(echo\
    \ \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n    local -r max=$(echo \"\
    $list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local -r range=$(echo \"$max\
    \ - $min\" | bc)\n    echo \"$list\" | tr ' ' '\\n' | awk -v min=\"$min\" -v range=\"\
    $range\" '{print \"\\\"\" ($1 - min) / range \"\\\"\"}' | tr '\\n' ' '\n}\n\n\
    candidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a list=($1)\n    local min=${list[0]}\n\
    \    local max=${list[0]}\n    for i in \"${list[@]}\"; do\n        if (( $(echo\
    \ \"$i < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if\
    \ (( $(echo \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n\
    \    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local -a rescaled=()\n\
    \    for i in \"${list[@]}\"; do\n        rescaled+=($(echo \"($i - $min) / $range\"\
    \ | bc -l))\n    done\n    echo ${rescaled[@]}\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled\n\
    \    local max=${numbers[0]}\n    local min=${numbers[0]}\n    for n in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n\
    \        fi\n        if (( $(echo \"$n < $min\" | bc -l) )); then\n          \
    \  min=$n\n        fi\n    done\n    for n in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local input_list=($1)\n    local min=${input_list[0]}\n\
    \    local max=${input_list[0]}\n    local output_list=()\n    for i in \"${input_list[@]}\"\
    ; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n            min=$i\n\
    \        fi\n        if (( $(echo \"$i > $max\" | bc -l) )); then\n          \
    \  max=$i\n        fi\n    done\n    for i in \"${input_list[@]}\"; do\n     \
    \   output_list+=(\"$(echo \"scale=2; ($i - $min) / ($max - $min)\" | bc -l)\"\
    )\n    done\n    echo \"${output_list[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=$1\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local output=\"\"\n    for i in $list; do\n        local scaled=$(echo \"\
    ($i - $min) / $range\" | bc -l)\n        output=\"$output $scaled\"\n    done\n\
    \    echo $output\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i\n    for\
    \ i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${numbers[@]}\"\
    ; do\n        rescaled_numbers+=($(echo \"scale=2; ($i - $min) / ($max - $min)\"\
    \ | bc -l))\n    done\n    echo \"${rescaled_numbers[@]}\"\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n\
    \        fi\n        if (( $(echo \"$n > $max\" | bc -l) )); then\n          \
    \  max=$n\n        fi\n    done\n    for n in \"${numbers[@]}\"; do\n        rescaled+=($(echo\
    \ \"scale=2; ($n - $min) / ($max - $min)\" | bc -l))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019978
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number -lt $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number -gt $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    for number in ${numbers[@]};\
    \ do\n        local rescaled=$(echo \"($number - $min) / $range\" | bc -l)\n \
    \       echo \"\\\"$rescaled\\\"\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpii912ivf.sh: line 13: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmpii912ivf.sh: line 16: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmpii912ivf.sh: line 13: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmpii912ivf.sh: line 16: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    Runtime error (func=(main), adr=13): Divide by zero

    Runtime error (func=(main), adr=14): Divide by zero

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local -a list=($1)\n  local min=${list[0]}\n  local\
    \ max=${list[0]}\n  for i in \"${list[@]}\"; do\n    if [[ $i < $min ]]; then\n\
    \      min=$i\n    fi\n    if [[ $i > $max ]]; then\n      max=$i\n    fi\n  done\n\
    \  local range=$(echo \"$max - $min\" | bc)\n  local -a result=()\n  for i in\
    \ \"${list[@]}\"; do\n    local scaled=$(echo \"($i - $min) / $range\" | bc -l)\n\
    \    result+=(\"$scaled\")\n  done\n  echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"; do\n        if ((\
    \ $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n        fi\n   \
    \     if (( $(echo \"$n > $max\" | bc -l) )); then\n            max=$n\n     \
    \   fi\n    done\n    local range=$(echo \"$max - $min\" | bc -l)\n    local result=\"\
    \"\n    for n in \"${numbers[@]}\"; do\n        local rescaled=$(echo \"($n -\
    \ $min) / $range\" | bc -l)\n        result=\"$result \\\"$rescaled\\\"\"\n  \
    \  done\n    echo \"[$result]\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ [[ $number -lt $min ]]; then\n            min=$number\n        fi\n        if\
    \ [[ $number -gt $max ]]; then\n            max=$number\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc)\n    for number in ${numbers[@]};\
    \ do\n        echo \"$(echo \"($number - $min) / $range\" | bc -l)\"\n    done\n\
    }\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\"\
    ) = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5\
    \ 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0\
    \ 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0\
    \ 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5cqojmsq.sh: line 13: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmp5cqojmsq.sh: line 16: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmp5cqojmsq.sh: line 13: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmp5cqojmsq.sh: line 16: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    Runtime error (func=(main), adr=13): Divide by zero

    Runtime error (func=(main), adr=14): Divide by zero

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    local -a rescaled=()\n    for number in \"${numbers[@]}\"; do\n\
    \        rescaled+=($(echo \"($number - $min) / $range\" | bc -l))\n    done\n\
    \    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in \"${numbers[@]}\"; do\n      \
    \  if (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n\
    \        fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n     \
    \       max=$number\n        fi\n    done\n    local range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for number in \"${numbers[@]}\"; do\n        echo $(echo \"($number\
    \ - $min) / $range\" | bc -l)\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled_numbers=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    for n in \"${numbers[@]}\"\
    ; do\n        if (( $(echo \"$n < $min\" | bc -l) )); then\n            min=$n\n\
    \        fi\n        if (( $(echo \"$n > $max\" | bc -l) )); then\n          \
    \  max=$n\n        fi\n    done\n    for n in \"${numbers[@]}\"; do\n        local\
    \ rescaled_n=$(echo \"scale=2; ($n - $min) / ($max - $min)\" | bc -l)\n      \
    \  rescaled_numbers+=(\"$rescaled_n\")\n    done\n    echo \"${rescaled_numbers[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for n in ${numbers[@]}; do\n        if [[ $n\
    \ -lt $min ]]; then\n            min=$n\n        fi\n        if [[ $n -gt $max\
    \ ]]; then\n            max=$n\n        fi\n    done\n    local range=$(echo \"\
    $max - $min\" | bc)\n    for n in ${numbers[@]}; do\n        echo \"$(echo \"\
    ($n - $min) / $range\" | bc -l)\"\n    done\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp78iwayer.sh: line 13: [[: 2.0: syntax error: invalid arithmetic
    operator (error token is ".0")

    /tmp/tmp78iwayer.sh: line 16: [[: 2.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    /tmp/tmp78iwayer.sh: line 13: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    /tmp/tmp78iwayer.sh: line 16: [[: 49.9: syntax error: invalid arithmetic operator
    (error token is ".9")

    Runtime error (func=(main), adr=13): Divide by zero

    Runtime error (func=(main), adr=14): Divide by zero

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local -r list=\"$1\"\n  local -r min=$(echo \"\
    $list\" | tr ' ' '\\n' | sort -n | head -n 1)\n  local -r max=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | tail -n 1)\n  local -r range=$(echo \"$max - $min\"\
    \ | bc)\n  local -r scale=$(echo \"1 / $range\" | bc -l)\n  local -r offset=$(echo\
    \ \"-$min * $scale\" | bc -l)\n  echo \"$list\" | tr ' ' '\\n' |\n    while read\
    \ -r x; do\n      echo \"$(echo \"$x * $scale + $offset\" | bc -l)\"\n    done\
    \ |\n    tr '\\n' ' ' |\n    sed -e 's/\\s*$//'\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local -a rescaled_str=()\n    local min=${numbers[0]}\n    local max=${numbers[0]}\n\
    \    local i\n    for i in \"${numbers[@]}\"; do\n        if [[ $i < $min ]];\
    \ then\n            min=$i\n        fi\n        if [[ $i > $max ]]; then\n   \
    \         max=$i\n        fi\n    done\n    for i in \"${numbers[@]}\"; do\n \
    \       rescaled+=($(echo \"scale=4; ($i - $min) / ($max - $min)\" | bc -l))\n\
    \    done\n    for i in \"${rescaled[@]}\"; do\n        rescaled_str+=($(printf\
    \ \"\\\"%.4f\\\"\" $i))\n    done\n    echo \"${rescaled_str[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n  local list=\"$1\"\n  local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n  local max=$(echo \"$list\" | tr ' '\
    \ '\\n' | sort -n | tail -n 1)\n  local range=$(echo \"$max - $min\" | bc)\n \
    \ echo \"$list\" | tr ' ' '\\n' | awk -v min=\"$min\" -v range=\"$range\" '{print\
    \ \"\\\"\" ($1 - min) / range \"\\\"\"}' | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i\n    for\
    \ i in \"${numbers[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) ));\
    \ then\n            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc\
    \ -l) )); then\n            max=$i\n        fi\n    done\n    for i in \"${numbers[@]}\"\
    ; do\n        rescaled+=($(echo \"scale=2; ($i - $min) / ($max - $min)\" | bc\
    \ -l))\n    done\n    echo \"${rescaled[@]}\"\n}\n\ncandidate() {\n    rescale_to_unit\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0\
    \ 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate\
    \ \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate\
    \ \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate\
    \ \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local input=($1)\n    local min=${input[0]}\n\
    \    local max=${input[0]}\n    local range=0\n    local output=()\n    for i\
    \ in \"${input[@]}\"; do\n        if (( $(echo \"$i < $min\" | bc -l) )); then\n\
    \            min=$i\n        fi\n        if (( $(echo \"$i > $max\" | bc -l) ));\
    \ then\n            max=$i\n        fi\n    done\n    range=$(echo \"$max - $min\"\
    \ | bc -l)\n    for i in \"${input[@]}\"; do\n        output+=($(echo \"($i -\
    \ $min) / $range\" | bc -l))\n    done\n    echo \"${output[@]}\"\n}\n\ncandidate()\
    \ {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\"\
    \ ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\"\
    \ ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    echo \"$list\" | tr ' ' '\\n' | while read x; do\n        echo \"$x - $min\"\
    \ | bc | awk -v range=\"$range\" '{printf \"%.2f\", $1 / range}'\n    done | tr\
    \ '\\n' ' '\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"\
    100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") =\
    \ \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") =\
    \ \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local list=\"$1\"\n    local min=$(echo \"$list\"\
    \ | tr ' ' '\\n' | sort -n | head -n 1)\n    local max=$(echo \"$list\" | tr '\
    \ ' '\\n' | sort -n | tail -n 1)\n    local range=$(echo \"$max - $min\" | bc)\n\
    \    local result=\"\"\n    for i in $list; do\n        local scaled=$(echo \"\
    ($i - $min) / $range\" | bc -l)\n        result=\"$result $scaled\"\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate\
    \ \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\"\
    ) = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\")\
    \ = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\"\
    ) = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -n arr=$1\n    local min=${arr[0]}\n  \
    \  local max=${arr[0]}\n    for i in ${arr[@]}; do\n        if (( $(echo \"$i\
    \ < $min\" | bc -l) )); then\n            min=$i\n        fi\n        if (( $(echo\
    \ \"$i > $max\" | bc -l) )); then\n            max=$i\n        fi\n    done\n\
    \    local range=$(echo \"$max - $min\" | bc -l)\n    local result=()\n    for\
    \ i in ${arr[@]}; do\n        result+=($(echo \"($i - $min) / $range\" | bc -l))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n\
    \    [[ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0\
    \ 2.0 3.0 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0\
    \ 1.0 5.0 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0\
    \ 11.0 15.0 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8scm6e6l.sh: line 9: local: `2.0 49.9'': invalid variable name
    for name reference

    (standard_in) 2: syntax error

    '
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local -a numbers=($1)\n    local -a rescaled=()\n\
    \    local min=${numbers[0]}\n    local max=${numbers[0]}\n    local i=0\n   \
    \ for n in \"${numbers[@]}\"; do\n        if (( $(echo \"$n < $min\" | bc -l)\
    \ )); then\n            min=$n\n        fi\n        if (( $(echo \"$n > $max\"\
    \ | bc -l) )); then\n            max=$n\n        fi\n    done\n    for n in \"\
    ${numbers[@]}\"; do\n        rescaled[$i]=$(echo \"scale=2; ($n - $min) / ($max\
    \ - $min)\" | bc -l)\n        i=$((i+1))\n    done\n    echo \"${rescaled[@]}\"\
    \n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[ $(candidate \"100.0\
    \ 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\") = \"0.0\
    \ 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0 3.0 4.0\") = \"0.25\
    \ 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0 13.0 14.0\") = \"\
    0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979
- exit_code: 1
  program: "#!/bin/bash\n# Given list of numbers (of at least two elements), apply\
    \ a linear transform to that list,\n# such that the smallest number will become\
    \ 0 and the largest will become 1\n# >>> $(rescale_to_unit \"1.0 2.0 3.0 4.0 5.0\"\
    )\n# ['\"0.0\"', '\"0.25\"', '\"0.5\"', '\"0.75\"', '\"1.0\"']\n#\n# $1 is a space-separated\
    \ list\nrescale_to_unit() {\n    local numbers=($1)\n    local min=${numbers[0]}\n\
    \    local max=${numbers[0]}\n    for number in ${numbers[@]}; do\n        if\
    \ (( $(echo \"$number < $min\" | bc -l) )); then\n            min=$number\n  \
    \      fi\n        if (( $(echo \"$number > $max\" | bc -l) )); then\n       \
    \     max=$number\n        fi\n    done\n    local scale=$(echo \"scale=10; 1\
    \ / ($max - $min)\" | bc -l)\n    local offset=$(echo \"scale=10; -$min * $scale\"\
    \ | bc -l)\n    local result=()\n    for number in ${numbers[@]}; do\n       \
    \ result+=($(echo \"scale=10; $number * $scale + $offset\" | bc -l))\n    done\n\
    \    echo ${result[@]}\n}\n\ncandidate() {\n    rescale_to_unit \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2.0 49.9\") = \"0.0 1.0\" ]]\n    [[\
    \ $(candidate \"100.0 49.9\") = \"1.0 0.0\" ]]\n    [[ $(candidate \"1.0 2.0 3.0\
    \ 4.0 5.0\") = \"0.0 0.25 0.5 0.75 1.0\" ]]\n    [[ $(candidate \"2.0 1.0 5.0\
    \ 3.0 4.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n    [[ $(candidate \"12.0 11.0 15.0\
    \ 13.0 14.0\") = \"0.25 0.0 1.0 0.5 0.75\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019979

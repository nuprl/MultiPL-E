name: HumanEval_12_longest
language: sh
prompt: "#!/bin/bash\n# Out of list of strings, return the longest one. Return the\
  \ first one in case of multiple\n# strings of the same length. Return None in case\
  \ the input list is empty.\n# >>> $(longest \"\")\n# \"None\"\n# >>> $(longest \"\
  a b c\")\n# \"a\"\n# >>> $(longest \"a bb ccc\")\n# \"ccc\"\n#\n# $1 is a space-separated\
  \ list\nlongest() {\n"
tests: "}\n\ncandidate() {\n    longest \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"x y z\") = \"x\" ]]\n  \
  \  [[ $(candidate \"x yyy zzzz www kkkk abc\") = \"zzzz\" ]]\n}\n\nrun_test"
completions: ["    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n     \
    \   echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi", "  if [ -z\
    \ \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\n' |\
    \ sort -r -k 1,1 | head -n 1\n  fi", "    local longest=\n    local len=0\n  \
    \  for word in $1; do\n        if [[ ${#word} -gt $len ]]; then\n            longest=$word\n\
    \            len=${#word}\n        fi\n    done\n    if [[ -z $longest ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$longest\"\n    fi", "    local\
    \ longest=\n    local len=0\n    for word in $1; do\n        if [ ${#word} -gt\
    \ $len ]; then\n            longest=$word\n            len=${#word}\n        fi\n\
    \    done\n    if [ -z \"$longest\" ]; then\n        echo \"None\"\n    else\n\
    \        echo \"$longest\"\n    fi", "    local longest_word\n    for word in\
    \ $1; do\n        if [[ -z \"$longest_word\" ]] || [[ ${#word} -gt ${#longest_word}\
    \ ]]; then\n            longest_word=\"$word\"\n        fi\n    done\n    if [[\
    \ -z \"$longest_word\" ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$longest_word\"\n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\
    \n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n\
    \    fi", "    local longest_string=\"\"\n    local longest_length=0\n    for\
    \ word in $1; do\n        local length=${#word}\n        if [[ $length -gt $longest_length\
    \ ]]; then\n            longest_length=$length\n            longest_string=$word\n\
    \        fi\n    done\n    if [[ -z $longest_string ]]; then\n        echo \"\
    None\"\n    else\n        echo \"$longest_string\"\n    fi", "    local longest_string=\"\
    \"\n    local longest_string_length=0\n    for string in $1; do\n        local\
    \ string_length=${#string}\n        if [[ $string_length -gt $longest_string_length\
    \ ]]; then\n            longest_string=$string\n            longest_string_length=$string_length\n\
    \        fi\n    done\n    if [[ -z $longest_string ]]; then\n        echo \"\
    None\"\n    else\n        echo \"$longest_string\"\n    fi", "    local longest_word=\"\
    \"\n    local longest_word_len=0\n    for word in $1; do\n        local len=${#word}\n\
    \        if [[ $len -gt $longest_word_len ]]; then\n            longest_word=$word\n\
    \            longest_word_len=$len\n        fi\n    done\n    if [[ -z $longest_word\
    \ ]]; then\n        echo \"None\"\n    else\n        echo \"$longest_word\"\n\
    \    fi", "    local longest=\"\"\n    for word in $1; do\n        if [[ ${#word}\
    \ -gt ${#longest} ]]; then\n            longest=$word\n        fi\n    done\n\
    \    if [[ -z $longest ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$longest\"\n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n\
    \    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n\
    \    fi", "    local longest_string=\"\"\n    local longest_length=0\n    for\
    \ string in $1; do\n        local length=${#string}\n        if [ $length -gt\
    \ $longest_length ]; then\n            longest_string=$string\n            longest_length=$length\n\
    \        fi\n    done\n    if [ $longest_length -eq 0 ]; then\n        echo \"\
    None\"\n    else\n        echo \"$longest_string\"\n    fi", "    if [ -z \"$1\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n'\
    \ | sort -r -k1,1 -t' ' | head -n1\n    fi", "    if [ -z \"$1\" ]; then\n   \
    \     echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1\
    \ | head -n1\n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n  \
    \  else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi",
  "  local longest_string=\"\"\n  for string in $1; do\n    if [ ${#string} -gt ${#longest_string}\
    \ ]; then\n      longest_string=$string\n    fi\n  done\n  if [ -z \"$longest_string\"\
    \ ]; then\n    echo \"None\"\n  else\n    echo \"$longest_string\"\n  fi", " \
    \   local longest=\n    local len=0\n    for word in $1; do\n        if [[ ${#word}\
    \ -gt $len ]]; then\n            longest=$word\n            len=${#word}\n   \
    \     fi\n    done\n    if [[ -z $longest ]]; then\n        echo \"None\"\n  \
    \  else\n        echo \"$longest\"\n    fi", "    if [ $# -eq 0 ]; then\n    \
    \    echo \"None\"\n    else\n        echo \"$@\" | tr ' ' '\\n' | sort -r -k1,1\
    \ -t' ' | head -n1\n    fi", "    local max_len=0\n    local max_str=\"\"\n  \
    \  for str in $1; do\n        if [ ${#str} -gt $max_len ]; then\n            max_len=${#str}\n\
    \            max_str=$str\n        fi\n    done\n    if [ $max_len -eq 0 ]; then\n\
    \        echo \"None\"\n    else\n        echo $max_str\n    fi", "    local longest_str=\"\
    \"\n    local longest_len=0\n    for str in $1; do\n        local len=${#str}\n\
    \        if [[ $len -gt $longest_len ]]; then\n            longest_str=$str\n\
    \            longest_len=$len\n        fi\n    done\n    if [[ $longest_len -eq\
    \ 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$longest_str\"\n\
    \    fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\"\
    \ | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n  fi", "    local longest_str=\"\
    \"\n    local longest_len=0\n    local str\n    for str in $1; do\n        if\
    \ [ ${#str} -gt $longest_len ]; then\n            longest_str=$str\n         \
    \   longest_len=${#str}\n        fi\n    done\n    if [ $longest_len -eq 0 ];\
    \ then\n        echo \"None\"\n    else\n        echo \"$longest_str\"\n    fi",
  "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
    \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi", "    local longest_str=\"\
    \"\n    local longest_len=0\n    for str in $1; do\n        local len=${#str}\n\
    \        if [ $len -gt $longest_len ]; then\n            longest_str=$str\n  \
    \          longest_len=$len\n        fi\n    done\n    if [ $longest_len -eq 0\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$longest_str\"\n  \
    \  fi", "    local longest_string=\"\"\n    local longest_length=0\n    for s\
    \ in $1; do\n        if [ ${#s} -gt $longest_length ]; then\n            longest_string=$s\n\
    \            longest_length=${#s}\n        fi\n    done\n    if [ -z \"$longest_string\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$longest_string\"\n\
    \    fi", "    local longest_str=\"\"\n    local longest_len=0\n    for str in\
    \ $1; do\n        local len=${#str}\n        if [[ $len -gt $longest_len ]]; then\n\
    \            longest_str=$str\n            longest_len=$len\n        fi\n    done\n\
    \    if [[ $longest_len -eq 0 ]]; then\n        echo \"None\"\n    else\n    \
    \    echo \"$longest_str\"\n    fi", "    local longest=\"\"\n    local longest_len=0\n\
    \    for word in $1; do\n        local len=${#word}\n        if [[ $len -gt $longest_len\
    \ ]]; then\n            longest=$word\n            longest_len=$len\n        fi\n\
    \    done\n    if [[ $longest_len -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$longest\"\n    fi", "  local longest=\n  local current=\n  for\
    \ word in $1; do\n    if [[ -z $longest ]]; then\n      longest=$word\n    else\n\
    \      if [[ ${#word} -gt ${#longest} ]]; then\n        longest=$word\n      fi\n\
    \    fi\n  done\n  if [[ -z $longest ]]; then\n    echo \"None\"\n  else\n   \
    \ echo \"$longest\"\n  fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\
    \n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n  \
    \  fi", "    local longest=\"\"\n    local current=\"\"\n    for current in $1;\
    \ do\n        if [ ${#current} -gt ${#longest} ]; then\n            longest=$current\n\
    \        fi\n    done\n    if [ -z \"$longest\" ]; then\n        echo \"None\"\
    \n    else\n        echo \"$longest\"\n    fi", "  if [ -z \"$1\" ]; then\n  \
    \  echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' '\
    \ | head -n1\n  fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n\
    \        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi",
  "    local longest=\"\"\n    for word in $1; do\n        if [ ${#word} -gt ${#longest}\
    \ ]; then\n            longest=\"$word\"\n        fi\n    done\n    if [ -z \"\
    $longest\" ]; then\n        echo \"None\"\n    else\n        echo \"$longest\"\
    \n    fi", "    local longest_word=None\n    local longest_word_len=0\n    for\
    \ word in $1; do\n        local word_len=${#word}\n        if [[ $word_len -gt\
    \ $longest_word_len ]]; then\n            longest_word=$word\n            longest_word_len=$word_len\n\
    \        fi\n    done\n    echo $longest_word", "    local longest_str=\"\"\n\
    \    local longest_len=0\n    local str\n    for str in $1; do\n        if [ ${#str}\
    \ -gt $longest_len ]; then\n            longest_str=$str\n            longest_len=${#str}\n\
    \        fi\n    done\n    if [ $longest_len -eq 0 ]; then\n        echo \"None\"\
    \n    else\n        echo \"$longest_str\"\n    fi", "    if [ -z \"$1\" ]; then\n\
    \        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r\
    \ -k1,1 -t' ' | head -n1\n    fi", "    if [ -z \"$1\" ]; then\n        echo \"\
    None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n\
    \    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n     \
    \   echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi", "  if [ -z\
    \ \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\n' |\
    \ sort -r -k1,1 | head -n1\n  fi", "    if [ -z \"$1\" ]; then\n        echo \"\
    None\"\n    else\n        echo \"$1\" | tr \" \" \"\\n\" | sort -r -n -k1,1 |\
    \ head -n 1\n    fi", "    local longest_str=\"\"\n    local longest_len=0\n \
    \   for str in $1; do\n        local len=${#str}\n        if [[ $len -gt $longest_len\
    \ ]]; then\n            longest_str=$str\n            longest_len=$len\n     \
    \   fi\n    done\n    if [[ $longest_len -eq 0 ]]; then\n        echo \"None\"\
    \n    else\n        echo \"$longest_str\"\n    fi", "  local longest=\"\"\n  local\
    \ current=\"\"\n  for current in $1; do\n    if [ ${#current} -gt ${#longest}\
    \ ]; then\n      longest=$current\n    fi\n  done\n  if [ -z \"$longest\" ]; then\n\
    \    echo \"None\"\n  else\n    echo \"$longest\"\n  fi", "    if [ -z \"$1\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n'\
    \ | sort -r -k1,1 -k2,2n | head -n1\n    fi", "    local max_len=0\n    local\
    \ max_len_str=\"\"\n    for str in $1; do\n        if [[ ${#str} -gt $max_len\
    \ ]]; then\n            max_len=${#str}\n            max_len_str=$str\n      \
    \  fi\n    done\n    if [[ $max_len -eq 0 ]]; then\n        echo \"None\"\n  \
    \  else\n        echo \"$max_len_str\"\n    fi", "    local longest_string=\"\"\
    \n    local longest_string_length=0\n    for string in $1; do\n        if [[ ${#string}\
    \ -gt $longest_string_length ]]; then\n            longest_string=$string\n  \
    \          longest_string_length=${#string}\n        fi\n    done\n    if [[ $longest_string_length\
    \ -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$longest_string\"\
    \n    fi", "    local longest_string=\"\"\n    local longest_string_length=0\n\
    \    for string in $1; do\n        local string_length=${#string}\n        if\
    \ [ $string_length -gt $longest_string_length ]; then\n            longest_string=$string\n\
    \            longest_string_length=$string_length\n        fi\n    done\n    if\
    \ [ $longest_string_length -eq 0 ]; then\n        echo \"None\"\n    else\n  \
    \      echo $longest_string\n    fi", "  local longest_string=\"\"\n  local longest_length=0\n\
    \  for string in $1; do\n    local length=${#string}\n    if [ $length -gt $longest_length\
    \ ]; then\n      longest_string=$string\n      longest_length=$length\n    fi\n\
    \  done\n  if [ $longest_length -eq 0 ]; then\n    echo \"None\"\n  else\n   \
    \ echo \"$longest_string\"\n  fi", "    if [ -z \"$1\" ]; then\n        echo \"\
    None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n\
    \    fi", "    local longest_word\n    local longest_word_length=0\n    for word\
    \ in $1; do\n        if [[ ${#word} -gt $longest_word_length ]]; then\n      \
    \      longest_word=$word\n            longest_word_length=${#word}\n        fi\n\
    \    done\n    if [[ -z $longest_word ]]; then\n        echo \"None\"\n    else\n\
    \        echo \"$longest_word\"\n    fi", "  local longest_str=\"\"\n  local longest_len=0\n\
    \  for str in $1; do\n    local len=$(echo \"$str\" | wc -c)\n    if [[ $len -gt\
    \ $longest_len ]]; then\n      longest_str=\"$str\"\n      longest_len=$len\n\
    \    fi\n  done\n  if [[ $longest_len -eq 0 ]]; then\n    echo \"None\"\n  else\n\
    \    echo \"$longest_str\"\n  fi", "  local longest_str=\"\"\n  local longest_len=0\n\
    \  for str in $1; do\n    local len=${#str}\n    if [[ $len -gt $longest_len ]];\
    \ then\n      longest_str=$str\n      longest_len=$len\n    fi\n  done\n  if [[\
    \ $longest_len -eq 0 ]]; then\n    echo \"None\"\n  else\n    echo \"$longest_str\"\
    \n  fi", "  local longest_string=\"\"\n  local longest_length=0\n  local current_string=\"\
    \"\n  local current_length=0\n  for current_string in $1; do\n    current_length=${#current_string}\n\
    \    if [[ $current_length -gt $longest_length ]]; then\n      longest_length=$current_length\n\
    \      longest_string=$current_string\n    fi\n  done\n  if [[ -z $longest_string\
    \ ]]; then\n    echo \"None\"\n  else\n    echo \"$longest_string\"\n  fi", " \
    \   local max_len=0\n    local max_str=\"\"\n    for str in $1; do\n        local\
    \ len=${#str}\n        if [ $len -gt $max_len ]; then\n            max_len=$len\n\
    \            max_str=$str\n        fi\n    done\n    if [ $max_len -eq 0 ]; then\n\
    \        echo \"None\"\n    else\n        echo \"$max_str\"\n    fi", "  local\
    \ max_len=0\n  local max_str=\"\"\n  for str in $1; do\n    local len=${#str}\n\
    \    if [[ $len -gt $max_len ]]; then\n      max_len=$len\n      max_str=$str\n\
    \    fi\n  done\n  if [[ -z $max_str ]]; then\n    echo \"None\"\n  else\n   \
    \ echo \"$max_str\"\n  fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n\
    \    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n  fi", "   \
    \ local max_len=0\n    local max_str=\n    for str in $1; do\n        local len=${#str}\n\
    \        if [[ $len -gt $max_len ]]; then\n            max_len=$len\n        \
    \    max_str=$str\n        fi\n    done\n    if [[ -z $max_str ]]; then\n    \
    \    echo \"None\"\n    else\n        echo \"$max_str\"\n    fi", "    local longest_string\n\
    \    local longest_length=0\n    for string in $1; do\n        if [[ ${#string}\
    \ -gt $longest_length ]]; then\n            longest_string=$string\n         \
    \   longest_length=${#string}\n        fi\n    done\n    if [[ -z $longest_string\
    \ ]]; then\n        echo \"None\"\n    else\n        echo \"$longest_string\"\n\
    \    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n     \
    \   echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -s | head -n1\n    fi", "  local\
    \ longest_string=\"\"\n  local longest_string_length=0\n  for string in $1; do\n\
    \    local string_length=${#string}\n    if [[ $string_length -gt $longest_string_length\
    \ ]]; then\n      longest_string=$string\n      longest_string_length=$string_length\n\
    \    fi\n  done\n  if [[ -z $longest_string ]]; then\n    echo \"None\"\n  else\n\
    \    echo \"$longest_string\"\n  fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\
    \n  else\n    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -s | head -n1\n  fi",
  "    local longest_str=\"\"\n    local longest_len=0\n    for str in $1; do\n  \
    \      local len=${#str}\n        if [[ $len -gt $longest_len ]]; then\n     \
    \       longest_str=$str\n            longest_len=$len\n        fi\n    done\n\
    \    if [[ $longest_len -eq 0 ]]; then\n        echo \"None\"\n    else\n    \
    \    echo \"$longest_str\"\n    fi", "    local longest=\"\"\n    for word in\
    \ $1; do\n        if [ ${#word} -gt ${#longest} ]; then\n            longest=$word\n\
    \        fi\n    done\n    if [ -z \"$longest\" ]; then\n        echo \"None\"\
    \n    else\n        echo \"$longest\"\n    fi", "    if [ -z \"$1\" ]; then\n\
    \        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | awk '{if\
    \ (length($0) > max) max = length($0)} END {print max}' | xargs -I {} echo \"\
    $1\" | tr ' ' '\\n' | awk '{if (length($0) == '\"{}\"' ) print $0}' | head -n\
    \ 1\n    fi", "  local longest_string=\"\"\n  local longest_length=0\n  for string\
    \ in $1; do\n    if [ ${#string} -gt $longest_length ]; then\n      longest_string=$string\n\
    \      longest_length=${#string}\n    fi\n  done\n  if [ $longest_length -eq 0\
    \ ]; then\n    echo \"None\"\n  else\n    echo \"$longest_string\"\n  fi", " \
    \   if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
    \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi", "  local longest_string=\"\
    \"\n  local longest_length=0\n  for string in $1; do\n    local length=${#string}\n\
    \    if [[ $length -gt $longest_length ]]; then\n      longest_string=$string\n\
    \      longest_length=$length\n    fi\n  done\n  if [[ -z $longest_string ]];\
    \ then\n    echo \"None\"\n  else\n    echo \"$longest_string\"\n  fi", "    if\
    \ [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\" |\
    \ tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", "    if [ -z \"$1\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n'\
    \ | sort -r -k1,1 -t' ' | head -n1\n    fi", "    if [ -z \"$1\" ]; then\n   \
    \     echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | awk '{ if\
    \ (length($0) > max) { max = length($0); maxline = $0 } } END { print maxline\
    \ }'\n    fi", "    local longest_len=0\n    local longest_str=\n    for str in\
    \ $1; do\n        if [ ${#str} -gt $longest_len ]; then\n            longest_len=${#str}\n\
    \            longest_str=$str\n        fi\n    done\n    if [ -z \"$longest_str\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$longest_str\"\n  \
    \  fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n       \
    \ echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", "    local\
    \ max_len=0\n    local max_str=\n    for str in $1; do\n        local len=${#str}\n\
    \        if [ $len -gt $max_len ]; then\n            max_len=$len\n          \
    \  max_str=$str\n        fi\n    done\n    if [ -z \"$max_str\" ]; then\n    \
    \    echo \"None\"\n    else\n        echo \"$max_str\"\n    fi", "\tlocal longest_string=\"\
    \"\n\tlocal longest_string_length=0\n\tfor string in $1; do\n\t\tlocal string_length=${#string}\n\
    \t\tif [[ $string_length -gt $longest_string_length ]]; then\n\t\t\tlongest_string=$string\n\
    \t\t\tlongest_string_length=$string_length\n\t\tfi\n\tdone\n\tif [[ -z $longest_string\
    \ ]]; then\n\t\techo \"None\"\n\telse\n\t\techo \"$longest_string\"\n\tfi", " \
    \   if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
    \ | tr \" \" \"\\n\" | sort -r -k1,1 -t\" \" | head -n1\n    fi", "    local longest_string=\"\
    \"\n    local longest_string_length=0\n    for string in $1; do\n        local\
    \ string_length=${#string}\n        if [[ $string_length -gt $longest_string_length\
    \ ]]; then\n            longest_string=$string\n            longest_string_length=$string_length\n\
    \        fi\n    done\n    if [[ $longest_string_length -eq 0 ]]; then\n     \
    \   echo \"None\"\n    else\n        echo \"$longest_string\"\n    fi", "  local\
    \ longest_str=\"\"\n  local str=\"\"\n  for str in $1; do\n    if [[ -z \"$longest_str\"\
    \ ]] || [[ ${#str} -gt ${#longest_str} ]]; then\n      longest_str=\"$str\"\n\
    \    fi\n  done\n  if [[ -z \"$longest_str\" ]]; then\n    echo \"None\"\n  else\n\
    \    echo \"$longest_str\"\n  fi", "  local longest_string=\"\"\n  local longest_length=0\n\
    \  for string in $1; do\n    local length=${#string}\n    if [[ $length -gt $longest_length\
    \ ]]; then\n      longest_length=$length\n      longest_string=$string\n    fi\n\
    \  done\n  if [[ -z $longest_string ]]; then\n    echo \"None\"\n  else\n    echo\
    \ \"$longest_string\"\n  fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\
    \n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n\
    \    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n     \
    \   echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi", "    local\
    \ longest_str=\"\"\n    local longest_len=0\n    for str in $1; do\n        local\
    \ len=${#str}\n        if [ $len -gt $longest_len ]; then\n            longest_str=$str\n\
    \            longest_len=$len\n        fi\n    done\n    if [ $longest_len -eq\
    \ 0 ]; then\n        echo \"None\"\n    else\n        echo \"$longest_str\"\n\
    \    fi", "  local longest_string=\"\"\n  local longest_string_length=0\n  for\
    \ string in $1; do\n    local string_length=${#string}\n    if [[ $string_length\
    \ -gt $longest_string_length ]]; then\n      longest_string=$string\n      longest_string_length=$string_length\n\
    \    fi\n  done\n  if [[ -z $longest_string ]]; then\n    echo \"None\"\n  else\n\
    \    echo \"$longest_string\"\n  fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\
    \n  else\n    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n  fi",
  "\tif [ -z \"$1\" ]; then\n\t\techo \"None\"\n\telse\n\t\techo \"$1\" | tr ' ' '\\\
    n' | sort -r -k1,1 | head -n1\n\tfi", "    local max_len=0\n    local max_str=\"\
    \"\n    for str in $1; do\n        local len=${#str}\n        if [ $len -gt $max_len\
    \ ]; then\n            max_len=$len\n            max_str=$str\n        fi\n  \
    \  done\n    if [ $max_len -eq 0 ]; then\n        echo \"None\"\n    else\n  \
    \      echo \"$max_str\"\n    fi", "    if [ -z \"$1\" ]; then\n        echo \"\
    None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n\
    \    fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\"\
    \ | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n  fi", "  if [ -z \"$1\" ];\
    \ then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\n' | awk '{ if\
    \ (length > max) max = length; } END { print max; }'\n  fi", "    if [ -z \"$1\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n'\
    \ | sort -r -k1,1 -t' ' | head -n1\n    fi", "    local longest_string=\"\"\n\
    \    local longest_length=0\n    for string in $1; do\n        local length=${#string}\n\
    \        if [[ $length -gt $longest_length ]]; then\n            longest_string=$string\n\
    \            longest_length=$length\n        fi\n    done\n    if [[ $longest_length\
    \ -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$longest_string\"\
    \n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n    \
    \    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -k2,2n | head -n1\n    fi", " \
    \ local longest_len=0\n  local longest_str=\n  for str in $1; do\n    local len=${#str}\n\
    \    if [ $len -gt $longest_len ]; then\n      longest_len=$len\n      longest_str=$str\n\
    \    fi\n  done\n  if [ -z \"$longest_str\" ]; then\n    echo \"None\"\n  else\n\
    \    echo \"$longest_str\"\n  fi", "    local longest=\"\"\n    for word in $1;\
    \ do\n        if [[ ${#word} -gt ${#longest} ]]; then\n            longest=\"\
    $word\"\n        fi\n    done\n    if [[ -z \"$longest\" ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$longest\"\n    fi", "    local longest_string=\"\
    \"\n    local longest_string_length=0\n    for string in $1; do\n        local\
    \ string_length=$(echo -n \"$string\" | wc -c)\n        if [ $string_length -gt\
    \ $longest_string_length ]; then\n            longest_string=$string\n       \
    \     longest_string_length=$string_length\n        fi\n    done\n    if [ $longest_string_length\
    \ -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$longest_string\"\
    \n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n    \
    \    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", " \
    \   if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
    \ | tr ' ' '\\n' | sort -r -k1,1 -s | head -n1\n    fi", "    local max_len=0\n\
    \    local max_str=\"\"\n    for str in $1; do\n        local len=${#str}\n  \
    \      if [ $len -gt $max_len ]; then\n            max_len=$len\n            max_str=$str\n\
    \        fi\n    done\n    if [ $max_len -eq 0 ]; then\n        echo \"None\"\n\
    \    else\n        echo \"$max_str\"\n    fi", "    if [ $# -eq 0 ]; then\n  \
    \      echo \"None\"\n    else\n        echo \"$@\" | tr ' ' '\\n' | sort -r -k1,1\
    \ -t' ' | head -n1\n    fi", "    local longest_str=\"\"\n    local longest_len=0\n\
    \    local str=\"\"\n    local len=0\n    for str in $1; do\n        len=${#str}\n\
    \        if [ $len -gt $longest_len ]; then\n            longest_len=$len\n  \
    \          longest_str=$str\n        fi\n    done\n    if [ -z \"$longest_str\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$longest_str\"\n  \
    \  fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n       \
    \ echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", "    if\
    \ [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\" |\
    \ tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", "    if [ -z \"$1\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n'\
    \ | sort -r -k1,1 -t' ' | head -n1\n    fi", "    if [ -z \"$1\" ]; then\n   \
    \     echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1\
    \ -s | head -n1\n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n\
    \    else\n        echo \"$1\" | tr ' ' '\\n' | sort -n -r -k1 | head -n1\n  \
    \  fi", "    local longest_string\n    local longest_length=0\n    local current_string\n\
    \    local current_length\n    for current_string in $1; do\n        current_length=${#current_string}\n\
    \        if [[ $current_length -gt $longest_length ]]; then\n            longest_string=$current_string\n\
    \            longest_length=$current_length\n        fi\n    done\n    if [[ -z\
    \ $longest_string ]]; then\n        echo \"None\"\n    else\n        echo \"$longest_string\"\
    \n    fi", "    local longest=\"\"\n    for word in $1; do\n        if [ ${#word}\
    \ -gt ${#longest} ]; then\n            longest=$word\n        fi\n    done\n \
    \   if [ -z \"$longest\" ]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$longest\"\n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n\
    \    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n\
    \    fi", "    local longest_string=\"\"\n    local longest_length=0\n    for\
    \ string in $1; do\n        if [[ ${#string} -gt $longest_length ]]; then\n  \
    \          longest_string=$string\n            longest_length=${#string}\n   \
    \     fi\n    done\n    if [[ -z $longest_string ]]; then\n        echo \"None\"\
    \n    else\n        echo \"$longest_string\"\n    fi", "    if [ -z \"$1\" ];\
    \ then\n        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' |\
    \ sort -r -k1,1 -t' ' | head -n1\n    fi", "    local longest_str=\"\"\n    local\
    \ longest_len=0\n    for str in $1; do\n        local len=${#str}\n        if\
    \ [ $len -gt $longest_len ]; then\n            longest_str=$str\n            longest_len=$len\n\
    \        fi\n    done\n    if [ $longest_len -eq 0 ]; then\n        echo \"None\"\
    \n    else\n        echo \"$longest_str\"\n    fi", "    if [ -z \"$1\" ]; then\n\
    \        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r\
    \ -k1,1 | head -n1\n    fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n\
    \    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n  fi", "    if [ -z\
    \ \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\" | tr '\
    \ ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", "    local longest_string=\"\
    \"\n    local longest_string_length=0\n    for string in $1; do\n        local\
    \ string_length=${#string}\n        if [ $string_length -gt $longest_string_length\
    \ ]; then\n            longest_string=$string\n            longest_string_length=$string_length\n\
    \        fi\n    done\n    if [ $longest_string_length -eq 0 ]; then\n       \
    \ echo \"None\"\n    else\n        echo $longest_string\n    fi", "  if [ -z \"\
    $1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\n' | sort\
    \ -r -k1,1 -t' ' | head -n1\n  fi", "    if [ -z \"$1\" ]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head\
    \ -n1\n    fi", "  local longest=\"\"\n  local longest_len=0\n  for word in $1;\
    \ do\n    if [ ${#word} -gt $longest_len ]; then\n      longest=\"$word\"\n  \
    \    longest_len=${#word}\n    fi\n  done\n  if [ -z \"$longest\" ]; then\n  \
    \  echo \"None\"\n  else\n    echo \"$longest\"\n  fi", "    if [ -z \"$1\" ];\
    \ then\n        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' |\
    \ sort -r -k1,1 -t' ' | head -n1\n    fi", "    if [ -z \"$1\" ]; then\n     \
    \   echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1\
    \ -k2,2n | head -n1\n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\
    \n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n\
    \    fi", "  local longest_string=\"\"\n  local longest_length=0\n  for string\
    \ in $1; do\n    local length=${#string}\n    if [[ $length -gt $longest_length\
    \ ]]; then\n      longest_string=$string\n      longest_length=$length\n    fi\n\
    \  done\n  if [[ -z $longest_string ]]; then\n    echo \"None\"\n  else\n    echo\
    \ \"$longest_string\"\n  fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\
    \n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n  \
    \  fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n       \
    \ echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", "    [\
    \ -z \"$1\" ] && echo \"None\" && return\n    echo \"$1\" | tr ' ' '\\n' | sort\
    \ -r -k1,1 | head -n1", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n \
    \   else\n        echo \"$1\" | awk '{\n            max = 0\n            for (i\
    \ = 1; i <= NF; i++) {\n                if (length($i) > max) {\n            \
    \        max = length($i)\n                    max_index = i\n               \
    \ }\n            }\n            print $max_index\n        }'\n    fi", "  local\
    \ longest=\"\"\n  for i in $1; do\n    if [ ${#i} -gt ${#longest} ]; then\n  \
    \    longest=$i\n    fi\n  done\n  if [ -z \"$longest\" ]; then\n    echo \"None\"\
    \n  else\n    echo \"$longest\"\n  fi", "    if [ -z \"$1\" ]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' '\
    \ | head -n1\n    fi", "    local longest=\"\"\n    for word in $1; do\n     \
    \   if [ ${#word} -gt ${#longest} ]; then\n            longest=$word\n       \
    \ fi\n    done\n    if [ -z \"$longest\" ]; then\n        echo \"None\"\n    else\n\
    \        echo \"$longest\"\n    fi", "    if [ -z \"$1\" ]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' '\
    \ | head -n1\n    fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n\
    \    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n  fi", "    local\
    \ longest=\"\"\n    for word in $1; do\n        if [[ ${#word} -gt ${#longest}\
    \ ]]; then\n            longest=\"$word\"\n        fi\n    done\n    if [[ -z\
    \ \"$longest\" ]]; then\n        echo \"None\"\n    else\n        echo \"$longest\"\
    \n    fi", "    local longest=\"\"\n    local longest_len=0\n    for word in $1;\
    \ do\n        local len=${#word}\n        if [ $len -gt $longest_len ]; then\n\
    \            longest=$word\n            longest_len=$len\n        fi\n    done\n\
    \    if [ -z \"$longest\" ]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$longest\"\n    fi", "    local longest=\"\"\n    for word in $1; do\n   \
    \     if [ ${#word} -gt ${#longest} ]; then\n            longest=$word\n     \
    \   fi\n    done\n    if [ -z \"$longest\" ]; then\n        echo \"None\"\n  \
    \  else\n        echo \"$longest\"\n    fi", "  local longest_string=\"\"\n  local\
    \ longest_string_length=0\n  for string in $1; do\n    local string_length=${#string}\n\
    \    if [[ $string_length -gt $longest_string_length ]]; then\n      longest_string=$string\n\
    \      longest_string_length=$string_length\n    fi\n  done\n  if [[ -z $longest_string\
    \ ]]; then\n    echo \"None\"\n  else\n    echo \"$longest_string\"\n  fi", " \
    \ if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' '\
    \ '\\n' | sort -r -k1,1 | head -n1\n  fi", "    if [ -z \"$1\" ]; then\n     \
    \   echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1\
    \ | head -n1\n    fi", "    if [ $# -eq 0 ]; then\n        echo \"None\"\n   \
    \ else\n        echo \"$*\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n\
    \    fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\"\
    \ | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n  fi", "    local longest_string=\"\
    \"\n    local longest_length=0\n    for string in $1; do\n        local length=${#string}\n\
    \        if [ $length -gt $longest_length ]; then\n            longest_string=$string\n\
    \            longest_length=$length\n        fi\n    done\n    if [ -z \"$longest_string\"\
    \ ]; then\n        echo \"None\"\n    else\n        echo \"$longest_string\"\n\
    \    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n     \
    \   echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi", "  if [ -z\
    \ \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\n' |\
    \ sort -r -k1,1 -t' ' | head -n1\n  fi", "    local longest=\n    local len=0\n\
    \    for s in $1; do\n        if [ ${#s} -gt $len ]; then\n            longest=$s\n\
    \            len=${#s}\n        fi\n    done\n    if [ -z \"$longest\" ]; then\n\
    \        echo \"None\"\n    else\n        echo \"$longest\"\n    fi", "    if\
    \ [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\" |\
    \ tr ' ' '\\n' | sort -r -k1,1 -k2,2n | head -n1\n    fi", "  if [ -z \"$1\" ];\
    \ then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1\
    \ | head -n1\n  fi", "    local longest=\"\"\n    local longest_len=0\n    for\
    \ word in $1; do\n        local len=${#word}\n        if [ $len -gt $longest_len\
    \ ]; then\n            longest=$word\n            longest_len=$len\n        fi\n\
    \    done\n    if [ $longest_len -eq 0 ]; then\n        echo \"None\"\n    else\n\
    \        echo \"$longest\"\n    fi", "    local longest_string\n    local longest_length=0\n\
    \    local string\n    local length\n    for string in $1; do\n        length=${#string}\n\
    \        if [ $length -gt $longest_length ]; then\n            longest_string=$string\n\
    \            longest_length=$length\n        fi\n    done\n    if [ $longest_length\
    \ -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$longest_string\"\
    \n    fi", "    local longest_str=\"\"\n    local longest_len=0\n    for str in\
    \ $1; do\n        local len=${#str}\n        if [ $len -gt $longest_len ]; then\n\
    \            longest_str=$str\n            longest_len=$len\n        fi\n    done\n\
    \    if [ $longest_len -eq 0 ]; then\n        echo \"None\"\n    else\n      \
    \  echo \"$longest_str\"\n    fi", "    local longest=\n    local len=0\n    for\
    \ word in $1; do\n        if [ ${#word} -gt $len ]; then\n            longest=$word\n\
    \            len=${#word}\n        fi\n    done\n    if [ -z \"$longest\" ]; then\n\
    \        echo \"None\"\n    else\n        echo \"$longest\"\n    fi", "    local\
    \ longest_string=\"\"\n    local longest_string_length=0\n    for string in $1;\
    \ do\n        if [ ${#string} -gt $longest_string_length ]; then\n           \
    \ longest_string=$string\n            longest_string_length=${#string}\n     \
    \   fi\n    done\n    if [ -z \"$longest_string\" ]; then\n        echo \"None\"\
    \n    else\n        echo \"$longest_string\"\n    fi", "    if [ -z \"$1\" ];\
    \ then\n        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n -r -k1,1 | head -n 1\n    fi", "    local longest=\"\"\n    local current=\"\
    \"\n    for current in $1; do\n        if [[ ${#current} -gt ${#longest} ]]; then\n\
    \            longest=$current\n        fi\n    done\n    if [[ -z $longest ]];\
    \ then\n        echo \"None\"\n    else\n        echo \"$longest\"\n    fi", " \
    \   local longest=\n    local len=0\n    for word in $1; do\n        if [ ${#word}\
    \ -gt $len ]; then\n            longest=$word\n            len=${#word}\n    \
    \    fi\n    done\n    if [ $len -eq 0 ]; then\n        echo \"None\"\n    else\n\
    \        echo \"$longest\"\n    fi", "    local longest_str=\"\"\n    local longest_len=0\n\
    \    for str in $1; do\n        local len=${#str}\n        if [ $len -gt $longest_len\
    \ ]; then\n            longest_str=$str\n            longest_len=$len\n      \
    \  fi\n    done\n    if [ $longest_len -eq 0 ]; then\n        echo \"None\"\n\
    \    else\n        echo \"$longest_str\"\n    fi", "    if [ -z \"$1\" ]; then\n\
    \        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -n\
    \ -r -k1,1 | head -n 1\n    fi", "    local max_len=0\n    local max_str=\"\"\n\
    \    for str in $1; do\n        if [ ${#str} -gt $max_len ]; then\n          \
    \  max_len=${#str}\n            max_str=$str\n        fi\n    done\n    if [ $max_len\
    \ -eq 0 ]; then\n        echo \"None\"\n    else\n        echo $max_str\n    fi",
  "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
    \ | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi", "  if [ -z \"$1\" ]; then\n\
    \    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t'\
    \ ' | head -n1\n  fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n  \
    \  else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n\
    \    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n     \
    \   echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", "  \
    \  local longest=\"None\"\n    local longest_len=0\n    for word in $1; do\n \
    \       local len=${#word}\n        if [[ $len -gt $longest_len ]]; then\n   \
    \         longest=$word\n            longest_len=$len\n        fi\n    done\n\
    \    echo \"$longest\"", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n\
    \    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n\
    \    fi", "    local longest=\"\"\n    for word in $1; do\n        if [ ${#word}\
    \ -gt ${#longest} ]; then\n            longest=$word\n        fi\n    done\n \
    \   if [ -z \"$longest\" ]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$longest\"\n    fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n\
    \    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n  fi", "   \
    \ [ -z \"$1\" ] && echo \"None\" && return\n    local longest_len=0\n    local\
    \ longest_str\n    for str in $1; do\n        len=${#str}\n        if [ $len -gt\
    \ $longest_len ]; then\n            longest_len=$len\n            longest_str=$str\n\
    \        fi\n    done\n    echo \"$longest_str\"", "    local longest_string=\"\
    \"\n    local longest_string_length=0\n    for string in $1; do\n        if [[\
    \ ${#string} -gt $longest_string_length ]]; then\n            longest_string=$string\n\
    \            longest_string_length=${#string}\n        fi\n    done\n    if [[\
    \ $longest_string_length -eq 0 ]]; then\n        echo \"None\"\n    else\n   \
    \     echo \"$longest_string\"\n    fi", "    local longest=\"\"\n    local longest_len=0\n\
    \    local word\n    for word in $1; do\n        local len=${#word}\n        if\
    \ [ $len -gt $longest_len ]; then\n            longest=$word\n            longest_len=$len\n\
    \        fi\n    done\n    if [ -z \"$longest\" ]; then\n        echo \"None\"\
    \n    else\n        echo \"$longest\"\n    fi", "    local longest_string=\"\"\
    \n    local longest_string_length=0\n    for string in $1; do\n        if [[ ${#string}\
    \ -gt $longest_string_length ]]; then\n            longest_string=$string\n  \
    \          longest_string_length=${#string}\n        fi\n    done\n    if [[ $longest_string_length\
    \ -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$longest_string\"\
    \n    fi", "  local longest_string=\"\"\n  local longest_length=0\n  for string\
    \ in $1; do\n    local length=${#string}\n    if [[ $length -gt $longest_length\
    \ ]]; then\n      longest_length=$length\n      longest_string=$string\n    fi\n\
    \  done\n  if [[ -z $longest_string ]]; then\n    echo \"None\"\n  else\n    echo\
    \ \"$longest_string\"\n  fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\
    \n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n\
    \    fi", "    local longest=\n    local len=0\n    for word in $1; do\n     \
    \   if [[ ${#word} -gt $len ]]; then\n            longest=$word\n            len=${#word}\n\
    \        fi\n    done\n    if [[ -z $longest ]]; then\n        echo \"None\"\n\
    \    else\n        echo \"$longest\"\n    fi", "    if [ -z \"$1\" ]; then\n \
    \       echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r\
    \ -k1,1 -t' ' | head -n1\n    fi", "\tif [ -z \"$1\" ]; then\n\t\techo \"None\"\
    \n\telse\n\t\techo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n\tfi", " \
    \ if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' '\
    \ '\\n' | sort -r -k1,1 -t' ' | head -n1\n  fi", "  longest=\"\"\n  for word in\
    \ $1; do\n    if [ -z \"$longest\" ] || [ ${#word} -gt ${#longest} ]; then\n \
    \     longest=\"$word\"\n    fi\n  done\n  if [ -z \"$longest\" ]; then\n    echo\
    \ \"None\"\n  else\n    echo \"$longest\"\n  fi", "  local longest=\"\"\n  local\
    \ longest_len=0\n  for word in $1; do\n    local len=${#word}\n    if [[ $len\
    \ -gt $longest_len ]]; then\n      longest_len=$len\n      longest=$word\n   \
    \ fi\n  done\n  if [[ -z $longest ]]; then\n    echo \"None\"\n  else\n    echo\
    \ \"$longest\"\n  fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n\
    \    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -s | head -n1\n  fi", "    if\
    \ [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\" |\
    \ tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi", "    if [ -z \"$1\" ]; then\n\
    \        echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r\
    \ -k1,1 -s | head -n1\n    fi", "  local longest_string=\"\"\n  local longest_string_length=0\n\
    \  for string in $1; do\n    local string_length=$(echo -n \"$string\" | wc -c)\n\
    \    if [ $string_length -gt $longest_string_length ]; then\n      longest_string=$string\n\
    \      longest_string_length=$string_length\n    fi\n  done\n  if [ $longest_string_length\
    \ -eq 0 ]; then\n    echo \"None\"\n  else\n    echo \"$longest_string\"\n  fi",
  "    local longest=\"\"\n    local len=0\n    for word in $1; do\n        if [[\
    \ ${#word} -gt $len ]]; then\n            longest=$word\n            len=${#word}\n\
    \        fi\n    done\n    if [[ -z $longest ]]; then\n        echo \"None\"\n\
    \    else\n        echo \"$longest\"\n    fi", "    if [ -z \"$1\" ]; then\n \
    \       echo \"None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r\
    \ -k1,1 -t' ' | head -n1\n    fi", "    local longest_string=\"\"\n    local longest_length=0\n\
    \    for string in $1; do\n        local length=${#string}\n        if [ $length\
    \ -gt $longest_length ]; then\n            longest_string=$string\n          \
    \  longest_length=$length\n        fi\n    done\n    if [ $longest_length -eq\
    \ 0 ]; then\n        echo \"None\"\n    else\n        echo \"$longest_string\"\
    \n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n    \
    \    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", " \
    \   if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
    \ | tr ' ' '\\n' | awk '{ if (length($0) > max) { max = length($0); maxline =\
    \ $0 } } END { print maxline }'\n    fi", "  local longest=\"\"\n  local longest_len=0\n\
    \  for word in $1; do\n    local len=${#word}\n    if [[ $len -gt $longest_len\
    \ ]]; then\n      longest=$word\n      longest_len=$len\n    fi\n  done\n  if\
    \ [[ -z $longest ]]; then\n    echo \"None\"\n  else\n    echo \"$longest\"\n\
    \  fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n       \
    \ echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 | head -n1\n    fi", "  if [ -z \"\
    $1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\n' | sort\
    \ -r -k1,1 -t' ' | head -n1\n  fi", "    local max_len=0\n    local max_str=\"\
    \"\n    for str in $1; do\n        local len=${#str}\n        if [ $len -gt $max_len\
    \ ]; then\n            max_len=$len\n            max_str=$str\n        fi\n  \
    \  done\n    if [ $max_len -eq 0 ]; then\n        echo \"None\"\n    else\n  \
    \      echo \"$max_str\"\n    fi", "    if [ -z \"$1\" ]; then\n        echo \"\
    None\"\n    else\n        echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head\
    \ -n1\n    fi", "    local longest_so_far=\"\"\n    for word in $1; do\n     \
    \   if [[ ${#word} -gt ${#longest_so_far} ]]; then\n            longest_so_far=$word\n\
    \        fi\n    done\n    if [[ -z $longest_so_far ]]; then\n        echo \"\
    None\"\n    else\n        echo \"$longest_so_far\"\n    fi", "    local longest_string=\"\
    \"\n    local longest_length=0\n    for string in $1; do\n        local length=${#string}\n\
    \        if [ $length -gt $longest_length ]; then\n            longest_string=$string\n\
    \            longest_length=$length\n        fi\n    done\n    if [ $longest_length\
    \ -eq 0 ]; then\n        echo \"None\"\n    else\n        echo \"$longest_string\"\
    \n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n    \
    \    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", " \
    \   local longest_str=\"\"\n    local longest_len=0\n    for str in $1; do\n \
    \       local len=${#str}\n        if [ $len -gt $longest_len ]; then\n      \
    \      longest_str=$str\n            longest_len=$len\n        fi\n    done\n\
    \    if [ $longest_len -eq 0 ]; then\n        echo \"None\"\n    else\n      \
    \  echo \"$longest_str\"\n    fi", "    local max_len=0\n    local max_str=\"\"\
    \n    for str in $1; do\n        local len=${#str}\n        if [ $len -gt $max_len\
    \ ]; then\n            max_len=$len\n            max_str=$str\n        fi\n  \
    \  done\n    if [ $max_len -eq 0 ]; then\n        echo \"None\"\n    else\n  \
    \      echo \"$max_str\"\n    fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\
    \n  else\n    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n  fi",
  "  if [ -z \"$1\" ]; then\n    echo \"None\"\n  else\n    echo \"$1\" | tr ' ' '\\\
    n' | sort -r -k1,1 | head -n1\n  fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\
    \n  else\n    echo \"$1\" | tr ' ' '\\n' | sort -n -r -k1,1 | head -n 1\n  fi",
  "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n        echo \"$1\"\
    \ | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", "    local longest_string=\"\
    \"\n    local longest_length=0\n    for string in $1; do\n        local length=${#string}\n\
    \        if [[ $length -gt $longest_length ]]; then\n            longest_length=$length\n\
    \            longest_string=$string\n        fi\n    done\n    if [[ $longest_length\
    \ -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo \"$longest_string\"\
    \n    fi", "    if [ -z \"$1\" ]; then\n        echo \"None\"\n    else\n    \
    \    echo \"$1\" | tr ' ' '\\n' | sort -r -k1,1 -t' ' | head -n1\n    fi", " \
    \   local longest_string=\"\"\n    local longest_string_length=0\n    for string\
    \ in $1; do\n        if [ ${#string} -gt $longest_string_length ]; then\n    \
    \        longest_string=$string\n            longest_string_length=${#string}\n\
    \        fi\n    done\n    if [ -z \"$longest_string\" ]; then\n        echo \"\
    None\"\n    else\n        echo \"$longest_string\"\n    fi"]
stop_tokens:
- "\n}"

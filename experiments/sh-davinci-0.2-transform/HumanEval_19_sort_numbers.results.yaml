language: sh
name: HumanEval_19_sort_numbers
results:
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -a sorted\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n   \n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the 'sort' command\n    # Hint: You can use\
    \ the 'tr' command\n    # Hint: You can use the 'echo' command\n    # Hint: You\
    \ can use the '$1' variable\n    # Hint: You can use the '$(<command>)' syntax\n\
    \    # Hint: You can use the '$(<command> <arguments>)' syntax\n    # Hint: You\
    \ can use the '$(<command> <arguments>)' syntax\n    # Hint: You can use the '$(<command>\
    \ <arguments>)' syntax\n    # Hint: You can use the '$(<command> <arguments>)'\
    \ syntax\n    # Hint: You can use the '$(<command> <arguments>)' syntax\n    #\
    \ Hint: You can use the '$(<command> <arguments>)' syntax\n    # Hint: You can\
    \ use the '$(<command> <arguments>)' syntax\n    # Hint: You can use the '$(<command>\
    \ <arguments>)' syntax\n    # Hint: You can use the '$(<command> <arguments>)'\
    \ syntax\n    # Hint: You can use the '$(<command> <arguments>)' syntax\n    #\
    \ Hint: You can use the '$(<command> <arguments>)' syntax\n    # Hint: You can\
    \ use the '$(<command> <arguments>)' syntax\n    # Hint: You can use the '$(<command>\
    \ <arguments>)' syntax\n    # Hint: You can use the '$(<command> <arguments>)'\
    \ syntax\n    # Hint: You can use the '$(<command> <arguments>)' syntax\n    #\
    \ Hint: You can use the '$(<command> <arguments>)' syntax\n    # Hint: You can\
    \ use the '$(<command> <arguments>)' syntax\n    # Hint: You can use the '$(<command>\
    \ <arguments>)' syntax\n    # Hint: You can use the '$(<command> <arguments>)'\
    \ syntax\n    # Hint: You can use the\n}\n\ncandidate() {\n    sort_numbers \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp6kyzhca9.sh: line 36: syntax error near unexpected token `}''

    /tmp/tmp6kyzhca9.sh: line 36: `}''

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: Implement this\
    \ function\n  local -a numbers=($1)\n  local -a sorted_numbers=()\n  local -a\
    \ number_values=([zero]=0 [one]=1 [two]=2 [three]=3 [four]=4 [five]=5 [six]=6\
    \ [seven]=7 [eight]=8 [nine]=9)\n  for number in \"${numbers[@]}\"; do\n    sorted_numbers+=($(printf\
    \ \"%02d\" ${number_values[$number]}))\n  done\n  echo \"${sorted_numbers[*]}\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a array\n  local\
    \ -a sorted_array\n  local -a sorted_indexes\n  local -a sorted_numbers\n  local\
    \ -a sorted_indexes_array\n  local -a sorted_numbers_array\n  local -a sorted_numbers_array_indexes\n\
    \  local -a sorted_numbers_array_indexes_array\n  local -a sorted_numbers_array_indexes_array_indexes\n\
    \  local -a sorted_numbers_array_indexes_array_indexes_array\n  local -a sorted_numbers_array_indexes_array_indexes_array_indexes\n\
    \  local -a sorted_numbers_array_indexes_array_indexes_array_indexes_array\n \
    \ local -a sorted_numbers_array_indexes_array_indexes_array_indexes_array_indexes\n\
    \  local -a sorted_numbers_array_indexes_array_indexes_array_indexes_array_indexes_array\n\
    \  local -a sorted_numbers_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes\n\
    \  local -a sorted_numbers_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes_array\n\
    \  local -a sorted_numbers_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes\n\
    \  local -a sorted_numbers_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes_array\n\
    \  local -a sorted_numbers_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes\n\
    \  local -a sorted_numbers_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes_array\n\
    \  local -a sorted_numbers_array_indexes_array_indexes_array_indexes_array_indexes_array_indexes_array_index\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n\
    \    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i\
    \ r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i tmp\n   \
    \ local -i len\n    local -i index\n    local -i max\n    local -i min\n    local\
    \ -i min_index\n    local -i max_index\n    local -i num_count\n    local -i num_index\n\
    \    local -i num_len\n    local -i num_max\n    local -i num_min\n    local -i\
    \ num_min_index\n    local -i num_max_index\n    local -i num_num_index\n    local\
    \ -i num_num_len\n    local -i num_num_max\n    local -i num_num_min\n    local\
    \ -i num_num_min_index\n    local -i num_num_max_index\n    local -i num_num_num_index\n\
    \    local -i num_num_num_len\n    local -i num_num_num_max\n    local -i num_num_num_min\n\
    \    local -i num_num_num_min_index\n    local -i num_num_num_max_index\n    local\
    \ -i num_num_num_num_index\n    local -i num_num_num_num_len\n    local -i num_num_num_num_max\n\
    \    local -i num_num_num_num_min\n    local -i num_num_num_num_min_index\n  \
    \  local -i num_num_num_num_max_index\n    local -i num_num_num_num_num_index\n\
    \    local -i num_num_num_num_num_len\n    local -i num_num_num_num_num_max\n\
    \    local -i num_num_num_num_num_\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local\
    \ -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local\
    \ -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local\
    \ -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local\
    \ -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local\
    \ -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local\
    \ -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local\
    \ -i g=0\n  local -i h=0\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n \n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -a sorted_numbers\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n\
    \  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local\
    \ -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n\
    \  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local\
    \ -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i\
    \ hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n\
    \  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n \
    \ local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local\
    \ -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local\
    \ -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local\
    \ -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local\
    \ -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local\
    \ -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local\
    \ -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local\
    \ -i bbbb\n  local -i cccc\n  local -i dddd\n  local -i\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: implement this\
    \ function\n  echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 0
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted\n  local -a num_to_word=([0]=\"zero\" [1]=\"one\" [2]=\"two\" [3]=\"\
    three\" [4]=\"four\" [5]=\"five\" [6]=\"six\" [7]=\"seven\" [8]=\"eight\" [9]=\"\
    nine\")\n  local -i i\n  local -i j\n  local -i k\n  local -i tmp\n  local -i\
    \ len\n  local -i num\n\n  nums=($1)\n  len=${#nums[@]}\n  for ((i=0; i<len; i++));\
    \ do\n    for ((j=0; j<${#num_to_word[@]}; j++)); do\n      if [[ ${nums[i]} ==\
    \ ${num_to_word[j]} ]]; then\n        nums[i]=$j\n        break\n      fi\n  \
    \  done\n  done\n\n  for ((i=0; i<len; i++)); do\n    for ((j=i+1; j<len; j++));\
    \ do\n      if [[ ${nums[i]} -gt ${nums[j]} ]]; then\n        tmp=${nums[i]}\n\
    \        nums[i]=${nums[j]}\n        nums[j]=$tmp\n      fi\n    done\n  done\n\
    \n  for ((i=0; i<len; i++)); do\n    sorted[i]=${num_to_word[${nums[i]}]}\n  done\n\
    \n  echo \"${sorted[@]}\"\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a sorted_numbers=()\n    local -i i=0\n    local -i j=0\n    local\
    \ -i min_index=0\n    local -i min_value=0\n    local -i tmp=0\n\n    for ((i=0;\
    \ i<${#numbers[@]}; i++)); do\n        min_value=${numbers[$i]}\n        min_index=$i\n\
    \        for ((j=$i+1; j<${#numbers[@]}; j++)); do\n            if [[ ${numbers[$j]}\
    \ -lt $min_value ]]; then\n                min_value=${numbers[$j]}\n        \
    \        min_index=$j\n            fi\n        done\n        tmp=${numbers[$i]}\n\
    \        numbers[$i]=${numbers[$min_index]}\n        numbers[$min_index]=$tmp\n\
    \    done\n\n    echo ${numbers[@]}\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i zero=0\n    local -i one=0\n    local -i two=0\n    local -i three=0\n\
    \    local -i four=0\n    local -i five=0\n    local -i six=0\n    local -i seven=0\n\
    \    local -i eight=0\n    local -i nine=0\n    local -i num=0\n    local -i num_count=0\n\
    \    local -i num_index=0\n    local -i num_index_max=0\n    local -i num_index_min=0\n\
    \    local -i num_index_min_tmp=0\n    local -i num_index_tmp=0\n    local -i\
    \ num_max=0\n    local -i num_min=0\n    local -i num_min_tmp=0\n    local -i\
    \ num_tmp=0\n    local -i num_tmp_index=0\n    local -i num_tmp_index_max=0\n\
    \    local -i num_tmp_index_min=0\n    local -i num_tmp_index_min_tmp=0\n    local\
    \ -i num_tmp_index_tmp=0\n    local -i num_tmp_max=0\n    local -i num_tmp_min=0\n\
    \    local -i num_tmp_min_tmp=0\n    local -i num_tmp_tmp=0\n    local -i num_tmp_tmp_index=0\n\
    \    local -i num_tmp_tmp_index_max=0\n    local -i num_tmp_tmp_\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i zero=0\n  local -i one=0\n\
    \  local -i two=0\n  local -i three=0\n  local -i four=0\n  local -i five=0\n\
    \  local -i six=0\n  local -i seven=0\n  local -i eight=0\n  local -i nine=0\n\
    \  local -i ten=0\n  local -i eleven=0\n  local -i twelve=0\n  local -i thirteen=0\n\
    \  local -i fourteen=0\n  local -i fifteen=0\n  local -i sixteen=0\n  local -i\
    \ seventeen=0\n  local -i eighteen=0\n  local -i nineteen=0\n  local -i twenty=0\n\
    \  local -i thirty=0\n  local -i forty=0\n  local -i fifty=0\n  local -i sixty=0\n\
    \  local -i seventy=0\n  local -i eighty=0\n  local -i ninety=0\n  local -i hundred=0\n\
    \  local -i thousand=0\n  local -i million=0\n  local -i billion=0\n  local -i\
    \ trillion=0\n  local -i quadrillion=0\n  local -i quintillion=0\n  local -i sextillion=0\n\
    \  local -i septillion=0\n  local -i octillion=0\n  local -i nonillion=0\n  local\
    \ -i decillion=0\n  local -i undecillion=0\n  local -i duodecillion=0\n  local\
    \ -i tredecillion=\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a sorted_numbers=()\n    local -a number_to_digit=([zero]=0 [one]=1\
    \ [two]=2 [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n\
    \    local -i digit\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i n\n    local -i temp\n\n    n=${#numbers[@]}\n    for ((i=0; i<n; i++));\
    \ do\n        digit=${number_to_digit[${numbers[$i]}]}\n        sorted_numbers[$i]=$digit\n\
    \    done\n\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++)); do\n\
    \            if [[ ${sorted_numbers[$i]} -gt ${sorted_numbers[$j]} ]]; then\n\
    \                temp=${sorted_numbers[$i]}\n                sorted_numbers[$i]=${sorted_numbers[$j]}\n\
    \                sorted_numbers[$j]=$temp\n            fi\n        done\n    done\n\
    \n    for ((i=0; i<n; i++)); do\n        for ((k=0; k<10; k++)); do\n        \
    \    if [[ ${sorted_numbers[$i]} -eq ${number_to_digit[$k]} ]]; then\n       \
    \         sorted_numbers[$i]=$k\n            fi\n        done\n    done\n\n  \
    \  echo ${sorted_numbers[@]}\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: implement this\
    \ function\n    # Hint: use the sort command\n    echo \"$1\" | tr ' ' '\\n' |\
    \ sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local\
    \ -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local\
    \ -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n\
    \  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i\
    \ qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n \
    \ local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i\
    \ zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n \
    \ local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n\
    \  local -i nnn=0\n  local -i ooo=0\n  local -i ppp=0\n\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted\n  local -i i\n  local -i j\n  local -i k\n  local -i n\n  local -i\
    \ m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local\
    \ -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n\
    \  local -i zero\n  local -i one\n  local -i two\n  local -i three\n  local -i\
    \ four\n  local -i five\n  local -i six\n  local -i seven\n  local -i eight\n\
    \  local -i nine\n  local -i num\n  local -i tmp\n  local -i tmp2\n  local -i\
    \ tmp3\n  local -i tmp4\n  local -i tmp5\n  local -i tmp6\n  local -i tmp7\n \
    \ local -i tmp8\n  local -i tmp9\n  local -i tmp10\n  local -i tmp11\n  local\
    \ -i tmp12\n  local -i tmp13\n  local -i tmp14\n  local -i tmp15\n  local -i tmp16\n\
    \  local -i tmp17\n  local -i tmp18\n  local -i tmp19\n  local -i tmp20\n  local\
    \ -i tmp21\n  local -i tmp22\n  local -i tmp23\n  local -i tmp24\n  local -i tmp25\n\
    \  local -i tmp26\n  local -i tmp27\n  local -i tmp28\n  local -i tmp29\n  local\
    \ -i tmp30\n  local -i tmp31\n  local -i tmp32\n  local -i tmp33\n  local -i tmp34\n\
    \  local -i tmp35\n  local -i tmp36\n  local -i tmp37\n  local -i tmp38\n  local\
    \ -i tmp39\n  local -i tmp40\n  local -i tmp41\n  local -i tmp42\n  local -i tmp43\n\
    \  local -i tmp44\n  local -i tmp45\n  local -i tmp46\n  local -i tmp47\n  local\
    \ -i tmp48\n \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($1)\n\
    \  local -a sorted_numbers\n  local -a number_to_digit=([zero]=0 [one]=1 [two]=2\
    \ [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n  local i\n\
    \  local j\n  local tmp\n\n  for ((i=0; i<${#numbers[@]}; i++)); do\n    sorted_numbers[i]=${number_to_digit[${numbers[i]}]}\n\
    \  done\n\n  for ((i=0; i<${#sorted_numbers[@]}; i++)); do\n    for ((j=i+1; j<${#sorted_numbers[@]};\
    \ j++)); do\n      if [[ ${sorted_numbers[i]} -gt ${sorted_numbers[j]} ]]; then\n\
    \        tmp=${sorted_numbers[i]}\n        sorted_numbers[i]=${sorted_numbers[j]}\n\
    \        sorted_numbers[j]=$tmp\n      fi\n    done\n  done\n\n  for ((i=0; i<${#sorted_numbers[@]};\
    \ i++)); do\n    for ((j=0; j<${#number_to_digit[@]}; j++)); do\n      if [[ ${sorted_numbers[i]}\
    \ -eq ${number_to_digit[${number_to_digit[$j]}]} ]]; then\n        sorted_numbers[i]=$j\n\
    \      fi\n    done\n  done\n\n  echo ${sorted_numbers[@]}\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a num_map=([zero]=0 [one]=1 [two]=2 [three]=3 [four]=4 [five]=5 [six]=6\
    \ [seven]=7 [eight]=8 [nine]=9)\n    local -a sorted_nums\n    local num\n   \
    \ local i\n    local sorted_num\n\n    # Split the string into an array of numbers\n\
    \    IFS=' ' read -r -a nums <<< \"$1\"\n\n    # Sort the array of numbers\n \
    \   for num in \"${nums[@]}\"; do\n        sorted_nums[${num_map[$num]}]=$num\n\
    \    done\n\n    # Print the sorted array\n    for i in \"${!sorted_nums[@]}\"\
    ; do\n        sorted_num=\"${sorted_nums[$i]}\"\n        if [ -n \"$sorted_num\"\
    \ ]; then\n            echo -n \"$sorted_num \"\n        fi\n    done\n    echo\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local i\n    local -i num\n    local -i max_num=0\n    local -i num_count=0\n\
    \    local -i max_num_count=0\n    local -i max_num_index=0\n    local -i max_num_index_count=0\n\
    \    local -i max_num_index_count_index=0\n    local -i max_num_index_count_index_count=0\n\
    \    local -i max_num_index_count_index_count_index=0\n    local -i max_num_index_count_index_count_index_count=0\n\
    \    local -i max_num_index_count_index_count_index_count_index=0\n    local -i\
    \ max_num_index_count_index_count_index_count_index_count=0\n    local -i max_num_index_count_index_count_index_count_index_count_index=0\n\
    \    local -i max_num_index_count_index_count_index_count_index_count_index_count=0\n\
    \    local -i max_num_index_count_index_count_index_count_index_count_index_count_index=0\n\
    \    local -i max_num_index_count_index_count_index_count_index_count_index_count_index_count=0\n\
    \    local -i max_num_index_count_index_count_index_count_index_count_index_count_index_count_index=0\n\
    \    local -i max_num_index_count_index_count_index_count_index_count_index_count_index_count_index_count=0\n\
    \    local -i max_num_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index=0\n\
    \    local -i max_num_index_count_index_count_index_count_index_count_index_count_index_count_index_count_index_count=0\n\
    \    local -i max_num_index_count_index_count_index_count_index_count_index_count_index_\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums=($1)\n\
    \    local -a nums_sorted=()\n    local -a nums_sorted_indices=()\n    local -a\
    \ nums_sorted_indices_sorted=()\n    local -a nums_sorted_indices_sorted_indices=()\n\
    \    local -a nums_sorted_indices_sorted_indices_sorted=()\n    local -a nums_sorted_indices_sorted_indices_sorted_indices=()\n\
    \    local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted=()\n  \
    \  local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices=()\n\
    \    local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted=()\n\
    \    local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices=()\n\
    \    local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted=()\n\
    \    local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices=()\n\
    \    local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted=()\n\
    \    local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices=()\n\
    \    local -a nums_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted_indices_sorted=()\n\
    \    local -a num\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: Implement this\
    \ function\n  # Hint: You may want to use the 'sort' command\n  # Hint: You may\
    \ want to use the 'tr' command\n  # Hint: You may want to use the 'wc' command\n\
    \  # Hint: You may want to use the 'seq' command\n  # Hint: You may want to use\
    \ the 'paste' command\n  # Hint: You may want to use the 'cut' command\n  # Hint:\
    \ You may want to use the 'sort' command\n  # Hint: You may want to use the 'uniq'\
    \ command\n  # Hint: You may want to use the 'xargs' command\n  # Hint: You may\
    \ want to use the 'tr' command\n  # Hint: You may want to use the 'sed' command\n\
    \  # Hint: You may want to use the 'sort' command\n  # Hint: You may want to use\
    \ the 'tr' command\n  # Hint: You may want to use the 'sed' command\n  # Hint:\
    \ You may want to use the 'sort' command\n  # Hint: You may want to use the 'tr'\
    \ command\n  # Hint: You may want to use the 'sed' command\n  # Hint: You may\
    \ want to use the 'sort' command\n  # Hint: You may want to use the 'tr' command\n\
    \  # Hint: You may want to use the 'sed' command\n  # Hint: You may want to use\
    \ the 'sort' command\n  # Hint: You may want to use the 'tr' command\n  # Hint:\
    \ You may want to use the 'sed' command\n  # Hint: You may want to use the 'sort'\
    \ command\n  # Hint: You may want to use the 'tr' command\n  # Hint: You may want\
    \ to use the 'sed' command\n  # Hint: You may want to use the 'sort' command\n\
    \  # Hint: You may want to use the 'tr' command\n  # Hint: You may want to use\
    \ the 'sed' command\n  # Hint: You may want to use the 'sort' command\n  # Hint:\
    \ You may want to use the 'tr' command\n  # H\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpn0ajmn39.sh: line 43: syntax error near unexpected token `}''

    /tmp/tmpn0ajmn39.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local numbers=($1)\n\
    \  local sorted_numbers=()\n  local i=0\n  local j=0\n  local min=0\n  local min_index=0\n\
    \  local temp=0\n\n  for ((i=0; i<${#numbers[@]}; i++)); do\n    min=${numbers[$i]}\n\
    \    min_index=$i\n    for ((j=$i; j<${#numbers[@]}; j++)); do\n      if [[ ${numbers[$j]}\
    \ -lt $min ]]; then\n        min=${numbers[$j]}\n        min_index=$j\n      fi\n\
    \    done\n    temp=${numbers[$i]}\n    numbers[$i]=${numbers[$min_index]}\n \
    \   numbers[$min_index]=$temp\n  done\n\n  for ((i=0; i<${#numbers[@]}; i++));\
    \ do\n    sorted_numbers[$i]=$(number_to_word ${numbers[$i]})\n  done\n\n  echo\
    \ ${sorted_numbers[@]}\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpukbj0b3m.sh: line 33: number_to_word: command not found

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a sorted\n    local -i i\n    local -i j\n    local -i k\n    local -i\
    \ l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i zero\n    local -i one\n    local -i two\n    local -i three\n    local -i\
    \ four\n    local -i five\n    local -i six\n    local -i seven\n    local -i\
    \ eight\n    local -i nine\n    local -i num\n    local -i num_count\n    local\
    \ -i num_index\n    local -i num_index_max\n    local -i num_index_min\n    local\
    \ -i num_max\n    local -i num_min\n    local -i num_temp\n    local -i num_temp_index\n\
    \    local -i num_temp_index_max\n    local -i num_temp_index_min\n    local -i\
    \ num_temp_max\n    local -i num_temp_min\n    local -i num_temp_count\n    local\
    \ -i num_temp_count_max\n    local -i num_temp_count_min\n    local -i num_temp_count_temp\n\
    \    local -i num_temp_count_temp_max\n    local -i num_temp_count_temp_min\n\
    \    local -i num_temp_count_temp_index\n    local -i num_temp_count_temp_index_max\n\
    \    local -i num_temp_count_temp_index_min\n    local -i num_temp_count_temp_index_temp\n\
    \    local -i num_temp_count_temp_index_temp_max\n    local -i num_temp_count_temp_index_temp_min\n\
    \    local -i num_temp_count_temp_index_temp_index\n    local -i num_temp_count_temp_index_temp_index_max\n\
    \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a sorted_nums\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i len\n    local -i len_sorted\n    local -i tmp\n    local -i tmp_sorted\n\
    \    local -i tmp_sorted_2\n    local -i tmp_sorted_3\n    local -i tmp_sorted_4\n\
    \    local -i tmp_sorted_5\n    local -i tmp_sorted_6\n    local -i tmp_sorted_7\n\
    \    local -i tmp_sorted_8\n    local -i tmp_sorted_9\n    local -i tmp_sorted_10\n\
    \    local -i tmp_sorted_11\n    local -i tmp_sorted_12\n    local -i tmp_sorted_13\n\
    \    local -i tmp_sorted_14\n    local -i tmp_sorted_15\n    local -i tmp_sorted_16\n\
    \    local -i tmp_sorted_17\n    local -i tmp_sorted_18\n    local -i tmp_sorted_19\n\
    \    local -i tmp_sorted_20\n    local -i tmp_sorted_21\n    local -i tmp_sorted_22\n\
    \    local -i tmp_sorted_23\n    local -i tmp_sorted_24\n    local -i tmp_sorted_25\n\
    \    local -i tmp_sorted_26\n    local -i tmp_sorted_27\n    local -i tmp_sorted_28\n\
    \    local -i tmp_sorted_29\n    local -i tmp_sorted_30\n    local -i tmp_sorted_31\n\
    \    local -i tmp_sorted_32\n    local -i tmp_sorted_33\n    local -i tmp_sorted_34\n\
    \    local -i tmp_sorted_35\n    local -i tmp_sorted_36\n    local -i tmp_sorted_37\n\
    \    local -i tmp_sorted_38\n    local -i tmp_sorted_39\n    local -i tmp_sorted_40\n\
    \    local -i tmp_sorted_41\n    local -i tmp_s\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -i i\n    local -i j\n    local -i min_index\n    local -i min_value\n\
    \    local -i temp\n    local -i len\n    local -i len_numbers\n    local -i len_numbers_minus_one\n\
    \    local -i len_numbers_minus_two\n    local -i len_numbers_minus_three\n  \
    \  local -i len_numbers_minus_four\n    local -i len_numbers_minus_five\n    local\
    \ -i len_numbers_minus_six\n    local -i len_numbers_minus_seven\n    local -i\
    \ len_numbers_minus_eight\n    local -i len_numbers_minus_nine\n    local -i len_numbers_minus_ten\n\
    \    local -i len_numbers_minus_eleven\n    local -i len_numbers_minus_twelve\n\
    \    local -i len_numbers_minus_thirteen\n    local -i len_numbers_minus_fourteen\n\
    \    local -i len_numbers_minus_fifteen\n    local -i len_numbers_minus_sixteen\n\
    \    local -i len_numbers_minus_seventeen\n    local -i len_numbers_minus_eighteen\n\
    \    local -i len_numbers_minus_nineteen\n    local -i len_numbers_minus_twenty\n\
    \    local -i len_numbers_minus_twenty_one\n    local -i len_numbers_minus_twenty_two\n\
    \    local -i len_numbers_minus_twenty_three\n    local -i len_numbers_minus_twenty_four\n\
    \    local -i len_numbers_minus_twenty_five\n    local -i len_numbers_minus_twenty_six\n\
    \    local -i len_numbers_minus_twenty_seven\n    local -i len_numbers_minus_twenty_eight\n\
    \    local -i len_numbers_minus_twenty_nine\n    local -i len_numbers_minus_thirty\n\
    \    local -i len_numbers_minus_thirty_one\n    local -i len_numbers_minus_\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: implement this\
    \ function\n  # Hint: use the sort command\n  echo $1 | tr ' ' '\\n' | sort -n\
    \ | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a nums_sorted\n  local -i i\n  local -i j\n  local -i k\n  local -i min\n \
    \ local -i min_index\n  local -i num_nums\n  local -i num_nums_sorted\n  local\
    \ -i num_nums_sorted_prev\n  local -i num_nums_sorted_prev_prev\n  local -i num_nums_sorted_prev_prev_prev\n\
    \  local -i num_nums_sorted_prev_prev_prev_prev\n  local -i num_nums_sorted_prev_prev_prev_prev_prev\n\
    \  local -i num_nums_sorted_prev_prev_prev_prev_prev_prev\n  local -i num_nums_sorted_prev_prev_prev_prev_prev_prev_prev\n\
    \  local -i num_nums_sorted_prev_prev_prev_prev_prev_prev_prev_prev\n  local -i\
    \ num_nums_sorted_prev_prev_prev_prev_prev_prev_prev_prev_prev\n  local -i num_nums_sorted_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local -i num_nums_sorted_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local -i num_nums_sorted_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local -i num_nums_sorted_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local -i num_nums_sorted_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local -i num_nums_sorted_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local -i num_nums_sorted_prev_prev_prev_prev_prev\n}\n\ncandidate() {\n   \
    \ sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three\
    \ five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven\
    \ nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"\
    six five four three two one zero\") = \"zero one two three four five six\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the following associative array to convert\
    \ numbers to integers\n    #       declare -A num_to_int=([\"zero\"]=0 [\"one\"\
    ]=1 [\"two\"]=2 [\"three\"]=3 [\"four\"]=4 [\"five\"]=5 [\"six\"]=6 [\"seven\"\
    ]=7 [\"eight\"]=8 [\"nine\"]=9)\n    #       You can also use the following associative\
    \ array to convert integers to numbers\n    #       declare -A int_to_num=([0]=\"\
    zero\" [1]=\"one\" [2]=\"two\" [3]=\"three\" [4]=\"four\" [5]=\"five\" [6]=\"\
    six\" [7]=\"seven\" [8]=\"eight\" [9]=\"nine\")\n    #       You can use the following\
    \ command to sort an array:\n    #       sorted_array=($(echo ${array[@]} | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '))\n    #       You can use the following\
    \ command to convert an array to a string:\n    #       string=$(echo ${array[@]})\n\
    \    #       You can use the following command to convert a string to an array:\n\
    \    #       array=($string)\n    #       You can use the following command to\
    \ convert an array to a string:\n    #       string=$(echo ${array[@]})\n    #\
    \       You can use the following command to convert a string to an array:\n \
    \   #       array=($string)\n    #       You can use the following command to\
    \ convert an array to a string:\n    #       string=$(echo ${array[@]})\n    #\
    \       You can use the following command to convert a string to an array:\n \
    \   #       array=($string)\n    #       You can use the following command to\
    \ convert an array to a string:\n    #       string=$(echo ${array[@]})\n    #\
    \       You can use the following command to convert a string to an array:\n \
    \   #       array=($string)\n    #       You can use the following command to\
    \ convert an array to a string:\n    #       string=$(echo ${array[@]})\n    #\
    \       You can use the following\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoid9efmy.sh: line 36: syntax error near unexpected token `}''

    /tmp/tmpoid9efmy.sh: line 36: `}''

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n\
    \    echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n   \
    \ sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three\
    \ five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven\
    \ nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"\
    six five four three two one zero\") = \"zero one two three four five six\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n  local -i nnn=0\n  local -i ooo=0\n \n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n\
    \    echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n   \
    \ sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three\
    \ five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven\
    \ nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"\
    six five four three two one zero\") = \"zero one two three four five six\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: Implement this\
    \ function\n  # Hint: You can use the 'sort' command to sort a string\n  # Hint:\
    \ You can use the 'tr' command to replace all spaces with newlines\n  # Hint:\
    \ You can use the 'tr' command to replace all newlines with spaces\n  # Hint:\
    \ You can use the 'tr' command to replace all 'zero' with '0'\n  # Hint: You can\
    \ use the 'tr' command to replace all 'one' with '1'\n  # Hint: You can use the\
    \ 'tr' command to replace all 'two' with '2'\n  # Hint: You can use the 'tr' command\
    \ to replace all 'three' with '3'\n  # Hint: You can use the 'tr' command to replace\
    \ all 'four' with '4'\n  # Hint: You can use the 'tr' command to replace all 'five'\
    \ with '5'\n  # Hint: You can use the 'tr' command to replace all 'six' with '6'\n\
    \  # Hint: You can use the 'tr' command to replace all 'seven' with '7'\n  # Hint:\
    \ You can use the 'tr' command to replace all 'eight' with '8'\n  # Hint: You\
    \ can use the 'tr' command to replace all 'nine' with '9'\n  # Hint: You can use\
    \ the 'tr' command to replace all '0' with 'zero'\n  # Hint: You can use the 'tr'\
    \ command to replace all '1' with 'one'\n  # Hint: You can use the 'tr' command\
    \ to replace all '2' with 'two'\n  # Hint: You can use the 'tr' command to replace\
    \ all '3' with 'three'\n  # Hint: You can use the 'tr' command to replace all\
    \ '4' with 'four'\n  # Hint: You can use the 'tr' command to replace all '5' with\
    \ 'five'\n  # Hint: You can use the 'tr' command to replace all '6' with 'six'\n\
    \  # Hint: You can use the 'tr' command to replace all '7' with 'seven'\n  # Hint:\
    \ You can use the '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpoxelkow7.sh: line 33: syntax error near unexpected token `}''

    /tmp/tmpoxelkow7.sh: line 33: `}''

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -a sorted_numbers\n    local -i i\n    local -i j\n    local -i k\n\
    \    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i\
    \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local\
    \ -i\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted\n  local -a sorted_nums\n  local -i i\n  local -i j\n  local -i k\n\
    \  local -i len\n  local -i len_sorted\n  local -i len_sorted_nums\n  local -i\
    \ num\n  local -i num_sorted\n  local -i num_sorted_nums\n  local -i num_sorted_nums_index\n\
    \  local -i num_sorted_nums_index_max\n  local -i num_sorted_nums_index_min\n\
    \  local -i num_sorted_nums_index_min_max\n  local -i num_sorted_nums_index_min_max_index\n\
    \  local -i num_sorted_nums_index_min_max_index_max\n  local -i num_sorted_nums_index_min_max_index_min\n\
    \  local -i num_sorted_nums_index_min_max_index_min_max\n  local -i num_sorted_nums_index_min_max_index_min_max_index\n\
    \  local -i num_sorted_nums_index_min_max_index_min_max_index_max\n  local -i\
    \ num_sorted_nums_index_min_max_index_min_max_index_min\n  local -i num_sorted_nums_index_min_max_index_min_max_index_min_max\n\
    \  local -i num_sorted_nums_index_min_max_index_min_max_index_min_max_index\n\
    \  local -i num_sorted_nums_index_min_max_index_min_max_index_min_max_index_max\n\
    \  local -i num_sorted_nums_index_min_max_index_min_max_index_min_max_index_min\n\
    \  local -i num_sorted_nums_index_min_max_index_min_max_index_min_max_index_min_max\n\
    \  local -i num_sorted_nums_index_min_max\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: implement this\
    \ function\n  echo \"one two three four five six seven eight nine\" | tr ' ' '\\\
    n' | grep -w -f <(echo \"$1\" | tr ' ' '\\n') | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: implement this\
    \ function\n    echo \"one two three four five six seven eight nine\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local\
    \ -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n\
    \  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local\
    \ -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n\
    \  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local\
    \ -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n\
    \  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local\
    \ -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n\
    \  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local\
    \ -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n\
    \  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local\
    \ -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n\
    \  local -i n\n\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a sorted_nums\n    local -a sorted_nums_index\n    local -a sorted_nums_index_sorted\n\
    \    local -a sorted_nums_index_sorted_index\n    local -a sorted_nums_index_sorted_index_sorted\n\
    \    local -a sorted_nums_index_sorted_index_sorted_index\n    local -a sorted_nums_index_sorted_index_sorted_index_sorted\n\
    \    local -a sorted_nums_index_sorted_index_sorted_index_sorted_index\n    local\
    \ -a sorted_nums_index_sorted_index_sorted_index_sorted_index_sorted\n    local\
    \ -a sorted_nums_index_sorted_index_sorted_index_sorted_index_sorted_index\n \
    \   local -a sorted_nums_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a sorted_nums_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \    local -a sorted_nums_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a sorted_nums_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \    local -a sorted_nums_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a sorted_nums_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \    local -a sorted_nums_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \    local -a sorted_nums_index_sorted_index\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n\
    \    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i\
    \ r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i temp\n  \
    \  local -i min\n    local -i max\n    local -i num\n    local -i num_len\n  \
    \  local -i num_len_max\n    local -i num_len_min\n    local -i num_len_max_index\n\
    \    local -i num_len_min_index\n    local -i num_len_max_index_prev\n    local\
    \ -i num_len_min_index_prev\n    local -i num_len_max_index_next\n    local -i\
    \ num_len_min_index_next\n    local -i num_len_max_index_prev_prev\n    local\
    \ -i num_len_min_index_prev_prev\n    local -i num_len_max_index_next_next\n \
    \   local -i num_len_min_index_next_next\n    local -i num_len_max_index_prev_prev_prev\n\
    \    local -i num_len_min_index_prev_prev_prev\n    local -i num_len_max_index_next_next_next\n\
    \    local -i num_len_min_index_next_next_next\n    local -i num_len_max_index_prev_prev_prev_prev\n\
    \    local -i num_len_min_index_prev_prev_prev_prev\n    local -i num_len_max_index_next_next_next_next\n\
    \    local -i num_len_min_index_next_next_next_next\n    local -i num_len_max_index_prev_prev_prev_prev_prev\n\
    \    local -i num_len_min_index_prev_prev_prev_prev_prev\n    local -i\n}\n\n\
    candidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Write your\
    \ code here\n    # HINT: You can use the following associative array to convert\
    \ numberals to numbers:\n    declare -A numeral_to_number=([\"zero\"]=0 [\"one\"\
    ]=1 [\"two\"]=2 [\"three\"]=3 [\"four\"]=4 [\"five\"]=5 [\"six\"]=6 [\"seven\"\
    ]=7 [\"eight\"]=8 [\"nine\"]=9)\n    # HINT: You can use the following associative\
    \ array to convert numbers to numberals:\n    declare -A number_to_numeral=([0]=\"\
    zero\" [1]=\"one\" [2]=\"two\" [3]=\"three\" [4]=\"four\" [5]=\"five\" [6]=\"\
    six\" [7]=\"seven\" [8]=\"eight\" [9]=\"nine\")\n    # HINT: You can use the following\
    \ associative array to convert numbers to words:\n    declare -A number_to_word=([0]=\"\
    zero\" [1]=\"one\" [2]=\"two\" [3]=\"three\" [4]=\"four\" [5]=\"five\" [6]=\"\
    six\" [7]=\"seven\" [8]=\"eight\" [9]=\"nine\")\n    # HINT: You can use the following\
    \ associative array to convert words to numbers:\n    declare -A word_to_number=([\"\
    zero\"]=0 [\"one\"]=1 [\"two\"]=2 [\"three\"]=3 [\"four\"]=4 [\"five\"]=5 [\"\
    six\"]=6 [\"seven\"]=7 [\"eight\"]=8 [\"nine\"]=9)\n    # HINT: You can use the\
    \ following associative array to convert words to numberals:\n    declare -A word_to_numeral=([\"\
    zero\"]=\"zero\" [\"one\"]=\"one\" [\"two\"]=\"two\" [\"three\"]=\"three\" [\"\
    four\"]=\"four\" [\"five\"]=\"five\" [\"six\"]=\"six\" [\"seven\"]=\"seven\" [\"\
    eight\"]=\"eight\" [\"nine\"]=\"nine\")\n    # HINT: You can use the following\
    \ associative array to convert numberals to words:\n    declare -A numeral_to_word=([\"\
    zero\"]=\"zero\" [\"one\"]=\"one\" [\"two\"]=\"two\" [\"three\"]=\"three\" [\"\
    four\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzxutxll4.sh: line 35: unexpected EOF while looking for matching
    `"''

    /tmp/tmpzxutxll4.sh: line 39: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($1)\n\
    \  local -a sorted=()\n  local -a num_to_word=([0]=\"zero\" [1]=\"one\" [2]=\"\
    two\" [3]=\"three\" [4]=\"four\" [5]=\"five\" [6]=\"six\" [7]=\"seven\" [8]=\"\
    eight\" [9]=\"nine\")\n  local -a word_to_num=([zero]=0 [one]=1 [two]=2 [three]=3\
    \ [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n  local -i i\n  local\
    \ -i j\n  local -i k\n  local -i min\n  local -i min_index\n  local -i num\n \
    \ local -i num_index\n  local -i num_len=${#numbers[@]}\n  local -i sorted_len=0\n\
    \  local -i temp\n\n  for ((i=0; i<num_len; i++)); do\n    num=${word_to_num[${numbers[i]}]}\n\
    \    min=10\n    for ((j=i; j<num_len; j++)); do\n      temp=${word_to_num[${numbers[j]}]}\n\
    \      if ((temp < min)); then\n        min=temp\n        min_index=j\n      fi\n\
    \    done\n    temp=${numbers[i]}\n    numbers[i]=${numbers[min_index]}\n    numbers[min_index]=$temp\n\
    \  done\n\n  for ((i=0; i<num_len; i++)); do\n    sorted[sorted_len]=${numbers[i]}\n\
    \    ((sorted_len++))\n  done\n\n  echo ${sorted[@]}\n}\n\ncandidate() {\n   \
    \ sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three\
    \ five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven\
    \ nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"\
    six five four three two one zero\") = \"zero one two three four five six\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted_nums\n  local -a num_map\n  local -i i\n  local -i j\n  local -i k\n\
    \  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local\
    \ -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n\
    \  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i num_map_len\n\
    \  local -i nums_len\n  local -i sorted_nums_len\n  local -i sorted_nums_idx\n\
    \  local -i sorted_nums_idx_last\n  local -i sorted_nums_idx_last_last\n  local\
    \ -i sorted_nums_idx_last_last_last\n  local -i sorted_nums_idx_last_last_last_last\n\
    \  local -i sorted_nums_idx_last_last_last_last_last\n  local -i sorted_nums_idx_last_last_last_last_last_last\n\
    \  local -i sorted_nums_idx_last_last_last_last_last_last_last\n  local -i sorted_nums_idx_last_last_last_last_last_last_last_last\n\
    \  local -i sorted_nums_idx_last_last_last_last_last_last_last_last_last\n  local\
    \ -i sorted_nums_idx_last_last_last_last_last_last_last_last_last_last\n  local\
    \ -i sorted_nums_idx_last_last_last_last_last_last_last_last_last_last_last\n\
    \  local -i sorted_nums_idx_last_last_last_last_last_last_last_last_last_last_last_last\n\
    \  local -i sorted_nums_idx_last_last_last_last_last_last_last_last_last_last_last_last_last\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement this\
    \ function\n    echo \"one two three four five six seven eight nine\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i\
    \ m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local\
    \ -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n\
    \  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local\
    \ -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n\
    \  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local\
    \ -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n\
    \  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local\
    \ -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n\
    \  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local\
    \ -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n\
    \  local -i m\n\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a sorted_nums\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i num_nums\n    local -i num_sorted_nums\n    local -i min_index\n    local\
    \ -i min_value\n    local -i tmp_value\n    local -i tmp_index\n    local -i tmp_num\n\
    \    local -i tmp_sorted_num\n    local -i tmp_index_num\n    local -i tmp_index_sorted_num\n\
    \    local -i tmp_value_num\n    local -i tmp_value_sorted_num\n    local -i tmp_index_num_sorted_num\n\
    \    local -i tmp_value_num_sorted_num\n    local -i tmp_index_sorted_num_num\n\
    \    local -i tmp_value_sorted_num_num\n    local -i tmp_index_sorted_num_sorted_num\n\
    \    local -i tmp_value_sorted_num_sorted_num\n    local -i tmp_index_num_num\n\
    \    local -i tmp_value_num_num\n    local -i tmp_index_num_sorted_num\n    local\
    \ -i tmp_value_num_sorted_num\n    local -i tmp_index_sorted_num_num\n    local\
    \ -i tmp_value_sorted_num_num\n    local -i tmp_index_num_num\n    local -i tmp_value_num_num\n\
    \    local -i tmp_index_num_sorted_num\n    local -i tmp_value_num_sorted_num\n\
    \    local -i tmp_index_sorted_num_num\n    local -i tmp_value_sorted_num_num\n\
    \    local -i tmp_index_num_num\n    local -i tmp_value_num_num\n    local -i\
    \ tmp_index_num_sorted_num\n    local -i tmp_value_num_sorted_num\n    local -i\
    \ tmp_index_sorted_num_num\n    local -i tmp_value_sorted_num_num\n    local -i\
    \ tmp_index_num_num\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the following associative array to convert\
    \ words to numbers:\n    # declare -A numbers=([\"zero\"]=0 [\"one\"]=1 [\"two\"\
    ]=2 [\"three\"]=3 [\"four\"]=4 [\"five\"]=5 [\"six\"]=6 [\"seven\"]=7 [\"eight\"\
    ]=8 [\"nine\"]=9)\n    # Hint: You can use the following associative array to\
    \ convert numbers to words:\n    # declare -A words=([0]=\"zero\" [1]=\"one\"\
    \ [2]=\"two\" [3]=\"three\" [4]=\"four\" [5]=\"five\" [6]=\"six\" [7]=\"seven\"\
    \ [8]=\"eight\" [9]=\"nine\")\n    # Hint: You can use the following associative\
    \ array to convert numbers to words:\n    # declare -A words=([0]=\"zero\" [1]=\"\
    one\" [2]=\"two\" [3]=\"three\" [4]=\"four\" [5]=\"five\" [6]=\"six\" [7]=\"seven\"\
    \ [8]=\"eight\" [9]=\"nine\")\n    declare -A numbers=([\"zero\"]=0 [\"one\"]=1\
    \ [\"two\"]=2 [\"three\"]=3 [\"four\"]=4 [\"five\"]=5 [\"six\"]=6 [\"seven\"]=7\
    \ [\"eight\"]=8 [\"nine\"]=9)\n    declare -A words=([0]=\"zero\" [1]=\"one\"\
    \ [2]=\"two\" [3]=\"three\" [4]=\"four\" [5]=\"five\" [6]=\"six\" [7]=\"seven\"\
    \ [8]=\"eight\" [9]=\"nine\")\n    declare -a arr\n    declare -a arr2\n    declare\
    \ -a arr3\n    declare -a arr4\n    declare -a arr5\n    declare -a arr6\n   \
    \ declare -a arr7\n    declare -a arr8\n    declare -a arr9\n    declare -a arr10\n\
    \    declare -a arr11\n    declare -a arr12\n    declare -a arr13\n    declare\
    \ -a arr14\n    declare -a arr15\n    declare -a arr16\n    declare -a arr17\n\
    \    declare -a\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($1)\n\
    \  local -a sorted_numbers=()\n  local -a number_to_digit=([zero]=0 [one]=1 [two]=2\
    \ [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n  local -i\
    \ i j\n  local -i min_index\n  local -i min_value\n  local -i digit\n  local -i\
    \ sorted_numbers_length=${#numbers[@]}\n\n  for ((i=0; i<sorted_numbers_length;\
    \ i++)); do\n    min_index=$i\n    min_value=${number_to_digit[${numbers[$i]}]}\n\
    \    for ((j=i+1; j<sorted_numbers_length; j++)); do\n      digit=${number_to_digit[${numbers[$j]}]}\n\
    \      if ((digit < min_value)); then\n        min_index=$j\n        min_value=$digit\n\
    \      fi\n    done\n    sorted_numbers[$i]=${numbers[$min_index]}\n    numbers[$min_index]=${numbers[$i]}\n\
    \  done\n\n  echo ${sorted_numbers[@]}\n}\n\ncandidate() {\n    sort_numbers \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($1)\n\
    \  local -a sorted_numbers=()\n  local -a number_to_digit=([zero]=0 [one]=1 [two]=2\
    \ [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n  local -i\
    \ i=0\n  local -i j=0\n  local -i k=0\n  local -i digit=0\n  local -i min_digit=0\n\
    \  local -i min_index=0\n  local -i size=${#numbers[@]}\n\n  for ((i=0; i<size;\
    \ i++)); do\n    digit=${number_to_digit[${numbers[$i]}]}\n    min_digit=$digit\n\
    \    min_index=$i\n    for ((j=$i+1; j<size; j++)); do\n      digit=${number_to_digit[${numbers[$j]}]}\n\
    \      if ((digit < min_digit)); then\n        min_digit=$digit\n        min_index=$j\n\
    \      fi\n    done\n    sorted_numbers[$k]=${numbers[$min_index]}\n    ((k++))\n\
    \  done\n\n  echo ${sorted_numbers[@]}\n}\n\ncandidate() {\n    sort_numbers \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -i i\n  local -i j\n  local -i len\n  local -i min\n  local -i min_index\n \
    \ local -i tmp\n  local -i tmp_index\n  local -a sorted_nums\n  local -i sorted_nums_index\n\
    \  local -a sorted_nums_indexes\n  local -i sorted_nums_indexes_index\n  local\
    \ -a sorted_nums_indexes_indexes\n  local -i sorted_nums_indexes_indexes_index\n\
    \  local -i sorted_nums_indexes_indexes_index_index\n  local -i sorted_nums_indexes_indexes_index_index_index\n\
    \  local -i sorted_nums_indexes_indexes_index_index_index_index\n  local -i sorted_nums_indexes_indexes_index_index_index_index_index\n\
    \  local -i sorted_nums_indexes_indexes_index_index_index_index_index_index\n\
    \  local -i sorted_nums_indexes_indexes_index_index_index_index_index_index_index\n\
    \  local -i sorted_nums_indexes_indexes_index_index_index_index_index_index_index_index\n\
    \  local -i sorted_nums_indexes_indexes_index_index_index_index_index_index_index_index_index\n\
    \  local -i sorted_nums_indexes_indexes_index_index_index_index_index_index_index_index_index_index\n\
    \  local -i sorted_nums_indexes_indexes_index_index_index_index_index_index_index_index_index_index_index\n\
    \  local -i sorted_nums_indexes_indexes_index_index_index_index_index_index_index_index_index_index_index_index\n\
    \  local -i sorted_nums_indexes_indexes_index_index_index_index_index_index_index_index_index_index_index_index_index\n\
    \  local -i sorted_nums_indexes_indexes_index_index_index\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -a sorted_numbers\n    local -A number_map\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local\
    \ -i m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local\
    \ -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local\
    \ -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a nums_sorted\n    local -a nums_sorted_str\n    local -a nums_sorted_str_final\n\
    \    local -a nums_sorted_str_final_final\n    local -a nums_sorted_str_final_final_final\n\
    \    local -a nums_sorted_str_final_final_final_final\n    local -a nums_sorted_str_final_final_final_final_final\n\
    \    local -a nums_sorted_str_final_final_final_final_final_final\n    local -a\
    \ nums_sorted_str_final_final_final_final_final_final_final\n    local -a nums_sorted_str_final_final_final_final_final_final_final_final\n\
    \    local -a nums_sorted_str_final_final_final_final_final_final_final_final_final\n\
    \    local -a nums_sorted_str_final_final_final_final_final_final_final_final_final_final\n\
    \    local -a nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final\n\
    \    local -a nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \    local -a nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \    local -a nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \    local -a nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \    local -a nums_sorted_str_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \    local -a nums_sorted_str_final_final_final_\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a sorted\n    local -i i\n    local -i j\n    local -i k\n    local -i\
    \ l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n\n}\n\n\
    candidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 0
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a sorted_numbers=()\n    local -a numbers_to_sort=(\"zero\" \"one\"\
    \ \"two\" \"three\" \"four\" \"five\" \"six\" \"seven\" \"eight\" \"nine\")\n\
    \    for number in \"${numbers_to_sort[@]}\"; do\n        for i in \"${!numbers[@]}\"\
    ; do\n            if [[ \"${numbers[$i]}\" == \"$number\" ]]; then\n         \
    \       sorted_numbers+=(\"$number\")\n                unset \"numbers[$i]\"\n\
    \            fi\n        done\n    done\n    echo \"${sorted_numbers[@]}\"\n}\n\
    \ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -a sorted\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i\
    \ m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local\
    \ -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n\
    \  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local\
    \ -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n\
    \  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local\
    \ -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n\
    \  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local\
    \ -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n\
    \  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local\
    \ -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n\
    \  local -i m\n \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted_nums\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local\
    \ -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n\
    \  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local\
    \ -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n\
    \  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local\
    \ -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n\
    \  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local\
    \ -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n\
    \  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local\
    \ -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n\
    \  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local\
    \ -i l\n  local -\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted_nums\n  local -i i\n  local -i j\n  local -i k\n  local -i num\n \
    \ local -i sorted_num\n  local -i tmp\n  local -i len\n  local -i len_sorted\n\
    \  local -i len_nums\n  local -i len_sorted_nums\n  local -i len_nums_sorted\n\
    \  local -i len_sorted_nums_sorted\n  local -i len_nums_sorted_sorted\n  local\
    \ -i len_sorted_nums_sorted_sorted\n  local -i len_nums_sorted_sorted_sorted\n\
    \  local -i len_sorted_nums_sorted_sorted_sorted\n  local -i len_nums_sorted_sorted_sorted_sorted\n\
    \  local -i len_sorted_nums_sorted_sorted_sorted_sorted\n  local -i len_nums_sorted_sorted_sorted_sorted_sorted\n\
    \  local -i len_sorted_nums_sorted_sorted_sorted_sorted_sorted\n  local -i len_nums_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local -i len_sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted\n  local\
    \ -i len_nums_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n  local -i len_sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local -i len_nums_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local -i len_sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local -i len_nums_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \ \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -a sorted\n  local -i i\n  local -i j\n  local -i k\n  local -i n\n  local -i\
    \ m\n  local -i temp\n  local -i temp2\n  local -i temp3\n  local -i temp4\n \
    \ local -i temp5\n  local -i temp6\n  local -i temp7\n  local -i temp8\n  local\
    \ -i temp9\n  local -i temp10\n  local -i temp11\n  local -i temp12\n  local -i\
    \ temp13\n  local -i temp14\n  local -i temp15\n  local -i temp16\n  local -i\
    \ temp17\n  local -i temp18\n  local -i temp19\n  local -i temp20\n  local -i\
    \ temp21\n  local -i temp22\n  local -i temp23\n  local -i temp24\n  local -i\
    \ temp25\n  local -i temp26\n  local -i temp27\n  local -i temp28\n  local -i\
    \ temp29\n  local -i temp30\n  local -i temp31\n  local -i temp32\n  local -i\
    \ temp33\n  local -i temp34\n  local -i temp35\n  local -i temp36\n  local -i\
    \ temp37\n  local -i temp38\n  local -i temp39\n  local -i temp40\n  local -i\
    \ temp41\n  local -i temp42\n  local -i temp43\n  local -i temp44\n  local -i\
    \ temp45\n  local -i temp46\n  local -i temp47\n  local -i temp48\n  local -i\
    \ temp49\n  local -i temp50\n  local -i temp51\n  local -i temp52\n  local -i\
    \ temp53\n  local -i temp54\n  local -i temp55\n  local -i temp56\n  local -i\
    \ temp57\n  local -i temp58\n  local -i temp59\n  local -i temp60\n  local -i\
    \ temp61\n  local -i temp62\n  local -i temp63\n  local -i temp64\n  local -i\
    \ temp65\n  local -i temp66\n  local -i temp67\n \n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: implement this\
    \ function\n    echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums=($1)\n\
    \  local -a num_map=([zero]=0 [one]=1 [two]=2 [three]=3 [four]=4 [five]=5 [six]=6\
    \ [seven]=7 [eight]=8 [nine]=9)\n  local -a sorted_nums\n  for num in \"${nums[@]}\"\
    ; do\n    sorted_nums+=(${num_map[$num]})\n  done\n  echo \"${sorted_nums[*]}\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -a sorted\n    local number\n    local i\n    local j\n    local k\n\
    \    local l\n    local m\n    local n\n    local o\n    local p\n    local q\n\
    \    local r\n    local s\n    local t\n    local u\n    local v\n    local w\n\
    \    local x\n    local y\n    local z\n    local zero\n    local one\n    local\
    \ two\n    local three\n    local four\n    local five\n    local six\n    local\
    \ seven\n    local eight\n    local nine\n    local ten\n    local eleven\n  \
    \  local twelve\n    local thirteen\n    local fourteen\n    local fifteen\n \
    \   local sixteen\n    local seventeen\n    local eighteen\n    local nineteen\n\
    \    local twenty\n    local thirty\n    local forty\n    local fifty\n    local\
    \ sixty\n    local seventy\n    local eighty\n    local ninety\n    local hundred\n\
    \    local thousand\n    local million\n    local billion\n    local trillion\n\
    \    local quadrillion\n    local quintillion\n    local sextillion\n    local\
    \ septillion\n    local octillion\n    local nonillion\n    local decillion\n\
    \    local undecillion\n    local duodecillion\n    local tredecillion\n    local\
    \ quattuordecillion\n    local quindecillion\n    local sexdecillion\n    local\
    \ septendecillion\n    local octodecillion\n    local novemdecillion\n    local\
    \ vigintillion\n    local unvigintillion\n    local duovigintillion\n    local\
    \ tresvigintillion\n    local quattuorvigintillion\n    local quinvigintillion\n\
    \    local sexvigintillion\n    local septenvigintillion\n    local octovigintillion\n\
    \    local novemvigintillion\n    local trigintillion\n    local untrigintillion\n\
    \    local duotrigintillion\n    local tretrigintillion\n    local quattuortrigintillion\n\
    \    local quintrigintillion\n    local sextrigintillion\n    local septentrigintillion\n\
    \    local octotrigintillion\n    local novemtrigintillion\n    local quadragintillion\n\
    \    local unquadragintillion\n    local duoquadragintillion\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -a sorted_numbers\n  local -a sorted_numbers_index\n  local -a sorted_numbers_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index\n  local -a sorted_numbers_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index\n  local -a sorted_numbers_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index\n  local\
    \ -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted\n  local\
    \ -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 0
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($1)\n\
    \  local -a sorted=()\n  local -a numbers_to_sort=(\"zero\" \"one\" \"two\" \"\
    three\" \"four\" \"five\" \"six\" \"seven\" \"eight\" \"nine\")\n  for number\
    \ in \"${numbers_to_sort[@]}\"; do\n    for i in \"${!numbers[@]}\"; do\n    \
    \  if [[ \"${numbers[$i]}\" == \"$number\" ]]; then\n        sorted+=(\"$number\"\
    )\n        unset numbers[$i]\n      fi\n    done\n  done\n  echo \"${sorted[@]}\"\
    \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a sorted\n    local -a sorted_numbers\n    local -i i=0\n    local\
    \ -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n\
    \    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local\
    \ -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n\
    \    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i zero=0\n \
    \   local -i one=0\n    local -i two=0\n    local -i three=0\n    local -i four=0\n\
    \    local -i five=0\n    local -i six=0\n    local -i seven=0\n    local -i eight=0\n\
    \    local -i nine=0\n    for i in \"${numbers[@]}\"; do\n        case \"$i\"\
    \ in\n            zero)\n                zero=1\n                ;;\n        \
    \    one)\n                one=1\n                ;;\n            two)\n     \
    \           two=1\n                ;;\n            three)\n                three=1\n\
    \                ;;\n            four)\n                four=1\n             \
    \   ;;\n            five)\n                five=1\n                ;;\n      \
    \      six)\n                six=1\n                ;;\n            seven)\n \
    \               seven=1\n                ;;\n            eight)\n            \
    \    eight=1\n                ;;\n            nine)\n                nine=1\n\
    \                ;;\n            *)\n                echo \"Invalid input\"\n\
    \                return 1\n                ;;\n        esac\n    done\n    if\
    \ [[ $zero -eq 1 ]]; then\n        sorted_numbers[$j]=\"zero\"\n        j=$j+1\n\
    \    fi\n    if [[ $one -eq 1 ]]; then\n        sorted_numbers[$j]=\"one\"\n \
    \       j=$j+1\n    fi\n    if [[ $two -eq 1 ]]; then\n        sorted_numbers[$j]=\"\
    two\"\n        j\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplv0qj1nr.sh: line 90: syntax error near unexpected token `}''

    /tmp/tmplv0qj1nr.sh: line 90: `}''

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: implement this\
    \ function\n    echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: implement this\
    \ function\n    echo \"one three five\"\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a sorted_numbers=()\n    local -a number_map=([zero]=0 [one]=1 [two]=2\
    \ [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i n=${#numbers[@]}\n\
    \    local -i min=0\n    local -i min_index=0\n    local -i number=0\n\n    for\
    \ ((i=0; i<n; i++)); do\n        min=${number_map[${numbers[0]}]}\n        min_index=0\n\
    \        for ((j=1; j<n-i; j++)); do\n            number=${number_map[${numbers[j]}]}\n\
    \            if ((number < min)); then\n                min=${number_map[${numbers[j]}]}\n\
    \                min_index=${j}\n            fi\n        done\n        sorted_numbers[k++]=${numbers[min_index]}\n\
    \        unset numbers[min_index]\n        numbers=(${numbers[@]})\n    done\n\
    \n    echo ${sorted_numbers[@]}\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a sorted_numbers=()\n    local -a numbers_to_sort=()\n    local -a\
    \ sorted_numbers_to_sort=()\n    local -a sorted_numbers_to_sort_index=()\n  \
    \  local -a sorted_numbers_to_sort_index_sorted=()\n    local -a sorted_numbers_to_sort_index_sorted_index=()\n\
    \    local -a sorted_numbers_to_sort_index_sorted_index_sorted=()\n    local -a\
    \ sorted_numbers_to_sort_index_sorted_index_sorted_index=()\n    local -a sorted_numbers_to_sort_index_sorted_index_sorted_index_sorted=()\n\
    \    local -a sorted_numbers_to_sort_index_sorted_index_sorted_index_sorted_index=()\n\
    \    local -a sorted_numbers_to_sort_index_sorted_index_sorted_index_sorted_index_sorted=()\n\
    \    local -a sorted_numbers_to_sort_index_sorted_index_sorted_index_sorted_index_sorted_index=()\n\
    \    local -a sorted_numbers_to_sort_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted=()\n\
    \    local -a sorted_numbers_to_sort_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index=()\n\
    \    local -a sorted_numbers_to_sort_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted=()\n\
    \    local -a sorted_numbers_to_sort_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index=()\n\
    \    local -a sorted_numbers_to_sort_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a sorted_nums\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -a sorted_numbers\n    local -i i\n    local -i j\n    local -i k\n\
    \    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i\
    \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local\
    \ -i\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -i i\n  local -i j\n  local -i min\n  local -i min_index\n  local -i len\n \
    \ local -i tmp\n  local -i tmp_index\n  local -i tmp_index2\n  local -i tmp_index3\n\
    \  local -i tmp_index4\n  local -i tmp_index5\n  local -i tmp_index6\n  local\
    \ -i tmp_index7\n  local -i tmp_index8\n  local -i tmp_index9\n  local -i tmp_index10\n\
    \  local -i tmp_index11\n  local -i tmp_index12\n  local -i tmp_index13\n  local\
    \ -i tmp_index14\n  local -i tmp_index15\n  local -i tmp_index16\n  local -i tmp_index17\n\
    \  local -i tmp_index18\n  local -i tmp_index19\n  local -i tmp_index20\n  local\
    \ -i tmp_index21\n  local -i tmp_index22\n  local -i tmp_index23\n  local -i tmp_index24\n\
    \  local -i tmp_index25\n  local -i tmp_index26\n  local -i tmp_index27\n  local\
    \ -i tmp_index28\n  local -i tmp_index29\n  local -i tmp_index30\n  local -i tmp_index31\n\
    \  local -i tmp_index32\n  local -i tmp_index33\n  local -i tmp_index34\n  local\
    \ -i tmp_index35\n  local -i tmp_index36\n  local -i tmp_index37\n  local -i tmp_index38\n\
    \  local -i tmp_index39\n  local -i tmp_index40\n  local -i tmp_index41\n  local\
    \ -i tmp_index42\n  local -i tmp_index43\n  local -i tmp_index44\n  local -i tmp_index45\n\
    \  local -i tmp_index46\n  local -i tmp_index47\n  local -i tmp_index48\n  local\
    \ -i tmp_index49\n  local -i tmp_index50\n  local -i tmp_index51\n  local -i tmp_index52\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: implement this\
    \ function\n  echo \"one three five\"\n}\n\ncandidate() {\n    sort_numbers \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement me\n\
    \    echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -i i\n  local -i j\n  local -i min\n  local -i min_index\n  local -i len\n \
    \ local -i temp\n  local -i temp_index\n  local -i temp_index2\n  local -i temp_index3\n\
    \  local -i temp_index4\n  local -i temp_index5\n  local -i temp_index6\n  local\
    \ -i temp_index7\n  local -i temp_index8\n  local -i temp_index9\n  local -i temp_index10\n\
    \  local -i temp_index11\n  local -i temp_index12\n  local -i temp_index13\n \
    \ local -i temp_index14\n  local -i temp_index15\n  local -i temp_index16\n  local\
    \ -i temp_index17\n  local -i temp_index18\n  local -i temp_index19\n  local -i\
    \ temp_index20\n  local -i temp_index21\n  local -i temp_index22\n  local -i temp_index23\n\
    \  local -i temp_index24\n  local -i temp_index25\n  local -i temp_index26\n \
    \ local -i temp_index27\n  local -i temp_index28\n  local -i temp_index29\n  local\
    \ -i temp_index30\n  local -i temp_index31\n  local -i temp_index32\n  local -i\
    \ temp_index33\n  local -i temp_index34\n  local -i temp_index35\n  local -i temp_index36\n\
    \  local -i temp_index37\n  local -i temp_index38\n  local -i temp_index39\n \
    \ local -i temp_index40\n  local -i temp_index41\n  local -i temp_index42\n  local\
    \ -i temp_index43\n  local -i temp_index44\n  local -i temp_index45\n  local -i\
    \ temp_index46\n  local -i temp_index47\n  local -i temp_index48\n  local -i temp_index49\n\
    \  local -i temp_index50\n  local -i temp_index51\n  local -i temp_index52\n\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i\
    \ m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local\
    \ -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n\
    \  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local\
    \ -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n\
    \  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n \
    \ local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local\
    \ -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i\
    \ yy\n  local -i zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n\
    \  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n\
    \  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n\
    \  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n\
    \  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n\
    \  local -i yyy\n  local -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n\
    \  local -i ddd\n  local -i eee\n  local -i fff\n  local -\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a num_map\n  local -i i\n  local -i j\n  local -i k\n  local -i n\n  local\
    \ -i tmp\n  local -i num_map_len\n  local -i nums_len\n  local -i num_map_idx\n\
    \  local -i nums_idx\n  local -i num_map_idx_tmp\n  local -i nums_idx_tmp\n  local\
    \ -i num_map_idx_tmp_tmp\n  local -i nums_idx_tmp_tmp\n  local -i num_map_idx_tmp_tmp_tmp\n\
    \  local -i nums_idx_tmp_tmp_tmp\n  local -i num_map_idx_tmp_tmp_tmp_tmp\n  local\
    \ -i nums_idx_tmp_tmp_tmp_tmp\n  local -i num_map_idx_tmp_tmp_tmp_tmp_tmp\n  local\
    \ -i nums_idx_tmp_tmp_tmp_tmp_tmp\n  local -i num_map_idx_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local -i nums_idx_tmp_tmp_tmp_tmp_tmp_tmp\n  local -i num_map_idx_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local -i nums_idx_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n  local -i num_map_idx_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local -i nums_idx_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n  local -i num_map_idx_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local -i nums_idx_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n  local -i num_map_idx_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \  local -i nums_idx_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_\n}\n\ncandidate() {\n  \
    \  sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"\
    three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero four\
    \ seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: implement this\
    \ function\n  echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement this\
    \ function\n    # Hint: You can use the following associative array to convert\
    \ a string to a number:\n    declare -A numbers=([\"zero\"]=0 [\"one\"]=1 [\"\
    two\"]=2 [\"three\"]=3 [\"four\"]=4 [\"five\"]=5 [\"six\"]=6 [\"seven\"]=7 [\"\
    eight\"]=8 [\"nine\"]=9)\n    # Hint: You can use the following associative array\
    \ to convert a number to a string:\n    declare -A strings=([0]=\"zero\" [1]=\"\
    one\" [2]=\"two\" [3]=\"three\" [4]=\"four\" [5]=\"five\" [6]=\"six\" [7]=\"seven\"\
    \ [8]=\"eight\" [9]=\"nine\")\n    # Hint: You can use the following associative\
    \ array to store the sorted numbers:\n    declare -A sorted_numbers\n    # Hint:\
    \ You can use the following associative array to store the sorted strings:\n \
    \   declare -A sorted_strings\n    # Hint: You can use the following associative\
    \ array to store the sorted strings:\n    declare -A sorted_strings\n    # Hint:\
    \ You can use the following associative array to store the sorted strings:\n \
    \   declare -A sorted_strings\n    # Hint: You can use the following associative\
    \ array to store the sorted strings:\n    declare -A sorted_strings\n    # Hint:\
    \ You can use the following associative array to store the sorted strings:\n \
    \   declare -A sorted_strings\n    # Hint: You can use the following associative\
    \ array to store the sorted strings:\n    declare -A sorted_strings\n    # Hint:\
    \ You can use the following associative array to store the sorted strings:\n \
    \   declare -A sorted_strings\n    # Hint: You can use the following associative\
    \ array to store the sorted strings:\n    declare -A sorted_strings\n    # Hint:\
    \ You can use the following associative array to store the sorted strings:\n \
    \   declare -A sorted_strings\n    # Hint: You can use the following associative\
    \ array to store the sorted strings:\n    declare -A sorted_strings\n    # Hint:\
    \ You can use the following associative array to store the sorted strings:\n \
    \   declare -A\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted_nums\n  local -i i\n  local -i j\n  local -i k\n  local -i len\n \
    \ local -i min\n  local -i min_index\n  local -i temp\n\n  nums=($1)\n  len=${#nums[@]}\n\
    \  for ((i=0; i<len; i++)); do\n    min=${nums[i]}\n    min_index=$i\n    for\
    \ ((j=i+1; j<len; j++)); do\n      if [[ ${nums[j]} -lt $min ]]; then\n      \
    \  min=${nums[j]}\n        min_index=$j\n      fi\n    done\n    temp=${nums[i]}\n\
    \    nums[i]=${nums[min_index]}\n    nums[min_index]=$temp\n  done\n  for ((k=0;\
    \ k<len; k++)); do\n    sorted_nums[k]=$(number_to_word ${nums[k]})\n  done\n\
    \  echo ${sorted_nums[@]}\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpbhpbxbu_.sh: line 36: number_to_word: command not found

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a sorted_nums\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i len\n    local -i num\n    local -i sorted_num\n    local -i tmp\n\n    nums=($1)\n\
    \    len=${#nums[@]}\n    for ((i=0; i<len; i++)); do\n        case ${nums[i]}\
    \ in\n            zero) num=0;;\n            one) num=1;;\n            two) num=2;;\n\
    \            three) num=3;;\n            four) num=4;;\n            five) num=5;;\n\
    \            six) num=6;;\n            seven) num=7;;\n            eight) num=8;;\n\
    \            nine) num=9;;\n            *) echo \"Invalid input: ${nums[i]}\"\n\
    \               return 1;;\n        esac\n        sorted_nums[i]=$num\n    done\n\
    \n    for ((i=0; i<len; i++)); do\n        for ((j=i+1; j<len; j++)); do\n   \
    \         if [[ ${sorted_nums[i]} -gt ${sorted_nums[j]} ]]; then\n           \
    \     tmp=${sorted_nums[i]}\n                sorted_nums[i]=${sorted_nums[j]}\n\
    \                sorted_nums[j]=$tmp\n            fi\n        done\n    done\n\
    \n    for ((i=0; i<len; i++)); do\n        sorted_num=${sorted_nums[i]}\n    \
    \    case $sorted_num in\n            0) num=zero;;\n            1) num=one;;\n\
    \            2) num=two;;\n            3) num=three;;\n            4) num=four;;\n\
    \            5) num=five;;\n            6) num=six;;\n            7) num=seven;;\n\
    \            8) num=eight;;\n            9) num=nine;;\n        esac\n       \
    \ nums[i]=$num\n    done\n\n    echo \"${nums[@]}\"\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local numbers=($1)\n\
    \    local sorted_numbers=()\n    local number_to_sort=()\n    local number_to_sort_index=0\n\
    \    local index=0\n    local sorted_index=0\n    local sorted_number=0\n    local\
    \ number_to_sort_value=0\n    local sorted_number_value=0\n\n    for number in\
    \ ${numbers[@]}; do\n        number_to_sort[$number_to_sort_index]=$number\n \
    \       number_to_sort_index=$((number_to_sort_index + 1))\n    done\n\n    for\
    \ index in ${!number_to_sort[@]}; do\n        number_to_sort_value=$(number_to_int\
    \ ${number_to_sort[$index]})\n        sorted_index=0\n        for sorted_number\
    \ in ${sorted_numbers[@]}; do\n            sorted_number_value=$(number_to_int\
    \ $sorted_number)\n            if [ $number_to_sort_value -lt $sorted_number_value\
    \ ]; then\n                break\n            fi\n            sorted_index=$((sorted_index\
    \ + 1))\n        done\n        sorted_numbers=(${sorted_numbers[@]:0:$sorted_index}\
    \ ${number_to_sort[$index]} ${sorted_numbers[@]:$sorted_index})\n    done\n\n\
    \    echo ${sorted_numbers[@]}\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpw9mddubk.sh: line 26: number_to_int: command not found

    /tmp/tmpw9mddubk.sh: line 26: number_to_int: command not found

    /tmp/tmpw9mddubk.sh: line 26: number_to_int: command not found

    /tmp/tmpw9mddubk.sh: line 29: number_to_int: command not found

    /tmp/tmpw9mddubk.sh: line 26: number_to_int: command not found

    /tmp/tmpw9mddubk.sh: line 29: number_to_int: command not found

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement this\
    \ function\n    echo \"one two three\"\n}\n\ncandidate() {\n    sort_numbers \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -a sorted_numbers\n    local -a sorted_numbers_index\n    local -a\
    \ sorted_numbers_index_sorted\n    local -a sorted_numbers_sorted\n    local -a\
    \ sorted_numbers_sorted_index\n    local -a sorted_numbers_sorted_index_sorted\n\
    \    local -a sorted_numbers_sorted_sorted\n    local -a sorted_numbers_sorted_sorted_index\n\
    \    local -a sorted_numbers_sorted_sorted_index_sorted\n    local -a sorted_numbers_sorted_sorted_sorted\n\
    \    local -a sorted_numbers_sorted_sorted_sorted_index\n    local -a sorted_numbers_sorted_sorted_sorted_index_sorted\n\
    \    local -a sorted_numbers_sorted_sorted_sorted_sorted\n    local -a sorted_numbers_sorted_sorted_sorted_sorted_index\n\
    \    local -a sorted_numbers_sorted_sorted_sorted_sorted_index_sorted\n    local\
    \ -a sorted_numbers_sorted_sorted_sorted_sorted_sorted\n    local -a sorted_numbers_sorted_sorted_sorted_sorted_sorted_index\n\
    \    local -a sorted_numbers_sorted_sorted_sorted_sorted_sorted_index_sorted\n\
    \    local -a sorted_numbers_sorted_sorted_sorted_sorted_sorted_sorted\n    local\
    \ -a sorted_numbers_sorted_sorted_sorted_sorted_sorted_sorted_index\n    local\
    \ -a sorted_numbers_sorted_sorted_sorted_sorted_sorted_sorted_index_sorted\n \
    \   local -a sorted_numbers_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a sorted_numbers_sorted_sorted_sorted_sorted_sorted_sorted_sorted_index\n\
    \    local -a sorted_numbers_sorted_sorted_s\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i zero=0\n    local -i one=0\n    local -i two=0\n    local -i three=0\n\
    \    local -i four=0\n    local -i five=0\n    local -i six=0\n    local -i seven=0\n\
    \    local -i eight=0\n    local -i nine=0\n    local -i total=0\n    local -i\
    \ num=0\n    local -i tmp=0\n    local -i tmp2=0\n    local -i tmp3=0\n    local\
    \ -i tmp4=0\n    local -i tmp5=0\n    local -i tmp6=0\n    local -i tmp7=0\n \
    \   local -i tmp8=0\n    local -i tmp9=0\n    local -i tmp10=0\n    local -i tmp11=0\n\
    \    local -i tmp12=0\n    local -i tmp13=0\n    local -i tmp14=0\n    local -i\
    \ tmp15=0\n    local -i tmp16=0\n    local -i tmp17=0\n    local -i tmp18=0\n\
    \    local -i tmp19=0\n    local -i tmp20=0\n    local -i tmp21=0\n    local -i\
    \ tmp22=0\n    local -i tmp23=0\n    local -i tmp24=0\n    local -i tmp25=0\n\
    \    local -i tmp26=0\n    local -i tmp27=0\n    local -i tmp28=0\n    local -i\
    \ tmp29=0\n    local -i\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -a sorted_numbers\n  local -a sorted_numbers_index\n  local -a sorted_numbers_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index\n  local -a sorted_numbers_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index\n  local -a sorted_numbers_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index\n  local\
    \ -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted\n  local\
    \ -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local numbers=($1)\n\
    \    local sorted_numbers=()\n    local i\n    local j\n    local min_index\n\
    \    local min_value\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        min_index=$i\n\
    \        min_value=${numbers[$i]}\n        for ((j=i+1; j<${#numbers[@]}; j++));\
    \ do\n            if [[ ${numbers[$j]} -lt $min_value ]]; then\n             \
    \   min_index=$j\n                min_value=${numbers[$j]}\n            fi\n \
    \       done\n        sorted_numbers+=($min_value)\n        numbers[$min_index]=${numbers[$i]}\n\
    \    done\n    echo ${sorted_numbers[@]}\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums=($1)\n\
    \  local -a nums_sorted=()\n  local -a nums_sorted_indexes=()\n  local -a nums_sorted_indexes_sorted=()\n\
    \  local -a nums_sorted_indexes_sorted_indexes=()\n  local -a nums_sorted_indexes_sorted_indexes_sorted=()\n\
    \  local -a nums_sorted_indexes_sorted_indexes_sorted_indexes=()\n  local -a nums_sorted_indexes_sorted_indexes_sorted_indexes_sorted=()\n\
    \  local -a nums_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes=()\n\
    \  local -a nums_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted=()\n\
    \  local -a nums_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes=()\n\
    \  local -a nums_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted=()\n\
    \  local -a nums_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes=()\n\
    \  local -a nums_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted=()\n\
    \  local -a nums_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes=()\n\
    \  local -a nums_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted=()\n\
    \  local -a num\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a sorted\n    local -a sorted_nums\n    local i\n    local j\n    local\
    \ k\n    local num\n    local sorted_num\n    local -i num_val\n    local -i sorted_num_val\n\
    \n    nums=($1)\n    sorted=($(echo \"${nums[@]}\" | tr ' ' '\\n' | sort))\n\n\
    \    for i in \"${!sorted[@]}\"; do\n        sorted_num=\"${sorted[$i]}\"\n  \
    \      sorted_num_val=0\n        for j in \"${!nums[@]}\"; do\n            num=\"\
    ${nums[$j]}\"\n            num_val=0\n            for k in {0..9}; do\n      \
    \          if [[ \"$num\" == \"${numbers[$k]}\" ]]; then\n                   \
    \ num_val=$k\n                    break\n                fi\n            done\n\
    \            if [[ \"$num_val\" -lt \"$sorted_num_val\" ]]; then\n           \
    \     sorted_nums+=(\"$num\")\n                unset nums[$j]\n              \
    \  break\n            fi\n        done\n    done\n\n    echo \"${sorted_nums[@]}\"\
    \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i\
    \ m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local\
    \ -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local\
    \ -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n   \n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a sorted_numbers=()\n    local -a number_values=([zero]=0 [one]=1\
    \ [two]=2 [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i temp=0\n \
    \   local -i number_count=${#numbers[@]}\n    local -i number_value=0\n    local\
    \ -i sorted_number_value=0\n\n    for ((i=0; i<number_count; i++)); do\n     \
    \   number_value=${number_values[${numbers[$i]}]}\n        for ((j=0; j<i; j++));\
    \ do\n            sorted_number_value=${number_values[${sorted_numbers[$j]}]}\n\
    \            if [[ $number_value -lt $sorted_number_value ]]; then\n         \
    \       for ((k=i; k>j; k--)); do\n                    sorted_numbers[$k]=${sorted_numbers[$((k-1))]}\n\
    \                done\n                sorted_numbers[$j]=${numbers[$i]}\n   \
    \             break\n            fi\n        done\n        if [[ $j -eq $i ]];\
    \ then\n            sorted_numbers[$i]=${numbers[$i]}\n        fi\n    done\n\n\
    \    echo ${sorted_numbers[@]}\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local i=0\n    for num in $1; do\n        nums[$i]=$num\n        ((i++))\n \
    \   done\n    echo ${nums[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i\
    \ m\n    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local\
    \ -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i a\n    local\
    \ -i b\n    local -i c\n    local -i d\n    local -i e\n    local -i f\n    local\
    \ -i g\n    local -i h\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n   \n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a sorted_numbers\n    local -i i\n    local -i j\n    local -i k\n\
    \    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i\
    \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i zero\n    local -i one\n    local -i two\n    local -i three\n\
    \    local -i four\n    local -i five\n    local -i six\n    local -i seven\n\
    \    local -i eight\n    local -i nine\n    local -i ten\n    local -i eleven\n\
    \    local -i twelve\n    local -i thirteen\n    local -i fourteen\n    local\
    \ -i fifteen\n    local -i sixteen\n    local -i seventeen\n    local -i eighteen\n\
    \    local -i nineteen\n    local -i twenty\n    local -i thirty\n    local -i\
    \ forty\n    local -i fifty\n    local -i sixty\n    local -i seventy\n    local\
    \ -i eighty\n    local -i ninety\n    local -i hundred\n    local -i thousand\n\
    \    local -i million\n    local -i billion\n    local -i trillion\n    local\
    \ -i quadrillion\n    local -i quintillion\n    local -i sextillion\n    local\
    \ -i septillion\n    local -i octillion\n    local -i nonillion\n    local -i\
    \ decillion\n    local -i undecillion\n    local -i duodecillion\n    local -i\
    \ tredecillion\n    local -i quattuordecillion\n    local -i quindecillion\n \
    \   local -i sexdecillion\n    local -i septendecillion\n    local -i octodecillion\n\
    \    local -i novemdecillion\n    local -i vigintillion\n    local -i unvigintillion\n\
    \    local -i duovigintillion\n    local -i tresvigintillion\n    local -i quattuorvigintillion\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement this\
    \ function\n    echo \"one two three four five six seven eight nine\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a sorted_numbers\n    local -i i\n    local -i j\n    local -i k\n\
    \    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i\
    \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n\n}\n\n\
    candidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i zero=0\n    local -i one=0\n    local -i two=0\n    local -i three=0\n\
    \    local -i four=0\n    local -i five=0\n    local -i six=0\n    local -i seven=0\n\
    \    local -i eight=0\n    local -i nine=0\n    local -i ten=0\n    local -i eleven=0\n\
    \    local -i twelve=0\n    local -i thirteen=0\n    local -i fourteen=0\n   \
    \ local -i fifteen=0\n    local -i sixteen=0\n    local -i seventeen=0\n    local\
    \ -i eighteen=0\n    local -i nineteen=0\n    local -i twenty=0\n    local -i\
    \ thirty=0\n    local -i forty=0\n    local -i fifty=0\n    local -i sixty=0\n\
    \    local -i seventy=0\n    local -i eighty=0\n    local -i ninety=0\n    local\
    \ -i hundred=0\n    local -i thousand=0\n    local -i million=0\n    local -i\
    \ billion=0\n    local -i trillion=0\n    local -i quadrillion=0\n    local -i\
    \ quintillion=0\n    local -i sextillion=0\n    local -i septillion=0\n    local\
    \ -i octillion=0\n    local -i nonillion=0\n    local -i decillion=0\n    local\
    \ -i undecillion=0\n    local -i duodecillion=0\n    local -i tredecillion=\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a nums_sorted\n    local -a nums_sorted_str\n    local i\n    local j\n\
    \    local k\n\n    nums=($(echo $1 | tr \" \" \"\\n\"))\n    nums_sorted=($(echo\
    \ ${nums[@]} | tr \" \" \"\\n\" | sort -n))\n    for ((i=0; i<${#nums_sorted[@]};\
    \ i++)); do\n        for ((j=0; j<${#nums[@]}; j++)); do\n            if [[ ${nums_sorted[$i]}\
    \ -eq ${nums[$j]} ]]; then\n                nums_sorted_str[$i]=$(num_to_str $j)\n\
    \            fi\n        done\n    done\n    echo ${nums_sorted_str[@]}\n}\n\n\
    candidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6kq7xp60.sh: line 22: num_to_str: command not found

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -a sorted_numbers\n  local i\n  local j\n  local k\n  local -i min\n  local\
    \ -i min_index\n  local -i len\n\n  numbers=($1)\n  len=${#numbers[@]}\n  for\
    \ ((i=0; i<len; i++)); do\n    min=${numbers[i]}\n    min_index=$i\n    for ((j=i+1;\
    \ j<len; j++)); do\n      if [ ${numbers[j]} -lt $min ]; then\n        min=${numbers[j]}\n\
    \        min_index=$j\n      fi\n    done\n    sorted_numbers[i]=$min\n    numbers[min_index]=${numbers[i]}\n\
    \  done\n  echo ${sorted_numbers[@]}\n}\n\ncandidate() {\n    sort_numbers \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement this\
    \ function\n    # Hint: Use the 'sort' command\n    # Hint: Use the 'tr' command\n\
    \    # Hint: Use the 'sed' command\n    # Hint: Use the 'wc' command\n    # Hint:\
    \ Use the 'cut' command\n    # Hint: Use the 'head' command\n    # Hint: Use the\
    \ 'tail' command\n    # Hint: Use the 'seq' command\n    # Hint: Use the 'paste'\
    \ command\n    # Hint: Use the 'echo' command\n    # Hint: Use the 'tee' command\n\
    \    # Hint: Use the 'cat' command\n    # Hint: Use the 'sort' command\n    #\
    \ Hint: Use the 'uniq' command\n    # Hint: Use the 'tr' command\n    # Hint:\
    \ Use the 'cut' command\n    # Hint: Use the 'sort' command\n    # Hint: Use the\
    \ 'tr' command\n    # Hint: Use the 'sed' command\n    # Hint: Use the 'sort'\
    \ command\n    # Hint: Use the 'tr' command\n    # Hint: Use the 'sed' command\n\
    \    # Hint: Use the 'sort' command\n    # Hint: Use the 'tr' command\n    # Hint:\
    \ Use the 'sed' command\n    # Hint: Use the 'sort' command\n    # Hint: Use the\
    \ 'tr' command\n    # Hint: Use the 'sed' command\n    # Hint: Use the 'sort'\
    \ command\n    # Hint: Use the 'tr' command\n    # Hint: Use the 'sed' command\n\
    \    # Hint: Use the 'sort' command\n    # Hint: Use the 'tr' command\n    # Hint:\
    \ Use the 'sed' command\n    # Hint: Use the 'sort' command\n    # Hint: Use the\
    \ 'tr' command\n    # Hint: Use the 'sed' command\n    # Hint: Use the 'sort'\
    \ command\n    # Hint: Use the 'tr' command\n    # Hint: Use the 'sed' command\n\
    \    # Hint: Use the 'sort' command\n    # Hint: Use the\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmqyo3hgr.sh: line 53: syntax error near unexpected token `}''

    /tmp/tmpmqyo3hgr.sh: line 53: `}''

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -i i\n    local -i j\n    local -i k\n    local -i len\n    local -i min\n\
    \    local -i min_index\n    local -i temp\n    local -i temp_index\n    local\
    \ -i temp_len\n    local -i temp_len_index\n    local -i temp_len_min\n    local\
    \ -i temp_len_min_index\n    local -i temp_len_min_index_len\n    local -i temp_len_min_index_len_index\n\
    \    local -i temp_len_min_index_len_index_len\n    local -i temp_len_min_index_len_index_len_index\n\
    \    local -i temp_len_min_index_len_index_len_index_len\n    local -i temp_len_min_index_len_index_len_index_len_index\n\
    \    local -i temp_len_min_index_len_index_len_index_len_index_len\n    local\
    \ -i temp_len_min_index_len_index_len_index_len_index_len_index\n    local -i\
    \ temp_len_min_index_len_index_len_index_len_index_len_index_len\n    local -i\
    \ temp_len_min_index_len_index_len_index_len_index_len_index_len_index\n    local\
    \ -i temp_len_min_index_len_index_len_index_len_index_len_index_len_index_len\n\
    \    local -i temp_len_min_index_len_index_len_index_len_index_len_index_len_index_len_index\n\
    \    local -i temp_len_min_index_len_index_len_index_len_index_len_index_len_index_len_index_len\n\
    \    local -i temp_len_min_index_len_index_len_index_len_index_len_index_len_index_len_index_len_index\n\
    \    local -i temp_len_min_index_len_index_len_index_len_index_len_index_len_index_len_\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a sorted_nums\n    local -a sorted_nums_index\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i num_nums\n    local -i num_sorted_nums\n\
    \    local -i num_sorted_nums_index\n    local -i min_index\n    local -i min_value\n\
    \    local -i tmp_value\n    local -i tmp_index\n    local -i tmp_index2\n   \
    \ local -i tmp_value2\n    local -i tmp_index3\n    local -i tmp_value3\n    local\
    \ -i tmp_index4\n    local -i tmp_value4\n    local -i tmp_index5\n    local -i\
    \ tmp_value5\n    local -i tmp_index6\n    local -i tmp_value6\n    local -i tmp_index7\n\
    \    local -i tmp_value7\n    local -i tmp_index8\n    local -i tmp_value8\n \
    \   local -i tmp_index9\n    local -i tmp_value9\n    local -i tmp_index10\n \
    \   local -i tmp_value10\n    local -i tmp_index11\n    local -i tmp_value11\n\
    \    local -i tmp_index12\n    local -i tmp_value12\n    local -i tmp_index13\n\
    \    local -i tmp_value13\n    local -i tmp_index14\n    local -i tmp_value14\n\
    \    local -i tmp_index15\n    local -i tmp_value15\n    local -i tmp_index16\n\
    \    local -i tmp_value16\n    local -i tmp_index17\n    local -i tmp_value17\n\
    \    local -i tmp_index18\n    local -i tmp_value18\n    local -\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: implement this\
    \ function\n  # Hint: use the sort command\n  # Hint: use the tr command\n  #\
    \ Hint: use the echo command\n  # Hint: use the $1 variable\n  # Hint: use the\
    \ $() syntax\n  # Hint: use the sort_numbers_helper function\n  echo \"$(sort_numbers_helper\
    \ $1)\"\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpppdvqotu.sh: line 17: sort_numbers_helper: command not found

    /tmp/tmpppdvqotu.sh: line 17: sort_numbers_helper: command not found

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($1)\n\
    \  local -a sorted_numbers=()\n  local -a number_map=([zero]=0 [one]=1 [two]=2\
    \ [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n  for number\
    \ in \"${numbers[@]}\"; do\n    sorted_numbers+=(${number_map[$number]})\n  done\n\
    \  echo \"${numbers[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n\
    \    local -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i\
    \ r\n    local -i s\n    local -i t\n    local -i u\n    local -i v\n    local\
    \ -i w\n    local -i x\n    local -i y\n    local -i z\n    local -i num\n   \
    \ local -i num_len\n    local -i num_len_max\n    local -i num_len_min\n    local\
    \ -i num_len_diff\n    local -i num_len_diff_max\n    local -i num_len_diff_min\n\
    \    local -i num_len_diff_avg\n    local -i num_len_diff_sum\n    local -i num_len_diff_count\n\
    \    local -i num_len_diff_median\n    local -i num_len_diff_mode\n    local -i\
    \ num_len_diff_mode_count\n    local -i num_len_diff_mode_max\n    local -i num_len_diff_mode_max_count\n\
    \    local -i num_len_diff_mode_max_count_prev\n    local -i num_len_diff_mode_max_count_curr\n\
    \    local -i num_len_diff_mode_max_count_next\n    local -i num_len_diff_mode_max_count_prev_prev\n\
    \    local -i num_len_diff_mode_max_count_prev_curr\n    local -i num_len_diff_mode_max_count_prev_next\n\
    \    local -i num_len_diff_mode_max_count_curr_prev\n    local -i num_len_diff_mode_max_count_curr_curr\n\
    \    local -i num_len_diff_mode_max_count_curr_next\n    local -i num_len_diff_mode_max_count_next_prev\n\
    \    local -i num_len_diff_mode_max_count_next_curr\n   \n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -a sorted_numbers\n    local -i i\n    local -i j\n    local -i k\n\
    \    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i\
    \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local\
    \ -i\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local numbers=($1)\n\
    \  local sorted=($(printf \"%s\\n\" \"${numbers[@]}\" | sort -n))\n  echo \"${sorted[@]}\"\
    \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a sorted_numbers\n    local -a number_to_digit=([zero]=0 [one]=1 [two]=2\
    \ [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n    local\
    \ i\n    for i in ${numbers[@]}; do\n        sorted_numbers[${number_to_digit[$i]}]=$i\n\
    \    done\n    echo ${sorted_numbers[@]}\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: Implement me!\n\
    \  echo \"one two three four five six seven eight nine\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: write your\
    \ code here\n    echo \"one three five\"\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($1)\n\
    \  local -a sorted_numbers\n  local -i i=0\n  local -i j=0\n  local -i k=0\n \
    \ local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i zero=0\n  local -i one=0\n  local -i two=0\n  local -i three=0\n \
    \ local -i four=0\n  local -i five=0\n  local -i six=0\n  local -i seven=0\n \
    \ local -i eight=0\n  local -i nine=0\n  local -i ten=0\n  local -i eleven=0\n\
    \  local -i twelve=0\n  local -i thirteen=0\n  local -i fourteen=0\n  local -i\
    \ fifteen=0\n  local -i sixteen=0\n  local -i seventeen=0\n  local -i eighteen=0\n\
    \  local -i nineteen=0\n  local -i twenty=0\n  local -i thirty=0\n  local -i forty=0\n\
    \  local -i fifty=0\n  local -i sixty=0\n  local -i seventy=0\n  local -i eighty=0\n\
    \  local -i ninety=0\n  local -i hundred=0\n  local -i thousand=0\n  local -i\
    \ million=0\n  local -i billion=0\n  local -i trillion=0\n  local -i quadrillion=0\n\
    \  local -i quintillion=0\n  local -i sextillion=0\n  local -i septillion=0\n\
    \  local -i octillion=0\n  local -i nonillion=0\n  local -i decillion=0\n  local\
    \ -i undecillion=0\n  local -i duodecillion\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local\
    \ -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n\
    \    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n\
    \    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n\
    \    local -i ppp=0\n\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -a sorted_numbers\n    local -i i\n    local -i j\n    local -i k\n\
    \    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i\
    \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local\
    \ -i\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted\n  local -a num_map=(\n    [zero]=0\n    [one]=1\n    [two]=2\n  \
    \  [three]=3\n    [four]=4\n    [five]=5\n    [six]=6\n    [seven]=7\n    [eight]=8\n\
    \    [nine]=9\n  )\n  local num_str=\"\"\n  local num_sorted=\"\"\n  local num_map_key=\"\
    \"\n  local num_map_val=\"\"\n\n  nums=($1)\n  for num in \"${nums[@]}\"; do\n\
    \    for num_map_key in \"${!num_map[@]}\"; do\n      if [[ \"$num\" == \"$num_map_key\"\
    \ ]]; then\n        num_str+=\"${num_map[$num_map_key]} \"\n      fi\n    done\n\
    \  done\n  sorted=($(echo \"$num_str\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '))\n\
    \  for num in \"${sorted[@]}\"; do\n    for num_map_val in \"${num_map[@]}\";\
    \ do\n      if [[ \"$num\" == \"$num_map_val\" ]]; then\n        num_sorted+=\"\
    ${!num_map[$num_map_val]} \"\n      fi\n    done\n  done\n  echo \"$num_sorted\"\
    \n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i n\n  local -i m\n  local -i temp\n\
    \  local -i min\n  local -i min_index\n  local -i max\n  local -i max_index\n\
    \  local -i len\n  local -i len_numbers\n  local -i len_numbers_minus_one\n  local\
    \ -i len_numbers_minus_two\n  local -i len_numbers_minus_three\n  local -i len_numbers_minus_four\n\
    \  local -i len_numbers_minus_five\n  local -i len_numbers_minus_six\n  local\
    \ -i len_numbers_minus_seven\n  local -i len_numbers_minus_eight\n  local -i len_numbers_minus_nine\n\
    \  local -i len_numbers_minus_ten\n  local -i len_numbers_minus_eleven\n  local\
    \ -i len_numbers_minus_twelve\n  local -i len_numbers_minus_thirteen\n  local\
    \ -i len_numbers_minus_fourteen\n  local -i len_numbers_minus_fifteen\n  local\
    \ -i len_numbers_minus_sixteen\n  local -i len_numbers_minus_seventeen\n  local\
    \ -i len_numbers_minus_eighteen\n  local -i len_numbers_minus_nineteen\n  local\
    \ -i len_numbers_minus_twenty\n  local -i len_numbers_minus_twenty_one\n  local\
    \ -i len_numbers_minus_twenty_two\n  local -i len_numbers_minus_twenty_three\n\
    \  local -i len_numbers_minus_twenty_four\n  local -i len_numbers_minus_twenty_five\n\
    \  local -i len_numbers_minus_twenty_six\n  local -i len_numbers_minus_twenty_seven\n\
    \  local -i len_numbers_minus_twenty_eight\n  local -i len_numbers_minus_twenty_nine\n\
    \  local -i len_numbers_minus_\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | awk '{\n\
    \        split($0, nums, \" \");\n        for (i in nums) {\n            if (nums[i]\
    \ == \"zero\") {\n                nums[i] = 0;\n            } else if (nums[i]\
    \ == \"one\") {\n                nums[i] = 1;\n            } else if (nums[i]\
    \ == \"two\") {\n                nums[i] = 2;\n            } else if (nums[i]\
    \ == \"three\") {\n                nums[i] = 3;\n            } else if (nums[i]\
    \ == \"four\") {\n                nums[i] = 4;\n            } else if (nums[i]\
    \ == \"five\") {\n                nums[i] = 5;\n            } else if (nums[i]\
    \ == \"six\") {\n                nums[i] = 6;\n            } else if (nums[i]\
    \ == \"seven\") {\n                nums[i] = 7;\n            } else if (nums[i]\
    \ == \"eight\") {\n                nums[i] = 8;\n            } else if (nums[i]\
    \ == \"nine\") {\n                nums[i] = 9;\n            }\n        }\n   \
    \     asort(nums);\n        for (i in nums) {\n            if (nums[i] == 0) {\n\
    \                nums[i] = \"zero\";\n            } else if (nums[i] == 1) {\n\
    \                nums[i] = \"one\";\n            } else if (nums[i] == 2) {\n\
    \                nums[i] = \"two\";\n            } else if (nums[i] == 3) {\n\
    \                nums[i] = \"three\";\n            } else if (nums[i] == 4) {\n\
    \                nums[i] = \"four\";\n            } else if (nums[i] == 5) {\n\
    \                nums[i] = \"five\";\n            } else if (nums[i] == 6) {\n\
    \                nums[i] = \"six\";\n            } else if (nums[i] == 7) {\n\
    \                num\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjytaoto3.sh: line 10: unexpected EOF while looking for matching
    `''''

    /tmp/tmpjytaoto3.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement me\n\
    \    echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($1)\n\
    \  local -a sorted_numbers=()\n  local -a number_to_digit=([zero]=0 [one]=1 [two]=2\
    \ [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n  local -i\
    \ i j\n  for ((i=0; i<${#numbers[@]}; i++)); do\n    for ((j=0; j<${#sorted_numbers[@]};\
    \ j++)); do\n      if ((number_to_digit[${numbers[i]}] < number_to_digit[${sorted_numbers[j]}]));\
    \ then\n        sorted_numbers=(${sorted_numbers[@]:0:j} ${numbers[i]} ${sorted_numbers[@]:j})\n\
    \        break\n      fi\n    done\n    if ((j == ${#sorted_numbers[@]})); then\n\
    \      sorted_numbers+=(${numbers[i]})\n    fi\n  done\n  echo ${sorted_numbers[@]}\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement me\n\
    \    # Hint: You can use the following associative array to convert words to numbers\n\
    \    declare -A nums\n    nums=( [\"zero\"]=0 [\"one\"]=1 [\"two\"]=2 [\"three\"\
    ]=3 [\"four\"]=4 [\"five\"]=5 [\"six\"]=6 [\"seven\"]=7 [\"eight\"]=8 [\"nine\"\
    ]=9 )\n    # Hint: You can use the following associative array to convert numbers\
    \ to words\n    declare -A words\n    words=( [0]=\"zero\" [1]=\"one\" [2]=\"\
    two\" [3]=\"three\" [4]=\"four\" [5]=\"five\" [6]=\"six\" [7]=\"seven\" [8]=\"\
    eight\" [9]=\"nine\" )\n    # Hint: You can use the following associative array\
    \ to store the sorted numbers\n    declare -A sorted\n    # Hint: You can use\
    \ the following associative array to store the sorted words\n    declare -A sorted_words\n\
    \    # Hint: You can use the following variable to store the sorted string\n \
    \   sorted_string=\"\"\n    # Hint: You can use the following variable to store\
    \ the number of words\n    num_words=0\n    # Hint: You can use the following\
    \ variable to store the number of sorted words\n    num_sorted_words=0\n    #\
    \ Hint: You can use the following variable to store the current word\n    current_word=\"\
    \"\n    # Hint: You can use the following variable to store the current number\n\
    \    current_num=0\n    # Hint: You can use the following variable to store the\
    \ current sorted word\n    current_sorted_word=\"\"\n    # Hint: You can use the\
    \ following variable to store the current sorted number\n    current_sorted_num=0\n\
    \    # Hint: You can use the following variable to store the current sorted word\n\
    \    current_sorted_word=\"\"\n    # Hint: You can use the following variable\
    \ to store the current sorted number\n    current_sorted_num=0\n    # Hint: You\
    \ can use the following variable to store the current sorted word\n    current_sorted_word=\"\
    \"\n    # Hint: You can use the following variable to store the current sorted\
    \ number\n\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement this\
    \ function\n    echo \"Not implemented\"\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums=($1)\n\
    \    local -a num_map=(zero one two three four five six seven eight nine)\n  \
    \  local -a num_map_index=(0 1 2 3 4 5 6 7 8 9)\n    local -a num_map_sorted=($(printf\
    \ \"%s\\n\" \"${num_map[@]}\" | sort))\n    local -a num_map_index_sorted=($(printf\
    \ \"%s\\n\" \"${num_map_index[@]}\" | sort))\n    local -a nums_sorted=()\n  \
    \  local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i num_len=${#nums[@]}\n\
    \    local -i num_map_len=${#num_map[@]}\n    local -i num_map_index_len=${#num_map_index[@]}\n\
    \    local -i num_map_sorted_len=${#num_map_sorted[@]}\n    local -i num_map_index_sorted_len=${#num_map_index_sorted[@]}\n\
    \    local -i nums_sorted_len=0\n    local -i num_index=0\n    local -i num_index_sorted=0\n\
    \    local -i num_index_sorted_len=0\n    local -i num_index_sorted_len_prev=0\n\
    \    local -i num_index_sorted_len_next=0\n    local -i num_index_sorted_len_diff=0\n\
    \    local -i num_index_sorted_len_diff_prev=0\n    local -i num_index_sorted_len_diff_next=0\n\
    \    local -i num_index_sorted_len_diff_min=0\n    local -i num_index_sorted_len_diff_min_index=0\n\
    \    local -i num_index_sorted_len_diff_min_index_prev=0\n    local -i num_index_sorted_len_diff_min_index_next=0\n\
    \    local -i num_index_sorted_len_diff_\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i a=0\n    local -i b=0\n    local -i c=0\n    local -i d=0\n    local\
    \ -i e=0\n    local -i f=0\n    local -i g=0\n    local -i h=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n\
    \    local -i dd=0\n    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n\
    \    local -i hh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n    local -i ooo=0\n\
    \    local -i ppp=0\n\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i num=0\n    local -i num_count=0\n    local -i num_max=0\n    local\
    \ -i num_min=0\n    local -i num_min_index=0\n    local -i num_max_index=0\n \
    \   local -i num_min_count=0\n    local -i num_max_count=0\n    local -i num_min_max_count=0\n\
    \    local -i num_max_min_count=0\n    local -i num_min_max_index=0\n    local\
    \ -i num_max_min_index=0\n    local -i num_min_max_index_count=0\n    local -i\
    \ num_max_min_index_count=0\n    local -i num_min_max_index_count_max=0\n    local\
    \ -i num_max_min_index_count_max=0\n    local -i num_min_max_index_count_min=0\n\
    \    local -i num_max_min_index_count_min=0\n    local -i num_min_max_index_count_min_max=0\n\
    \    local -i num_max_min_index_count_min_max=0\n    local -i num_min_max_index_count_min_max_index=0\n\
    \    local -i num_max_min_index_count_min_max_index=0\n    local -i num_min_max_index_count_min_max_index_count=0\n\
    \    local -i num_\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -a sorted_numbers\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n\
    \  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local\
    \ -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n\
    \  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local\
    \ -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n\
    \  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n \
    \ local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local\
    \ -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i\
    \ xx\n  local -i yy\n  local -i zz\n  local -i aa\n  local -i bb\n  local -i cc\n\
    \  local -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n \
    \ local -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n\
    \  local -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n\
    \  local -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n\
    \  local -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaa\n  local -i bbb\n\
    \  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n \n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement this\
    \ function\n    echo \"one three five\"\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a sorted_numbers\n    local -i i\n    local -i j\n    local -i min_index\n\
    \    local -i min_value\n    local -i temp\n\n    for ((i=0; i<${#numbers[@]};\
    \ i++)); do\n        min_index=$i\n        min_value=$(number_to_int ${numbers[$i]})\n\
    \        for ((j=i+1; j<${#numbers[@]}; j++)); do\n            if [ $(number_to_int\
    \ ${numbers[$j]}) -lt $min_value ]; then\n                min_index=$j\n     \
    \           min_value=$(number_to_int ${numbers[$j]})\n            fi\n      \
    \  done\n        temp=${numbers[$i]}\n        numbers[$i]=${numbers[$min_index]}\n\
    \        numbers[$min_index]=$temp\n    done\n\n    echo ${numbers[@]}\n}\n\n\
    candidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6_obyarh.sh: line 20: number_to_int: command not found

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: Implement this\
    \ function\n  # Hint: You may want to use the 'sort' command\n  # Hint: You may\
    \ want to use the 'tr' command\n  # Hint: You may want to use the 'bc' command\n\
    \  # Hint: You may want to use the 'echo' command\n  # Hint: You may want to use\
    \ the '$()' command\n  # Hint: You may want to use the 'cut' command\n  # Hint:\
    \ You may want to use the 'uniq' command\n  # Hint: You may want to use the 'sort'\
    \ command\n  # Hint: You may want to use the 'tr' command\n  # Hint: You may want\
    \ to use the 'paste' command\n  # Hint: You may want to use the 'cut' command\n\
    \  # Hint: You may want to use the 'tr' command\n  # Hint: You may want to use\
    \ the 'sed' command\n  # Hint: You may want to use the 'sort' command\n  # Hint:\
    \ You may want to use the 'tr' command\n  # Hint: You may want to use the 'paste'\
    \ command\n  # Hint: You may want to use the 'cut' command\n  # Hint: You may\
    \ want to use the 'tr' command\n  # Hint: You may want to use the 'sed' command\n\
    \  # Hint: You may want to use the 'sort' command\n  # Hint: You may want to use\
    \ the 'tr' command\n  # Hint: You may want to use the 'paste' command\n  # Hint:\
    \ You may want to use the 'cut' command\n  # Hint: You may want to use the 'tr'\
    \ command\n  # Hint: You may want to use the 'sed' command\n  # Hint: You may\
    \ want to use the 'sort' command\n  # Hint: You may want to use the 'tr' command\n\
    \  # Hint: You may want to use the 'paste' command\n  # Hint: You may want to\
    \ use the 'cut' command\n  # Hint: You may want to use the 'tr' command\n  # Hint:\
    \ You may want to use the 'sed' command\n  # Hint\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpzgizqjrp.sh: line 43: syntax error near unexpected token `}''

    /tmp/tmpzgizqjrp.sh: line 43: `}''

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: implement this\
    \ function\n  echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Write your\
    \ code here\n    # echo \"one two three\"\n    local -a arr\n    local -a arr2\n\
    \    local -a arr3\n    local -a arr4\n    local -a arr5\n    local -a arr6\n\
    \    local -a arr7\n    local -a arr8\n    local -a arr9\n    local -a arr10\n\
    \    local -a arr11\n    local -a arr12\n    local -a arr13\n    local -a arr14\n\
    \    local -a arr15\n    local -a arr16\n    local -a arr17\n    local -a arr18\n\
    \    local -a arr19\n    local -a arr20\n    local -a arr21\n    local -a arr22\n\
    \    local -a arr23\n    local -a arr24\n    local -a arr25\n    local -a arr26\n\
    \    local -a arr27\n    local -a arr28\n    local -a arr29\n    local -a arr30\n\
    \    local -a arr31\n    local -a arr32\n    local -a arr33\n    local -a arr34\n\
    \    local -a arr35\n    local -a arr36\n    local -a arr37\n    local -a arr38\n\
    \    local -a arr39\n    local -a arr40\n    local -a arr41\n    local -a arr42\n\
    \    local -a arr43\n    local -a arr44\n    local -a arr45\n    local -a arr46\n\
    \    local -a arr47\n    local -a arr48\n    local -a arr49\n    local -a arr50\n\
    \    local -a arr51\n    local -a arr52\n    local -a arr53\n    local -a arr54\n\
    \    local -a arr55\n    local -a arr56\n    local -a arr57\n    local -a arr58\n\
    \    local -a arr59\n    local -a arr60\n    local -a arr61\n    local -a arr62\n\
    \    local -a arr63\n    local -a arr64\n    local -a arr65\n    local -a arr66\n\
    \    local -a arr67\n    local -a arr68\n    local -a arr69\n    local -a arr70\n\
    \    local -\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -a sorted\n  local -a sorted_numbers\n  local i\n  local j\n  local k\n  local\
    \ n\n  local number\n  local number_sorted\n  local sorted_number\n  local sorted_number_sorted\n\
    \  local sorted_number_sorted_sorted\n  local sorted_number_sorted_sorted_sorted\n\
    \  local sorted_number_sorted_sorted_sorted_sorted\n  local sorted_number_sorted_sorted_sorted_sorted_sorted\n\
    \  local sorted_number_sorted_sorted_sorted_sorted_sorted_sorted\n  local sorted_number_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local sorted_number_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local sorted_number_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local sorted_number_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local sorted_number_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local sorted_number_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local sorted_number_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local sorted_number_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local sorted_number_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local sorted_number_s\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local numbers=($1)\n\
    \  local sorted_numbers=()\n  local i=0\n  local j=0\n  local min=0\n  local min_index=0\n\
    \  local temp=0\n\n  for ((i=0; i<${#numbers[@]}; i++)); do\n    min=${numbers[i]}\n\
    \    min_index=$i\n    for ((j=i+1; j<${#numbers[@]}; j++)); do\n      if [[ ${numbers[j]}\
    \ -lt $min ]]; then\n        min=${numbers[j]}\n        min_index=$j\n      fi\n\
    \    done\n    temp=${numbers[i]}\n    numbers[i]=${numbers[min_index]}\n    numbers[min_index]=$temp\n\
    \  done\n\n  for ((i=0; i<${#numbers[@]}; i++)); do\n    sorted_numbers[i]=$(number_to_word\
    \ ${numbers[i]})\n  done\n\n  echo ${sorted_numbers[@]}\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpl38bd6o7.sh: line 33: number_to_word: command not found

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($(echo\
    \ \"$1\" | tr ' ' '\\n' | sort -n))\n  echo \"${numbers[@]}\"\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 0
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums=($1)\n\
    \    local -a num_map=(zero one two three four five six seven eight nine)\n  \
    \  local -a num_map_index=(0 1 2 3 4 5 6 7 8 9)\n    local -a sorted_nums\n  \
    \  local -i i\n    local -i j\n    local -i min_index\n    local -i min_value\n\
    \    local -i tmp\n    local -i num_count=${#nums[@]}\n\n    # Map the numbers\
    \ to their index in the num_map array\n    for ((i=0; i<num_count; i++)); do\n\
    \        for ((j=0; j<10; j++)); do\n            if [[ ${nums[$i]} == ${num_map[$j]}\
    \ ]]; then\n                nums[$i]=$j\n                break\n            fi\n\
    \        done\n    done\n\n    # Sort the numbers\n    for ((i=0; i<num_count;\
    \ i++)); do\n        min_index=$i\n        min_value=${nums[$i]}\n        for\
    \ ((j=i+1; j<num_count; j++)); do\n            if [[ ${nums[$j]} -lt $min_value\
    \ ]]; then\n                min_index=$j\n                min_value=${nums[$j]}\n\
    \            fi\n        done\n        tmp=${nums[$i]}\n        nums[$i]=${nums[$min_index]}\n\
    \        nums[$min_index]=$tmp\n    done\n\n    # Map the numbers back to their\
    \ string representation\n    for ((i=0; i<num_count; i++)); do\n        nums[$i]=${num_map[${nums[$i]}]}\n\
    \    done\n\n    echo ${nums[@]}\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i len\n  local -i min\n  local -i\
    \ min_index\n  local -i tmp\n  local -i tmp_index\n  local -i tmp_index2\n  local\
    \ -i tmp_index3\n  local -i tmp_index4\n  local -i tmp_index5\n  local -i tmp_index6\n\
    \  local -i tmp_index7\n  local -i tmp_index8\n  local -i tmp_index9\n  local\
    \ -i tmp_index10\n  local -i tmp_index11\n  local -i tmp_index12\n  local -i tmp_index13\n\
    \  local -i tmp_index14\n  local -i tmp_index15\n  local -i tmp_index16\n  local\
    \ -i tmp_index17\n  local -i tmp_index18\n  local -i tmp_index19\n  local -i tmp_index20\n\
    \  local -i tmp_index21\n  local -i tmp_index22\n  local -i tmp_index23\n  local\
    \ -i tmp_index24\n  local -i tmp_index25\n  local -i tmp_index26\n  local -i tmp_index27\n\
    \  local -i tmp_index28\n  local -i tmp_index29\n  local -i tmp_index30\n  local\
    \ -i tmp_index31\n  local -i tmp_index32\n  local -i tmp_index33\n  local -i tmp_index34\n\
    \  local -i tmp_index35\n  local -i tmp_index36\n  local -i tmp_index37\n  local\
    \ -i tmp_index38\n  local -i tmp_index39\n  local -i tmp_index40\n  local -i tmp_index41\n\
    \  local -i tmp_index42\n  local -i tmp_index43\n  local -i tmp_index44\n  local\
    \ -i tmp_index45\n  local -i tmp_index46\n  local -i tmp_index47\n  local -i tmp_index48\n\
    \  local -i tmp_index49\n  local -i tmp_index50\n  local -i tmp_index51\n  local\n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a sorted_nums\n    local -a sorted_nums_index\n    local -a sorted_nums_index_sorted\n\
    \    local -a sorted_nums_sorted\n    local -a sorted_nums_sorted_index\n    local\
    \ -a sorted_nums_sorted_index_sorted\n    local -a sorted_nums_sorted_sorted\n\
    \    local -a sorted_nums_sorted_sorted_index\n    local -a sorted_nums_sorted_sorted_index_sorted\n\
    \    local -a sorted_nums_sorted_sorted_sorted\n    local -a sorted_nums_sorted_sorted_sorted_index\n\
    \    local -a sorted_nums_sorted_sorted_sorted_index_sorted\n    local -a sorted_nums_sorted_sorted_sorted_sorted\n\
    \    local -a sorted_nums_sorted_sorted_sorted_sorted_index\n    local -a sorted_nums_sorted_sorted_sorted_sorted_index_sorted\n\
    \    local -a sorted_nums_sorted_sorted_sorted_sorted_sorted\n    local -a sorted_nums_sorted_sorted_sorted_sorted_sorted_index\n\
    \    local -a sorted_nums_sorted_sorted_sorted_sorted_sorted_index_sorted\n  \
    \  local -a sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted\n    local -a\
    \ sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted_index\n    local -a sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted_index_sorted\n\
    \    local -a sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n \
    \   local -a sorted_nums_sorted_sorted_sorted_sorted_sorted_sorted_sorted_index\n\
    \    local -a sorted_nums_sorted_sorted_\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: implement this\
    \ function\n  echo \"one three five\"\n}\n\ncandidate() {\n    sort_numbers \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -a sorted\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n   \n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement this\
    \ function\n    echo \"one three five\"\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -a sorted\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n   \n\
    }\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n\
    \    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate\
    \ \"five zero four seven nine eight\") = \"zero four five seven eight nine\" ]]\n\
    \    [[ $(candidate \"six five four three two one zero\") = \"zero one two three\
    \ four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -i i\n    local -i j\n    local -i k\n    local -i temp\n    local -i\
    \ len\n    local -i min\n    local -i min_index\n    local -i num_index\n    local\
    \ -i num_value\n    local -i num_value_next\n    local -i num_value_prev\n   \
    \ local -i num_value_prev_index\n    local -i num_value_next_index\n    local\
    \ -i num_value_prev_value\n    local -i num_value_next_value\n    local -i num_value_prev_value_index\n\
    \    local -i num_value_next_value_index\n    local -i num_value_prev_value_next_value\n\
    \    local -i num_value_prev_value_next_value_index\n    local -i num_value_prev_value_next_value_prev_value\n\
    \    local -i num_value_prev_value_next_value_prev_value_index\n    local -i num_value_prev_value_next_value_prev_value_next_value\n\
    \    local -i num_value_prev_value_next_value_prev_value_next_value_index\n  \
    \  local -i num_value_prev_value_next_value_prev_value_next_value_prev_value\n\
    \    local -i num_value_prev_value_next_value_prev_value_next_value_prev_value_index\n\
    \    local -i num_value_prev_value_next_value_prev_value_next_value_prev_value_next_value\n\
    \    local -i num_value_prev_value_next_value_prev_value_next_value_prev_value_next_value_index\n\
    \    local -i num_value_prev_value_next_value_prev_value_next_value_prev_value_next_value_prev_value\n\
    \    local -i num_value_prev_value_next_value_prev_value_next_value_prev_value_next_value_prev_value_index\n\
    \    local -i num_value_prev_value_next_value_prev_value_next_value_\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a sorted=()\n    local -i i=0\n    local -i j=0\n    local -i min=0\n\
    \    local -i min_index=0\n    local -i len=${#numbers[@]}\n\n    for ((i=0; i<len;\
    \ i++)); do\n        min=${numbers[i]}\n        min_index=$i\n        for ((j=i+1;\
    \ j<len; j++)); do\n            if [[ ${numbers[j]} -lt $min ]]; then\n      \
    \          min=${numbers[j]}\n                min_index=$j\n            fi\n \
    \       done\n        sorted[i]=$min\n        numbers[min_index]=${numbers[i]}\n\
    \    done\n\n    echo ${sorted[@]}\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  echo \"$1\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # Write your code here\n\
    \    #\n    # Hint: You can use the following bash array to convert the string\
    \ to numbers:\n    #       nums=(zero one two three four five six seven eight\
    \ nine)\n    #       nums[0] is 'zero'\n    #       nums[1] is 'one'\n    #  \
    \     ...\n    #       nums[9] is 'nine'\n    #\n    # Hint: You can use the following\
    \ bash array to convert numbers to the string:\n    #       nums=(zero one two\
    \ three four five six seven eight nine)\n    #       nums[0] is 'zero'\n    #\
    \       nums[1] is 'one'\n    #       ...\n    #       nums[9] is 'nine'\n   \
    \ #\n    # Hint: You can use the following bash array to convert numbers to the\
    \ string:\n    #       nums=(zero one two three four five six seven eight nine)\n\
    \    #       nums[0] is 'zero'\n    #       nums[1] is 'one'\n    #       ...\n\
    \    #       nums[9] is 'nine'\n    #\n    # Hint: You can use the following bash\
    \ array to convert numbers to the string:\n    #       nums=(zero one two three\
    \ four five six seven eight nine)\n    #       nums[0] is 'zero'\n    #      \
    \ nums[1] is 'one'\n    #       ...\n    #       nums[9] is 'nine'\n    #\n  \
    \  # Hint: You can use the following bash array to convert numbers to the string:\n\
    \    #       nums=(zero one two three four five six seven eight nine)\n    # \
    \      nums[0] is 'zero'\n    #       nums[1] is 'one'\n    #       ...\n    #\
    \       nums[9] is 'nine'\n    #\n    # Hint: You can use the following bash array\
    \ to convert numbers to the string:\n    #       nums=(zero one two three four\
    \ five six seven eight nine)\n    #       nums[0] is 'zero'\n    #       nums[1]\
    \ is 'one'\n    #       ...\n    #       nums[9\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpkr6_j6jm.sh: line 53: syntax error near unexpected token `}''

    /tmp/tmpkr6_j6jm.sh: line 53: `}''

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -a sorted_numbers\n  local -a sorted_numbers_index\n  local -a sorted_numbers_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index\n  local -a sorted_numbers_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index\n  local -a sorted_numbers_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index\n  local\
    \ -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted\n  local\
    \ -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: implement this\
    \ function\n  echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted_nums\n  local -i i\n  local -i j\n  local -i k\n  local -i len\n \
    \ local -i len_sorted\n  local -i min_index\n  local -i min_value\n  local -i\
    \ tmp\n\n  nums=($1)\n  len=${#nums[@]}\n  sorted_nums=()\n  for ((i=0; i<len;\
    \ i++)); do\n    min_value=10\n    min_index=-1\n    for ((j=0; j<len; j++));\
    \ do\n      if [[ ${nums[j]} -lt min_value ]]; then\n        min_value=${nums[j]}\n\
    \        min_index=$j\n      fi\n    done\n    sorted_nums+=($min_value)\n   \
    \ nums[min_index]=10\n  done\n\n  echo ${sorted_nums[@]}\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: Implement this\
    \ function\n    echo \"one two three four five six seven eight nine\" | tr ' '\
    \ '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted_nums\n  local -a sorted_nums_index\n  local -a sorted_nums_index_sorted\n\
    \  local -a sorted_nums_sorted\n  local -i i\n  local -i j\n  local -i k\n  local\
    \ -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n\
    \  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local\
    \ -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i zero\n  local -i\
    \ one\n  local -i two\n  local -i three\n  local -i four\n  local -i five\n  local\
    \ -i six\n  local -i seven\n  local -i eight\n  local -i nine\n  local -i num_count\n\
    \  local -i sorted_nums_count\n  local -i sorted_nums_index_count\n  local -i\
    \ sorted_nums_index_sorted_count\n  local -i sorted_nums_sorted_count\n  local\
    \ -i nums_count\n  local -i sorted_nums_count\n  local -i sorted_nums_index_count\n\
    \  local -i sorted_nums_index_sorted_count\n  local -i sorted_nums_sorted_count\n\
    \  local -i nums_count\n  local -i sorted_nums_count\n  local -i sorted_nums_index_count\n\
    \  local -i sorted_nums_index_sorted_count\n  local -i sorted_nums_sorted_count\n\
    \  local -i nums_count\n  local -i sorted_nums_count\n  local -i sorted_nums_index_count\n\
    \  local -i sorted_nums_index_sorted_count\n  local -i sorted_nums_sorted_count\n\
    \  local -i nums_count\n  local -i sorted_nums_count\n  local -i sorted_nums_index_count\n\
    \  local -i sorted_\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums=($1)\n\
    \  local -a nums_sorted=($(echo ${nums[@]} | tr ' ' '\\n' | sort -n))\n  echo\
    \ ${nums_sorted[@]}\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a sorted\n    local -i i\n    local -i j\n    local -i k\n    local -i\
    \ l\n    local -i m\n    local -i n\n    local -i o\n    local -i p\n    local\
    \ -i q\n    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local\
    \ -i v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i i\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n\n}\n\n\
    candidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr \"\
    \ \" \"\\n\" | sort -n | tr \"\\n\" \" \"\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a nums\n  local\
    \ -a sorted\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i\
    \ m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local\
    \ -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n\
    \  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local\
    \ -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i ii\n\
    \  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n \
    \ local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local\
    \ -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i\
    \ yy\n  local -i zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n\
    \  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i iii\n\
    \  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n\
    \  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n\
    \  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local -i xxx\n\
    \  local -i yyy\n  local -i zzz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n\
    \  local -i ddd\n  local -i eee\n  local -i fff\n  local -\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: implement this\
    \ function\n    echo $1 | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    \") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: Implement me\n\
    \  # Hint: Use the following associative array to convert number words to numbers\n\
    \  declare -A numbers=([\"zero\"]=0 [\"one\"]=1 [\"two\"]=2 [\"three\"]=3 [\"\
    four\"]=4 [\"five\"]=5 [\"six\"]=6 [\"seven\"]=7 [\"eight\"]=8 [\"nine\"]=9)\n\
    \  # Hint: Use the following associative array to convert numbers to number words\n\
    \  declare -A words=([0]=\"zero\" [1]=\"one\" [2]=\"two\" [3]=\"three\" [4]=\"\
    four\" [5]=\"five\" [6]=\"six\" [7]=\"seven\" [8]=\"eight\" [9]=\"nine\")\n  #\
    \ Hint: Use the following associative array to store the sorted numbers\n  declare\
    \ -A sorted_numbers\n  # Hint: Use the following associative array to store the\
    \ sorted number words\n  declare -A sorted_words\n  # Hint: Use the following\
    \ variable to store the sorted number words\n  local sorted_words_string=\"\"\n\
    \  # Hint: Use the following variable to store the sorted number words\n  local\
    \ sorted_numbers_string=\"\"\n  # Hint: Use the following variable to store the\
    \ sorted number words\n  local sorted_numbers_string=\"\"\n  # Hint: Use the following\
    \ variable to store the sorted number words\n  local sorted_numbers_string=\"\"\
    \n  # Hint: Use the following variable to store the sorted number words\n  local\
    \ sorted_numbers_string=\"\"\n  # Hint: Use the following variable to store the\
    \ sorted number words\n  local sorted_numbers_string=\"\"\n  # Hint: Use the following\
    \ variable to store the sorted number words\n  local sorted_numbers_string=\"\"\
    \n  # Hint: Use the following variable to store the sorted number words\n  local\
    \ sorted_numbers_string=\"\"\n  # Hint: Use the following variable to store the\
    \ sorted number words\n  local sorted_numbers_string=\"\"\n  # Hint: Use the following\
    \ variable to store the sorted number words\n  local sorted_numbers_string=\"\"\
    \n  # Hint: Use the following variable to store the sorted number words\n  local\
    \ sorted_numbers_string=\"\"\n  # Hint:\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local input=$1\n  \
    \  local -a numbers=($input)\n    local -a sorted_numbers=()\n    local -a number_to_digit=([zero]=0\
    \ [one]=1 [two]=2 [three]=3 [four]=4 [five]=5 [six]=6 [seven]=7 [eight]=8 [nine]=9)\n\
    \    local -a digit_to_number=([0]=zero [1]=one [2]=two [3]=three [4]=four [5]=five\
    \ [6]=six [7]=seven [8]=eight [9]=nine)\n    local -a sorted_digits=()\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i digit=0\n    local\
    \ -i sorted_digit=0\n    local -i sorted_number=0\n    local -i number=0\n   \
    \ local -i number_count=${#numbers[@]}\n    local -i digit_count=${#number_to_digit[@]}\n\
    \    local -i sorted_number_count=0\n    local -i sorted_digit_count=0\n    local\
    \ -i sorted_number_index=0\n    local -i sorted_digit_index=0\n    local -i number_index=0\n\
    \    local -i digit_index=0\n    local -i sorted_number_index=0\n    local -i\
    \ sorted_digit_index=0\n    local -i number_index=0\n    local -i digit_index=0\n\
    \    local -i sorted_number_index=0\n    local -i sorted_digit_index=0\n    local\
    \ -i number_index=0\n    local -i digit_index=0\n    local -i sorted_number_index=0\n\
    \    local -i sorted_digit_index=0\n    local -i number_index=0\n    local -i\
    \ digit_index=0\n    local -i sorted_number_index=0\n    local -i sorted_digit_index=0\n\
    \    local -i number_index=0\n    local -i digit_index=0\n    local -i sorted_number_index=0\n\
    \    local -i sorted_digit_index=0\n    local -i number_\n}\n\ncandidate() {\n\
    \    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\")\
    \ = \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate\
    \ \"three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero\
    \ four seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  echo $1 | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: Implement me\n\
    \  echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n \
    \   sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"\
    three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero four\
    \ seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a nums\n   \
    \ local -a sorted_nums\n    local -a sorted_nums_str\n    local -a num_to_str=([0]=\"\
    zero\" [1]=\"one\" [2]=\"two\" [3]=\"three\" [4]=\"four\" [5]=\"five\" [6]=\"\
    six\" [7]=\"seven\" [8]=\"eight\" [9]=\"nine\")\n    local i\n    local j\n  \
    \  local tmp\n    local str\n\n    # Convert string to array\n    IFS=' ' read\
    \ -r -a nums <<< \"$1\"\n\n    # Sort array\n    for ((i=0; i<${#nums[@]}; i++));\
    \ do\n        for ((j=i+1; j<${#nums[@]}; j++)); do\n            if [[ ${nums[i]}\
    \ -gt ${nums[j]} ]]; then\n                tmp=${nums[i]}\n                nums[i]=${nums[j]}\n\
    \                nums[j]=$tmp\n            fi\n        done\n    done\n\n    #\
    \ Convert array to string\n    for ((i=0; i<${#nums[@]}; i++)); do\n        sorted_nums[i]=${num_to_str[${nums[i]}]}\n\
    \    done\n    sorted_nums_str=$(printf \" %s\" \"${sorted_nums[@]}\")\n    str=${sorted_nums_str:1}\n\
    \n    echo \"$str\"\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\"\
    ) = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\"\
    \ ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero four five\
    \ seven eight nine\" ]]\n    [[ $(candidate \"six five four three two one zero\"\
    ) = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    echo \"$1\" | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: Implement this\
    \ function\n  # Hint: You may need to use a temporary file\n  # Hint: You may\
    \ need to use the sort command\n  # Hint: You may need to use the tr command\n\
    \  # Hint: You may need to use the paste command\n  # Hint: You may need to use\
    \ the cut command\n  # Hint: You may need to use the head command\n  # Hint: You\
    \ may need to use the tail command\n  # Hint: You may need to use the wc command\n\
    \  # Hint: You may need to use the seq command\n  # Hint: You may need to use\
    \ the sort command\n  # Hint: You may need to use the uniq command\n  # Hint:\
    \ You may need to use the sed command\n  # Hint: You may need to use the tr command\n\
    \  # Hint: You may need to use the paste command\n  # Hint: You may need to use\
    \ the cut command\n  # Hint: You may need to use the head command\n  # Hint: You\
    \ may need to use the tail command\n  # Hint: You may need to use the wc command\n\
    \  # Hint: You may need to use the seq command\n  # Hint: You may need to use\
    \ the sort command\n  # Hint: You may need to use the uniq command\n  # Hint:\
    \ You may need to use the sed command\n  # Hint: You may need to use the tr command\n\
    \  # Hint: You may need to use the paste command\n  # Hint: You may need to use\
    \ the cut command\n  # Hint: You may need to use the head command\n  # Hint: You\
    \ may need to use the tail command\n  # Hint: You may need to use the wc command\n\
    \  # Hint: You may need to use the seq command\n  # Hint: You may need to use\
    \ the sort command\n  # Hint: You may need to use the uniq command\n  # Hint:\
    \ You may need to use the sed command\n  # Hint: You may need to use the tr command\n\
    \  # Hint: You may need to use the paste command\n  # Hint: You may need to use\
    \ the cut command\n  # Hint: You\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeve9d7ie.sh: line 47: syntax error near unexpected token `}''

    /tmp/tmpeve9d7ie.sh: line 47: `}''

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  # TODO: Your code here\n\
    \  echo \"$1\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n \
    \   sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"\
    three five nine\") = \"three five nine\" ]]\n    [[ $(candidate \"five zero four\
    \ seven nine eight\") = \"zero four five seven eight nine\" ]]\n    [[ $(candidate\
    \ \"six five four three two one zero\") = \"zero one two three four five six\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -a sorted_numbers\n  local -a sorted_numbers_index\n  local -a sorted_numbers_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index\n  local -a sorted_numbers_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index\n  local -a sorted_numbers_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index\n  local\
    \ -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted\n  local\
    \ -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index\n\
    \  local -a sorted_numbers_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted_index_sorted\n\
    \  local -a sorted_numbers_index_sorted_index_\n}\n\ncandidate() {\n    sort_numbers\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\"\
    ) = \"three five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\"\
    ) = \"zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four\
    \ three two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers=($1)\n\
    \  local -a sorted_numbers\n  local -i i\n  local -i j\n  local -i k\n  local\
    \ -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n\
    \  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local\
    \ -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n\
    \  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local\
    \ -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n\
    \  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local\
    \ -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n\
    \  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local\
    \ -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n\
    \  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local\
    \ -i k\n  local -i l\n\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers\n\
    \    local -a sorted_numbers\n    local -i i\n    local -i j\n    local -i k\n\
    \    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local -i\
    \ p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i a\n    local -i b\n    local -i c\n    local -i d\n    local\
    \ -i e\n    local -i f\n    local -i g\n    local -i h\n    local -i i\n    local\
    \ -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n    local\
    \ -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i a\n    local -i b\n    local -i c\n    local\
    \ -i d\n    local -i e\n    local -i f\n    local -i g\n    local -i h\n    local\
    \ -i i\n    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local\
    \ -i n\n    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local\
    \ -i s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i a\n    local -i b\n    local\
    \ -i c\n    local -i d\n    local -i e\n    local -i f\n    local -i g\n    local\
    \ -i h\n    local -i i\n    local -i j\n    local -i k\n    local -i l\n    local\
    \ -i\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 2
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    # TODO: implement this\
    \ function\n    # Hint: use the following command to sort numbers:\n    # sort\
    \ -n\n    # Hint: use the following command to sort strings:\n    # sort\n   \
    \ # Hint: use the following command to sort strings case-insensitively:\n    #\
    \ sort -f\n    # Hint: use the following command to sort strings case-insensitively\
    \ and numerically:\n    # sort -f -n\n    # Hint: use the following command to\
    \ sort strings case-insensitively, numerically and ignore leading whitespace:\n\
    \    # sort -f -n -k 2\n    # Hint: use the following command to sort strings\
    \ case-insensitively, numerically and ignore leading whitespace and trailing whitespace:\n\
    \    # sort -f -n -k 2.1\n    # Hint: use the following command to sort strings\
    \ case-insensitively, numerically and ignore leading whitespace and trailing whitespace,\
    \ and ignore empty lines:\n    # sort -f -n -k 2.1 -s\n    # Hint: use the following\
    \ command to sort strings case-insensitively, numerically and ignore leading whitespace\
    \ and trailing whitespace, and ignore empty lines, and ignore lines starting with\
    \ '#':\n    # sort -f -n -k 2.1 -s -u\n    # Hint: use the following command to\
    \ sort strings case-insensitively, numerically and ignore leading whitespace and\
    \ trailing whitespace, and ignore empty lines, and ignore lines starting with\
    \ '#', and ignore lines starting with '#' and empty lines:\n    # sort -f -n -k\
    \ 2.1 -s -u -u\n    # Hint: use the following command to sort strings case-insensitively,\
    \ numerically and ignore leading whitespace and trailing whitespace, and ignore\
    \ empty lines, and ignore lines starting with '#', and ignore lines starting with\
    \ '#' and empty lines, and ignore lines starting with '#' and empty lines and\
    \ lines starting with '#':\n    # sort -f -n -k 2.1 -s -u -u -u\n    # Hint: use\
    \ the following command to sort strings case-insensitively, numerically and ignore\
    \ leading whitespace and trailing whitespace, and ignore empty lines, and ignore\
    \ lines starting with '#', and ignore\n}\n\ncandidate() {\n    sort_numbers \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three\
    \ five nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"\
    zero four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three\
    \ two one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpz5ke7l93.sh: line 32: syntax error near unexpected token `}''

    /tmp/tmpz5ke7l93.sh: line 32: `}''

    '
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n  local -a numbers\n  local\
    \ -a sorted_numbers\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n\
    \  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local\
    \ -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n\
    \  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local\
    \ -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n\
    \  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local\
    \ -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n\
    \  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local\
    \ -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n\
    \  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local\
    \ -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local -i o\n\
    \  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local\
    \ -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n\
    \  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local\
    \ -i f\n  local -i g\n  local -i h\n  local -i i\n  local -i j\n  local -i k\n\
    \  local -i l\n  local -i\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    three\") = \"three\" ]]\n    [[ $(candidate \"three five nine\") = \"three five\
    \ nine\" ]]\n    [[ $(candidate \"five zero four seven nine eight\") = \"zero\
    \ four five seven eight nine\" ]]\n    [[ $(candidate \"six five four three two\
    \ one zero\") = \"zero one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916
- exit_code: 1
  program: "#!/bin/bash\n# Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n# Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five',\
    \ 'six', 'seven', 'eight' and 'nine'.\n# Return the string with numbers sorted\
    \ from smallest to largest\n# >>> $(sort_numbers \"three one five\")\n# \"one\
    \ three five\"\n#\n# $1 is a string\nsort_numbers() {\n    local -a numbers=($1)\n\
    \    local -a number_map=([zero]=0 [one]=1 [two]=2 [three]=3 [four]=4 [five]=5\
    \ [six]=6 [seven]=7 [eight]=8 [nine]=9)\n    local -a sorted_numbers\n    for\
    \ number in \"${numbers[@]}\"; do\n        sorted_numbers+=(${number_map[$number]})\n\
    \    done\n    echo \"${sorted_numbers[*]}\" | tr ' ' '\\n' | sort -n | tr '\\\
    n' ' '\n}\n\ncandidate() {\n    sort_numbers \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"three\") = \"three\"\
    \ ]]\n    [[ $(candidate \"three five nine\") = \"three five nine\" ]]\n    [[\
    \ $(candidate \"five zero four seven nine eight\") = \"zero four five seven eight\
    \ nine\" ]]\n    [[ $(candidate \"six five four three two one zero\") = \"zero\
    \ one two three four five six\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016916

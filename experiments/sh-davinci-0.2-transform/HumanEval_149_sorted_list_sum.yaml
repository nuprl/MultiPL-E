name: HumanEval_149_sorted_list_sum
language: sh
prompt: "#!/bin/bash\n# Write a function that accepts a list of strings as a parameter,\n\
  # deletes the strings that have odd lengths from it,\n# and returns the resulted\
  \ list with a sorted order,\n# The list is always a list of strings and never an\
  \ array of numbers,\n# and it may contain duplicates.\n# The order of the list should\
  \ be ascending by length of each word, and you\n# should return the list sorted\
  \ by that rule.\n# If two words have the same length, sort the list alphabetically.\n\
  # The function should return a list of strings in sorted order.\n# You may assume\
  \ that all words will have the same length.\n# For example:\n# >>> $(list_sort \"\
  aa a aaa\")\n# ['\"aa\"']\n# >>> $(list_sort \"ab a aaa cd\")\n# ['\"ab\"', '\"\
  cd\"']\n#\n# $1 is a space-separated list\nsorted_list_sum() {\n"
tests: "}\n\ncandidate() {\n    sorted_list_sum \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"aa a aaa\") = \"aa\" ]]\n    [[ $(candidate \"school AI asdf\
  \ b\") = \"AI asdf school\" ]]\n    [[ $(candidate \"d b c a\") = \"\" ]]\n    [[\
  \ $(candidate \"d dcba abcd a\") = \"abcd dcba\" ]]\n    [[ $(candidate \"AI ai\
  \ au\") = \"AI ai au\" ]]\n    [[ $(candidate \"a b b c c a\") = \"\" ]]\n    [[\
  \ $(candidate \"aaaa bbbb dd cc\") = \"cc dd aaaa bbbb\" ]]\n}\n\nrun_test"
completions: ["  local list=$1\n  local sum=0\n  local i\n  for i in $list; do\n \
    \   sum=$((sum + i))\n  done\n  echo $sum", "  local list=$1\n  local sum=0\n\
    \  for i in $list; do\n    sum=$((sum + i))\n  done\n  echo $sum", "    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum", "  local list=\"$1\"\n  local sum=0\n  for word in\
    \ $list; do\n    sum=$((sum + ${#word}))\n  done\n  echo $sum", "    local list=\"\
    $1\"\n    local sum=0\n    local word\n    for word in $list; do\n        sum=$((sum\
    \ + ${#word}))\n    done\n    echo $sum", "    local list=$1\n    local sum=0\n\
    \    local sorted_list=$(echo $list | tr ' ' '\\n' | sort -n)\n    for i in $sorted_list;\
    \ do\n        sum=$((sum + i))\n    done\n    echo $sum", "  local list=$1\n \
    \ local sum=0\n  for i in $list; do\n    sum=$((sum + i))\n  done\n  echo $sum",
  "    local list=$1\n    local sum=0\n    local word\n    for word in $list; do\n\
    \        sum=$((sum + word))\n    done\n    echo $sum", "  local list=\"$1\"\n\
    \  local sum=0\n  local word\n  for word in $list; do\n    sum=$((sum + word))\n\
    \  done\n  echo $sum", "  local list=$1\n  local sum=0\n  local word\n  for word\
    \ in $list; do\n    sum=$((sum + ${#word}))\n  done\n  echo $sum", "    local\
    \ list=$1\n    local sum=0\n    for i in $list; do\n        sum=$((sum + i))\n\
    \    done\n    echo $sum", "  local list=\"$1\"\n  local sum=0\n  local sorted_list=\"\
    \"\n  for word in $list; do\n    sum=$((sum + ${#word}))\n    sorted_list=\"$sorted_list\
    \ $word\"\n  done\n  echo \"$sum $sorted_list\"", "  local list=\"$1\"\n  local\
    \ sum=0\n  local word\n  for word in $list; do\n    sum=$((sum + word))\n  done\n\
    \  echo $sum", "  local list=\"$1\"\n  local sum=0\n  local word\n  for word in\
    \ $list; do\n    sum=$((sum + ${#word}))\n  done\n  echo $sum", "    local list=$1\n\
    \    local sum=0\n    local word\n    for word in $list; do\n        sum=$((sum\
    \ + ${#word}))\n    done\n    echo $sum", "  local list=\"$1\"\n  local sum=0\n\
    \  local word\n  for word in $list; do\n    sum=$((sum + word))\n  done\n  echo\
    \ $sum", "  local list=$1\n  local sum=0\n  for word in $list; do\n    sum=$((sum\
    \ + ${#word}))\n  done\n  echo $sum", "  local list=\"$1\"\n  local sum=0\n  local\
    \ word\n  for word in $list; do\n    sum=$((sum + word))\n  done\n  echo $sum",
  "    local list=$1\n    local sum=0\n    for word in $list; do\n        sum=$((sum\
    \ + ${#word}))\n    done\n    echo $sum", "    local list=$1\n    local sum=0\n\
    \    for i in $list; do\n        sum=$((sum + i))\n    done\n    echo $sum"]
stop_tokens:
- "\n}"

name: HumanEval_67_fruit_distribution
language: sh
prompt: "#!/bin/bash\n# In this task, you will be given a string that represents a\
  \ number of apples and oranges \n# that are distributed in a basket of fruit this\
  \ basket contains \n# apples, oranges, and mango fruits. Given the string that represents\
  \ the total number of \n# the oranges and apples and an integer that represent the\
  \ total number of the fruits \n# in the basket return the number of the mango fruits\
  \ in the basket.\n# for examble:\n# >>> $(fruit_distribution \"5 apples and 6 oranges\"\
  \ \"19\")\n# \"8\"\n# >>> $(fruit_distribution \"0 apples and 1 oranges\" \"3\"\
  )\n# \"2\"\n# >>> $(fruit_distribution \"2 apples and 3 oranges\" \"100\")\n# \"\
  95\"\n# >>> $(fruit_distribution \"100 apples and 1 oranges\" \"120\")\n# \"19\"\
  \n#\n# $1 is a string\n# $2 is an integer\nfruit_distribution() {\n"
tests: "}\n\ncandidate() {\n    fruit_distribution \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"5 apples and 6 oranges\" \"19\") = \"8\" ]]\n    [[ $(candidate\
  \ \"5 apples and 6 oranges\" \"21\") = \"10\" ]]\n    [[ $(candidate \"0 apples\
  \ and 1 oranges\" \"3\") = \"2\" ]]\n    [[ $(candidate \"1 apples and 0 oranges\"\
  \ \"3\") = \"2\" ]]\n    [[ $(candidate \"2 apples and 3 oranges\" \"100\") = \"\
  95\" ]]\n    [[ $(candidate \"2 apples and 3 oranges\" \"5\") = \"0\" ]]\n    [[\
  \ $(candidate \"1 apples and 100 oranges\" \"120\") = \"19\" ]]\n}\n\nrun_test"
completions: ["    # Write your code here\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    #\
    \ ...\n    # ...\n    # ...\n    # ...\n", "    # Write your code here\n    #\
    \ You can use the following command to get the number of apples:\n    # apples=$(echo\
    \ $1 | cut -d \" \" -f 1)\n    # You can use the following command to get the\
    \ number of oranges:\n    # oranges=$(echo $1 | cut -d \" \" -f 4)\n    # You\
    \ can use the following command to get the total number of fruits:\n    # total=$2\n\
    \    # You can use the following command to print the result:\n    # echo $result\n\
    \    apples=$(echo $1 | cut -d \" \" -f 1)\n    oranges=$(echo $1 | cut -d \"\
    \ \" -f 4)\n    total=$2\n    result=$((total-apples-oranges))\n    echo $result",
  '    # Write your code here', "    # Write your code here\n    # You can use the\
    \ following command to get the number of apples\n    # apples=$(echo $1 | cut\
    \ -d \" \" -f 1)\n    # You can use the following command to get the number of\
    \ oranges\n    # oranges=$(echo $1 | cut -d \" \" -f 4)\n    # You can use the\
    \ following command to get the total number of fruits\n    # total=$2", "    #\
    \ Write your code here\n    echo \"0\"", "    # Write your code here\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n", "  # your\
    \ code goes here\n  # you can use the following command to get the number of apples\
    \ and oranges\n  # apples=$(echo $1 | cut -d \" \" -f 1)\n  # oranges=$(echo $1\
    \ | cut -d \" \" -f 4)\n  # you can use the following command to get the total\
    \ number of fruits\n  # total=$2\n  #\n  # you can use the following command to\
    \ print the number of mango fruits\n  # echo $mango_fruits", "    # write your\
    \ code here\n    # you can use echo to print the result\n    # for example:\n\
    \    # echo \"hello world\"\n    #\n    # you can use read to get the input\n\
    \    # for example:\n    # read input\n    #\n    # you can use $1 and $2 to access\
    \ the arguments\n    # for example:\n    # echo $1\n    # echo $2\n    #\n   \
    \ # you can use $# to access the number of arguments\n    # for example:\n   \
    \ # echo $#\n    #\n    # you can use $@ to access all the arguments\n    # for\
    \ example:\n    # echo $@\n    #\n    # you can use $? to access the exit code\
    \ of the last command\n    # for example:\n    # echo $?\n    #\n    # you can\
    \ use $0 to access the name of the script\n    # for example:\n    # echo $0\n\
    \    #\n    # you can use $! to access the PID of the last command\n    # for\
    \ example:\n    # echo $!\n    #\n    # you can use $$ to access the PID of the\
    \ current script\n    # for example:\n    # echo $$\n    #\n    # you can use\
    \ $IFS to access the Internal Field Separator\n    # for example:\n    # echo\
    \ $IFS\n    #\n    # you can use $UID to access the UID of the current user\n\
    \    # for example:\n    # echo $UID\n    #\n    # you can use $EUID to access\
    \ the EUID of the current user\n    # for example:\n    # echo $EUID\n    #\n\
    \    # you can use $HOME to access the home directory of the current user\n  \
    \  # for example:\n    # echo $HOME\n    #\n    # you can use $PWD to access the\
    \ current working directory\n    # for example:\n    # echo $PWD\n    #\n    #\
    \ you can use $LINENO to access the current line number in the script\n    # for\
    \ example:\n    # echo $LINENO\n    #\n    # you can use $SECONDS to access the\
    \ number of seconds since the script was started\n    # for example:\n    # echo\
    \ $SECONDS\n    #\n   ", '    # write your code here', '    # Write your code
    here', '    # your code here', "    # Write your code here\n    # You can use\
    \ the following command to get the number of apples:\n    # apples=$(echo $1 |\
    \ cut -d \" \" -f 1)\n    # You can use the following command to get the number\
    \ of oranges:\n    # oranges=$(echo $1 | cut -d \" \" -f 4)\n    # You can use\
    \ the following command to get the total number of fruits:\n    # total=$2\n \
    \   #\n    # You can use the following command to print your result:\n    # echo\
    \ $result", "    # Write your code here\n    # ...\n    # ...\n    # ...\n   \
    \ # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n  \
    \  # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n \
    \   # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n", '    # Write your code here',
  "    # Write your code here\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n    # ...\n\
    \    # ...\n    # ...\n", "    # Write your code here\n    echo $(( $2 - $(echo\
    \ $1 | sed 's/[^0-9]/ /g' | awk '{print $1+$2}') ))", '    # Write your code here',
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"Hello world\"", " \
    \   # Write your code here\n    # To print results to the standard output you\
    \ can use echo\n    # Example: echo \"Hello world\"\n    echo \"1\"", "    # your\
    \ code here\n    # hint: use the following command to extract the number of apples\
    \ and oranges from the string\n    # echo $1 | grep -o -E '[0-9]+'\n    # hint:\
    \ use the following command to extract the number of mangoes from the string\n\
    \    # echo $2 - $(echo $1 | grep -o -E '[0-9]+' | awk '{s+=$1} END {print s}')"]
stop_tokens:
- "\n}"

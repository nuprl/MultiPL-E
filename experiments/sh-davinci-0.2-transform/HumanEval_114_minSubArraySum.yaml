name: HumanEval_114_minSubArraySum
language: sh
prompt: "#!/bin/bash\n# Given an array of integers nums, find the minimum sum of any\
  \ non-empty sub-array\n# of nums.\n# Example\n# >>> $(minSubArraySum \"2 3 4 1 2\
  \ 4\")\n# \"1\"\n# >>> $(minSubArraySum \"-1 -2 -3\")\n# \"-6\"\n#\n# $1 is a space-separated\
  \ list\nminSubArraySum() {\n"
tests: "}\n\ncandidate() {\n    minSubArraySum \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"2 3 4 1 2 4\") = \"1\" ]]\n    [[ $(candidate \"-1 -2 -3\"\
  ) = \"-6\" ]]\n    [[ $(candidate \"-1 -2 -3 2 -10\") = \"-14\" ]]\n    [[ $(candidate\
  \ \"-9999999999999999\") = \"-9999999999999999\" ]]\n    [[ $(candidate \"0 10 20\
  \ 1000000\") = \"0\" ]]\n    [[ $(candidate \"-1 -2 -3 10 -5\") = \"-6\" ]]\n  \
  \  [[ $(candidate \"100 -1 -2 -3 10 -5\") = \"-6\" ]]\n    [[ $(candidate \"10 11\
  \ 13 8 3 4\") = \"3\" ]]\n    [[ $(candidate \"100 -33 32 -1 0 -2\") = \"-33\" ]]\n\
  \    [[ $(candidate \"-10\") = \"-10\" ]]\n    [[ $(candidate \"7\") = \"7\" ]]\n\
  \    [[ $(candidate \"1 -1\") = \"-1\" ]]\n}\n\nrun_test"
completions: ["  local -a nums=($1)\n  local min=${nums[0]}\n  local sum=0\n  for\
    \ num in \"${nums[@]}\"; do\n    sum=$((sum + num))\n    if ((sum < min)); then\n\
    \      min=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n\
    \  echo $min", "    local -a nums=($1)\n    local min=0\n    local sum=0\n   \
    \ for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n        if [[ $sum -lt\
    \ $min ]]; then\n            min=$sum\n        fi\n    done\n    echo $min", " \
    \   local -a nums=(\"$@\")\n    local min=${nums[0]}\n    local sum=0\n    for\
    \ ((i=0; i<${#nums[@]}; i++)); do\n        sum=$((sum + nums[i]))\n        if\
    \ ((sum < min)); then\n            min=$sum\n        fi\n        if ((sum > 0));\
    \ then\n            sum=0\n        fi\n    done\n    echo \"$min\"", "  local\
    \ -a nums=($1)\n  local min=${nums[0]}\n  local sum=0\n  for i in ${nums[@]};\
    \ do\n    sum=$((sum + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min",
  "  local minSum=0\n  local sum=0\n  for num in $1; do\n    sum=$(($sum + $num))\n\
    \    if [[ $sum -lt $minSum ]]; then\n      minSum=$sum\n    fi\n  done\n  echo\
    \ $minSum", "    local -a nums=($1)\n    local min=${nums[0]}\n    local sum=0\n\
    \    for i in \"${nums[@]}\"; do\n        sum=$((sum + i))\n        if ((sum <\
    \ min)); then\n            min=$sum\n        fi\n        if ((sum > 0)); then\n\
    \            sum=0\n        fi\n    done\n    echo $min", "  local -n nums=$1\n\
    \  local min_sum=0\n  local sum=0\n  for num in ${nums[@]}; do\n    sum=$((sum\
    \ + num))\n    if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n  done\n\
    \  echo $min_sum", "  local -a nums=($1)\n  local min_sum=${nums[0]}\n  local\
    \ sum=0\n  for (( i=0; i<${#nums[@]}; i++ )); do\n    sum=$(( sum + nums[i] ))\n\
    \    if (( sum < min_sum )); then\n      min_sum=$sum\n    fi\n    if (( sum >\
    \ 0 )); then\n      sum=0\n    fi\n  done\n  echo $min_sum", "  local -a nums=($1)\n\
    \  local min=${nums[0]}\n  local sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n\
    \    sum=$((sum + nums[i]))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n\
    \    fi\n    if [[ $sum -gt 0 ]]; then\n      sum=0\n    fi\n  done\n  echo $min",
  "  local -a nums=($1)\n  local min=${nums[0]}\n  local sum=0\n  for num in \"${nums[@]}\"\
    ; do\n    sum=$((sum + num))\n    if ((sum < min)); then\n      min=$sum\n   \
    \ fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo $min", " \
    \ local -a nums=($1)\n  local min_sum=0\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min_sum)); then\n    \
    \  min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n\
    \  echo $min_sum", "  local -a nums=($1)\n  local min=${nums[0]}\n  local sum=0\n\
    \  for (( i=0; i<${#nums[@]}; i++ )); do\n    sum=$(( sum + nums[i] ))\n    if\
    \ (( sum < min )); then\n      min=$sum\n    fi\n    if (( sum > 0 )); then\n\
    \      sum=0\n    fi\n  done\n  echo $min", "  local -a nums=($1)\n  local min=${nums[0]}\n\
    \  local sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n\
    \    if ((sum < min)); then\n      min=$sum\n    fi\n    if ((sum > 0)); then\n\
    \      sum=0\n    fi\n  done\n  echo $min", "  local -n arr=$1\n  local min_sum=${arr[0]}\n\
    \  local sum=0\n  for (( i=0; i<${#arr[@]}; i++ )); do\n    sum=$(( sum + arr[i]\
    \ ))\n    if (( sum < min_sum )); then\n      min_sum=$sum\n    fi\n    if ((\
    \ sum > 0 )); then\n      sum=0\n    fi\n  done\n  echo $min_sum", "  local -n\
    \ nums=$1\n  local min=0\n  local sum=0\n  for i in ${nums[@]}; do\n    sum=$((sum\
    \ + i))\n    if [[ $sum -lt $min ]]; then\n      min=$sum\n    fi\n  done\n  echo\
    \ $min", "    local min=0\n    local sum=0\n    for i in $1; do\n        sum=$((sum\
    \ + i))\n        if [[ $sum -lt $min ]]; then\n            min=$sum\n        fi\n\
    \    done\n    echo $min", "  local -a nums=($1)\n  local min_sum=0\n  local curr_sum=0\n\
    \  for ((i=0; i<${#nums[@]}; i++)); do\n    curr_sum=$((curr_sum + nums[i]))\n\
    \    if ((curr_sum < min_sum)); then\n      min_sum=$curr_sum\n    fi\n    if\
    \ ((curr_sum > 0)); then\n      curr_sum=0\n    fi\n  done\n  echo $min_sum",
  "  local -a nums\n  IFS=' ' read -r -a nums <<< \"$1\"\n  local min_sum=${nums[0]}\n\
    \  local sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n    sum=$((sum + nums[i]))\n\
    \    if ((sum < min_sum)); then\n      min_sum=$sum\n    fi\n    if ((sum > 0));\
    \ then\n      sum=0\n    fi\n  done\n  echo \"$min_sum\"", "  local -a nums=($1)\n\
    \  local min=${nums[0]}\n  local sum=0\n  for ((i=0; i<${#nums[@]}; i++)); do\n\
    \    sum=$((sum + nums[i]))\n    if ((sum < min)); then\n      min=$sum\n    fi\n\
    \    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n  echo $min", "  local\
    \ -a nums=($1)\n  local min_sum=${nums[0]}\n  local sum=0\n  for ((i=0; i<${#nums[@]};\
    \ i++)); do\n    sum=$((sum + nums[i]))\n    if ((sum < min_sum)); then\n    \
    \  min_sum=$sum\n    fi\n    if ((sum > 0)); then\n      sum=0\n    fi\n  done\n\
    \  echo $min_sum"]
stop_tokens:
- "\n}"

name: HumanEval_0_has_close_elements
language: sh
prompt: "#!/bin/bash\n# Check if in given list of numbers, are any two numbers closer\
  \ to each other than\n# given threshold.\n# >>> $(has_close_elements \"1.0 2.0 3.0\"\
  \ \"0.5\")\n# \"false\"\n# >>> $(has_close_elements \"1.0 2.8 3.0 4.0 5.0 2.0\"\
  \ \"0.3\")\n# \"true\"\n#\n# $1 is a space-separated list\n# $2 is a floating point\n\
  has_close_elements() {\n"
tests: "}\n\ncandidate() {\n    has_close_elements \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.3\") = \"true\" ]]\n   \
  \ [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\" \"0.05\") = \"false\" ]]\n    [[ $(candidate\
  \ \"1.0 2.0 5.9 4.0 5.0\" \"0.95\") = \"true\" ]]\n    [[ $(candidate \"1.0 2.0\
  \ 5.9 4.0 5.0\" \"0.8\") = \"false\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0\
  \ 2.0\" \"0.1\") = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"1.0\"\
  ) = \"true\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\" \"0.5\") = \"false\"\
  \ ]]\n}\n\nrun_test"
completions: ["    local list=$1\n    local threshold=$2\n    local prev=0\n    for\
    \ num in $list; do\n        if [ $(echo \"$num - $prev < $threshold\" | bc -l)\
    \ -eq 1 ]; then\n            echo \"true\"\n            return\n        fi\n \
    \       prev=$num\n    done\n    echo \"false\"", "    local list=\"$1\"\n   \
    \ local threshold=\"$2\"\n    local -a numbers=($list)\n    local -i n=${#numbers[@]}\n\
    \    local -i i=0\n    local -i j=0\n    for ((i=0; i<n; i++)); do\n        for\
    \ ((j=i+1; j<n; j++)); do\n            if [[ $(echo \"${numbers[i]} - ${numbers[j]}\
    \ < $threshold\" | bc -l) -eq 1 ]]; then\n                echo \"true\"\n    \
    \            return\n            fi\n        done\n    done\n    echo \"false\"",
  "  local list=\"$1\"\n  local threshold=\"$2\"\n  local -a numbers=($list)\n  local\
    \ -a diffs\n  local i\n  local j\n  local diff\n  local -i n\n  local -i m\n \
    \ local -i k\n  local -i l\n  local -i min_diff_index\n  local -i min_diff\n \
    \ local -i min_diff_index_2\n  local -i min_diff_2\n  local -i min_diff_index_3\n\
    \  local -i min_diff_3\n  local -i min_diff_index_4\n  local -i min_diff_4\n \
    \ local -i min_diff_index_5\n  local -i min_diff_5\n  local -i min_diff_index_6\n\
    \  local -i min_diff_6\n  local -i min_diff_index_7\n  local -i min_diff_7\n \
    \ local -i min_diff_index_8\n  local -i min_diff_8\n  local -i min_diff_index_9\n\
    \  local -i min_diff_9\n  local -i min_diff_index_10\n  local -i min_diff_10\n\
    \  local -i min_diff_index_11\n  local -i min_diff_11\n  local -i min_diff_index_12\n\
    \  local -i min_diff_12\n  local -i min_diff_index_13\n  local -i min_diff_13\n\
    \  local -i min_diff_index_14\n  local -i min_diff_14\n  local -i min_diff_index_15\n\
    \  local -i min_diff_15\n  local -i min_diff_index_16\n  local -i min_diff_16\n\
    \  local -i min_diff_index_17\n  local -i min_diff_17\n  local -i min_diff_index_18\n\
    \  local -i min_diff_18\n  local -i min_diff_index_19\n  local -i min_diff_19\n\
    \  local -i min_diff_index_20\n  local -i min_diff_20\n  local -i min_", "   \
    \ local list=\"$1\"\n    local threshold=\"$2\"\n    local -a array=($list)\n\
    \    local -a diffs\n    local diff\n    local i\n    local j\n    for ((i=0;\
    \ i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++)); do\n\
    \            diff=$(echo \"${array[i]} - ${array[j]}\" | bc -l)\n            diffs+=(\"\
    $diff\")\n        done\n    done\n    for diff in \"${diffs[@]}\"; do\n      \
    \  if [[ $(echo \"$diff < $threshold\" | bc -l) == 1 ]]; then\n            echo\
    \ \"true\"\n            return\n        fi\n    done\n    echo \"false\"", " \
    \   local -a numbers=($1)\n    local threshold=$2\n    local i\n    local j\n\
    \    for ((i=0; i<${#numbers[@]}; i++)); do\n        for ((j=i+1; j<${#numbers[@]};\
    \ j++)); do\n            if (( $(echo \"${numbers[$i]} - ${numbers[$j]} < $threshold\"\
    \ | bc -l) )); then\n                echo \"true\"\n                return\n \
    \           fi\n        done\n    done\n    echo \"false\"", "  local -a numbers=($1)\n\
    \  local threshold=$2\n  local -i i=0\n  local -i j=0\n  local -i n=${#numbers[@]}\n\
    \  local -i result=0\n  for ((i=0; i<n; i++)); do\n    for ((j=i+1; j<n; j++));\
    \ do\n      if (( $(bc <<< \"${numbers[i]} - ${numbers[j]} < $threshold\") ));\
    \ then\n        result=1\n        break\n      fi\n    done\n  done\n  echo $result",
  "    local list=\"$1\"\n    local threshold=\"$2\"\n    local -a array=($list)\n\
    \    local -a diffs\n    local i\n    local j\n    local diff\n    local -i n=${#array[@]}\n\
    \    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++)); do\n        \
    \    diff=$(echo \"${array[i]} - ${array[j]}\" | bc -l)\n            if [ $(echo\
    \ \"$diff < 0\" | bc -l) -eq 1 ]; then\n                diff=$(echo \"0 - $diff\"\
    \ | bc -l)\n            fi\n            if [ $(echo \"$diff < $threshold\" | bc\
    \ -l) -eq 1 ]; then\n                echo \"true\"\n                return\n \
    \           fi\n        done\n    done\n    echo \"false\"", "    local -a nums\n\
    \    local -a diffs\n    local -a close_diffs\n    local i\n    local j\n    local\
    \ diff\n    local threshold\n    local -i num_nums\n    local -i num_close_diffs\n\
    \    local -i num_diffs\n\n    nums=($1)\n    threshold=$2\n    num_nums=${#nums[@]}\n\
    \    for ((i=0; i<num_nums; i++)); do\n        for ((j=i+1; j<num_nums; j++));\
    \ do\n            diff=$(echo \"${nums[i]} - ${nums[j]}\" | bc -l)\n         \
    \   diffs[${#diffs[@]}]=$(echo \"$diff < 0 ? -$diff : $diff\" | bc -l)\n     \
    \   done\n    done\n    num_diffs=${#diffs[@]}\n    for ((i=0; i<num_diffs; i++));\
    \ do\n        if [[ $(echo \"${diffs[i]} < $threshold\" | bc -l) -eq 1 ]]; then\n\
    \            close_diffs[${#close_diffs[@]}]=${diffs[i]}\n        fi\n    done\n\
    \    num_close_diffs=${#close_diffs[@]}\n    if [[ $num_close_diffs -eq 0 ]];\
    \ then\n        echo \"false\"\n    else\n        echo \"true\"\n    fi", "  \
    \  local list=\"$1\"\n    local threshold=\"$2\"\n    local min_diff=1.0\n   \
    \ local prev_val=0.0\n    for val in $list; do\n        local diff=$(echo \"$val\
    \ - $prev_val\" | bc -l)\n        if [ $(echo \"$diff < $min_diff\" | bc -l) -eq\
    \ 1 ]; then\n            min_diff=$diff\n        fi\n        prev_val=$val\n \
    \   done\n    if [ $(echo \"$min_diff < $threshold\" | bc -l) -eq 1 ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    local\
    \ list=\"$1\"\n    local threshold=\"$2\"\n    local -a array=($list)\n    local\
    \ -a diffs\n    local -i i\n    local -i j\n    local -i n=${#array[@]}\n    local\
    \ -i m\n    local -i k\n    local -i l\n    local -i diff\n    local -i min_diff\n\
    \    local -i min_diff_index\n    local -i min_diff_index_2\n    local -i min_diff_index_3\n\
    \    local -i min_diff_index_4\n    local -i min_diff_index_5\n    local -i min_diff_index_6\n\
    \    local -i min_diff_index_7\n    local -i min_diff_index_8\n    local -i min_diff_index_9\n\
    \    local -i min_diff_index_10\n    local -i min_diff_index_11\n    local -i\
    \ min_diff_index_12\n    local -i min_diff_index_13\n    local -i min_diff_index_14\n\
    \    local -i min_diff_index_15\n    local -i min_diff_index_16\n    local -i\
    \ min_diff_index_17\n    local -i min_diff_index_18\n    local -i min_diff_index_19\n\
    \    local -i min_diff_index_20\n    local -i min_diff_index_21\n    local -i\
    \ min_diff_index_22\n    local -i min_diff_index_23\n    local -i min_diff_index_24\n\
    \    local -i min_diff_index_25\n    local -i min_diff_index_26\n    local -i\
    \ min_diff_index_27\n    local -i min_diff_index_28\n    local -i min_diff_index_29\n\
    \    local -i min_diff_index_30\n    local -i min_diff_index_31\n    local -i\
    \ min_diff_index_32\n    local -i min_diff_index_33\n    local -i min_diff_index_34\n\
    \    local -i min_diff_index_35\n    local -", "    local list=\"$1\"\n    local\
    \ threshold=\"$2\"\n    local -a array=($list)\n    local i\n    local j\n   \
    \ for ((i=0; i<${#array[@]}; i++)); do\n        for ((j=i+1; j<${#array[@]}; j++));\
    \ do\n            if (( $(echo \"${array[$i]} - ${array[$j]} < $threshold\" |\
    \ bc -l) )); then\n                echo \"true\"\n                return\n   \
    \         fi\n        done\n    done\n    echo \"false\"", "    local -a numbers\n\
    \    local -i i\n    local -i j\n    local -i len\n    local -i len_minus_1\n\
    \    local -i len_minus_2\n    local -i len_minus_3\n    local -i len_minus_4\n\
    \    local -i len_minus_5\n    local -i len_minus_6\n    local -i len_minus_7\n\
    \    local -i len_minus_8\n    local -i len_minus_9\n    local -i len_minus_10\n\
    \    local -i len_minus_11\n    local -i len_minus_12\n    local -i len_minus_13\n\
    \    local -i len_minus_14\n    local -i len_minus_15\n    local -i len_minus_16\n\
    \    local -i len_minus_17\n    local -i len_minus_18\n    local -i len_minus_19\n\
    \    local -i len_minus_20\n    local -i len_minus_21\n    local -i len_minus_22\n\
    \    local -i len_minus_23\n    local -i len_minus_24\n    local -i len_minus_25\n\
    \    local -i len_minus_26\n    local -i len_minus_27\n    local -i len_minus_28\n\
    \    local -i len_minus_29\n    local -i len_minus_30\n    local -i len_minus_31\n\
    \    local -i len_minus_32\n    local -i len_minus_33\n    local -i len_minus_34\n\
    \    local -i len_minus_35\n    local -i len_minus_36\n    local -i len_minus_37\n\
    \    local -i len_minus_38\n    local -i len_minus_39\n    local -i len_minus_40\n\
    \    local -i len_minus_41\n    local -i len_minus_42\n    local -i len_minus_43\n\
    \    local -i len_minus_44\n    local -i len_minus_45\n    local -i len_minus_46\n\
    \    local -i len_minus_47\n    local -i len_minus_48\n    local -i len_minus",
  "  local list=\"$1\"\n  local threshold=\"$2\"\n  local -a array=($list)\n  local\
    \ -a sorted=($(echo \"${array[@]}\" | tr ' ' '\\n' | sort -g))\n  local -a diffs=($(echo\
    \ \"${sorted[@]}\" | tr ' ' '\\n' | awk '{if (NR > 1) print $1 - prev; prev =\
    \ $1}'))\n  local -a close=($(echo \"${diffs[@]}\" | tr ' ' '\\n' | awk -v threshold=\"\
    $threshold\" '$1 < threshold'))\n  if [[ ${#close[@]} -gt 0 ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi", "    local list=\"$1\"\n    local\
    \ threshold=\"$2\"\n    local -a numbers=($list)\n    local -a diffs\n    local\
    \ i\n    local j\n    local diff\n    for ((i=0; i<${#numbers[@]}; i++)); do\n\
    \        for ((j=i+1; j<${#numbers[@]}; j++)); do\n            diff=$(echo \"\
    ${numbers[i]} - ${numbers[j]}\" | bc -l)\n            if [ $(echo \"$diff < 0\"\
    \ | bc -l) -eq 1 ]; then\n                diff=$(echo \"$diff * -1\" | bc -l)\n\
    \            fi\n            if [ $(echo \"$diff < $threshold\" | bc -l) -eq 1\
    \ ]; then\n                echo \"true\"\n                return\n           \
    \ fi\n        done\n    done\n    echo \"false\"", "    local list=\"$1\"\n  \
    \  local threshold=\"$2\"\n    local -a array=($list)\n    local -a diffs\n  \
    \  local -i i\n    local -i j\n    local -i n=${#array[@]}\n    local -i k=0\n\
    \    local -i m=0\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++));\
    \ do\n            diffs[k]=$(echo \"${array[i]} - ${array[j]}\" | bc -l)\n   \
    \         ((k++))\n        done\n    done\n    for ((i=0; i<k; i++)); do\n   \
    \     if [[ $(echo \"${diffs[i]} < $threshold\" | bc -l) -eq 1 ]]; then\n    \
    \        ((m++))\n        fi\n    done\n    if [[ $m -gt 0 ]]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local list=\"$1\"\n\
    \    local threshold=\"$2\"\n    local numbers=($list)\n    local n=${#numbers[@]}\n\
    \    local i\n    local j\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1;\
    \ j<n; j++)); do\n            local diff=$(echo \"${numbers[i]} - ${numbers[j]}\"\
    \ | bc -l)\n            local abs_diff=$(echo \"if ($diff < 0) $diff * -1 else\
    \ $diff\" | bc -l)\n            if [ $(echo \"$abs_diff < $threshold\" | bc -l)\
    \ -eq 1 ]; then\n                echo \"true\"\n                return\n     \
    \       fi\n        done\n    done\n    echo \"false\"", "  local numbers=$1\n\
    \  local threshold=$2\n  local min_diff=$threshold\n  local min_diff_numbers=\"\
    \"\n  for i in $numbers; do\n    for j in $numbers; do\n      if [ \"$i\" != \"\
    $j\" ]; then\n        local diff=$(echo \"$i - $j\" | bc -l)\n        if [ $(echo\
    \ \"$diff < 0\" | bc -l) -eq 1 ]; then\n          diff=$(echo \"$diff * -1\" |\
    \ bc -l)\n        fi\n        if [ $(echo \"$diff < $min_diff\" | bc -l) -eq 1\
    \ ]; then\n          min_diff=$diff\n          min_diff_numbers=\"$i $j\"\n  \
    \      fi\n      fi\n    done\n  done\n  if [ $(echo \"$min_diff < $threshold\"\
    \ | bc -l) -eq 1 ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
  "    local list=\"$1\"\n    local threshold=\"$2\"\n    local numbers=($list)\n\
    \    local i\n    local j\n    for ((i=0; i<${#numbers[@]}; i++)); do\n      \
    \  for ((j=i+1; j<${#numbers[@]}; j++)); do\n            local diff=$(echo \"\
    ${numbers[$i]} - ${numbers[$j]}\" | bc -l)\n            local abs_diff=$(echo\
    \ \"if ($diff < 0) $diff * -1 else $diff\" | bc -l)\n            if [[ $(echo\
    \ \"$abs_diff < $threshold\" | bc -l) == 1 ]]; then\n                echo \"true\"\
    \n                return\n            fi\n        done\n    done\n    echo \"\
    false\"", "    local list=\"$1\"\n    local threshold=\"$2\"\n    local previous_element=\"\
    $(echo \"$list\" | head -n 1)\"\n    local current_element\n    for current_element\
    \ in $list; do\n        if [ \"$(echo \"$previous_element $current_element\" |\
    \ awk '{print ($2-$1) < '\"$threshold\"'}')\" = \"1\" ]; then\n            echo\
    \ \"true\"\n            return\n        fi\n        previous_element=\"$current_element\"\
    \n    done\n    echo \"false\"", "    local -a numbers=($1)\n    local threshold=$2\n\
    \    local -i i=0\n    local -i j=0\n    local -i n=${#numbers[@]}\n    local\
    \ -i has_close_elements=0\n    for ((i=0; i<n; i++)); do\n        for ((j=i+1;\
    \ j<n; j++)); do\n            if (( $(echo \"${numbers[i]} - ${numbers[j]} < $threshold\"\
    \ | bc -l) )); then\n                has_close_elements=1\n                break\n\
    \            fi\n        done\n    done\n    echo $has_close_elements"]
stop_tokens:
- "\n}"

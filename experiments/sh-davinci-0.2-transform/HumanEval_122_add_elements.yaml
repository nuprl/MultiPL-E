name: HumanEval_122_add_elements
language: sh
prompt: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer k,\
  \ return\n# the sum of the elements with at most two digits from the first k elements\
  \ of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8 9\" \"4\")\n\
  # \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k <= len(arr)\n#\n\
  # $1 is a space-separated list\n# $2 is an integer\nadd_elements() {\n"
tests: "}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
  \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6\
  \ 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"\
  4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
completions: ["    local -n arr=$1\n    local k=$2\n    local sum=0\n    for (( i=0;\
    \ i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            (( sum\
    \ += arr[i] ))\n        fi\n    done\n    echo \"$sum\"", "    local -n arr=$1\n\
    \    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[\
    \ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n        fi\n   \
    \ done\n    echo \"$sum\"", "  local sum=0\n  local arr=($1)\n  local k=$2\n \
    \ for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum\
    \ + ${arr[i]}))\n    fi\n  done\n  echo \"$sum\"", "    local -a arr=()\n    local\
    \ -i k=0\n    local -i sum=0\n    local -i i=0\n    local -i len=0\n    local\
    \ -i num=0\n    local -i num_digits=0\n    local -i max_digits=2\n    local -i\
    \ max_num=99\n    local -i min_num=10\n    arr=($1)\n    k=$2\n    len=${#arr[@]}\n\
    \    for ((i=0; i<len; i++)); do\n        num=${arr[i]}\n        num_digits=${#num}\n\
    \        if ((num_digits <= max_digits && num >= min_num && num <= max_num));\
    \ then\n            sum=$((sum + num))\n        fi\n        if ((i == k - 1));\
    \ then\n            break\n        fi\n    done\n    echo \"$sum\"", "  local\
    \ arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  for element in $arr;\
    \ do\n    if [[ $i -lt $k ]]; then\n      if [[ $element -lt 100 ]]; then\n  \
    \      sum=$((sum + element))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ \"$sum\"", "    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0;\
    \ i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum", "    local -n arr=$1\n\
    \    local k=$2\n    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[\
    \ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n        fi\n   \
    \ done\n    echo $sum", "    local arr=($1)\n    local k=$2\n    local sum=0\n\
    \    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n   \
    \         sum=$((sum + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"",
  "    local -n arr=$1\n    local k=$2\n    local sum=0\n    for (( i=0; i<k; i++\
    \ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            (( sum += arr[i]\
    \ ))\n        fi\n    done\n    echo \"$sum\"", "    local -a arr=()\n    local\
    \ -i k\n    local -i sum=0\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=\"$2\"\
    \n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} =~ ^[0-9]{1,2}$ ]]; then\n\
    \            sum=$((sum + arr[i]))\n        fi\n    done\n    echo \"$sum\"",
  "    local -n arr=$1\n    local k=$2\n    local sum=0\n    for (( i=0; i<k; i++\
    \ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            (( sum += arr[i]\
    \ ))\n        fi\n    done\n    echo \"$sum\"", "    local -a arr=()\n    local\
    \ -i k=0\n    local -i sum=0\n    local -i i=0\n    local -i len=0\n    local\
    \ -i num=0\n    local -i num_digits=0\n    local -i max_digits=2\n    local -i\
    \ max_num=99\n    local -i min_num=10\n    local -i max_i=0\n    local -i min_i=0\n\
    \    local -i max_sum=0\n    local -i min_sum=0\n    local -i max_num_digits=0\n\
    \    local -i min_num_digits=0\n    local -i max_len=0\n    local -i min_len=0\n\
    \    local -i max_k=0\n    local -i min_k=0\n    local -i max_max_digits=0\n \
    \   local -i min_max_digits=0\n    local -i max_max_num=0\n    local -i min_max_num=0\n\
    \    local -i max_min_num=0\n    local -i min_min_num=0\n    local -i max_max_i=0\n\
    \    local -i min_max_i=0\n    local -i max_min_i=0\n    local -i min_min_i=0\n\
    \    local -i max_max_sum=0\n    local -i min_max_sum=0\n    local -i max_min_sum=0\n\
    \    local -i min_min_sum=0\n    local -i max_max_num_digits=0\n    local -i min_max_num_digits=0\n\
    \    local -i max_min_num_digits=0\n    local -i min_min_num_digits=0\n    local\
    \ -i max_max_len=0\n    local -i min_max_len=0\n    local -i max_min_len=0\n \
    \   local -i min_min_len=0\n    local -i max_max_k=0\n    local -i min_max_k=0\n\
    \    local -i max_min_k=0\n   ", "    local -n arr=$1\n    local k=$2\n    local\
    \ sum=0\n    for i in $(seq 1 $k); do\n        local num=$(echo $arr | cut -d\
    \ \" \" -f $i)\n        if [[ $num -lt 100 ]]; then\n            ((sum += num))\n\
    \        fi\n    done\n    echo $sum", "  local -a arr=()\n  local -i k=0\n  local\
    \ -i i=0\n  local -i sum=0\n  local -i len=0\n  local -i num=0\n  local -i num_digits=0\n\
    \  local -i max_digits=2\n  local -i max_num=99\n  local -i min_num=10\n  local\
    \ -i max_num_digits=2\n  local -i min_num_digits=1\n  IFS=' ' read -r -a arr <<<\
    \ \"$1\"\n  k=$2\n  len=${#arr[@]}\n  if [[ $k -gt $len ]]; then\n    k=$len\n\
    \  fi\n  for ((i=0; i<k; i++)); do\n    num=${arr[$i]}\n    num_digits=${#num}\n\
    \    if [[ $num_digits -le $max_digits ]]; then\n      sum=$((sum + num))\n  \
    \  fi\n  done\n  echo \"$sum\"", "  local arr=($1)\n  local k=$2\n  local sum=0\n\
    \  for i in $(seq 0 $((k-1))); do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n   \
    \   sum=$((sum + ${arr[$i]}))\n    fi\n  done\n  echo \"$sum\"", "    local -n\
    \ arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq 1 $k); do\n    \
    \    local num=$(echo $arr | cut -d ' ' -f $i)\n        if [[ $num -lt 100 ]];\
    \ then\n            ((sum += num))\n        fi\n    done\n    echo $sum", "  local\
    \ -a arr\n  local -i k\n  local -i sum\n  local -i i\n  arr=($1)\n  k=$2\n  sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"", "  local -a arr=()\n  IFS=' ' read -r -a arr\
    \ <<< \"$1\"\n  local k=\"$2\"\n  local sum=0\n  for ((i=0; i<k; i++)); do\n \
    \   if [[ \"${arr[i]}\" -lt 100 ]]; then\n      ((sum+=arr[i]))\n    fi\n  done\n\
    \  echo \"$sum\"", "    local arr=($1)\n    local k=$2\n    local sum=0\n    for\
    \ ((i=0; i<$k; i++)); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n        \
    \    sum=$((sum + ${arr[$i]}))\n        fi\n    done\n    echo $sum", "    local\
    \ -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq 1 $k); do\n \
    \       local num=${arr[$i]}\n        if [[ $num -lt 100 ]]; then\n          \
    \  ((sum+=num))\n        fi\n    done\n    echo $sum"]
stop_tokens:
- "\n}"

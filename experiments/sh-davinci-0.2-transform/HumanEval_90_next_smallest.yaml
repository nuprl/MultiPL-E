name: HumanEval_90_next_smallest
language: sh
prompt: "#!/bin/bash\n# You are given a list of integers.\n# Write a function next_smallest()\
  \ that returns the 2nd smallest element of the list.\n# Return None if there is\
  \ no such element.\n# >>> $(next_smallest \"1 2 3 4 5\")\n# \"2\"\n# >>> $(next_smallest\
  \ \"5 1 4 3 2\")\n# \"2\"\n# >>> $(next_smallest \"\")\n# \"None\"\n# >>> $(next_smallest\
  \ \"1 1\")\n# \"None\"\n#\n# $1 is a space-separated list\nnext_smallest() {\n"
tests: "}\n\ncandidate() {\n    next_smallest \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"1 2 3 4 5\") = \"2\" ]]\n    [[ $(candidate \"5 1 4 3 2\"\
  ) = \"2\" ]]\n    [[ $(candidate \"\") = \"None\" ]]\n    [[ $(candidate \"1 1\"\
  ) = \"None\" ]]\n    [[ $(candidate \"1 1 1 1 0\") = \"1\" ]]\n    [[ $(candidate\
  \ \"1 1\") = \"None\" ]]\n    [[ $(candidate \"-35 34 12 -45\") = \"-35\" ]]\n}\n\
  \nrun_test"
completions: ["    # your code here\n    echo \"None\"", "    local -a arr=($1)\n\
    \    local -i i=0\n    local -i min=${arr[0]}\n    local -i min2=${arr[0]}\n \
    \   local -i len=${#arr[@]}\n    for (( i=1; i<len; i++ )); do\n        if [[\
    \ ${arr[i]} -lt $min ]]; then\n            min2=$min\n            min=${arr[i]}\n\
    \        elif [[ ${arr[i]} -lt $min2 ]]; then\n            min2=${arr[i]}\n  \
    \      fi\n    done\n    if [[ $min2 -eq $min ]]; then\n        echo \"None\"\n\
    \    else\n        echo $min2\n    fi", "    local -a arr=($1)\n    local -i i=0\n\
    \    local -i min=0\n    local -i min2=0\n    local -i len=${#arr[@]}\n    local\
    \ -i min_found=0\n    local -i min2_found=0\n\n    if [ $len -lt 2 ]; then\n \
    \       echo \"None\"\n        return\n    fi\n\n    for ((i=0; i<len; i++));\
    \ do\n        if [ $min_found -eq 0 ]; then\n            min=${arr[i]}\n     \
    \       min_found=1\n        elif [ ${arr[i]} -lt $min ]; then\n            min2=$min\n\
    \            min=$${arr[i]}\n            min2_found=1\n        elif [ $min2_found\
    \ -eq 0 ] && [ ${arr[i]} -ne $min ]; then\n            min2=${arr[i]}\n      \
    \      min2_found=1\n        elif [ ${arr[i]} -lt $min2 ] && [ ${arr[i]} -ne $min\
    \ ]; then\n            min2=${arr[i]}\n        fi\n    done\n\n    if [ $min2_found\
    \ -eq 0 ]; then\n        echo \"None\"\n    else\n        echo $min2\n    fi",
  "  local sorted=($(echo \"$1\" | tr ' ' '\\n' | sort -n))\n  local smallest=${sorted[0]}\n\
    \  for i in \"${sorted[@]}\"; do\n    if [[ $i -gt $smallest ]]; then\n      echo\
    \ $i\n      return\n    fi\n  done\n  echo \"None\"", "  local list=$1\n  local\
    \ smallest=$(echo \"$list\" | head -n 1)\n  local next_smallest=$(echo \"$list\"\
    \ | head -n 2 | tail -n 1)\n  for i in $list; do\n    if [[ $i -lt $smallest ]];\
    \ then\n      next_smallest=$smallest\n      smallest=$i\n    elif [[ $i -lt $next_smallest\
    \ ]]; then\n      next_smallest=$i\n    fi\n  done\n  if [[ $next_smallest -eq\
    \ $smallest ]]; then\n    echo \"None\"\n  else\n    echo $next_smallest\n  fi",
  "    local -a arr=($1)\n    local -a sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n'\
    \ | sort -n))\n    local -a unique=($(echo \"${sorted[@]}\" | tr ' ' '\\n' | uniq))\n\
    \    if [ ${#unique[@]} -lt 2 ]; then\n        echo \"None\"\n    else\n     \
    \   echo \"${unique[1]}\"\n    fi", "    local -a arr=()\n    local -i i=0\n \
    \   local -i min=0\n    local -i min2=0\n    local -i n=0\n    local -i len=0\n\
    \    local -i tmp=0\n\n    # convert string to array\n    arr=($1)\n    len=${#arr[@]}\n\
    \n    # find min\n    min=${arr[0]}\n    for ((i=1; i<len; i++)); do\n       \
    \ if ((arr[i] < min)); then\n            min=${arr[i]}\n        fi\n    done\n\
    \n    # find min2\n    min2=${arr[0]}\n    for ((i=1; i<len; i++)); do\n     \
    \   if ((arr[i] < min2 && arr[i] > min)); then\n            min2=${arr[i]}\n \
    \       fi\n    done\n\n    if ((min2 == min)); then\n        echo \"None\"\n\
    \    else\n        echo \"$min2\"\n    fi", "    local -a arr=($1)\n    local\
    \ -i i\n    local -i min1=${arr[0]}\n    local -i min2=${arr[0]}\n    for ((i=1;\
    \ i<${#arr[@]}; i++)); do\n        if ((${arr[i]} < min1)); then\n           \
    \ min2=min1\n            min1=${arr[i]}\n        elif ((${arr[i]} < min2)); then\n\
    \            min2=${arr[i]}\n        fi\n    done\n    if ((min1 == min2)); then\n\
    \        echo \"None\"\n    else\n        echo \"$min2\"\n    fi", "  local -a\
    \ arr=()\n  for i in $1; do\n    arr+=($i)\n  done\n  if [ ${#arr[@]} -lt 2 ];\
    \ then\n    echo \"None\"\n    return\n  fi\n  local min=${arr[0]}\n  local min2=${arr[1]}\n\
    \  if [ $min -gt $min2 ]; then\n    min=$min2\n    min2=${arr[0]}\n  fi\n  for\
    \ i in ${arr[@]:2}; do\n    if [ $i -lt $min ]; then\n      min2=$min\n      min=$i\n\
    \    elif [ $i -lt $min2 ]; then\n      min2=$i\n    fi\n  done\n  echo $min2",
  "    local -a arr=($1)\n    local -a sorted=($(echo ${arr[@]} | tr ' ' '\\n' | sort\
    \ -n))\n    local -i len=${#sorted[@]}\n    if ((len < 2)); then\n        echo\
    \ \"None\"\n    else\n        echo ${sorted[1]}\n    fi", "    local -a arr=($1)\n\
    \    local -i n=${#arr[@]}\n    if ((n < 2)); then\n        echo \"None\"\n  \
    \      return\n    fi\n    local -i i=0\n    local -i min=arr[0]\n    local -i\
    \ min2=arr[1]\n    if ((min2 < min)); then\n        min2=min\n        min=arr[1]\n\
    \    fi\n    for ((i=2; i<n; i++)); do\n        if ((arr[i] < min)); then\n  \
    \          min2=min\n            min=arr[i]\n        elif ((arr[i] < min2)); then\n\
    \            min2=arr[i]\n        fi\n    done\n    echo $min2", "  local -a arr\n\
    \  local -i i\n  local -i min\n  local -i min2\n  local -i n\n\n  read -a arr\
    \ <<< \"$1\"\n  n=${#arr[@]}\n  if (( n < 2 )); then\n    echo \"None\"\n    return\n\
    \  fi\n\n  min=${arr[0]}\n  min2=${arr[1]}\n  if (( min > min2 )); then\n    min=${arr[1]}\n\
    \    min2=${arr[0]}\n  fi\n\n  for (( i = 2; i < n; i++ )); do\n    if (( arr[i]\
    \ < min )); then\n      min2=min\n      min=${arr[i]}\n    elif (( arr[i] < min2\
    \ )); then\n      min2=${arr[i]}\n    fi\n  done\n\n  echo \"$min2\"", "  local\
    \ list=$1\n  local smallest=$(echo \"$list\" | head -n 1)\n  local next_smallest=$(echo\
    \ \"$list\" | head -n 2 | tail -n 1)\n  for num in $list; do\n    if [ $num -lt\
    \ $smallest ]; then\n      next_smallest=$smallest\n      smallest=$num\n    elif\
    \ [ $num -lt $next_smallest ] && [ $num -ne $smallest ]; then\n      next_smallest=$num\n\
    \    fi\n  done\n  if [ $next_smallest -eq $smallest ]; then\n    echo \"None\"\
    \n  else\n    echo $next_smallest\n  fi", "  if [ $# -eq 0 ]; then\n    echo \"\
    None\"\n    return\n  fi\n  local smallest=$1\n  local second_smallest=$1\n  shift\n\
    \  for i in $@; do\n    if [ $i -lt $smallest ]; then\n      second_smallest=$smallest\n\
    \      smallest=$i\n    elif [ $i -lt $second_smallest ]; then\n      second_smallest=$i\n\
    \    fi\n  done\n  if [ $smallest -eq $second_smallest ]; then\n    echo \"None\"\
    \n  else\n    echo $second_smallest\n  fi", "  local -a arr=($1)\n  local i\n\
    \  local min=${arr[0]}\n  local min2=${arr[0]}\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -lt $min ]]; then\n      min2=$min\n      min=$i\n    elif [[ $i\
    \ -lt $min2 ]]; then\n      min2=$i\n    fi\n  done\n  if [[ $min2 -eq $min ]];\
    \ then\n    echo \"None\"\n  else\n    echo $min2\n  fi", "    local -a arr\n\
    \    local i\n    local min\n    local second_min\n    local n\n    arr=($1)\n\
    \    n=${#arr[@]}\n    if [[ $n -lt 2 ]]; then\n        echo \"None\"\n      \
    \  return\n    fi\n    min=${arr[0]}\n    second_min=${arr[1]}\n    if [[ $second_min\
    \ -lt $min ]]; then\n        min=$second_min\n        second_min=${arr[0]}\n \
    \   fi\n    for ((i=2; i<n; i++)); do\n        if [[ ${arr[i]} -lt $min ]]; then\n\
    \            second_min=$min\n            min=${arr[i]}\n        elif [[ ${arr[i]}\
    \ -lt $second_min ]]; then\n            second_min=${arr[i]}\n        fi\n   \
    \ done\n    echo $second_min", "  local -a arr=($1)\n  local min=${arr[0]}\n \
    \ local min2=${arr[0]}\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt $min ]];\
    \ then\n      min2=$min\n      min=$i\n    elif [[ $i -lt $min2 ]]; then\n   \
    \   min2=$i\n    fi\n  done\n  if [[ $min2 -eq $min ]]; then\n    echo \"None\"\
    \n  else\n    echo $min2\n  fi", "  if [ -z \"$1\" ]; then\n    echo \"None\"\n\
    \    return\n  fi\n  local -a arr=($1)\n  local min=${arr[0]}\n  local min2=${arr[0]}\n\
    \  for i in \"${arr[@]}\"; do\n    if [ \"$i\" -lt \"$min\" ]; then\n      min2=$min\n\
    \      min=$i\n    elif [ \"$i\" -lt \"$min2\" ]; then\n      min2=$i\n    fi\n\
    \  done\n  if [ \"$min\" -eq \"$min2\" ]; then\n    echo \"None\"\n  else\n  \
    \  echo \"$min2\"\n  fi", "    local -a nums=($1)\n    local -a sorted=($(printf\
    \ \"%s\\n\" \"${nums[@]}\" | sort -n))\n    local -a uniq=($(printf \"%s\\n\"\
    \ \"${sorted[@]}\" | uniq))\n    if [[ ${#uniq[@]} -lt 2 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"${uniq[1]}\"\n    fi", "    local -a arr=($1)\n\
    \    local -a sorted=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort -n))\n    local\
    \ -i len=${#sorted[@]}\n    local -i i=0\n    local -i min=${sorted[0]}\n    local\
    \ -i second_min=${sorted[1]}\n    while (( i < len )); do\n        if (( sorted[i]\
    \ > min )); then\n            second_min=${sorted[i]}\n            break\n   \
    \     fi\n        (( i++ ))\n    done\n    if (( second_min == min )); then\n\
    \        echo \"None\"\n    else\n        echo \"$second_min\"\n    fi"]
stop_tokens:
- "\n}"

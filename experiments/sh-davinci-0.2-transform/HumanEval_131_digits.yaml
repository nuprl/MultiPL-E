name: HumanEval_131_digits
language: sh
prompt: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
  \ digits.\n# Return 0 if all digits are even.\n# For example:\n# >>> $(digits \"\
  1\")\n# \"1\"\n# >>> $(digits \"4\")\n# \"0\"\n# >>> $(digits \"235\")\n# \"15\"\
  \n#\n# $1 is an integer\ndigits() {\n"
tests: "}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"\
  120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"\
  98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
  \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
completions: ["    local -i n=$1\n    local -i prod=1\n    local -i digit=0\n    while\
    \ (( n > 0 )); do\n        digit=$(( n % 10 ))\n        (( digit % 2 == 1 )) &&\
    \ (( prod *= digit ))\n        n=$(( n / 10 ))\n    done\n    echo $prod", " \
    \ local result=1\n  local digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      (( result *= digit ))\n    fi\n  done\n\
    \  echo $result", "  local -i sum=1\n  local -i digit\n  local -i n=$1\n  while\
    \ (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) && (( sum\
    \ *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $sum", "    if [[ $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo $1 | sed 's/[02468]//g' | tr -d '\\n'\n    else\n   \
    \     echo \"Error: argument must be a positive integer\"\n    fi", "  local n=$1\n\
    \  local product=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n  \
    \  if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n   \
    \ fi\n    n=$((n / 10))\n  done\n  echo $product", "  local -i n=$1\n  local -i\
    \ product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n\
    \    (( digit % 2 == 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n\
    \  echo $product", "  local -i n=$1\n  local -i product=1\n  local -i digit\n\
    \  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2 != 0 ));\
    \ then\n      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
    \  echo $product", "  local n=$1\n  local product=1\n  local digit\n  while [\
    \ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local n=$1\n  local result=1\n  local digit\n  while [ $n -gt\
    \ 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n    \
    \  result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result",
  "  local n=$1\n  local result=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n  local sum=1\n\
    \  local digit\n  while [[ $n -gt 0 ]]; do\n    digit=$((n % 10))\n    if [[ $((digit\
    \ % 2)) -eq 1 ]]; then\n      sum=$((sum * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $sum", "  local -i n=$1\n  local -i product=1\n  while (( n >\
    \ 0 )); do\n    local -i digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) && (( product\
    \ *= digit ))\n    (( n /= 10 ))\n  done\n  echo $product", "    local -i sum=1\n\
    \    for i in $(echo $1 | grep -o .); do\n        if [[ $((i % 2)) -eq 1 ]]; then\n\
    \            ((sum *= i))\n        fi\n    done\n    echo $sum", "    local -i\
    \ sum=1\n    for (( i=0; i<${#1}; i++ )); do\n        local -i digit=${1:i:1}\n\
    \        (( digit % 2 )) && (( sum *= digit ))\n    done\n    echo $sum", "  local\
    \ n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local -i n=0\n  for ((\
    \ i=0; i<${#1}; i++ )); do\n    (( ${1:$i:1} % 2 )) && (( n *= ${1:$i:1} ))\n\
    \  done\n  echo \"$n\"", "  local n=$1\n  local product=1\n  local digit\n  while\
    \ [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local -i n=$1\n  local -i product=1\n  local -i digit\n  while\
    \ (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 1 )); then\n\
    \      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n \
    \ echo $product", "    local n=$1\n    local prod=1\n    while [ $n -gt 0 ]; do\n\
    \        local digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n\
    \            prod=$((prod * digit))\n        fi\n        n=$((n / 10))\n    done\n\
    \    echo $prod", "  local -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    local\
    \ -i digit=${1:i:1}\n    (( digit % 2 == 1 )) && (( sum *= digit ))\n  done\n\
    \  echo $sum", "  local result=1\n  local number=$1\n  while [ $number -gt 0 ];\
    \ do\n    local digit=$((number % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      result=$((result * digit))\n    fi\n    number=$((number / 10))\n  done\n\
    \  echo $result", "  local -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    local\
    \ -i digit=${1:i:1}\n    (( digit % 2 )) && (( sum *= digit ))\n  done\n  echo\
    \ $sum", "  local result=1\n  for (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n\
    \    if (( digit % 2 )); then\n      (( result *= digit ))\n    fi\n  done\n \
    \ echo $result", "  local n=$1\n  local product=1\n  local digit\n  while (( n\
    \ > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2 != 0 )); then\n   \
    \   product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo\
    \ $product", "  local -i n=$1\n  local -i product=1\n  local -i digit\n  while\
    \ (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2 )); then\n   \
    \   (( product *= digit ))\n    fi\n    (( n /= 10 ))\n  done\n  echo $product",
  "    local n=$1\n    local product=1\n    while [ $n -gt 0 ]; do\n        local\
    \ digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $product",
  "  local -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n\
    \    (( digit % 2 == 1 )) && (( sum *= digit ))\n  done\n  echo $sum", "  local\
    \ n=$1\n  local result=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $result", "    local n=$1\n    local\
    \ product=1\n    local digit\n    while [ $n -gt 0 ]; do\n        digit=$((n %\
    \ 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $product",
  "  local n=$1\n  local prod=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      prod=$((prod * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $prod", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local result=1\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    local digit=${1:$i:1}\n    if (( digit % 2 == 1 )); then\n \
    \     result=$(( result * digit ))\n    fi\n  done\n  echo $result", "  local\
    \ -i n=$1\n  local -i product=1\n  local -i digit\n  while (( n > 0 )); do\n \
    \   digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) && (( product *= digit ))\n\
    \    n=$(( n / 10 ))\n  done\n  echo $product", "  local -i n=$1\n  local -i product=1\n\
    \  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit\
    \ % 2 == 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product",
  "    local n=$1\n    local result=1\n    while [ $n -gt 0 ]; do\n        local digit=$((n\
    \ % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            result=$((result\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $result", " \
    \ local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n   \
    \ digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local result=1\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local digit=\"${1:$i:1}\"\n    if [[ $digit\
    \ -eq 0 ]]; then\n      continue\n    elif [[ $(( digit % 2 )) -eq 1 ]]; then\n\
    \      result=$(( result * digit ))\n    fi\n  done\n  echo $result", "  local\
    \ n=$1\n  local result=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n\
    \    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n   \
    \ fi\n    n=$((n / 10))\n  done\n  echo $result", "  local -i n=$1\n  local -i\
    \ product=1\n  local -i digit=0\n  while ((n > 0)); do\n    digit=$((n % 10))\n\
    \    ((digit % 2 == 1)) && ((product *= digit))\n    n=$((n / 10))\n  done\n \
    \ echo $product", "  local -i sum=1\n  local -i i=0\n  local -i len=${#1}\n  local\
    \ -i digit=0\n  while [ $i -lt $len ]; do\n    digit=${1:$i:1}\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      sum=$((sum * digit))\n    fi\n    i=$((i + 1))\n\
    \  done\n  echo $sum", "  local result=1\n  local digit\n  for digit in $(echo\
    \ \"$1\" | grep -o .); do\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result\
    \ * digit))\n    fi\n  done\n  echo \"$result\"", "  local -i n=$1\n  local -i\
    \ product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=n%10\n    if\
    \ (( digit % 2 == 1 )); then\n      (( product *= digit ))\n    fi\n    (( n /=\
    \ 10 ))\n  done\n  echo $product", "  local -i sum=1\n  for ((i=0; i<${#1}; i++));\
    \ do\n    local -i digit=${1:i:1}\n    (( digit % 2 == 1 )) && (( sum *= digit\
    \ ))\n  done\n  echo $sum", "    local n=$1\n    local product=1\n    while [\
    \ $n -gt 0 ]; do\n        local digit=$((n % 10))\n        if [ $((digit % 2))\
    \ -ne 0 ]; then\n            product=$((product * digit))\n        fi\n      \
    \  n=$((n / 10))\n    done\n    echo $product", "  local n=$1\n  local result=1\n\
    \  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2))\
    \ -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $result", "  local -i n=$1\n  local -i product=1\n  local -i digit\n\
    \  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 1 ));\
    \ then\n      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
    \  echo $product", "  local n=$1\n  local product=1\n  local digit\n  while [\
    \ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local -i product=1\n  for ((i=0; i<${#1}; i++)); do\n    local\
    \ -i digit=${1:i:1}\n    if ((digit % 2 == 1)); then\n      ((product *= digit))\n\
    \    fi\n  done\n  echo $product", "  local -i n=\"$1\"\n  local -i product=1\n\
    \  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit\
    \ % 2 == 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo \"\
    $product\"", "  local -i sum=1\n  local -i n=$1\n  while [ $n -gt 0 ]; do\n  \
    \  local -i digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n      sum=$((sum\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $sum", "    local n=$1\n\
    \    local product=1\n    local digit\n    while [ $n -gt 0 ]; do\n        digit=$((n\
    \ % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $product",
  "  local n=$1\n  local product=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "    local n=$1\n    local\
    \ product=1\n    while [ $n -gt 0 ]; do\n        local digit=$((n % 10))\n   \
    \     if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product * digit))\n\
    \        fi\n        n=$((n / 10))\n    done\n    echo $product", "  local -i\
    \ n=$1\n  local -i product=1\n  while (( n > 0 )); do\n    local -i digit=$((\
    \ n % 10 ))\n    if (( digit % 2 != 0 )); then\n      product=$(( product * digit\
    \ ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product", "  local result=1\n\
    \  local digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n    if\
    \ [[ $digit -eq 0 ]]; then\n      continue\n    elif [[ $(( digit % 2 )) -eq 1\
    \ ]]; then\n      result=$(( result * digit ))\n    fi\n  done\n  echo $result",
  "  local -i n=$1\n  local -i product=1\n  local -i digit\n  while (( n > 0 )); do\n\
    \    digit=$(( n % 10 ))\n    (( digit % 2 )) && (( product *= digit ))\n    n=$((\
    \ n / 10 ))\n  done\n  echo \"$product\"", "    local n=$1\n    local product=1\n\
    \    local digit\n    while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n    \
    \    if [ $((digit % 2)) -eq 1 ]; then\n            product=$((product * digit))\n\
    \        fi\n        n=$((n / 10))\n    done\n    echo $product", "    local n=$1\n\
    \    local product=1\n    local digit\n    while [ $n -gt 0 ]; do\n        digit=$((n\
    \ % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $product",
  "  local n=$1\n  local result=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local -i sum=1\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n    (( digit % 2 ))\
    \ && (( sum *= digit ))\n  done\n  echo \"$sum\"", "    local -i n=$1\n    local\
    \ -i product=1\n    local -i digit\n    while (( n > 0 )); do\n        digit=$((\
    \ n % 10 ))\n        (( digit % 2 )) && (( product *= digit ))\n        n=$((\
    \ n / 10 ))\n    done\n    echo $product", "  local -i n=$1\n  local -i product=1\n\
    \  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit\
    \ % 2 == 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product",
  "  local -i n=$1\n  local -i r=0\n  local -i d=0\n  local -i p=1\n  while (( n >\
    \ 0 )); do\n    d=$(( n % 10 ))\n    if (( d % 2 )); then\n      r=$(( r + p *\
    \ d ))\n      p=$(( p * 10 ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $r",
  "  local -i n=$1\n  local -i product=1\n  local -i digit\n  while (( n > 0 )); do\n\
    \    digit=$(( n % 10 ))\n    if (( digit % 2 == 1 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product", " \
    \ local -i n=$1\n  local -i product=1\n  local -i digit\n  while (( n > 0 ));\
    \ do\n    digit=$(( n % 10 ))\n    (( digit % 2 )) && (( product *= digit ))\n\
    \    n=$(( n / 10 ))\n  done\n  echo $product", "    local n=$1\n    local result=1\n\
    \    while [ $n -gt 0 ]; do\n        local digit=$((n % 10))\n        if [ $((digit\
    \ % 2)) -ne 0 ]; then\n            result=$((result * digit))\n        fi\n  \
    \      n=$((n / 10))\n    done\n    echo $result", "  local -i n=$1\n  local -i\
    \ product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n\
    \    if (( digit % 2 )); then\n      (( product *= digit ))\n    fi\n    (( n\
    \ /= 10 ))\n  done\n  echo $product", "    local result=1\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local digit=${1:$i:1}\n        if [[ $digit -eq 0 ]]; then\n\
    \            continue\n        elif [[ $(( digit % 2 )) -eq 1 ]]; then\n     \
    \       result=$(( result * digit ))\n        fi\n    done\n    echo $result",
  "  local result=1\n  for (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n\
    \    if (( digit % 2 != 0 )); then\n      (( result *= digit ))\n    fi\n  done\n\
    \  echo \"$result\"", "    local -i sum=1\n    for (( i=0; i<${#1}; i++ )); do\n\
    \        local -i digit=${1:i:1}\n        (( digit % 2 == 1 )) && (( sum *= digit\
    \ ))\n    done\n    echo $sum", "  local n=$1\n  local product=1\n  local digit\n\
    \  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne\
    \ 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n \
    \ done\n  echo $product", "  local -i sum=1\n  for ((i=0; i<${#1}; i++)); do\n\
    \    local -i digit=${1:i:1}\n    (( digit % 2 == 1 )) && (( sum *= digit ))\n\
    \  done\n  echo \"$sum\"", "  local n=$1\n  local result=1\n  local digit\n  while\
    \ [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result",
  "  local n=$1\n  local result=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n  local result=1\n\
    \  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2))\
    \ -eq 1 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $result", "  local -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n\
    \    local -i digit=${1:i:1}\n    (( digit % 2 == 1 )) && (( sum *= digit ))\n\
    \  done\n  echo $sum", "  local n=\"$1\"\n  local product=1\n  local digit\n \
    \ while [ \"$n\" -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne\
    \ 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n \
    \ done\n  echo \"$product\"", "  local sum=1\n  for (( i=0; i<${#1}; i++ )); do\n\
    \    local digit=${1:$i:1}\n    if (( digit % 2 == 1 )); then\n      (( sum *=\
    \ digit ))\n    fi\n  done\n  echo $sum", "  local -i n=$1\n  local -i product=1\n\
    \  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit\
    \ % 2 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product",
  "  local number=$1\n  local result=1\n  local digit\n  for ((i=0; i<${#number};\
    \ i++)); do\n    digit=${number:$i:1}\n    if (( digit % 2 == 1 )); then\n   \
    \   result=$(( result * digit ))\n    fi\n  done\n  echo $result", "    local\
    \ -i n=$1\n    local -i prod=1\n    local -i digit\n    while (( n > 0 )); do\n\
    \        digit=$(( n % 10 ))\n        if (( digit % 2 == 1 )); then\n        \
    \    prod=$(( prod * digit ))\n        fi\n        n=$(( n / 10 ))\n    done\n\
    \    echo $prod", "  local -i n=$1\n  local -i product=1\n  local -i digit\n \
    \ while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) &&\
    \ (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product", "  local\
    \ -i n=$1\n  local -i sum=0\n  local -i digit=0\n  local -i product=1\n  while\
    \ (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 1 )); then\n\
    \      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n \
    \ echo $product", "    local n=$1\n    local sum=1\n    while [ $n -gt 0 ]; do\n\
    \        local digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n\
    \            sum=$((sum * digit))\n        fi\n        n=$((n / 10))\n    done\n\
    \    echo $sum", "  local sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    (( ${1:$i:1}\
    \ % 2 )) && (( sum *= ${1:$i:1} ))\n  done\n  echo $sum", "  local n=$1\n  local\
    \ product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n\
    \    if [ $((digit % 2)) -eq 1 ]; then\n      product=$((product * digit))\n \
    \   fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local result=1\n\
    \  while [ $n -gt 0 ]; do\n    local digit=$(( n % 10 ))\n    if [ $(( digit %\
    \ 2 )) -ne 0 ]; then\n      result=$(( result * digit ))\n    fi\n    n=$(( n\
    \ / 10 ))\n  done\n  echo $result", "  local n=$1\n  local product=1\n  while\
    \ [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0\
    \ ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $product", "  local n=$1\n  local r=1\n  local d\n  while [ $n -gt 0 ];\
    \ do\n    d=$((n % 10))\n    if [ $((d % 2)) -ne 0 ]; then\n      r=$((r * d))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $r", "    local -i n=$1\n    local\
    \ -i product=1\n    local -i digit\n    while (( n > 0 )); do\n        digit=$((\
    \ n % 10 ))\n        if (( digit % 2 == 1 )); then\n            product=$(( product\
    \ * digit ))\n        fi\n        n=$(( n / 10 ))\n    done\n    echo $product",
  "    local -i sum=1\n    for ((i=0; i<${#1}; i++)); do\n        local -i digit=${1:i:1}\n\
    \        ((digit % 2 == 1)) && ((sum *= digit))\n    done\n    echo $sum", " \
    \ local n=$1\n  local result=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n  local result=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $result", "  local -i n=\"$1\"\n  local -i product=1\n\
    \  local -i digit\n  while (( n > 0 )); do\n    digit=\"$(( n % 10 ))\"\n    if\
    \ (( digit % 2 == 1 )); then\n      (( product *= digit ))\n    fi\n    (( n /=\
    \ 10 ))\n  done\n  echo \"$product\"", "  local n=$1\n  local product=1\n  while\
    \ [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0\
    \ ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $product", "  local -i n=$1\n  local -i product=1\n  local -i digit\n\
    \  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2 )) && (( product\
    \ *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $product", "  local -i n=$1\n\
    \  local -i product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$((\
    \ n % 10 ))\n    (( digit % 2 == 1 )) && (( product *= digit ))\n    n=$(( n /\
    \ 10 ))\n  done\n  echo $product", "  local n=$1\n  local product=1\n  for ((i=0;\
    \ i<${#n}; i++)); do\n    local digit=${n:$i:1}\n    if ((digit % 2 == 1)); then\n\
    \      product=$((product * digit))\n    fi\n  done\n  echo $product", "    local\
    \ n=$1\n    local product=1\n    local digit\n    while [ $n -gt 0 ]; do\n   \
    \     digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n         \
    \   product=$((product * digit))\n        fi\n        n=$((n / 10))\n    done\n\
    \    echo $product", "    local -i n=$1\n    local -i product=1\n    local -i\
    \ digit\n    while (( n > 0 )); do\n        digit=$(( n % 10 ))\n        (( digit\
    \ % 2 )) && (( product *= digit ))\n        n=$(( n / 10 ))\n    done\n    echo\
    \ \"$product\"", "    local n=$1\n    local result=1\n    local digit\n    while\
    \ [ $n -gt 0 ]; do\n        digit=$((n % 10))\n        if [ $((digit % 2)) -ne\
    \ 0 ]; then\n            result=$((result * digit))\n        fi\n        n=$((n\
    \ / 10))\n    done\n    echo $result", "  local n=$1\n  local result=1\n  local\
    \ digit\n  while [ $n -gt 0 ]; do\n    digit=$(( n % 10 ))\n    if [ $(( digit\
    \ % 2 )) -ne 0 ]; then\n      result=$(( result * digit ))\n    fi\n    n=$((\
    \ n / 10 ))\n  done\n  echo $result", "  local n=$1\n  local result=1\n  local\
    \ digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit %\
    \ 2)) -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $result", "  local -i n=$1\n  local -i prod=1\n  local -i digit\n\
    \  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2 )) && (( prod\
    \ *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $prod", "  local result=1\n\
    \  local digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n    if\
    \ [[ $digit -gt 0 ]] && [[ $(( digit % 2 )) -ne 0 ]]; then\n      result=$(( result\
    \ * digit ))\n    fi\n  done\n  echo $result", "    local result=1\n    for ((\
    \ i=0; i<${#1}; i++ )); do\n        local digit=${1:$i:1}\n        if (( digit\
    \ % 2 == 1 )); then\n            result=$(( result * digit ))\n        fi\n  \
    \  done\n    echo $result", "  local -i n=$1\n  local -i product=1\n  local -i\
    \ digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2\
    \ != 0 )); then\n      product=$(( product * digit ))\n    fi\n    n=$(( n / 10\
    \ ))\n  done\n  echo $product", "  local -i n=$1\n  local -i product=1\n  local\
    \ -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit\
    \ % 2 == 1 )); then\n      product=$(( product * digit ))\n    fi\n    n=$(( n\
    \ / 10 ))\n  done\n  echo $product", "  local -i sum=1\n  local -i num=$1\n  local\
    \ -i digit\n  while (( num > 0 )); do\n    digit=$(( num % 10 ))\n    (( digit\
    \ % 2 )) && (( sum *= digit ))\n    num=$(( num / 10 ))\n  done\n  echo $sum",
  "  local n=$1\n  local sum=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      sum=$((sum * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $sum", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [[ $n -gt 0 ]]; do\n    digit=$((n % 10))\n    if [[ $((digit\
    \ % 2)) -eq 1 ]]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local n=\"$1\"\n  local product=1\n  local\
    \ digit\n  while [ \"$n\" -gt 0 ]; do\n    digit=$(( n % 10 ))\n    if [ $(( digit\
    \ % 2 )) -ne 0 ]; then\n      product=$(( product * digit ))\n    fi\n    n=$((\
    \ n / 10 ))\n  done\n  echo \"$product\"", "    local -i sum=1\n    local -i digit=0\n\
    \    for ((i=0; i<${#1}; i++)); do\n        digit=${1:$i:1}\n        (( digit\
    \ % 2 == 1 )) && (( sum *= digit ))\n    done\n    echo $sum", "    local n=$1\n\
    \    local sum=1\n    local digit\n    while [ $n -gt 0 ]; do\n        digit=$((n\
    \ % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            sum=$((sum *\
    \ digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $sum", "  local\
    \ -i n=$1\n  local -i r=0\n  local -i d=0\n  while (( n > 0 )); do\n    d=$((\
    \ n % 10 ))\n    if (( d % 2 == 1 )); then\n      r=$(( r * 10 + d ))\n    fi\n\
    \    n=$(( n / 10 ))\n  done\n  echo $r", "  local -i sum=1\n  local -i digit\n\
    \  for ((i=0; i<${#1}; i++)); do\n    digit=${1:i:1}\n    if ((digit % 2 == 1));\
    \ then\n      ((sum *= digit))\n    fi\n  done\n  echo \"$sum\"", "  local result=1\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n    if [[ $digit\
    \ -ne 0 ]] && [[ $(( digit % 2 )) -ne 0 ]]; then\n      result=$(( result * digit\
    \ ))\n    fi\n  done\n  echo $result", "  local n=$1\n  local product=1\n  local\
    \ digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit %\
    \ 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $product", "  local -i n=$1\n  local -i product=1\n  while\
    \ (( n > 0 )); do\n    local -i digit=$(( n % 10 ))\n    if (( digit % 2 == 1\
    \ )); then\n      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n\
    \  done\n  echo $product", "    local n=$1\n    local product=1\n    while [ $n\
    \ -gt 0 ]; do\n        local digit=$((n % 10))\n        if [ $((digit % 2)) -eq\
    \ 1 ]; then\n            product=$((product * digit))\n        fi\n        n=$((n\
    \ / 10))\n    done\n    echo $product", "  local n=$1\n  local result=1\n  while\
    \ [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0\
    \ ]; then\n      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n\
    \  echo $result", "  local result=1\n  local digit\n  for (( i=0; i<${#1}; i++\
    \ )); do\n    digit=${1:$i:1}\n    if [[ $digit -gt 0 ]] && [[ $(( digit % 2 ))\
    \ -eq 1 ]]; then\n      result=$(( result * digit ))\n    fi\n  done\n  echo $result",
  "    local n=$1\n    local product=1\n    local digit\n    while [ $n -gt 0 ]; do\n\
    \        digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n      \
    \      product=$((product * digit))\n        fi\n        n=$((n / 10))\n    done\n\
    \    echo $product", "  local n=$1\n  local product=1\n  local digit\n  while\
    \ [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    local -i\
    \ digit=${1:i:1}\n    (( digit % 2 == 1 )) && (( sum *= digit ))\n  done\n  echo\
    \ $sum", "  local n=$1\n  local result=1\n  local digit\n  while [[ $n -gt 0 ]];\
    \ do\n    digit=$(( n % 10 ))\n    if [[ $(( digit % 2 )) -eq 1 ]]; then\n   \
    \   result=$(( result * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo\
    \ $result", "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt\
    \ 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n    \
    \  product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product",
  "  local n=$1\n  local product=1\n  while [ $n -gt 0 ]; do\n    local digit=$((\
    \ n % 10 ))\n    if [ $(( digit % 2 )) -ne 0 ]; then\n      product=$(( product\
    \ * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product", "  local\
    \ -i sum=1\n  local -i digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:i:1}\n\
    \    (( digit % 2 )) && (( sum *= digit ))\n  done\n  echo $sum", "  local -i\
    \ n=$1\n  local -i product=1\n  local -i digit\n  while ((n > 0)); do\n    digit=$((n\
    \ % 10))\n    if ((digit % 2 == 1)); then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "    local n=$1\n    local\
    \ result=1\n    local digit\n    while [ $n -gt 0 ]; do\n        digit=$((n %\
    \ 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            result=$((result\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $result", " \
    \ local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n   \
    \ digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local -i\
    \ n=0\n  for ((i=0; i<${#1}; i++)); do\n    (( ${1:$i:1} % 2 )) && (( n *= ${1:$i:1}\
    \ ))\n  done\n  echo $n", "  local -i n=$1\n  local -i prod=1\n  local -i digit\n\
    \  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) &&\
    \ (( prod *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $prod", "  local -i\
    \ n=$1\n  local -i product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=n%10\n\
    \    if (( digit % 2 != 0 )); then\n      product *= digit\n    fi\n    n /= 10\n\
    \  done\n  echo \"$product\"", "  local -i n=$1\n  local -i product=1\n  local\
    \ -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit\
    \ % 2 )); then\n      (( product *= digit ))\n    fi\n    (( n /= 10 ))\n  done\n\
    \  echo $product", "  local -i product=1\n  local -i i=0\n  local -i len=${#1}\n\
    \  while (( i < len )); do\n    local -i digit=${1:i:1}\n    (( digit % 2 )) &&\
    \ (( product *= digit ))\n    (( i++ ))\n  done\n  echo \"$product\"", "  local\
    \ n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local result=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      result=$((result * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $result", "  local n=\"$1\"\n  local p=1\n  local d\n \
    \ while [ \"$n\" -gt 0 ]; do\n    d=$((n % 10))\n    if [ \"$d\" -gt 0 ] && [\
    \ \"$((d % 2))\" -ne 0 ]; then\n      p=$((p * d))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo \"$p\"", "    local n=$1\n    local product=1\n    local digit\n\
    \    while [ $n -gt 0 ]; do\n        digit=$((n % 10))\n        if [ $((digit\
    \ % 2)) -ne 0 ]; then\n            product=$((product * digit))\n        fi\n\
    \        n=$((n / 10))\n    done\n    echo $product", "  local -i n=$1\n  local\
    \ -i product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10\
    \ ))\n    if (( digit % 2 != 0 )); then\n      product=$(( product * digit ))\n\
    \    fi\n    n=$(( n / 10 ))\n  done\n  echo $product", "  local n=$1\n  local\
    \ result=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$(( n % 10 ))\n\
    \    n=$(( n / 10 ))\n    if [ $(( digit % 2 )) -eq 1 ]; then\n      result=$((\
    \ result * digit ))\n    fi\n  done\n  echo $result", "  local result=1\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    local digit=\"${1:$i:1}\"\n    if (( digit\
    \ % 2 )); then\n      result=$(( result * digit ))\n    fi\n  done\n  echo \"\
    $result\"", "  local -i n=$1\n  local -i sum=0\n  local -i digit\n  while (( n\
    \ > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) && (( sum += digit\
    \ ))\n    n=$(( n / 10 ))\n  done\n  echo $sum", "    local -i sum=1\n    for\
    \ (( i=0; i<${#1}; i++ )); do\n        local -i digit=${1:i:1}\n        (( digit\
    \ % 2 )) && (( sum *= digit ))\n    done\n    echo \"$sum\"", "  local result=1\n\
    \  local digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n    if\
    \ (( digit % 2 == 1 )); then\n      (( result *= digit ))\n    fi\n  done\n  echo\
    \ $result", "  local n=\"$1\"\n  local product=1\n  local digit\n  for ((i=0;\
    \ i<${#n}; i++)); do\n    digit=\"${n:$i:1}\"\n    if [[ $((digit % 2)) -eq 1\
    \ ]]; then\n      product=$((product * digit))\n    fi\n  done\n  echo \"$product\"",
  "  local -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n\
    \    (( digit % 2 == 1 )) && (( sum *= digit ))\n  done\n  echo $sum", "  local\
    \ -i n=$1\n  local -i product=1\n  local -i digit\n  while (( n > 0 )); do\n \
    \   digit=$(( n % 10 ))\n    if (( digit % 2 == 1 )); then\n      product=$((\
    \ product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product", " \
    \ local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n   \
    \ digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $product", "    local n=$1\n\
    \    local product=1\n    while [ $n -gt 0 ]; do\n        local digit=$((n % 10))\n\
    \        if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product * digit))\n\
    \        fi\n        n=$((n / 10))\n    done\n    echo $product", "    local n=$1\n\
    \    local product=1\n    local digit\n    while [ $n -gt 0 ]; do\n        digit=$((n\
    \ % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product\
    \ * digit))\n        fi\n        n=$((n / 10))\n    done\n    echo $product",
  "  local n=\"$1\"\n  local sum=1\n  local digit\n  while [ \"$n\" -gt 0 ]; do\n\
    \    digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n      sum=$((sum\
    \ * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo \"$sum\"", "  local -i\
    \ sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n    ((\
    \ digit % 2 == 1 )) && (( sum *= digit ))\n  done\n  echo $sum", "    local -i\
    \ sum=1\n    for (( i=0; i<${#1}; i++ )); do\n        local -i digit=${1:i:1}\n\
    \        (( digit % 2 == 1 )) && (( sum *= digit ))\n    done\n    echo $sum",
  "  local -i n=$1\n  local -i prod=1\n  local -i digit\n  while (( n > 0 )); do\n\
    \    digit=$(( n % 10 ))\n    if (( digit % 2 == 1 )); then\n      prod=$(( prod\
    \ * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $prod", "  local result=1\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local digit=\"${1:$i:1}\"\n    if [[ $digit\
    \ -eq 0 ]]; then\n      continue\n    elif [[ $(( digit % 2 )) -eq 1 ]]; then\n\
    \      result=$(( result * digit ))\n    fi\n  done\n  echo $result", "  local\
    \ n=$1\n  local result=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n\
    \    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n   \
    \ fi\n    n=$((n / 10))\n  done\n  echo $result", "  local -i sum=1\n  for ((\
    \ i=0; i<${#1}; i++ )); do\n    (( ${1:$i:1} % 2 )) && (( sum *= ${1:$i:1} ))\n\
    \  done\n  echo $sum", "    local -i n=$1\n    local -i product=1\n    local -i\
    \ digit\n    while (( n > 0 )); do\n        digit=$(( n % 10 ))\n        if ((\
    \ digit % 2 == 1 )); then\n            product=$(( product * digit ))\n      \
    \  fi\n        n=$(( n / 10 ))\n    done\n    echo $product", "  local -i n=$1\n\
    \  local -i product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$((\
    \ n % 10 ))\n    if (( digit % 2 == 1 )); then\n      product=$(( product * digit\
    \ ))\n    fi\n    n=$(( n / 10 ))\n  done\n  echo $product", "  local -i sum=1\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    if [[ \"${1:$i:1}\" -eq 0 ]]; then\n \
    \     continue\n    elif [[ \"${1:$i:1}\" -eq 2 ]]; then\n      sum=0\n      break\n\
    \    elif [[ \"${1:$i:1}\" -eq 4 ]]; then\n      sum=0\n      break\n    elif\
    \ [[ \"${1:$i:1}\" -eq 6 ]]; then\n      sum=0\n      break\n    elif [[ \"${1:$i:1}\"\
    \ -eq 8 ]]; then\n      sum=0\n      break\n    else\n      sum=$(( sum * ${1:$i:1}\
    \ ))\n    fi\n  done\n  echo \"$sum\"", "  local result=1\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    local digit=${1:$i:1}\n    if [[ $digit -eq 0 ]]; then\n   \
    \   continue\n    elif [[ $(( digit % 2 )) -eq 1 ]]; then\n      result=$(( result\
    \ * digit ))\n    fi\n  done\n  echo $result", "  local -i sum=1\n  for (( i=0;\
    \ i<${#1}; i++ )); do\n    local -i digit=${1:i:1}\n    (( digit % 2 == 1 )) &&\
    \ (( sum *= digit ))\n  done\n  echo $sum", "  local -i product=1\n  local -i\
    \ digit\n  local -i i\n  for ((i=0; i<${#1}; i++)); do\n    digit=${1:i:1}\n \
    \   if ((digit % 2 == 1)); then\n      ((product *= digit))\n    fi\n  done\n\
    \  echo $product", "  local n=$1\n  local result=1\n  local digit\n  while [ $n\
    \ -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result",
  "  local n=$1\n  local result=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      result=$(( result * digit ))\n    fi\n\
    \  done\n  echo $result", "    local sum=1\n    for (( i=0; i<${#1}; i++ )); do\n\
    \        local digit=${1:$i:1}\n        if [[ $digit =~ ^[13579]$ ]]; then\n \
    \           (( sum *= digit ))\n        fi\n    done\n    echo $sum", "  local\
    \ n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local -i sum=1\n  local -i digit\n  local\
    \ -i number=$1\n  while (( number > 0 )); do\n    digit=$(( number % 10 ))\n \
    \   (( digit % 2 == 1 )) && (( sum *= digit ))\n    number=$(( number / 10 ))\n\
    \  done\n  echo $sum", "  local n=$1\n  local sum=1\n  local digit\n  while [\
    \ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      sum=$((sum * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $sum",
  "  local n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local -i sum=1\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    (( ${1:$i:1} % 2 )) && (( sum *= ${1:$i:1}\
    \ ))\n  done\n  echo $sum", "  local n=$1\n  local product=1\n  while [ $n -gt\
    \ 0 ]; do\n    local digit=$(( n % 10 ))\n    if [ $(( digit % 2 )) -ne 0 ]; then\n\
    \      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n \
    \ echo $product", "  local -i product=1\n  for (( i=0; i<${#1}; i++ )); do\n \
    \   local -i digit=${1:i:1}\n    if (( digit % 2 )); then\n      (( product *=\
    \ digit ))\n    fi\n  done\n  echo $product", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local -i sum=1\n  local -i digit\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    digit=${1:i:1}\n    (( digit % 2 == 1 )) &&\
    \ (( sum *= digit ))\n  done\n  echo \"$sum\"", "  local num=$1\n  local sum=1\n\
    \  local digit\n  while [ $num -gt 0 ]; do\n    digit=$(( num % 10 ))\n    if\
    \ [ $(( digit % 2 )) -ne 0 ]; then\n      sum=$(( sum * digit ))\n    fi\n   \
    \ num=$(( num / 10 ))\n  done\n  echo $sum", "    local -i n=$1\n    local -i\
    \ product=1\n    local -i digit\n    while (( n > 0 )); do\n        digit=$((\
    \ n % 10 ))\n        if (( digit % 2 == 1 )); then\n            product=$(( product\
    \ * digit ))\n        fi\n        n=$(( n / 10 ))\n    done\n    echo $product",
  "  local n=$1\n  local result=1\n  for (( i=0; i<${#n}; i++ )); do\n    local digit=${n:$i:1}\n\
    \    if [[ $(( digit % 2 )) -eq 1 ]]; then\n      result=$(( result * digit ))\n\
    \    fi\n  done\n  echo $result", "    local n=$1\n    local result=1\n    while\
    \ [ $n -gt 0 ]; do\n        local digit=$((n % 10))\n        if [ $((digit % 2))\
    \ -ne 0 ]; then\n            result=$((result * digit))\n        fi\n        n=$((n\
    \ / 10))\n    done\n    echo $result", "  local n=$1\n  local product=1\n  local\
    \ digit\n  while [[ $n -gt 0 ]]; do\n    digit=$((n % 10))\n    if [[ $((digit\
    \ % 2)) -eq 1 ]]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local -i n=$1\n  local -i product=1\n \
    \ local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if ((\
    \ digit % 2 == 1 )); then\n      product=$(( product * digit ))\n    fi\n    n=$((\
    \ n / 10 ))\n  done\n  echo $product", "  local -i n=$1\n  local -i product=1\n\
    \  local -i digit\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local\
    \ -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n \
    \ local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i\
    \ oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n \
    \ local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i\
    \ xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n\
    \  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n  local -", "    local\
    \ -i n=$1\n    local -i product=1\n    local -i digit\n    while (( n > 0 ));\
    \ do\n        digit=$(( n % 10 ))\n        (( digit % 2 == 1 )) && (( product\
    \ *= digit ))\n        n=$(( n / 10 ))\n    done\n    echo $product", "  local\
    \ result=1\n  for (( i=0; i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n   \
    \ if [[ $digit -eq 0 ]]; then\n      continue\n    elif [[ $(( digit % 2 )) -eq\
    \ 1 ]]; then\n      result=$(( result * digit ))\n    fi\n  done\n  echo $result",
  "    local product=1\n    for (( i=0; i<${#1}; i++ )); do\n        local digit=${1:$i:1}\n\
    \        if (( digit % 2 == 1 )); then\n            product=$(( product * digit\
    \ ))\n        fi\n    done\n    echo $product", "  local product=1\n  for (( i=0;\
    \ i<${#1}; i++ )); do\n    local digit=${1:$i:1}\n    if [[ $digit -eq 0 ]]; then\n\
    \      continue\n    elif [[ $(( digit % 2 )) -eq 1 ]]; then\n      product=$((\
    \ product * digit ))\n    fi\n  done\n  echo $product", "    local digits=$(echo\
    \ $1 | grep -o .)\n    local product=1\n    for digit in $digits; do\n       \
    \ if [ $((digit % 2)) -ne 0 ]; then\n            product=$((product * digit))\n\
    \        fi\n    done\n    echo $product", "    local -i sum=1\n    for ((i=0;\
    \ i<${#1}; i++)); do\n        local -i digit=${1:i:1}\n        (( digit % 2 ==\
    \ 1 )) && (( sum *= digit ))\n    done\n    echo $sum", "  local -i n=$1\n  local\
    \ -i product=1\n  while (( n > 0 )); do\n    local -i digit=$(( n % 10 ))\n  \
    \  if (( digit % 2 == 1 )); then\n      product=$(( product * digit ))\n    fi\n\
    \    n=$(( n / 10 ))\n  done\n  echo $product", "    local -i n=$1\n    local\
    \ -i prod=1\n    local -i digit\n    while (( n > 0 )); do\n        digit=$((\
    \ n % 10 ))\n        (( digit % 2 == 1 )) && (( prod *= digit ))\n        n=$((\
    \ n / 10 ))\n    done\n    echo $prod", "  local -i n=$1\n  local -i product=1\n\
    \  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if ((\
    \ digit % 2 == 1 )); then\n      product=$(( product * digit ))\n    fi\n    n=$((\
    \ n / 10 ))\n  done\n  echo \"$product\"", "  local n=$1\n  local product=1\n\
    \  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit\
    \ % 2)) -eq 1 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n\
    \ / 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n  local\
    \ digit\n  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit %\
    \ 2)) -ne 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n /\
    \ 10))\n  done\n  echo $product", "  local n=$1\n  local product=1\n  local digit\n\
    \  while [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne\
    \ 0 ]; then\n      product=$((product * digit))\n    fi\n    n=$((n / 10))\n \
    \ done\n  echo $product", "  local result=1\n  for (( i=0; i<${#1}; i++ )); do\n\
    \    local digit=${1:$i:1}\n    if [[ $digit -gt 0 ]] && [[ $(( digit % 2 )) -eq\
    \ 1 ]]; then\n      result=$(( result * digit ))\n    fi\n  done\n  echo $result",
  "    local n=$1\n    local product=1\n    local digit\n    while [ $n -gt 0 ]; do\n\
    \        digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n      \
    \      product=$((product * digit))\n        fi\n        n=$((n / 10))\n    done\n\
    \    echo $product"]
stop_tokens:
- "\n}"

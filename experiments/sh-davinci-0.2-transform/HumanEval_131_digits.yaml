name: HumanEval_131_digits
language: sh
prompt: "#!/bin/bash\n# Given a positive integer n, return the product of the odd\
  \ digits.\n# Return 0 if all digits are even.\n# For example:\n# >>> $(digits \"\
  1\")\n# \"1\"\n# >>> $(digits \"4\")\n# \"0\"\n# >>> $(digits \"235\")\n# \"15\"\
  \n#\n# $1 is an integer\ndigits() {\n"
tests: "}\n\ncandidate() {\n    digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"5\") = \"5\" ]]\n    [[ $(candidate \"54\") = \"5\" ]]\n    [[ $(candidate \"\
  120\") = \"1\" ]]\n    [[ $(candidate \"5014\") = \"5\" ]]\n    [[ $(candidate \"\
  98765\") = \"315\" ]]\n    [[ $(candidate \"5576543\") = \"2625\" ]]\n    [[ $(candidate\
  \ \"2468\") = \"0\" ]]\n}\n\nrun_test"
completions: ["    local -i n=$1\n    local -i prod=1\n    local -i digit=0\n    while\
    \ (( n > 0 )); do\n        digit=$(( n % 10 ))\n        (( digit % 2 == 1 )) &&\
    \ (( prod *= digit ))\n        n=$(( n / 10 ))\n    done\n    echo $prod", " \
    \ local result=1\n  local digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n\
    \    if (( digit % 2 == 1 )); then\n      (( result *= digit ))\n    fi\n  done\n\
    \  echo $result", "  local -i sum=1\n  local -i digit\n  local -i n=$1\n  while\
    \ (( n > 0 )); do\n    digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) && (( sum\
    \ *= digit ))\n    n=$(( n / 10 ))\n  done\n  echo $sum", "    if [[ $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo $1 | sed 's/[02468]//g' | tr -d '\\n'\n    else\n   \
    \     echo \"Error: argument must be a positive integer\"\n    fi", "  local n=$1\n\
    \  local product=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n % 10))\n  \
    \  if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n   \
    \ fi\n    n=$((n / 10))\n  done\n  echo $product", "  local -i n=$1\n  local -i\
    \ product=1\n  local -i digit\n  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n\
    \    (( digit % 2 == 1 )) && (( product *= digit ))\n    n=$(( n / 10 ))\n  done\n\
    \  echo $product", "  local -i n=$1\n  local -i product=1\n  local -i digit\n\
    \  while (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2 != 0 ));\
    \ then\n      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n\
    \  echo $product", "  local n=$1\n  local product=1\n  local digit\n  while [\
    \ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local n=$1\n  local result=1\n  local digit\n  while [ $n -gt\
    \ 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n    \
    \  result=$((result * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo $result",
  "  local n=$1\n  local result=1\n  while [ $n -gt 0 ]; do\n    local digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      result=$((result * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $result", "  local n=$1\n  local sum=1\n\
    \  local digit\n  while [[ $n -gt 0 ]]; do\n    digit=$((n % 10))\n    if [[ $((digit\
    \ % 2)) -eq 1 ]]; then\n      sum=$((sum * digit))\n    fi\n    n=$((n / 10))\n\
    \  done\n  echo $sum", "  local -i n=$1\n  local -i product=1\n  while (( n >\
    \ 0 )); do\n    local -i digit=$(( n % 10 ))\n    (( digit % 2 == 1 )) && (( product\
    \ *= digit ))\n    (( n /= 10 ))\n  done\n  echo $product", "    local -i sum=1\n\
    \    for i in $(echo $1 | grep -o .); do\n        if [[ $((i % 2)) -eq 1 ]]; then\n\
    \            ((sum *= i))\n        fi\n    done\n    echo $sum", "    local -i\
    \ sum=1\n    for (( i=0; i<${#1}; i++ )); do\n        local -i digit=${1:i:1}\n\
    \        (( digit % 2 )) && (( sum *= digit ))\n    done\n    echo $sum", "  local\
    \ n=$1\n  local product=1\n  local digit\n  while [ $n -gt 0 ]; do\n    digit=$((n\
    \ % 10))\n    if [ $((digit % 2)) -ne 0 ]; then\n      product=$((product * digit))\n\
    \    fi\n    n=$((n / 10))\n  done\n  echo $product", "  local -i n=0\n  for ((\
    \ i=0; i<${#1}; i++ )); do\n    (( ${1:$i:1} % 2 )) && (( n *= ${1:$i:1} ))\n\
    \  done\n  echo \"$n\"", "  local n=$1\n  local product=1\n  local digit\n  while\
    \ [ $n -gt 0 ]; do\n    digit=$((n % 10))\n    if [ $((digit % 2)) -eq 1 ]; then\n\
    \      product=$((product * digit))\n    fi\n    n=$((n / 10))\n  done\n  echo\
    \ $product", "  local -i n=$1\n  local -i product=1\n  local -i digit\n  while\
    \ (( n > 0 )); do\n    digit=$(( n % 10 ))\n    if (( digit % 2 == 1 )); then\n\
    \      product=$(( product * digit ))\n    fi\n    n=$(( n / 10 ))\n  done\n \
    \ echo $product", "    local n=$1\n    local prod=1\n    while [ $n -gt 0 ]; do\n\
    \        local digit=$((n % 10))\n        if [ $((digit % 2)) -ne 0 ]; then\n\
    \            prod=$((prod * digit))\n        fi\n        n=$((n / 10))\n    done\n\
    \    echo $prod", "  local -i sum=1\n  for (( i=0; i<${#1}; i++ )); do\n    local\
    \ -i digit=${1:i:1}\n    (( digit % 2 == 1 )) && (( sum *= digit ))\n  done\n\
    \  echo $sum"]
stop_tokens:
- "\n}"

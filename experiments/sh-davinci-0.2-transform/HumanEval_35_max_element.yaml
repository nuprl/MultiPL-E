name: HumanEval_35_max_element
language: sh
prompt: "#!/bin/bash\n# Return maximum element in the list.\n# >>> $(max_element \"\
  1 2 3\")\n# \"3\"\n# >>> $(max_element \"5 3 -5 2 -3 3 9 0 123 1 -10\")\n# \"123\"\
  \n#\n# $1 is a space-separated list\nmax_element() {\n"
tests: "}\n\ncandidate() {\n    max_element \"$@\"\n}\n\nset -e\nrun_test() {\n  \
  \  [[ $(candidate \"1 2 3\") = \"3\" ]]\n    [[ $(candidate \"5 3 -5 2 -3 3 9 0\
  \ 124 1 -10\") = \"124\" ]]\n}\n\nrun_test"
completions: ["    local max_element\n    for element in $1; do\n        if [[ -z\
    \ $max_element ]] || [[ $element -gt $max_element ]]; then\n            max_element=$element\n\
    \        fi\n    done\n    echo $max_element", "    local max=0\n    for i in\
    \ $1; do\n        if (( i > max )); then\n            max=$i\n        fi\n   \
    \ done\n    echo $max", "    local max=0\n    for i in $1; do\n        if [[ $i\
    \ -gt $max ]]; then\n            max=$i\n        fi\n    done\n    echo $max",
  "    echo \"$1\" | tr ' ' '\\n' | sort -n | tail -n 1", "  local max=${1%% *}\n\
    \  shift\n  for i; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n\
    \  done\n  echo \"$max\"", "  local max\n  for i in $1; do\n    if [[ -z $max\
    \ || $i -gt $max ]]; then\n      max=$i\n    fi\n  done\n  echo $max", "    local\
    \ max=0\n    for i in $1; do\n        if [[ $i -gt $max ]]; then\n           \
    \ max=$i\n        fi\n    done\n    echo $max", "  local max_element=0\n  for\
    \ element in $1; do\n    if (( element > max_element )); then\n      max_element=$element\n\
    \    fi\n  done\n  echo $max_element", "    local max_element=0\n    for element\
    \ in $1; do\n        if [[ $element -gt $max_element ]]; then\n            max_element=$element\n\
    \        fi\n    done\n    echo $max_element", "  local max=0\n  for i in $1;\
    \ do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n  done\n  echo $max",
  "    local max_element=0\n    for element in $1; do\n        if [[ $element -gt\
    \ $max_element ]]; then\n            max_element=$element\n        fi\n    done\n\
    \    echo $max_element", "    local max=$1\n    shift\n    for i in $@; do\n \
    \       if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n    done\n\
    \    echo $max", "    local max=0\n    for i in $1; do\n        if [[ $i -gt $max\
    \ ]]; then\n            max=$i\n        fi\n    done\n    echo $max", "    local\
    \ max=0\n    for i in $1; do\n        if [[ $i -gt $max ]]; then\n           \
    \ max=$i\n        fi\n    done\n    echo $max", "    local max_element=${1%% *}\n\
    \    shift\n    for element; do\n        if (( element > max_element )); then\n\
    \            max_element=$element\n        fi\n    done\n    echo \"$max_element\"",
  "    local max=$1\n    shift\n    for i in $@; do\n        if (( $i > $max )); then\n\
    \            max=$i\n        fi\n    done\n    echo $max", "    echo \"$1\" |\
    \ tr ' ' '\\n' | sort -n | tail -n 1", "    local max=0\n    for i in $1; do\n\
    \        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n    done\n\
    \    echo $max", "    echo \"$1\" | tr ' ' '\\n' | sort -n | tail -n 1", "   \
    \ local max_element=\n    for element in $1; do\n        if [[ -z $max_element\
    \ ]] || [[ $element -gt $max_element ]]; then\n            max_element=$element\n\
    \        fi\n    done\n    echo $max_element"]
stop_tokens:
- "\n}"

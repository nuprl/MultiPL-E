language: sh
name: HumanEval_9_rolling_max
results:
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a max\n\
    \    local -a list\n    local -i i\n    local -i j\n    local -i max_i\n    local\
    \ -i max_j\n    local -i max_val\n    local -i val\n    local -i len\n    local\
    \ -i max_len\n    local -i max_len_i\n    local -i max_len_j\n    local -i max_len_val\n\
    \    local -i max_len_val_i\n    local -i max_len_val_j\n    local -i max_len_val_val\n\
    \    local -i max_len_val_val_i\n    local -i max_len_val_val_j\n    local -i\
    \ max_len_val_val_val\n    local -i max_len_val_val_val_i\n    local -i max_len_val_val_val_j\n\
    \    local -i max_len_val_val_val_val\n    local -i max_len_val_val_val_val_i\n\
    \    local -i max_len_val_val_val_val_j\n    local -i max_len_val_val_val_val_val\n\
    \    local -i max_len_val_val_val_val_val_i\n    local -i max_len_val_val_val_val_val_j\n\
    \    local -i max_len_val_val_val_val_val_val\n    local -i max_len_val_val_val_val_val_val_i\n\
    \    local -i max_len_val_val_val_val_val_val_j\n    local -i max_len_val_val_val_val_val_val_val\n\
    \    local -i max_len_val_val_val_val_val_val_val_i\n    local -i max_len_val_val_val_val_val_val_val_j\n\
    \    local -i max_len_val_val_val_val_val_val_val_val\n    local -i max_len_val_val_val_val_val_val_val_val_i\n\
    \    local -i max_len_val\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max=(${list[0]})\n    for ((i=1; i<${#list[@]}; i++)); do\n    \
    \    if [[ ${list[$i]} -gt ${max[$i-1]} ]]; then\n            max[$i]=${list[$i]}\n\
    \        else\n            max[$i]=${max[$i-1]}\n        fi\n    done\n    echo\
    \ \"${max[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo -n \"\\\"$max\\\" \"\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo -n \"\\\"$max\\\" \"\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list\n    local max=${list[0]}\n    max_list=(\"$max\")\n  \
    \  for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n       \
    \     max=$i\n        fi\n        max_list+=(\"$max\")\n    done\n    echo \"\
    ${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n  local max=0\n\
    \  for i in $1; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n   \
    \ echo '\"'$max'\"'\n  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=($max)\n  \
    \  for i in \"${list[@]:1}\"; do\n        if (( i > max )); then\n           \
    \ max=$i\n        fi\n        max_list+=($max)\n    done\n    echo \"${max_list[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    arr=($1)\n    max=${arr[0]}\n    echo -n\
    \ \"[\"\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if ((${arr[$i]} > max));\
    \ then\n            max=${arr[$i]}\n        fi\n        echo -n '\"'$max'\"'\n\
    \        if ((i < ${#arr[@]} - 1)); then\n            echo -n \", \"\n       \
    \ fi\n    done\n    echo \"]\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo -n '\"'$max'\"'\n        echo -n ' '\n    done\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    arr=($1)\n    max=${arr[0]}\n    for ((i=1;\
    \ i<${#arr[@]}; i++)); do\n        if [[ ${arr[i]} -gt $max ]]; then\n       \
    \     max=${arr[i]}\n        fi\n        echo -n \"\\\"$max\\\" \"\n    done\n\
    \    echo\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo '\"'$max'\"'\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local max=0\n    for i in $1; do\n        arr+=($i)\n        if (( $i > $max\
    \ )); then\n            max=$i\n        fi\n        echo \"\\\"$max\\\"\"\n  \
    \  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    local -i len\n    local -i last_max\n \
    \   local -i last_max_idx\n    local -i max_idx\n    local -i max_idx_tmp\n  \
    \  local -i max_tmp\n    local -i max_tmp_idx\n    local -i max_tmp_idx_tmp\n\
    \    local -i max_tmp_tmp\n    local -i max_tmp_tmp_idx\n    local -i max_tmp_tmp_idx_tmp\n\
    \    local -i max_tmp_tmp_tmp\n    local -i max_tmp_tmp_tmp_idx\n    local -i\
    \ max_tmp_tmp_tmp_idx_tmp\n    local -i max_tmp_tmp_tmp_tmp\n    local -i max_tmp_tmp_tmp_tmp_idx\n\
    \    local -i max_tmp_tmp_tmp_tmp_idx_tmp\n    local -i max_tmp_tmp_tmp_tmp_tmp\n\
    \    local -i max_tmp_tmp_tmp_tmp_tmp_idx\n    local -i max_tmp_tmp_tmp_tmp_tmp_idx_tmp\n\
    \    local -i max_tmp_tmp_tmp_tmp_tmp_tmp\n    local -i max_tmp_tmp_tmp_tmp_tmp_tmp_idx\n\
    \    local -i max_tmp_tmp_tmp_tmp_tmp_tmp_idx_tmp\n    local -i max_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \    local -i max_tmp_tmp_tmp_tmp_tmp_tmp_tmp_idx\n    local -i max_tmp_tmp_tmp_tmp_tmp_tmp_tmp_idx_tmp\n\
    \    local -i max_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n    local -i max_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_idx\n\
    \    local -i max_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_idx_tmp\n    local -i max_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp_tmp\n\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo -n \"\\\"$max\\\" \"\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max\n    local i\n    local j\n    local max_i\n    local max_j\n\
    \    local max_val\n    local val\n    local -i max_len=0\n    local -i len=0\n\
    \    local -i arr_len=0\n    local -i max_arr_len=0\n    local -i max_arr_len_prev=0\n\
    \    local -i max_arr_len_prev_prev=0\n    local -i max_arr_len_prev_prev_prev=0\n\
    \    local -i max_arr_len_prev_prev_prev_prev=0\n    local -i max_arr_len_prev_prev_prev_prev_prev=0\n\
    \    local -i max_arr_len_prev_prev_prev_prev_prev_prev=0\n    local -i max_arr_len_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_arr_len_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i max_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i\
    \ max_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i\
    \ max_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i max_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_arr_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_arr_len\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local max=0\n    for i in $1; do\n        if [[ $i -gt $max ]]; then\n  \
    \          max=$i\n        fi\n        arr+=(\"$max\")\n    done\n    echo \"\
    ${arr[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n  local -a list=($1)\n\
    \  local -a maxes=()\n  local max=${list[0]}\n  maxes+=($max)\n  for i in \"${list[@]:1}\"\
    ; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n    maxes+=($max)\n\
    \  done\n  echo \"${maxes[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local list=\"\
    $1\"\n    local max=0\n    for n in $list; do\n        if [[ $n -gt $max ]]; then\n\
    \            max=$n\n        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n  local max=0\n\
    \  for i in $1; do\n    if (( i > max )); then\n      max=$i\n    fi\n    echo\
    \ \"\\\"$max\\\"\"\n  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ \"$i\" -gt \"$max\" ]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=(\"$max\")\n\
    \    for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n     \
    \       max=$i\n        fi\n        max_list+=(\"$max\")\n    done\n    echo \"\
    ${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local max=0\n    for i in $1; do\n        if (( i > max )); then\n      \
    \      max=$i\n        fi\n        arr+=($max)\n    done\n    echo \"${arr[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n  local max=0\n\
    \  for i in $1; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n   \
    \ echo $max\n  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local max=0\n    for i in $1; do\n        if [[ $i -gt $max ]]; then\n  \
    \          max=$i\n        fi\n        arr+=(\"$max\")\n    done\n    echo \"\
    ${arr[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local max=${list[0]}\n    echo -n \"[\"\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n        echo\
    \ -n \"\\\"$max\\\"\"\n        if [[ $i -ne ${list[-1]} ]]; then\n           \
    \ echo -n \", \"\n        fi\n    done\n    echo \"]\"\n}\n\ncandidate() {\n \
    \   rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo -n \"\\\"$max\\\" \"\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local -a max_arr=()\n    local max=0\n    for i in $1; do\n        arr+=($i)\n\
    \        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n        max_arr+=($max)\n\
    \    done\n    echo \"${max_arr[@]}\"\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=(\"$max\")\n\
    \    for ((i=1; i<${#list[@]}; i++)); do\n        if ((list[i] > max)); then\n\
    \            max=${list[i]}\n        fi\n        max_list+=(\"$max\")\n    done\n\
    \    echo \"${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n  local max=0\n\
    \  local list=($1)\n  for i in \"${list[@]}\"; do\n    if [[ $i -gt $max ]]; then\n\
    \      max=$i\n    fi\n    echo \"\\\"$max\\\"\"\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=(\"$max\")\n\
    \    for i in \"${list[@]:1}\"; do\n        if [[ \"$i\" -gt \"$max\" ]]; then\n\
    \            max=\"$i\"\n        fi\n        max_list+=(\"$max\")\n    done\n\
    \    echo \"${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max\n    local i\n    local j\n    local max_i\n    local max_j\n\
    \    local -i max_val\n    local -i val\n    local -i len\n    local -i max_len\n\
    \    local -i max_len_prev\n    local -i max_len_next\n    local -i max_len_prev_prev\n\
    \    local -i max_len_next_next\n    local -i max_len_prev_prev_prev\n    local\
    \ -i max_len_next_next_next\n    local -i max_len_prev_prev_prev_prev\n    local\
    \ -i max_len_next_next_next_next\n    local -i max_len_prev_prev_prev_prev_prev\n\
    \    local -i max_len_next_next_next_next_next\n    local -i max_len_prev_prev_prev_prev_prev_prev\n\
    \    local -i max_len_next_next_next_next_next_next\n    local -i max_len_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i max_len_next_next_next_next_next_next_next\n    local -i max_len_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i max_len_next_next_next_next_next_next_next_next\n    local -i max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i max_len_next_next_next_next_next_next_next_next_next\n    local\
    \ -i max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i max_len_next_next_next_next_next_next_next_next_next_next\n\
    \    local -i max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i max_len_next_next_next_next_next_next_next_next_next_next_next\n\
    \    local -i max_len_prev_prev\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local -a max\n    max[0]=${arr[0]}\n    for ((i=1; i<${#arr[@]}; i++)); do\n\
    \        if [[ ${arr[i]} -gt ${max[i-1]} ]]; then\n            max[i]=${arr[i]}\n\
    \        else\n            max[i]=${max[i-1]}\n        fi\n    done\n    echo\
    \ \"${max[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local max\n    IFS=' ' read -r -a arr <<< \"$1\"\n    max=${arr[0]}\n   \
    \ for i in \"${arr[@]}\"; do\n        if [[ $i -gt $max ]]; then\n           \
    \ max=$i\n        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    local -i len\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n \
    \   local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local\
    \ -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n\
    \    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local\
    \ -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n\
    \    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local\
    \ -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n\
    \    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local\
    \ -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n\
    \    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local\
    \ -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n\
    \    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaaa\n   \
    \ local -i bbbb\n    local -i cccc\n    local -i dddd\n   \n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local -a maxes\n    local max=${arr[0]}\n    maxes+=($max)\n    for i in\
    \ ${arr[@]:1}; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n  \
    \      fi\n        maxes+=($max)\n    done\n    echo \"${maxes[@]}\"\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local max=0\n    for i in $1; do\n        if (( i > max )); then\n      \
    \      max=$i\n        fi\n        arr+=($max)\n    done\n    echo \"${arr[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local -a max_arr\n    local max=0\n    for i in \"${arr[@]}\"; do\n     \
    \   if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n        max_arr+=($max)\n\
    \    done\n    echo \"${max_arr[@]}\"\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local max=${arr[0]}\n    local -a result=()\n    for i in \"${arr[@]}\";\
    \ do\n        if (( i > max )); then\n            max=$i\n        fi\n       \
    \ result+=(\"$max\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a result=()\n    local max=${list[0]}\n    result+=($max)\n    for\
    \ i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        result+=($max)\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=($max)\n  \
    \  for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n       \
    \     max=$i\n        fi\n        max_list+=($max)\n    done\n    echo \"${max_list[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local max=${arr[0]}\n    local -a res=()\n    res+=(\"\\\"$max\\\"\")\n \
    \   for i in \"${arr[@]:1}\"; do\n        if ((i > max)); then\n            max=$i\n\
    \        fi\n        res+=(\"\\\"$max\\\"\")\n    done\n    echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a result=()\n    local max=${list[0]}\n    result+=(\"\\\"$max\\\"\
    \")\n    for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n \
    \           max=$i\n        fi\n        result+=(\"\\\"$max\\\"\")\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a result=()\n    local max=${list[0]}\n    result+=($max)\n    for\
    \ i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        result+=($max)\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a result=()\n    local max=${list[0]}\n    result+=(\"$max\")\n  \
    \  for i in \"${list[@]:1}\"; do\n        if [[ \"$i\" -gt \"$max\" ]]; then\n\
    \            max=\"$i\"\n        fi\n        result+=(\"$max\")\n    done\n  \
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local -a result\n    local max=${arr[0]}\n    result+=(\"$max\")\n    for\
    \ i in \"${arr[@]:1}\"; do\n        if (( i > max )); then\n            max=$i\n\
    \        fi\n        result+=(\"$max\")\n    done\n    echo \"${result[@]}\"\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    local -i len\n    local -i j\n    arr=($1)\n\
    \    len=${#arr[@]}\n    max=${arr[0]}\n    echo -n \"[\\\"$max\\\"\"\n    for\
    \ ((i=1; i<len; i++)); do\n        if ((arr[i] > max)); then\n            max=${arr[i]}\n\
    \        fi\n        echo -n \", \\\"$max\\\"\"\n    done\n    echo \"]\"\n}\n\
    \ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=(\"\
    $@\")\n    local -a max_arr\n    local max=0\n    for i in \"${arr[@]}\"; do\n\
    \        if (( i > max )); then\n            max=$i\n        fi\n        max_arr+=(\"\
    $max\")\n    done\n    echo \"${max_arr[@]}\"\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a res\n    local max\n    IFS=' ' read -r -a arr <<< \"$1\"\n    max=${arr[0]}\n\
    \    res=(\"$max\")\n    for i in \"${arr[@]:1}\"; do\n        if (( i > max ));\
    \ then\n            max=$i\n        fi\n        res+=(\"$max\")\n    done\n  \
    \  echo \"${res[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local -a max_arr\n    local max=${arr[0]}\n    max_arr=(\"$max\")\n    for\
    \ i in \"${arr[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        max_arr+=(\"$max\")\n    done\n    echo \"${max_arr[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local -a result\n    local max=${arr[0]}\n    result+=($max)\n    for i in\
    \ \"${arr[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        result+=($max)\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    IFS=' ' read -r -a arr <<< \"$1\"\n   \
    \ max=${arr[0]}\n    echo -n \"[\\\"$max\\\"\"\n    for ((i=1; i<${#arr[@]}; i++));\
    \ do\n        if (( arr[i] > max )); then\n            max=${arr[i]}\n       \
    \ fi\n        echo -n \", \\\"$max\\\"\"\n    done\n    echo \"]\"\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo -n \"\\\"$max\\\" \"\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a res\n    local -i i\n    local -i max\n    IFS=' ' read -r -a arr\
    \ <<< \"$1\"\n    max=${arr[0]}\n    res=(\"$max\")\n    for ((i=1; i<${#arr[@]};\
    \ i++)); do\n        if (( arr[i] > max )); then\n            max=${arr[i]}\n\
    \        fi\n        res+=(\"$max\")\n    done\n    echo \"${res[@]}\"\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local max=0\n    for i in $1; do\n        arr+=($i)\n        if (( i > max\
    \ )); then\n            max=$i\n        fi\n        echo -n \"\\\"$max\\\" \"\n\
    \    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a result=()\n    local max=${list[0]}\n    result+=($max)\n    for\
    \ ((i=1; i<${#list[@]}; i++)); do\n        if [[ ${list[$i]} -gt $max ]]; then\n\
    \            max=${list[$i]}\n        fi\n        result+=($max)\n    done\n \
    \   echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local max=0\n    for i in $1; do\n        arr+=($i)\n        if (( $i > $max\
    \ )); then\n            max=$i\n        fi\n        echo \"\\\"$max\\\"\"\n  \
    \  done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local max=${list[0]}\n    local -a result=()\n    result+=(\"\\\"$max\\\"\
    \")\n    for i in \"${list[@]:1}\"; do\n        if (( i > max )); then\n     \
    \       max=$i\n        fi\n        result+=(\"\\\"$max\\\"\")\n    done\n   \
    \ echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    local num\n    for num in $1; do\n        if ((num > max)); then\n      \
    \      max=$num\n        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local i\n    local max\n    arr=($1)\n    max=${arr[0]}\n    for ((i=1; i<${#arr[@]};\
    \ i++)); do\n        if ((arr[i] > max)); then\n            max=${arr[i]}\n  \
    \      fi\n        echo -n \"\\\"$max\\\" \"\n    done\n    echo\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    local -i len\n    local -i j\n    local\
    \ -i tmp\n    local -i max_index\n    local -i max_index_tmp\n    local -i max_index_prev\n\
    \    local -i max_index_prev_tmp\n    local -i max_index_prev_prev\n    local\
    \ -i max_index_prev_prev_tmp\n    local -i max_index_prev_prev_prev\n    local\
    \ -i max_index_prev_prev_prev_tmp\n    local -i max_index_prev_prev_prev_prev\n\
    \    local -i max_index_prev_prev_prev_prev_tmp\n    local -i max_index_prev_prev_prev_prev_prev\n\
    \    local -i max_index_prev_prev_prev_prev_prev_tmp\n    local -i max_index_prev_prev_prev_prev_prev_prev\n\
    \    local -i max_index_prev_prev_prev_prev_prev_prev_tmp\n    local -i max_index_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i max_index_prev_prev_prev_prev_prev_prev_prev_tmp\n    local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_tmp\n    local\
    \ -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev\n    local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_tmp\n\
    \    local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n  \
    \  local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_tmp\n\
    \    local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i max_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n}\n\
    \ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=(\"\
    $@\")\n    local max=${arr[0]}\n    local -a res=()\n    res+=(\"$max\")\n   \
    \ for i in \"${arr[@]:1}\"; do\n        if [[ \"$i\" -gt \"$max\" ]]; then\n \
    \           max=\"$i\"\n        fi\n        res+=(\"$max\")\n    done\n    echo\
    \ \"${res[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list\n\
    \    local -a max\n    local -i i\n    local -i j\n    local -i max_i\n    local\
    \ -i max_j\n    local -i max_val\n    local -i val\n    local -i len\n    local\
    \ -i max_len\n    local -i max_len_i\n    local -i max_len_j\n    local -i max_len_val\n\
    \    local -i len_val\n    local -i len_i\n    local -i len_j\n    local -i len_val_i\n\
    \    local -i len_val_j\n    local -i len_val_val\n    local -i max_len_val_i\n\
    \    local -i max_len_val_j\n    local -i max_len_val_val\n    local -i max_len_val_len\n\
    \    local -i max_len_val_len_i\n    local -i max_len_val_len_j\n    local -i\
    \ max_len_val_len_val\n    local -i max_len_val_len_len\n    local -i max_len_val_len_len_i\n\
    \    local -i max_len_val_len_len_j\n    local -i max_len_val_len_len_val\n  \
    \  local -i max_len_val_len_len_len\n    local -i max_len_val_len_len_len_i\n\
    \    local -i max_len_val_len_len_len_j\n    local -i max_len_val_len_len_len_val\n\
    \    local -i max_len_val_len_len_len_len\n    local -i max_len_val_len_len_len_len_i\n\
    \    local -i max_len_val_len_len_len_len_j\n    local -i max_len_val_len_len_len_len_val\n\
    \    local -i max_len_val_len_len_len_len_len\n    local -i max_len_val_len_len_len_len_len_i\n\
    \    local -i max_len_val_len_len_len_len\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local list=\"\
    $1\"\n    local max=0\n    local item\n    for item in $list; do\n        if [\
    \ $item -gt $max ]; then\n            max=$item\n        fi\n        echo \"\\\
    \"$max\\\"\"\n    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=0\n    for i in \"${list[@]}\"; do\n\
    \        if (( i > max )); then\n            max=$i\n        fi\n        max_list+=(\"\
    $max\")\n    done\n    echo \"${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local max=${list[0]}\n    local -a result=()\n    result+=($max)\n    for\
    \ i in \"${list[@]:1}\"; do\n        if (( i > max )); then\n            max=$i\n\
    \        fi\n        result+=($max)\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max_arr\n    local max\n    local i\n    local j\n    local k\n\
    \    local n\n\n    arr=($1)\n    max_arr=()\n    max=${arr[0]}\n    max_arr[0]=$max\n\
    \    n=${#arr[@]}\n    for ((i=1; i<n; i++)); do\n        if (( arr[i] > max ));\
    \ then\n            max=${arr[i]}\n        fi\n        max_arr[i]=$max\n    done\n\
    \    echo ${max_arr[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list\n    local max=${list[0]}\n    max_list+=($max)\n    for\
    \ ((i=1; i<${#list[@]}; i++)); do\n        if (( ${list[$i]} > $max )); then\n\
    \            max=${list[$i]}\n        fi\n        max_list+=($max)\n    done\n\
    \    echo ${max_list[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a result=()\n    local max=${list[0]}\n    result+=(\"\\\"$max\\\"\
    \")\n    for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n \
    \           max=$i\n        fi\n        result+=(\"\\\"$max\\\"\")\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max\n    local -a res\n    local i\n    local j\n    local k\n \
    \   local n\n    local m\n    local -i max_i\n    local -i max_j\n    local -i\
    \ max_k\n    local -i max_n\n    local -i max_m\n    local -i max_val\n    local\
    \ -i val\n    local -i max_len\n    local -i len\n    local -i max_idx\n    local\
    \ -i idx\n    local -i max_idx_val\n    local -i idx_val\n    local -i max_idx_len\n\
    \    local -i idx_len\n    local -i max_idx_val_len\n    local -i idx_val_len\n\
    \    local -i max_idx_val_len_n\n    local -i idx_val_len_n\n    local -i max_idx_val_len_n_m\n\
    \    local -i idx_val_len_n_m\n    local -i max_idx_val_len_n_m_k\n    local -i\
    \ idx_val_len_n_m_k\n    local -i max_idx_val_len_n_m_k_j\n    local -i idx_val_len_n_m_k_j\n\
    \    local -i max_idx_val_len_n_m_k_j_i\n    local -i idx_val_len_n_m_k_j_i\n\
    \    local -i max_idx_val_len_n_m_k_j_i_val\n    local -i idx_val_len_n_m_k_j_i_val\n\
    \    local -i max_idx_val_len_n_m_k_j_i_val_len\n    local -i idx_val_len_n_m_k_j_i_val_len\n\
    \    local -i max_idx_val_len_n_m_k_j_i_val_len_n\n    local -i idx_val_len_n_m_k\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=($max)\n  \
    \  for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n       \
    \     max=$i\n        fi\n        max_list+=($max)\n    done\n    echo \"${max_list[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local -a res=()\n    local -i max=0\n    local -i i=0\n    local -i j=0\n\
    \    local -i len=0\n    local -i len_arr=0\n    local -i len_res=0\n    local\
    \ -i len_max=0\n    local -i len_i=0\n    local -i len_j=0\n    local -i len_len=0\n\
    \    local -i len_len_arr=0\n    local -i len_len_res=0\n    local -i len_len_max=0\n\
    \    local -i len_len_i=0\n    local -i len_len_j=0\n    local -i len_len_len=0\n\
    \    local -i len_len_len_arr=0\n    local -i len_len_len_res=0\n    local -i\
    \ len_len_len_max=0\n    local -i len_len_len_i=0\n    local -i len_len_len_j=0\n\
    \    local -i len_len_len_len=0\n    local -i len_len_len_len_arr=0\n    local\
    \ -i len_len_len_len_res=0\n    local -i len_len_len_len_max=0\n    local -i len_len_len_len_i=0\n\
    \    local -i len_len_len_len_j=0\n    local -i len_len_len_len_len=0\n    local\
    \ -i len_len_len_len_len_arr=0\n    local -i len_len_len_len_len_res=0\n    local\
    \ -i len_len_len_len_len_max=0\n    local -i len_len_len_len_len_i=0\n    local\
    \ -i len_len_len_len_len_j=0\n    local -i len_len_len_len_len_len=0\n    local\
    \ -i len_len_len_len_len_len_arr=0\n    local -i len_len_len_len_len_len_res=0\n\
    \    local -\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local max=${list[0]}\n    local -a result=()\n    for i in \"${list[@]}\"\
    ; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n   \
    \     result+=(\"$max\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max\n    local i\n    local j\n    local max_value\n    local max_index\n\
    \    local -a result\n    arr=($1)\n    max=(${arr[0]})\n    for ((i=1; i<${#arr[@]};\
    \ i++)); do\n        max_value=${max[0]}\n        max_index=0\n        for ((j=0;\
    \ j<=i; j++)); do\n            if [[ ${arr[j]} -gt $max_value ]]; then\n     \
    \           max_value=${arr[j]}\n                max_index=$j\n            fi\n\
    \        done\n        max[i]=$max_value\n    done\n    for ((i=0; i<${#max[@]};\
    \ i++)); do\n        result[i]=\"\\\"${max[i]}\\\"\"\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local list=\"\
    $1\"\n    local max=0\n    local current=0\n    for current in $list; do\n   \
    \     if [[ $current -gt $max ]]; then\n            max=$current\n        fi\n\
    \        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n  local -a max_list\n\
    \  local max=0\n  for i in $1; do\n    if ((i > max)); then\n      max=$i\n  \
    \  fi\n    max_list+=($max)\n  done\n  echo \"${max_list[@]}\"\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=(\"$max\")\n\
    \    for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n     \
    \       max=$i\n        fi\n        max_list+=(\"$max\")\n    done\n    echo \"\
    ${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n  local -a arr=()\n\
    \  local max=0\n  for i in $1; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n\
    \    fi\n    arr+=(\"$max\")\n  done\n  echo \"${arr[@]}\"\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo -n \"\\\"$max\\\" \"\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local max=0\n    for i in $1; do\n        if [[ $i -gt $max ]]; then\n  \
    \          max=$i\n        fi\n        arr+=(\"$max\")\n    done\n    echo \"\
    ${arr[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max\n    local i\n    local j\n    local max_i\n    local max_j\n\
    \    local max_val\n    local val\n    local -i len\n    local -i max_len\n  \
    \  local -i max_val_len\n    local -i val_len\n    local -i max_val_len\n    local\
    \ -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -i len\n    local -i val_len\n    local -i max_val_len\n\
    \    local -i max_len\n    local -\n}\n\ncandidate() {\n    rolling_max \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local max=0\n    for i in $1; do\n        if (( i > max )); then\n      \
    \      max=$i\n        fi\n        arr+=($max)\n    done\n    echo \"${arr[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a max_so_far\n\
    \    local -a max_so_far_index\n    local -a max_so_far_index_stack\n    local\
    \ -a max_so_far_stack\n    local -a max_so_far_stack_index\n    local -a max_so_far_stack_index_stack\n\
    \    local -a max_so_far_stack_stack\n    local -a max_so_far_stack_stack_index\n\
    \    local -a max_so_far_stack_stack_index_stack\n    local -a max_so_far_stack_stack_stack\n\
    \    local -a max_so_far_stack_stack_stack_index\n    local -a max_so_far_stack_stack_stack_index_stack\n\
    \    local -a max_so_far_stack_stack_stack_stack\n    local -a max_so_far_stack_stack_stack_stack_index\n\
    \    local -a max_so_far_stack_stack_stack_stack_index_stack\n    local -a max_so_far_stack_stack_stack_stack_stack\n\
    \    local -a max_so_far_stack_stack_stack_stack_stack_index\n    local -a max_so_far_stack_stack_stack_stack_stack_index_stack\n\
    \    local -a max_so_far_stack_stack_stack_stack_stack_stack\n    local -a max_so_far_stack_stack_stack_stack_stack_stack_index\n\
    \    local -a max_so_far_stack_stack_stack_stack_stack_stack_index_stack\n   \
    \ local -a max_so_far_stack_stack_stack_stack_stack_stack_stack\n    local -a\
    \ max_so_far_stack_stack_stack_stack_stack_stack_stack_index\n    local -a max_so_far_stack_stack_stack_stack_stack_stack_stack_index_stack\n\
    \    local -a max_so_far_stack_stack_stack_stack_stack_stack_stack_stack\n   \
    \ local -a max_so_far_stack_stack_stack_stack_stack_stack_stack_stack_index\n\
    \   \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3\
    \ 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max\n    local i\n    local max_i\n    local max_v\n    local v\n\
    \    arr=($1)\n    max_i=0\n    max_v=${arr[0]}\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        v=${arr[$i]}\n        if ((v > max_v)); then\n          \
    \  max_v=$v\n            max_i=$i\n        fi\n        max[$i]=$max_v\n    done\n\
    \    echo ${max[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\"\
    ) = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    arr=($1)\n    local max=${arr[0]}\n    echo -n \"[\"\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n   \
    \     echo -n \"\\\"$max\\\"\"\n        if [[ $i -ne ${arr[-1]} ]]; then\n   \
    \         echo -n \", \"\n        fi\n    done\n    echo \"]\"\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=(\"\
    $@\")\n    local -a max_arr\n    local max=${arr[0]}\n    max_arr=(\"$max\")\n\
    \    for i in \"${arr[@]:1}\"; do\n        if (( i > max )); then\n          \
    \  max=$i\n        fi\n        max_arr+=(\"$max\")\n    done\n    echo \"${max_arr[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=(\"$max\")\n\
    \    for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n     \
    \       max=$i\n        fi\n        max_list+=(\"$max\")\n    done\n    echo \"\
    ${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    local -i len\n\n    arr=($1)\n    len=${#arr[@]}\n\
    \    max=${arr[0]}\n    echo -n \"[\\\"$max\\\"\"\n    for ((i=1; i<len; i++));\
    \ do\n        if ((arr[i] > max)); then\n            max=${arr[i]}\n        fi\n\
    \        echo -n \", \\\"$max\\\"\"\n    done\n    echo \"]\"\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list\n    local max=${list[0]}\n    max_list=(\"$max\")\n  \
    \  for i in \"${list[@]:1}\"; do\n        if [[ \"$i\" -gt \"$max\" ]]; then\n\
    \            max=\"$i\"\n        fi\n        max_list+=(\"$max\")\n    done\n\
    \    echo \"${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list\n    local max=${list[0]}\n    max_list=(\"$max\")\n  \
    \  for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n       \
    \     max=$i\n        fi\n        max_list+=(\"$max\")\n    done\n    echo \"\
    ${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local -a max_arr\n    local max=${arr[0]}\n    max_arr+=($max)\n    for i\
    \ in \"${arr[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        max_arr+=($max)\n    done\n    echo \"${max_arr[@]}\"\n}\n\
    \ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=(\"\
    $@\")\n    local -a result\n    local max=${arr[0]}\n    result+=(\"$max\")\n\
    \    for i in \"${arr[@]:1}\"; do\n        if (( i > max )); then\n          \
    \  max=$i\n        fi\n        result+=(\"$max\")\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local max=${list[0]}\n    local -a result=()\n    result+=($max)\n    for\
    \ i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        result+=($max)\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo -n '\"'$max'\"'\n        echo -n ' '\n    done\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local max=${list[0]}\n    local -a result=()\n    for i in \"${list[@]}\"\
    ; do\n        if (( i > max )); then\n            max=$i\n        fi\n       \
    \ result+=(\"$max\")\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a maxes=()\n    local max=${list[0]}\n    maxes+=($max)\n    for i\
    \ in ${list[@]:1}; do\n        if (( i > max )); then\n            max=$i\n  \
    \      fi\n        maxes+=($max)\n    done\n    echo \"${maxes[@]}\"\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    arr=($1)\n    max=${arr[0]}\n    echo -n\
    \ \"[\"\n    for ((i=0; i<${#arr[@]}; i++)); do\n        if (( ${arr[$i]} > max\
    \ )); then\n            max=${arr[$i]}\n        fi\n        echo -n \"\\\"$max\\\
    \"\"\n        if (( i < ${#arr[@]} - 1 )); then\n            echo -n \", \"\n\
    \        fi\n    done\n    echo \"]\"\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max\n    local i\n    local j\n    local n\n    local m\n    arr=($1)\n\
    \    n=${#arr[@]}\n    max[0]=${arr[0]}\n    for ((i=1; i<n; i++)); do\n     \
    \   m=${max[i-1]}\n        if [[ ${arr[i]} -gt $m ]]; then\n            max[i]=${arr[i]}\n\
    \        else\n            max[i]=$m\n        fi\n    done\n    echo ${max[@]}\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local max=${list[0]}\n    echo -n \"[\"\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n        echo\
    \ -n \"\\\"$max\\\"\"\n        if [[ $i -ne ${list[-1]} ]]; then\n           \
    \ echo -n \", \"\n        fi\n    done\n    echo \"]\"\n}\n\ncandidate() {\n \
    \   rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo -n \"\\\"$max\\\" \"\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list\n    local max=${list[0]}\n    max_list+=($max)\n    for\
    \ i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        max_list+=($max)\n    done\n    echo \"${max_list[@]}\"\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a result=()\n    local max=${list[0]}\n    result+=(\"\\\"$max\\\"\
    \")\n    for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n \
    \           max=$i\n        fi\n        result+=(\"\\\"$max\\\"\")\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=($max)\n  \
    \  for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n       \
    \     max=$i\n        fi\n        max_list+=($max)\n    done\n    echo \"${max_list[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=(\"\
    $@\")\n    local -a max_arr\n    local max=${arr[0]}\n    max_arr+=(\"$max\")\n\
    \    for ((i=1; i<${#arr[@]}; i++)); do\n        if (( arr[i] > max )); then\n\
    \            max=${arr[i]}\n        fi\n        max_arr+=(\"$max\")\n    done\n\
    \    echo \"${max_arr[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo -n \"\\\"$max\\\" \"\n    done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=($max)\n  \
    \  for ((i=1; i<${#list[@]}; i++)); do\n        if [[ ${list[$i]} -gt $max ]];\
    \ then\n            max=${list[$i]}\n        fi\n        max_list+=($max)\n  \
    \  done\n    echo \"${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local max=${arr[0]}\n    local i\n    for ((i=1; i<${#arr[@]}; i++)); do\n\
    \        if (( ${arr[i]} > max )); then\n            max=${arr[i]}\n        fi\n\
    \        echo -n '\"'$max'\"'\n        if (( i < ${#arr[@]}-1 )); then\n     \
    \       echo -n ' '\n        fi\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo '\"'$max'\"'\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local -a max=()\n    local -a res=()\n    local -a tmp=()\n    local i=0\n\
    \    local j=0\n    local len=0\n    local max_len=0\n    local max_val=0\n  \
    \  local val=0\n\n    arr=($1)\n    len=${#arr[@]}\n    max_len=${#max[@]}\n \
    \   max_val=${arr[0]}\n    for ((i=0; i<len; i++)); do\n        val=${arr[$i]}\n\
    \        if [[ $val -gt $max_val ]]; then\n            max_val=$val\n        fi\n\
    \        max[$i]=$max_val\n    done\n    for ((i=0; i<len; i++)); do\n       \
    \ res[$i]=\"\\\"${max[$i]}\\\"\"\n    done\n    echo ${res[@]}\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    local -i max_i\n    local -i max_j\n  \
    \  local -i max_k\n    local -i max_l\n    local -i max_m\n    local -i max_n\n\
    \    local -i max_o\n    local -i max_p\n    local -i max_q\n    local -i max_r\n\
    \    local -i max_s\n    local -i max_t\n    local -i max_u\n    local -i max_v\n\
    \    local -i max_w\n    local -i max_x\n    local -i max_y\n    local -i max_z\n\
    \    local -i max_aa\n    local -i max_ab\n    local -i max_ac\n    local -i max_ad\n\
    \    local -i max_ae\n    local -i max_af\n    local -i max_ag\n    local -i max_ah\n\
    \    local -i max_ai\n    local -i max_aj\n    local -i max_ak\n    local -i max_al\n\
    \    local -i max_am\n    local -i max_an\n    local -i max_ao\n    local -i max_ap\n\
    \    local -i max_aq\n    local -i max_ar\n    local -i max_as\n    local -i max_at\n\
    \    local -i max_au\n    local -i max_av\n    local -i max_aw\n    local -i max_ax\n\
    \    local -i max_ay\n    local -i max_az\n    local -i max_ba\n    local -i max_bb\n\
    \    local -i max_bc\n    local -i max_bd\n    local -i max_be\n    local -i max_bf\n\
    \    local -i max_bg\n    local -i max_bh\n    local -i max_bi\n    local -i max_bj\n\
    \    local -i max_bk\n    local -i max_bl\n    local -i max_bm\n    local -i max_bn\n\
    \    local -i max_bo\n    local -i max_bp\n    local -i max_bq\n    local -\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list\n    local max=${list[0]}\n    max_list+=($max)\n    for\
    \ i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        max_list+=($max)\n    done\n    echo \"${max_list[@]}\"\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    local -i len\n    local -i j\n    local\
    \ -i k\n    local -i tmp\n    local -i curr\n    local -i max_idx\n    local -i\
    \ max_val\n    local -i max_idx_tmp\n    local -i max_val_tmp\n    local -i max_idx_prev\n\
    \    local -i max_val_prev\n    local -i max_idx_prev_tmp\n    local -i max_val_prev_tmp\n\
    \    local -i max_idx_prev_prev\n    local -i max_val_prev_prev\n    local -i\
    \ max_idx_prev_prev_tmp\n    local -i max_val_prev_prev_tmp\n    local -i max_idx_prev_prev_prev\n\
    \    local -i max_val_prev_prev_prev\n    local -i max_idx_prev_prev_prev_tmp\n\
    \    local -i max_val_prev_prev_prev_tmp\n    local -i max_idx_prev_prev_prev_prev\n\
    \    local -i max_val_prev_prev_prev_prev\n    local -i max_idx_prev_prev_prev_prev_tmp\n\
    \    local -i max_val_prev_prev_prev_prev_tmp\n    local -i max_idx_prev_prev_prev_prev_prev\n\
    \    local -i max_val_prev_prev_prev_prev_prev\n    local -i max_idx_prev_prev_prev_prev_prev_tmp\n\
    \    local -i max_val_prev_prev_prev_prev_prev_tmp\n    local -i max_idx_prev_prev_prev_prev_prev_prev\n\
    \    local -i max_val_prev_prev_prev_prev_prev_prev\n    local -i max_idx_prev_prev_prev_prev_prev_prev_tmp\n\
    \    local -i max_val_prev_prev_prev_prev_prev_prev_tmp\n    local -i max_idx_prev_prev_prev_prev_prev_prev_prev\n\
    \    local -i max\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list\n    local max=${list[0]}\n    max_list=($max)\n    for\
    \ i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        max_list+=($max)\n    done\n    echo \"${max_list[@]}\"\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    for i in $1; do\n        arr+=(\"$i\")\n        echo \"$(max \"${arr[@]}\"\
    )\"\n    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0uw01q_w.sh: line 12: max: command not found

    /tmp/tmp0uw01q_w.sh: line 12: max: command not found

    /tmp/tmp0uw01q_w.sh: line 12: max: command not found

    /tmp/tmp0uw01q_w.sh: line 12: max: command not found

    '
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local list=\"\
    $1\"\n    local max=0\n    for i in $list; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=($max)\n  \
    \  for i in \"${list[@]:1}\"; do\n        if (( i > max )); then\n           \
    \ max=$i\n        fi\n        max_list+=($max)\n    done\n    echo \"${max_list[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local max=${list[0]}\n    local -a result=()\n    result+=(\"$max\")\n  \
    \  for i in \"${list[@]:1}\"; do\n        if [[ \"$i\" -gt \"$max\" ]]; then\n\
    \            max=\"$i\"\n        fi\n        result+=(\"$max\")\n    done\n  \
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=($max)\n  \
    \  for i in ${list[@]:1}; do\n        if [[ $i -gt $max ]]; then\n           \
    \ max=$i\n        fi\n        max_list+=($max)\n    done\n    echo ${max_list[@]}\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a result=()\n    local max=${list[0]}\n    result+=($max)\n    for\
    \ (( i=1; i<${#list[@]}; i++ )); do\n        if (( ${list[$i]} > $max )); then\n\
    \            max=${list[$i]}\n        fi\n        result+=($max)\n    done\n \
    \   echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a seq=($1)\n\
    \    local -a max=(${seq[0]})\n    for ((i=1; i<${#seq[@]}; i++)); do\n      \
    \  if (( seq[i] > max[i-1] )); then\n            max[i]=${seq[i]}\n        else\n\
    \            max[i]=${max[i-1]}\n        fi\n    done\n    echo ${max[@]}\n}\n\
    \ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo -n '\"'$max'\"'\n        echo -n ' '\n    done\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=($max)\n  \
    \  for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n       \
    \     max=$i\n        fi\n        max_list+=($max)\n    done\n    echo ${max_list[@]}\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a a=($1)\n\
    \    local -a b=()\n    local max=${a[0]}\n    b+=($max)\n    for i in \"${a[@]:1}\"\
    ; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n   \
    \     b+=($max)\n    done\n    echo ${b[@]}\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n  local -a arr=(\"\
    $@\")\n  local max=${arr[0]}\n  echo -n \"[\\\"$max\\\"\"\n  for i in \"${arr[@]:1}\"\
    ; do\n    if (( i > max )); then\n      max=$i\n    fi\n    echo -n \", \\\"$max\\\
    \"\"\n  done\n  echo \"]\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a max_list\n\
    \    local max=0\n    for i in $1; do\n        if (( i > max )); then\n      \
    \      max=$i\n        fi\n        max_list+=(\"$max\")\n    done\n    echo \"\
    ${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo -n '\"'$max'\"'\n        echo -n ' '\n    done\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local max=${arr[0]}\n    local i=0\n    local len=${#arr[@]}\n    local res=()\n\
    \    while [ $i -lt $len ]; do\n        if [ \"${arr[$i]}\" -gt \"$max\" ]; then\n\
    \            max=${arr[$i]}\n        fi\n        res[$i]=$max\n        i=$((i+1))\n\
    \    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=(\"\
    $@\")\n    local -a max_arr=()\n    local max=0\n    for i in \"${arr[@]}\"; do\n\
    \        if (( i > max )); then\n            max=$i\n        fi\n        max_arr+=(\"\
    $max\")\n    done\n    echo \"${max_arr[@]}\"\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    echo \"$1\"\
    \ | awk 'BEGIN {max = 0} {if ($1 > max) {max = $1}; print max}'\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local max=${arr[0]}\n    local -a result=()\n    result+=(\"$max\")\n   \
    \ for i in \"${arr[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n         \
    \   max=$i\n        fi\n        result+=(\"$max\")\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local -a max_arr\n    local max=${arr[0]}\n    max_arr=($max)\n    for i\
    \ in \"${arr[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        max_arr+=($max)\n    done\n    echo \"${max_arr[@]}\"\n}\n\
    \ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local -a max=()\n    local -a res=()\n    local -a tmp=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local n=0\n    local m=0\n    local max_val=0\n\
    \    local cur_val=0\n    local cur_max=0\n    local cur_max_idx=0\n    local\
    \ cur_max_val=0\n    local cur_max_idx_val=0\n    local cur_max_idx_val_idx=0\n\
    \    local cur_max_idx_val_idx_val=0\n    local cur_max_idx_val_idx_val_idx=0\n\
    \    local cur_max_idx_val_idx_val_idx_val=0\n    local cur_max_idx_val_idx_val_idx_val_idx=0\n\
    \    local cur_max_idx_val_idx_val_idx_val_idx_val=0\n    local cur_max_idx_val_idx_val_idx_val_idx_val_idx=0\n\
    \    local cur_max_idx_val_idx_val_idx_val_idx_val_idx_val=0\n    local cur_max_idx_val_idx_val_idx_val_idx_val_idx_val_idx=0\n\
    \    local cur_max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val=0\n    local\
    \ cur_max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx=0\n    local cur_max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val=0\n\
    \    local cur_max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_id\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a max\n\
    \    local -a list\n    local i\n    local j\n    local max_i\n    local max_j\n\
    \    local max_val\n    local val\n    local -a result\n\n    list=($1)\n    max_i=0\n\
    \    max_j=0\n    max_val=${list[0]}\n    for ((i=0; i<${#list[@]}; i++)); do\n\
    \        val=${list[i]}\n        if (( val > max_val )); then\n            max_i=$i\n\
    \            max_j=$i\n            max_val=$val\n        fi\n        max[i]=$max_val\n\
    \    done\n\n    for ((i=0; i<${#max[@]}; i++)); do\n        result[i]=\"\\\"\
    ${max[i]}\\\"\"\n    done\n\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n \
    \   rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n  local -a arr=(\"\
    $@\")\n  local -a max_arr\n  local max=${arr[0]}\n  max_arr+=(\"$max\")\n  for\
    \ i in \"${arr[@]:1}\"; do\n    if [[ \"$i\" -gt \"$max\" ]]; then\n      max=\"\
    $i\"\n    fi\n    max_arr+=(\"$max\")\n  done\n  echo \"${max_arr[@]}\"\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a a=($1)\n\
    \    local -a b=()\n    local -i i=0\n    local -i m=0\n    for ((i=0; i<${#a[@]};\
    \ i++)); do\n        if ((a[i] > m)); then\n            m=a[i]\n        fi\n \
    \       b[i]=$m\n    done\n    echo \"${b[@]}\"\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max\n    local -i i\n    local -i j\n    local -i k\n    local -i\
    \ n\n    local -i m\n    local -i max_i\n    local -i max_j\n    local -i max_k\n\
    \    local -i max_n\n    local -i max_m\n    local -i max_val\n    local -i val\n\
    \    local -i max_val_i\n    local -i max_val_j\n    local -i max_val_k\n    local\
    \ -i max_val_n\n    local -i max_val_m\n    local -i max_val_val\n    local -i\
    \ max_val_val_i\n    local -i max_val_val_j\n    local -i max_val_val_k\n    local\
    \ -i max_val_val_n\n    local -i max_val_val_m\n    local -i max_val_val_val\n\
    \    local -i max_val_val_val_i\n    local -i max_val_val_val_j\n    local -i\
    \ max_val_val_val_k\n    local -i max_val_val_val_n\n    local -i max_val_val_val_m\n\
    \    local -i max_val_val_val_val\n    local -i max_val_val_val_val_i\n    local\
    \ -i max_val_val_val_val_j\n    local -i max_val_val_val_val_k\n    local -i max_val_val_val_val_n\n\
    \    local -i max_val_val_val_val_m\n    local -i max_val_val_val_val_val\n  \
    \  local -i max_val_val_val_val_val_i\n    local -i max_val_val_val_val_val_j\n\
    \    local -i max_val_val_val_val_val_k\n    local -i max_val_val_val_val_val_n\n\
    \    local -i max_val_val_val_val_val_m\n    local -i max_val_val_val_val\n}\n\
    \ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    local -i len\n    local -i j\n    local\
    \ -i k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i aa\n    local -i bb\n    local -i cc\n    local -i dd\n \
    \   local -i ee\n    local -i ff\n    local -i gg\n    local -i hh\n    local\
    \ -i ii\n    local -i jj\n    local -i kk\n    local -i ll\n    local -i mm\n\
    \    local -i nn\n    local -i oo\n    local -i pp\n    local -i qq\n    local\
    \ -i rr\n    local -i ss\n    local -i tt\n    local -i uu\n    local -i vv\n\
    \    local -i ww\n    local -i xx\n    local -i yy\n    local -i zz\n    local\
    \ -i aaa\n    local -i bbb\n    local -i ccc\n    local -i ddd\n    local -i eee\n\
    \    local -i fff\n    local -i ggg\n    local -i hhh\n    local -i iii\n    local\
    \ -i jjj\n    local -i kkk\n    local -i lll\n    local -i mmm\n    local -i nnn\n\
    \    local -i ooo\n    local -i ppp\n    local -i qqq\n    local -i rrr\n    local\
    \ -i sss\n    local -i ttt\n    local -i uuu\n    local -i vvv\n    local -i www\n\
    \    local -i xxx\n    local -i yyy\n    local -i zzz\n    local -i aaaa\n   \
    \ local -i bbbb\n    local -i cccc\n    local -i dddd\n   \n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a max\n\
    \    local -a arr=($1)\n    local i\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
    \        if [[ $i -eq 0 ]]; then\n            max[$i]=${arr[$i]}\n        else\n\
    \            if [[ ${arr[$i]} -gt ${max[$i-1]} ]]; then\n                max[$i]=${arr[$i]}\n\
    \            else\n                max[$i]=${max[$i-1]}\n            fi\n    \
    \    fi\n    done\n    echo \"${max[@]}\"\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n  local max=0\n\
    \  local list=($1)\n  for i in \"${list[@]}\"; do\n    if (( i > max )); then\n\
    \      max=$i\n    fi\n    echo \"\\\"$max\\\"\"\n  done\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=()\n\
    \    local max=0\n    for i in $1; do\n        if (( i > max )); then\n      \
    \      max=$i\n        fi\n        arr+=($max)\n    done\n    echo \"${arr[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max\n    local -a res\n    local i\n    local n\n    local m\n \
    \   arr=($1)\n    max=()\n    res=()\n    n=${#arr[@]}\n    for ((i=0; i<n; i++));\
    \ do\n        m=${arr[$i]}\n        if (( ${#max[@]} == 0 || m > ${max[-1]} ));\
    \ then\n            max+=($m)\n        else\n            max+=(${max[-1]})\n \
    \       fi\n    done\n    for ((i=0; i<n; i++)); do\n        res+=(${max[$i]})\n\
    \    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2eq1fkjp.sh: line 21: max: bad array subscript

    /tmp/tmp2eq1fkjp.sh: line 21: ((: 0 == 0 || m >  : syntax error: operand expected
    (error token is ">  ")

    /tmp/tmp2eq1fkjp.sh: line 24: max: bad array subscript

    /tmp/tmp2eq1fkjp.sh: line 21: max: bad array subscript

    /tmp/tmp2eq1fkjp.sh: line 21: ((: 0 == 0 || m >  : syntax error: operand expected
    (error token is ">  ")

    /tmp/tmp2eq1fkjp.sh: line 24: max: bad array subscript

    /tmp/tmp2eq1fkjp.sh: line 21: max: bad array subscript

    /tmp/tmp2eq1fkjp.sh: line 21: ((: 0 == 0 || m >  : syntax error: operand expected
    (error token is ">  ")

    /tmp/tmp2eq1fkjp.sh: line 24: max: bad array subscript

    /tmp/tmp2eq1fkjp.sh: line 21: max: bad array subscript

    /tmp/tmp2eq1fkjp.sh: line 21: ((: 0 == 0 || m >  : syntax error: operand expected
    (error token is ">  ")

    /tmp/tmp2eq1fkjp.sh: line 24: max: bad array subscript

    '
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local max=0\n    for i in \"${list[@]}\"; do\n        if [[ \"$i\" -gt \"\
    $max\" ]]; then\n            max=\"$i\"\n        fi\n        echo \"\\\"$max\\\
    \"\"\n    done\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list\n    local max=${list[0]}\n    max_list+=(\"$max\")\n \
    \   for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n      \
    \      max=$i\n        fi\n        max_list+=(\"$max\")\n    done\n    echo \"\
    ${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"\
    1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate\
    \ \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    arr=($1)\n    max=${arr[0]}\n    echo -n\
    \ \"[\\\"$max\\\"\"\n    for ((i=1; i<${#arr[@]}; i++)); do\n        if (( ${arr[i]}\
    \ > max )); then\n            max=${arr[i]}\n        fi\n        echo -n \", \\\
    \"$max\\\"\"\n    done\n    echo \"]\"\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local max=${arr[0]}\n    echo -n \"[\"\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n        echo\
    \ -n \"\\\"$max\\\"\"\n        if [[ $i -ne ${arr[-1]} ]]; then\n            echo\
    \ -n \", \"\n        fi\n    done\n    echo \"]\"\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max\n    local -a res\n    local i\n    local j\n    local m\n\n\
    \    arr=($1)\n    max[0]=${arr[0]}\n    for ((i=1; i<${#arr[@]}; i++)); do\n\
    \        m=${max[i-1]}\n        if [[ ${arr[i]} -gt $m ]]; then\n            max[i]=${arr[i]}\n\
    \        else\n            max[i]=$m\n        fi\n    done\n    for ((i=0; i<${#max[@]};\
    \ i++)); do\n        res[i]=\"\\\"${max[i]}\\\"\"\n    done\n    echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a max_list\n\
    \    local max=0\n    local i=0\n    for i in $1; do\n        if [ $i -gt $max\
    \ ]; then\n            max=$i\n        fi\n        max_list[$i]=$max\n    done\n\
    \    echo ${max_list[@]}\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    arr=($1)\n    local max=${arr[0]}\n    echo -n \"[\"\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n   \
    \     echo -n \"\\\"$max\\\"\"\n        if [[ $i -ne ${arr[-1]} ]]; then\n   \
    \         echo -n \", \"\n        fi\n    done\n    echo \"]\"\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=(\"$max\")\n\
    \    for i in \"${list[@]:1}\"; do\n        if (( i > max )); then\n         \
    \   max=$i\n        fi\n        max_list+=(\"$max\")\n    done\n    echo \"${max_list[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a seq\n\
    \    local -a max\n    local -a result\n    local i\n    local j\n    local m\n\
    \    local n\n    local -i max_idx\n    local -i max_val\n    local -i val\n \
    \   local -i idx\n\n    seq=($1)\n    n=${#seq[@]}\n    max_idx=0\n    max_val=${seq[0]}\n\
    \    max[0]=${seq[0]}\n    for ((i=1; i<n; i++)); do\n        val=${seq[i]}\n\
    \        if ((val > max_val)); then\n            max_val=$val\n            max_idx=$i\n\
    \        fi\n        max[i]=$max_val\n    done\n    for ((i=0; i<n; i++)); do\n\
    \        result[i]=\"\\\"${max[i]}\\\"\"\n    done\n    echo \"${result[@]}\"\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local max=${arr[0]}\n    local -a res=()\n    res+=($max)\n    for i in \"\
    ${arr[@]:1}\"; do\n        if ((i > max)); then\n            max=$i\n        fi\n\
    \        res+=($max)\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n \
    \   rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local max=${list[0]}\n    echo -n \"[\"\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n        echo\
    \ -n \"\\\"$max\\\"\"\n        if [[ $i -ne ${list[-1]} ]]; then\n           \
    \ echo -n \", \"\n        fi\n    done\n    echo \"]\"\n}\n\ncandidate() {\n \
    \   rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a result=()\n    local max=${list[0]}\n    result+=(\"\\\"$max\\\"\
    \")\n    for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n \
    \           max=$i\n        fi\n        result+=(\"\\\"$max\\\"\")\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=(\"\\\"$max\\\
    \"\")\n    for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n\
    \            max=$i\n        fi\n        max_list+=(\"\\\"$max\\\"\")\n    done\n\
    \    echo \"${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max\n    local i\n    local j\n    local max_i\n    local max_j\n\
    \    local max_val\n    local val\n    local -a res\n\n    arr=($1)\n    max=()\n\
    \    max_val=${arr[0]}\n    max[0]=${arr[0]}\n    for ((i=1; i<${#arr[@]}; i++));\
    \ do\n        val=${arr[i]}\n        if ((val > max_val)); then\n            max_val=$val\n\
    \            max[i]=$val\n        else\n            max[i]=$max_val\n        fi\n\
    \    done\n    for ((i=0; i<${#max[@]}; i++)); do\n        res[i]=\"\\\"${max[i]}\\\
    \"\"\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a result\n    local max=${list[0]}\n    result+=($max)\n    for i\
    \ in \"${list[@]:1}\"; do\n        if (( i > max )); then\n            max=$i\n\
    \        fi\n        result+=($max)\n    done\n    echo \"${result[@]}\"\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo $max\n    done\n}\n\ncandidate() {\n    rolling_max \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\"\
    \ ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr=($1)\n\
    \    local max=${arr[0]}\n    local -a result=()\n    for i in \"${arr[@]}\";\
    \ do\n        if [[ $i -gt $max ]]; then\n            max=$i\n        fi\n   \
    \     result+=($max)\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ \"$i\" -gt \"$max\" ]]; then\n           \
    \ max=\"$i\"\n        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    local -i curr\n    arr=($1)\n    max=${arr[0]}\n\
    \    echo -n \"[\"\n    for ((i=0; i<${#arr[@]}; i++)); do\n        curr=${arr[$i]}\n\
    \        if (( curr > max )); then\n            max=$curr\n        fi\n      \
    \  echo -n \"\\\"$max\\\"\"\n        if (( i < ${#arr[@]}-1 )); then\n       \
    \     echo -n \", \"\n        fi\n    done\n    echo \"]\"\n}\n\ncandidate() {\n\
    \    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n    rolling_max\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") =\
    \ \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -a max\n    local -i i=0\n    local -i j=0\n    local -i k=0\n    local\
    \ -i len=0\n    local -i max_len=0\n    local -i max_len_prev=0\n    local -i\
    \ max_len_prev_prev=0\n    local -i max_len_prev_prev_prev=0\n    local -i max_len_prev_prev_prev_prev=0\n\
    \    local -i max_len_prev_prev_prev_prev_prev=0\n    local -i max_len_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_len_prev_prev_prev_prev_prev_prev_prev=0\n    local -i max_len_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i\
    \ max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n \
    \   local -i max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev\n}\n\ncandidate()\
    \ {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ \"$i\" -gt \"$max\" ]; then\n            max=$i\n\
    \        fi\n        echo -n '\"'$max'\"'\n        echo -n ' '\n    done\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=($max)\n  \
    \  for i in ${list[@]:1}; do\n        if (( i > max )); then\n            max=$i\n\
    \        fi\n        max_list+=($max)\n    done\n    echo \"${max_list[@]}\"\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo -n '\"'$max'\"'\n        echo -n ' '\n    done\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [ $i -gt $max ]; then\n            max=$i\n \
    \       fi\n        echo -n '\"'$max'\"'\n        echo -n ' '\n    done\n}\n\n\
    candidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate\
    \ \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3\
    \ 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a list=($1)\n\
    \    local -a max_list=()\n    local max=${list[0]}\n    max_list+=($max)\n  \
    \  for i in \"${list[@]:1}\"; do\n        if [[ $i -gt $max ]]; then\n       \
    \     max=$i\n        fi\n        max_list+=($max)\n    done\n    echo \"${max_list[@]}\"\
    \n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local max=0\n\
    \    for i in $1; do\n        if [[ $i -gt $max ]]; then\n            max=$i\n\
    \        fi\n        echo \"\\\"$max\\\"\"\n    done\n}\n\ncandidate() {\n   \
    \ rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\") = \"\
    \" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"\
    4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100\
    \ 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 0
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n  local -a list=($1)\n\
    \  local -a max_list=()\n  local max=${list[0]}\n  for i in \"${list[@]}\"; do\n\
    \    if (( i > max )); then\n      max=$i\n    fi\n    max_list+=($max)\n  done\n\
    \  echo \"${max_list[@]}\"\n}\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 2 3 4\" ]]\n    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n\
    \    [[ $(candidate \"3 2 3 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660017601
- exit_code: 1
  program: "#!/bin/bash\n# From a given list of integers, generate a list of rolling\
    \ maximum element found until given moment\n# in the sequence.\n# >>> $(rolling_max\
    \ \"1 2 3 2 3 4 2\")\n# ['\"1\"', '\"2\"', '\"3\"', '\"3\"', '\"3\"', '\"4\"',\
    \ '\"4\"']\n#\n# $1 is a space-separated list\nrolling_max() {\n    local -a arr\n\
    \    local -i i\n    local -i max\n    local -i len\n\n    arr=($1)\n    len=${#arr[@]}\n\
    \    max=0\n    for ((i=0; i<len; i++)); do\n        if ((arr[i] > max)); then\n\
    \            max=${arr[i]}\n        fi\n        echo -n \"\\\"$max\\\"\"\n   \
    \     if ((i < len-1)); then\n            echo -n \", \"\n        fi\n    done\n\
    }\n\ncandidate() {\n    rolling_max \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\") = \"1 2 3 4\" ]]\n\
    \    [[ $(candidate \"4 3 2 1\") = \"4 4 4 4\" ]]\n    [[ $(candidate \"3 2 3\
    \ 100 3\") = \"3 3 3 100 100\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660017601

name: HumanEval_144_simplify
language: sh
prompt: "#!/bin/bash\n# Your task is to implement a function that will simplify the\
  \ expression\n# x * n. The function returns True if x * n evaluates to a whole number\
  \ and False\n# otherwise. Both x and n, are string representation of a fraction,\
  \ and have the following format,\n# <numerator>/<denominator> where both numerator\
  \ and denominator are positive whole numbers.\n# You can assume that x, and n are\
  \ valid fractions, and do not have zero as denominator.\n# >>> $(simplify \"1/5\"\
  \ \"5/1\")\n# \"true\"\n# >>> $(simplify \"1/6\" \"2/1\")\n# \"false\"\n# >>> $(simplify\
  \ \"7/10\" \"10/2\")\n# \"false\"\n#\n# $1 is a string\n# $2 is a string\nsimplify()\
  \ {\n"
tests: "}\n\ncandidate() {\n    simplify \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"1/5\" \"5/1\") = \"true\" ]]\n    [[ $(candidate \"1/6\" \"2/1\"\
  ) = \"false\" ]]\n    [[ $(candidate \"5/1\" \"3/1\") = \"true\" ]]\n    [[ $(candidate\
  \ \"7/10\" \"10/2\") = \"false\" ]]\n    [[ $(candidate \"2/10\" \"50/10\") = \"\
  true\" ]]\n    [[ $(candidate \"7/2\" \"4/2\") = \"true\" ]]\n    [[ $(candidate\
  \ \"11/6\" \"6/1\") = \"true\" ]]\n    [[ $(candidate \"2/3\" \"5/2\") = \"false\"\
  \ ]]\n    [[ $(candidate \"5/2\" \"3/5\") = \"false\" ]]\n    [[ $(candidate \"\
  2/4\" \"8/4\") = \"true\" ]]\n    [[ $(candidate \"2/4\" \"4/2\") = \"true\" ]]\n\
  \    [[ $(candidate \"1/5\" \"5/1\") = \"true\" ]]\n    [[ $(candidate \"1/5\" \"\
  1/5\") = \"false\" ]]\n}\n\nrun_test"
completions: ["  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  local x=$1\n\
    \  local n=$2\n  local x_numerator=$(echo $x | cut -d'/' -f1)\n  local x_denominator=$(echo\
    \ $x | cut -d'/' -f2)\n  local n_numerator=$(echo $n | cut -d'/' -f1)\n  local\
    \ n_denominator=$(echo $n | cut -d'/' -f2)\n  local x_n_numerator=$(($x_numerator\
    \ * $n_numerator))\n  local x_n_denominator=$(($x_denominator * $n_denominator))\n\
    \  local gcd=$(gcd $x_n_numerator $x_n_denominator)\n  local x_n_numerator=$(($x_n_numerator\
    \ / $gcd))\n  local x_n_denominator=$(($x_n_denominator / $gcd))\n  if [ $x_n_numerator\
    \ -eq $x_n_denominator ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"", "    #\
    \ Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"true\"", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # To debug: echo \"Debug messages...\" >&2\n    echo \"true\"", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # Example: echo \"Hello world\"\n    local x=$1\n    local n=$2\n    local\
    \ x_numerator=$(echo $x | cut -d/ -f1)\n    local x_denominator=$(echo $x | cut\
    \ -d/ -f2)\n    local n_numerator=$(echo $n | cut -d/ -f1)\n    local n_denominator=$(echo\
    \ $n | cut -d/ -f2)\n    local result=$(echo \"$x_numerator * $n_numerator / $x_denominator\
    \ * $n_denominator\" | bc)\n    if [ $(echo \"$result % 1\" | bc) -eq 0 ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # To debug: echo \"Debug messages...\" >&2\n    echo \"true\"", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # To debug: echo \"Debug messages...\" >&2\n    a=$(echo $1 | cut -d/ -f1)\n\
    \    b=$(echo $1 | cut -d/ -f2)\n    c=$(echo $2 | cut -d/ -f1)\n    d=$(echo\
    \ $2 | cut -d/ -f2)\n    e=$(echo \"scale=2; $a/$b * $c/$d\" | bc)\n    f=$(echo\
    \ \"scale=2; $e - ${e%.*}\" | bc)\n    if [ $f -eq 0 ]\n    then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # Example: echo\
    \ \"Hello world\"\n  echo \"true\"", "  # your code here\n  local x=$1\n  local\
    \ n=$2\n  local numerator=$(echo $x | cut -d'/' -f1)\n  local denominator=$(echo\
    \ $x | cut -d'/' -f2)\n  local numerator2=$(echo $n | cut -d'/' -f1)\n  local\
    \ denominator2=$(echo $n | cut -d'/' -f2)\n  local result=$(echo \"$numerator\
    \ * $numerator2 / $denominator * $denominator2\" | bc)\n  local result2=$(echo\
    \ \"$result % 1\" | bc)\n  if [ \"$result2\" == \"0\" ]; then\n    echo \"true\"\
    \n  else\n    echo \"false\"\n  fi", "  # Write your code here\n  # To print results\
    \ to the standard output you can use echo\n  # To debug: echo \"Debug messages...\"\
    \ >&2\n  echo \"true\"", "    # Write your code here\n    # To print results to\
    \ the standard output you can use echo\n    # Example: echo \"Hello world\"\n\
    \    echo \"true\"", "    # Write your code here\n    # To print results to the\
    \ standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo\
    \ \"true\"", '  echo "true"', "  # Write your code here\n  # To print results\
    \ to the standard output you can use echo\n  # To debug: echo \"Debug messages...\"\
    \ >&2\n  echo \"true\"", "  # Write your code here\n  # To print results to the\
    \ standard output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #", "  if [[ $1 == \"0/1\" ]]; then\n    echo \"false\"\n  \
    \  return\n  fi\n  if [[ $2 == \"0/1\" ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $1 == \"1/1\" ]]; then\n    echo \"true\"\n    return\n  fi\n \
    \ if [[ $2 == \"1/1\" ]]; then\n    echo \"true\"\n    return\n  fi\n  if [[ $1\
    \ == $2 ]]; then\n    echo \"true\"\n    return\n  fi\n  if [[ $1 == \"1/2\" ]];\
    \ then\n    if [[ $2 == \"2/1\" ]]; then\n      echo \"true\"\n      return\n\
    \    fi\n    if [[ $2 == \"1/4\" ]]; then\n      echo \"true\"\n      return\n\
    \    fi\n    if [[ $2 == \"1/3\" ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n    if [[ $2 == \"1/5\" ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n    if [[ $2 == \"1/6\" ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n    if [[ $2 == \"1/7\" ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n    if [[ $2 == \"1/8\" ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n    if [[ $2 == \"1/9\" ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n    if [[ $2 == \"1/10\" ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n  if [[ $1 == \"1/3\" ]]; then\n    if [[ $2 == \"2/1\" ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n    if [[ $2 == \"1/4\" ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n    if [[ $2 == \"1/5\" ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n    if [[ $2 == \"1/6\" ]]; then\n\
    \      echo \"true\"\n     ", "  # Write your code here\n  # To print results\
    \ to the standard output you can use echo\n  # Example: echo \"Hello world\"\n\
    \  #echo \"Hello world\"\n  local numerator1=$(echo $1 | cut -d'/' -f1)\n  local\
    \ denominator1=$(echo $1 | cut -d'/' -f2)\n  local numerator2=$(echo $2 | cut\
    \ -d'/' -f1)\n  local denominator2=$(echo $2 | cut -d'/' -f2)\n  local result=$(echo\
    \ \"scale=10; $numerator1 * $numerator2 / $denominator1 / $denominator2\" | bc)\n\
    \  local int_result=$(echo \"scale=0; $result\" | bc)\n  if [ $result == $int_result\
    \ ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi", "  # Write your\
    \ code here\n  # To print results to the standard output you can use echo\n  #\
    \ To debug: echo \"Debug messages...\" >&2\n  echo \"true\"", "  local x=$1\n\
    \  local n=$2\n  local x_numerator=$(echo $x | cut -d'/' -f1)\n  local x_denominator=$(echo\
    \ $x | cut -d'/' -f2)\n  local n_numerator=$(echo $n | cut -d'/' -f1)\n  local\
    \ n_denominator=$(echo $n | cut -d'/' -f2)\n  local x_n_numerator=$(($x_numerator\
    \ * $n_numerator))\n  local x_n_denominator=$(($x_denominator * $n_denominator))\n\
    \  local x_n_gcd=$(gcd $x_n_numerator $x_n_denominator)\n  local x_n_numerator_simplified=$(($x_n_numerator\
    \ / $x_n_gcd))\n  local x_n_denominator_simplified=$(($x_n_denominator / $x_n_gcd))\n\
    \  if [ $x_n_numerator_simplified -eq $x_n_denominator_simplified ]; then\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # To debug: echo\
    \ \"Debug messages...\" >&2\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # To debug: echo\
    \ \"Debug messages...\" >&2\n  echo \"true\"", "    # Write your code here\n \
    \   # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"true\"", "  # Write your code here\n  # To\
    \ print results to the standard output you can use echo\n  # Example: echo \"\
    Hello world\"\n  echo \"true\"", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # Example: echo \"Hello world\"\
    \n    echo \"true\"", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # Example: echo \"Hello world\"\n  echo \"true\"",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # To debug: echo \"Debug messages...\" >&2\n  local x=$1\n  local n=$2\n\
    \  local x_numerator=$(echo $x | cut -d/ -f1)\n  local x_denominator=$(echo $x\
    \ | cut -d/ -f2)\n  local n_numerator=$(echo $n | cut -d/ -f1)\n  local n_denominator=$(echo\
    \ $n | cut -d/ -f2)\n  local result=$(echo \"scale=2; $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator)\" | bc)\n  local result_int=$(echo $result\
    \ | cut -d. -f1)\n  if [ \"$result\" == \"$result_int\" ]; then\n    echo \"true\"\
    \n  else\n    echo \"false\"\n  fi", "  # Write your code here\n  # To print results\
    \ to the standard output you can use echo\n  # Example: echo \"Hello world\"\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n", "  # Write your code here\n  # To print results to\
    \ the standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo\
    \ \"true\"", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  #\n  # echo\
    \ \"true\"\n  # echo \"false\"\n  # echo \"true\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"true\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"", "  local x=$1\n\
    \  local n=$2\n  local x_numerator=$(echo $x | cut -d/ -f1)\n  local x_denominator=$(echo\
    \ $x | cut -d/ -f2)\n  local n_numerator=$(echo $n | cut -d/ -f1)\n  local n_denominator=$(echo\
    \ $n | cut -d/ -f2)\n  local result=$(echo \"scale=0; $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator)\" | bc)\n  if [ $result -eq 0 ]; then\n\
    \    echo \"false\"\n  else\n    echo \"true\"\n  fi", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # To debug your\
    \ solution, you can write to the standard error\n  # Standard error is used by\
    \ the backtester to display your errors.\n  # echo \"Debug messages...\" >&2\n\
    \  echo \"true\"", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # Example: echo \"Hello world\"\n  echo \"Hello world\"",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"", "  # Write\
    \ your code here\n  # To print results to the standard output you can use echo\n\
    \  # Example: echo \"Hello world\"\n  echo \"true\"", "  # your code here\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n ", "  # Write your\
    \ code here\n  # To print results to the standard output you can use echo\n  #\
    \ To debug: echo \"Debug messages...\" >&2\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #", "  # Write your\
    \ code here\n  # To print results to the standard output you can use echo\n  #\
    \ Example: echo \"Hello world\"\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n", "  # Write your\
    \ code here\n  # To print results to the standard output you can use echo\n  #\
    \ Example: echo \"Hello world\"\n  echo \"true\"", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # To debug: echo\
    \ \"Debug messages...\" >&2\n  echo \"true\"", "  local x=$1\n  local n=$2\n \
    \ local x_numerator=$(echo $x | cut -d'/' -f1)\n  local x_denominator=$(echo $x\
    \ | cut -d'/' -f2)\n  local n_numerator=$(echo $n | cut -d'/' -f1)\n  local n_denominator=$(echo\
    \ $n | cut -d'/' -f2)\n  local result=$(echo \"scale=2; $x_numerator * $n_numerator\
    \ / $x_denominator / $n_denominator\" | bc)\n  if [[ $result == *.* ]]; then\n\
    \    echo \"false\"\n  else\n    echo \"true\"\n  fi", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # To debug: echo\
    \ \"Debug messages...\" >&2\n  local x=$1\n  local n=$2\n  local x_numerator=$(echo\
    \ $x | cut -d/ -f1)\n  local x_denominator=$(echo $x | cut -d/ -f2)\n  local n_numerator=$(echo\
    \ $n | cut -d/ -f1)\n  local n_denominator=$(echo $n | cut -d/ -f2)\n  local result=$(echo\
    \ \"scale=0; $x_numerator * $n_numerator / ($x_denominator * $n_denominator)\"\
    \ | bc)\n  if [[ $result == \"0\" ]]; then\n    echo \"false\"\n  else\n    echo\
    \ \"true\"\n  fi", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo\
    \ \"true\"", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # Example: echo \"Hello world\"\n  #\n  # To access arguments\
    \ from the command line you can use variables $1, $2, etc.\n  # Example: echo\
    \ \"Argument: $1\"\n  #\n  # To access the output of the previous command you\
    \ can use the variable $?\n  # Example: echo \"Command executed correctly: $?\"\
    \n  #\n  # To access the current script arguments you can use the variable $@\n\
    \  # Example: echo \"Script arguments: $@\"\n  #\n  # To access the current script\
    \ name you can use the variable $0\n  # Example: echo \"Script name: $0\"\n  #\n\
    \  # To access the current script directory you can use the variable $PWD\n  #\
    \ Example: echo \"Script directory: $PWD\"\n  #\n  # To access the current script\
    \ user you can use the variable $USER\n  # Example: echo \"Script user: $USER\"\
    \n  #\n  # To access the current script hostname you can use the variable $HOSTNAME\n\
    \  # Example: echo \"Script hostname: $HOSTNAME\"\n  #\n  # To access the current\
    \ script PID you can use the variable $$\n  # Example: echo \"Script PID: $$\"\
    \n  #\n  # To access the current script exit code you can use the variable $?\n\
    \  # Example: echo \"Script exit code: $?\"\n  #\n  # To access the current script\
    \ arguments count you can use the variable $#\n  # Example: echo \"Script arguments\
    \ count: $#\"\n  #\n  # To access the current script arguments you can use the\
    \ variable $@\n  # Example: echo \"Script arguments: $@\"\n  #\n  # To access\
    \ the current script arguments as one string you can use the variable $*\n  #\
    \ Example: echo \"Script arguments: $*\"\n  #\n  # To access the current script\
    \ arguments as an array you can use the variable $@\n  # Example: echo \"Script\
    \ arguments: ${@[@]}\"\n  #\n  # To access the current script arguments as an\
    \ array you can use the variable $@\n  # Example: echo \"Script arguments: ${@[@]}\"\
    \n", "    # Write your code here\n    # To print results to the standard output\
    \ you can use echo\n    # Example: echo \"Hello world\"\n    x=$1\n    n=$2\n\
    \    x_num=`echo $x | cut -d'/' -f1`\n    x_den=`echo $x | cut -d'/' -f2`\n  \
    \  n_num=`echo $n | cut -d'/' -f1`\n    n_den=`echo $n | cut -d'/' -f2`\n    x_num=$((x_num*n_num))\n\
    \    x_den=$((x_den*n_den))\n    if [ $x_num -eq $x_den ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "  # Write your code here\n\
    \  # To debug: echo \"Debug messages...\" >&2\n  if [ $# -ne 2 ]; then\n    echo\
    \ \"Usage: $0 <x> <n>\"\n    exit 1\n  fi\n  x=$1\n  n=$2\n  x_num=$(echo $x |\
    \ cut -d/ -f1)\n  x_den=$(echo $x | cut -d/ -f2)\n  n_num=$(echo $n | cut -d/\
    \ -f1)\n  n_den=$(echo $n | cut -d/ -f2)\n  x_num=$(($x_num * $n_den))\n  n_num=$(($n_num\
    \ * $x_den))\n  if [ $x_num -eq $n_num ]; then\n    echo \"true\"\n  else\n  \
    \  echo \"false\"\n  fi", "    # Write your code here\n    # To print results\
    \ to the standard output you can use echo\n    # To debug: echo \"Debug messages...\"\
    \ >&2\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #", "  # Write your code here\n  # To\
    \ print results to the standard output you can use echo\n  # To debug: echo \"\
    Debug messages...\" >&2\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #", "  # Write your code here\n  # To\
    \ print results to the standard output you can use echo\n  # Example: echo \"\
    Hello world\"\n  echo \"true\"", "  # Write your code here\n  # To print results\
    \ to the standard output you can use echo\n  # Example: echo \"Hello world\"\n\
    \  echo \"true\"", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo\
    \ \"true\"", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    a=$(echo $1\
    \ | sed 's/\\// /g')\n    b=$(echo $2 | sed 's/\\// /g')\n    c=$(echo \"scale=0;\
    \ $a * $b\" | bc)\n    d=$(echo \"scale=0; $a * $b\" | bc -l)\n    if [ \"$c\"\
    \ == \"$d\" ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n\
    \    fi", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # To debug: echo \"Debug messages...\" >&2\n  \
    \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #", "  # Write your code here\n  # To print results\
    \ to the standard output you can use echo\n  # To debug: echo \"Debug messages...\"\
    \ >&2\n  echo \"true\"", "  # Write your code here\n  # To print results to the\
    \ standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo\
    \ \"true\"", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # Example: echo \"Hello world\"\n  echo \"true\"", "  #\
    \ Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # To debug: echo \"Debug messages...\" >&2\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #", " \
    \ # Write your code here\n  # To print results to the standard output you can\
    \ use echo\n  # Example: echo \"Hello world\"\n  echo \"true\"", "  # Write your\
    \ code here\n  # To print results to the standard output you can use echo\n  #\
    \ Example: echo \"Hello world\"\n  echo \"true\"", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # Example: echo\
    \ \"Hello world\"\n  echo \"true\"", "  # Write your code here\n  # To print results\
    \ to the standard output you can use echo\n  # To debug: echo \"Debug messages...\"\
    \ >&2\n  echo \"true\"", "    # Write your code here\n    # To print results to\
    \ the standard output you can use echo\n    # Example: echo \"Hello world\"\n\
    \    echo \"true\"", "  # your code here\n  # hint: you can use bc to do floating\
    \ point arithmetic\n  # hint: you can use awk to parse the strings\n  # hint:\
    \ you can use awk to do floating point arithmetic\n  # hint: you can use awk to\
    \ do integer arithmetic\n  # hint: you can use awk to do modulo arithmetic\n \
    \ # hint: you can use awk to do string comparison\n  # hint: you can use awk to\
    \ do boolean logic\n  # hint: you can use awk to print\n  # hint: you can use\
    \ awk to do if-then-else\n  # hint: you can use awk to do while loops\n  # hint:\
    \ you can use awk to do for loops\n  # hint: you can use awk to do functions\n\
    \  # hint: you can use awk to do arrays\n  # hint: you can use awk to do associative\
    \ arrays\n  # hint: you can use awk to do regular expressions\n  # hint: you can\
    \ use awk to do math functions\n  # hint: you can use awk to do trigonometric\
    \ functions\n  # hint: you can use awk to do random numbers\n  # hint: you can\
    \ use awk to do system calls\n  # hint: you can use awk to do file I/O\n  # hint:\
    \ you can use awk to do string manipulation\n  # hint: you can use awk to do array\
    \ manipulation\n  # hint: you can use awk to do associative array manipulation\n\
    \  # hint: you can use awk to do bitwise operations\n  # hint: you can use awk\
    \ to do bit shifting\n  # hint: you can use awk to do bit masking\n  # hint: you\
    \ can use awk to do bitwise boolean logic\n  # hint: you can use awk to do bitwise\
    \ arithmetic\n  # hint: you can use awk to do bitwise comparison\n  # hint: you\
    \ can use awk to do bitwise shift arithmetic\n  # hint: you can use awk to do\
    \ bitwise shift comparison\n  # hint: you can use awk to do bitwise shift boolean\
    \ logic\n  # hint: you can use awk to do bitwise shift arithmetic\n  # hint: you\
    \ can use awk to do bitwise shift comparison\n  # hint:", "  # Write your code\
    \ here\n  # To print results to the standard output you can use echo\n  # To debug:\
    \ echo \"Debug messages...\" >&2\n  if [ $# -ne 2 ]; then\n    echo \"Usage: $0\
    \ <x> <n>\"\n    exit 1\n  fi\n\n  x=$1\n  n=$2\n\n  x_numerator=$(echo $x | cut\
    \ -d '/' -f 1)\n  x_denominator=$(echo $x | cut -d '/' -f 2)\n\n  n_numerator=$(echo\
    \ $n | cut -d '/' -f 1)\n  n_denominator=$(echo $n | cut -d '/' -f 2)\n\n  # echo\
    \ \"x_numerator: $x_numerator\"\n  # echo \"x_denominator: $x_denominator\"\n\
    \  # echo \"n_numerator: $n_numerator\"\n  # echo \"n_denominator: $n_denominator\"\
    \n\n  x_numerator=$((x_numerator * n_denominator))\n  x_denominator=$((x_denominator\
    \ * n_numerator))\n\n  # echo \"x_numerator: $x_numerator\"\n  # echo \"x_denominator:\
    \ $x_denominator\"\n\n  if [ $x_numerator -eq $x_denominator ]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi", "  # Write your code here\n  #\
    \ To debug: echo \"Debug messages...\" >&2\n  echo \"false\"", "  # Write your\
    \ code here\n  # To print results to the standard output you can use echo\n  #\
    \ To debug: echo \"Debug messages...\" >&2\n  echo \"true\"", "  # Write your\
    \ code here\n  # To print results to the standard output you can use echo\n  #\
    \ To debug: echo \"Debug messages...\" >&2\n  echo \"true\"", "  local x=$1\n\
    \  local n=$2\n  local x_numerator=$(echo $x | cut -d/ -f1)\n  local x_denominator=$(echo\
    \ $x | cut -d/ -f2)\n  local n_numerator=$(echo $n | cut -d/ -f1)\n  local n_denominator=$(echo\
    \ $n | cut -d/ -f2)\n  local result=$(echo \"scale=0; $x_numerator * $n_numerator\
    \ / ($x_denominator * $n_denominator)\" | bc)\n  if [ $result -eq 0 ]; then\n\
    \    echo \"false\"\n  else\n    echo \"true\"\n  fi", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # Example: echo\
    \ \"Hello world\"\n  echo \"false\"", "  # Write your code here\n  # To print\
    \ results to the standard output you can use echo\n  # Example: echo \"Hello world\"\
    \n  echo \"true\"", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo\
    \ \"true\"", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"",
  "  # Write your code here\n  # Use echo to print to stdout\n  echo \"true\"", " \
    \ # Write your code here\n  # To print results to the standard output you can\
    \ use echo\n  # To debug: echo \"Debug messages...\" >&2\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #",
  "  # your code here\n  local x=$1\n  local n=$2\n  local x_num=$(echo $x | cut -d/\
    \ -f1)\n  local x_den=$(echo $x | cut -d/ -f2)\n  local n_num=$(echo $n | cut\
    \ -d/ -f1)\n  local n_den=$(echo $n | cut -d/ -f2)\n  local res=$(echo \"scale=0;\
    \ $x_num * $n_num / ($x_den * $n_den)\" | bc)\n  if [ $res -eq 0 ]; then\n   \
    \ echo \"false\"\n  else\n    echo \"true\"\n  fi", "  # Write your code here\n\
    \  # Use echo to print to stdout\n  #echo \"true\"\n  #echo \"false\"\n  #echo\
    \ \"true\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"\
    false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\
    \n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"", "  # Write\
    \ your code here\n  # To debug: echo \"Debug messages...\" >&2\n  if [ $# -ne\
    \ 2 ]; then\n    echo \"Usage: $0 <x> <n>\"\n    return 1\n  fi\n  local x=$1\n\
    \  local n=$2\n  local x_num=$(echo $x | cut -d/ -f1)\n  local x_den=$(echo $x\
    \ | cut -d/ -f2)\n  local n_num=$(echo $n | cut -d/ -f1)\n  local n_den=$(echo\
    \ $n | cut -d/ -f2)\n  local prod_num=$((x_num * n_num))\n  local prod_den=$((x_den\
    \ * n_den))\n  local gcd=$(gcd $prod_num $prod_den)\n  local prod_num=$((prod_num\
    \ / gcd))\n  local prod_den=$((prod_den / gcd))\n  if [ $prod_den -eq 1 ]; then\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # To debug: echo\
    \ \"Debug messages...\" >&2\n  echo \"true\"", "  local x=$1\n  local n=$2\n \
    \ local x_numerator=$(echo $x | cut -d/ -f1)\n  local x_denominator=$(echo $x\
    \ | cut -d/ -f2)\n  local n_numerator=$(echo $n | cut -d/ -f1)\n  local n_denominator=$(echo\
    \ $n | cut -d/ -f2)\n  local x_n_numerator=$(($x_numerator * $n_numerator))\n\
    \  local x_n_denominator=$(($x_denominator * $n_denominator))\n  local gcd=$(gcd\
    \ $x_n_numerator $x_n_denominator)\n  local x_n_numerator=$(($x_n_numerator /\
    \ $gcd))\n  local x_n_denominator=$(($x_n_denominator / $gcd))\n  if [ $x_n_numerator\
    \ -eq $x_n_denominator ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"", "  # Write\
    \ your code here\n  # To print results to the standard output you can use echo\n\
    \  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # To debug: echo \"Debug messages...\" >&2\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # To debug: echo \"Debug messages...\" >&2\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #", " \
    \ # Write your code here\n  # To print results to the standard output you can\
    \ use echo\n  # Example: echo \"Hello world\"\n  echo \"true\"", "    if [[ $1\
    \ == *\"/\"* ]] && [[ $2 == *\"/\"* ]]; then\n        # echo \"Both are fractions\"\
    \n        # echo \"x is $1\"\n        # echo \"n is $2\"\n        # echo \"x *\
    \ n is $1 * $2\"\n        # echo \"x * n is $(($1 * $2))\"\n        # echo \"\
    x * n is $(($1 * $2))\"\n        # echo \"x * n is $(($1 * $2))\"\n        # echo\
    \ \"x * n is $(($1 * $2))\"\n        # echo \"x * n is $(($1 * $2))\"\n      \
    \  # echo \"x * n is $(($1 * $2))\"\n        # echo \"x * n is $(($1 * $2))\"\n\
    \        # echo \"x * n is $(($1 * $2))\"\n        # echo \"x * n is $(($1 * $2))\"\
    \n        # echo \"x * n is $(($1 * $2))\"\n        # echo \"x * n is $(($1 *\
    \ $2))\"\n        # echo \"x * n is $(($1 * $2))\"\n        # echo \"x * n is\
    \ $(($1 * $2))\"\n        # echo \"x * n is $(($1 * $2))\"\n        # echo \"\
    x * n is $(($1 * $2))\"\n        # echo \"x * n is $(($1 * $2))\"\n        # echo\
    \ \"x * n is $(($1 * $2))\"\n        # echo \"x * n is $(($1 * $2))\"\n      \
    \  # echo \"x * n is $(($1 * $2))\"\n        # echo \"x * n is $(($1 * $2))\"\n\
    \        # echo \"x * n is $(($1 * $2))\"\n        # echo \"x * n is $(($1 * $2))\"\
    \n        # echo \"x * n is $(($1 * $2))\"\n        # echo \"x * n is $(($1 *\
    \ $2))\"\n        # echo \"x * n is $(($1 * $2))\"\n        # echo \"x * n is\
    \ $(($1 * $2))\"\n", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # Example: echo \"Hello world\"\n  if [ $# -ne 2\
    \ ]; then\n    echo \"Usage: $0 <x> <n>\"\n    exit 1\n  fi\n\n  local x=$1\n\
    \  local n=$2\n\n  local x_numerator=$(echo $x | cut -d '/' -f 1)\n  local x_denominator=$(echo\
    \ $x | cut -d '/' -f 2)\n  local n_numerator=$(echo $n | cut -d '/' -f 1)\n  local\
    \ n_denominator=$(echo $n | cut -d '/' -f 2)\n\n  local x_numerator_n_denominator=$((x_numerator\
    \ * n_denominator))\n  local n_numerator_x_denominator=$((n_numerator * x_denominator))\n\
    \n  if [ $x_numerator_n_denominator -eq $n_numerator_x_denominator ]; then\n \
    \   echo \"true\"\n  else\n    echo \"false\"\n  fi", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # Example: echo\
    \ \"Hello world\"\n  echo \"true\"", "  # Write your code here\n  # To print results\
    \ to the standard output you can use echo\n  # To debug: echo \"Debug messages...\"\
    \ >&2\n  local x=$1\n  local n=$2\n  local x_numerator=$(echo $x | cut -d'/' -f1)\n\
    \  local x_denominator=$(echo $x | cut -d'/' -f2)\n  local n_numerator=$(echo\
    \ $n | cut -d'/' -f1)\n  local n_denominator=$(echo $n | cut -d'/' -f2)\n  local\
    \ result=$(echo \"scale=2; $x_numerator * $n_numerator / ($x_denominator * $n_denominator)\"\
    \ | bc)\n  local result_int=$(echo $result | cut -d'.' -f1)\n  if [ \"$result\"\
    \ == \"$result_int\" ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi", "  # Your code here\n  #echo \"true\"\n  #echo \"false\"\n  #echo \"false\"\
    \n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n ", "    # Write your code here\n    # To print results to\
    \ the standard output you can use echo\n    # To debug: echo \"Debug messages...\"\
    \ >&2\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #", "  # Write your code here\n  # To\
    \ print results to the standard output you can use echo\n  # To debug: echo \"\
    Debug messages...\" >&2\n  #echo \"true\"\n  #echo \"false\"\n  #echo \"true\"\
    \n  #echo \"false\"\n  #echo \"false\"\n  #echo \"true\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n", "  # Write your code here\n  # To print results to the\
    \ standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo\
    \ \"true\"", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  if [ $# -ne\
    \ 2 ]; then\n    echo \"false\"\n    return\n  fi\n  if [ \"$1\" == \"0/1\" ];\
    \ then\n    echo \"false\"\n    return\n  fi\n  if [ \"$2\" == \"0/1\" ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [ \"$1\" == \"1/1\" ]; then\n    echo\
    \ \"true\"\n    return\n  fi\n  if [ \"$2\" == \"1/1\" ]; then\n    echo \"true\"\
    \n    return\n  fi\n  if [ \"$1\" == \"1/2\" ]; then\n    if [ \"$2\" == \"1/2\"\
    \ ]; then\n      echo \"true\"\n      return\n    fi\n    if [ \"$2\" == \"2/1\"\
    \ ]; then\n      echo \"true\"\n      return\n    fi\n    if [ \"$2\" == \"2/2\"\
    \ ]; then\n      echo \"true\"\n      return\n    fi\n    if [ \"$2\" == \"3/2\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n    if [ \"$2\" == \"4/2\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n    if [ \"$2\" == \"5/2\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n    if [ \"$2\" == \"6/2\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n    if [ \"$2\" == \"7/2\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n    if [ \"$2\" == \"8/2\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n    if [ \"$2\" == \"9/2\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n    if [ \"$2\" == \"10/2\"\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  if [ \"$1\" ==\
    \ \"2/1\" ]; then\n    if [ \"$2\" == \"1/2\" ]; then\n", "  # Write your code\
    \ here\n  # To print results to the standard output you can use echo\n  # To debug:\
    \ echo \"Debug messages...\" >&2\n  echo \"true\"", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # To debug: echo\
    \ \"Debug messages...\" >&2\n  local x=$1\n  local n=$2\n  local x_num=$(echo\
    \ $x | cut -d\"/\" -f1)\n  local x_den=$(echo $x | cut -d\"/\" -f2)\n  local n_num=$(echo\
    \ $n | cut -d\"/\" -f1)\n  local n_den=$(echo $n | cut -d\"/\" -f2)\n  local x_n_num=$(($x_num\
    \ * $n_num))\n  local x_n_den=$(($x_den * $n_den))\n  local gcd=$(gcd $x_n_num\
    \ $x_n_den)\n  local x_n_num=$(($x_n_num / $gcd))\n  local x_n_den=$(($x_n_den\
    \ / $gcd))\n  if [ $x_n_num -eq $x_n_den ]; then\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi", "  # Write your code here\n  # To print results to\
    \ the standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo\
    \ \"true\"", "  # Write your code here\n  echo \"true\"", "  # Write your code\
    \ here\n  # To print results to the standard output you can use echo\n  # Example:\
    \ echo \"Hello world\"\n  echo \"true\"", "    # Write your code here\n    # To\
    \ print results to the standard output you can use echo\n    # Example: echo \"\
    Hello world\"\n    echo \"true\"", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo \"false\"", "  # Write your code here\n  # To print results\
    \ to the standard output you can use echo\n  # Example: echo \"Hello world\"\n\
    \  echo \"true\"", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo\
    \ \"false\"", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo\
    \ \"true\"", "  # Write your code here\n  # To debug: echo \"Debug messages...\"\
    \ >&2\n  #echo \"Debug messages...\" >&2\n  #echo \"$1\"\n  #echo \"$2\"\n  #echo\
    \ \"$1\" | sed 's/\\// /g'\n  #echo \"$2\" | sed 's/\\// /g'\n  #echo \"$1\" |\
    \ sed 's/\\// /g' | awk '{print $1}'\n  #echo \"$1\" | sed 's/\\// /g' | awk '{print\
    \ $2}'\n  #echo \"$2\" | sed 's/\\// /g' | awk '{print $1}'\n  #echo \"$2\" |\
    \ sed 's/\\// /g' | awk '{print $2}'\n  #echo \"$1\" | sed 's/\\// /g' | awk '{print\
    \ $1}' | bc\n  #echo \"$1\" | sed 's/\\// /g' | awk '{print $2}' | bc\n  #echo\
    \ \"$2\" | sed 's/\\// /g' | awk '{print $1}' | bc\n  #echo \"$2\" | sed 's/\\\
    // /g' | awk '{print $2}' | bc\n  #echo \"$1\" | sed 's/\\// /g' | awk '{print\
    \ $1}' | bc\n  #echo \"$1\" | sed 's/\\// /g' | awk '{print $2}' | bc\n  #echo\
    \ \"$2\" | sed 's/\\// /g' | awk '{print $1}' | bc\n  #echo \"$2\" | sed 's/\\\
    // /g' | awk '{print $2}' | bc\n  #echo \"$1\" | sed 's/\\// /g' | awk '{print\
    \ $1}' | bc\n  #echo \"$1\" | sed 's/\\// /g' | awk '{print $2}' | bc\n  #echo\
    \ \"$2\" | sed 's/\\// /g' | awk '{print $1}' | bc\n  #echo \"$", "  # Write your\
    \ code here\n  # To print results to the standard output you can use echo\n  #\
    \ Example: echo \"Hello world\"\n  echo \"true\"", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"true\"", "  # Write your code here\n  # To\
    \ print results to the standard output you can use echo\n  # To debug: echo \"\
    Debug messages...\" >&2\n  echo \"true\"", "  # Write your code here\n  # Use\
    \ echo to print to stdout\n  # Use $1 and $2 to access the arguments passed to\
    \ the function\n  # Use return to return a value\n  # Use read to read from stdin\n\
    \  # Use $() to run a command\n  # Use $var to access a variable\n  # Use ${var}\
    \ to access a variable\n  # Use ' ' to enclose a string\n  # Use \" \" to enclose\
    \ a string\n  # Use $(( )) to do math\n  # Use $[ ] to do math\n  # Use $(( ))\
    \ to do math\n  # Use $[ ] to do math\n  # Use $(( )) to do math\n  # Use $[ ]\
    \ to do math\n  # Use $(( )) to do math\n  # Use $[ ] to do math\n  # Use $((\
    \ )) to do math\n  # Use $[ ] to do math\n  # Use $(( )) to do math\n  # Use $[\
    \ ] to do math\n  # Use $(( )) to do math\n  # Use $[ ] to do math\n  # Use $((\
    \ )) to do math\n  # Use $[ ] to do math\n  # Use $(( )) to do math\n  # Use $[\
    \ ] to do math\n  # Use $(( )) to do math\n  # Use $[ ] to do math\n  # Use $((\
    \ )) to do math\n  # Use $[ ] to do math\n  # Use $(( )) to do math\n  # Use $[\
    \ ] to do math\n  # Use $(( )) to do math\n  # Use $[ ] to do math\n  # Use $((\
    \ )) to do math\n  # Use $[ ] to do math\n  # Use $(( )) to do math\n  # Use $[\
    \ ] to do math\n  # Use $(( )) to do math\n  # Use $[ ] to do math\n  # Use $((\
    \ )) to do math\n  # Use $[ ] to do math\n  # Use $(( )) to do math\n  # Use $[\
    \ ] to do math\n  # Use $(( )) to do math\n  # Use $[ ] to do math\n  # Use $((\
    \ )) to do math\n  # Use $[ ] to do math\n  # Use $((", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # To debug: echo\
    \ \"Debug messages...\" >&2\n  echo \"true\"", "    # Write your code here\n \
    \   # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"true\"", "  # Write your code here\n  # To\
    \ print results to the standard output you can use echo\n  # To debug: echo \"\
    Debug messages...\" >&2\n  echo \"false\"", "  # Write your code here\n  # To\
    \ print results to the standard output you can use echo\n  # Example: echo \"\
    Hello world\"\n  echo \"true\"", "  local x=$1\n  local n=$2\n  local x_numerator=$(echo\
    \ $x | cut -d/ -f1)\n  local x_denominator=$(echo $x | cut -d/ -f2)\n  local n_numerator=$(echo\
    \ $n | cut -d/ -f1)\n  local n_denominator=$(echo $n | cut -d/ -f2)\n  local x_n_numerator=$(($x_numerator\
    \ * $n_numerator))\n  local x_n_denominator=$(($x_denominator * $n_denominator))\n\
    \  local gcd=$(gcd $x_n_numerator $x_n_denominator)\n  local x_n_numerator=$(($x_n_numerator\
    \ / $gcd))\n  local x_n_denominator=$(($x_n_denominator / $gcd))\n  if [ $x_n_numerator\
    \ -eq $x_n_denominator ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # Example: echo \"Hello world\"\n  echo \"true\"", "  local\
    \ x=$1\n  local n=$2\n  local x_numerator=$(echo $x | cut -d'/' -f1)\n  local\
    \ x_denominator=$(echo $x | cut -d'/' -f2)\n  local n_numerator=$(echo $n | cut\
    \ -d'/' -f1)\n  local n_denominator=$(echo $n | cut -d'/' -f2)\n  local result=$(echo\
    \ \"scale=0; $x_numerator * $n_numerator / ($x_denominator * $n_denominator)\"\
    \ | bc)\n  if [[ $result -eq 0 ]]; then\n    echo \"false\"\n  else\n    echo\
    \ \"true\"\n  fi", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo\
    \ \"true\"", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"",
  "  # Write your code here\n  # To debug: echo \"Debug messages...\" >&2\n  #echo\
    \ \"true\"\n  #echo \"false\"\n  #echo \"true\"\n  #echo \"false\"\n  #echo \"\
    false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\
    \n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n  #echo \"false\"\n\
    \  #echo \"false\"\n", "  # Write your code here\n  # To print results to the\
    \ standard output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #", "    # Write your code here\n    # To print results to the\
    \ standard output you can use echo\n    # Example: echo \"Hello world\"\n    echo\
    \ \"true\"", "  # your code here\n  echo \"false\"", "  # Write your code here\n\
    \  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"", "  # Write your\
    \ code here\n  # To print results to the standard output you can use echo\n  #\
    \ Example: echo \"Hello world\"\n  echo \"true\"", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # Example: echo\
    \ \"Hello world\"\n  echo \"true\"", "  # Write your code here\n  # To print results\
    \ to the standard output you can use echo\n  # Example: echo \"Hello world\"\n\
    \  echo \"true\"", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # Example: echo \"Hello world\"\n  echo \"true\"",
  "  # Write your code here\n  # Use echo to print to stdout\n  # Use return to return\
    \ a value\n  # Use read to read from stdin\n  # Use $1, $2, $3 to access arguments\n\
    \  # Use $# to access number of arguments\n  # Use $@ to access all arguments\n\
    \  # Use $? to access exit code of last command\n  # Use $$ to access PID of current\
    \ process\n  # Use $! to access PID of last background process\n  # Use $0 to\
    \ access name of current script\n  # Use $LINENO to access current line number\n\
    \  # Use $IFS to access input field separator\n  # Use $UID to access UID of current\
    \ user\n  # Use $EUID to access EUID of current user\n  # Use $HOME to access\
    \ home directory of current user\n  # Use $PWD to access current working directory\n\
    \  # Use $SECONDS to access number of seconds since shell was started\n  # Use\
    \ $RANDOM to access random number\n  # Use $BASH_VERSION to access bash version\n\
    \  # Use $BASH_VERSINFO to access bash version info\n  # Use $BASH_SOURCE to access\
    \ bash source\n  # Use $FUNCNAME to access function name\n  # Use $MACHTYPE to\
    \ access machine type\n  # Use $OSTYPE to access operating system type\n  # Use\
    \ $HOSTNAME to access hostname\n  # Use $HOSTTYPE to access host type\n  # Use\
    \ $PATH to access path\n  # Use $PIPESTATUS to access pipe status\n  # Use $SHELLOPTS\
    \ to access shell options\n  # Use $BASHOPTS to access bash options\n  # Use $BASHPID\
    \ to access bash PID\n  # Use $BASH_SUBSHELL to access bash subshell\n  # Use\
    \ $BASH_LINENO to access bash line number\n  # Use $BASH_SOURCE to access bash\
    \ source\n  # Use $BASH_EXECUTION_STRING to access bash execution string\n  #\
    \ Use $BASH_REMATCH to access bash rematch\n  # Use $BASH_COMMAND to access bash\
    \ command\n  # Use $BASH_SUBSHELL to access bash subshell\n  # Use $BASH_LIN",
  "    # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"true\"", "  # Write\
    \ your code here\n  # To print results to the standard output you can use echo\n\
    \  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"", "  # Write your\
    \ code here\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n",
  "  # Write your code here\n  # To debug: echo \"Debug messages...\" >&2\n  if [\
    \ -z \"$1\" ] || [ -z \"$2\" ]; then\n    echo \"false\"\n    return\n  fi\n \
    \ local numerator=$(echo \"$1\" | cut -d/ -f1)\n  local denominator=$(echo \"\
    $1\" | cut -d/ -f2)\n  local numerator2=$(echo \"$2\" | cut -d/ -f1)\n  local\
    \ denominator2=$(echo \"$2\" | cut -d/ -f2)\n  local result=$(echo \"scale=2;\
    \ $numerator * $numerator2 / $denominator / $denominator2\" | bc)\n  if [ \"$result\"\
    \ == \"$(echo $result | cut -d. -f1)\" ]; then\n    echo \"true\"\n  else\n  \
    \  echo \"false\"\n  fi", "  # Write your code here\n  # To print results to the\
    \ standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo\
    \ \"true\"", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # Example: echo \"Hello world\"\n  echo \"true\"", "  # Write your code\
    \ here\n  # To print results to the standard output you can use echo\n  # To debug:\
    \ echo \"Debug messages...\" >&2\n  echo \"true\"", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"true\"", "  # Write your code here\n  # To\
    \ print results to the standard output you can use echo\n  # Example: echo \"\
    Hello world\"\n  #\n  # To access arguments from the command line you can use\
    \ variables $1, $2, ...\n  # Example: echo $1 $2\n  #\n  # To access the standard\
    \ input you can use the variable $0\n  # Example: read name\n  #          echo\
    \ \"Hello $name\"\n  #\n  # To access the standard input you can use the variable\
    \ $0\n  # Example: read name\n  #          echo \"Hello $name\"\n  #\n  # To access\
    \ the standard input you can use the variable $0\n  # Example: read name\n  #\
    \          echo \"Hello $name\"\n  #\n  # To access the standard input you can\
    \ use the variable $0\n  # Example: read name\n  #          echo \"Hello $name\"\
    \n  #\n  # To access the standard input you can use the variable $0\n  # Example:\
    \ read name\n  #          echo \"Hello $name\"\n  #\n  # To access the standard\
    \ input you can use the variable $0\n  # Example: read name\n  #          echo\
    \ \"Hello $name\"\n  #\n  # To access the standard input you can use the variable\
    \ $0\n  # Example: read name\n  #          echo \"Hello $name\"\n  #\n  # To access\
    \ the standard input you can use the variable $0\n  # Example: read name\n  #\
    \          echo \"Hello $name\"\n  #\n  # To access the standard input you can\
    \ use the variable $0\n  # Example: read name\n  #          echo \"Hello $name\"\
    \n  #\n  # To access the standard input you can use the variable $0\n  # Example:\
    \ read name\n  #          echo \"Hello $name\"\n  #\n  # To access the standard\
    \ input you can use the variable $0\n  # Example: read name\n  #          echo\
    \ \"Hello $name\"\n  #\n  # To access the standard input you can use the variable\
    \ $0\n  # Example: read name\n  #          echo \"Hello $name\"\n  #\n  # To access\
    \ the standard input you can use the variable $0\n  # Example: read name\n ",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"", "  # Write\
    \ your code here\n  # To print results to the standard output you can use echo\n\
    \  # Example: echo \"Hello world\"\n  echo \"true\"", "  # Write your code here\n\
    \  # You can use the following command to convert a string to a fraction\n  #\
    \ echo \"$1\" | awk '{print $1/$2}'\n  # You can use the following command to\
    \ convert a fraction to a string\n  # echo \"$1\" | awk '{printf \"%.0f\", $1/$2}'\n\
    \  # You can use the following command to convert a string to an integer\n  #\
    \ echo \"$1\" | awk '{print int($1)}'\n  # You can use the following command to\
    \ convert an integer to a string\n  # echo \"$1\" | awk '{printf \"%d\", $1}'\n\
    \  # You can use the following command to convert a string to a float\n  # echo\
    \ \"$1\" | awk '{print $1*1.0}'\n  # You can use the following command to convert\
    \ a float to a string\n  # echo \"$1\" | awk '{printf \"%.0f\", $1}'\n  # You\
    \ can use the following command to compare two strings\n  # [ \"$1\" == \"$2\"\
    \ ]\n  # You can use the following command to compare two integers\n  # [ \"$1\"\
    \ -eq \"$2\" ]\n  # You can use the following command to compare two floats\n\
    \  # [ \"$1\" -eq \"$2\" ]\n  # You can use the following command to compare two\
    \ strings\n  # [ \"$1\" == \"$2\" ]\n  # You can use the following command to\
    \ compare two integers\n  # [ \"$1\" -eq \"$2\" ]\n  # You can use the following\
    \ command to compare two floats\n  # [ \"$1\" -eq \"$2\" ]\n  # You can use the\
    \ following command to compare two strings\n  # [ \"$1\" == \"$2\" ]\n  # You\
    \ can use the following command to compare two integers\n  # [ \"$1\" -eq \"$2\"\
    \ ]\n  # You can use the following command to compare two floats\n  # [ \"$1\"\
    \ -eq \"$2\" ]\n  # You can use the following command to compare two strings\n\
    \  # [ \"$1\" == \"$2\" ]\n  # You can use the following command to compare two\
    \ integers\n  # [ \"$1\" -eq \"$2\" ]\n  #", "    # Write your code here\n   \
    \ # To print results to the standard output you can use echo\n    # To debug:\
    \ echo \"Debug messages...\" >&2\n    echo \"true\"", "  # your code here\n  echo\
    \ \"false\"", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo\
    \ \"true\"", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # Example: echo \"Hello world\"\n  #\n  # To debug:\n  #\
    \ echo \"Debug messages...\" >&2\n  echo \"true\"", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # Example: echo\
    \ \"Hello world\"\n  echo \"true\"", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # Example: echo \"Hello\
    \ world\"\n    echo \"true\"", "  # Write your code here\n  # To print results\
    \ to the standard output you can use echo\n  # To debug: echo \"Debug messages...\"\
    \ >&2\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #", "  if [ $# -ne 2 ]; then\n    echo \"Usage: $0\
    \ <x> <n>\"\n    return 1\n  fi\n\n  local x=$1\n  local n=$2\n\n  local x_num=$(echo\
    \ $x | cut -d'/' -f1)\n  local x_den=$(echo $x | cut -d'/' -f2)\n  local n_num=$(echo\
    \ $n | cut -d'/' -f1)\n  local n_den=$(echo $n | cut -d'/' -f2)\n\n  local x_num_n_den=$((x_num\
    \ * n_den))\n  local n_num_x_den=$((n_num * x_den))\n\n  if [ $x_num_n_den -eq\
    \ $n_num_x_den ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # To debug: echo \"Debug messages...\" >&2\n  local x=$1\n  local n=$2\n\
    \  local x_numerator=$(echo $x | cut -d/ -f1)\n  local x_denominator=$(echo $x\
    \ | cut -d/ -f2)\n  local n_numerator=$(echo $n | cut -d/ -f1)\n  local n_denominator=$(echo\
    \ $n | cut -d/ -f2)\n  local x_n_numerator=$(($x_numerator * $n_numerator))\n\
    \  local x_n_denominator=$(($x_denominator * $n_denominator))\n  local gcd=$(gcd\
    \ $x_n_numerator $x_n_denominator)\n  local x_n_numerator=$(($x_n_numerator /\
    \ $gcd))\n  local x_n_denominator=$(($x_n_denominator / $gcd))\n  if [ $x_n_numerator\
    \ -eq $x_n_denominator ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi", "    # Write your code here\n    # To print results to the standard output\
    \ you can use echo\n    # To debug: echo \"Debug messages...\" >&2\n    #\n  \
    \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #", "  # Write your code here\n  # You can use the following\
    \ command to convert a string to a fraction\n  # frac=$(echo \"$1\" | awk '{print\
    \ $1/$2}')\n  # To convert a fraction to a string, you can use the following command\n\
    \  # str=$(echo \"$frac\" | awk '{printf \"%d/%d\", $1, $2}')\n  # You can use\
    \ the following command to convert a string to an integer\n  # int=$(echo \"$1\"\
    \ | awk '{print $1}')\n  # You can use the following command to convert an integer\
    \ to a string\n  # str=$(echo \"$int\" | awk '{printf \"%d\", $1}')\n  # You can\
    \ use the following command to convert a string to a float\n  # flt=$(echo \"\
    $1\" | awk '{print $1}')\n  # You can use the following command to convert a float\
    \ to a string\n  # str=$(echo \"$flt\" | awk '{printf \"%f\", $1}')\n  # You can\
    \ use the following command to convert a string to a boolean\n  # bool=$(echo\
    \ \"$1\" | awk '{print ($1==\"true\")}')\n  # You can use the following command\
    \ to convert a boolean to a string\n  # str=$(echo \"$bool\" | awk '{printf \"\
    %s\", ($1==1)?\"true\":\"false\"}')\n  # You can use the following command to\
    \ convert a string to a character\n  # char=$(echo \"$1\" | awk '{print substr($1,1,1)}')\n\
    \  # You can use the following command to convert a character to a string\n  #\
    \ str=$(echo \"$char\" | awk '{printf \"%s\", $1}')\n  # You can use the following\
    \ command to convert a string to an array\n  # arr=$(echo \"$1\" | awk '{for(i=1;i<=NF;i++)print\
    \ $i}')\n  # You can use the following command to convert an array to a string\n\
    \  # str=$(echo \"$arr\" | awk '{for(i=1;i<=NF;i++)printf \"%s%s\", $i,", "  #\
    \ Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"", "    #\
    \ Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"true\"", "  # Write\
    \ your code here\n  # Use echo to print to stdout\n  # Use return to return a\
    \ value\n  # Use read to read from stdin\n  # Use $1 and $2 to access the arguments\n\
    \  # Use $# to access the number of arguments\n  # Use $@ to access all the arguments\n\
    \  # Use $0 to access the name of the script\n  # Use $? to access the exit code\
    \ of the last command\n  # Use $$ to access the process id of the current shell\n\
    \  # Use $! to access the process id of the last background command\n  # Use $-\
    \ to access the current options set for the shell\n  # Use $IFS to access the\
    \ Internal Field Separator\n  # Use $PS1 to access the value of the primary prompt\
    \ string\n  # Use $PS2 to access the value of the secondary prompt string\n  #\
    \ Use $LINENO to access the current line number in the script\n  # Use $SECONDS\
    \ to access the number of seconds since the shell was started\n  # Use $RANDOM\
    \ to access a random number between 0 and 32767\n  # Use $UID to access the user\
    \ id of the current user\n  # Use $EUID to access the effective user id of the\
    \ current user\n  # Use $GROUPS to access the list of groups the current user\
    \ is a member of\n  # Use $PWD to access the current working directory\n  # Use\
    \ $OLDPWD to access the previous working directory\n  # Use $OSTYPE to access\
    \ the operating system type\n  # Use $MACHTYPE to access the system architecture\n\
    \  # Use $HOSTNAME to access the hostname of the system\n  # Use $HOSTTYPE to\
    \ access the machine type on which the system is running\n  # Use $BASH_VERSION\
    \ to access the version of the current instance of bash\n  # Use $BASH_VERSINFO\
    \ to access the version information of the current instance of bash\n  # Use $BASH_SOURCE\
    \ to access the source filename of the current instance of bash\n  # Use $BASH_SUBSHELL\
    \ to access the subshell level of the current instance of bash\n  # Use $BASH_LINENO\
    \ to access the current line number in the current instance of bash\n  # Use $BASH_EXECUTION_STRING\
    \ to access", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  local\
    \ x=$1\n  local n=$2\n  local x_numerator=$(echo $x | cut -d'/' -f1)\n  local\
    \ x_denominator=$(echo $x | cut -d'/' -f2)\n  local n_numerator=$(echo $n | cut\
    \ -d'/' -f1)\n  local n_denominator=$(echo $n | cut -d'/' -f2)\n  local x_n_numerator=$(($x_numerator\
    \ * $n_numerator))\n  local x_n_denominator=$(($x_denominator * $n_denominator))\n\
    \  local gcd=$(gcd $x_n_numerator $x_n_denominator)\n  local x_n_numerator=$(($x_n_numerator\
    \ / $gcd))\n  local x_n_denominator=$(($x_n_denominator / $gcd))\n  if [ $x_n_numerator\
    \ -eq $x_n_denominator ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi", "  # your code here\n  local x=$1\n  local n=$2\n  local x_numerator=$(echo\
    \ $x | cut -d/ -f1)\n  local x_denominator=$(echo $x | cut -d/ -f2)\n  local n_numerator=$(echo\
    \ $n | cut -d/ -f1)\n  local n_denominator=$(echo $n | cut -d/ -f2)\n  local result=$(echo\
    \ \"$x_numerator * $n_numerator / $x_denominator * $n_denominator\" | bc)\n  if\
    \ [[ $result == *.* ]]; then\n    echo \"false\"\n  else\n    echo \"true\"\n\
    \  fi", "    # Write your code here\n    # To print results to the standard output\
    \ you can use echo\n    # To debug: echo \"Debug messages...\" >&2\n    echo \"\
    true\"", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # Example: echo \"Hello world\"\n  #\n  # To access arguments\
    \ from the command line you can use variables $1, $2, etc.\n  # Example: echo\
    \ \"$1\"\n  #\n  # To add your own error messages you can use the following format\n\
    \  # example: error \"My error message\"\n  #\n  # To add your own debugging messages\
    \ you can use the following format\n  # example: debug \"My debugging message\"\
    \n  #\n  # To add your own testing messages you can use the following format\n\
    \  # example: testing \"My testing message\"\n  #\n  # To add your own system\
    \ messages you can use the following format\n  # example: system \"My system message\"\
    \n  #\n  # To add your own system messages you can use the following format\n\
    \  # example: system \"My system message\"\n  #\n  # To add your own system messages\
    \ you can use the following format\n  # example: system \"My system message\"\n\
    \  #\n  # To add your own system messages you can use the following format\n \
    \ # example: system \"My system message\"\n  #\n  # To add your own system messages\
    \ you can use the following format\n  # example: system \"My system message\"\n\
    \  #\n  # To add your own system messages you can use the following format\n \
    \ # example: system \"My system message\"\n  #\n  # To add your own system messages\
    \ you can use the following format\n  # example: system \"My system message\"\n\
    \  #\n  # To add your own system messages you can use the following format\n \
    \ # example: system \"My system message\"\n  #\n  # To add your own system messages\
    \ you can use the following format\n  # example: system \"My system message\"\n\
    \  #\n  # To add your own system messages you can use the following format\n \
    \ # example: system \"My system message\"\n  #\n  # To add your own system messages\
    \ you can use the following format\n  # example: system \"My system message\"\n\
    \  #\n  # To add your own system messages you can use the following format\n \
    \ # example: system \"My system message\"\n  #\n  # To add your own system messages",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # To debug: echo \"Debug messages...\" >&2\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #", " \
    \ # Write your code here\n  # To print results to the standard output you can\
    \ use echo\n  # Example: echo \"Hello world\"\n  echo \"true\"", "  # Write your\
    \ code here\n  # To print results to the standard output you can use echo\n  #\
    \ Example: echo \"Hello world\"\n  echo \"true\"", "  if [[ $1 =~ ^[0-9]+/[0-9]+$\
    \ ]] && [[ $2 =~ ^[0-9]+/[0-9]+$ ]]; then\n    local numerator1=$(echo $1 | cut\
    \ -d/ -f1)\n    local denominator1=$(echo $1 | cut -d/ -f2)\n    local numerator2=$(echo\
    \ $2 | cut -d/ -f1)\n    local denominator2=$(echo $2 | cut -d/ -f2)\n    local\
    \ result=$(echo \"scale=2; $numerator1 * $numerator2 / $denominator1 / $denominator2\"\
    \ | bc)\n    if [[ $result =~ ^[0-9]+$ ]]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi", "  # Your code\
    \ here\n  # echo \"true\"\n  # echo \"false\"\n  # echo \"true\"\n  # echo \"\
    false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo\
    \ \"false\"\n ", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # Example: echo \"Hello world\"\n  echo \"true\"",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # To debug: echo \"Debug messages...\" >&2\n  echo \"true\"", "  # Write\
    \ your code here\n  # To print results to the standard output you can use echo\n\
    \  # Example: echo \"Hello world\"\n  echo \"Hello world\"", "  # Write your code\
    \ here\n  # To print results to the standard output you can use echo\n  # To debug:\
    \ echo \"Debug messages...\" >&2\n  echo \"true\"", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # Example: echo\
    \ \"Hello world\"\n  echo \"true\"", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # To debug: echo \"Debug\
    \ messages...\" >&2\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #", "  # Write your code\
    \ here\n  # To print results to the standard output you can use echo\n  # Example:\
    \ echo \"Hello world\"\n  #echo \"Hello world\"\n  x=$1\n  y=$2\n  x_num=`echo\
    \ $x | cut -d \"/\" -f 1`\n  x_den=`echo $x | cut -d \"/\" -f 2`\n  y_num=`echo\
    \ $y | cut -d \"/\" -f 1`\n  y_den=`echo $y | cut -d \"/\" -f 2`\n  x_num=$((x_num*y_den))\n\
    \  y_num=$((y_num*x_den))\n  if [ $x_num -eq $y_num ]; then\n    echo \"true\"\
    \n  else\n    echo \"false\"\n  fi", "  # Write your code here\n  # To print results\
    \ to the standard output you can use echo\n  # To debug: echo \"Debug messages...\"\
    \ >&2\n  echo \"true\"", "  # Write your code here\n  # To print results to the\
    \ standard output you can use echo\n  # To debug your solution, you can write\
    \ to the standard error\n  # Standard error is used as a channel to communicate\
    \ with the backend\n  # using the following syntax:\n  # echo \"Debug messages...\"\
    \ >&2\n  #\n  # To print a variable use the following syntax:\n  # echo \"$VAR\"\
    \n  #\n  # To read a variable from the standard input use the following syntax:\n\
    \  # read VAR\n  #\n  # To check if a variable is empty use the following syntax:\n\
    \  # [ -z \"$VAR\" ]\n  #\n  # To check if a variable is not empty use the following\
    \ syntax:\n  # [ -n \"$VAR\" ]\n  #\n  # To check if a variable is a number use\
    \ the following syntax:\n  # [ \"$VAR\" -eq \"$VAR\" ] 2>/dev/null\n  #\n  # To\
    \ check if a variable is a string use the following syntax:\n  # [ \"$VAR\" !=\
    \ \"$VAR\" ] 2>/dev/null\n  #\n  # To check if a variable is a file use the following\
    \ syntax:\n  # [ -f \"$VAR\" ]\n  #\n  # To check if a variable is a directory\
    \ use the following syntax:\n  # [ -d \"$VAR\" ]\n  #\n  # To check if a variable\
    \ is a symbolic link use the following syntax:\n  # [ -L \"$VAR\" ]\n  #\n  #\
    \ To check if a variable is a socket use the following syntax:\n  # [ -S \"$VAR\"\
    \ ]\n  #\n  # To check if a variable is a block device use the following syntax:\n\
    \  # [ -b \"$VAR\" ]\n  #\n  # To check if a variable is a character device use\
    \ the following syntax:\n  # [ -c \"$VAR\" ]\n  #\n  # To check if a variable\
    \ is a named pipe use the following syntax:\n  # [ -p \"$VAR\" ]\n  #\n  # To\
    \ check if a variable is a setuid bit set use the following syntax:\n  # [ -u\
    \ \"$VAR\" ]\n  #\n  # To check if", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # To debug: echo \"Debug\
    \ messages...\" >&2\n    echo \"true\"", "  # Write your code here\n  # To print\
    \ results to the standard output you can use echo\n  # To debug: echo \"Debug\
    \ messages...\" >&2\n  echo \"true\"", "  local x=$1\n  local n=$2\n  local x_num=$(echo\
    \ $x | cut -d/ -f1)\n  local x_den=$(echo $x | cut -d/ -f2)\n  local n_num=$(echo\
    \ $n | cut -d/ -f1)\n  local n_den=$(echo $n | cut -d/ -f2)\n  local res_num=$((x_num\
    \ * n_num))\n  local res_den=$((x_den * n_den))\n  local res=$(echo \"$res_num/$res_den\"\
    \ | bc -l)\n  if [[ $res == *.* ]]; then\n    echo \"false\"\n  else\n    echo\
    \ \"true\"\n  fi", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # Example: echo \"Hello world\"\n  echo \"true\"",
  "  # your code here\n  # Hint: you can use bc to do floating point arithmetic\n\
    \  # e.g. echo \"1/3\" | bc -l\n  #      echo \"1/3 * 2\" | bc -l\n  #      echo\
    \ \"scale=2; 1/3 * 2\" | bc -l\n  #      echo \"scale=2; 1/3 * 2\" | bc -l | cut\
    \ -d. -f1\n  #      echo \"scale=2; 1/3 * 2\" | bc -l | cut -d. -f1 | grep -q\
    \ \"^[0-9]*$\" && echo \"true\" || echo \"false\"\n  #      echo \"scale=2; 1/3\
    \ * 2\" | bc -l | cut -d. -f1 | grep -q \"^[0-9]*$\" && echo \"true\" || echo\
    \ \"false\"\n  #      echo \"scale=2; 1/3 * 2\" | bc -l | cut -d. -f1 | grep -q\
    \ \"^[0-9]*$\" && echo \"true\" || echo \"false\"\n  #      echo \"scale=2; 1/3\
    \ * 2\" | bc -l | cut -d. -f1 | grep -q \"^[0-9]*$\" && echo \"true\" || echo\
    \ \"false\"\n  #      echo \"scale=2; 1/3 * 2\" | bc -l | cut -d. -f1 | grep -q\
    \ \"^[0-9]*$\" && echo \"true\" || echo \"false\"\n  #      echo \"scale=2; 1/3\
    \ * 2\" | bc -l | cut -d. -f1 | grep -q \"^[0-9]*$\" && echo \"true\" || echo\
    \ \"false\"\n  #      echo \"scale=2; 1/3 * 2\" | bc -l | cut -d. -f1 | grep -q\
    \ \"^[0-9]*$\" && echo \"true\" || echo \"false\"\n  #      echo \"scale=2; 1/3\
    \ * 2\" | bc -l | cut -d. -f1 | grep -q \"^[0-9]*$\" && echo \"true", "  # Write\
    \ your code here\n  # To print results to the standard output you can use echo\n\
    \  # To debug: echo \"Debug messages...\" >&2\n  echo \"false\"", "  if [[ $1\
    \ =~ ^[0-9]+/[0-9]+$ ]] && [[ $2 =~ ^[0-9]+/[0-9]+$ ]]; then\n    local numerator1=$(echo\
    \ $1 | cut -d'/' -f1)\n    local denominator1=$(echo $1 | cut -d'/' -f2)\n   \
    \ local numerator2=$(echo $2 | cut -d'/' -f1)\n    local denominator2=$(echo $2\
    \ | cut -d'/' -f2)\n    local result=$(echo \"scale=2; $numerator1 * $numerator2\
    \ / $denominator1 / $denominator2\" | bc)\n    if [[ $result =~ ^[0-9]+\\.[0]*$\
    \ ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi", "  # Write your code here\n  # To print results to\
    \ the standard output you can use echo\n  # Example: echo \"Hello world\"\n  echo\
    \ \"Hello world\"", "  # Write your code here\n  # To print results to the standard\
    \ output you can use echo\n  # To debug: echo \"Debug messages...\" >&2\n  #\n\
    \  # echo \"true\"\n  # echo \"false\"\n  # echo \"true\"\n  # echo \"false\"\n\
    \  # echo \"false\"\n  # echo \"false\"\n  # echo \"true\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\
    \n  # echo \"false\"\n  # echo \"false\"\n  # echo \"false\"\n  # echo \"", " \
    \ # Write your code here\n  # To print results to the standard output you can\
    \ use echo\n  # To debug: echo \"Debug messages...\" >&2\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #",
  "  # Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # Example: echo \"Hello world\"\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n", "  #\
    \ Write your code here\n  # To print results to the standard output you can use\
    \ echo\n  # Example: echo \"Hello world\"\n  echo \"true\"", "  # Write your code\
    \ here\n  # To print results to the standard output you can use echo\n  # To debug:\
    \ echo \"Debug messages...\" >&2\n  echo \"true\"", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # To debug:\
    \ echo \"Debug messages...\" >&2\n    echo \"false\"", "  # Write your code here\n\
    \  # To print results to the standard output you can use echo\n  # Example: echo\
    \ \"Hello world\"\n  #echo \"Hello world\"\n  #echo $1\n  #echo $2\n  #echo \"\
    1/5\"\n  #echo \"5/1\"\n  #echo \"1/6\"\n  #echo \"2/1\"\n  #echo \"7/10\"\n \
    \ #echo \"10/2\"\n  #echo \"1/5\" | awk -F/ '{print $1}'\n  #echo \"1/5\" | awk\
    \ -F/ '{print $2}'\n  #echo \"5/1\" | awk -F/ '{print $1}'\n  #echo \"5/1\" |\
    \ awk -F/ '{print $2}'\n  #echo \"1/6\" | awk -F/ '{print $1}'\n  #echo \"1/6\"\
    \ | awk -F/ '{print $2}'\n  #echo \"2/1\" | awk -F/ '{print $1}'\n  #echo \"2/1\"\
    \ | awk -F/ '{print $2}'\n  #echo \"7/10\" | awk -F/ '{print $1}'\n  #echo \"\
    7/10\" | awk -F/ '{print $2}'\n  #echo \"10/2\" | awk -F/ '{print $1}'\n  #echo\
    \ \"10/2\" | awk -F/ '{print $2}'\n  #echo \"1/5\" | awk -F/ '{print $1}'\n  #echo\
    \ \"1/5\" | awk -F/ '{print $2}'\n  #echo \"5/1\" | awk -F/ '{print $1}'\n  #echo\
    \ \"5/1\" | awk -F/ '{print $2}'\n  #echo \"1/6\" | awk -F/ '{print $1}'\n  #echo\
    \ \"1/6\" | awk -F/ '{print $2}'\n  #echo \"2/1\" | aw", "  # Write your code\
    \ here\n  # To print results to the standard output you can use echo\n  # Example:\
    \ echo \"Hello world\"\n  echo \"true\"", "    # Write your code here\n    # To\
    \ print results to the standard output you can use echo\n    # Example: echo \"\
    Hello world\"\n    echo \"true\"", "    # Write your code here\n    # To print\
    \ results to the standard output you can use echo\n    # To debug: echo \"Debug\
    \ messages...\" >&2\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #", "    # Write your code\
    \ here\n    # To print results to the standard output you can use echo\n    #\
    \ Example: echo \"Hello world\"\n    echo \"true\"", "    # Write your code here\n\
    \    # To print results to the standard output you can use echo\n    # Example:\
    \ echo \"Hello world\"\n    echo \"true\"", "  # Write your code here\n  # To\
    \ print results to the standard output you can use echo\n  # To debug: echo \"\
    Debug messages...\" >&2\n  echo \"false\"", "  # Write your code here\n  # To\
    \ print results to the standard output you can use echo\n  # To debug: echo \"\
    Debug messages...\" >&2\n  echo \"true\""]
stop_tokens:
- "\n}"

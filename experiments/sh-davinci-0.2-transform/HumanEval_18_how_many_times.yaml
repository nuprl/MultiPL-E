name: HumanEval_18_how_many_times
language: sh
prompt: "#!/bin/bash\n# Find how many times a given substring can be found in the\
  \ original string. Count overlaping cases.\n# >>> $(how_many_times \"\" \"a\")\n\
  # \"0\"\n# >>> $(how_many_times \"aaa\" \"a\")\n# \"3\"\n# >>> $(how_many_times\
  \ \"aaaa\" \"aa\")\n# \"3\"\n#\n# $1 is a string\n# $2 is a string\nhow_many_times()\
  \ {\n"
tests: "}\n\ncandidate() {\n    how_many_times \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"\" \"x\") = \"0\" ]]\n    [[ $(candidate \"xyxyxyx\" \"x\"\
  ) = \"4\" ]]\n    [[ $(candidate \"cacacacac\" \"cac\") = \"4\" ]]\n    [[ $(candidate\
  \ \"john doe\" \"john\") = \"1\" ]]\n}\n\nrun_test"
completions: ["    local -i count=0\n    local -i i=0\n    local -i len_str=$(str_len\
    \ \"$1\")\n    local -i len_substr=$(str_len \"$2\")\n    local -i len_diff=$((len_str\
    \ - len_substr))\n    while [ $i -le $len_diff ]; do\n        if [ \"$(str_substr\
    \ \"$1\" \"$i\" \"$len_substr\")\" = \"$2\" ]; then\n            count=$((count\
    \ + 1))\n        fi\n        i=$((i + 1))\n    done\n    echo \"$count\"", " \
    \   local string=$1\n    local substring=$2\n    local count=0\n    local offset=0\n\
    \    while [ $offset -lt ${#string} ]; do\n        if [[ \"${string:$offset:${#substring}}\"\
    \ == \"$substring\" ]]; then\n            count=$((count+1))\n            offset=$((offset+${#substring}))\n\
    \        else\n            offset=$((offset+1))\n        fi\n    done\n    echo\
    \ $count", '    echo "${1//$2/}" | wc -c', '    echo $1 | grep -o $2 | wc -l',
  "    local string=\"$1\"\n    local substring=\"$2\"\n    local result=0\n    local\
    \ length_of_string=${#string}\n    local length_of_substring=${#substring}\n \
    \   local i=0\n    while [ $i -lt $length_of_string ]; do\n        if [ \"${string:$i:$length_of_substring}\"\
    \ == \"$substring\" ]; then\n            result=$((result+1))\n            i=$((i+length_of_substring))\n\
    \        else\n            i=$((i+1))\n        fi\n    done\n    echo \"$result\"",
  "  local string=\"$1\"\n  local substring=\"$2\"\n  local count=0\n  local i=0\n\
    \  while [[ $i -lt ${#string} ]]; do\n    if [[ \"${string:$i:${#substring}}\"\
    \ == \"$substring\" ]]; then\n      count=$((count+1))\n      i=$((i+${#substring}))\n\
    \    else\n      i=$((i+1))\n    fi\n  done\n  echo \"$count\"", '    echo "${1//$2/}"
    | wc -c', "    local string=\"$1\"\n    local substring=\"$2\"\n    local -i count=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i substring_length=${#substring}\n\
    \    local -i string_length=${#string}\n    for ((i=0; i<string_length; i++));\
    \ do\n        for ((j=0; j<substring_length; j++)); do\n            if [[ \"${string:i+j:1}\"\
    \ != \"${substring:j:1}\" ]]; then\n                break\n            fi\n  \
    \      done\n        if [[ $j -eq $substring_length ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo \"$count\"", '    echo $1 | grep -o $2 | wc -l',
  '    echo "$1" | grep -o "$2" | wc -l', '    echo "$1" | grep -o "$2" | wc -l',
  '    echo "${1//$2/}" | wc -c', "    local -i count=0\n    local -i i=0\n    local\
    \ -i len=$((${#1} - ${#2} + 1))\n    while [ $i -lt $len ]; do\n        if [ \"\
    ${1:$i:${#2}}\" == \"$2\" ]; then\n            ((count++))\n        fi\n     \
    \   ((i++))\n    done\n    echo $count", '    echo $1 | grep -o $2 | wc -l', " \
    \   local string=\"$1\"\n    local substring=\"$2\"\n    local count=0\n    local\
    \ i=0\n    local len=${#string}\n    local sublen=${#substring}\n    while [ $i\
    \ -lt $len ]; do\n        if [ \"${string:$i:$sublen}\" == \"$substring\" ]; then\n\
    \            count=$((count+1))\n            i=$((i+sublen))\n        else\n \
    \           i=$((i+1))\n        fi\n    done\n    echo $count", "    local string=\"\
    $1\"\n    local substring=\"$2\"\n    local counter=0\n    local index=0\n   \
    \ while true; do\n        index=$(index_of \"$string\" \"$substring\" \"$index\"\
    )\n        if [ \"$index\" -eq \"-1\" ]; then\n            break\n        fi\n\
    \        counter=$((counter + 1))\n        index=$((index + 1))\n    done\n  \
    \  echo \"$counter\"", "    local str=\"$1\"\n    local substr=\"$2\"\n    local\
    \ len=${#substr}\n    local count=0\n    local i=0\n    while [ $i -lt ${#str}\
    \ ]; do\n        if [ \"${str:$i:$len}\" == \"$substr\" ]; then\n            count=$((count+1))\n\
    \            i=$((i+len))\n        else\n            i=$((i+1))\n        fi\n\
    \    done\n    echo \"$count\"", '    echo "$1" | grep -o "$2" | wc -l', "   \
    \ local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i count=0\n   \
    \ local -i len_1=${#1}\n    local -i len_2=${#2}\n    local -i len_diff=$((len_1\
    \ - len_2))\n    local -i len_diff_plus_1=$((len_diff + 1))\n    local -i len_diff_plus_2=$((len_diff\
    \ + 2))\n    local -i len_diff_plus_3=$((len_diff + 3))\n    local -i len_diff_plus_4=$((len_diff\
    \ + 4))\n    local -i len_diff_plus_5=$((len_diff + 5))\n    local -i len_diff_plus_6=$((len_diff\
    \ + 6))\n    local -i len_diff_plus_7=$((len_diff + 7))\n    local -i len_diff_plus_8=$((len_diff\
    \ + 8))\n    local -i len_diff_plus_9=$((len_diff + 9))\n    local -i len_diff_plus_10=$((len_diff\
    \ + 10))\n    local -i len_diff_plus_11=$((len_diff + 11))\n    local -i len_diff_plus_12=$((len_diff\
    \ + 12))\n    local -i len_diff_plus_13=$((len_diff + 13))\n    local -i len_diff_plus_14=$((len_diff\
    \ + 14))\n    local -i len_diff_plus_15=$((len_diff + 15))\n    local -i len_diff_plus_16=$((len_diff\
    \ + 16))\n    local -i len_diff_plus_17=$((len_diff + 17))\n    local -i len_diff_plus_18=$((len_diff\
    \ + 18))\n    local -i len_diff_plus_19=$((len_diff + 19))\n    local -i len_diff_plus_20=$((len_diff\
    \ + 20))\n    local -i len_diff_plus_21=$((len_diff + 21))\n    local -i len_diff_plus_22=$((len_",
  "    local string=\"$1\"\n    local substring=\"$2\"\n    local counter=0\n    local\
    \ index=0\n    local length=${#string}\n    local sublength=${#substring}\n  \
    \  while [ $index -lt $length ]; do\n        if [ \"${string:$index:$sublength}\"\
    \ == \"$substring\" ]; then\n            counter=$((counter+1))\n            index=$((index+sublength))\n\
    \        else\n            index=$((index+1))\n        fi\n    done\n    echo\
    \ $counter"]
stop_tokens:
- "\n}"

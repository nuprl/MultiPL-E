name: HumanEval_27_flip_case
language: sh
prompt: "#!/bin/bash\n# For a given string, flip lowercase characters to uppercase\
  \ and uppercase to lowercase.\n# >>> $(flip_case \"Hello\")\n# \"hELLO\"\n#\n# $1\
  \ is a string\nflip_case() {\n"
tests: "}\n\ncandidate() {\n    flip_case \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"Hello\\!\") = \"hELLO\\!\" ]]\n\
  \    [[ $(candidate \"These violent delights have violent ends\") = \"tHESE VIOLENT\
  \ DELIGHTS HAVE VIOLENT ENDS\" ]]\n}\n\nrun_test"
completions: ["    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'",
  "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo\
    \ \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo\
    \ \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"\
    $1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  local str=\"$1\"\
    \n  local new_str=\"\"\n  local i=0\n  local char=\"\"\n  local ascii_code=0\n\
    \  local new_ascii_code=0\n\n  for (( i=0; i<${#str}; i++ )); do\n    char=\"\
    ${str:$i:1}\"\n    ascii_code=$(ord \"$char\")\n    if (( ascii_code >= 65 &&\
    \ ascii_code <= 90 )); then\n      new_ascii_code=$(( ascii_code + 32 ))\n   \
    \ elif (( ascii_code >= 97 && ascii_code <= 122 )); then\n      new_ascii_code=$((\
    \ ascii_code - 32 ))\n    else\n      new_ascii_code=$ascii_code\n    fi\n   \
    \ new_str+=$(chr \"$new_ascii_code\")\n  done\n\n  echo \"$new_str\"", "  echo\
    \ \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"\
    $1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", '    echo "${1,,}"', "  echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'", "    local str=\"$1\"\n    local flipped=\"\"\n\
    \    local char=\"\"\n    for (( i=0; i<${#str}; i++ )); do\n        char=\"${str:$i:1}\"\
    \n        if [[ \"$char\" =~ [a-z] ]]; then\n            flipped+=\"$(echo \"\
    $char\" | tr '[:lower:]' '[:upper:]')\"\n        elif [[ \"$char\" =~ [A-Z] ]];\
    \ then\n            flipped+=\"$(echo \"$char\" | tr '[:upper:]' '[:lower:]')\"\
    \n        else\n            flipped+=\"$char\"\n        fi\n    done\n    echo\
    \ \"$flipped\"", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'",
  "  local str=\"$1\"\n  local result=\"\"\n  local char=\"\"\n  for (( i=0; i<${#str};\
    \ i++ )); do\n    char=\"${str:$i:1}\"\n    if [[ \"$char\" =~ [a-z] ]]; then\n\
    \      result+=\"${char^^}\"\n    elif [[ \"$char\" =~ [A-Z] ]]; then\n      result+=\"\
    ${char,,}\"\n    else\n      result+=\"$char\"\n    fi\n  done\n  echo \"$result\"",
  "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "   \
    \ echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo\
    \ \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"\
    $1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"\
    $1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"\
    $1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", '    echo "$1" | tr "[:upper:]" "[:lower:]"
    | tr "[:lower:]" "[:upper:]"', "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'",
  "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \ echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  \
    \  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \ echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  \
    \  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \ echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  \
    \  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \ echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo\
    \ \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"\
    $1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'",
  "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo\
    \ \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo\
    \ \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"\
    $1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    local str=\"\
    $1\"\n    local flipped=\"\"\n    for (( i=0; i<${#str}; i++ )); do\n        local\
    \ char=\"${str:$i:1}\"\n        if [[ \"$char\" =~ [a-z] ]]; then\n          \
    \  flipped+=\"$(echo \"$char\" | tr '[:lower:]' '[:upper:]')\"\n        elif [[\
    \ \"$char\" =~ [A-Z] ]]; then\n            flipped+=\"$(echo \"$char\" | tr '[:upper:]'\
    \ '[:lower:]')\"\n        else\n            flipped+=\"$char\"\n        fi\n \
    \   done\n    echo \"$flipped\"", "  echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'",
  "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \ echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  \
    \  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \ echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  \
    \  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \ echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  \
    \  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \ local str=\"$1\"\n  local flipped_str=\"\"\n  local char=\"\"\n  local char_code=\"\
    \"\n  local flipped_char_code=\"\"\n  local flipped_char=\"\"\n\n  for (( i=0;\
    \ i<${#str}; i++ )); do\n    char=\"${str:$i:1}\"\n    char_code=$(printf \"%d\"\
    \ \"'$char\")\n    if [[ $char_code -ge 97 && $char_code -le 122 ]]; then\n  \
    \    flipped_char_code=$(( $char_code - 32 ))\n    elif [[ $char_code -ge 65 &&\
    \ $char_code -le 90 ]]; then\n      flipped_char_code=$(( $char_code + 32 ))\n\
    \    else\n      flipped_char_code=$char_code\n    fi\n    flipped_char=$(printf\
    \ \\\\$(printf '%03o' $flipped_char_code))\n    flipped_str+=\"$flipped_char\"\
    \n  done\n\n  echo \"$flipped_str\"", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'",
  "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \ echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  \
    \  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", '  echo
    "${1}" | tr "[:upper:]" "[:lower:]" | tr "[:lower:]" "[:upper:]"', "  echo \"\
    $1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"\
    $1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'",
  "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", '  echo
    "$1" | tr "[:upper:]" "[:lower:]" | tr "[:lower:]" "[:upper:]"', "  local str=\"\
    $1\"\n  local output=\"\"\n  for (( i=0; i<${#str}; i++ )); do\n    local char=\"\
    ${str:$i:1}\"\n    if [[ \"$char\" =~ [a-z] ]]; then\n      output+=\"${char^^}\"\
    \n    elif [[ \"$char\" =~ [A-Z] ]]; then\n      output+=\"${char,,}\"\n    else\n\
    \      output+=\"$char\"\n    fi\n  done\n  echo \"$output\"", "  echo \"${1}\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]'\
    \ | tr '[:lower:]' '[:upper:]'", '  echo "$1" | tr "[:upper:]" "[:lower:]" | tr
    "[:lower:]" "[:upper:]"', "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]'\
    \ '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'",
  "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "   \
    \ echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  \
    \  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \ echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  \
    \  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \   echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", " \
    \ echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo\
    \ \"$1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"\
    $1\" | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\"\
    \ | tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "    echo \"$1\" |\
    \ tr '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr\
    \ '[:upper:]' '[:lower:]' | tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]'\
    \ '[:lower:]' | tr '[:lower:]' '[:upper:]'", '    echo "$1" | tr "[:upper:]" "[:lower:]"
    | tr "[:lower:]" "[:upper:]"', "    echo \"$1\" | tr '[:upper:]' '[:lower:]' |\
    \ tr '[:lower:]' '[:upper:]'", "  echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "    echo \"$1\" | tr '[:upper:]' '[:lower:]' | tr\
    \ '[:lower:]' '[:upper:]'", "  local str=\"$1\"\n  local new_str=\"\"\n  local\
    \ char=\"\"\n  for (( i=0; i<${#str}; i++ )); do\n    char=\"${str:$i:1}\"\n \
    \   if [[ \"$char\" =~ [a-z] ]]; then\n      new_str+=\"${char^^}\"\n    elif\
    \ [[ \"$char\" =~ [A-Z] ]]; then\n      new_str+=\"${char,,}\"\n    else\n   \
    \   new_str+=\"$char\"\n    fi\n  done\n  echo \"$new_str\""]
stop_tokens:
- "\n}"

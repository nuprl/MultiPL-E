name: HumanEval_77_iscube
language: sh
prompt: "#!/bin/bash\n# Write a function that takes an integer a and returns True\
  \ \n# if this ingeger is a cube of some integer number.\n# Note: you may assume\
  \ the input is always valid.\n# Examples:\n# >>> $(iscube \"1\")\n# \"true\"\n#\
  \ >>> $(iscube \"2\")\n# \"false\"\n# >>> $(iscube \"-1\")\n# \"true\"\n# >>> $(iscube\
  \ \"64\")\n# \"true\"\n# >>> $(iscube \"0\")\n# \"true\"\n# >>> $(iscube \"180\"\
  )\n# \"false\"\n#\n# $1 is an integer\niscube() {\n"
tests: "}\n\ncandidate() {\n    iscube \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"1\") = \"true\" ]]\n    [[ $(candidate \"2\") = \"false\" ]]\n    [[ $(candidate\
  \ \"-1\") = \"true\" ]]\n    [[ $(candidate \"64\") = \"true\" ]]\n    [[ $(candidate\
  \ \"180\") = \"false\" ]]\n    [[ $(candidate \"1000\") = \"true\" ]]\n    [[ $(candidate\
  \ \"0\") = \"true\" ]]\n    [[ $(candidate \"1729\") = \"false\" ]]\n}\n\nrun_test"
completions: ["    local num=$1\n    local cube=$(echo \"scale=0; $num^(1/3)\" | bc)\n\
    \    if [ $cube -eq 0 ]; then\n        echo \"true\"\n    else\n        echo \"\
    false\"\n    fi", "    if [ $1 -eq 0 ]\n    then\n        echo \"true\"\n    elif\
    \ [ $1 -eq 1 ]\n    then\n        echo \"true\"\n    elif [ $1 -eq -1 ]\n    then\n\
    \        echo \"true\"\n    else\n        for i in $(seq 2 $1)\n        do\n \
    \           if [ $((i*i*i)) -eq $1 ]\n            then\n                echo \"\
    true\"\n                return\n            fi\n        done\n        echo \"\
    false\"\n    fi", "    local n=$1\n    local i=1\n    while [ $((i*i*i)) -le $n\
    \ ]; do\n        if [ $((i*i*i)) -eq $n ]; then\n            echo \"true\"\n \
    \           return\n        fi\n        i=$((i+1))\n    done\n    echo \"false\"",
  "    local a=$1\n    local b=0\n    local c=0\n    local d=0\n    local e=0\n  \
    \  local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n   \
    \ local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n\
    \    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n\
    \    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n\
    \    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n\
    \    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n\
    \    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n\
    \    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n\
    \    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n\
    \    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n\
    \    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n\
    \    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n\
    \   ", "    if [[ $1 -eq 0 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq\
    \ 1 ]]; then\n        echo \"true\"\n    elif [[ $1 -eq -1 ]]; then\n        echo\
    \ \"true\"\n    elif [[ $1 -eq 64 ]]; then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi", "    if [ $1 -eq 0 ]; then\n        echo \"\
    true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n    else\n       \
    \ for i in $(seq 1 $1); do\n            if [ $((i*i*i)) -eq $1 ]; then\n     \
    \           echo \"true\"\n                return\n            fi\n        done\n\
    \        echo \"false\"\n    fi", "    local num=$1\n    local i=0\n    while\
    \ (( i*i*i < num )); do\n        (( i++ ))\n    done\n    (( i*i*i == num )) &&\
    \ echo \"true\" || echo \"false\"", "    if [ $1 -eq 0 ]; then\n        echo \"\
    true\"\n    else\n        local c=$(echo \"scale=0; $1^(1/3)\" | bc)\n       \
    \ if [ $c -eq 0 ]; then\n            echo \"false\"\n        else\n          \
    \  local d=$(echo \"scale=0; $c^3\" | bc)\n            if [ $d -eq $1 ]; then\n\
    \                echo \"true\"\n            else\n                echo \"false\"\
    \n            fi\n        fi\n    fi", "    if [ $1 -eq 0 ]; then\n        echo\
    \ \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n    else\n   \
    \     for i in $(seq 1 $1); do\n            if [ $((i*i*i)) -eq $1 ]; then\n \
    \               echo \"true\"\n                return\n            fi\n      \
    \  done\n        echo \"false\"\n    fi", "    if [ $1 -eq 0 ]; then\n       \
    \ echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo \"true\"\n    else\n\
    \        for ((i=1; i<$1; i++)); do\n            if [ $((i*i*i)) -eq $1 ]; then\n\
    \                echo \"true\"\n                return\n            fi\n     \
    \   done\n        echo \"false\"\n    fi", "    if [ $1 -lt 0 ]; then\n      \
    \  echo \"true\"\n    else\n        echo \"false\"\n    fi", "    if [ $1 -eq\
    \ 0 ]; then\n        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo\
    \ \"true\"\n    else\n        for ((i=1; i<=$1; i++)); do\n            if [ $((i*i*i))\
    \ -eq $1 ]; then\n                echo \"true\"\n                return\n    \
    \        fi\n        done\n        echo \"false\"\n    fi", "    if [ $1 -eq 0\
    \ ]\n    then\n        echo \"true\"\n    else\n        local x=$(echo \"scale=0;\
    \ $1^(1/3)\" | bc)\n        if [ $x -eq 0 ]\n        then\n            echo \"\
    false\"\n        else\n            local y=$(echo \"scale=0; $x^3\" | bc)\n  \
    \          if [ $y -eq $1 ]\n            then\n                echo \"true\"\n\
    \            else\n                echo \"false\"\n            fi\n        fi\n\
    \    fi", "    local n=$1\n    local i=1\n    while (( i*i*i < n )); do\n    \
    \    (( i++ ))\n    done\n    if (( i*i*i == n )); then\n        echo \"true\"\
    \n    else\n        echo \"false\"\n    fi", "    if [ $1 -lt 0 ]; then\n    \
    \    echo \"true\"\n    else\n        echo \"false\"\n    fi", "    if [ $1 -eq\
    \ 0 ]; then\n        echo \"true\"\n    elif [ $1 -lt 0 ]; then\n        echo\
    \ \"true\"\n    else\n        for i in $(seq 1 $1); do\n            if [ $((i*i*i))\
    \ -eq $1 ]; then\n                echo \"true\"\n                return\n    \
    \        fi\n        done\n        echo \"false\"\n    fi", "    local number=$1\n\
    \    local cube=0\n    local i=0\n    while [ $cube -lt $number ]\n    do\n  \
    \      let i++\n        let cube=$i*$i*$i\n    done\n    if [ $cube -eq $number\
    \ ]\n    then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi",
  "    local num=$1\n    local root=$(echo \"scale=0; sqrt($num)\" | bc)\n    local\
    \ cube=$(echo \"$root^3\" | bc)\n    if [ $cube -eq $num ]; then\n        echo\
    \ \"true\"\n    else\n        echo \"false\"\n    fi", "    local a=$1\n    local\
    \ b=0\n    while [ $((b*b*b)) -le $a ]; do\n        if [ $((b*b*b)) -eq $a ];\
    \ then\n            echo \"true\"\n            return\n        fi\n        b=$((b+1))\n\
    \    done\n    echo \"false\"", "    local integer=$1\n    local result=$(echo\
    \ \"scale=0; $integer^(1/3)\" | bc -l)\n    if [ $integer -eq $(($result * $result\
    \ * $result)) ]; then\n        echo \"true\"\n    else\n        echo \"false\"\
    \n    fi"]
stop_tokens:
- "\n}"

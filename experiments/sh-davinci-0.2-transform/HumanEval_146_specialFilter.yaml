name: HumanEval_146_specialFilter
language: sh
prompt: "#!/bin/bash\n# Write a function that takes an array of numbers as input and\
  \ returns \n# the number of elements in the array that are greater than 10 and both\
  \ \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\n\
  # >>> $(specialFilter \"15 -73 14 -15\")\n# \"1\"\n# >>> $(specialFilter \"33 -2\
  \ -3 45 21 109\")\n# \"2\"\n#\n# $1 is a space-separated list\nspecialFilter() {\n"
tests: "}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
  ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
  \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
  ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"\
  0\" ]]\n}\n\nrun_test"
completions: ["    local -i count=0\n    for i in $1; do\n        if (( i > 10 ));\
    \ then\n            if (( i % 2 == 1 )); then\n                (( count++ ))\n\
    \            fi\n        fi\n    done\n    echo $count", "    local -a arr=($1)\n\
    \    local count=0\n    for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n\
    \            if [[ $(($i%10)) -eq 1 ]] || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10))\
    \ -eq 5 ]] || [[ $(($i%10)) -eq 7 ]] || [[ $(($i%10)) -eq 9 ]]; then\n       \
    \         if [[ $(($i/10)) -eq 1 ]] || [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10))\
    \ -eq 5 ]] || [[ $(($i/10)) -eq 7 ]] || [[ $(($i/10)) -eq 9 ]]; then\n       \
    \             count=$(($count+1))\n                fi\n            fi\n      \
    \  fi\n    done\n    echo $count", "    # Write your code here\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n", "    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(($i%10)) -eq 1 ]]\
    \ || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10)) -eq 5 ]] || [[ $(($i%10)) -eq 7 ]]\
    \ || [[ $(($i%10)) -eq 9 ]]; then\n                if [[ $(($i/10)) -eq 1 ]] ||\
    \ [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10)) -eq 5 ]] || [[ $(($i/10)) -eq 7 ]] ||\
    \ [[ $(($i/10)) -eq 9 ]]; then\n                    count=$(($count+1))\n    \
    \            fi\n            fi\n        fi\n    done\n    echo $count", "   \
    \ local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n        if\
    \ [ $i -gt 10 ]; then\n            if [ $(($i%10)) -gt 0 ] && [ $(($i%10)) -lt\
    \ 10 ]; then\n                if [ $(($i/10)) -gt 0 ] && [ $(($i/10)) -lt 10 ];\
    \ then\n                    count=$(($count+1))\n                fi\n        \
    \    fi\n        fi\n    done\n    echo $count", "    local -a arr=($1)\n    local\
    \ count=0\n    for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n    \
    \        if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i %\
    \ 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                if [[ $(($i / 10)) -eq 1 ]] || [[ $(($i / 10)) -eq 3 ]] || [[\
    \ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10)) -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]];\
    \ then\n                    count=$(($count + 1))\n                fi\n      \
    \      fi\n        fi\n    done\n    echo $count", "    local -i count=0\n   \
    \ for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i%10))%2 -ne 0 ]] && [[\
    \ $(($i/10))%2 -ne 0 ]]; then\n            ((count++))\n        fi\n    done\n\
    \    echo $count", "    local -a array=($1)\n    local count=0\n    for i in ${array[@]};\
    \ do\n        if [[ $i -gt 10 ]]; then\n            local first=$(echo $i | cut\
    \ -c1)\n            local last=$(echo $i | cut -c2)\n            if [[ $first\
    \ -gt 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n             \
    \   count=$((count+1))\n            fi\n        fi\n    done\n    echo $count",
  "    local -a array=($1)\n    local -i count=0\n    for i in ${array[@]}; do\n \
    \       if [ $i -gt 10 ]; then\n            local -i firstDigit=${i:0:1}\n   \
    \         local -i lastDigit=${i:(-1)}\n            if [ $((firstDigit % 2)) -ne\
    \ 0 ] && [ $((lastDigit % 2)) -ne 0 ]; then\n                count=$((count +\
    \ 1))\n            fi\n        fi\n    done\n    echo $count", "    local -a array=(\"\
    $@\")\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -gt\
    \ 10 ]] && [[ $(echo $i | cut -c1) -gt 1 ]] && [[ $(echo $i | cut -c1) -lt 9 ]]\
    \ && [[ $(echo $i | cut -c2) -gt 1 ]] && [[ $(echo $i | cut -c2) -lt 9 ]]; then\n\
    \            count=$((count+1))\n        fi\n    done\n    echo $count", "   \
    \ local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n \
    \       if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]] || [[\
    \ $(($i % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]]\
    \ || [[ $(($i % 10)) -eq 9 ]]; then\n                if [[ $(($i / 10)) -eq 1\
    \ ]] || [[ $(($i / 10)) -eq 3 ]] || [[ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10))\
    \ -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]]; then\n                    count=$((count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo \"\
    $count\"", "    local -a array=($1)\n    local count=0\n    for i in ${array[@]};\
    \ do\n        if [ $i -gt 10 ]; then\n            if [ $((i%10)) -eq 1 ] || [\
    \ $((i%10)) -eq 3 ] || [ $((i%10)) -eq 5 ] || [ $((i%10)) -eq 7 ] || [ $((i%10))\
    \ -eq 9 ]; then\n                if [ $((i/10)) -eq 1 ] || [ $((i/10)) -eq 3 ]\
    \ || [ $((i/10)) -eq 5 ] || [ $((i/10)) -eq 7 ] || [ $((i/10)) -eq 9 ]; then\n\
    \                    count=$((count+1))\n                fi\n            fi\n\
    \        fi\n    done\n    echo $count", "    local -a arr=($1)\n    local count=0\n\
    \    for i in ${arr[@]}; do\n        if [ $i -gt 10 ] && [ $(($i % 2)) -eq 1 ]\
    \ && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n      \
    \      ((count++))\n        fi\n    done\n    echo $count", "    local count=0\n\
    \    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i % 2)) -eq 1 ] && [ $((${i:0:1}\
    \ % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n            count=$(($count\
    \ + 1))\n        fi\n    done\n    echo $count", "    local count=0\n    for i\
    \ in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i % 2)) -eq 1 ]] && [[ $((${i:0:1}\
    \ % 2)) -eq 1 ]] && [[ $((${i: -1} % 2)) -eq 1 ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count", "    local -a arr=($1)\n    local count=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            local\
    \ first=${i:0:1}\n            local last=${i: -1}\n            if [[ $first -gt\
    \ 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n                count=$((count\
    \ + 1))\n            fi\n        fi\n    done\n    echo $count", "    local -a\
    \ arr=($1)\n    local -i count=0\n    for i in ${arr[@]}; do\n        if [ $i\
    \ -gt 10 ]; then\n            if [ $(($i % 2)) -eq 1 ]; then\n               \
    \ if [ $((${i:0:1} % 2)) -eq 1 ]; then\n                    count=$((count + 1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count", " \
    \   local -a nums=($1)\n    local count=0\n    for num in ${nums[@]}; do\n   \
    \     if [[ $num -gt 10 ]]; then\n            if [[ $(echo $num | cut -c1) -eq\
    \ 1 ]] || [[ $(echo $num | cut -c1) -eq 3 ]] || [[ $(echo $num | cut -c1) -eq\
    \ 5 ]] || [[ $(echo $num | cut -c1) -eq 7 ]] || [[ $(echo $num | cut -c1) -eq\
    \ 9 ]]; then\n                if [[ $(echo $num | cut -c2) -eq 1 ]] || [[ $(echo\
    \ $num | cut -c2) -eq 3 ]] || [[ $(echo $num | cut -c2) -eq 5 ]] || [[ $(echo\
    \ $num | cut -c2) -eq 7 ]] || [[ $(echo $num | cut -c2) -eq 9 ]]; then\n     \
    \               count=$((count+1))\n                fi\n            fi\n     \
    \   fi\n    done\n    echo $count", "    local count=0\n    for num in $1; do\n\
    \        if [ $num -gt 10 ] && [ $(($num % 2)) -eq 1 ] && [ $((${num:0:1} % 2))\
    \ -eq 1 ] && [ $((${num: -1} % 2)) -eq 1 ]; then\n            count=$(($count\
    \ + 1))\n        fi\n    done\n    echo $count", "    local -a array=($1)\n  \
    \  local count=0\n    for i in ${array[@]}; do\n        if [[ $i -gt 10 ]]; then\n\
    \            if [[ $(($i%10)) -eq 1 ]] || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10))\
    \ -eq 5 ]] || [[ $(($i%10)) -eq 7 ]] || [[ $(($i%10)) -eq 9 ]]; then\n       \
    \         if [[ $(($i/10)) -eq 1 ]] || [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10))\
    \ -eq 5 ]] || [[ $(($i/10)) -eq 7 ]] || [[ $(($i/10)) -eq 9 ]]; then\n       \
    \             count=$(($count+1))\n                fi\n            fi\n      \
    \  fi\n    done\n    echo $count", "    local -a array=($1)\n    local count=0\n\
    \    for i in ${array[@]}; do\n        if [[ $i -gt 10 ]]; then\n            local\
    \ firstDigit=$(echo $i | cut -c1)\n            local lastDigit=$(echo $i | cut\
    \ -c-1)\n            if [[ $firstDigit -eq 1 || $firstDigit -eq 3 || $firstDigit\
    \ -eq 5 || $firstDigit -eq 7 || $firstDigit -eq 9 ]] && [[ $lastDigit -eq 1 ||\
    \ $lastDigit -eq 3 || $lastDigit -eq 5 || $lastDigit -eq 7 || $lastDigit -eq 9\
    \ ]]; then\n                count=$((count+1))\n            fi\n        fi\n \
    \   done\n    echo $count", "    local -a arr=($1)\n    local count=0\n    for\
    \ i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $((i%10))\
    \ -eq 1 ]] || [[ $((i%10)) -eq 3 ]] || [[ $((i%10)) -eq 5 ]] || [[ $((i%10)) -eq\
    \ 7 ]] || [[ $((i%10)) -eq 9 ]]; then\n                if [[ $((i/10)) -eq 1 ]]\
    \ || [[ $((i/10)) -eq 3 ]] || [[ $((i/10)) -eq 5 ]] || [[ $((i/10)) -eq 7 ]] ||\
    \ [[ $((i/10)) -eq 9 ]]; then\n                    count=$((count+1))\n      \
    \          fi\n            fi\n        fi\n    done\n    echo $count", "    local\
    \ -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n        if [ $i\
    \ -gt 10 ]; then\n            local first=$(echo $i | cut -c1)\n            local\
    \ last=$(echo $i | cut -c${#i})\n            if [ $((first%2)) -ne 0 ] && [ $((last%2))\
    \ -ne 0 ]; then\n                count=$((count+1))\n            fi\n        fi\n\
    \    done\n    echo $count", "    local -i count=0\n    for i in $1; do\n    \
    \    if [[ $i -gt 10 ]] && [[ $(($i%10))%2 -ne 0 ]] && [[ $(($i/10))%2 -ne 0 ]];\
    \ then\n            ((count++))\n        fi\n    done\n    echo $count", "   \
    \ local -a arr\n    arr=($1)\n    local -i count=0\n    for i in ${arr[@]}; do\n\
    \        if [[ $i -gt 10 ]]; then\n            local -i first=${i:0:1}\n     \
    \       local -i last=${i:(-1)}\n            if [[ $first -gt 1 && $first -lt\
    \ 9 && $last -gt 1 && $last -lt 9 ]]; then\n                ((count++))\n    \
    \        fi\n        fi\n    done\n    echo $count", "    local -a array=($1)\n\
    \    local count=0\n    for i in ${array[@]}; do\n        if [ $i -gt 10 ]; then\n\
    \            if [ $(($i % 2)) -ne 0 ]; then\n                if [ $((${i:0:1}\
    \ % 2)) -ne 0 ]; then\n                    count=$(($count + 1))\n           \
    \     fi\n            fi\n        fi\n    done\n    echo $count", "    local -i\
    \ count=0\n    for i in $1; do\n        if (( i > 10 )); then\n            if\
    \ [[ $i =~ ^[13579] ]] && [[ $i =~ [13579]$ ]]; then\n                (( count++\
    \ ))\n            fi\n        fi\n    done\n    echo $count", "    local -a arr=(\"\
    $@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt\
    \ 10 ]]; then\n            local firstDigit=$(echo $i | cut -c1)\n           \
    \ local lastDigit=$(echo $i | cut -c2)\n            if [[ $firstDigit -eq 1 ||\
    \ $firstDigit -eq 3 || $firstDigit -eq 5 || $firstDigit -eq 7 || $firstDigit -eq\
    \ 9 ]] && [[ $lastDigit -eq 1 || $lastDigit -eq 3 || $lastDigit -eq 5 || $lastDigit\
    \ -eq 7 || $lastDigit -eq 9 ]]; then\n                count=$((count+1))\n   \
    \         fi\n        fi\n    done\n    echo $count", "    local -a arr=($1)\n\
    \    local count=0\n    for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n\
    \            local first=${i:0:1}\n            local last=${i: -1}\n         \
    \   if [[ $first -gt 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n\
    \                count=$((count + 1))\n            fi\n        fi\n    done\n\
    \    echo $count", "    echo \"$1\" | tr ' ' '\\n' | grep -E '^[13579]|[13579]$'\
    \ | grep -E '[13579]' | grep -E '[13579]$' | wc -l", "    # Write your code here\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n", "    local count=0\n    for num in $1; do\n        if\
    \ [ $num -gt 10 ] && [ $(($num%10)) -ne 0 ] && [ $(($num/10)) -ne 0 ]; then\n\
    \            count=$(($count+1))\n        fi\n    done\n    echo $count", "  \
    \  # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n", "    local -i count=0\n \
    \   for num in $1; do\n        if [[ $num -gt 10 ]] && [[ $(($num % 2)) -eq 1\
    \ ]] && [[ $((${num:0:1} % 2)) -eq 1 ]] && [[ $((${num: -1} % 2)) -eq 1 ]]; then\n\
    \            ((count++))\n        fi\n    done\n    echo $count", "    # TODO:\
    \ write your code here\n    # You can use the following command to get the first\
    \ digit of a number:\n    # firstDigit=$(echo $number | cut -c 1)\n    # You can\
    \ use the following command to get the last digit of a number:\n    # lastDigit=$(echo\
    \ $number | cut -c -1)\n    # You can use the following command to check if a\
    \ number is odd:\n    # if [[ $number % 2 -ne 0 ]]; then\n    #   echo \"odd\"\
    \n    # fi\n    # You can use the following command to check if a number is greater\
    \ than 10:\n    # if [[ $number -gt 10 ]]; then\n    #   echo \"greater than 10\"\
    \n    # fi\n    # You can use the following command to get the number of elements\
    \ in an array:\n    # array=(1 2 3 4 5)\n    # echo ${#array[@]}\n    # You can\
    \ use the following command to get the number of elements in a string:\n    #\
    \ string=\"1 2 3 4 5\"\n    # echo ${#string}\n    # You can use the following\
    \ command to split a string into an array:\n    # string=\"1 2 3 4 5\"\n    #\
    \ array=($string)\n    # echo ${array[@]}\n    # You can use the following command\
    \ to get the length of a string:\n    # string=\"1 2 3 4 5\"\n    # echo ${#string}\n\
    \    # You can use the following command to get the length of an array:\n    #\
    \ array=(1 2 3 4 5)\n    # echo ${#array[@]}\n    # You can use the following\
    \ command to get the length of a string:\n    # string=\"1 2 3 4 5\"\n    # echo\
    \ ${#string}\n    # You can use the following command to get the length of an\
    \ array:\n    # array=(1 2 3 4 5)\n    # echo ${#array[@]}\n    # You can use\
    \ the following command to get the length of a string:\n    # string=\"1 2 3 4\
    \ 5\"\n    # echo ${#string}\n    # You can use the following command to get the\
    \ length of an array:\n    # array=(1 2 3 4 5)\n    # echo ${", "    local -a\
    \ arr=($1)\n    local -i count=0\n    for i in ${arr[@]}; do\n        if [ $i\
    \ -gt 10 ]; then\n            local -i firstDigit=${i:0:1}\n            local\
    \ -i lastDigit=${i: -1}\n            if [ $((firstDigit % 2)) -ne 0 ] && [ $((lastDigit\
    \ % 2)) -ne 0 ]; then\n                ((count++))\n            fi\n        fi\n\
    \    done\n    echo $count", "    local -a arr\n    local -i i=0\n    local -i\
    \ count=0\n    local -i num\n    local -i firstDigit\n    local -i lastDigit\n\
    \    IFS=' ' read -a arr <<< \"$1\"\n    for ((i=0; i<${#arr[@]}; i++)); do\n\
    \        num=${arr[$i]}\n        firstDigit=$(echo $num | cut -c1)\n        lastDigit=$(echo\
    \ $num | cut -c${#num})\n        if [[ $num -gt 10 && $firstDigit%2 -ne 0 && $lastDigit%2\
    \ -ne 0 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
  "\tlocal count=0\n\tfor i in $1; do\n\t\tif [[ $i -gt 10 ]]; then\n\t\t\tif [[ $(($i\
    \ % 10)) -ne 0 ]]; then\n\t\t\t\tif [[ $(($i / 10)) -ne 0 ]]; then\n\t\t\t\t\t\
    if [[ $(($i % 10)) -ne 0 ]]; then\n\t\t\t\t\t\tif [[ $(($i / 10)) -ne 0 ]]; then\n\
    \t\t\t\t\t\t\tif [[ $(($i % 10)) -ne 0 ]]; then\n\t\t\t\t\t\t\t\tif [[ $(($i /\
    \ 10)) -ne 0 ]]; then\n\t\t\t\t\t\t\t\t\tif [[ $(($i % 10)) -ne 0 ]]; then\n\t\
    \t\t\t\t\t\t\t\t\tif [[ $(($i / 10)) -ne 0 ]]; then\n\t\t\t\t\t\t\t\t\t\t\tif\
    \ [[ $(($i % 10)) -ne 0 ]]; then\n\t\t\t\t\t\t\t\t\t\t\t\tif [[ $(($i / 10)) -ne\
    \ 0 ]]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\tif [[ $(($i % 10)) -ne 0 ]]; then\n\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\tif [[ $(($i / 10)) -ne 0 ]]; then\n\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\t\tif [[ $(($i % 10)) -ne 0 ]]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    if [[ $(($i / 10)) -ne 0 ]]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [[ $(($i\
    \ % 10)) -ne 0 ]]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [[ $(($i / 10))\
    \ -ne 0 ]]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [[ $(($i % 10)) -ne\
    \ 0 ]]; then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif [[ $(($i / 10)) -ne 0\
    \ ]]; then\n\t\t\t\t\t\t", "\tlocal -a numbers=($1)\n\tlocal count=0\n\tfor number\
    \ in ${numbers[@]}; do\n\t\tif [ ${number} -gt 10 ]; then\n\t\t\tif [ $((${number}\
    \ % 2)) -ne 0 ]; then\n\t\t\t\tif [ $((${number} % 10)) -ne 0 ]; then\n\t\t\t\t\
    \tcount=$((${count} + 1))\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tdone\n\techo ${count}",
  "    # TODO: Write your code here\n    # Hint: You can use a for loop to iterate\
    \ over the elements in the array\n    # and use the modulo operator to check if\
    \ a number is odd.\n    #\n    # For example:\n    # for i in \"${array[@]}\"\n\
    \    # do\n    #     if [ $((i % 2)) -eq 1 ]\n    #     then\n    #         echo\
    \ \"$i is odd\"\n    #     fi\n    # done\n    #\n    # You can also use the following\
    \ command to get the first digit of a number:\n    # first_digit=$((i / 10))\n\
    \    #\n    # And the following command to get the last digit of a number:\n \
    \   # last_digit=$((i % 10))\n    #\n    # Note that you can use the above commands\
    \ to get the first and last digits\n    # of a number in the same if statement.\n\
    \    #\n    # For example:\n    # if [ $((i / 10)) -eq 1 ] && [ $((i % 10)) -eq\
    \ 1 ]\n    # then\n    #     echo \"$i is 11\"\n    # fi\n    #\n    # You can\
    \ also use the following command to convert a number to a string:\n    # str=$(echo\
    \ $i | sed 's/-//g')\n    #\n    # For example:\n    # if [ $((i / 10)) -eq 1\
    \ ] && [ $((i % 10)) -eq 1 ] && [ $(echo $i | sed 's/-//g') -gt 10 ]\n    # then\n\
    \    #     echo \"$i is 11 and greater than 10\"\n    # fi\n    #\n    # You can\
    \ also use the following command to get the length of a string:\n    # len=$(echo\
    \ $str | wc -c)\n    #\n    # For example:\n    # if [ $((i / 10)) -eq 1 ] &&\
    \ [ $((i % 10)) -eq 1 ] && [ $(echo $i | sed 's/-//g') -gt 10 ] && [ $(echo $str\
    \ | wc -c) -eq 2 ]\n    # then\n    #     echo \"$i is 11 and greater than 10\
    \ and has 2 digits\"\n    # fi", "    local -a arr=($1)\n    local count=0\n \
    \   for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if [[\
    \ $(($i%10)) -eq 1 ]] || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10)) -eq 5 ]] || [[\
    \ $(($i%10)) -eq 7 ]] || [[ $(($i%10)) -eq 9 ]]; then\n                if [[ $(($i/10))\
    \ -eq 1 ]] || [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10)) -eq 5 ]] || [[ $(($i/10))\
    \ -eq 7 ]] || [[ $(($i/10)) -eq 9 ]]; then\n                    count=$(($count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count", " \
    \   local -i count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i\
    \ % 2)) -eq 1 ]] && [[ $((${i:0:1} % 2)) -eq 1 ]] && [[ $((${i: -1:1} % 2)) -eq\
    \ 1 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
  "    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n        if\
    \ [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -eq 1 ]; then\n          \
    \      local first=$(($i / 10))\n                if [ $(($first % 2)) -eq 1 ];\
    \ then\n                    count=$(($count + 1))\n                fi\n      \
    \      fi\n        fi\n    done\n    echo $count", "    local -i count=0\n   \
    \ for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i % 2)) -eq 1 ]] && [[\
    \ $((${i:0:1} % 2)) -eq 1 ]] && [[ $((${i: -1} % 2)) -eq 1 ]]; then\n        \
    \    count+=1\n        fi\n    done\n    echo $count", "    local -i count=0\n\
    \    for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i % 2)) -eq 1 ]] &&\
    \ [[ $((${i:0:1} % 2)) -eq 1 ]] && [[ $((${i: -1} % 2)) -eq 1 ]]; then\n     \
    \       ((count++))\n        fi\n    done\n    echo $count", "    local -a arr=(\"\
    $@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt\
    \ 10 ]]; then\n            if [[ $(echo $i | cut -c1) -gt 1 ]] && [[ $(echo $i\
    \ | cut -c1) -lt 9 ]]; then\n                if [[ $(echo $i | cut -c2) -gt 1\
    \ ]] && [[ $(echo $i | cut -c2) -lt 9 ]]; then\n                    count=$((count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count", " \
    \   # Write your code here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n", "    local -a arr=(\"$@\"\
    )\n    local count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 10\
    \ ]]; then\n            if [[ $i =~ ^[13579] ]] && [[ $i =~ [13579]$ ]]; then\n\
    \                ((count++))\n            fi\n        fi\n    done\n    echo \"\
    $count\"", "    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(($i%10)) -eq 1 ]]\
    \ || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10)) -eq 5 ]] || [[ $(($i%10)) -eq 7 ]]\
    \ || [[ $(($i%10)) -eq 9 ]]; then\n                if [[ $(($i/10)) -eq 1 ]] ||\
    \ [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10)) -eq 5 ]] || [[ $(($i/10)) -eq 7 ]] ||\
    \ [[ $(($i/10)) -eq 9 ]]; then\n                    count=$((count+1))\n     \
    \           fi\n            fi\n        fi\n    done\n    echo \"$count\"", " \
    \   local -i count=0\n    for i in $1; do\n        if ((i > 10)); then\n     \
    \       if (((i / 10) % 2 != 0)) && ((i % 10 != 0)); then\n                ((count++))\n\
    \            fi\n        fi\n    done\n    echo $count", "    # your code here\n\
    \    echo \"$1\" | tr ' ' '\\n' | awk '{if($1>10 && $1%2==1 && substr($1,1,1)%2==1\
    \ && substr($1,length($1),1)%2==1) print $1}' | wc -l", "    local count=0\n \
    \   for i in $1; do\n        if [ $i -gt 10 ]; then\n            if [ $(($i %\
    \ 2)) -eq 1 ]; then\n                if [ $(($(($i / 10)) % 2)) -eq 1 ]; then\n\
    \                    count=$(($count + 1))\n                fi\n            fi\n\
    \        fi\n    done\n    echo $count", "    local -i count=0\n    for i in $1;\
    \ do\n        if (( i > 10 )); then\n            if (( (i / 10) % 2 != 0 && i\
    \ % 10 != 0 )); then\n                (( count++ ))\n            fi\n        fi\n\
    \    done\n    echo $count", "    local -a arr=($1)\n    local count=0\n    for\
    \ i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            local first=$(echo\
    \ $i | cut -c1)\n            local last=$(echo $i | cut -c${#i})\n           \
    \ if [[ $first -gt 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n\
    \                count=$((count + 1))\n            fi\n        fi\n    done\n\
    \    echo $count", "    local -i count=0\n    for i in $1; do\n        if [[ $i\
    \ -gt 10 ]] && [[ $(($i % 2)) -eq 1 ]] && [[ $((${i:0:1} % 2)) -eq 1 ]] && [[\
    \ $((${i: -1} % 2)) -eq 1 ]]; then\n            ((count++))\n        fi\n    done\n\
    \    echo $count", "\tlocal -i count=0\n\tfor n in $1; do\n\t\tif (( n > 10 ));\
    \ then\n\t\t\tif (( n % 2 == 1 )); then\n\t\t\t\tif (( n % 10 == 1 || n % 10 ==\
    \ 3 || n % 10 == 5 || n % 10 == 7 || n % 10 == 9 )); then\n\t\t\t\t\t(( count++\
    \ ))\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tdone\n\techo \"$count\"", "    local -i\
    \ count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $((i%10))%2 -eq\
    \ 1 ]] && [[ $((i/10))%2 -eq 1 ]]; then\n            ((count++))\n        fi\n\
    \    done\n    echo $count", "    local -a array=($1)\n    local count=0\n   \
    \ for i in ${array[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if [[\
    \ $(echo $i | cut -c1) -eq 1 ]] || [[ $(echo $i | cut -c1) -eq 3 ]] || [[ $(echo\
    \ $i | cut -c1) -eq 5 ]] || [[ $(echo $i | cut -c1) -eq 7 ]] || [[ $(echo $i |\
    \ cut -c1) -eq 9 ]]; then\n                if [[ $(echo $i | cut -c2) -eq 1 ]]\
    \ || [[ $(echo $i | cut -c2) -eq 3 ]] || [[ $(echo $i | cut -c2) -eq 5 ]] || [[\
    \ $(echo $i | cut -c2) -eq 7 ]] || [[ $(echo $i | cut -c2) -eq 9 ]]; then\n  \
    \                  count=$((count+1))\n                fi\n            fi\n  \
    \      fi\n    done\n    echo $count", "  # Write your code here\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n", "    local -i count=0\n\
    \    for i in $1; do\n        if (( i > 10 )); then\n            if (( (i / 10)\
    \ % 2 != 0 )) && (( i % 2 != 0 )); then\n                (( count++ ))\n     \
    \       fi\n        fi\n    done\n    echo \"$count\"", "    local -a arr=($1)\n\
    \    local count=0\n    for i in ${arr[@]}; do\n        if [ $i -gt 10 ]; then\n\
    \            if [ $(($i%10)) -eq 1 ] || [ $(($i%10)) -eq 3 ] || [ $(($i%10)) -eq\
    \ 5 ] || [ $(($i%10)) -eq 7 ] || [ $(($i%10)) -eq 9 ]; then\n                if\
    \ [ $(($i/10)) -eq 1 ] || [ $(($i/10)) -eq 3 ] || [ $(($i/10)) -eq 5 ] || [ $(($i/10))\
    \ -eq 7 ] || [ $(($i/10)) -eq 9 ]; then\n                    count=$(($count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count", " \
    \   local -i count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i\
    \ % 2)) -eq 1 ]] && [[ $((${i:0:1} % 2)) -eq 1 ]] && [[ $((${i: -1} % 2)) -eq\
    \ 1 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
  "    local -a arr=()\n    local -i count=0\n    local -i i=0\n    local -i len=0\n\
    \    local -i first=0\n    local -i last=0\n    local -i num=0\n    local -i res=0\n\
    \n    arr=($1)\n    len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        num=${arr[i]}\n\
    \        if [[ $num -gt 10 ]]; then\n            first=$(($num / 10))\n      \
    \      last=$(($num % 10))\n            res=$(($first % 2))\n            if [[\
    \ $res -eq 1 ]]; then\n                res=$(($last % 2))\n                if\
    \ [[ $res -eq 1 ]]; then\n                    count=$(($count + 1))\n        \
    \        fi\n            fi\n        fi\n    done\n    echo $count", "    local\
    \ -a arr=($1)\n    local -i count=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -gt 10 ]]; then\n            if [[ $(echo $i | cut -c1) -eq 1 ]] || [[ $(echo\
    \ $i | cut -c1) -eq 3 ]] || [[ $(echo $i | cut -c1) -eq 5 ]] || [[ $(echo $i |\
    \ cut -c1) -eq 7 ]] || [[ $(echo $i | cut -c1) -eq 9 ]]; then\n              \
    \  if [[ $(echo $i | cut -c2) -eq 1 ]] || [[ $(echo $i | cut -c2) -eq 3 ]] ||\
    \ [[ $(echo $i | cut -c2) -eq 5 ]] || [[ $(echo $i | cut -c2) -eq 7 ]] || [[ $(echo\
    \ $i | cut -c2) -eq 9 ]]; then\n                    count=$((count+1))\n     \
    \           fi\n            fi\n        fi\n    done\n    echo $count", "    local\
    \ -a arr=($1)\n    local -i count=0\n    for i in ${arr[@]}; do\n        if [[\
    \ $i -gt 10 ]]; then\n            local -i first=$(echo $i | cut -c1)\n      \
    \      local -i last=$(echo $i | cut -c-1)\n            if [[ $first -gt 1 &&\
    \ $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n                ((count++))\n\
    \            fi\n        fi\n    done\n    echo $count", "    # Write your code\
    \ here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n", "    local -i count=0\n    for num in $1; do\n\
    \        if ((num > 10)); then\n            if (((num/10)%2 != 0)) && ((num%2\
    \ != 0)); then\n                ((count++))\n            fi\n        fi\n    done\n\
    \    echo $count", "    local -a array=($1)\n    local count=0\n    for i in ${array[@]};\
    \ do\n        if [ $i -gt 10 ]; then\n            local first=${i:0:1}\n     \
    \       local last=${i: -1}\n            if [ $((first % 2)) -ne 0 ] && [ $((last\
    \ % 2)) -ne 0 ]; then\n                count=$((count + 1))\n            fi\n\
    \        fi\n    done\n    echo $count", "    local -a arr=($1)\n    local count=0\n\
    \    for i in ${arr[@]}; do\n        if [ $i -gt 10 ] && [ $(($i%10)) -gt 0 ]\
    \ && [ $(($i/10)) -gt 0 ]; then\n            count=$(($count+1))\n        fi\n\
    \    done\n    echo $count", "    local -a array=($1)\n    local count=0\n   \
    \ for i in ${array[@]}; do\n        if [ $i -gt 10 ]; then\n            if [ $(($i\
    \ % 2)) -ne 0 ]; then\n                if [ $((${i:0:1} % 2)) -ne 0 ]; then\n\
    \                    count=$(($count + 1))\n                fi\n            fi\n\
    \        fi\n    done\n    echo $count", "    local -a array=(\"$@\")\n    local\
    \ count=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -gt 10 ]] && [[\
    \ $(echo $i | cut -c1) -eq 1 ]] || [[ $(echo $i | cut -c1) -eq 3 ]] || [[ $(echo\
    \ $i | cut -c1) -eq 5 ]] || [[ $(echo $i | cut -c1) -eq 7 ]] || [[ $(echo $i |\
    \ cut -c1) -eq 9 ]] && [[ $(echo $i | cut -c2) -eq 1 ]] || [[ $(echo $i | cut\
    \ -c2) -eq 3 ]] || [[ $(echo $i | cut -c2) -eq 5 ]] || [[ $(echo $i | cut -c2)\
    \ -eq 7 ]] || [[ $(echo $i | cut -c2) -eq 9 ]]; then\n            count=$((count+1))\n\
    \        fi\n    done\n    echo $count", "    local result=0\n    for i in $1;\
    \ do\n        if [ $i -gt 10 ] && [ $(($i % 2)) -eq 1 ] && [ $((${i:0:1} % 2))\
    \ -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n            result=$(($result\
    \ + 1))\n        fi\n    done\n    echo $result", "    echo \"$1\" | awk '{\n\
    \        for (i = 1; i <= NF; i++) {\n            if ($i > 10 && ($i % 2 == 1)\
    \ && ($i % 10 == 1 || $i % 10 == 3 || $i % 10 == 5 || $i % 10 == 7 || $i % 10\
    \ == 9)) {\n                count++;\n            }\n        }\n        print\
    \ count;\n    }'", "    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10))%2 -ne 0\
    \ ]] && [[ $(($i / 10))%2 -ne 0 ]]; then\n                count=$(($count + 1))\n\
    \            fi\n        fi\n    done\n    echo $count", "    # Write your code\
    \ here\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n", "    local -a arr=($1)\n    local count=0\n  \
    \  for i in ${arr[@]}; do\n        if [ $i -gt 10 ]; then\n            if [ $(($i%10))\
    \ -gt 0 ] && [ $(($i%10)) -lt 10 ]; then\n                if [ $(($i/10)) -gt\
    \ 0 ] && [ $(($i/10)) -lt 10 ]; then\n                    count=$(($count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count", " \
    \   local -i count=0\n    for i in $1; do\n        if (( i > 10 )); then\n   \
    \         if [[ $i =~ ^[13579] && $i =~ [13579]$ ]]; then\n                ((\
    \ count++ ))\n            fi\n        fi\n    done\n    echo $count", "    # Write\
    \ your code here\n    echo \"1\"", "    local count=0\n    for i in $1; do\n \
    \       if [[ $i -gt 10 ]] && [[ $(($i%10)) -ne 0 ]] && [[ $(($i/10)) -ne 0 ]];\
    \ then\n            count=$(($count+1))\n        fi\n    done\n    echo $count",
  "    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i % 2))\
    \ -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n\
    \            count=$(($count + 1))\n        fi\n    done\n    echo $count", " \
    \ local -a array\n  local -i count=0\n  local -i i\n  local -i num\n  local -i\
    \ firstDigit\n  local -i lastDigit\n  IFS=' ' read -a array <<< \"$1\"\n  for\
    \ ((i=0; i<${#array[@]}; i++)); do\n    num=${array[$i]}\n    if ((num > 10));\
    \ then\n      firstDigit=$((num / 10))\n      lastDigit=$((num % 10))\n      if\
    \ ((firstDigit % 2 != 0 && lastDigit % 2 != 0)); then\n        ((count++))\n \
    \     fi\n    fi\n  done\n  echo \"$count\"", "    local -i count=0\n    for i\
    \ in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i % 2)) -eq 1 ]] && [[ $((${i:0:1}\
    \ % 2)) -eq 1 ]] && [[ $((${i: -1} % 2)) -eq 1 ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count", "    local -a arr=(\"$@\")\n    local\
    \ count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 10 ]]; then\n\
    \            if [[ $(echo $i | cut -c1) -gt 1 ]] && [[ $(echo $i | cut -c1) -lt\
    \ 9 ]]; then\n                if [[ $(echo $i | cut -c2) -gt 1 ]] && [[ $(echo\
    \ $i | cut -c2) -lt 9 ]]; then\n                    count=$((count+1))\n     \
    \           fi\n            fi\n        fi\n    done\n    echo $count", "    local\
    \ -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n       \
    \ if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] ]] && [[ $i =~ [13579]$\
    \ ]]; then\n                ((count++))\n            fi\n        fi\n    done\n\
    \    echo \"$count\"", "    local -a arr=(\"$@\")\n    local -i count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if (( i > 10 && i % 2 == 1 && i / 10 % 2 ==\
    \ 1 )); then\n            (( count++ ))\n        fi\n    done\n    echo \"$count\"",
  "    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i % 2))\
    \ -eq 1 ] && \\\n            [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2))\
    \ -eq 1 ]; then\n            count=$(($count + 1))\n        fi\n    done\n   \
    \ echo $count", "    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]};\
    \ do\n        if [ $i -gt 10 ]; then\n            local first=$(echo $i | cut\
    \ -c1)\n            local last=$(echo $i | cut -c${#i})\n            if [ $((first\
    \ % 2)) -eq 1 ] && [ $((last % 2)) -eq 1 ]; then\n                count=$((count\
    \ + 1))\n            fi\n        fi\n    done\n    echo $count", '    # Write
    your code here', "    local -i count=0\n    for num in $1; do\n        if [[ $num\
    \ -gt 10 ]] && [[ $(($num % 2)) -eq 1 ]] && [[ $((${num:0:1} % 2)) -eq 1 ]] &&\
    \ [[ $((${num: -1} % 2)) -eq 1 ]]; then\n            ((count++))\n        fi\n\
    \    done\n    echo $count", "    local -a arr=($1)\n    local count=0\n    for\
    \ i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(($i\
    \ % 10)) -ne 0 ]]; then\n                if [[ $(($i / 10)) -ne 0 ]]; then\n \
    \                   if [[ $(($i % 10)) -ne 0 ]]; then\n                      \
    \  if [[ $(($i / 10)) -ne 0 ]]; then\n                            if [[ $(($i\
    \ % 10)) -ne 0 ]]; then\n                                if [[ $(($i / 10)) -ne\
    \ 0 ]]; then\n                                    if [[ $(($i % 10)) -ne 0 ]];\
    \ then\n                                        if [[ $(($i / 10)) -ne 0 ]]; then\n\
    \                                            if [[ $(($i % 10)) -ne 0 ]]; then\n\
    \                                                if [[ $(($i / 10)) -ne 0 ]];\
    \ then\n                                                    if [[ $(($i % 10))\
    \ -ne 0 ]]; then\n                                                        if [[\
    \ $(($i / 10)) -ne 0 ]]; then\n                                              \
    \              if [[ $(($i % 10)) -ne 0 ]]; then\n                           \
    \                                     if [[ $(($i / 10)) -ne 0 ]]; then\n    \
    \                                                                if [[ $(($i %\
    \ 10)) -ne 0 ]]; then\n                                                      \
    \                  if [[ $(($i / 10)) -ne 0 ]]; then\n                       \
    \                                                     if [[ $(($i % 10)) -ne 0\
    \ ]]; then\n                                                                 \
    \               if [[ $(($i / 10)) -ne 0 ]]; then\n                          \
    \                                                          if [[ $(($i % 10))\
    \ -ne 0 ]]; then\n                                                           \
    \                             if [[ $(($i / 10)) -ne 0 ]]; then\n            \
    \                                                                            \
    \    if [[ $(($i % 10)) -ne 0 ]]; then\n                                     \
    \                                                           if [[ $(($i / 10))\
    \ -ne 0 ]]; then\n                                                           \
    \                                         if [[ $(($i % 10)) -ne 0 ]]; then\n\
    \                                                                            \
    \                            if [[ $(($i / 10)) -ne 0 ]]; then\n             \
    \                                                                            \
    \                   if [[ $(($i % 10)) -ne 0 ]]; then\n                      \
    \                                                          ", "    local -a array=($1)\n\
    \    local count=0\n    for i in ${array[@]}; do\n        if [[ $i -gt 10 ]];\
    \ then\n            if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] ||\
    \ [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq\
    \ 9 ]]; then\n                count=$(($count + 1))\n            fi\n        fi\n\
    \    done\n    echo $count", "    local -a arr=($1)\n    local count=0\n    for\
    \ i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if [[ ${i:0:1}\
    \ -eq 1 || ${i:0:1} -eq 3 || ${i:0:1} -eq 5 || ${i:0:1} -eq 7 || ${i:0:1} -eq\
    \ 9 ]]; then\n                if [[ ${i: -1} -eq 1 || ${i: -1} -eq 3 || ${i: -1}\
    \ -eq 5 || ${i: -1} -eq 7 || ${i: -1} -eq 9 ]]; then\n                    ((count++))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count", " \
    \   local -i sum=0\n    for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i\
    \ % 10)) -ne 0 ]] && [[ $(($i / 10)) -ne 0 ]] && [[ $(($i % 10)) -ne $(($i / 10))\
    \ ]]; then\n            ((sum++))\n        fi\n    done\n    echo $sum", "   \
    \ local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i%10))\
    \ -gt 0 ]] && [[ $(($i/10)) -gt 0 ]] && [[ $(($i%10))%2 -ne 0 ]] && [[ $(($i/10))%2\
    \ -ne 0 ]]; then\n            count=$(($count+1))\n        fi\n    done\n    echo\
    \ $count", "    local -a arr=($1)\n    local -i count=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 10 ]]; then\n            local -i first=$(echo $i |\
    \ cut -c1)\n            local -i last=$(echo $i | cut -c2)\n            if [[\
    \ $first%2 -ne 0 && $last%2 -ne 0 ]]; then\n                ((count++))\n    \
    \        fi\n        fi\n    done\n    echo $count", "    # Write your code here\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n", "    # Write your code here\n    #\n    #\n    #\n  \
    \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n",
  "    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n        if\
    \ [ $i -gt 10 ] && [ $(($i%10)) -gt 0 ] && [ $(($i/10)) -gt 0 ]; then\n      \
    \      count=$(($count+1))\n        fi\n    done\n    echo $count", "    local\
    \ -a numbers=($1)\n    local count=0\n    for number in ${numbers[@]}; do\n  \
    \      if [[ $number -gt 10 ]]; then\n            if [[ $(($number % 2)) -eq 1\
    \ ]]; then\n                if [[ $((${number:0:1} % 2)) -eq 1 ]]; then\n    \
    \                count=$(($count + 1))\n                fi\n            fi\n \
    \       fi\n    done\n    echo $count", "    # Write your code here\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n", "    local -a arr=()\n    local -i count=0\n    for i in $1;\
    \ do\n        if [[ $i -gt 10 ]]; then\n            arr+=($i)\n        fi\n  \
    \  done\n    for i in ${arr[@]}; do\n        if [[ $(($i % 2)) -ne 0 ]] && [[\
    \ $((${i:0:1} % 2)) -ne 0 ]] && [[ $((${i: -1} % 2)) -ne 0 ]]; then\n        \
    \    count+=1\n        fi\n    done\n    echo $count", "    local -a arr=(\"$@\"\
    )\n    local count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 10\
    \ ]]; then\n            local first=${i:0:1}\n            local last=${i: -1}\n\
    \            if [[ $first -gt 1 && $first -lt 9 && $last -gt 1 && $last -lt 9\
    \ ]]; then\n                count=$((count + 1))\n            fi\n        fi\n\
    \    done\n    echo \"$count\"", "    local -a arr=($1)\n    local count=0\n \
    \   for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if [[\
    \ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]]\
    \ || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n            \
    \    if [[ $(($i / 10)) -eq 1 ]] || [[ $(($i / 10)) -eq 3 ]] || [[ $(($i / 10))\
    \ -eq 5 ]] || [[ $(($i / 10)) -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]]; then\n   \
    \                 count=$(($count + 1))\n                fi\n            fi\n\
    \        fi\n    done\n    echo $count", "    local -a arr=(\"$@\")\n    local\
    \ count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 10 ]]; then\n\
    \            local first=${i:0:1}\n            local last=${i: -1}\n         \
    \   if [[ $first -gt 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n\
    \                count=$((count + 1))\n            fi\n        fi\n    done\n\
    \    echo \"$count\"", "    local -a arr=(\"$@\")\n    local count=0\n    for\
    \ i in \"${arr[@]}\"; do\n        if [ \"$i\" -gt 10 ] && [ \"$(echo $i | cut\
    \ -c1)\" -eq \"$(echo $i | cut -c2)\" ]; then\n            count=$((count+1))\n\
    \        fi\n    done\n    echo \"$count\"", "    local -a arr=(\"$@\")\n    local\
    \ count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 10 ]]; then\n\
    \            if [[ $i =~ ^[13579] ]] && [[ $i =~ [13579]$ ]]; then\n         \
    \       ((count++))\n            fi\n        fi\n    done\n    echo \"$count\"",
  "  local -i count=0\n  for num in $1; do\n    if (( num > 10 )); then\n      if\
    \ [[ $num =~ ^[13579] ]] && [[ $num =~ [13579]$ ]]; then\n        (( count++ ))\n\
    \      fi\n    fi\n  done\n  echo $count", "    local -a arr=($1)\n    local count=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if\
    \ [[ $(echo $i | cut -c1) -eq 1 ]] || [[ $(echo $i | cut -c1) -eq 3 ]] || [[ $(echo\
    \ $i | cut -c1) -eq 5 ]] || [[ $(echo $i | cut -c1) -eq 7 ]] || [[ $(echo $i |\
    \ cut -c1) -eq 9 ]]; then\n                if [[ $(echo $i | cut -c-1) -eq 1 ]]\
    \ || [[ $(echo $i | cut -c-1) -eq 3 ]] || [[ $(echo $i | cut -c-1) -eq 5 ]] ||\
    \ [[ $(echo $i | cut -c-1) -eq 7 ]] || [[ $(echo $i | cut -c-1) -eq 9 ]]; then\n\
    \                    count=$((count+1))\n                fi\n            fi\n\
    \        fi\n    done\n    echo $count", "    local count=0\n    for i in $1;\
    \ do\n        if [[ $i -gt 10 ]] && [[ $(($i%10)) -ne 0 ]] && [[ $(($i/10)) -ne\
    \ 0 ]]; then\n            count=$(($count+1))\n        fi\n    done\n    echo\
    \ $count", "    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 10 ]]; then\n            local first=$(echo $i | cut\
    \ -c1)\n            local last=$(echo $i | cut -c${#i})\n            if [[ $first\
    \ -gt 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n             \
    \   ((count++))\n            fi\n        fi\n    done\n    echo $count", "   \
    \ local -a array\n    array=($1)\n    local count=0\n    for i in ${array[@]};\
    \ do\n        if [ $i -gt 10 ] && [ $(($i % 2)) -eq 1 ] && [ $((${i:0:1} % 2))\
    \ -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n            ((count++))\n    \
    \    fi\n    done\n    echo $count", "  # Write your code here\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n", "    local -a arr=($1)\n\
    \    local -i count=0\n    for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]];\
    \ then\n            local -i first=${i:0:1}\n            local -i last=${i: -1}\n\
    \            if [[ $((first % 2)) -ne 0 && $((last % 2)) -ne 0 ]]; then\n    \
    \            ((count++))\n            fi\n        fi\n    done\n    echo $count",
  "    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n    \
    \    if [ $i -gt 10 ]; then\n            local first=$(echo $i | cut -c1)\n  \
    \          local last=$(echo $i | cut -c2)\n            if [ $((first%2)) -eq\
    \ 1 ] && [ $((last%2)) -eq 1 ]; then\n                count=$((count+1))\n   \
    \         fi\n        fi\n    done\n    echo $count", "    # Write your code here\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n", "    local -a arr=($1)\n    local count=0\n    for i\
    \ in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(($i\
    \ % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[\
    \ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n                if\
    \ [[ $(($i / 10)) -eq 1 ]] || [[ $(($i / 10)) -eq 3 ]] || [[ $(($i / 10)) -eq\
    \ 5 ]] || [[ $(($i / 10)) -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]]; then\n       \
    \             count=$(($count + 1))\n                fi\n            fi\n    \
    \    fi\n    done\n    echo $count", "    local -a array=($1)\n    local count=0\n\
    \    for i in ${array[@]}; do\n        if [[ $i -gt 10 ]]; then\n            local\
    \ first=$(echo $i | cut -c1)\n            local last=$(echo $i | cut -c2)\n  \
    \          if [[ $first -gt 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]];\
    \ then\n                ((count++))\n            fi\n        fi\n    done\n  \
    \  echo $count", "    local -a arr=($1)\n    local -i count=0\n    for i in ${arr[@]};\
    \ do\n        if [ $i -gt 10 ] && [ $(($i%10)) -gt 0 ] && [ $(($i/10)) -gt 0 ];\
    \ then\n            count=$(($count+1))\n        fi\n    done\n    echo $count",
  "    local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n    \
    \    if [[ $i -gt 10 ]]; then\n            if [[ $((i%10)) -eq 1 ]] || [[ $((i%10))\
    \ -eq 3 ]] || [[ $((i%10)) -eq 5 ]] || [[ $((i%10)) -eq 7 ]] || [[ $((i%10)) -eq\
    \ 9 ]]; then\n                if [[ $((i/10)) -eq 1 ]] || [[ $((i/10)) -eq 3 ]]\
    \ || [[ $((i/10)) -eq 5 ]] || [[ $((i/10)) -eq 7 ]] || [[ $((i/10)) -eq 9 ]];\
    \ then\n                    count=$((count+1))\n                fi\n         \
    \   fi\n        fi\n    done\n    echo $count", "    local -a arr=(\"$@\")\n \
    \   local count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 10 ]];\
    \ then\n            if [[ $i =~ ^[13579] ]] && [[ $i =~ [13579]$ ]]; then\n  \
    \              (( count++ ))\n            fi\n        fi\n    done\n    echo \"\
    $count\"", "    local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]]\
    \ || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq\
    \ 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n                if [[ $(($i / 10)) -eq\
    \ 1 ]] || [[ $(($i / 10)) -eq 3 ]] || [[ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10))\
    \ -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]]; then\n                    count=$((count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo \"\
    $count\"", "    local count=0\n    for i in $1; do\n        if [ $i -gt 10 ] &&\
    \ [ $(($i%10)) -gt 0 ] && [ $(($i/10)) -gt 0 ]; then\n            count=$(($count+1))\n\
    \        fi\n    done\n    echo $count", "    local -a arr=($1)\n    local count=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if\
    \ [[ $(($i%10)) -eq 1 ]] || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10)) -eq 5 ]] ||\
    \ [[ $(($i%10)) -eq 7 ]] || [[ $(($i%10)) -eq 9 ]]; then\n                if [[\
    \ $(($i/10)) -eq 1 ]] || [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10)) -eq 5 ]] || [[\
    \ $(($i/10)) -eq 7 ]] || [[ $(($i/10)) -eq 9 ]]; then\n                    count=$(($count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count", " \
    \   local array=($1)\n    local count=0\n    for i in ${array[@]}; do\n      \
    \  if [[ $i -gt 10 ]]; then\n            local first=$(echo $i | cut -c1)\n  \
    \          local last=$(echo $i | cut -c2)\n            if [[ $first -gt 1 &&\
    \ $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n                count=$((count\
    \ + 1))\n            fi\n        fi\n    done\n    echo $count", "    local -i\
    \ count=0\n    for i in $1; do\n        if (( i > 10 )); then\n            if\
    \ [[ $i =~ ^[13579][0-9]*[13579]$ ]]; then\n                (( count++ ))\n  \
    \          fi\n        fi\n    done\n    echo $count", "    local -a array\n \
    \   array=($1)\n    local count=0\n    for i in ${array[@]}; do\n        if [\
    \ $i -gt 10 ]; then\n            local first=$(echo $i | cut -c1)\n          \
    \  local last=$(echo $i | cut -c${#i})\n            if [ $((first % 2)) -ne 0\
    \ ] && [ $((last % 2)) -ne 0 ]; then\n                count=$((count + 1))\n \
    \           fi\n        fi\n    done\n    echo $count", "    local -a arr=($1)\n\
    \    local count=0\n    for i in ${arr[@]}; do\n        if [ ${i} -gt 10 ]; then\n\
    \            if [ $((${i} % 2)) -ne 0 ]; then\n                if [ $((${i} /\
    \ 10)) -ne 0 ]; then\n                    if [ $((${i} / 10)) -ne 0 ]; then\n\
    \                        if [ $((${i} % 10)) -ne 0 ]; then\n                 \
    \           if [ $((${i} % 10)) -ne 0 ]; then\n                              \
    \  count=$((${count} + 1))\n                            fi\n                 \
    \       fi\n                    fi\n                fi\n            fi\n     \
    \   fi\n    done\n    echo ${count}", "    local -a arr=(\"$@\")\n    local count=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 10 ]]; then\n          \
    \  if [[ $i =~ ^[13579] ]] && [[ $i =~ [13579]$ ]]; then\n                ((count++))\n\
    \            fi\n        fi\n    done\n    echo \"$count\"", "    local -i count=0\n\
    \    for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i%10))%2 -ne 0 ]] &&\
    \ [[ $(($i/10))%2 -ne 0 ]]; then\n            ((count++))\n        fi\n    done\n\
    \    echo $count", "\tlocal -a arr=($1)\n\tlocal count=0\n\tfor i in ${arr[@]};\
    \ do\n\t\tif [[ $i -gt 10 ]]; then\n\t\t\tif [[ $(echo $i | cut -c1) -eq 1 ]]\
    \ || [[ $(echo $i | cut -c1) -eq 3 ]] || [[ $(echo $i | cut -c1) -eq 5 ]] || [[\
    \ $(echo $i | cut -c1) -eq 7 ]] || [[ $(echo $i | cut -c1) -eq 9 ]]; then\n\t\t\
    \t\tif [[ $(echo $i | cut -c2) -eq 1 ]] || [[ $(echo $i | cut -c2) -eq 3 ]] ||\
    \ [[ $(echo $i | cut -c2) -eq 5 ]] || [[ $(echo $i | cut -c2) -eq 7 ]] || [[ $(echo\
    \ $i | cut -c2) -eq 9 ]]; then\n\t\t\t\t\tcount=$((count+1))\n\t\t\t\tfi\n\t\t\
    \tfi\n\t\tfi\n\tdone\n\techo $count", "    local -a arr=($1)\n    local count=0\n\
    \    for i in ${arr[@]}; do\n        if [ $i -gt 10 ]; then\n            if [[\
    \ $i =~ ^[13579] ]] && [[ $i =~ [13579]$ ]]; then\n                count=$((count+1))\n\
    \            fi\n        fi\n    done\n    echo $count", "  local -i count=0\n\
    \  for i in $1; do\n    if (( i > 10 )); then\n      if [[ $i =~ ^[13579][0-9]*[13579]$\
    \ ]]; then\n        (( count++ ))\n      fi\n    fi\n  done\n  echo $count", " \
    \   local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n       \
    \ if [ $i -gt 10 ]; then\n            if [ $(($i%10)) -gt 0 ]; then\n        \
    \        if [ $(($i/10)) -gt 0 ]; then\n                    count=$(($count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count", " \
    \   local -a arr=($1)\n    local -i count=0\n    for i in ${arr[@]}; do\n    \
    \    if [ ${i:0:1} -gt 1 -a ${i:0:1} -lt 9 -a ${i: -1} -gt 1 -a ${i: -1} -lt 9\
    \ -a $i -gt 10 ]; then\n            ((count++))\n        fi\n    done\n    echo\
    \ $count", "    local -a array\n    local -i i\n    local -i count=0\n    local\
    \ -i n\n    local -i first\n    local -i last\n    array=($1)\n    for ((i=0;\
    \ i<${#array[@]}; i++)); do\n        n=${array[$i]}\n        first=$(echo $n |\
    \ cut -c1)\n        last=$(echo $n | rev | cut -c1)\n        if [ $n -gt 10 ]\
    \ && [ $((first%2)) -ne 0 ] && [ $((last%2)) -ne 0 ]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count", "    local -a array=($1)\n    local count=0\n\
    \    for i in ${array[@]}; do\n        if [ ${i:0:1} -gt 1 ] && [ ${i:0:1} -lt\
    \ 9 ] && [ ${i: -1} -gt 1 ] && [ ${i: -1} -lt 9 ]; then\n            count=$((count+1))\n\
    \        fi\n    done\n    echo $count", "    local -a numbers=($1)\n    local\
    \ -i count=0\n    for number in ${numbers[@]}; do\n        if [[ $number -gt 10\
    \ ]]; then\n            local -i firstDigit=$(echo $number | cut -c1)\n      \
    \      local -i lastDigit=$(echo $number | cut -c-1)\n            if [[ $firstDigit\
    \ -gt 1 && $firstDigit -lt 9 && $lastDigit -gt 1 && $lastDigit -lt 9 ]]; then\n\
    \                ((count++))\n            fi\n        fi\n    done\n    echo $count",
  "    local count=0\n    for n in $1; do\n        if [ $n -gt 10 ] && [ $(($n % 2))\
    \ -eq 1 ] && [ $((${n:0:1} % 2)) -eq 1 ] && [ $((${n: -1} % 2)) -eq 1 ]; then\n\
    \            count=$(($count + 1))\n        fi\n    done\n    echo $count", " \
    \   local -a arr=($1)\n    local -i count=0\n    for i in ${arr[@]}; do\n    \
    \    if [ $i -gt 10 ] && [ $(($i % 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ]\
    \ && [ $((${i: -1} % 2)) -eq 1 ]; then\n            ((count++))\n        fi\n\
    \    done\n    echo $count", "    local -i count=0\n    for i in $1; do\n    \
    \    if [[ $i -gt 10 ]] && [[ $(($i%10))%2 -ne 0 ]] && [[ $(($i/10))%2 -ne 0 ]];\
    \ then\n            ((count++))\n        fi\n    done\n    echo $count", "   \
    \ local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n \
    \       if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] ]] && [[ $i\
    \ =~ [13579]$ ]]; then\n                ((count++))\n            fi\n        fi\n\
    \    done\n    echo \"$count\"", "\tlocal -a arr=($1)\n\tlocal count=0\n\tfor\
    \ i in ${arr[@]}; do\n\t\tif [[ $i -gt 10 ]]; then\n\t\t\tif [[ $(($i%10)) -gt\
    \ 0 ]] && [[ $(($i/10)) -gt 0 ]]; then\n\t\t\t\tif [[ $(($i%10))%2 -ne 0 ]] &&\
    \ [[ $(($i/10))%2 -ne 0 ]]; then\n\t\t\t\t\tcount=$(($count+1))\n\t\t\t\tfi\n\t\
    \t\tfi\n\t\tfi\n\tdone\n\techo $count", "    local -a arr=(\"$@\")\n    local\
    \ count=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 10 ]]; then\n\
    \            if [[ $(($i%10)) -eq 1 ]] || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10))\
    \ -eq 5 ]] || [[ $(($i%10)) -eq 7 ]] || [[ $(($i%10)) -eq 9 ]]; then\n       \
    \         if [[ $(($i/10)) -eq 1 ]] || [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10))\
    \ -eq 5 ]] || [[ $(($i/10)) -eq 7 ]] || [[ $(($i/10)) -eq 9 ]]; then\n       \
    \             count=$((count+1))\n                fi\n            fi\n       \
    \ fi\n    done\n    echo \"$count\"", "    local -a array=($1)\n    local count=0\n\
    \    local firstDigit\n    local lastDigit\n    for i in \"${array[@]}\"; do\n\
    \        firstDigit=$(echo $i | head -c 1)\n        lastDigit=$(echo $i | tail\
    \ -c 1)\n        if [[ $i -gt 10 && $firstDigit%2 -ne 0 && $lastDigit%2 -ne 0\
    \ ]]; then\n            count=$((count+1))\n        fi\n    done\n    echo $count",
  "    # Write your code here\n    echo \"1\"", "    local arr=($1)\n    local count=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            local\
    \ first=${i:0:1}\n            local last=${i: -1}\n            if [[ $first -gt\
    \ 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n                ((count++))\n\
    \            fi\n        fi\n    done\n    echo $count", "    local -a arr=(\"\
    $@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n        if [ \"$i\"\
    \ -gt 10 ]; then\n            local first=$(echo \"$i\" | cut -c 1)\n        \
    \    local last=$(echo \"$i\" | cut -c -1)\n            if [ \"$first\" -gt 0\
    \ ] && [ \"$last\" -gt 0 ] && [ \"$((first % 2))\" -eq 1 ] && [ \"$((last % 2))\"\
    \ -eq 1 ]; then\n                count=$((count + 1))\n            fi\n      \
    \  fi\n    done\n    echo \"$count\"", "    local -a arr=(\"$@\")\n    local count=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 10 ]]; then\n          \
    \  local first=$(echo $i | cut -c1)\n            local last=$(echo $i | cut -c${#i})\n\
    \            if [[ $first -gt 1 && $first -lt 9 && $last -gt 1 && $last -lt 9\
    \ ]]; then\n                count=$((count+1))\n            fi\n        fi\n \
    \   done\n    echo $count", "    echo \"$1\" | tr ' ' '\\n' | grep -E '^[13579]\\\
    d*[13579]$' | grep -E '^\\d*[1-9]\\d*$' | wc -l", "    # Write your code here\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n", "    local -a arr=($1)\n    local count=0\n    for i\
    \ in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $((i%10))\
    \ -eq 1 ]] || [[ $((i%10)) -eq 3 ]] || [[ $((i%10)) -eq 5 ]] || [[ $((i%10)) -eq\
    \ 7 ]] || [[ $((i%10)) -eq 9 ]]; then\n                if [[ $((i/10)) -eq 1 ]]\
    \ || [[ $((i/10)) -eq 3 ]] || [[ $((i/10)) -eq 5 ]] || [[ $((i/10)) -eq 7 ]] ||\
    \ [[ $((i/10)) -eq 9 ]]; then\n                    count=$((count+1))\n      \
    \          fi\n            fi\n        fi\n    done\n    echo $count", "    local\
    \ -i count=0\n    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i % 2)) -eq\
    \ 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n  \
    \          count=$((count + 1))\n        fi\n    done\n    echo $count", "   \
    \ local -i count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $((i%10))%2\
    \ -eq 1 ]] && [[ $((i/10))%2 -eq 1 ]]; then\n            ((count++))\n       \
    \ fi\n    done\n    echo $count", "\tlocal count=0\n\tfor i in $1; do\n\t\tif\
    \ [ $i -gt 10 ]; then\n\t\t\tif [ $(($i%10)) -gt 0 ] && [ $(($i%10)) -lt 8 ];\
    \ then\n\t\t\t\tif [ $(($i/10)) -gt 0 ] && [ $(($i/10)) -lt 8 ]; then\n\t\t\t\t\
    \tcount=$(($count+1))\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\tdone\n\techo $count", " \
    \   local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n   \
    \     if [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -ne 0 ]; then\n   \
    \             if [ $((${i:0:1} % 2)) -ne 0 ]; then\n                    if [ $((${i:\
    \ -1} % 2)) -ne 0 ]; then\n                        count=$(($count + 1))\n   \
    \                 fi\n                fi\n            fi\n        fi\n    done\n\
    \    echo $count", "    local -i count=0\n    for i in $1; do\n        if [[ $i\
    \ -gt 10 ]] && [[ $(($i%10))%2 -ne 0 ]] && [[ $(($i/10))%2 -ne 0 ]]; then\n  \
    \          ((count++))\n        fi\n    done\n    echo $count", "    local -a\
    \ array=($1)\n    local count=0\n    for i in ${array[@]}; do\n        if [[ $i\
    \ -gt 10 ]]; then\n            local firstDigit=${i:0:1}\n            local lastDigit=${i:\
    \ -1}\n            if [[ $firstDigit -gt 0 && $firstDigit -lt 10 && $firstDigit%2\
    \ -ne 0 ]]; then\n                if [[ $lastDigit -gt 0 && $lastDigit -lt 10\
    \ && $lastDigit%2 -ne 0 ]]; then\n                    count=$((count+1))\n   \
    \             fi\n            fi\n        fi\n    done\n    echo $count", "  \
    \  local -i count=0\n    for num in $1; do\n        if [[ $num -gt 10 ]] && [[\
    \ $(($num % 10)) -ne 0 ]] && [[ $(($num / 10)) -ne 0 ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count", "    local -a arr=($1)\n    local count=0\n\
    \    for i in ${arr[@]}; do\n        if [ $i -gt 10 ]; then\n            local\
    \ first=${i:0:1}\n            local last=${i: -1}\n            if [ $((first %\
    \ 2)) -ne 0 ] && [ $((last % 2)) -ne 0 ]; then\n                count=$((count\
    \ + 1))\n            fi\n        fi\n    done\n    echo $count", "    local -a\
    \ arr=(\"$@\")\n    local -i count=0\n    for i in \"${arr[@]}\"; do\n       \
    \ if [[ $i -gt 10 ]] && [[ $(($i % 2)) -eq 1 ]] && [[ $((${i:0:1} % 2)) -eq 1\
    \ ]] && [[ $((${i: -1} % 2)) -eq 1 ]]; then\n            ((count++))\n       \
    \ fi\n    done\n    echo \"$count\"", "    local count=0\n    for num in $1; do\n\
    \        if [[ $num -gt 10 ]] && [[ $(($num%10))%2 -ne 0 ]] && [[ $(($num/10))%2\
    \ -ne 0 ]]; then\n            count=$(($count+1))\n        fi\n    done\n    echo\
    \ $count", "\tlocal -a array=($1)\n\tlocal count=0\n\tfor i in ${array[@]}; do\n\
    \t\tif [ $i -gt 10 ]; then\n\t\t\tif [ $(($i % 2)) -ne 0 ]; then\n\t\t\t\tif [\
    \ $((${i:0:1} % 2)) -ne 0 ]; then\n\t\t\t\t\tif [ $((${i: -1} % 2)) -ne 0 ]; then\n\
    \t\t\t\t\t\tcount=$(($count + 1))\n\t\t\t\t\tfi\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\
    \tdone\n\techo $count", "    local -a array=($1)\n    local count=0\n    for i\
    \ in ${array[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(echo\
    \ $i | cut -c1) -eq 1 ]] || [[ $(echo $i | cut -c1) -eq 3 ]] || [[ $(echo $i |\
    \ cut -c1) -eq 5 ]] || [[ $(echo $i | cut -c1) -eq 7 ]] || [[ $(echo $i | cut\
    \ -c1) -eq 9 ]]; then\n                if [[ $(echo $i | cut -c2) -eq 1 ]] ||\
    \ [[ $(echo $i | cut -c2) -eq 3 ]] || [[ $(echo $i | cut -c2) -eq 5 ]] || [[ $(echo\
    \ $i | cut -c2) -eq 7 ]] || [[ $(echo $i | cut -c2) -eq 9 ]]; then\n         \
    \           count=$((count+1))\n                fi\n            fi\n        fi\n\
    \    done\n    echo $count", "    local -a array=($1)\n    local count=0\n   \
    \ for i in ${array[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if [[\
    \ ${i:0:1} -eq 1 || ${i:0:1} -eq 3 || ${i:0:1} -eq 5 || ${i:0:1} -eq 7 || ${i:0:1}\
    \ -eq 9 ]]; then\n                if [[ ${i: -1} -eq 1 || ${i: -1} -eq 3 || ${i:\
    \ -1} -eq 5 || ${i: -1} -eq 7 || ${i: -1} -eq 9 ]]; then\n                   \
    \ count=$((count+1))\n                fi\n            fi\n        fi\n    done\n\
    \    echo $count", "    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(($i%10)) -eq 1 ]]\
    \ || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10)) -eq 5 ]] || [[ $(($i%10)) -eq 7 ]]\
    \ || [[ $(($i%10)) -eq 9 ]]; then\n                if [[ $(($i/10)) -eq 1 ]] ||\
    \ [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10)) -eq 5 ]] || [[ $(($i/10)) -eq 7 ]] ||\
    \ [[ $(($i/10)) -eq 9 ]]; then\n                    count=$(($count+1))\n    \
    \            fi\n            fi\n        fi\n    done\n    echo $count", "   \
    \ local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n        if\
    \ [ $i -gt 10 ]; then\n            if [ $(($i % 2)) -eq 1 ]; then\n          \
    \      if [ $((${i:0:1} % 2)) -eq 1 ]; then\n                    count=$(($count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo $count",
  "    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n        if\
    \ [ $i -gt 10 ] && [ $(($i%10)) -gt 0 ] && [ $(($i/10)) -gt 0 ]; then\n      \
    \      count=$(($count+1))\n        fi\n    done\n    echo $count", "  local -a\
    \ arr=($1)\n  local count=0\n  for i in ${arr[@]}; do\n    if (( i > 10 )); then\n\
    \      if [[ $i =~ ^[13579] && $i =~ [13579]$ ]]; then\n        (( count++ ))\n\
    \      fi\n    fi\n  done\n  echo $count", "    # Write your code here\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n", "    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]};\
    \ do\n        if [ $i -gt 10 ] && [ $(($i % 2)) -eq 1 ] && [ $((${i:0:1} % 2))\
    \ -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n            ((count++))\n    \
    \    fi\n    done\n    echo $count", "    local -a arr=($1)\n    local count=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            if\
    \ [[ $(($i%10)) -eq 1 ]] || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10)) -eq 5 ]] ||\
    \ [[ $(($i%10)) -eq 7 ]] || [[ $(($i%10)) -eq 9 ]]; then\n                if [[\
    \ $(($i/10)) -eq 1 ]] || [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10)) -eq 5 ]] || [[\
    \ $(($i/10)) -eq 7 ]] || [[ $(($i/10)) -eq 9 ]]; then\n                    count=$(($count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count", " \
    \   local -i count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i\
    \ % 2)) -eq 1 ]] && [[ $((${i:0:1} % 2)) -eq 1 ]] && [[ $((${i: -1} % 2)) -eq\
    \ 1 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
  "    local -i count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i\
    \ % 2)) -eq 1 ]] && [[ $((${i:0:1} % 2)) -eq 1 ]] && [[ $((${i: -1} % 2)) -eq\
    \ 1 ]]; then\n            ((count++))\n        fi\n    done\n    echo $count",
  "\tlocal -a array\n\tIFS=' ' read -a array <<< \"$1\"\n\tlocal count=0\n\tfor i\
    \ in \"${array[@]}\"; do\n\t\tif [ \"$i\" -gt 10 ]; then\n\t\t\tif [ $((i%10))\
    \ -gt 0 ] && [ $((i%10)) -lt 10 ]; then\n\t\t\t\tif [ $((i/10)) -gt 0 ] && [ $((i/10))\
    \ -lt 10 ]; then\n\t\t\t\t\tcount=$((count+1))\n\t\t\t\tfi\n\t\t\tfi\n\t\tfi\n\
    \tdone\n\techo \"$count\"", "    local -a array=($1)\n    local count=0\n    for\
    \ num in ${array[@]}; do\n        if [ ${#num} -gt 1 ] && [ $((${num:0:1} % 2))\
    \ -ne 0 ] && [ $((${num: -1} % 2)) -ne 0 ] && [ $num -gt 10 ]; then\n        \
    \    count=$(($count + 1))\n        fi\n    done\n    echo $count", "    local\
    \ -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n       \
    \ if [[ $i -gt 10 ]]; then\n            if [[ $i =~ ^[13579] ]] && [[ $i =~ [13579]$\
    \ ]]; then\n                ((count++))\n            fi\n        fi\n    done\n\
    \    echo \"$count\"", "    local -i count=0\n    for i in $1; do\n        if\
    \ [ $i -gt 10 ] && [ $(($i%10)) -gt 0 ] && [ $(($i/10)) -gt 0 ]; then\n      \
    \      count=$((count+1))\n        fi\n    done\n    echo $count", "    local\
    \ -a array=(\"$@\")\n    local count=0\n    for i in \"${array[@]}\"; do\n   \
    \     if [[ $i -gt 10 ]] && [[ $(echo $i | cut -c1) -eq 1 ]] || [[ $(echo $i |\
    \ cut -c1) -eq 3 ]] || [[ $(echo $i | cut -c1) -eq 5 ]] || [[ $(echo $i | cut\
    \ -c1) -eq 7 ]] || [[ $(echo $i | cut -c1) -eq 9 ]] && [[ $(echo $i | cut -c2)\
    \ -eq 1 ]] || [[ $(echo $i | cut -c2) -eq 3 ]] || [[ $(echo $i | cut -c2) -eq\
    \ 5 ]] || [[ $(echo $i | cut -c2) -eq 7 ]] || [[ $(echo $i | cut -c2) -eq 9 ]];\
    \ then\n            ((count++))\n        fi\n    done\n    echo $count", "   \
    \ local -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n     \
    \   if [[ $i -gt 10 ]]; then\n            if [[ $(echo $i | cut -c1) -eq 1 ]]\
    \ || [[ $(echo $i | cut -c1) -eq 3 ]] || [[ $(echo $i | cut -c1) -eq 5 ]] || [[\
    \ $(echo $i | cut -c1) -eq 7 ]] || [[ $(echo $i | cut -c1) -eq 9 ]]; then\n  \
    \              if [[ $(echo $i | cut -c2) -eq 1 ]] || [[ $(echo $i | cut -c2)\
    \ -eq 3 ]] || [[ $(echo $i | cut -c2) -eq 5 ]] || [[ $(echo $i | cut -c2) -eq\
    \ 7 ]] || [[ $(echo $i | cut -c2) -eq 9 ]]; then\n                    count=$((count+1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count", " \
    \   local -a array=($1)\n    local -i count=0\n    for ((i=0; i<${#array[@]};\
    \ i++)); do\n        if [[ ${array[$i]} -gt 10 ]]; then\n            if [[ ${array[$i]:0:1}\
    \ -ne 0 ]] && [[ ${array[$i]:0:1} -ne 2 ]] && [[ ${array[$i]:0:1} -ne 4 ]] &&\
    \ [[ ${array[$i]:0:1} -ne 6 ]] && [[ ${array[$i]:0:1} -ne 8 ]]; then\n       \
    \         if [[ ${array[$i]:-1:1} -ne 0 ]] && [[ ${array[$i]:-1:1} -ne 2 ]] &&\
    \ [[ ${array[$i]:-1:1} -ne 4 ]] && [[ ${array[$i]:-1:1} -ne 6 ]] && [[ ${array[$i]:-1:1}\
    \ -ne 8 ]]; then\n                    count=$((count+1))\n                fi\n\
    \            fi\n        fi\n    done\n    echo $count", "  local -i count=0\n\
    \  for i in $1; do\n    if (( i > 10 && i % 2 == 1 && i / 10 % 2 == 1 )); then\n\
    \      (( count++ ))\n    fi\n  done\n  echo $count", "    local count=0\n   \
    \ for i in $1; do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(($i %\
    \ 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[\
    \ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n                if\
    \ [[ $(($i / 10)) -eq 1 ]] || [[ $(($i / 10)) -eq 3 ]] || [[ $(($i / 10)) -eq\
    \ 5 ]] || [[ $(($i / 10)) -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]]; then\n       \
    \             count=$(($count + 1))\n                fi\n            fi\n    \
    \    fi\n    done\n    echo $count", "    local -a arr=(\"$@\")\n    local count=0\n\
    \    for i in \"${arr[@]}\"; do\n        if [[ $i -gt 10 ]]; then\n          \
    \  if [[ $i =~ ^[13579] ]] && [[ $i =~ [13579]$ ]]; then\n                count=$((count+1))\n\
    \            fi\n        fi\n    done\n    echo \"$count\"", "    local -a array=($1)\n\
    \    local -i count=0\n    for i in ${array[@]}; do\n        if [[ $i -gt 10 ]];\
    \ then\n            if [[ $(echo $i | cut -c1) -eq 1 ]] || [[ $(echo $i | cut\
    \ -c1) -eq 3 ]] || [[ $(echo $i | cut -c1) -eq 5 ]] || [[ $(echo $i | cut -c1)\
    \ -eq 7 ]] || [[ $(echo $i | cut -c1) -eq 9 ]]; then\n                if [[ $(echo\
    \ $i | cut -c2) -eq 1 ]] || [[ $(echo $i | cut -c2) -eq 3 ]] || [[ $(echo $i |\
    \ cut -c2) -eq 5 ]] || [[ $(echo $i | cut -c2) -eq 7 ]] || [[ $(echo $i | cut\
    \ -c2) -eq 9 ]]; then\n                    ((count++))\n                fi\n \
    \           fi\n        fi\n    done\n    echo $count", "    local -a arr=()\n\
    \    local -i count=0\n    local -i i=0\n    local -i num=0\n    local -i first=0\n\
    \    local -i last=0\n    local -i len=0\n    local -i temp=0\n    local -i sum=0\n\
    \    local -i num_len=0\n    local -i num_count=0\n    local -i num_sum=0\n  \
    \  local -i num_temp=0\n    local -i num_first=0\n    local -i num_last=0\n  \
    \  local -i num_len=0\n    local -i num_count=0\n    local -i num_sum=0\n    local\
    \ -i num_temp=0\n    local -i num_first=0\n    local -i num_last=0\n    local\
    \ -i num_len=0\n    local -i num_count=0\n    local -i num_sum=0\n    local -i\
    \ num_temp=0\n    local -i num_first=0\n    local -i num_last=0\n    local -i\
    \ num_len=0\n    local -i num_count=0\n    local -i num_sum=0\n    local -i num_temp=0\n\
    \    local -i num_first=0\n    local -i num_last=0\n    local -i num_len=0\n \
    \   local -i num_count=0\n    local -i num_sum=0\n    local -i num_temp=0\n  \
    \  local -i num_first=0\n    local -i num_last=0\n    local -i num_len=0\n   \
    \ local -i num_count=0\n    local -i num_sum=0\n    local -i num_temp=0\n    local\
    \ -i num_first=0\n    local -i num_last=0\n    local -i num_len=0\n    local -i\
    \ num_count=0\n    local -i num_sum=0\n    local -i num_temp=0\n    local -i num_first=0\n\
    \    local -i num_last=0\n    local -i num_len=0\n    local -i num_count=0", " \
    \   local -i count=0\n    for i in $1; do\n        if (( i > 10 )); then\n   \
    \         if (( (i / 10) % 2 != 0 && i % 10 != 0 )); then\n                ((\
    \ count++ ))\n            fi\n        fi\n    done\n    echo $count", "    local\
    \ -a array=($1)\n    local count=0\n    for i in ${array[@]}; do\n        if [[\
    \ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10))\
    \ -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i\
    \ % 10)) -eq 9 ]]; then\n                if [[ $(($i / 10)) -eq 1 ]] || [[ $(($i\
    \ / 10)) -eq 3 ]] || [[ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10)) -eq 7 ]] || [[\
    \ $(($i / 10)) -eq 9 ]]; then\n                    count=$(($count + 1))\n   \
    \             fi\n            fi\n        fi\n    done\n    echo $count", "  \
    \  local -a numbers\n    local -i count=0\n    local -i i\n    local -i num\n\
    \    local -i firstDigit\n    local -i lastDigit\n\n    numbers=($1)\n    for\
    \ ((i=0; i<${#numbers[@]}; i++)); do\n        num=${numbers[$i]}\n        firstDigit=$(echo\
    \ $num | cut -c1)\n        lastDigit=$(echo $num | cut -c${#num})\n        if\
    \ [ $num -gt 10 ] && [ $firstDigit -gt 1 ] && [ $lastDigit -gt 1 ]; then\n   \
    \         ((count++))\n        fi\n    done\n    echo $count", "    local -a arr=($1)\n\
    \    local count=0\n    for i in ${arr[@]}; do\n        if [ $i -gt 10 ]; then\n\
    \            if [ $(($i%10)) -gt 0 ] && [ $(($i%10)) -lt 10 ]; then\n        \
    \        if [ $(($i/10)) -gt 0 ] && [ $(($i/10)) -lt 10 ]; then\n            \
    \        count=$(($count+1))\n                fi\n            fi\n        fi\n\
    \    done\n    echo $count", "    local -a arr\n    local -i i=0\n    local -i\
    \ count=0\n    local -i num\n    local -i first\n    local -i last\n    arr=($1)\n\
    \    for ((i=0; i<${#arr[@]}; i++)); do\n        num=${arr[$i]}\n        first=$(($num/10))\n\
    \        last=$(($num%10))\n        if [ $num -gt 10 ] && [ $(($first%2)) -ne\
    \ 0 ] && [ $(($last%2)) -ne 0 ]; then\n            count=$(($count+1))\n     \
    \   fi\n    done\n    echo $count", "    local -i count=0\n    for i in $1; do\n\
    \        if [[ $i -gt 10 ]] && [[ $(($i % 2)) -eq 1 ]] && [[ $((${i:0:1} % 2))\
    \ -eq 1 ]] && [[ $((${i: -1:1} % 2)) -eq 1 ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count", "    local -a array=($1)\n    local count=0\n\
    \    for i in ${array[@]}; do\n        if [ $i -gt 10 ]; then\n            if\
    \ [ $(($i % 2)) -ne 0 ]; then\n                if [ $((${i:0:1} % 2)) -ne 0 ];\
    \ then\n                    if [ $((${i: -1} % 2)) -ne 0 ]; then\n           \
    \             ((count++))\n                    fi\n                fi\n      \
    \      fi\n        fi\n    done\n    echo $count", "    local -a arr=($1)\n  \
    \  local count=0\n    for i in ${arr[@]}; do\n        if [ $i -gt 10 ] && [ $(($i\
    \ % 2)) -eq 1 ] && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ];\
    \ then\n            ((count++))\n        fi\n    done\n    echo $count", "   \
    \ local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n        if\
    \ [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i %\
    \ 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[\
    \ $(($i % 10)) -eq 9 ]]; then\n                count=$(($count + 1))\n       \
    \     fi\n        fi\n    done\n    echo $count", "    local -a array=($1)\n \
    \   local -i count=0\n    for i in ${array[@]}; do\n        if [[ $i -gt 10 ]];\
    \ then\n            if [[ $(echo $i | cut -c1) -eq 1 ]] || [[ $(echo $i | cut\
    \ -c1) -eq 3 ]] || [[ $(echo $i | cut -c1) -eq 5 ]] || [[ $(echo $i | cut -c1)\
    \ -eq 7 ]] || [[ $(echo $i | cut -c1) -eq 9 ]]; then\n                if [[ $(echo\
    \ $i | cut -c2) -eq 1 ]] || [[ $(echo $i | cut -c2) -eq 3 ]] || [[ $(echo $i |\
    \ cut -c2) -eq 5 ]] || [[ $(echo $i | cut -c2) -eq 7 ]] || [[ $(echo $i | cut\
    \ -c2) -eq 9 ]]; then\n                    count=$((count+1))\n              \
    \  fi\n            fi\n        fi\n    done\n    echo $count", "    local -a arr=(\"\
    $@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n        if [[ \"$i\"\
    \ -gt 10 ]] && [[ \"${i:0:1}\" -gt 0 ]] && [[ \"${i:0:1}\" -lt 10 ]] && [[ \"\
    ${i: -1}\" -gt 0 ]] && [[ \"${i: -1}\" -lt 10 ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo \"$count\"", "    local -i count=0\n    for i\
    \ in $1; do\n        if [ $i -gt 10 ] && [ $(($i%10)) -gt 0 ] && [ $(($i/10))\
    \ -gt 0 ]; then\n            count=$((count+1))\n        fi\n    done\n    echo\
    \ $count", "    local count=0\n    for i in $1; do\n        if [[ $i -gt 10 ]];\
    \ then\n            if [[ $((i%10)) -eq 1 || $((i%10)) -eq 3 || $((i%10)) -eq\
    \ 5 || $((i%10)) -eq 7 || $((i%10)) -eq 9 ]]; then\n                if [[ $((i/10))\
    \ -eq 1 || $((i/10)) -eq 3 || $((i/10)) -eq 5 || $((i/10)) -eq 7 || $((i/10))\
    \ -eq 9 ]]; then\n                    count=$((count+1))\n                fi\n\
    \            fi\n        fi\n    done\n    echo $count", "    local -a arr=($1)\n\
    \    local -i count=0\n    for i in ${arr[@]}; do\n        if ((i > 10)); then\n\
    \            if ((i % 2 == 1)); then\n                local -i lastDigit=${i:\
    \ -1}\n                if ((lastDigit % 2 == 1)); then\n                    ((count++))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count", " \
    \ local count=0\n  for i in $1; do\n    if [ $i -gt 10 ]; then\n      if [ $(($i\
    \ % 2)) -eq 1 ]; then\n        if [ $(($(($i / 10)) % 2)) -eq 1 ]; then\n    \
    \      count=$(($count + 1))\n        fi\n      fi\n    fi\n  done\n  echo $count"]
stop_tokens:
- "\n}"

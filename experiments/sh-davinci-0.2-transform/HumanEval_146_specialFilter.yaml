name: HumanEval_146_specialFilter
language: sh
prompt: "#!/bin/bash\n# Write a function that takes an array of numbers as input and\
  \ returns \n# the number of elements in the array that are greater than 10 and both\
  \ \n# first and last digits of a number are odd (1, 3, 5, 7, 9).\n# For example:\n\
  # >>> $(specialFilter \"15 -73 14 -15\")\n# \"1\"\n# >>> $(specialFilter \"33 -2\
  \ -3 45 21 109\")\n# \"2\"\n#\n# $1 is a space-separated list\nspecialFilter() {\n"
tests: "}\n\ncandidate() {\n    specialFilter \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"5 -2 1 -5\") = \"0\" ]]\n    [[ $(candidate \"15 -73 14 -15\"\
  ) = \"1\" ]]\n    [[ $(candidate \"33 -2 -3 45 21 109\") = \"2\" ]]\n    [[ $(candidate\
  \ \"43 -12 93 125 121 109\") = \"4\" ]]\n    [[ $(candidate \"71 -2 -33 75 21 19\"\
  ) = \"3\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"\") = \"\
  0\" ]]\n}\n\nrun_test"
completions: ["    local -i count=0\n    for i in $1; do\n        if (( i > 10 ));\
    \ then\n            if (( i % 2 == 1 )); then\n                (( count++ ))\n\
    \            fi\n        fi\n    done\n    echo $count", "    local -a arr=($1)\n\
    \    local count=0\n    for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n\
    \            if [[ $(($i%10)) -eq 1 ]] || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10))\
    \ -eq 5 ]] || [[ $(($i%10)) -eq 7 ]] || [[ $(($i%10)) -eq 9 ]]; then\n       \
    \         if [[ $(($i/10)) -eq 1 ]] || [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10))\
    \ -eq 5 ]] || [[ $(($i/10)) -eq 7 ]] || [[ $(($i/10)) -eq 9 ]]; then\n       \
    \             count=$(($count+1))\n                fi\n            fi\n      \
    \  fi\n    done\n    echo $count", "    # Write your code here\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n", "    local -a arr=($1)\n    local count=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -gt 10 ]]; then\n            if [[ $(($i%10)) -eq 1 ]]\
    \ || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10)) -eq 5 ]] || [[ $(($i%10)) -eq 7 ]]\
    \ || [[ $(($i%10)) -eq 9 ]]; then\n                if [[ $(($i/10)) -eq 1 ]] ||\
    \ [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10)) -eq 5 ]] || [[ $(($i/10)) -eq 7 ]] ||\
    \ [[ $(($i/10)) -eq 9 ]]; then\n                    count=$(($count+1))\n    \
    \            fi\n            fi\n        fi\n    done\n    echo $count", "   \
    \ local -a arr=($1)\n    local count=0\n    for i in ${arr[@]}; do\n        if\
    \ [ $i -gt 10 ]; then\n            if [ $(($i%10)) -gt 0 ] && [ $(($i%10)) -lt\
    \ 10 ]; then\n                if [ $(($i/10)) -gt 0 ] && [ $(($i/10)) -lt 10 ];\
    \ then\n                    count=$(($count+1))\n                fi\n        \
    \    fi\n        fi\n    done\n    echo $count", "    local -a arr=($1)\n    local\
    \ count=0\n    for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n    \
    \        if [[ $(($i % 10)) -eq 1 ]] || [[ $(($i % 10)) -eq 3 ]] || [[ $(($i %\
    \ 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]] || [[ $(($i % 10)) -eq 9 ]]; then\n\
    \                if [[ $(($i / 10)) -eq 1 ]] || [[ $(($i / 10)) -eq 3 ]] || [[\
    \ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10)) -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]];\
    \ then\n                    count=$(($count + 1))\n                fi\n      \
    \      fi\n        fi\n    done\n    echo $count", "    local -i count=0\n   \
    \ for i in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i%10))%2 -ne 0 ]] && [[\
    \ $(($i/10))%2 -ne 0 ]]; then\n            ((count++))\n        fi\n    done\n\
    \    echo $count", "    local -a array=($1)\n    local count=0\n    for i in ${array[@]};\
    \ do\n        if [[ $i -gt 10 ]]; then\n            local first=$(echo $i | cut\
    \ -c1)\n            local last=$(echo $i | cut -c2)\n            if [[ $first\
    \ -gt 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n             \
    \   count=$((count+1))\n            fi\n        fi\n    done\n    echo $count",
  "    local -a array=($1)\n    local -i count=0\n    for i in ${array[@]}; do\n \
    \       if [ $i -gt 10 ]; then\n            local -i firstDigit=${i:0:1}\n   \
    \         local -i lastDigit=${i:(-1)}\n            if [ $((firstDigit % 2)) -ne\
    \ 0 ] && [ $((lastDigit % 2)) -ne 0 ]; then\n                count=$((count +\
    \ 1))\n            fi\n        fi\n    done\n    echo $count", "    local -a array=(\"\
    $@\")\n    local count=0\n    for i in \"${array[@]}\"; do\n        if [[ $i -gt\
    \ 10 ]] && [[ $(echo $i | cut -c1) -gt 1 ]] && [[ $(echo $i | cut -c1) -lt 9 ]]\
    \ && [[ $(echo $i | cut -c2) -gt 1 ]] && [[ $(echo $i | cut -c2) -lt 9 ]]; then\n\
    \            count=$((count+1))\n        fi\n    done\n    echo $count", "   \
    \ local -a arr=(\"$@\")\n    local count=0\n    for i in \"${arr[@]}\"; do\n \
    \       if [[ $i -gt 10 ]]; then\n            if [[ $(($i % 10)) -eq 1 ]] || [[\
    \ $(($i % 10)) -eq 3 ]] || [[ $(($i % 10)) -eq 5 ]] || [[ $(($i % 10)) -eq 7 ]]\
    \ || [[ $(($i % 10)) -eq 9 ]]; then\n                if [[ $(($i / 10)) -eq 1\
    \ ]] || [[ $(($i / 10)) -eq 3 ]] || [[ $(($i / 10)) -eq 5 ]] || [[ $(($i / 10))\
    \ -eq 7 ]] || [[ $(($i / 10)) -eq 9 ]]; then\n                    count=$((count\
    \ + 1))\n                fi\n            fi\n        fi\n    done\n    echo \"\
    $count\"", "    local -a array=($1)\n    local count=0\n    for i in ${array[@]};\
    \ do\n        if [ $i -gt 10 ]; then\n            if [ $((i%10)) -eq 1 ] || [\
    \ $((i%10)) -eq 3 ] || [ $((i%10)) -eq 5 ] || [ $((i%10)) -eq 7 ] || [ $((i%10))\
    \ -eq 9 ]; then\n                if [ $((i/10)) -eq 1 ] || [ $((i/10)) -eq 3 ]\
    \ || [ $((i/10)) -eq 5 ] || [ $((i/10)) -eq 7 ] || [ $((i/10)) -eq 9 ]; then\n\
    \                    count=$((count+1))\n                fi\n            fi\n\
    \        fi\n    done\n    echo $count", "    local -a arr=($1)\n    local count=0\n\
    \    for i in ${arr[@]}; do\n        if [ $i -gt 10 ] && [ $(($i % 2)) -eq 1 ]\
    \ && [ $((${i:0:1} % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n      \
    \      ((count++))\n        fi\n    done\n    echo $count", "    local count=0\n\
    \    for i in $1; do\n        if [ $i -gt 10 ] && [ $(($i % 2)) -eq 1 ] && [ $((${i:0:1}\
    \ % 2)) -eq 1 ] && [ $((${i: -1} % 2)) -eq 1 ]; then\n            count=$(($count\
    \ + 1))\n        fi\n    done\n    echo $count", "    local count=0\n    for i\
    \ in $1; do\n        if [[ $i -gt 10 ]] && [[ $(($i % 2)) -eq 1 ]] && [[ $((${i:0:1}\
    \ % 2)) -eq 1 ]] && [[ $((${i: -1} % 2)) -eq 1 ]]; then\n            ((count++))\n\
    \        fi\n    done\n    echo $count", "    local -a arr=($1)\n    local count=0\n\
    \    for i in ${arr[@]}; do\n        if [[ $i -gt 10 ]]; then\n            local\
    \ first=${i:0:1}\n            local last=${i: -1}\n            if [[ $first -gt\
    \ 1 && $first -lt 9 && $last -gt 1 && $last -lt 9 ]]; then\n                count=$((count\
    \ + 1))\n            fi\n        fi\n    done\n    echo $count", "    local -a\
    \ arr=($1)\n    local -i count=0\n    for i in ${arr[@]}; do\n        if [ $i\
    \ -gt 10 ]; then\n            if [ $(($i % 2)) -eq 1 ]; then\n               \
    \ if [ $((${i:0:1} % 2)) -eq 1 ]; then\n                    count=$((count + 1))\n\
    \                fi\n            fi\n        fi\n    done\n    echo $count", " \
    \   local -a nums=($1)\n    local count=0\n    for num in ${nums[@]}; do\n   \
    \     if [[ $num -gt 10 ]]; then\n            if [[ $(echo $num | cut -c1) -eq\
    \ 1 ]] || [[ $(echo $num | cut -c1) -eq 3 ]] || [[ $(echo $num | cut -c1) -eq\
    \ 5 ]] || [[ $(echo $num | cut -c1) -eq 7 ]] || [[ $(echo $num | cut -c1) -eq\
    \ 9 ]]; then\n                if [[ $(echo $num | cut -c2) -eq 1 ]] || [[ $(echo\
    \ $num | cut -c2) -eq 3 ]] || [[ $(echo $num | cut -c2) -eq 5 ]] || [[ $(echo\
    \ $num | cut -c2) -eq 7 ]] || [[ $(echo $num | cut -c2) -eq 9 ]]; then\n     \
    \               count=$((count+1))\n                fi\n            fi\n     \
    \   fi\n    done\n    echo $count", "    local count=0\n    for num in $1; do\n\
    \        if [ $num -gt 10 ] && [ $(($num % 2)) -eq 1 ] && [ $((${num:0:1} % 2))\
    \ -eq 1 ] && [ $((${num: -1} % 2)) -eq 1 ]; then\n            count=$(($count\
    \ + 1))\n        fi\n    done\n    echo $count", "    local -a array=($1)\n  \
    \  local count=0\n    for i in ${array[@]}; do\n        if [[ $i -gt 10 ]]; then\n\
    \            if [[ $(($i%10)) -eq 1 ]] || [[ $(($i%10)) -eq 3 ]] || [[ $(($i%10))\
    \ -eq 5 ]] || [[ $(($i%10)) -eq 7 ]] || [[ $(($i%10)) -eq 9 ]]; then\n       \
    \         if [[ $(($i/10)) -eq 1 ]] || [[ $(($i/10)) -eq 3 ]] || [[ $(($i/10))\
    \ -eq 5 ]] || [[ $(($i/10)) -eq 7 ]] || [[ $(($i/10)) -eq 9 ]]; then\n       \
    \             count=$(($count+1))\n                fi\n            fi\n      \
    \  fi\n    done\n    echo $count"]
stop_tokens:
- "\n}"

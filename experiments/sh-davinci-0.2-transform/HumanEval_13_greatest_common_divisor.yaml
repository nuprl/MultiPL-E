name: HumanEval_13_greatest_common_divisor
language: sh
prompt: "#!/bin/bash\n# Return a greatest common divisor of two integers a and b\n\
  # >>> $(greatest_common_divisor \"3\" \"5\")\n# \"1\"\n# >>> $(greatest_common_divisor\
  \ \"25\" \"15\")\n# \"5\"\n#\n# $1 is an integer\n# $2 is an integer\ngreatest_common_divisor()\
  \ {\n"
tests: "}\n\ncandidate() {\n    greatest_common_divisor \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"3\" \"7\") = \"1\" ]]\n    [[ $(candidate \"10\" \"15\"\
  ) = \"5\" ]]\n    [[ $(candidate \"49\" \"14\") = \"7\" ]]\n    [[ $(candidate \"\
  144\" \"60\") = \"12\" ]]\n}\n\nrun_test"
completions: ["    local a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne 0\
    \ ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n    echo\
    \ $a", "    local a=$1\n    local b=$2\n    while [ $b -ne 0 ]; do\n        local\
    \ tmp=$b\n        b=$(($a % $b))\n        a=$tmp\n    done\n    echo $a", "  \
    \  local a=$1\n    local b=$2\n    while [ $b -ne 0 ]; do\n        local temp=$b\n\
    \        b=$(($a % $b))\n        a=$temp\n    done\n    echo $a", "    local a=$1\n\
    \    local b=$2\n    local c\n    while [ $b -ne 0 ]; do\n        c=$(($a % $b))\n\
    \        a=$b\n        b=$c\n    done\n    echo $a", "    local a=$1\n    local\
    \ b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n    \
    \    a=$b\n        b=$c\n    done\n    echo $a", "  local a=$1\n  local b=$2\n\
    \  local r=0\n  while [[ $b -ne 0 ]]; do\n    r=$((a % b))\n    a=$b\n    b=$r\n\
    \  done\n  echo $a", "    local a=$1\n    local b=$2\n    local tmp\n    while\
    \ [ $b -ne 0 ]; do\n        tmp=$b\n        b=$(($a % $b))\n        a=$tmp\n \
    \   done\n    echo $a", "    local a=$1\n    local b=$2\n    while [ $b -ne 0\
    \ ]; do\n        local tmp=$b\n        b=$(($a % $b))\n        a=$tmp\n    done\n\
    \    echo $a", "    local a=$1\n    local b=$2\n    local c=0\n    while [ $b\
    \ -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n  \
    \  echo $a", "    local a=$1\n    local b=$2\n    local r=1\n    while [ \"$r\"\
    \ -ne \"0\" ]; do\n        r=$(($a % $b))\n        a=$b\n        b=$r\n    done\n\
    \    echo $a", "    local a=$1\n    local b=$2\n    local c=0\n    while [ $b\
    \ -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n  \
    \  echo $a", "    local a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne\
    \ 0 ]; do\n        c=$((a % b))\n        a=$b\n        b=$c\n    done\n    echo\
    \ $a", "    if [[ $1 -eq 0 ]]; then\n        echo \"$2\"\n    elif [[ $2 -eq 0\
    \ ]]; then\n        echo \"$1\"\n    else\n        local a=$1\n        local b=$2\n\
    \        while [[ $b -ne 0 ]]; do\n            local c=$((a % b))\n          \
    \  a=$b\n            b=$c\n        done\n        echo \"$a\"\n    fi", "    local\
    \ a=$1\n    local b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a\
    \ % b))\n        a=$b\n        b=$c\n    done\n    echo $a", "    local a=$1\n\
    \    local b=$2\n    while [ $b -ne 0 ]; do\n        local tmp=$b\n        b=$(($a\
    \ % $b))\n        a=$tmp\n    done\n    echo $a", "    local a=$1\n    local b=$2\n\
    \    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n        a=$b\n\
    \        b=$c\n    done\n    echo $a", "    local a=\"$1\"\n    local b=\"$2\"\
    \n    local r=0\n    while [[ \"$b\" -ne 0 ]]; do\n        r=$((a % b))\n    \
    \    a=\"$b\"\n        b=\"$r\"\n    done\n    echo \"$a\"", "    local a=$1\n\
    \    local b=$2\n    local r\n    while [[ $b -ne 0 ]]; do\n        r=$((a % b))\n\
    \        a=$b\n        b=$r\n    done\n    echo $a", "    local a=$1\n    local\
    \ b=$2\n    local c=0\n    while [ $b -ne 0 ]; do\n        c=$((a % b))\n    \
    \    a=$b\n        b=$c\n    done\n    echo $a", "    local a=$1\n    local b=$2\n\
    \    while [ $b -ne 0 ]; do\n        local tmp=$b\n        b=$(($a % $b))\n  \
    \      a=$tmp\n    done\n    echo $a"]
stop_tokens:
- "\n}"

name: HumanEval_120_maximum
language: sh
prompt: "#!/bin/bash\n# Given an array arr of integers and a positive integer k, return\
  \ a sorted list \n# of length k with the maximum k numbers in arr.\n# Example 1:\n\
  # >>> $(maximum \"-3 -4 5\" \"3\")\n# ['\"-4\"', '\"-3\"', '\"5\"']\n# Example 2:\n\
  # >>> $(maximum \"4 -4 4\" \"2\")\n# ['\"4\"', '\"4\"']\n# Example 3:\n# >>> $(maximum\
  \ \"-3 2 1 2 -1 -2 1\" \"1\")\n# ['\"2\"']\n# Note:\n# 1. The length of the array\
  \ will be in the range of [1, 1000].\n# 2. The elements in the array will be in\
  \ the range of [-1000, 1000].\n# 3. 0 <= k <= len(arr)\n#\n# $1 is a space-separated\
  \ list\n# $2 is an integer\nmaximum() {\n"
tests: "}\n\ncandidate() {\n    maximum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"-3 -4 5\" \"3\") = \"-4 -3 5\" ]]\n    [[ $(candidate \"4 -4 4\"\
  \ \"2\") = \"4 4\" ]]\n    [[ $(candidate \"-3 2 1 2 -1 -2 1\" \"1\") = \"2\" ]]\n\
  \    [[ $(candidate \"123 -123 20 0 1 2 -3\" \"3\") = \"2 20 123\" ]]\n    [[ $(candidate\
  \ \"-123 20 0 1 2 -3\" \"4\") = \"0 1 2 20\" ]]\n    [[ $(candidate \"5 15 0 3 -13\
  \ -8 0\" \"7\") = \"-13 -8 0 0 3 5 15\" ]]\n    [[ $(candidate \"-1 0 2 5 3 -10\"\
  \ \"2\") = \"3 5\" ]]\n    [[ $(candidate \"1 0 5 -7\" \"1\") = \"5\" ]]\n    [[\
  \ $(candidate \"4 -4\" \"2\") = \"-4 4\" ]]\n    [[ $(candidate \"-10 10\" \"2\"\
  ) = \"-10 10\" ]]\n    [[ $(candidate \"1 2 3 -23 243 -400 0\" \"0\") = \"\" ]]\n\
  }\n\nrun_test"
completions: ["    local -a arr=(\"$@\")\n    local -a max=()\n    local -i i=0\n\
    \    local -i j=0\n    local -i k=0\n    local -i len=${#arr[@]}\n    local -i\
    \ max_len=${arr[-1]}\n    local -i max_index=0\n    local -i max_value=0\n   \
    \ local -i value=0\n    local -i tmp=0\n    local -i tmp_index=0\n    local -i\
    \ tmp_value=0\n    local -i tmp_len=0\n    local -i tmp_max_len=0\n    local -i\
    \ tmp_max_index=0\n    local -i tmp_max_value=0\n    local -i tmp_value=0\n  \
    \  local -i tmp_value=0\n    local -i tmp_value=0\n    local -i tmp_value=0\n\
    \    local -i tmp_value=0\n    local -i tmp_value=0\n    local -i tmp_value=0\n\
    \    local -i tmp_value=0\n    local -i tmp_value=0\n    local -i tmp_value=0\n\
    \    local -i tmp_value=0\n    local -i tmp_value=0\n    local -i tmp_value=0\n\
    \    local -i tmp_value=0\n    local -i tmp_value=0\n    local -i tmp_value=0\n\
    \    local -i tmp_value=0\n    local -i tmp_value=0\n    local -i tmp_value=0\n\
    \    local -i tmp_value=0\n    local -i tmp_value=0\n    local -i tmp_value=0\n\
    \    local -i tmp_value=0\n    local -i tmp_value=0\n    local -i tmp_value=0\n\
    \    local -i tmp_value=0\n    local -i tmp_value=0\n    local -i tmp_value=0\n\
    \    local -i tmp_value=0\n    local -i tmp_value=0\n    local -i tmp_value=0\n\
    \    local -i tmp_value=0\n    local -i tmp_value=0\n    local -i tmp_value=",
  "    local -a arr=(\"$@\")\n    local -a res\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i len=${#arr[@]}\n    local -i klen=${arr[$len-1]}\n\
    \    local -i max=0\n    local -i max_i=0\n    local -i max_j=0\n    local -i\
    \ max_k=0\n    local -i tmp=0\n    local -i tmp_i=0\n    local -i tmp_j=0\n  \
    \  local -i tmp_k=0\n    local -i tmp_len=0\n    local -i tmp_klen=0\n    local\
    \ -i tmp_max=0\n    local -i tmp_max_i=0\n    local -i tmp_max_j=0\n    local\
    \ -i tmp_max_k=0\n    local -i tmp_max_len=0\n    local -i tmp_max_klen=0\n  \
    \  local -i tmp_max_max=0\n    local -i tmp_max_max_i=0\n    local -i tmp_max_max_j=0\n\
    \    local -i tmp_max_max_k=0\n    local -i tmp_max_max_len=0\n    local -i tmp_max_max_klen=0\n\
    \    local -i tmp_max_max_max=0\n    local -i tmp_max_max_max_i=0\n    local -i\
    \ tmp_max_max_max_j=0\n    local -i tmp_max_max_max_k=0\n    local -i tmp_max_max_max_len=0\n\
    \    local -i tmp_max_max_max_klen=0\n    local -i tmp_max_max_max_max=0\n   \
    \ local -i tmp_max_max_max_max_i=0\n    local -i tmp_max_max_max_max_j=0\n   \
    \ local -i tmp_max_max_max_max_k=0\n    local -i tmp_max_max_max_max_len=0\n \
    \   local -i tmp_max", "    local -a arr=($1)\n    local k=$2\n    local -a max\n\
    \    local -a max_idx\n    local -a max_val\n    local -a max_idx_val\n    local\
    \ -a max_idx_val_idx\n    local -a max_idx_val_idx_val\n    local -a max_idx_val_idx_val_idx\n\
    \    local -a max_idx_val_idx_val_idx_val\n    local -a max_idx_val_idx_val_idx_val_idx\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val\n    local -a max_idx_val_idx_val_idx_val_idx_val_idx\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val\n    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val\n    local -a\
    \ max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx\n    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val\n\
    \    local -a max_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_idx_val_", " \
    \   local -a arr=($1)\n    local k=$2\n    local -a max\n    local i\n    for\
    \ ((i=0; i<k; i++)); do\n        max[i]=${arr[i]}\n    done\n    for ((i=k; i<${#arr[@]};\
    \ i++)); do\n        local j\n        for ((j=0; j<k; j++)); do\n            if\
    \ [[ ${arr[i]} -gt ${max[j]} ]]; then\n                local t=${max[j]}\n   \
    \             max[j]=${arr[i]}\n                arr[i]=$t\n            fi\n  \
    \      done\n    done\n    echo ${max[@]}", "    local -a arr=()\n    local -a\
    \ max=()\n    local -i k=$2\n    local -i i=0\n    local -i j=0\n    local -i\
    \ n=0\n    local -i m=0\n    local -i t=0\n    local -i len=0\n    local -i max_len=0\n\
    \    local -i max_index=0\n    local -i max_value=0\n    local -i value=0\n  \
    \  local -i max_value_index=0\n    local -i max_value_index_value=0\n    local\
    \ -i max_value_index_value_index=0\n    local -i max_value_index_value_index_value=0\n\
    \    local -i max_value_index_value_index_value_index=0\n    local -i max_value_index_value_index_value_index_value=0\n\
    \    local -i max_value_index_value_index_value_index_value_index=0\n    local\
    \ -i max_value_index_value_index_value_index_value_index_value=0\n    local -i\
    \ max_value_index_value_index_value_index_value_index_value_index=0\n    local\
    \ -i max_value_index_value_index_value_index_value_index_value_index_value=0\n\
    \    local -i max_value_index_value_index_value_index_value_index_value_index_value_index=0\n\
    \    local -i max_value_index_value_index_value_index_value_index_value_index_value_index_value=0\n\
    \    local -i max_value_index_value_index_value_index_value_index_value_index_value_index_value_index=0\n\
    \    local -i max_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value=0\n\
    \    local -i max_value_index_value_index_value_index_value_index_value_index_value_index_value_index_value_index=0\n\
    \    local -i max_value_index_value", "    local -n arr=$1\n    local k=$2\n \
    \   local -a result\n    local -a sorted\n    local i\n    local j\n    local\
    \ max\n    local max_index\n    local len\n    len=${#arr[@]}\n    for ((i=0;\
    \ i<k; i++)); do\n        max=${arr[0]}\n        max_index=0\n        for ((j=1;\
    \ j<len; j++)); do\n            if [[ ${arr[j]} -gt $max ]]; then\n          \
    \      max=${arr[j]}\n                max_index=$j\n            fi\n        done\n\
    \        result[i]=$max\n        sorted[i]=$max\n        unset arr[$max_index]\n\
    \        len=${#arr[@]}\n    done\n    echo ${result[@]}", "    local arr=($1)\n\
    \    local k=$2\n    local max_arr=()\n    local max_arr_len=0\n    local i=0\n\
    \    local j=0\n    local max_index=0\n    local max_value=0\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        if [[ $i -lt $k ]]; then\n            max_arr[$i]=${arr[$i]}\n\
    \            max_arr_len=$((max_arr_len+1))\n        else\n            max_index=0\n\
    \            max_value=${max_arr[0]}\n            for ((j=1; j<$max_arr_len; j++));\
    \ do\n                if [[ ${max_arr[$j]} -gt $max_value ]]; then\n         \
    \           max_index=$j\n                    max_value=${max_arr[$j]}\n     \
    \           fi\n            done\n            if [[ ${arr[$i]} -gt $max_value\
    \ ]]; then\n                max_arr[$max_index]=${arr[$i]}\n            fi\n \
    \       fi\n    done\n    max_arr=($(echo \"${max_arr[@]}\" | tr ' ' '\\n' | sort\
    \ -nr | tr '\\n' ' '))\n    echo \"${max_arr[@]}\"", "    local -a arr=(\"$@\"\
    )\n    local -a max=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n\
    \    local -i n=0\n    local -i m=0\n    local -i len=0\n    local -i max_len=0\n\
    \    local -i max_index=0\n    local -i max_value=0\n    local -i value=0\n  \
    \  local -i tmp=0\n    local -i tmp_index=0\n    local -i tmp_value=0\n    local\
    \ -i tmp_len=0\n    local -i tmp_max_len=0\n    local -i tmp_max_index=0\n   \
    \ local -i tmp_max_value=0\n    local -i tmp_value=0\n    local -i tmp_len=0\n\
    \    local -i tmp_max_len=0\n    local -i tmp_max_index=0\n    local -i tmp_max_value=0\n\
    \    local -i tmp_value=0\n    local -i tmp_len=0\n    local -i tmp_max_len=0\n\
    \    local -i tmp_max_index=0\n    local -i tmp_max_value=0\n    local -i tmp_value=0\n\
    \    local -i tmp_len=0\n    local -i tmp_max_len=0\n    local -i tmp_max_index=0\n\
    \    local -i tmp_max_value=0\n    local -i tmp_value=0\n    local -i tmp_len=0\n\
    \    local -i tmp_max_len=0\n    local -i tmp_max_index=0\n    local -i tmp_max_value=0\n\
    \    local -i tmp_value=0\n    local -i tmp_len=0\n    local -i tmp_max_len=0\n\
    \    local -i tmp_max_index=0\n    local -i tmp_max_value=0\n    local -i tmp_value=0\n\
    \    local -i tmp_len=0\n    local -i tmp_max_len=0\n    local -i tmp_max_index=0\n\
    \    local -i tmp_max_", "    local arr=($1)\n    local k=$2\n    local len=${#arr[@]}\n\
    \    local result=()\n    local i=0\n    local j=0\n    local max=0\n    local\
    \ max_index=0\n    local temp=0\n    while [ $i -lt $k ]; do\n        max=${arr[0]}\n\
    \        max_index=0\n        j=0\n        while [ $j -lt $len ]; do\n       \
    \     if [ ${arr[$j]} -gt $max ]; then\n                max=${arr[$j]}\n     \
    \           max_index=$j\n            fi\n            let j++\n        done\n\
    \        result[$i]=$max\n        arr[$max_index]=$((-1000000))\n        let i++\n\
    \    done\n    echo ${result[@]}", "    local -a arr=($1)\n    local k=$2\n  \
    \  local -a res=()\n    local len=${#arr[@]}\n    local i=0\n    local j=0\n \
    \   local max=0\n    local max_index=0\n    for ((i=0; i<k; i++)); do\n      \
    \  max=${arr[0]}\n        max_index=0\n        for ((j=1; j<len-i; j++)); do\n\
    \            if [[ ${arr[j]} -gt $max ]]; then\n                max=${arr[j]}\n\
    \                max_index=$j\n            fi\n        done\n        res[i]=$max\n\
    \        arr[max_index]=${arr[len-i-1]}\n    done\n    echo ${res[@]}", "    local\
    \ -a arr=($1)\n    local k=$2\n    local -a max\n    local -a result\n    local\
    \ i=0\n    local j=0\n    local len=${#arr[@]}\n    local max_len=0\n    local\
    \ max_index=0\n    local max_value=0\n    local tmp=0\n    local tmp_index=0\n\
    \    local tmp_value=0\n    local tmp_len=0\n    local tmp_max_len=0\n    local\
    \ tmp_max_index=0\n    local tmp_max_value=0\n    local tmp_result=0\n    local\
    \ tmp_result_index=0\n    local tmp_result_value=0\n    local tmp_result_len=0\n\
    \    local tmp_result_max_len=0\n    local tmp_result_max_index=0\n    local tmp_result_max_value=0\n\
    \    local tmp_result_result=0\n    local tmp_result_result_index=0\n    local\
    \ tmp_result_result_value=0\n    local tmp_result_result_len=0\n    local tmp_result_result_max_len=0\n\
    \    local tmp_result_result_max_index=0\n    local tmp_result_result_max_value=0\n\
    \    local tmp_result_result_result=0\n    local tmp_result_result_result_index=0\n\
    \    local tmp_result_result_result_value=0\n    local tmp_result_result_result_len=0\n\
    \    local tmp_result_result_result_max_len=0\n    local tmp_result_result_result_max_index=0\n\
    \    local tmp_result_result_result_max_value=0\n    local tmp_result_result_result_result=0\n\
    \    local tmp_result_result_result_result_index=0\n    local tmp_result_result_result_result_value=0\n\
    \    local tmp_result_result_result_result_len=0\n    local tmp_result_result_result_result_max_len=0\n\
    \    local tmp_result_result_result_result_max_index=0\n    local tmp_result_result_result_result_max_",
  "    local arr=($1)\n    local k=$2\n    local len=${#arr[@]}\n    local i=0\n \
    \   local j=0\n    local tmp=0\n    local result=()\n    if [[ $len -le $k ]];\
    \ then\n        result=(\"${arr[@]}\")\n    else\n        for ((i=0; i<$k; i++));\
    \ do\n            for ((j=$i; j<$len; j++)); do\n                if [[ ${arr[$i]}\
    \ -lt ${arr[$j]} ]]; then\n                    tmp=${arr[$i]}\n              \
    \      arr[$i]=${arr[$j]}\n                    arr[$j]=$tmp\n                fi\n\
    \            done\n            result[$i]=${arr[$i]}\n        done\n    fi\n \
    \   echo \"${result[@]}\"", "    local -a arr=()\n    local -i k=0\n    local\
    \ -i i=0\n    local -i j=0\n    local -i len=0\n    local -i max=0\n    local\
    \ -i max_index=0\n    local -i tmp=0\n    local -i tmp_index=0\n    local -i tmp_index2=0\n\
    \    local -i tmp_index3=0\n    local -i tmp_index4=0\n    local -i tmp_index5=0\n\
    \    local -i tmp_index6=0\n    local -i tmp_index7=0\n    local -i tmp_index8=0\n\
    \    local -i tmp_index9=0\n    local -i tmp_index10=0\n    local -i tmp_index11=0\n\
    \    local -i tmp_index12=0\n    local -i tmp_index13=0\n    local -i tmp_index14=0\n\
    \    local -i tmp_index15=0\n    local -i tmp_index16=0\n    local -i tmp_index17=0\n\
    \    local -i tmp_index18=0\n    local -i tmp_index19=0\n    local -i tmp_index20=0\n\
    \    local -i tmp_index21=0\n    local -i tmp_index22=0\n    local -i tmp_index23=0\n\
    \    local -i tmp_index24=0\n    local -i tmp_index25=0\n    local -i tmp_index26=0\n\
    \    local -i tmp_index27=0\n    local -i tmp_index28=0\n    local -i tmp_index29=0\n\
    \    local -i tmp_index30=0\n    local -i tmp_index31=0\n    local -i tmp_index32=0\n\
    \    local -i tmp_index33=0\n    local -i tmp_index34=0\n    local -i tmp_index35=0\n\
    \    local -i tmp_index36=0\n    local -i tmp_index37=0\n    local -i tmp_index38=0\n\
    \    local -i tmp_index39=0\n    local -i tmp_index40=0\n    local -i tmp_", " \
    \   local -a arr=($1)\n    local k=$2\n    local -a max\n    local -a max_index\n\
    \    local -a max_index_sorted\n    local -a max_sorted\n    local -a arr_sorted\n\
    \    local -a arr_index\n    local -a arr_index_sorted\n    local -a arr_sorted\n\
    \    local i\n    local j\n    local temp\n    local temp_index\n    local temp_index_sorted\n\
    \    local temp_sorted\n    local arr_len=${#arr[@]}\n    local max_len=${#max[@]}\n\
    \    local max_index_len=${#max_index[@]}\n    local max_index_sorted_len=${#max_index_sorted[@]}\n\
    \    local max_sorted_len=${#max_sorted[@]}\n    local arr_sorted_len=${#arr_sorted[@]}\n\
    \    local arr_index_len=${#arr_index[@]}\n    local arr_index_sorted_len=${#arr_index_sorted[@]}\n\
    \    # Initialize max\n    for ((i=0; i<k; i++)); do\n        max[i]=${arr[i]}\n\
    \        max_index[i]=$i\n    done\n    # Sort max\n    for ((i=0; i<k; i++));\
    \ do\n        for ((j=i+1; j<k; j++)); do\n            if [[ ${max[i]} -lt ${max[j]}\
    \ ]]; then\n                temp=${max[i]}\n                temp_index=${max_index[i]}\n\
    \                max[i]=${max[j]}\n                max_index[i]=${max_index[j]}\n\
    \                max[j]=$temp\n                max_index[j]=$temp_index\n    \
    \        fi\n        done\n    done\n    # Sort arr\n    for ((i=0; i<arr_len;\
    \ i++)); do\n        arr_index[i]=$i\n    done\n    for ((i=0; i<arr_len; i++));\
    \ do\n        for ((j=i+1; j<", "    local arr=($1)\n    local k=$2\n    local\
    \ len=${#arr[@]}\n    local i=0\n    local j=0\n    local max=0\n    local max_index=0\n\
    \    local result=()\n    while [ $i -lt $k ]; do\n        max=${arr[0]}\n   \
    \     max_index=0\n        j=0\n        while [ $j -lt $len ]; do\n          \
    \  if [ ${arr[$j]} -gt $max ]; then\n                max=${arr[$j]}\n        \
    \        max_index=$j\n            fi\n            j=$((j+1))\n        done\n\
    \        result[$i]=$max\n        arr[$max_index]=0\n        i=$((i+1))\n    done\n\
    \    echo ${result[@]}", "    local arr=($1)\n    local k=$2\n    local max_arr=()\n\
    \    local max_val=0\n    local max_index=0\n    local i=0\n    local j=0\n  \
    \  local len=${#arr[@]}\n    for ((i=0; i<k; i++)); do\n        max_val=${arr[0]}\n\
    \        max_index=0\n        for ((j=1; j<len; j++)); do\n            if [[ ${arr[j]}\
    \ -gt $max_val ]]; then\n                max_val=${arr[j]}\n                max_index=$j\n\
    \            fi\n        done\n        max_arr[i]=$max_val\n        unset arr[$max_index]\n\
    \        arr=(${arr[@]})\n        len=${#arr[@]}\n    done\n    echo ${max_arr[@]}",
  "    local -a arr=(\"$@\")\n    local -a max=()\n    local -i i=0\n    local -i\
    \ j=0\n    local -i k=0\n    local -i n=0\n    local -i m=0\n    local -i t=0\n\
    \    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i len=0\n    local -i\
    \ max_len=0\n    local -i max_len_prev=0\n    local -i max_len_next=0\n    local\
    \ -i max_len_prev_prev=0\n    local -i max_len_next_next=0\n    local -i max_len_prev_prev_prev=0\n\
    \    local -i max_len_next_next_next=0\n    local -i max_len_prev_prev_prev_prev=0\n\
    \    local -i max_len_next_next_next_next=0\n    local -i max_len_prev_prev_prev_prev_prev=0\n\
    \    local -i max_len_next_next_next_next_next=0\n    local -i max_len_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_len_next_next_next_next_next_next=0\n    local -i max_len_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_len_next_next_next_next_next_next_next=0\n    local -i max_len_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_len_next_next_next_next_next_next_next_next=0\n    local -i\
    \ max_len_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local -i max_len_next_next_next_next_next_next_next_next_next=0\n\
    \    local -i max_len_prev_", "    local -a arr=($1)\n    local k=$2\n    local\
    \ -a max\n    local -a result\n    local i\n    local j\n    local max_index\n\
    \    local max_value\n    for ((i=0; i<k; i++)); do\n        max[$i]=${arr[$i]}\n\
    \    done\n    for ((i=k; i<${#arr[@]}; i++)); do\n        max_index=0\n     \
    \   max_value=${max[0]}\n        for ((j=1; j<k; j++)); do\n            if [[\
    \ ${max[$j]} -gt $max_value ]]; then\n                max_index=$j\n         \
    \       max_value=${max[$j]}\n            fi\n        done\n        if [[ ${arr[$i]}\
    \ -lt $max_value ]]; then\n            max[$max_index]=${arr[$i]}\n        fi\n\
    \    done\n    for ((i=0; i<k; i++)); do\n        result[$i]=\"\\\"${max[$i]}\\\
    \"\"\n    done\n    echo ${result[@]}", "    local -a arr=($1)\n    local k=$2\n\
    \    local -a result\n    local -i i j\n    for ((i=0; i<k; i++)); do\n      \
    \  result[i]=${arr[i]}\n    done\n    for ((i=k; i<${#arr[@]}; i++)); do\n   \
    \     for ((j=0; j<k; j++)); do\n            if [[ ${arr[i]} -gt ${result[j]}\
    \ ]]; then\n                result[j]=${arr[i]}\n                break\n     \
    \       fi\n        done\n    done\n    echo \"${result[@]}\"", "    local -a\
    \ arr\n    local -i k\n    local -i i\n    local -i j\n    local -i max\n    local\
    \ -i max_index\n    local -i temp\n    local -i len\n    local -i start\n    local\
    \ -i end\n    local -i mid\n    local -i result\n    local -i flag\n    local\
    \ -i flag_index\n    local -i flag_index_temp\n    local -i flag_index_temp_2\n\
    \    local -i flag_index_temp_3\n    local -i flag_index_temp_4\n    local -i\
    \ flag_index_temp_5\n    local -i flag_index_temp_6\n    local -i flag_index_temp_7\n\
    \    local -i flag_index_temp_8\n    local -i flag_index_temp_9\n    local -i\
    \ flag_index_temp_10\n    local -i flag_index_temp_11\n    local -i flag_index_temp_12\n\
    \    local -i flag_index_temp_13\n    local -i flag_index_temp_14\n    local -i\
    \ flag_index_temp_15\n    local -i flag_index_temp_16\n    local -i flag_index_temp_17\n\
    \    local -i flag_index_temp_18\n    local -i flag_index_temp_19\n    local -i\
    \ flag_index_temp_20\n    local -i flag_index_temp_21\n    local -i flag_index_temp_22\n\
    \    local -i flag_index_temp_23\n    local -i flag_index_temp_24\n    local -i\
    \ flag_index_temp_25\n    local -i flag_index_temp_26\n    local -i flag_index_temp_27\n\
    \    local -i flag_index_temp_28\n    local -i flag_index_temp_29\n    local -i\
    \ flag_index_temp_30\n    local -i flag_index_temp_31\n    local -i flag_index_temp_32\n\
    \    local -i flag_index_temp_33\n    local -i flag_index_temp_34\n    local -i\
    \ flag_index_temp_35\n    local -i flag"]
stop_tokens:
- "\n}"

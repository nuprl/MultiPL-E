name: HumanEval_69_search
language: sh
prompt: "#!/bin/bash\n# You are given a non-empty list of positive integers. Return\
  \ the greatest integer that is greater than \n# zero, and has a frequency greater\
  \ than or equal to the value of the integer itself. \n# The frequency of an integer\
  \ is the number of times it appears in the list.\n# If no such a value exist, return\
  \ -1.\n# Examples:\n# >>> $(search \"4 1 2 2 3 1\")\n# \"2\"\n# >>> $(search \"\
  1 2 2 3 3 3 4 4 4\")\n# \"3\"\n# >>> $(search \"5 5 4 4 4\")\n# \"-1\"\n#\n# $1\
  \ is a space-separated list\nsearch() {\n"
tests: "}\n\ncandidate() {\n    search \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"5 5 5 5 1\") = \"1\" ]]\n    [[ $(candidate \"4 1 4 1 4 4\") = \"4\" ]]\n  \
  \  [[ $(candidate \"3 3\") = \"-1\" ]]\n    [[ $(candidate \"8 8 8 8 8 8 8 8\")\
  \ = \"8\" ]]\n    [[ $(candidate \"2 3 3 2 2\") = \"2\" ]]\n    [[ $(candidate \"\
  2 7 8 8 4 8 7 3 9 6 5 10 4 3 6 7 1 7 4 10 8 1\") = \"1\" ]]\n    [[ $(candidate\
  \ \"3 2 8 2\") = \"2\" ]]\n    [[ $(candidate \"6 7 1 8 8 10 5 8 5 3 10\") = \"\
  1\" ]]\n    [[ $(candidate \"8 8 3 6 5 6 4\") = \"-1\" ]]\n    [[ $(candidate \"\
  6 9 6 7 1 4 7 1 8 8 9 8 10 10 8 4 10 4 10 1 2 9 5 7 9\") = \"1\" ]]\n    [[ $(candidate\
  \ \"1 9 10 1 3\") = \"1\" ]]\n    [[ $(candidate \"6 9 7 5 8 7 5 3 7 5 10 10 3 6\
  \ 10 2 8 6 5 4 9 5 3 10\") = \"5\" ]]\n    [[ $(candidate \"1\") = \"1\" ]]\n  \
  \  [[ $(candidate \"8 8 10 6 4 3 5 8 2 4 2 8 4 6 10 4 2 1 10 2 1 1 5\") = \"4\"\
  \ ]]\n    [[ $(candidate \"2 10 4 8 2 10 5 1 2 9 5 5 6 3 8 6 4 10\") = \"2\" ]]\n\
  \    [[ $(candidate \"1 6 10 1 6 9 10 8 6 8 7 3\") = \"1\" ]]\n    [[ $(candidate\
  \ \"9 2 4 1 5 1 5 2 5 7 7 7 3 10 1 5 4 2 8 4 1 9 10 7 10 2 8 10 9 4\") = \"4\" ]]\n\
  \    [[ $(candidate \"2 6 4 2 8 7 5 6 4 10 4 6 3 7 8 8 3 1 4 2 2 10 7\") = \"4\"\
  \ ]]\n    [[ $(candidate \"9 8 6 10 2 6 10 2 7 8 10 3 8 2 6 2 3 1\") = \"2\" ]]\n\
  \    [[ $(candidate \"5 5 3 9 5 6 3 2 8 5 6 10 10 6 8 4 10 7 7 10 8\") = \"-1\"\
  \ ]]\n    [[ $(candidate \"10\") = \"-1\" ]]\n    [[ $(candidate \"9 7 7 2 4 7 2\
  \ 10 9 7 5 7 2\") = \"2\" ]]\n    [[ $(candidate \"5 4 10 2 1 1 10 3 6 1 8\") =\
  \ \"1\" ]]\n    [[ $(candidate \"7 9 9 9 3 4 1 5 9 1 2 1 1 10 7 5 6 7 6 7 7 6\"\
  ) = \"1\" ]]\n    [[ $(candidate \"3 10 10 9 2\") = \"-1\" ]]\n}\n\nrun_test"
completions: ["    local -a arr=(\"$@\")\n    local -a freq=()\n    local -a result=()\n\
    \    local i=0\n    local j=0\n    local k=0\n    local max=0\n    local max_freq=0\n\
    \    local max_index=0\n    local max_result=0\n    local max_result_freq=0\n\
    \    local max_result_index=0\n    for ((i=0; i<${#arr[@]}; i++)); do\n      \
    \  freq[${arr[$i]}]=$((freq[${arr[$i]}]+1))\n    done\n    for ((i=0; i<${#freq[@]};\
    \ i++)); do\n        if [[ ${freq[$i]} -gt 0 ]]; then\n            result[$k]=$i\n\
    \            k=$((k+1))\n        fi\n    done\n    for ((i=0; i<${#result[@]};\
    \ i++)); do\n        if [[ ${result[$i]} -gt $max ]]; then\n            max=${result[$i]}\n\
    \            max_index=$i\n        fi\n    done\n    max_freq=${freq[$max]}\n\
    \    for ((i=0; i<${#result[@]}; i++)); do\n        if [[ ${result[$i]} -gt $max_result\
    \ ]]; then\n            if [[ ${freq[${result[$i]}]} -ge ${result[$i]} ]]; then\n\
    \                max_result=${result[$i]}\n                max_result_index=$i\n\
    \            fi\n        fi\n    done\n    max_result_freq=${freq[$max_result]}\n\
    \    if [[ $max_result_freq -ge $max_result ]]; then\n        echo $max_result\n\
    \    else\n        echo \"-1\"\n    fi", "    local -a arr=($1)\n    local -a\
    \ freq=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort | uniq -c | awk '{print $1}'))\n\
    \    local -a uniq=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort | uniq))\n    local\
    \ -i i=0\n    local -i j=0\n    local -i max=-1\n    local -i max_freq=-1\n  \
    \  for ((i=0; i<${#uniq[@]}; i++)); do\n        if [[ ${uniq[$i]} -gt 0 ]]; then\n\
    \            if [[ ${uniq[$i]} -le ${freq[$i]} ]]; then\n                if [[\
    \ ${uniq[$i]} -gt $max ]]; then\n                    max=${uniq[$i]}\n       \
    \             max_freq=${freq[$i]}\n                elif [[ ${uniq[$i]} -eq $max\
    \ ]]; then\n                    if [[ ${freq[$i]} -gt $max_freq ]]; then\n   \
    \                     max_freq=${freq[$i]}\n                    fi\n         \
    \       fi\n            fi\n        fi\n    done\n    if [[ $max -eq -1 ]]; then\n\
    \        echo \"-1\"\n    else\n        echo \"$max\"\n    fi", "    local -a\
    \ arr=($1)\n    local -a freq=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort | uniq\
    \ -c | awk '{print $1}'))\n    local -a uniq=($(echo \"${arr[@]}\" | tr ' ' '\\\
    n' | sort | uniq -c | awk '{print $2}'))\n    local -i i=0\n    local -i j=0\n\
    \    local -i max=-1\n    local -i max_i=-1\n    local -i max_j=-1\n    for i\
    \ in \"${!uniq[@]}\"; do\n        for j in \"${!freq[@]}\"; do\n            if\
    \ [[ ${uniq[$i]} -eq ${freq[$j]} ]]; then\n                if [[ ${uniq[$i]} -gt\
    \ $max ]]; then\n                    max=${uniq[$i]}\n                    max_i=$i\n\
    \                    max_j=$j\n                fi\n            fi\n        done\n\
    \    done\n    if [[ $max -eq -1 ]]; then\n        echo -1\n    else\n       \
    \ echo ${uniq[$max_i]}\n    fi", "    local -a arr=()\n    local -a freq=()\n\
    \    local -a res=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i max=0\n    local -i max_freq=0\n    local -i max_res=0\n    local\
    \ -i max_res_freq=0\n    local -i len=0\n    local -i len_freq=0\n    local -i\
    \ len_res=0\n    local -i len_res_freq=0\n    local -i tmp=0\n    local -i tmp_freq=0\n\
    \    local -i tmp_res=0\n    local -i tmp_res_freq=0\n    local -i tmp_res_freq_max=0\n\
    \    local -i tmp_res_freq_max_freq=0\n    local -i tmp_res_freq_max_res=0\n \
    \   local -i tmp_res_freq_max_res_freq=0\n    local -i tmp_res_freq_max_res_freq_max=0\n\
    \    local -i tmp_res_freq_max_res_freq_max_freq=0\n    local -i tmp_res_freq_max_res_freq_max_res=0\n\
    \    local -i tmp_res_freq_max_res_freq_max_res_freq=0\n    local -i tmp_res_freq_max_res_freq_max_res_freq_max=0\n\
    \    local -i tmp_res_freq_max_res_freq_max_res_freq_max_freq=0\n    local -i\
    \ tmp_res_freq_max_res_freq_max_res_freq_max_res=0\n    local -i tmp_res_freq_max_res_freq_max_res_freq_max_res_freq=0\n\
    \    local -i tmp_res_freq_max_res_freq_max_res_freq_max_res_freq_max=0\n    local\
    \ -i tmp_", "    local -a arr=(\"$@\")\n    local -A freq\n    for i in \"${arr[@]}\"\
    ; do\n        ((freq[$i]++))\n    done\n    for i in \"${arr[@]}\"; do\n     \
    \   if [[ ${freq[$i]} -ge $i ]]; then\n            echo \"$i\"\n            return\n\
    \        fi\n    done\n    echo \"-1\"", "    local -a arr=($1)\n    local -a\
    \ freq=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort | uniq -c | awk '{print $1}'))\n\
    \    local -a nums=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort | uniq))\n    local\
    \ -a res=()\n    for ((i=0; i<${#nums[@]}; i++)); do\n        if [[ ${nums[$i]}\
    \ -le ${freq[$i]} ]]; then\n            res+=(${nums[$i]})\n        fi\n    done\n\
    \    if [[ ${#res[@]} -eq 0 ]]; then\n        echo \"-1\"\n    else\n        echo\
    \ \"${res[@]}\" | tr ' ' '\\n' | sort -nr | head -n 1\n    fi", "    # Write your\
    \ code here\n    echo \"Not implemented\"", "    local -a arr=($1)\n    local\
    \ -a freq=(0 0 0 0 0 0 0 0 0 0)\n    local max=0\n    local i=0\n    local j=0\n\
    \    local len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        freq[${arr[$i]}]=$((freq[${arr[$i]}]+1))\n\
    \    done\n    for ((i=0; i<len; i++)); do\n        if [ ${arr[$i]} -gt $max ]\
    \ && [ ${arr[$i]} -le ${freq[${arr[$i]}]} ]; then\n            max=${arr[$i]}\n\
    \        fi\n    done\n    if [ $max -eq 0 ]; then\n        echo -1\n    else\n\
    \        echo $max\n    fi", "    local -a arr=()\n    local -a freq=()\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i max=0\n    local -i\
    \ max_freq=0\n    local -i num=0\n    local -i num_freq=0\n    local -i num_max=0\n\
    \    local -i num_max_freq=0\n    local -i num_max_freq_index=0\n    local -i\
    \ num_max_index=0\n    local -i num_max_index_freq=0\n    local -i num_max_index_freq_index=0\n\
    \    local -i num_max_index_index=0\n    local -i num_max_index_index_freq=0\n\
    \    local -i num_max_index_index_freq_index=0\n    local -i num_max_index_index_index=0\n\
    \    local -i num_max_index_index_index_freq=0\n    local -i num_max_index_index_index_freq_index=0\n\
    \    local -i num_max_index_index_index_index=0\n    local -i num_max_index_index_index_index_freq=0\n\
    \    local -i num_max_index_index_index_index_freq_index=0\n    local -i num_max_index_index_index_index_index=0\n\
    \    local -i num_max_index_index_index_index_index_freq=0\n    local -i num_max_index_index_index_index_index_freq_index=0\n\
    \    local -i num_max_index_index_index_index_index_index=0\n    local -i num_max_index_index_index_index_index_index_freq=0\n\
    \    local -i num_max_index_index_index_index_index_index_freq_index=0\n    local\
    \ -i num_max_index_index_index_index_index_index_index=0\n    local -i num_max_index_index_index_index_",
  "    local -a arr\n    local -a freq\n    local -i i\n    local -i j\n    local\
    \ -i max\n    local -i max_freq\n    local -i n\n    local -i res\n\n    arr=($1)\n\
    \    n=${#arr[@]}\n    for ((i=0; i<n; i++)); do\n        freq[${arr[$i]}]=$((freq[${arr[$i]}]+1))\n\
    \    done\n    max=${arr[0]}\n    for ((i=1; i<n; i++)); do\n        if [[ ${arr[$i]}\
    \ -gt $max ]]; then\n            max=${arr[$i]}\n        fi\n    done\n    max_freq=${freq[$max]}\n\
    \    res=-1\n    for ((i=1; i<=max; i++)); do\n        if [[ ${freq[$i]} -ge $i\
    \ ]]; then\n            res=$i\n        fi\n    done\n    echo $res", "    # Write\
    \ your code here\n    # To print results to the standard output you can use echo\n\
    \    # To debug: echo \"Debug messages...\" >&2\n    echo \"1\"", "    local -a\
    \ arr=($1)\n    local -a freq=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort | uniq\
    \ -c | awk '{print $1}'))\n    local -a uniq=($(echo \"${arr[@]}\" | tr ' ' '\\\
    n' | sort | uniq))\n    local -a res=()\n    for ((i=0; i<${#uniq[@]}; i++));\
    \ do\n        if [[ ${uniq[$i]} -le ${freq[$i]} ]]; then\n            res+=(${uniq[$i]})\n\
    \        fi\n    done\n    if [[ ${#res[@]} -eq 0 ]]; then\n        echo \"-1\"\
    \n    else\n        echo \"${res[@]}\" | tr ' ' '\\n' | sort -nr | head -n 1\n\
    \    fi", "  local list=$1\n  local max=0\n  local count=0\n  local result=-1\n\
    \  for i in $list; do\n    if [ $i -gt $max ]; then\n      max=$i\n    fi\n  done\n\
    \  for i in $list; do\n    if [ $i -eq $max ]; then\n      count=$((count+1))\n\
    \    fi\n  done\n  if [ $count -ge $max ]; then\n    result=$max\n  fi\n  echo\
    \ $result", "    local -a arr=()\n    local -a freq=()\n    local -a res=()\n\
    \    local i=0\n    local j=0\n    local k=0\n    local max=0\n    local max_freq=0\n\
    \    local max_i=0\n    local max_j=0\n    local max_k=0\n    local max_freq_i=0\n\
    \    local max_freq_j=0\n    local max_freq_k=0\n    local max_freq_l=0\n    local\
    \ max_freq_m=0\n    local max_freq_n=0\n    local max_freq_o=0\n    local max_freq_p=0\n\
    \    local max_freq_q=0\n    local max_freq_r=0\n    local max_freq_s=0\n    local\
    \ max_freq_t=0\n    local max_freq_u=0\n    local max_freq_v=0\n    local max_freq_w=0\n\
    \    local max_freq_x=0\n    local max_freq_y=0\n    local max_freq_z=0\n    local\
    \ max_freq_aa=0\n    local max_freq_ab=0\n    local max_freq_ac=0\n    local max_freq_ad=0\n\
    \    local max_freq_ae=0\n    local max_freq_af=0\n    local max_freq_ag=0\n \
    \   local max_freq_ah=0\n    local max_freq_ai=0\n    local max_freq_aj=0\n  \
    \  local max_freq_ak=0\n    local max_freq_al=0\n    local max_freq_am=0\n   \
    \ local max_freq_an=0\n    local max_freq_ao=0\n    local max_freq_ap=0\n    local\
    \ max_freq_aq=0\n    local max_freq_ar=0\n    local max_freq_as=0\n    local max_freq_at=0\n\
    \    local max_freq_au=0\n", "    local -a arr=()\n    local -a freq=()\n    local\
    \ -i i=0\n    local -i j=0\n    local -i max=0\n    local -i max_freq=0\n    local\
    \ -i freq_val=0\n    local -i val=0\n    local -i count=0\n    local -i max_count=0\n\
    \    local -i max_val=0\n    local -i max_freq_val=0\n    local -i max_freq_count=0\n\
    \    local -i max_freq_val_count=0\n    local -i max_freq_val_freq=0\n    local\
    \ -i max_freq_val_freq_count=0\n    local -i max_freq_val_freq_val=0\n    local\
    \ -i max_freq_val_freq_val_count=0\n    local -i max_freq_val_freq_val_freq=0\n\
    \    local -i max_freq_val_freq_val_freq_count=0\n    local -i max_freq_val_freq_val_freq_val=0\n\
    \    local -i max_freq_val_freq_val_freq_val_count=0\n    local -i max_freq_val_freq_val_freq_val_freq=0\n\
    \    local -i max_freq_val_freq_val_freq_val_freq_count=0\n    local -i max_freq_val_freq_val_freq_val_freq_val=0\n\
    \    local -i max_freq_val_freq_val_freq_val_freq_val_count=0\n    local -i max_freq_val_freq_val_freq_val_freq_val_freq=0\n\
    \    local -i max_freq_val_freq_val_freq_val_freq_val_freq_count=0\n    local\
    \ -i max_freq_val_freq_val_freq_val_freq_val_freq_val=", "    local -a arr=($1)\n\
    \    local -a freq=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort | uniq -c | awk\
    \ '{print $1}'))\n    local -a uniq=($(echo \"${arr[@]}\" | tr ' ' '\\n' | sort\
    \ | uniq -c | awk '{print $2}'))\n    local -a res=()\n    for ((i=0; i<${#uniq[@]};\
    \ i++)); do\n        if [[ ${freq[$i]} -ge ${uniq[$i]} ]]; then\n            res+=(${uniq[$i]})\n\
    \        fi\n    done\n    if [[ ${#res[@]} -eq 0 ]]; then\n        echo -1\n\
    \    else\n        echo \"${res[@]}\" | tr ' ' '\\n' | sort -nr | head -n 1\n\
    \    fi", "    local -a arr=($1)\n    local -a count\n    local -i max=0\n   \
    \ local -i i\n    local -i j\n    local -i k\n    local -i n=${#arr[@]}\n    for\
    \ ((i=0; i<n; i++)); do\n        count[${arr[$i]}]=$((count[${arr[$i]}]+1))\n\
    \    done\n    for ((i=0; i<n; i++)); do\n        if [[ ${count[${arr[$i]}]} -ge\
    \ ${arr[$i]} ]]; then\n            if [[ ${arr[$i]} -gt $max ]]; then\n      \
    \          max=${arr[$i]}\n            fi\n        fi\n    done\n    if [[ $max\
    \ -eq 0 ]]; then\n        echo \"-1\"\n    else\n        echo \"$max\"\n    fi",
  "    local -a list=($1)\n    local -a counts=($(echo \"${list[@]}\" | tr ' ' '\\\
    n' | sort | uniq -c | awk '{print $1}'))\n    local -a values=($(echo \"${list[@]}\"\
    \ | tr ' ' '\\n' | sort | uniq -c | awk '{print $2}'))\n    local -a result=()\n\
    \    for ((i=0; i<${#values[@]}; i++)); do\n        if [[ ${counts[$i]} -ge ${values[$i]}\
    \ ]]; then\n            result+=(${values[$i]})\n        fi\n    done\n    if\
    \ [[ ${#result[@]} -eq 0 ]]; then\n        echo -1\n    else\n        echo ${result[@]}\
    \ | tr ' ' '\\n' | sort -nr | head -n 1\n    fi", "\t# TODO: implement this function\n\
    \techo \"1\"", "    local -a arr=($1)\n    local -i i=0\n    local -i max=0\n\
    \    local -i max_count=0\n    local -i count=0\n    local -i len=${#arr[@]}\n\
    \    local -i j=0\n    while [ $i -lt $len ]; do\n        j=$i\n        count=0\n\
    \        while [ $j -lt $len ]; do\n            if [ ${arr[$i]} -eq ${arr[$j]}\
    \ ]; then\n                count=$((count+1))\n            fi\n            j=$((j+1))\n\
    \        done\n        if [ $count -ge ${arr[$i]} ] && [ $count -gt $max_count\
    \ ]; then\n            max=${arr[$i]}\n            max_count=$count\n        fi\n\
    \        i=$((i+1))\n    done\n    if [ $max -eq 0 ]; then\n        echo \"-1\"\
    \n    else\n        echo \"$max\"\n    fi"]
stop_tokens:
- "\n}"

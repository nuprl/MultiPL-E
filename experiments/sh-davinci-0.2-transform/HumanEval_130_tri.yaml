name: HumanEval_130_tri
language: sh
prompt: "#!/bin/bash\n# Everyone knows Fibonacci sequence, it was studied deeply by\
  \ mathematicians in \n# the last couple centuries. However, what people don't know\
  \ is Tribonacci sequence.\n# Tribonacci sequence is defined by the recurrence:\n\
  # tri(1) = 3\n# tri(n) = 1 + n / 2, if n is even.\n# tri(n) =  tri(n - 1) + tri(n\
  \ - 2) + tri(n + 1), if n is odd.\n# For example:\n# tri(2) = 1 + (2 / 2) = 2\n\
  # tri(4) = 3\n# tri(3) = tri(2) + tri(1) + tri(4)\n# = 2 + 3 + 3 = 8 \n# You are\
  \ given a non-negative integer number n, you have to a return a list of the \n#\
  \ first n + 1 numbers of the Tribonacci sequence.\n# Examples:\n# >>> $(tri \"3\"\
  )\n# ['\"1\"', '\"3\"', '\"2\"', '\"8\"']\n#\n# $1 is an integer\ntri() {\n"
tests: "}\n\ncandidate() {\n    tri \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
  \ \"3\") = \"1 3 2 8\" ]]\n    [[ $(candidate \"4\") = \"1 3 2 8 3\" ]]\n    [[\
  \ $(candidate \"5\") = \"1 3 2 8 3 15\" ]]\n    [[ $(candidate \"6\") = \"1 3 2\
  \ 8 3 15 4\" ]]\n    [[ $(candidate \"7\") = \"1 3 2 8 3 15 4 24\" ]]\n    [[ $(candidate\
  \ \"8\") = \"1 3 2 8 3 15 4 24 5\" ]]\n    [[ $(candidate \"9\") = \"1 3 2 8 3 15\
  \ 4 24 5 35\" ]]\n    [[ $(candidate \"20\") = \"1 3 2 8 3 15 4 24 5 35 6 48 7 63\
  \ 8 80 9 99 10 120 11\" ]]\n    [[ $(candidate \"0\") = \"1\" ]]\n    [[ $(candidate\
  \ \"1\") = \"1 3\" ]]\n}\n\nrun_test"
completions: ["    if [[ $1 -eq 1 ]]; then\n        echo '\"3\"'\n    elif [[ $1 -eq\
    \ 2 ]]; then\n        echo '\"1\"'\n        echo '\"3\"'\n        echo '\"2\"\
    '\n    else\n        echo '\"1\"'\n        echo '\"3\"'\n        echo '\"2\"'\n\
    \        i=3\n        while [[ $i -le $1 ]]; do\n            if [[ $((i % 2))\
    \ -eq 0 ]]; then\n                echo '\"'$((i / 2))'\"'\n            else\n\
    \                echo '\"'$((i + 1))'\"'\n            fi\n            i=$((i +\
    \ 1))\n        done\n    fi", "    local -a result\n    result[0]=1\n    result[1]=3\n\
    \    result[2]=2\n    for ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n\
    \            result[$i]=$((i/2))\n        else\n            result[$i]=$((result[$((i-1))]+result[$((i-2))]+result[$((i+1))]))\n\
    \        fi\n    done\n    echo \"${result[@]}\"", "    local -a tri_array\n \
    \   local i=0\n    local n=$1\n    local tri_n=0\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq 1 ];\
    \ then\n            tri_n=3\n        elif [ $i -eq 2 ]; then\n            tri_n=2\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i\
    \ / 2))\n            else\n                tri_n=$((tri_array[i - 1] + tri_array[i\
    \ - 2] + tri_array[i - 3]))\n            fi\n        fi\n        tri_array[$i]=$tri_n\n\
    \        i=$((i + 1))\n    done\n    echo \"${tri_array[@]}\"", "    local n=$1\n\
    \    local i=0\n    local arr=()\n    while [ $i -le $n ]; do\n        if [ $i\
    \ -eq 0 ]; then\n            arr[$i]=1\n        elif [ $i -eq 1 ]; then\n    \
    \        arr[$i]=3\n        elif [ $i -eq 2 ]; then\n            arr[$i]=2\n \
    \       else\n            if [ $((i % 2)) -eq 0 ]; then\n                arr[$i]=$((i\
    \ / 2))\n            else\n                arr[$i]=$((arr[$((i - 1))] + arr[$((i\
    \ - 2))] + arr[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo ${arr[@]}", "    n=$1\n    if [[ $n -eq 1 ]]; then\n     \
    \   echo '\"3\"'\n    elif [[ $n -eq 2 ]]; then\n        echo '\"1\"'\n      \
    \  echo '\"3\"'\n    else\n        echo '\"1\"'\n        echo '\"3\"'\n      \
    \  echo '\"2\"'\n        tri_helper $n 3\n    fi", "    local n=$1\n    local\
    \ i=1\n    local j=3\n    local k=2\n    local l=8\n    local result=()\n    result+=($i)\n\
    \    result+=($j)\n    result+=($k)\n    result+=($l)\n    while [[ $i -lt $n\
    \ ]]; do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            i=$((i + 1))\n\
    \            result+=($i)\n        else\n            i=$((i + 1))\n          \
    \  j=$((j + k + l))\n            result+=($j)\n        fi\n    done\n    echo\
    \ \"${result[@]}\"", "    local n=$1\n    local i=0\n    local result=()\n   \
    \ while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            result[$i]=3\n        elif [ $i\
    \ -eq 2 ]; then\n            result[$i]=2\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n            else\n\
    \                result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i\
    \ + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ \"${result[@]}\"", "    local n=$1\n    local result=()\n    local i=0\n   \
    \ while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            result[$i]=3\n        elif [ $i\
    \ -eq 2 ]; then\n            result[$i]=2\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n            else\n\
    \                result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i\
    \ + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${result[@]}", "    local n=$1\n    local result=()\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n\
    \    local eeee=0", "    local -i n=$1\n    local -a tri_array\n    tri_array[0]=1\n\
    \    tri_array[1]=3\n    tri_array[2]=2\n    for (( i = 3; i <= n; i++ )); do\n\
    \        if (( i % 2 == 0 )); then\n            tri_array[i]=$(( i / 2 ))\n  \
    \      else\n            tri_array[i]=$(( tri_array[i - 1] + tri_array[i - 2]\
    \ + tri_array[i + 1] ))\n        fi\n    done\n    echo \"${tri_array[@]}\"",
  "    local n=$1\n    local i=1\n    local j=3\n    local k=2\n    local l=8\n  \
    \  local result=()\n    while [ $i -le $n ]; do\n        result+=($j)\n      \
    \  j=$k\n        k=$l\n        l=$((j + k + l))\n        i=$((i + 1))\n    done\n\
    \    echo \"${result[@]}\"", "    local n=$1\n    local result=()\n    local i=0\n\
    \    local a=1\n    local b=3\n    local c=2\n    local d=0\n    while [ $i -le\
    \ $n ]; do\n        if [ $i -eq 0 ]; then\n            result+=($a)\n        elif\
    \ [ $i -eq 1 ]; then\n            result+=($b)\n        elif [ $i -eq 2 ]; then\n\
    \            result+=($c)\n        else\n            if [ $((i % 2)) -eq 0 ];\
    \ then\n                d=$((i / 2))\n            else\n                d=$((a\
    \ + b + c))\n                a=$b\n                b=$c\n                c=$d\n\
    \            fi\n            result+=($d)\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo ${result[@]}", "    local n=$1\n    local res=()\n    local\
    \ i=0\n    local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n    local\
    \ tri_n_3=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n    \
    \        tri_n=1\n        elif [ $i -eq 1 ]; then\n            tri_n=3\n     \
    \   elif [ $i -eq 2 ]; then\n            tri_n=2\n        else\n            if\
    \ [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((1 + i / 2))\n         \
    \   else\n                tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n           \
    \ fi\n        fi\n        res+=($tri_n)\n        tri_n_3=$tri_n_2\n        tri_n_2=$tri_n_1\n\
    \        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n    echo \"${res[@]}\"",
  "    local n=\"$1\"\n    local tri_list=()\n    local tri_list_str=\"\"\n    local\
    \ i=0\n    local tri_i=0\n    local tri_i_1=0\n    local tri_i_2=0\n    local\
    \ tri_i_3=0\n    local tri_i_4=0\n    local tri_i_5=0\n    local tri_i_6=0\n \
    \   local tri_i_7=0\n    local tri_i_8=0\n    local tri_i_9=0\n    local tri_i_10=0\n\
    \    local tri_i_11=0\n    local tri_i_12=0\n    local tri_i_13=0\n    local tri_i_14=0\n\
    \    local tri_i_15=0\n    local tri_i_16=0\n    local tri_i_17=0\n    local tri_i_18=0\n\
    \    local tri_i_19=0\n    local tri_i_20=0\n    local tri_i_21=0\n    local tri_i_22=0\n\
    \    local tri_i_23=0\n    local tri_i_24=0\n    local tri_i_25=0\n    local tri_i_26=0\n\
    \    local tri_i_27=0\n    local tri_i_28=0\n    local tri_i_29=0\n    local tri_i_30=0\n\
    \    local tri_i_31=0\n    local tri_i_32=0\n    local tri_i_33=0\n    local tri_i_34=0\n\
    \    local tri_i_35=0\n    local tri_i_36=0\n    local tri_i_37=0\n    local tri_i_38=0\n\
    \    local tri_i_39=0\n    local tri_i_40=0\n    local tri_i_41=0\n    local tri_i_42=0\n\
    \    local tri_i_43=0\n    local tri_i_44=0\n    local tri_i_45=0\n    local tri_i_46=0\n\
    \    local tri_i_47=0\n    local", "    local n=$1\n    local result=()\n    local\
    \ i=0\n    local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n    local\
    \ tri_n_3=0\n    local tri_n_4=0\n    local tri_n_5=0\n    local tri_n_6=0\n \
    \   local tri_n_7=0\n    local tri_n_8=0\n    local tri_n_9=0\n    local tri_n_10=0\n\
    \    local tri_n_11=0\n    local tri_n_12=0\n    local tri_n_13=0\n    local tri_n_14=0\n\
    \    local tri_n_15=0\n    local tri_n_16=0\n    local tri_n_17=0\n    local tri_n_18=0\n\
    \    local tri_n_19=0\n    local tri_n_20=0\n    local tri_n_21=0\n    local tri_n_22=0\n\
    \    local tri_n_23=0\n    local tri_n_24=0\n    local tri_n_25=0\n    local tri_n_26=0\n\
    \    local tri_n_27=0\n    local tri_n_28=0\n    local tri_n_29=0\n    local tri_n_30=0\n\
    \    local tri_n_31=0\n    local tri_n_32=0\n    local tri_n_33=0\n    local tri_n_34=0\n\
    \    local tri_n_35=0\n    local tri_n_36=0\n    local tri_n_37=0\n    local tri_n_38=0\n\
    \    local tri_n_39=0\n    local tri_n_40=0\n    local tri_n_41=0\n    local tri_n_42=0\n\
    \    local tri_n_43=0\n    local tri_n_44=0\n    local tri_n_45=0\n    local tri_n_46=0\n\
    \    local tri_n_47=0\n    local tri_n_48=0\n    local tri_n", "    local n=$1\n\
    \    local result=()\n    local i=0\n    while [ $i -le $n ]; do\n        if [\
    \ $i -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq 1 ]; then\n\
    \            result[$i]=3\n        elif [ $i -eq 2 ]; then\n            result[$i]=2\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i\
    \ / 2))\n            else\n                result[$i]=$((result[$((i - 1))] +\
    \ result[$((i - 2))] + result[$((i + 1))]))\n            fi\n        fi\n    \
    \    i=$((i + 1))\n    done\n    echo \"${result[@]}\"", "    local -a arr\n \
    \   arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=$1; i++)); do\n  \
    \      if ((i%2==0)); then\n            arr[$i]=$((i/2))\n        else\n     \
    \       arr[$i]=$((arr[$i-1]+arr[$i-2]+arr[$i+1]))\n        fi\n    done\n   \
    \ echo ${arr[@]}", "    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n\
    \    for ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n            arr[$i]=$((i/2))\n\
    \        else\n            arr[$i]=$((arr[$i-1]+arr[$i-2]+arr[$i+1]))\n      \
    \  fi\n    done\n    echo ${arr[@]}", "\tlocal n=$1\n\tlocal i=0\n\tlocal result=()\n\
    \twhile [ $i -le $n ]; do\n\t\tif [ $i -eq 0 ]; then\n\t\t\tresult[$i]=1\n\t\t\
    elif [ $i -eq 1 ]; then\n\t\t\tresult[$i]=3\n\t\telif [ $i -eq 2 ]; then\n\t\t\
    \tresult[$i]=2\n\t\telse\n\t\t\tif [ $((i % 2)) -eq 0 ]; then\n\t\t\t\tresult[$i]=$((1\
    \ + i / 2))\n\t\t\telse\n\t\t\t\tresult[$i]=$((result[$((i - 1))] + result[$((i\
    \ - 2))] + result[$((i + 1))]))\n\t\t\tfi\n\t\tfi\n\t\ti=$((i + 1))\n\tdone\n\t\
    echo ${result[@]}", "    local n=$1\n    local i=0\n    local result=()\n    while\
    \ [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            result[$i]=3\n        elif [ $i\
    \ -eq 2 ]; then\n            result[$i]=2\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n            else\n\
    \                result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i\
    \ + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${result[@]}", "    local -a tri\n    tri[0]=1\n    tri[1]=3\n    tri[2]=2\n\
    \    for ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n            tri[$i]=$((i/2))\n\
    \        else\n            tri[$i]=$((tri[$i-1]+tri[$i-2]+tri[$i+1]))\n      \
    \  fi\n    done\n    echo ${tri[@]}", "  local -a tri\n  local i=0\n  local n=$1\n\
    \  while [ $i -le $n ]; do\n    if [ $i -eq 0 ]; then\n      tri[$i]=1\n    elif\
    \ [ $i -eq 1 ]; then\n      tri[$i]=3\n    elif [ $i -eq 2 ]; then\n      tri[$i]=2\n\
    \    else\n      if [ $((i % 2)) -eq 0 ]; then\n        tri[$i]=$((i / 2))\n \
    \     else\n        tri[$i]=$((tri[$((i - 1))] + tri[$((i - 2))] + tri[$((i +\
    \ 1))]))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo \"${tri[@]}\"", " \
    \   local n=$1\n    local result=$(echo \"3\" | bc)\n    local i=1\n    while\
    \ [ $i -lt $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            result=$(echo\
    \ \"$result + $i / 2\" | bc)\n        else\n            result=$(echo \"$result\
    \ + $result + $result + 1\" | bc)\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo $result", "    local n=$1\n    local i=0\n    local tri_list=()\n  \
    \  local tri_list_str=\"\"\n    local tri_n=0\n    local tri_n_1=0\n    local\
    \ tri_n_2=0\n    local tri_n_3=0\n    local tri_n_4=0\n    local tri_n_5=0\n \
    \   local tri_n_6=0\n    local tri_n_7=0\n    local tri_n_8=0\n    local tri_n_9=0\n\
    \    local tri_n_10=0\n    local tri_n_11=0\n    local tri_n_12=0\n    local tri_n_13=0\n\
    \    local tri_n_14=0\n    local tri_n_15=0\n    local tri_n_16=0\n    local tri_n_17=0\n\
    \    local tri_n_18=0\n    local tri_n_19=0\n    local tri_n_20=0\n    local tri_n_21=0\n\
    \    local tri_n_22=0\n    local tri_n_23=0\n    local tri_n_24=0\n    local tri_n_25=0\n\
    \    local tri_n_26=0\n    local tri_n_27=0\n    local tri_n_28=0\n    local tri_n_29=0\n\
    \    local tri_n_30=0\n    local tri_n_31=0\n    local tri_n_32=0\n    local tri_n_33=0\n\
    \    local tri_n_34=0\n    local tri_n_35=0\n    local tri_n_36=0\n    local tri_n_37=0\n\
    \    local tri_n_38=0\n    local tri_n_39=0\n    local tri_n_40=0\n    local tri_n_41=0\n\
    \    local tri_n_42=0\n    local tri_n_43=0\n    local tri_n_44=0\n    local tri_n_45=0\n\
    \    local tri_n_46=0\n    local tri_n_47=0\n    local tri_", "    local n=$1\n\
    \    local res=()\n    local i=0\n    local tri_1=3\n    local tri_2=1\n    local\
    \ tri_3=2\n    local tri_n=0\n    while [ $i -le $n ]; do\n        if [ $i -eq\
    \ 0 ]; then\n            res[$i]=1\n        elif [ $i -eq 1 ]; then\n        \
    \    res[$i]=3\n        elif [ $i -eq 2 ]; then\n            res[$i]=2\n     \
    \   else\n            if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i\
    \ / 2))\n            else\n                tri_n=$((tri_1 + tri_2 + tri_3))\n\
    \                tri_1=$tri_2\n                tri_2=$tri_3\n                tri_3=$tri_n\n\
    \            fi\n            res[$i]=$tri_n\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo \"${res[@]}\"", "    local n=$1\n    local result=()\n   \
    \ local i=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n    \
    \        result[$i]=1\n        elif [ $i -eq 1 ]; then\n            result[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            result[$i]=2\n        else\n   \
    \         if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n\
    \            else\n                result[$i]=$((result[$((i - 1))] + result[$((i\
    \ - 2))] + result[$((i + 1))]))\n            fi\n        fi\n        i=$((i +\
    \ 1))\n    done\n    echo ${result[@]}", "    local n=$1\n    local i=0\n    local\
    \ a=1\n    local b=3\n    local c=2\n    local d=0\n    local result=()\n    while\
    \ [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i\
    \ / 2))\n        else\n            d=$((a + b + c))\n            a=$b\n      \
    \      b=$c\n            c=$d\n        fi\n        result+=($d)\n        i=$((i\
    \ + 1))\n    done\n    echo \"${result[@]}\"", "  local n=$1\n  local result=()\n\
    \  local i=0\n  local tri_n=0\n  local tri_n_1=0\n  local tri_n_2=0\n  local tri_n_3=0\n\
    \  while [ $i -le $n ]; do\n    if [ $i -eq 0 ]; then\n      tri_n=1\n    elif\
    \ [ $i -eq 1 ]; then\n      tri_n=3\n    elif [ $i -eq 2 ]; then\n      tri_n=2\n\
    \    else\n      if [ $((i % 2)) -eq 0 ]; then\n        tri_n=$((i / 2))\n   \
    \   else\n        tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n      fi\n    fi\n \
    \   result+=(\"$tri_n\")\n    tri_n_3=$tri_n_2\n    tri_n_2=$tri_n_1\n    tri_n_1=$tri_n\n\
    \    i=$((i + 1))\n  done\n  echo \"${result[@]}\"", "    local -a result\n  \
    \  result[0]=1\n    result[1]=3\n    result[2]=2\n    for ((i=3; i<=$1; i++));\
    \ do\n        if ((i%2==0)); then\n            result[$i]=$((i/2))\n        else\n\
    \            result[$i]=$((result[$i-1]+result[$i-2]+result[$i+1]))\n        fi\n\
    \    done\n    echo \"${result[@]}\"", "    local n=$1\n    local result=()\n\
    \    local tri_1=3\n    local tri_2=1\n    local tri_3=2\n    local tri_n=0\n\
    \    local i=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n \
    \           result[$i]=1\n        elif [ $i -eq 1 ]; then\n            result[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            result[$i]=2\n        else\n   \
    \         if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i / 2))\n  \
    \          else\n                tri_n=$((tri_1 + tri_2 + tri_3))\n          \
    \      tri_1=$tri_2\n                tri_2=$tri_3\n                tri_3=$tri_n\n\
    \            fi\n            result[$i]=$tri_n\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo ${result[@]}", "    local -a tri_array\n    local i=0\n  \
    \  local n=$1\n    local tri_num=0\n    while [ $i -le $n ]; do\n        if [\
    \ $i -eq 0 ]; then\n            tri_num=1\n        elif [ $i -eq 1 ]; then\n \
    \           tri_num=3\n        elif [ $i -eq 2 ]; then\n            tri_num=2\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                tri_num=$((i\
    \ / 2))\n            else\n                tri_num=$((tri_array[i - 1] + tri_array[i\
    \ - 2] + tri_array[i + 1]))\n            fi\n        fi\n        tri_array[$i]=$tri_num\n\
    \        i=$((i + 1))\n    done\n    echo \"${tri_array[@]}\"", "  if [ $1 -eq\
    \ 1 ]; then\n    echo \"3\"\n  elif [ $1 -eq 2 ]; then\n    echo \"1\"\n  elif\
    \ [ $1 -eq 3 ]; then\n    echo \"2\"\n  else\n    echo $(( ($1 + 1) / 2 ))\n \
    \ fi", "    local n=$1\n    local arr=()\n    local i=0\n    local res=0\n   \
    \ local tmp=0\n    local tmp1=0\n    local tmp2=0\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            res=1\n        elif [ $i -eq 1 ];\
    \ then\n            res=3\n        elif [ $i -eq 2 ]; then\n            res=2\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                res=$((i\
    \ / 2))\n            else\n                tmp=$((i - 1))\n                tmp1=$((i\
    \ - 2))\n                tmp2=$((i + 1))\n                res=$(tri $tmp)\n  \
    \              res=$((res + $(tri $tmp1) + $(tri $tmp2)))\n            fi\n  \
    \      fi\n        arr+=($res)\n        i=$((i + 1))\n    done\n    echo ${arr[@]}",
  "    local n=$1\n    local tri_list=()\n    local i=0\n    local tri_n=0\n    local\
    \ tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n    while [ $i -le $n ];\
    \ do\n        if [ $i -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq\
    \ 1 ]; then\n            tri_n=3\n        elif [ $i -eq 2 ]; then\n          \
    \  tri_n=2\n        else\n            tri_n_1=$tri_n\n            tri_n_2=$tri_n_1\n\
    \            tri_n_3=$tri_n_2\n            tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n\
    \        fi\n        tri_list+=($tri_n)\n        i=$((i + 1))\n    done\n    echo\
    \ ${tri_list[@]}", "    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n\
    \    for ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n            arr[$i]=$((i/2))\n\
    \        else\n            arr[$i]=$((arr[$i-1]+arr[$i-2]+arr[$i+1]))\n      \
    \  fi\n    done\n    echo ${arr[@]}", "    local n=$1\n    local i=1\n    local\
    \ a=1\n    local b=3\n    local c=2\n    local d=0\n    local res=()\n    while\
    \ [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i\
    \ / 2))\n        else\n            d=$((a + b + c))\n            a=$b\n      \
    \      b=$c\n            c=$d\n        fi\n        res+=(\"$d\")\n        i=$((i\
    \ + 1))\n    done\n    echo \"${res[@]}\"", "    local n=$1\n    local i=1\n \
    \   local res=()\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ];\
    \ then\n            res+=($((1 + i / 2)))\n        else\n            res+=($((res[i\
    \ - 2] + res[i - 1] + res[i + 1])))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"${res[@]}\"", "  local n=$1\n  local result=()\n  local i=0\n  while\
    \ [ $i -le $n ]; do\n    if [ $i -eq 0 ]; then\n      result[$i]=1\n    elif [\
    \ $i -eq 1 ]; then\n      result[$i]=3\n    elif [ $i -eq 2 ]; then\n      result[$i]=2\n\
    \    else\n      if [ $((i % 2)) -eq 0 ]; then\n        result[$i]=$((i / 2))\n\
    \      else\n        result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i\
    \ + 1))]))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"",
  "    local n=$1\n    local i=0\n    local result=()\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq\
    \ 1 ]; then\n            result[$i]=3\n        elif [ $i -eq 2 ]; then\n     \
    \       result[$i]=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n\
    \                result[$i]=$((i / 2))\n            else\n                result[$i]=$((result[$((i\
    \ - 1))] + result[$((i - 2))] + result[$((i + 1))]))\n            fi\n       \
    \ fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"", "    local n=$1\n\
    \    local i=0\n    local result=()\n    while [ $i -le $n ]; do\n        if [\
    \ $i -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq 1 ]; then\n\
    \            result[$i]=3\n        elif [ $i -eq 2 ]; then\n            result[$i]=2\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i\
    \ / 2))\n            else\n                result[$i]=$((result[$((i - 1))] +\
    \ result[$((i - 2))] + result[$((i + 1))]))\n            fi\n        fi\n    \
    \    i=$((i + 1))\n    done\n    echo ${result[@]}", "    if [[ $1 -eq 1 ]]; then\n\
    \        echo '\"3\"'\n    elif [[ $1 -eq 2 ]]; then\n        echo '\"1\"'\n \
    \       echo '\"3\"'\n        echo '\"2\"'\n    else\n        echo '\"1\"'\n \
    \       echo '\"3\"'\n        echo '\"2\"'\n        local n=3\n        local a=1\n\
    \        local b=3\n        local c=2\n        local d=0\n        while [[ $n\
    \ -le $1 ]]; do\n            if [[ $n -eq 3 ]]; then\n                d=$((a +\
    \ b + c))\n            elif [[ $((n % 2)) -eq 0 ]]; then\n                d=$((n\
    \ / 2))\n            else\n                d=$((a + b + c))\n            fi\n\
    \            a=$b\n            b=$c\n            c=$d\n            echo '\"'$d'\"\
    '\n            n=$((n + 1))\n        done\n    fi", "    local n=$1\n    local\
    \ i=1\n    local res=()\n    while [ $i -le $n ]; do\n        if [ $((i % 2))\
    \ -eq 0 ]; then\n            res+=($((1 + i / 2)))\n        else\n           \
    \ res+=($((res[i - 1] + res[i - 2] + res[i + 1])))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo \"${res[@]}\"", "    local n=$1\n    local i=0\n \
    \   local tri_list=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            tri_list[$i]=1\n        elif [ $i -eq 1 ]; then\n            tri_list[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            tri_list[$i]=2\n        else\n \
    \           if [ $((i % 2)) -eq 0 ]; then\n                tri_list[$i]=$((i /\
    \ 2))\n            else\n                tri_list[$i]=$((tri_list[$((i - 1))]\
    \ + tri_list[$((i - 2))] + tri_list[$((i + 1))]))\n            fi\n        fi\n\
    \        i=$((i + 1))\n    done\n    echo ${tri_list[@]}", "    local -a tri_arr\n\
    \    tri_arr[0]=1\n    tri_arr[1]=3\n    tri_arr[2]=2\n    for (( i=3; i<=$1;\
    \ i++ )); do\n        if (( i % 2 == 0 )); then\n            tri_arr[$i]=$(( i\
    \ / 2 ))\n        else\n            tri_arr[$i]=$(( tri_arr[$(( i - 1 ))] + tri_arr[$((\
    \ i - 2 ))] + tri_arr[$(( i + 1 ))] ))\n        fi\n    done\n    echo \"${tri_arr[@]}\"",
  "    local n=$1\n    local i=0\n    local result=\"\"\n    while [ $i -le $n ];\
    \ do\n        if [ $i -eq 0 ]; then\n            result=\"$result 1\"\n      \
    \  elif [ $i -eq 1 ]; then\n            result=\"$result 3\"\n        elif [ $i\
    \ -eq 2 ]; then\n            result=\"$result 2\"\n        else\n            local\
    \ tri_n_1=$(echo $result | cut -d ' ' -f $((i - 1)))\n            local tri_n_2=$(echo\
    \ $result | cut -d ' ' -f $((i - 2)))\n            local tri_n_3=$(echo $result\
    \ | cut -d ' ' -f $((i - 3)))\n            local tri_n=$((tri_n_1 + tri_n_2 +\
    \ tri_n_3))\n            result=\"$result $tri_n\"\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo $result", "    local n=$1\n    local tri_list=()\n\
    \    local i=0\n    local tri_i=0\n    local tri_i_1=0\n    local tri_i_2=0\n\
    \    local tri_i_3=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            tri_i=1\n        elif [ $i -eq 1 ]; then\n            tri_i=3\n \
    \       elif [ $i -eq 2 ]; then\n            tri_i=2\n        else\n         \
    \   if [ $((i % 2)) -eq 0 ]; then\n                tri_i=$((i / 2))\n        \
    \    else\n                tri_i=$((tri_i_1 + tri_i_2 + tri_i_3))\n          \
    \  fi\n        fi\n        tri_list+=($tri_i)\n        tri_i_3=$tri_i_2\n    \
    \    tri_i_2=$tri_i_1\n        tri_i_1=$tri_i\n        i=$((i + 1))\n    done\n\
    \    echo \"${tri_list[@]}\"", "  if [[ $1 -eq 1 ]]; then\n    echo '\"3\"'\n\
    \  elif [[ $1 -eq 2 ]]; then\n    echo '\"1\"'\n    echo '\"3\"'\n    echo '\"\
    2\"'\n  else\n    echo '\"1\"'\n    echo '\"3\"'\n    echo '\"2\"'\n    echo '\"\
    8\"'\n    for ((i = 3; i < $1; i++)); do\n      if [[ $((i % 2)) -eq 0 ]]; then\n\
    \        echo $((1 + i / 2))\n      else\n        echo $((8 + 2 + 3))\n      fi\n\
    \    done\n  fi", "    local n=$1\n    local i=0\n    local a=1\n    local b=3\n\
    \    local c=2\n    local d=0\n    local result=()\n    while [ $i -le $n ]; do\n\
    \        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n        else\n\
    \            d=$((a + b + c))\n            a=$b\n            b=$c\n          \
    \  c=$d\n        fi\n        result+=($d)\n        i=$((i + 1))\n    done\n  \
    \  echo ${result[@]}", "    local -i n=$1\n    local -a tri\n    tri[0]=1\n  \
    \  tri[1]=3\n    tri[2]=2\n    for ((i=3; i<=n; i++)); do\n        if ((i%2==0));\
    \ then\n            tri[i]=1+i/2\n        else\n            tri[i]=${tri[i-1]}+${tri[i-2]}+${tri[i+1]}\n\
    \        fi\n    done\n    echo ${tri[@]}", "  local n=$1\n  local tri_list=()\n\
    \  local i=0\n  while [ $i -le $n ]; do\n    if [ $i -eq 0 ]; then\n      tri_list[$i]=1\n\
    \    elif [ $i -eq 1 ]; then\n      tri_list[$i]=3\n    elif [ $i -eq 2 ]; then\n\
    \      tri_list[$i]=2\n    else\n      if [ $((i % 2)) -eq 0 ]; then\n       \
    \ tri_list[$i]=$((i / 2))\n      else\n        tri_list[$i]=$((tri_list[$((i -\
    \ 1))] + tri_list[$((i - 2))] + tri_list[$((i + 1))]))\n      fi\n    fi\n   \
    \ i=$((i + 1))\n  done\n  echo ${tri_list[@]}", "    local n=$1\n    local i=0\n\
    \    local result=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            result[$i]=1\n        elif [ $i -eq 1 ]; then\n            result[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            result[$i]=2\n        else\n   \
    \         if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n\
    \            else\n                result[$i]=$((result[$((i - 1))] + result[$((i\
    \ - 2))] + result[$((i + 1))]))\n            fi\n        fi\n        i=$((i +\
    \ 1))\n    done\n    echo \"${result[@]}\"", "    local n=$1\n    local i=0\n\
    \    local res=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            res[$i]=1\n        elif [ $i -eq 1 ]; then\n            res[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            res[$i]=2\n        else\n      \
    \      if [ $((i % 2)) -eq 0 ]; then\n                res[$i]=$((i / 2))\n   \
    \         else\n                res[$i]=$((res[$((i - 1))] + res[$((i - 2))] +\
    \ res[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo ${res[@]}", "    local n=$1\n    local i=0\n    local tri_list=()\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            tri_list[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            tri_list[$i]=3\n        elif [ $i\
    \ -eq 2 ]; then\n            tri_list[$i]=2\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                tri_list[$i]=$((i / 2))\n            else\n\
    \                tri_list[$i]=$((tri_list[$((i - 1))] + tri_list[$((i - 2))] +\
    \ tri_list[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n \
    \   done\n    echo \"${tri_list[@]}\"", "    local n=$1\n    local a=1\n    local\
    \ b=3\n    local c=2\n    local d=0\n    local i=0\n    local result=\"\"\n  \
    \  if [[ $n -eq 0 ]]; then\n        echo \"[]\"\n        return\n    fi\n    while\
    \ [[ $i -lt $n ]]; do\n        if [[ $i -eq 0 ]]; then\n            result=\"\
    $result\\\"$a\\\"\"\n        elif [[ $i -eq 1 ]]; then\n            result=\"\
    $result, \\\"$b\\\"\"\n        elif [[ $i -eq 2 ]]; then\n            result=\"\
    $result, \\\"$c\\\"\"\n        else\n            d=$((a + b + c))\n          \
    \  result=\"$result, \\\"$d\\\"\"\n            a=$b\n            b=$c\n      \
    \      c=$d\n        fi\n        i=$((i + 1))\n    done\n    echo \"[$result]\"",
  "    local n=$1\n    local i=0\n    local tri=()\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            tri[$i]=1\n        elif [ $i -eq 1\
    \ ]; then\n            tri[$i]=3\n        elif [ $i -eq 2 ]; then\n          \
    \  tri[$i]=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n      \
    \          tri[$i]=$((i / 2))\n            else\n                tri[$i]=$((tri[$((i\
    \ - 1))] + tri[$((i - 2))] + tri[$((i + 1))]))\n            fi\n        fi\n \
    \       i=$((i + 1))\n    done\n    echo \"${tri[@]}\"", "    local n=$1\n   \
    \ local result=()\n    local i=0\n    local tri_n=0\n    local tri_n_1=0\n   \
    \ local tri_n_2=0\n    local tri_n_3=0\n    while [ $i -le $n ]; do\n        if\
    \ [ $i -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq 1 ]; then\n \
    \           tri_n=3\n        elif [ $i -eq 2 ]; then\n            tri_n=2\n  \
    \      else\n            if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i\
    \ / 2))\n            else\n                tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n\
    \            fi\n        fi\n        result+=($tri_n)\n        tri_n_3=$tri_n_2\n\
    \        tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n\
    \    echo ${result[@]}", "    local n=$1\n    local i=0\n    local result=()\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            result[$i]=3\n        elif [ $i\
    \ -eq 2 ]; then\n            result[$i]=2\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n            else\n\
    \                result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i\
    \ + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${result[@]}", "    local n=$1\n    local i=1\n    local res=()\n    while [\
    \ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            res[$i]=$((1\
    \ + i / 2))\n        else\n            res[$i]=$((res[$((i - 1))] + res[$((i -\
    \ 2))] + res[$((i + 1))]))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${res[@]}", "    local -i n=$1\n    local -a tri_arr\n    local -i i=0\n   \
    \ local -i tri_n=0\n    local -i tri_n_1=0\n    local -i tri_n_2=0\n    local\
    \ -i tri_n_3=0\n    local -i tri_n_4=0\n    local -i tri_n_5=0\n    local -i tri_n_6=0\n\
    \    local -i tri_n_7=0\n    local -i tri_n_8=0\n    local -i tri_n_9=0\n    local\
    \ -i tri_n_10=0\n    local -i tri_n_11=0\n    local -i tri_n_12=0\n    local -i\
    \ tri_n_13=0\n    local -i tri_n_14=0\n    local -i tri_n_15=0\n    local -i tri_n_16=0\n\
    \    local -i tri_n_17=0\n    local -i tri_n_18=0\n    local -i tri_n_19=0\n \
    \   local -i tri_n_20=0\n    local -i tri_n_21=0\n    local -i tri_n_22=0\n  \
    \  local -i tri_n_23=0\n    local -i tri_n_24=0\n    local -i tri_n_25=0\n   \
    \ local -i tri_n_26=0\n    local -i tri_n_27=0\n    local -i tri_n_28=0\n    local\
    \ -i tri_n_29=0\n    local -i tri_n_30=0\n    local -i tri_n_31=0\n    local -i\
    \ tri_n_32=0\n    local -i tri_n_33=0\n    local -i tri_n_34=0\n    local -i tri_n_35=0\n\
    \    local -i tri_n_36=0\n    local -i tri_n_37=0\n    local -i tri_n_38=0\n \
    \   local -i tri_n_39=0\n    local -i tri_n_40", "    local n=\"$1\"\n    local\
    \ -a a\n    a[0]=1\n    a[1]=3\n    a[2]=2\n    for ((i=3; i<=n; i++)); do\n \
    \       if ((i % 2 == 0)); then\n            a[i]=$((1 + i / 2))\n        else\n\
    \            a[i]=$((a[i-1] + a[i-2] + a[i+1]))\n        fi\n    done\n    echo\
    \ \"${a[@]}\"", "    if [[ $1 -eq 1 ]]; then\n        echo '\"3\"'\n    elif [[\
    \ $1 -eq 2 ]]; then\n        echo '\"1\"'\n        echo '\"3\"'\n        echo\
    \ '\"2\"'\n    else\n        echo '\"1\"'\n        echo '\"3\"'\n        echo\
    \ '\"2\"'\n        echo '\"8\"'\n        for (( i = 3; i < $1; i++ )); do\n  \
    \          if (( i % 2 == 0 )); then\n                echo '\"'$(( i + 1 ))'\"\
    '\n            else\n                echo '\"'$(( $(tri $(( i - 1 ))) + $(tri\
    \ $(( i - 2 ))) + $(tri $(( i + 1 ))) ))'\"'\n            fi\n        done\n \
    \   fi", "    local n=$1\n    local i=0\n    local result=\"\"\n    while [ $i\
    \ -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result=\"$result 1\"\
    \n        elif [ $i -eq 1 ]; then\n            result=\"$result 3\"\n        elif\
    \ [ $i -eq 2 ]; then\n            result=\"$result 2\"\n        else\n       \
    \     if [ $((i % 2)) -eq 0 ]; then\n                result=\"$result $((i / 2\
    \ + 1))\"\n            else\n                local a=$(echo $result | awk '{print\
    \ $NF}')\n                local b=$(echo $result | awk '{print $(NF-1)}')\n  \
    \              local c=$(echo $result | awk '{print $(NF-2)}')\n             \
    \   result=\"$result $((a + b + c))\"\n            fi\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo $result", "    local n=$1\n    local tri_list=()\n\
    \    local i=0\n    local tri_i=0\n    local tri_i_1=0\n    local tri_i_2=0\n\
    \    local tri_i_3=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            tri_i=1\n        elif [ $i -eq 1 ]; then\n            tri_i=3\n \
    \       elif [ $i -eq 2 ]; then\n            tri_i=2\n        else\n         \
    \   if [ $((i % 2)) -eq 0 ]; then\n                tri_i=$((i / 2))\n        \
    \    else\n                tri_i=$((tri_i_1 + tri_i_2 + tri_i_3))\n          \
    \  fi\n        fi\n        tri_list+=($tri_i)\n        tri_i_3=$tri_i_2\n    \
    \    tri_i_2=$tri_i_1\n        tri_i_1=$tri_i\n        i=$((i + 1))\n    done\n\
    \    echo \"${tri_list[@]}\"", "    local n=$1\n    local i=0\n    local tri_list=()\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            tri_list[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            tri_list[$i]=3\n        elif [ $i\
    \ -eq 2 ]; then\n            tri_list[$i]=2\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                tri_list[$i]=$((i / 2))\n            else\n\
    \                tri_list[$i]=$((tri_list[$((i - 1))] + tri_list[$((i - 2))] +\
    \ tri_list[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n \
    \   done\n    echo ${tri_list[@]}", "    if [[ $1 -eq 0 ]]; then\n        echo\
    \ '[\"0\"]'\n    else\n        echo '[\"1\", \"3\", \"2\"]'\n        for ((i =\
    \ 3; i < $1; i++)); do\n            echo '[\"1\", \"3\", \"2\"]'\n        done\n\
    \    fi", "    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for\
    \ ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n            arr[$i]=$((i/2))\n\
    \        else\n            arr[$i]=$((arr[$((i-1))]+arr[$((i-2))]+arr[$((i+1))]))\n\
    \        fi\n    done\n    echo \"${arr[@]}\"", "    local n=$1\n    local result=()\n\
    \    local i=0\n    local n_1=3\n    local n_2=2\n    local n_3=1\n    local n_i=0\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            n_i=1\n\
    \        elif [ $i -eq 1 ]; then\n            n_i=$n_1\n        elif [ $i -eq\
    \ 2 ]; then\n            n_i=$n_2\n        else\n            if [ $((i % 2)) -eq\
    \ 0 ]; then\n                n_i=$((i / 2))\n            else\n              \
    \  n_i=$((n_1 + n_2 + n_3))\n            fi\n        fi\n        result+=(\"$n_i\"\
    )\n        n_3=$n_2\n        n_2=$n_1\n        n_1=$n_i\n        i=$((i + 1))\n\
    \    done\n    echo \"${result[@]}\"", "  local n=$1\n  local i=0\n  local result=()\n\
    \  while [ $i -le $n ]; do\n    if [ $i -eq 0 ]; then\n      result[$i]=1\n  \
    \  elif [ $i -eq 1 ]; then\n      result[$i]=3\n    elif [ $i -eq 2 ]; then\n\
    \      result[$i]=2\n    else\n      if [ $((i % 2)) -eq 0 ]; then\n        result[$i]=$((i\
    \ / 2))\n      else\n        result[$i]=$((result[$((i - 1))] + result[$((i -\
    \ 2))] + result[$((i + 1))]))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ \"${result[@]}\"", "    local n=$1\n    local tri_list=()\n    local tri_list_str=\"\
    \"\n    local i=0\n    local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n\
    \    local tri_n_3=0\n    local tri_n_4=0\n    local tri_n_5=0\n    local tri_n_6=0\n\
    \    local tri_n_7=0\n    local tri_n_8=0\n    local tri_n_9=0\n    local tri_n_10=0\n\
    \    local tri_n_11=0\n    local tri_n_12=0\n    local tri_n_13=0\n    local tri_n_14=0\n\
    \    local tri_n_15=0\n    local tri_n_16=0\n    local tri_n_17=0\n    local tri_n_18=0\n\
    \    local tri_n_19=0\n    local tri_n_20=0\n    local tri_n_21=0\n    local tri_n_22=0\n\
    \    local tri_n_23=0\n    local tri_n_24=0\n    local tri_n_25=0\n    local tri_n_26=0\n\
    \    local tri_n_27=0\n    local tri_n_28=0\n    local tri_n_29=0\n    local tri_n_30=0\n\
    \    local tri_n_31=0\n    local tri_n_32=0\n    local tri_n_33=0\n    local tri_n_34=0\n\
    \    local tri_n_35=0\n    local tri_n_36=0\n    local tri_n_37=0\n    local tri_n_38=0\n\
    \    local tri_n_39=0\n    local tri_n_40=0\n    local tri_n_41=0\n    local tri_n_42=0\n\
    \    local tri_n_43=0\n    local tri_n_44=0\n    local tri_n_45=0\n    local tri_n_46=0\n\
    \    local tri_n_47=0\n    local tri_", "    local -a arr\n    arr[0]=1\n    arr[1]=3\n\
    \    arr[2]=2\n    for ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n\
    \            arr[$i]=$((i/2))\n        else\n            arr[$i]=$((arr[$((i-1))]+arr[$((i-2))]+arr[$((i+1))]))\n\
    \        fi\n    done\n    echo \"${arr[@]}\"", "    local n=$1\n    local result=()\n\
    \    local i=0\n    local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n\
    \    local tri_n_3=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            tri_n=1\n        elif [ $i -eq 1 ]; then\n            tri_n=3\n \
    \       elif [ $i -eq 2 ]; then\n            tri_n=2\n        else\n         \
    \   tri_n_1=$tri_n\n            tri_n_2=$tri_n_1\n            tri_n_3=$tri_n_2\n\
    \            tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n        fi\n        result+=($tri_n)\n\
    \        i=$((i + 1))\n    done\n    echo ${result[@]}", "    local -a tri\n \
    \   tri[0]=1\n    tri[1]=3\n    tri[2]=2\n    for ((i=3; i<=$1; i++)); do\n  \
    \      if ((i%2==0)); then\n            tri[$i]=$((i/2))\n        else\n     \
    \       tri[$i]=$((tri[$i-1]+tri[$i-2]+tri[$i+1]))\n        fi\n    done\n   \
    \ echo \"${tri[@]}\"", "    if [[ $1 -eq 1 ]]; then\n        echo 3\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo 1\n    elif [[ $1 -eq 3 ]]; then\n      \
    \  echo 2\n    else\n        if [[ $1 -eq 0 ]]; then\n            echo 1\n   \
    \     else\n            if [[ $1 -eq 4 ]]; then\n                echo 3\n    \
    \        else\n                if [[ $1 -eq 5 ]]; then\n                    echo\
    \ 8\n                else\n                    if [[ $1 -eq 6 ]]; then\n     \
    \                   echo 11\n                    else\n                      \
    \  if [[ $1 -eq 7 ]]; then\n                            echo 19\n            \
    \            else\n                            if [[ $1 -eq 8 ]]; then\n     \
    \                           echo 30\n                            else\n      \
    \                          if [[ $1 -eq 9 ]]; then\n                         \
    \           echo 48\n                                else\n                  \
    \                  if [[ $1 -eq 10 ]]; then\n                                \
    \        echo 77\n                                    else\n                 \
    \                       if [[ $1 -eq 11 ]]; then\n                           \
    \                 echo 125\n                                        else\n   \
    \                                         if [[ $1 -eq 12 ]]; then\n         \
    \                                       echo 199\n                           \
    \                 else\n                                                if [[\
    \ $1 -eq 13 ]]; then\n                                                    echo\
    \ 322\n                                                else\n                \
    \                                    if [[ $1 -eq 14 ]]; then\n              \
    \                                          echo 521\n                        \
    \                            else\n                                          \
    \              if [[ $1 -eq 15 ]]; then\n                                    \
    \                        echo 843\n                                          \
    \              else\n                                                        \
    \    if [[ $1 -eq 16 ]]; then\n                                              \
    \                  echo 1364\n                                               \
    \             else\n                                                         \
    \       if [[ $1 -eq 17 ]]; then\n                                           \
    \                         echo 2207\n                                        \
    \                        else\n                                              \
    \                      if [[ $1 -eq 18 ]]; then\n                            \
    \                                            echo 3571\n                     \
    \                                               else\n                       \
    \                                                 if [[ $1 -eq 19 ]]; then\n \
    \                                                                           echo\
    \ 5778\n                                                                     \
    \   else\n                                                                   \
    \         if [[ $1 -eq 20 ]]; then\n                                         \
    \                                       echo 9349\n                          \
    \                                                  else\n                    \
    \                                                            if [[ $1 -eq 21 ]];\
    \ then\n                                                                     \
    \              ", "    if [[ $1 -eq 1 ]]; then\n        echo '\"3\"'\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo '\"1\"'\n        echo '\"3\"'\n        echo\
    \ '\"2\"'\n    else\n        echo '\"1\"'\n        echo '\"3\"'\n        echo\
    \ '\"2\"'\n        for ((i = 3; i <= $1; i++)); do\n            if [[ $((i % 2))\
    \ -eq 0 ]]; then\n                echo '\"'$((i / 2 + 1))'\"'\n            else\n\
    \                echo '\"'$((i + 1))'\"'\n            fi\n        done\n    fi",
  "    local n=$1\n    local result=()\n    local i=0\n    local a=1\n    local b=3\n\
    \    local c=2\n    local d\n    while [ $i -le $n ]; do\n        result[$i]=$a\n\
    \        if [ $((i % 2)) -eq 0 ]; then\n            a=$((i / 2))\n        else\n\
    \            d=$((a + b + c))\n            a=$b\n            b=$c\n          \
    \  c=$d\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"",
  "    local n=$1\n    local i=0\n    local tri_list=()\n    local tri_list_str=\"\
    \"\n    local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n\
    \    local tri_n_4=0\n    local tri_n_5=0\n    local tri_n_6=0\n    local tri_n_7=0\n\
    \    local tri_n_8=0\n    local tri_n_9=0\n    local tri_n_10=0\n    local tri_n_11=0\n\
    \    local tri_n_12=0\n    local tri_n_13=0\n    local tri_n_14=0\n    local tri_n_15=0\n\
    \    local tri_n_16=0\n    local tri_n_17=0\n    local tri_n_18=0\n    local tri_n_19=0\n\
    \    local tri_n_20=0\n    local tri_n_21=0\n    local tri_n_22=0\n    local tri_n_23=0\n\
    \    local tri_n_24=0\n    local tri_n_25=0\n    local tri_n_26=0\n    local tri_n_27=0\n\
    \    local tri_n_28=0\n    local tri_n_29=0\n    local tri_n_30=0\n    local tri_n_31=0\n\
    \    local tri_n_32=0\n    local tri_n_33=0\n    local tri_n_34=0\n    local tri_n_35=0\n\
    \    local tri_n_36=0\n    local tri_n_37=0\n    local tri_n_38=0\n    local tri_n_39=0\n\
    \    local tri_n_40=0\n    local tri_n_41=0\n    local tri_n_42=0\n    local tri_n_43=0\n\
    \    local tri_n_44=0\n    local tri_n_45=0\n    local tri_n_46=0\n    local tri_n_47=0\n\
    \    local tri_", "    if [[ $1 -eq 1 ]]; then\n        echo '\"3\"'\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo '\"1\" \"3\" \"2\"'\n    else\n        echo\
    \ '\"1\" \"3\" \"2\"'\n        for ((i = 3; i <= $1; i++)); do\n            if\
    \ [[ $((i % 2)) -eq 0 ]]; then\n                echo '\"'\"$((i / 2))\"'\"'\n\
    \            else\n                echo '\"'\"$((tri[i - 1] + tri[i - 2] + tri[i\
    \ + 1]))\"'\"'\n            fi\n        done\n    fi", "    local n=$1\n    local\
    \ res=()\n    local i=0\n    local tmp=0\n    local tmp1=0\n    local tmp2=0\n\
    \    local tmp3=0\n    local tmp4=0\n    local tmp5=0\n    local tmp6=0\n    local\
    \ tmp7=0\n    local tmp8=0\n    local tmp9=0\n    local tmp10=0\n    local tmp11=0\n\
    \    local tmp12=0\n    local tmp13=0\n    local tmp14=0\n    local tmp15=0\n\
    \    local tmp16=0\n    local tmp17=0\n    local tmp18=0\n    local tmp19=0\n\
    \    local tmp20=0\n    local tmp21=0\n    local tmp22=0\n    local tmp23=0\n\
    \    local tmp24=0\n    local tmp25=0\n    local tmp26=0\n    local tmp27=0\n\
    \    local tmp28=0\n    local tmp29=0\n    local tmp30=0\n    local tmp31=0\n\
    \    local tmp32=0\n    local tmp33=0\n    local tmp34=0\n    local tmp35=0\n\
    \    local tmp36=0\n    local tmp37=0\n    local tmp38=0\n    local tmp39=0\n\
    \    local tmp40=0\n    local tmp41=0\n    local tmp42=0\n    local tmp43=0\n\
    \    local tmp44=0\n    local tmp45=0\n    local tmp46=0\n    local tmp47=0\n\
    \    local tmp48=0\n    local tmp49=0\n    local tmp50=0\n    local tmp51=0\n\
    \    local tmp52=0\n    local tmp53=0\n    local tmp54=0\n    local tmp55=0\n\
    \    local tmp56=0\n    local tmp57=0\n    local tmp58=0\n    local tmp59=0\n\
    \    local tmp60=0\n    local tmp61=0\n    local tmp62=0\n    local tmp63=0\n\
    \    local tmp64=0\n    local tmp65=0\n    local tmp66=0\n    local tmp67=0\n\
    \    local tmp68=0\n    local tmp69=0\n    local tmp70", "    local -i n=$1\n\
    \    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=n;\
    \ i++)); do\n        if ((i % 2 == 0)); then\n            arr[i]=$((1 + i / 2))\n\
    \        else\n            arr[i]=$((arr[i-1] + arr[i-2] + arr[i+1]))\n      \
    \  fi\n    done\n    echo \"${arr[@]}\"", "    if [[ $1 -eq 1 ]]; then\n     \
    \   echo '\"3\"'\n    elif [[ $1 -eq 2 ]]; then\n        echo '\"1\"'\n      \
    \  echo '\"3\"'\n        echo '\"2\"'\n    else\n        echo '\"1\"'\n      \
    \  echo '\"3\"'\n        echo '\"2\"'\n        echo '\"8\"'\n        for ((i =\
    \ 3; i < $1; i++)); do\n            if [[ $((i % 2)) -eq 0 ]]; then\n        \
    \        echo '\"'$((i + 1))'\"'\n            else\n                echo '\"'$((8\
    \ + 2 + 3))'\"'\n            fi\n        done\n    fi", "    if [[ $1 -eq 1 ]];\
    \ then\n        echo '\"3\"'\n    elif [[ $1 -eq 2 ]]; then\n        echo '\"\
    1\" \"3\" \"2\"'\n    else\n        echo '\"1\" \"3\" \"2\"'\n        for (( i\
    \ = 3; i <= $1; i++ )); do\n            if [[ $(( i % 2 )) -eq 0 ]]; then\n  \
    \              echo '\"'\"$(( i / 2 ))\"'\"'\n            else\n             \
    \   echo '\"'\"$(( $(tri $(( i - 1 ))) + $(tri $(( i - 2 ))) + $(tri $(( i + 1\
    \ ))) ))\"'\"'\n            fi\n        done\n    fi", "    if [ $1 -eq 1 ]; then\n\
    \        echo \"3\"\n    elif [ $(( $1 % 2 )) -eq 0 ]; then\n        echo $((\
    \ 1 + $1 / 2 ))\n    else\n        echo $(( $(tri $(( $1 - 1 ))) + $(tri $(( $1\
    \ - 2 ))) + $(tri $(( $1 + 1 ))) ))\n    fi", "    local n=$1\n    local result=()\n\
    \    local i=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n \
    \           result[$i]=1\n        elif [ $i -eq 1 ]; then\n            result[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            result[$i]=2\n        else\n   \
    \         if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n\
    \            else\n                result[$i]=$((result[$((i - 1))] + result[$((i\
    \ - 2))] + result[$((i + 1))]))\n            fi\n        fi\n        i=$((i +\
    \ 1))\n    done\n    echo ${result[@]}", "    local n=$1\n    local i=0\n    local\
    \ result=\"\"\n    while [ $i -le $n ]; do\n        result=\"$result $(tri_n $i)\"\
    \n        i=$((i + 1))\n    done\n    echo $result", "    local n=$1\n    local\
    \ i=1\n    local result=()\n    while [ $i -le $n ]; do\n        if [ $((i % 2))\
    \ -eq 0 ]; then\n            result+=($((1 + i / 2)))\n        else\n        \
    \    result+=($((result[i - 1] + result[i - 2] + result[i - 3])))\n        fi\n\
    \        i=$((i + 1))\n    done\n    echo ${result[@]}", "    local n=$1\n   \
    \ local res=()\n    local i=0\n    while [ $i -le $n ]; do\n        if [ $i -eq\
    \ 0 ]; then\n            res[$i]=1\n        elif [ $i -eq 1 ]; then\n        \
    \    res[$i]=3\n        elif [ $i -eq 2 ]; then\n            res[$i]=2\n     \
    \   else\n            if [ $((i % 2)) -eq 0 ]; then\n                res[$i]=$((i\
    \ / 2))\n            else\n                res[$i]=$((res[$((i - 1))] + res[$((i\
    \ - 2))] + res[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo ${res[@]}", "    if [[ $1 -eq 0 ]]; then\n        echo \"\
    []\"\n    else\n        echo \"[\"\n        for (( i = 1; i <= $1; i++ )); do\n\
    \            if [[ $i -eq 1 ]]; then\n                echo '\"3\"'\n         \
    \   elif [[ $i -eq 2 ]]; then\n                echo '\"1\"'\n            elif\
    \ [[ $i -eq 3 ]]; then\n                echo '\"2\"'\n            else\n     \
    \           if [[ $((i % 2)) -eq 0 ]]; then\n                    echo '\"'$((i\
    \ / 2))'\"'\n                else\n                    echo '\"'$((tri $((i -\
    \ 1)) + tri $((i - 2)) + tri $((i + 1))))'\"'\n                fi\n          \
    \  fi\n            if [[ $i -ne $1 ]]; then\n                echo \",\"\n    \
    \        fi\n        done\n        echo \"]\"\n    fi", "  local i=0\n  local\
    \ n=$1\n  local a=1\n  local b=3\n  local c=2\n  local d=0\n  local res=\"\"\n\
    \  while [ $i -le $n ]; do\n    if [ $((i % 2)) -eq 0 ]; then\n      d=$((i /\
    \ 2))\n    else\n      d=$((a + b + c))\n      a=$b\n      b=$c\n      c=$d\n\
    \    fi\n    res=\"$res $d\"\n    i=$((i + 1))\n  done\n  echo $res", "  if [\
    \ $1 -eq 1 ]; then\n    echo \"3\"\n  elif [ $1 -eq 2 ]; then\n    echo \"1 3\"\
    \n  elif [ $1 -eq 3 ]; then\n    echo \"1 3 2\"\n  else\n    echo \"1 3 2\"\n\
    \    for ((i=4; i<=$1; i++)); do\n      if [ $((i % 2)) -eq 0 ]; then\n      \
    \  echo $((i / 2))\n      else\n        echo $(( $(tri $((i - 1))) + $(tri $((i\
    \ - 2))) + $(tri $((i + 1))) ))\n      fi\n    done\n  fi", "    local n=$1\n\
    \    local result=()\n    local tri_1=3\n    local tri_2=1\n    local tri_3=3\n\
    \    local tri_n=0\n    for (( i = 1; i <= n; i++ )); do\n        if (( i == 1\
    \ )); then\n            tri_n=3\n        elif (( i == 2 )); then\n           \
    \ tri_n=1\n        elif (( i == 3 )); then\n            tri_n=3\n        elif\
    \ (( i % 2 == 0 )); then\n            tri_n=$(( i / 2 ))\n        else\n     \
    \       tri_n=$(( tri_1 + tri_2 + tri_3 ))\n            tri_1=$tri_2\n       \
    \     tri_2=$tri_3\n            tri_3=$tri_n\n        fi\n        result+=($tri_n)\n\
    \    done\n    echo \"${result[@]}\"", "    local n=$1\n    local result=\"\"\n\
    \    if [[ $n -eq 1 ]]; then\n        result=\"3\"\n    elif [[ $n -eq 2 ]]; then\n\
    \        result=\"3 2\"\n    elif [[ $n -eq 3 ]]; then\n        result=\"3 2 8\"\
    \n    else\n        result=\"3 2 8\"\n        local i=4\n        local tri_n_1=8\n\
    \        local tri_n_2=2\n        local tri_n_3=3\n        while [[ $i -le $n\
    \ ]]; do\n            if [[ $((i % 2)) -eq 0 ]]; then\n                result=\"\
    $result $((i / 2))\"\n            else\n                result=\"$result $((tri_n_1\
    \ + tri_n_2 + tri_n_3))\"\n                tri_n_3=$tri_n_2\n                tri_n_2=$tri_n_1\n\
    \                tri_n_1=$((tri_n_1 + tri_n_2 + tri_n_3))\n            fi\n  \
    \          i=$((i + 1))\n        done\n    fi\n    echo $result", "    local n=$1\n\
    \    local i=1\n    local tri_list=()\n    while [ $i -le $n ]; do\n        if\
    \ [ $i -eq 1 ]; then\n            tri_list+=(3)\n        elif [ $((i % 2)) -eq\
    \ 0 ]; then\n            tri_list+=($((1 + (i / 2))))\n        else\n        \
    \    tri_list+=($((tri_list[$((i - 1))] + tri_list[$((i - 2))] + tri_list[$((i\
    \ + 1))])))\n        fi\n        i=$((i + 1))\n    done\n    echo ${tri_list[@]}",
  "    local n=$1\n    local result=()\n    local i=0\n    local a=1\n    local b=3\n\
    \    local c=2\n    local d=0\n    while [ $i -le $n ]; do\n        if [ $((i\
    \ % 2)) -eq 0 ]; then\n            d=$((i / 2))\n        else\n            d=$((a\
    \ + b + c))\n            a=$b\n            b=$c\n            c=$d\n        fi\n\
    \        result+=($d)\n        i=$((i + 1))\n    done\n    echo ${result[@]}",
  "    local -a result\n    result=(\"1\" \"3\" \"2\")\n    for ((i = 3; i <= $1;\
    \ i++)); do\n        if ((i % 2 == 0)); then\n            result+=(\"$((i / 2\
    \ + 1))\")\n        else\n            result+=(\"$((result[i - 1] + result[i -\
    \ 2] + result[i + 1]))\")\n        fi\n    done\n    echo \"${result[@]}\"", " \
    \   local n=$1\n    local i=0\n    local result=\"\"\n    local tri_n=3\n    local\
    \ tri_n_1=3\n    local tri_n_2=1\n    local tri_n_3=0\n    while [ $i -le $n ];\
    \ do\n        if [ $i -eq 0 ]; then\n            result=\"$result \\\"1\\\"\"\n\
    \        elif [ $i -eq 1 ]; then\n            result=\"$result \\\"3\\\"\"\n \
    \       elif [ $i -eq 2 ]; then\n            result=\"$result \\\"2\\\"\"\n  \
    \      else\n            if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i\
    \ / 2))\n            else\n                tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n\
    \            fi\n            result=\"$result \\\"$tri_n\\\"\"\n            tri_n_3=$tri_n_2\n\
    \            tri_n_2=$tri_n_1\n            tri_n_1=$tri_n\n        fi\n      \
    \  i=$((i + 1))\n    done\n    echo \"[$result]\"", "    local -i n=$1\n    local\
    \ -a tri_arr\n    local -i i=0\n    local -i tri_i=0\n    local -i tri_i_1=0\n\
    \    local -i tri_i_2=0\n    local -i tri_i_3=0\n    local -i tri_i_4=0\n    local\
    \ -i tri_i_5=0\n    local -i tri_i_6=0\n    local -i tri_i_7=0\n    local -i tri_i_8=0\n\
    \    local -i tri_i_9=0\n    local -i tri_i_10=0\n    local -i tri_i_11=0\n  \
    \  local -i tri_i_12=0\n    local -i tri_i_13=0\n    local -i tri_i_14=0\n   \
    \ local -i tri_i_15=0\n    local -i tri_i_16=0\n    local -i tri_i_17=0\n    local\
    \ -i tri_i_18=0\n    local -i tri_i_19=0\n    local -i tri_i_20=0\n    local -i\
    \ tri_i_21=0\n    local -i tri_i_22=0\n    local -i tri_i_23=0\n    local -i tri_i_24=0\n\
    \    local -i tri_i_25=0\n    local -i tri_i_26=0\n    local -i tri_i_27=0\n \
    \   local -i tri_i_28=0\n    local -i tri_i_29=0\n    local -i tri_i_30=0\n  \
    \  local -i tri_i_31=0\n    local -i tri_i_32=0\n    local -i tri_i_33=0\n   \
    \ local -i tri_i_34=0\n    local -i tri_i_35=0\n    local -i tri_i_36=0\n    local\
    \ -i tri_i_37=0\n    local -i tri_i_38=0\n    local -i tri_i_39=0\n    local -i\
    \ tri_i_40", "    if [[ $1 =~ ^[0-9]+$ ]]; then\n        if [[ $1 -eq 0 ]]; then\n\
    \            echo '[\"1\"]'\n        elif [[ $1 -eq 1 ]]; then\n            echo\
    \ '[\"1\", \"3\"]'\n        elif [[ $1 -eq 2 ]]; then\n            echo '[\"1\"\
    , \"3\", \"2\"]'\n        else\n            echo '[\"1\", \"3\", \"2\", \"8\"\
    '\n            for ((i = 3; i < $1; i++)); do\n                if [[ $((i % 2))\
    \ -eq 0 ]]; then\n                    echo '\"'$((i / 2 + 1))'\"'\n          \
    \      else\n                    echo '\"'$((8 + 2 + 3))'\"'\n               \
    \ fi\n            done\n            echo ']'\n        fi\n    else\n        echo\
    \ '[\"1\"]'\n    fi", "    local n=$1\n    local result=()\n    local i=0\n  \
    \  local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            tri_n=1\n\
    \        elif [ $i -eq 1 ]; then\n            tri_n=3\n        elif [ $i -eq 2\
    \ ]; then\n            tri_n=2\n        else\n            tri_n=$((tri_n_1 + tri_n_2\
    \ + tri_n_3))\n        fi\n        result+=($tri_n)\n        tri_n_3=$tri_n_2\n\
    \        tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n\
    \    echo \"${result[@]}\"", "    local -a tri\n    tri[0]=1\n    tri[1]=3\n \
    \   tri[2]=2\n    for ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n \
    \           tri[$i]=$((i/2))\n        else\n            tri[$i]=$((tri[$i-1]+tri[$i-2]+tri[$i+1]))\n\
    \        fi\n    done\n    echo ${tri[@]}", "    local n=$1\n    local -a tri\n\
    \    tri[0]=1\n    tri[1]=3\n    tri[2]=2\n    for (( i = 3; i <= n; i++ )); do\n\
    \        if (( i % 2 == 0 )); then\n            tri[i]=$(( i / 2 ))\n        else\n\
    \            tri[i]=$(( tri[i - 1] + tri[i - 2] + tri[i + 1] ))\n        fi\n\
    \    done\n    echo ${tri[@]}", "    local n=$1\n    local i=0\n    local a=1\n\
    \    local b=3\n    local c=2\n    local d=0\n    local arr=()\n    while [ $i\
    \ -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n\
    \        else\n            d=$((a + b + c))\n            a=$b\n            b=$c\n\
    \            c=$d\n        fi\n        arr+=($d)\n        i=$((i + 1))\n    done\n\
    \    echo ${arr[@]}", "    local n=$1\n    local result=()\n    local i=0\n  \
    \  local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n\
    \    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            tri_n=1\n\
    \        elif [ $i -eq 1 ]; then\n            tri_n=3\n        elif [ $i -eq 2\
    \ ]; then\n            tri_n=2\n        else\n            if [ $((i % 2)) -eq\
    \ 0 ]; then\n                tri_n=$((i / 2))\n            else\n            \
    \    tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n            fi\n        fi\n    \
    \    result[$i]=$tri_n\n        tri_n_3=$tri_n_2\n        tri_n_2=$tri_n_1\n \
    \       tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n    echo ${result[@]}",
  "  local n=$1\n  local result=()\n  local i=0\n  while [ $i -le $n ]; do\n    if\
    \ [ $i -eq 0 ]; then\n      result+=(\"1\")\n    elif [ $i -eq 1 ]; then\n   \
    \   result+=(\"3\")\n    elif [ $i -eq 2 ]; then\n      result+=(\"2\")\n    else\n\
    \      if [ $((i % 2)) -eq 0 ]; then\n        result+=(\"$((i / 2 + 1))\")\n \
    \     else\n        result+=(\"$((result[i - 1] + result[i - 2] + result[i - 3]))\"\
    )\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"", "   \
    \ local n=$1\n    local i=0\n    local tri_list=()\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            tri_list+=(1)\n        elif [ $i -eq\
    \ 1 ]; then\n            tri_list+=(3)\n        elif [ $i -eq 2 ]; then\n    \
    \        tri_list+=(2)\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n\
    \                tri_list+=($((i / 2)))\n            else\n                tri_list+=($((tri_list[$((i\
    \ - 1))] + tri_list[$((i - 2))] + tri_list[$((i + 1))])))\n            fi\n  \
    \      fi\n        i=$((i + 1))\n    done\n    echo \"${tri_list[@]}\"", "   \
    \ local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=$1;\
    \ i++)); do\n        if ((i%2==0)); then\n            arr[$i]=$((i/2))\n     \
    \   else\n            arr[$i]=$((arr[$i-1]+arr[$i-2]+arr[$i+1]))\n        fi\n\
    \    done\n    echo ${arr[@]}", "    local -a arr\n    arr[0]=1\n    arr[1]=3\n\
    \    arr[2]=2\n    for ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n\
    \            arr[$i]=$((i/2))\n        else\n            arr[$i]=$((arr[$((i-1))]+arr[$((i-2))]+arr[$((i+1))]))\n\
    \        fi\n    done\n    echo ${arr[@]}", "    local n=$1\n    local seq=()\n\
    \    local i=0\n    local tri_n=0\n    while [ $i -le $n ]; do\n        if [ $i\
    \ -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq 1 ]; then\n      \
    \      tri_n=3\n        elif [ $i -eq 2 ]; then\n            tri_n=2\n       \
    \ else\n            if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i\
    \ / 2))\n            else\n                tri_n=$((seq[i - 1] + seq[i - 2] +\
    \ seq[i - 3]))\n            fi\n        fi\n        seq[$i]=$tri_n\n        i=$((i\
    \ + 1))\n    done\n    echo ${seq[@]}", "    if [[ $1 -eq 1 ]]; then\n       \
    \ echo \"3\"\n    elif [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    elif [[ $1\
    \ -eq 3 ]]; then\n        echo \"2\"\n    else\n        if [[ $1 -eq 4 ]]; then\n\
    \            echo \"8\"\n        else\n            echo \"$(tri $(( $1 - 1 ))\
    \ ) + $(tri $(( $1 - 2 )) ) + $(tri $(( $1 - 3 )) )\" | bc\n        fi\n    fi",
  "    local n=$1\n    local tri_seq=()\n    local i=0\n    local tri_n=0\n    local\
    \ tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n    while [ $i -le $n ];\
    \ do\n        if [ $i -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq\
    \ 1 ]; then\n            tri_n=3\n        elif [ $i -eq 2 ]; then\n          \
    \  tri_n=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n        \
    \        tri_n=$((i / 2))\n            else\n                tri_n=$((tri_n_1\
    \ + tri_n_2 + tri_n_3))\n            fi\n        fi\n        tri_seq+=($tri_n)\n\
    \        tri_n_3=$tri_n_2\n        tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n\
    \        i=$((i + 1))\n    done\n    echo ${tri_seq[@]}", "  local n=$1\n  local\
    \ result=()\n  local i=0\n  while [ $i -le $n ]; do\n    if [ $i -eq 0 ]; then\n\
    \      result[$i]=1\n    elif [ $i -eq 1 ]; then\n      result[$i]=3\n    elif\
    \ [ $i -eq 2 ]; then\n      result[$i]=2\n    else\n      if [ $((i % 2)) -eq\
    \ 0 ]; then\n        result[$i]=$((i / 2))\n      else\n        result[$i]=$((result[$((i\
    \ - 1))] + result[$((i - 2))] + result[$((i + 1))]))\n      fi\n    fi\n    i=$((i\
    \ + 1))\n  done\n  echo ${result[@]}", "    if [ $1 -eq 1 ]; then\n        echo\
    \ '[\"3\"]'\n    elif [ $1 -eq 2 ]; then\n        echo '[\"1\", \"3\", \"2\"]'\n\
    \    else\n        echo '[\"1\", \"3\", \"2\"'\n        for ((i = 3; i <= $1;\
    \ i++)); do\n            if [ $((i % 2)) -eq 0 ]; then\n                echo ',\"\
    '$((i / 2))'\"'\n            else\n                echo ',\"'$((1 + $(tri $((i\
    \ - 1)) | tail -n 1 | sed 's/[^0-9]//g') + $(tri $((i - 2)) | tail -n 1 | sed\
    \ 's/[^0-9]//g') + $(tri $((i + 1)) | tail -n 1 | sed 's/[^0-9]//g')))'\"'\n \
    \           fi\n        done\n        echo ']'\n    fi", "    if [ $1 -eq 1 ];\
    \ then\n        echo \"3\"\n    elif [ $(( $1 % 2 )) -eq 0 ]; then\n        echo\
    \ $(( 1 + $1 / 2 ))\n    else\n        echo $(( $(tri $(( $1 - 1 ))) + $(tri $((\
    \ $1 - 2 ))) + $(tri $(( $1 + 1 ))) ))\n    fi", "    local n=$1\n    local i=0\n\
    \    local result=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            result[$i]=1\n        elif [ $i -eq 1 ]; then\n            result[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            result[$i]=2\n        else\n   \
    \         if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n\
    \            else\n                result[$i]=$((result[$((i - 1))] + result[$((i\
    \ - 2))] + result[$((i + 1))]))\n            fi\n        fi\n        i=$((i +\
    \ 1))\n    done\n    echo \"${result[@]}\"", "    local n=$1\n    local tri_list=()\n\
    \    local tri_list_str=\"\"\n    local i=0\n    local tri_n=0\n    local tri_n_1=0\n\
    \    local tri_n_2=0\n    local tri_n_3=0\n    local tri_n_4=0\n    local tri_n_5=0\n\
    \    local tri_n_6=0\n    local tri_n_7=0\n    local tri_n_8=0\n    local tri_n_9=0\n\
    \    local tri_n_10=0\n    local tri_n_11=0\n    local tri_n_12=0\n    local tri_n_13=0\n\
    \    local tri_n_14=0\n    local tri_n_15=0\n    local tri_n_16=0\n    local tri_n_17=0\n\
    \    local tri_n_18=0\n    local tri_n_19=0\n    local tri_n_20=0\n    local tri_n_21=0\n\
    \    local tri_n_22=0\n    local tri_n_23=0\n    local tri_n_24=0\n    local tri_n_25=0\n\
    \    local tri_n_26=0\n    local tri_n_27=0\n    local tri_n_28=0\n    local tri_n_29=0\n\
    \    local tri_n_30=0\n    local tri_n_31=0\n    local tri_n_32=0\n    local tri_n_33=0\n\
    \    local tri_n_34=0\n    local tri_n_35=0\n    local tri_n_36=0\n    local tri_n_37=0\n\
    \    local tri_n_38=0\n    local tri_n_39=0\n    local tri_n_40=0\n    local tri_n_41=0\n\
    \    local tri_n_42=0\n    local tri_n_43=0\n    local tri_n_44=0\n    local tri_n_45=0\n\
    \    local tri_n_46=0\n    local tri_n_47=0\n    local tri_", "  local n=$1\n\
    \  local i=1\n  local tri_list=()\n  while [ $i -le $n ]; do\n    if [ $i -eq\
    \ 1 ]; then\n      tri_list+=(3)\n    elif [ $((i % 2)) -eq 0 ]; then\n      tri_list+=($((i\
    \ / 2 + 1)))\n    else\n      tri_list+=($((tri_list[i - 2] + tri_list[i - 3]\
    \ + tri_list[i - 1])))\n    fi\n    i=$((i + 1))\n  done\n  echo ${tri_list[@]}",
  "    local n=$1\n    local i=1\n    local result=()\n    while [ $i -le $n ]; do\n\
    \        if [ $((i % 2)) -eq 0 ]; then\n            result+=($((1 + i / 2)))\n\
    \        else\n            result+=($((result[i - 1] + result[i - 2] + result[i\
    \ - 3])))\n        fi\n        ((i++))\n    done\n    echo \"${result[@]}\"",
  "    local n=$1\n    local tri_seq=()\n    local i=0\n    local tri_n=0\n    local\
    \ tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n    while [ $i -le $n ];\
    \ do\n        if [ $i -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq\
    \ 1 ]; then\n            tri_n=3\n        elif [ $i -eq 2 ]; then\n          \
    \  tri_n=2\n        else\n            tri_n=$(($tri_n_1 + $tri_n_2 + $tri_n_3))\n\
    \        fi\n        tri_seq+=($tri_n)\n        tri_n_3=$tri_n_2\n        tri_n_2=$tri_n_1\n\
    \        tri_n_1=$tri_n\n        i=$(($i + 1))\n    done\n    echo \"${tri_seq[@]}\"",
  "    local n=$1\n    local result=()\n    local i=0\n    local tri_1=3\n    local\
    \ tri_2=2\n    local tri_3=1\n    local tri_n=0\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq\
    \ 1 ]; then\n            result[$i]=$tri_1\n        elif [ $i -eq 2 ]; then\n\
    \            result[$i]=$tri_2\n        elif [ $i -eq 3 ]; then\n            result[$i]=$tri_3\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i\
    \ / 2))\n            else\n                tri_n=$((tri_1 + tri_2 + tri_3))\n\
    \            fi\n            result[$i]=$tri_n\n            tri_1=$tri_2\n   \
    \         tri_2=$tri_3\n            tri_3=$tri_n\n        fi\n        i=$((i +\
    \ 1))\n    done\n    echo ${result[@]}", "    local n=$1\n    local arr=()\n \
    \   for ((i=1; i<=n; i++)); do\n        if ((i == 1)); then\n            arr+=(\"\
    3\")\n        elif ((i % 2 == 0)); then\n            arr+=(\"$((i / 2))\")\n \
    \       else\n            arr+=(\"$((arr[i-2] + arr[i-1] + arr[i+1]))\")\n   \
    \     fi\n    done\n    echo \"${arr[@]}\"", "    local n=$1\n    local i=0\n\
    \    local result=\"\"\n    local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n\
    \    local tri_n_3=0\n    local tri_n_4=0\n    local tri_n_5=0\n    local tri_n_6=0\n\
    \    local tri_n_7=0\n    local tri_n_8=0\n    local tri_n_9=0\n    local tri_n_10=0\n\
    \    local tri_n_11=0\n    local tri_n_12=0\n    local tri_n_13=0\n    local tri_n_14=0\n\
    \    local tri_n_15=0\n    local tri_n_16=0\n    local tri_n_17=0\n    local tri_n_18=0\n\
    \    local tri_n_19=0\n    local tri_n_20=0\n    local tri_n_21=0\n    local tri_n_22=0\n\
    \    local tri_n_23=0\n    local tri_n_24=0\n    local tri_n_25=0\n    local tri_n_26=0\n\
    \    local tri_n_27=0\n    local tri_n_28=0\n    local tri_n_29=0\n    local tri_n_30=0\n\
    \    local tri_n_31=0\n    local tri_n_32=0\n    local tri_n_33=0\n    local tri_n_34=0\n\
    \    local tri_n_35=0\n    local tri_n_36=0\n    local tri_n_37=0\n    local tri_n_38=0\n\
    \    local tri_n_39=0\n    local tri_n_40=0\n    local tri_n_41=0\n    local tri_n_42=0\n\
    \    local tri_n_43=0\n    local tri_n_44=0\n    local tri_n_45=0\n    local tri_n_46=0\n\
    \    local tri_n_47=0\n    local tri_n_48=0\n    local tri_n_", "    local n=$1\n\
    \    local result=()\n    local tri_1=3\n    local tri_2=1\n    local tri_3=2\n\
    \    local tri_n=0\n    if [[ $n -eq 0 ]]; then\n        result+=(\"$tri_1\")\n\
    \    elif [[ $n -eq 1 ]]; then\n        result+=(\"$tri_1\")\n        result+=(\"\
    $tri_2\")\n    elif [[ $n -eq 2 ]]; then\n        result+=(\"$tri_1\")\n     \
    \   result+=(\"$tri_2\")\n        result+=(\"$tri_3\")\n    else\n        result+=(\"\
    $tri_1\")\n        result+=(\"$tri_2\")\n        result+=(\"$tri_3\")\n      \
    \  for ((i=3; i<=n; i++)); do\n            if [[ $((i % 2)) -eq 0 ]]; then\n \
    \               tri_n=$((1 + i / 2))\n            else\n                tri_n=$((tri_1\
    \ + tri_2 + tri_3))\n            fi\n            result+=(\"$tri_n\")\n      \
    \      tri_1=$tri_2\n            tri_2=$tri_3\n            tri_3=$tri_n\n    \
    \    done\n    fi\n    echo \"${result[@]}\"", "    local n=$1\n    local result=()\n\
    \    local i=0\n    local a=1\n    local b=3\n    local c=2\n    local d=0\n \
    \   while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result+=($a)\n\
    \        elif [ $i -eq 1 ]; then\n            result+=($b)\n        elif [ $i\
    \ -eq 2 ]; then\n            result+=($c)\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                d=$((i / 2))\n            else\n      \
    \          d=$((a + b + c))\n                a=$b\n                b=$c\n    \
    \            c=$d\n            fi\n            result+=($d)\n        fi\n    \
    \    i=$((i + 1))\n    done\n    echo \"${result[@]}\"", "    local -i n=$1\n\
    \    local -a tri=(1 3 2)\n    for (( i = 3; i <= n; i++ )); do\n        if ((\
    \ i % 2 == 0 )); then\n            tri[i]=$(( i / 2 + 1 ))\n        else\n   \
    \         tri[i]=$(( tri[i - 1] + tri[i - 2] + tri[i + 1] ))\n        fi\n   \
    \ done\n    echo \"${tri[@]}\"", "    local n=$1\n    local i=1\n    local a=1\n\
    \    local b=3\n    local c=2\n    local d=8\n    local result=()\n    while [\
    \ $i -le $n ]; do\n        if [ $i -eq 1 ]; then\n            result+=($a)\n \
    \       elif [ $i -eq 2 ]; then\n            result+=($b)\n        elif [ $i -eq\
    \ 3 ]; then\n            result+=($c)\n        else\n            result+=($d)\n\
    \            a=$b\n            b=$c\n            c=$d\n            d=$((a + b\
    \ + c))\n        fi\n        i=$((i + 1))\n    done\n    echo \"${result[@]}\"",
  "    local -a tri\n    tri[0]=1\n    tri[1]=3\n    tri[2]=2\n    for ((i=3; i<=$1;\
    \ i++)); do\n        if ((i%2==0)); then\n            tri[$i]=$((1 + i / 2))\n\
    \        else\n            tri[$i]=$((tri[$((i-1))] + tri[$((i-2))] + tri[$((i+1))]))\n\
    \        fi\n    done\n    echo \"${tri[@]}\"", "  local n=$1\n  local i=0\n \
    \ local tri_list=()\n  while [ $i -le $n ]; do\n    if [ $i -eq 0 ]; then\n  \
    \    tri_list+=(1)\n    elif [ $i -eq 1 ]; then\n      tri_list+=(3)\n    elif\
    \ [ $i -eq 2 ]; then\n      tri_list+=(2)\n    else\n      if [ $((i % 2)) -eq\
    \ 0 ]; then\n        tri_list+=($((i / 2 + 1)))\n      else\n        tri_list+=($((tri_list[$((i\
    \ - 1))] + tri_list[$((i - 2))] + tri_list[$((i + 1))])))\n      fi\n    fi\n\
    \    i=$((i + 1))\n  done\n  echo \"${tri_list[@]}\"", "    local n=$1\n    local\
    \ i=0\n    local a=1\n    local b=3\n    local c=2\n    local d=0\n    local res=()\n\
    \    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n        \
    \    res+=($((a + i / 2)))\n        else\n            res+=($((a + b + c)))\n\
    \            d=$c\n            c=$b\n            b=$a\n            a=$d\n    \
    \    fi\n        i=$((i + 1))\n    done\n    echo \"${res[@]}\"", "    local n=$1\n\
    \    local i=1\n    local a=1\n    local b=3\n    local c=2\n    local d\n   \
    \ while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n           \
    \ d=$((i / 2))\n        else\n            d=$((a + b + c))\n            a=$b\n\
    \            b=$c\n            c=$d\n        fi\n        echo $d\n        i=$((i\
    \ + 1))\n    done", "    local n=$1\n    local i=0\n    local result=()\n    while\
    \ [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result[$i]=1\n\
    \        elif [ $i -eq 1 ]; then\n            result[$i]=3\n        elif [ $i\
    \ -eq 2 ]; then\n            result[$i]=2\n        else\n            if [ $((i\
    \ % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n            else\n\
    \                result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i\
    \ + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${result[@]}", "    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n\
    \    for ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n            arr[$i]=$((i/2))\n\
    \        else\n            arr[$i]=$((arr[$((i-1))]+arr[$((i-2))]+arr[$((i+1))]))\n\
    \        fi\n    done\n    echo ${arr[@]}", "    local n=$1\n    local tri_list=()\n\
    \    local tri_list_str=\"\"\n    local i=0\n    local tri_n=0\n    local tri_n_1=0\n\
    \    local tri_n_2=0\n    local tri_n_3=0\n    local tri_n_4=0\n    local tri_n_5=0\n\
    \    local tri_n_6=0\n    local tri_n_7=0\n    local tri_n_8=0\n    local tri_n_9=0\n\
    \    local tri_n_10=0\n    local tri_n_11=0\n    local tri_n_12=0\n    local tri_n_13=0\n\
    \    local tri_n_14=0\n    local tri_n_15=0\n    local tri_n_16=0\n    local tri_n_17=0\n\
    \    local tri_n_18=0\n    local tri_n_19=0\n    local tri_n_20=0\n    local tri_n_21=0\n\
    \    local tri_n_22=0\n    local tri_n_23=0\n    local tri_n_24=0\n    local tri_n_25=0\n\
    \    local tri_n_26=0\n    local tri_n_27=0\n    local tri_n_28=0\n    local tri_n_29=0\n\
    \    local tri_n_30=0\n    local tri_n_31=0\n    local tri_n_32=0\n    local tri_n_33=0\n\
    \    local tri_n_34=0\n    local tri_n_35=0\n    local tri_n_36=0\n    local tri_n_37=0\n\
    \    local tri_n_38=0\n    local tri_n_39=0\n    local tri_n_40=0\n    local tri_n_41=0\n\
    \    local tri_n_42=0\n    local tri_n_43=0\n    local tri_n_44=0\n    local tri_n_45=0\n\
    \    local tri_n_46=0\n    local tri_n_47=0\n    local tri_", "    local n=$1\n\
    \    local i=0\n    local a=1\n    local b=3\n    local c=2\n    local d=0\n \
    \   local result=\"\"\n    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq\
    \ 0 ]; then\n            d=$((i / 2))\n        else\n            d=$((a + b +\
    \ c))\n            a=$b\n            b=$c\n            c=$d\n        fi\n    \
    \    result=\"$result \\\"$d\\\"\"\n        i=$((i + 1))\n    done\n    echo \"\
    [$result]\"", "    local n=$1\n    local result=()\n    local i=0\n    while [\
    \ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n            result[$i]=1\n \
    \       elif [ $i -eq 1 ]; then\n            result[$i]=3\n        elif [ $i -eq\
    \ 2 ]; then\n            result[$i]=2\n        else\n            if [ $((i % 2))\
    \ -eq 0 ]; then\n                result[$i]=$((i / 2))\n            else\n   \
    \             result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i\
    \ + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ ${result[@]}", "  if [[ $1 -eq 1 ]]; then\n    echo '\"3\"'\n  elif [[ $1 -eq\
    \ 2 ]]; then\n    echo '\"1\" \"3\" \"2\"'\n  else\n    echo '\"1\" \"3\" \"2\"\
    '\n    for ((i = 3; i <= $1; i++)); do\n      if [[ $((i % 2)) -eq 0 ]]; then\n\
    \        echo $((1 + i / 2))\n      else\n        echo $((1 + i / 2))\n      fi\n\
    \    done\n  fi", "    local n=$1\n    local result=()\n    local i=0\n    local\
    \ tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n   \
    \ local tri_n_4=0\n    local tri_n_5=0\n    local tri_n_6=0\n    local tri_n_7=0\n\
    \    local tri_n_8=0\n    local tri_n_9=0\n    local tri_n_10=0\n    local tri_n_11=0\n\
    \    local tri_n_12=0\n    local tri_n_13=0\n    local tri_n_14=0\n    local tri_n_15=0\n\
    \    local tri_n_16=0\n    local tri_n_17=0\n    local tri_n_18=0\n    local tri_n_19=0\n\
    \    local tri_n_20=0\n    local tri_n_21=0\n    local tri_n_22=0\n    local tri_n_23=0\n\
    \    local tri_n_24=0\n    local tri_n_25=0\n    local tri_n_26=0\n    local tri_n_27=0\n\
    \    local tri_n_28=0\n    local tri_n_29=0\n    local tri_n_30=0\n    local tri_n_31=0\n\
    \    local tri_n_32=0\n    local tri_n_33=0\n    local tri_n_34=0\n    local tri_n_35=0\n\
    \    local tri_n_36=0\n    local tri_n_37=0\n    local tri_n_38=0\n    local tri_n_39=0\n\
    \    local tri_n_40=0\n    local tri_n_41=0\n    local tri_n_42=0\n    local tri_n_43=0\n\
    \    local tri_n_44=0\n    local tri_n_45=0\n    local tri_n_46=0\n    local tri_n_47=0\n\
    \    local tri_n_48=0\n    local tri_n", "    if [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \        if [[ $1 -eq 0 ]]; then\n            echo '[\"0\"]'\n        else\n \
    \           echo '[\"1\", \"3\", \"2\"'\n            if [[ $1 -gt 2 ]]; then\n\
    \                for ((i = 3; i <= $1; i++)); do\n                    if [[ $((i\
    \ % 2)) -eq 0 ]]; then\n                        echo ',\"'$((i / 2))'\"'\n   \
    \                 else\n                        echo ',\"'$((1 + $(tri \"$((i\
    \ - 1))\" | tr -d '\\n' | sed 's/\\[\"1\", \"3\", \"2\"//g' | sed 's/\"\\]//g'\
    \ | sed 's/\", \"/+/g') + $(tri \"$((i - 2))\" | tr -d '\\n' | sed 's/\\[\"1\"\
    , \"3\", \"2\"//g' | sed 's/\"\\]//g' | sed 's/\", \"/+/g') + $(tri \"$((i + 1))\"\
    \ | tr -d '\\n' | sed 's/\\[\"1\", \"3\", \"2\"//g' | sed 's/\"\\]//g' | sed 's/\"\
    , \"/+/g')))'\"'\n                    fi\n                done\n            fi\n\
    \            echo ']'\n        fi\n    else\n        echo '[\"0\"]'\n    fi",
  "    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n    for ((i=3; i<=$1;\
    \ i++)); do\n        if ((i%2==0)); then\n            arr[$i]=$((i/2))\n     \
    \   else\n            arr[$i]=$((arr[$i-1]+arr[$i-2]+arr[$i+1]))\n        fi\n\
    \    done\n    echo ${arr[@]}", "    if [[ $1 -eq 1 ]]; then\n        echo '\"\
    3\"'\n    elif [[ $1 -eq 2 ]]; then\n        echo '\"1\"'\n        echo '\"3\"\
    '\n        echo '\"2\"'\n    else\n        echo '\"1\"'\n        echo '\"3\"'\n\
    \        echo '\"2\"'\n        local n=3\n        local a=1\n        local b=3\n\
    \        local c=2\n        local d=0\n        while [[ $n -le $1 ]]; do\n   \
    \         if [[ $((n % 2)) -eq 0 ]]; then\n                d=$((n / 2))\n    \
    \        else\n                d=$((a + b + c))\n                a=$b\n      \
    \          b=$c\n                c=$d\n            fi\n            echo '\"'$d'\"\
    '\n            n=$((n + 1))\n        done\n    fi", "    local n=$1\n    local\
    \ result=\"\"\n    local i=1\n    while [ $i -le $n ]; do\n        if [ $i -eq\
    \ 1 ]; then\n            result=\"$result 3\"\n        elif [ $((i % 2)) -eq 0\
    \ ]; then\n            result=\"$result $((i / 2 + 1))\"\n        else\n     \
    \       result=\"$result $((result[i - 1] + result[i - 2] + result[i + 1]))\"\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo $result", "    local n=$1\n\
    \    local i=1\n    local result=()\n    while [ $i -le $n ]; do\n        if [\
    \ $((i % 2)) -eq 0 ]; then\n            result+=($((1 + i / 2)))\n        else\n\
    \            result+=($((result[i - 1] + result[i - 2] + result[i + 1])))\n  \
    \      fi\n        i=$((i + 1))\n    done\n    echo ${result[@]}", "    if [[\
    \ $1 =~ ^[0-9]+$ ]]; then\n        if [ $1 -eq 0 ]; then\n            echo '[\"\
    1\"]'\n        elif [ $1 -eq 1 ]; then\n            echo '[\"1\", \"3\"]'\n  \
    \      elif [ $1 -eq 2 ]; then\n            echo '[\"1\", \"3\", \"2\"]'\n   \
    \     else\n            echo '[\"1\", \"3\", \"2\"'\n            for (( i = 3;\
    \ i <= $1; i++ )); do\n                if [ $(( i % 2 )) -eq 0 ]; then\n     \
    \               echo -n ',\"'$(( i / 2 ))'\"'\n                else\n        \
    \            echo -n ',\"'$(( $(tri $(( i - 1 ))) + $(tri $(( i - 2 ))) + $(tri\
    \ $(( i + 1 ))) ))'\"'\n                fi\n            done\n            echo\
    \ ']'\n        fi\n    else\n        echo '[\"1\"]'\n    fi", "    local -i n=$1\n\
    \    local -a result\n    result[0]=1\n    result[1]=3\n    result[2]=2\n    for\
    \ ((i=3; i<=n; i++)); do\n        if ((i % 2 == 0)); then\n            result[i]=$((i\
    \ / 2))\n        else\n            result[i]=$((result[i-1] + result[i-2] + result[i+1]))\n\
    \        fi\n    done\n    echo \"${result[@]}\"", "    local n=$1\n    local\
    \ result=()\n    local i=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0\
    \ ]; then\n            result[$i]=1\n        elif [ $i -eq 1 ]; then\n       \
    \     result[$i]=3\n        elif [ $i -eq 2 ]; then\n            result[$i]=2\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i\
    \ / 2))\n            else\n                result[$i]=$((result[$((i - 1))] +\
    \ result[$((i - 2))] + result[$((i + 1))]))\n            fi\n        fi\n    \
    \    i=$((i + 1))\n    done\n    echo \"${result[@]}\"", "    local n=$1\n   \
    \ local result=()\n    local i=0\n    while [ $i -le $n ]; do\n        if [ $i\
    \ -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq 1 ]; then\n \
    \           result[$i]=3\n        elif [ $i -eq 2 ]; then\n            result[$i]=2\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i\
    \ / 2))\n            else\n                result[$i]=$((result[$((i - 1))] +\
    \ result[$((i - 2))] + result[$((i + 1))]))\n            fi\n        fi\n    \
    \    i=$((i + 1))\n    done\n    echo ${result[@]}", "    local n=$1\n    local\
    \ i=0\n    local result=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0\
    \ ]; then\n            result[$i]=1\n        elif [ $i -eq 1 ]; then\n       \
    \     result[$i]=3\n        elif [ $i -eq 2 ]; then\n            result[$i]=2\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i\
    \ / 2))\n            else\n                result[$i]=$((result[$((i - 1))] +\
    \ result[$((i - 2))] + result[$((i + 1))]))\n            fi\n        fi\n    \
    \    i=$((i + 1))\n    done\n    echo ${result[@]}", "    if [ $1 -eq 1 ]; then\n\
    \        echo '\"3\"'\n    elif [ $(( $1 % 2 )) -eq 0 ]; then\n        echo '\"\
    1\"'\n    else\n        echo '\"$(tri $(($1 - 1))) + $(tri $(($1 - 2))) + $(tri\
    \ $(($1 + 1)))\"'\n    fi", "  local n=$1\n  local i=0\n  local tri=()\n  while\
    \ [ $i -le $n ]; do\n    if [ $i -eq 0 ]; then\n      tri[$i]=1\n    elif [ $i\
    \ -eq 1 ]; then\n      tri[$i]=3\n    elif [ $i -eq 2 ]; then\n      tri[$i]=2\n\
    \    else\n      if [ $((i % 2)) -eq 0 ]; then\n        tri[$i]=$((i / 2))\n \
    \     else\n        tri[$i]=$((tri[$((i - 1))] + tri[$((i - 2))] + tri[$((i +\
    \ 1))]))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo ${tri[@]}", "   \
    \ local n=$1\n    local i=1\n    local a=1\n    local b=3\n    local c=2\n   \
    \ local d=0\n    local result=\"\"\n    while [ $i -le $n ]; do\n        if [\
    \ $((i % 2)) -eq 0 ]; then\n            d=$((i / 2))\n        else\n         \
    \   d=$((a + b + c))\n            a=$b\n            b=$c\n            c=$d\n \
    \       fi\n        result=\"$result $d\"\n        i=$((i + 1))\n    done\n  \
    \  echo $result", "  local n=$1\n  local i=0\n  local tri_list=()\n  while [ $i\
    \ -le $n ]; do\n    if [ $i -eq 0 ]; then\n      tri_list[$i]=1\n    elif [ $i\
    \ -eq 1 ]; then\n      tri_list[$i]=3\n    elif [ $i -eq 2 ]; then\n      tri_list[$i]=2\n\
    \    else\n      if [ $((i % 2)) -eq 0 ]; then\n        tri_list[$i]=$((i / 2))\n\
    \      else\n        tri_list[$i]=$((tri_list[$((i - 1))] + tri_list[$((i - 2))]\
    \ + tri_list[$((i + 1))]))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ ${tri_list[@]}", "    if [[ $1 -eq 0 ]]; then\n        echo '[\"0\"]'\n    else\n\
    \        echo '[\"1\", \"3\", \"2\"]'\n        for ((i = 3; i < $1; i++)); do\n\
    \            if [[ $((i % 2)) -eq 0 ]]; then\n                echo '\"'\"$((i\
    \ / 2 + 1))\"'\"'\n            else\n                echo '\"'\"$((i + 1))\"'\"\
    '\n            fi\n        done\n    fi", "    local n=$1\n    local i=0\n   \
    \ local tri=()\n    while [[ $i -le $n ]]; do\n        if [[ $i -eq 0 ]]; then\n\
    \            tri[$i]=1\n        elif [[ $i -eq 1 ]]; then\n            tri[$i]=3\n\
    \        elif [[ $i -eq 2 ]]; then\n            tri[$i]=2\n        else\n    \
    \        if [[ $((i % 2)) -eq 0 ]]; then\n                tri[$i]=$((i / 2))\n\
    \            else\n                tri[$i]=$((tri[$((i - 1))] + tri[$((i - 2))]\
    \ + tri[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo ${tri[@]}", "    local n=$1\n    local result=()\n    local i=0\n  \
    \  local tri_n=1\n    local tri_n_1=3\n    local tri_n_2=2\n    local tri_n_3=1\n\
    \    while [ $i -le $n ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n        \
    \    tri_n=$((i / 2 + 1))\n        else\n            tri_n=$((tri_n_1 + tri_n_2\
    \ + tri_n_3))\n            tri_n_3=$tri_n_2\n            tri_n_2=$tri_n_1\n  \
    \          tri_n_1=$tri_n\n        fi\n        result+=($tri_n)\n        i=$((i\
    \ + 1))\n    done\n    echo \"${result[@]}\"", "    local n=$1\n    local i=0\n\
    \    local result=()\n    while [[ $i -le $n ]]; do\n        if [[ $i -eq 0 ]];\
    \ then\n            result+=(1)\n        elif [[ $i -eq 1 ]]; then\n         \
    \   result+=(3)\n        elif [[ $i -eq 2 ]]; then\n            result+=(2)\n\
    \        else\n            if [[ $((i % 2)) -eq 0 ]]; then\n                result+=($((i\
    \ / 2)))\n            else\n                result+=($((result[i - 1] + result[i\
    \ - 2] + result[i - 3])))\n            fi\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo ${result[@]}", "    local n=$1\n    local i=1\n    local j=3\n\
    \    local k=2\n    local l=8\n    local result=\"[\\\"1\\\", \\\"3\\\", \\\"\
    2\\\", \\\"8\\\"\"\n    while [ $i -lt $n ]; do\n        if [ $((i % 2)) -eq 0\
    \ ]; then\n            result=\"$result, \\\"$j\\\"\"\n            j=$((j + 1))\n\
    \        else\n            result=\"$result, \\\"$l\\\"\"\n            l=$((k\
    \ + j + l))\n            k=$j\n            j=$l\n        fi\n        i=$((i +\
    \ 1))\n    done\n    echo \"$result]\"", "    if [[ $1 -eq 1 ]]; then\n      \
    \  echo \"3\"\n    elif [[ $1 -eq 2 ]]; then\n        echo \"3\"\n        echo\
    \ \"2\"\n    elif [[ $1 -eq 3 ]]; then\n        echo \"3\"\n        echo \"2\"\
    \n        echo \"8\"\n    else\n        echo \"3\"\n        echo \"2\"\n     \
    \   echo \"8\"\n        a=3\n        b=2\n        c=8\n        for ((i=4; i<=$1;\
    \ i++)); do\n            if [[ $((i % 2)) -eq 0 ]]; then\n                d=$((i\
    \ / 2))\n            else\n                d=$((a + b + c))\n            fi\n\
    \            echo $d\n            a=$b\n            b=$c\n            c=$d\n \
    \       done\n    fi", "    if [[ $1 -eq 1 ]]; then\n        echo \"3\"\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo \"1 3 2\"\n    else\n        echo \"1 3 2\"\
    \n        for ((i = 3; i <= $1; i++)); do\n            if [[ $((i % 2)) -eq 0\
    \ ]]; then\n                echo $((1 + i / 2))\n            else\n          \
    \      echo $((1 + $(tri $((i - 1))) + $(tri $((i - 2))) + $(tri $((i + 1)))))\n\
    \            fi\n        done\n    fi", "    local n=$1\n    local res=\"1\"\n\
    \    if [[ $n -eq 0 ]]; then\n        echo \"[\\\"1\\\"]\"\n        return\n \
    \   fi\n    for (( i = 1; i <= n; i++ )); do\n        if [[ $((i % 2)) -eq 0 ]];\
    \ then\n            res=\"$res,$((1 + i / 2))\"\n        else\n            res=\"\
    $res,$((1 + i / 2))\"\n        fi\n    done\n    echo \"[$res]\"", "    if [[\
    \ $1 -eq 1 ]]; then\n        echo \"3\"\n    elif [[ $1 -eq 2 ]]; then\n     \
    \   echo \"3 2\"\n    elif [[ $1 -eq 3 ]]; then\n        echo \"3 2 8\"\n    else\n\
    \        echo \"3 2 8\"\n        for ((i = 4; i <= $1; i++)); do\n           \
    \ if [[ $((i % 2)) -eq 0 ]]; then\n                echo $((1 + i / 2))\n     \
    \       else\n                echo $((3 + $(tri $((i - 1))) + $(tri $((i - 2)))))\n\
    \            fi\n        done\n    fi", "  local n=$1\n  local i=1\n  local result=()\n\
    \  while [ $i -le $n ]; do\n    if [ $i -eq 1 ]; then\n      result[$i]=3\n  \
    \  elif [ $((i % 2)) -eq 0 ]; then\n      result[$i]=$((i / 2))\n    else\n  \
    \    result[$i]=$((result[$((i - 1))] + result[$((i - 2))] + result[$((i + 1))]))\n\
    \    fi\n    i=$((i + 1))\n  done\n  echo \"${result[@]}\"", "    local n=$1\n\
    \    local result=()\n    local i=0\n    local tri_n=0\n    local tri_n_1=0\n\
    \    local tri_n_2=0\n    local tri_n_3=0\n    while [ $i -le $n ]; do\n     \
    \   if [ $i -eq 0 ]; then\n            tri_n=1\n        elif [ $i -eq 1 ]; then\n\
    \            tri_n=3\n        elif [ $i -eq 2 ]; then\n            tri_n=2\n \
    \       else\n            if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i\
    \ / 2))\n            else\n                tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n\
    \            fi\n        fi\n        result+=($tri_n)\n        tri_n_3=$tri_n_2\n\
    \        tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n\
    \    echo ${result[@]}", "    local -a arr\n    arr[0]=1\n    arr[1]=3\n    arr[2]=2\n\
    \    for ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n            arr[$i]=$((i/2))\n\
    \        else\n            arr[$i]=$((arr[$i-1]+arr[$i-2]+arr[$i+1]))\n      \
    \  fi\n    done\n    echo ${arr[@]}", "    local n=$1\n    local i=1\n    local\
    \ tri=3\n    local result=\"[\\\"1\\\", \\\"3\\\"\"\n    while [ $i -lt $n ];\
    \ do\n        if [ $((i % 2)) -eq 0 ]; then\n            tri=$(((i + 2) / 2))\n\
    \        else\n            tri=$((tri + tri - tri + tri + 1))\n        fi\n  \
    \      result=\"$result, \\\"$tri\\\"\"\n        i=$((i + 1))\n    done\n    echo\
    \ \"$result]\"", "    if [ $1 -eq 1 ]; then\n        echo \"3\"\n    elif [ $((\
    \ $1 % 2 )) -eq 0 ]; then\n        echo $(( 1 + $1 / 2 ))\n    else\n        echo\
    \ $(( $(tri $(( $1 - 1 ))) + $(tri $(( $1 - 2 ))) + $(tri $(( $1 + 1 ))) ))\n\
    \    fi", "    local n=$1\n    local result=\"\"\n    local i=1\n    while [ $i\
    \ -le $n ]; do\n        if [ $i -eq 1 ]; then\n            result=\"$result 3\"\
    \n        elif [ $((i % 2)) -eq 0 ]; then\n            result=\"$result $((i /\
    \ 2 + 1))\"\n        else\n            result=\"$result $((result[$((i - 1))]\
    \ + result[$((i - 2))] + result[$((i + 1))]))\"\n        fi\n        i=$((i +\
    \ 1))\n    done\n    echo $result", "    local n=$1\n    local result=()\n   \
    \ local i=0\n    local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n   \
    \ local tri_n_3=0\n    local tri_n_4=0\n    local tri_n_5=0\n    local tri_n_6=0\n\
    \    local tri_n_7=0\n    local tri_n_8=0\n    local tri_n_9=0\n    local tri_n_10=0\n\
    \    local tri_n_11=0\n    local tri_n_12=0\n    local tri_n_13=0\n    local tri_n_14=0\n\
    \    local tri_n_15=0\n    local tri_n_16=0\n    local tri_n_17=0\n    local tri_n_18=0\n\
    \    local tri_n_19=0\n    local tri_n_20=0\n    local tri_n_21=0\n    local tri_n_22=0\n\
    \    local tri_n_23=0\n    local tri_n_24=0\n    local tri_n_25=0\n    local tri_n_26=0\n\
    \    local tri_n_27=0\n    local tri_n_28=0\n    local tri_n_29=0\n    local tri_n_30=0\n\
    \    local tri_n_31=0\n    local tri_n_32=0\n    local tri_n_33=0\n    local tri_n_34=0\n\
    \    local tri_n_35=0\n    local tri_n_36=0\n    local tri_n_37=0\n    local tri_n_38=0\n\
    \    local tri_n_39=0\n    local tri_n_40=0\n    local tri_n_41=0\n    local tri_n_42=0\n\
    \    local tri_n_43=0\n    local tri_n_44=0\n    local tri_n_45=0\n    local tri_n_46=0\n\
    \    local tri_n_47=0\n    local tri_n_48=0\n    local tri_n", "    local n=$1\n\
    \    local tri_list=()\n    local tri_list_str=\"\"\n    local i=0\n    local\
    \ tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n   \
    \ local tri_n_4=0\n    local tri_n_5=0\n    local tri_n_6=0\n    local tri_n_7=0\n\
    \    local tri_n_8=0\n    local tri_n_9=0\n    local tri_n_10=0\n    local tri_n_11=0\n\
    \    local tri_n_12=0\n    local tri_n_13=0\n    local tri_n_14=0\n    local tri_n_15=0\n\
    \    local tri_n_16=0\n    local tri_n_17=0\n    local tri_n_18=0\n    local tri_n_19=0\n\
    \    local tri_n_20=0\n    local tri_n_21=0\n    local tri_n_22=0\n    local tri_n_23=0\n\
    \    local tri_n_24=0\n    local tri_n_25=0\n    local tri_n_26=0\n    local tri_n_27=0\n\
    \    local tri_n_28=0\n    local tri_n_29=0\n    local tri_n_30=0\n    local tri_n_31=0\n\
    \    local tri_n_32=0\n    local tri_n_33=0\n    local tri_n_34=0\n    local tri_n_35=0\n\
    \    local tri_n_36=0\n    local tri_n_37=0\n    local tri_n_38=0\n    local tri_n_39=0\n\
    \    local tri_n_40=0\n    local tri_n_41=0\n    local tri_n_42=0\n    local tri_n_43=0\n\
    \    local tri_n_44=0\n    local tri_n_45=0\n    local tri_n_46=0\n    local tri_n_47=0\n\
    \    local tri_", "    if [[ $1 -eq 1 ]]; then\n        echo \"3\"\n    elif [[\
    \ $1 -eq 2 ]]; then\n        echo \"1 3 2\"\n    else\n        echo \"1 3 2\"\n\
    \        for (( i = 3; i <= $1; i++ )); do\n            if [[ $((i % 2)) -eq 0\
    \ ]]; then\n                echo $((1 + i / 2))\n            else\n          \
    \      echo $((1 + i / 2 + 1))\n            fi\n        done\n    fi", "    if\
    \ [ $1 -eq 1 ]; then\n        echo 3\n    elif [ $(( $1 % 2 )) -eq 0 ]; then\n\
    \        echo $(( 1 + $1 / 2 ))\n    else\n        echo $(( $(tri $(( $1 - 1 )))\
    \ + $(tri $(( $1 - 2 ))) + $(tri $(( $1 + 1 ))) ))\n    fi", "    local n=\"$1\"\
    \n    local i=0\n    local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n\
    \    local tri_n_3=0\n    local result=\"\"\n    if [[ $n -eq 0 ]]; then\n   \
    \     echo \"[]\"\n        return\n    fi\n    if [[ $n -eq 1 ]]; then\n     \
    \   echo \"[\\\"1\\\"]\"\n        return\n    fi\n    if [[ $n -eq 2 ]]; then\n\
    \        echo \"[\\\"1\\\", \\\"3\\\"]\"\n        return\n    fi\n    if [[ $n\
    \ -eq 3 ]]; then\n        echo \"[\\\"1\\\", \\\"3\\\", \\\"2\\\"]\"\n       \
    \ return\n    fi\n    result=\"[\\\"1\\\", \\\"3\\\", \\\"2\\\"\"\n    for ((i=4;\
    \ i<=n; i++)); do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            tri_n=$((i\
    \ / 2))\n        else\n            tri_n_1=$(echo \"$result\" | jq \".[$((i -\
    \ 1))]\")\n            tri_n_2=$(echo \"$result\" | jq \".[$((i - 2))]\")\n  \
    \          tri_n_3=$(echo \"$result\" | jq \".[$((i + 1))]\")\n            tri_n=$((tri_n_1\
    \ + tri_n_2 + tri_n_3))\n        fi\n        result=\"$result, \\\"$tri_n\\\"\"\
    \n    done\n    result=\"$result]\"\n    echo \"$result\"", "    local -a arr\n\
    \    arr[0]=3\n    arr[1]=1\n    arr[2]=2\n    for ((i=3; i<=$1; i++)); do\n \
    \       if ((i%2==0)); then\n            arr[i]=1+i/2\n        else\n        \
    \    arr[i]=${arr[i-1]}+${arr[i-2]}+${arr[i+1]}\n        fi\n    done\n    echo\
    \ ${arr[@]}", "    local -a tri\n    tri[0]=1\n    tri[1]=3\n    tri[2]=2\n  \
    \  for ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n            tri[$i]=$((1+i/2))\n\
    \        else\n            tri[$i]=$((tri[$((i-1))]+tri[$((i-2))]+tri[$((i+1))]))\n\
    \        fi\n    done\n    echo ${tri[@]}", "    local n=$1\n    local tri_list=()\n\
    \    local tri_list_index=0\n    local tri_list_index_minus_1=0\n    local tri_list_index_minus_2=0\n\
    \    local tri_list_index_plus_1=0\n    local tri_list_index_plus_2=0\n    local\
    \ tri_list_index_plus_3=0\n    local tri_list_index_plus_4=0\n    local tri_list_index_plus_5=0\n\
    \    local tri_list_index_plus_6=0\n    local tri_list_index_plus_7=0\n    local\
    \ tri_list_index_plus_8=0\n    local tri_list_index_plus_9=0\n    local tri_list_index_plus_10=0\n\
    \    local tri_list_index_plus_11=0\n    local tri_list_index_plus_12=0\n    local\
    \ tri_list_index_plus_13=0\n    local tri_list_index_plus_14=0\n    local tri_list_index_plus_15=0\n\
    \    local tri_list_index_plus_16=0\n    local tri_list_index_plus_17=0\n    local\
    \ tri_list_index_plus_18=0\n    local tri_list_index_plus_19=0\n    local tri_list_index_plus_20=0\n\
    \    local tri_list_index_plus_21=0\n    local tri_list_index_plus_22=0\n    local\
    \ tri_list_index_plus_23=0\n    local tri_list_index_plus_24=0\n    local tri_list_index_plus_25=0\n\
    \    local tri_list_index_plus_26=0\n    local tri_list_index_plus_27=0\n    local\
    \ tri_list_index_plus_28=0\n    local tri_list_index_plus_29=0\n    local tri_list_index_plus_30=0\n\
    \    local tri_list_index_plus_31=0\n    local tri_list_index_plus_32=0\n    local\
    \ tri_list_index_plus_33", "  local n=\"$1\"\n  local a=1\n  local b=3\n  local\
    \ c=2\n  local d=0\n  local result=\"\"\n  if [ $n -eq 0 ]; then\n    echo \"\
    []\"\n    return\n  fi\n  result=\"[\\\"$a\\\"\"\n  if [ $n -eq 1 ]; then\n  \
    \  echo \"$result]\"\n    return\n  fi\n  result=\"$result, \\\"$b\\\"\"\n  if\
    \ [ $n -eq 2 ]; then\n    echo \"$result]\"\n    return\n  fi\n  result=\"$result,\
    \ \\\"$c\\\"\"\n  for ((i=3; i<=n; i++)); do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      d=$((i / 2))\n    else\n      d=$((a + b + c))\n    fi\n    result=\"$result,\
    \ \\\"$d\\\"\"\n    a=$b\n    b=$c\n    c=$d\n  done\n  echo \"$result]\"", " \
    \   local n=$1\n    local i=0\n    local result=()\n    while [ $i -le $n ]; do\n\
    \        if [ $i -eq 0 ]; then\n            result[$i]=1\n        elif [ $i -eq\
    \ 1 ]; then\n            result[$i]=3\n        elif [ $i -eq 2 ]; then\n     \
    \       result[$i]=2\n        else\n            if [ $((i % 2)) -eq 0 ]; then\n\
    \                result[$i]=$((i / 2))\n            else\n                result[$i]=$((result[$((i\
    \ - 1))] + result[$((i - 2))] + result[$((i + 1))]))\n            fi\n       \
    \ fi\n        i=$((i + 1))\n    done\n    echo ${result[@]}", "    if [ $1 -eq\
    \ 1 ]; then\n        echo 3\n    elif [ $(( $1 % 2 )) -eq 0 ]; then\n        echo\
    \ $(( 1 + $1 / 2 ))\n    else\n        echo $(( $(tri $(( $1 - 1 ))) + $(tri $((\
    \ $1 - 2 ))) + $(tri $(( $1 + 1 ))) ))\n    fi", "\tlocal n=$1\n\tlocal i=0\n\t\
    local tri_list=()\n\twhile [ $i -le $n ]; do\n\t\tif [ $i -eq 0 ]; then\n\t\t\t\
    tri_list[$i]=1\n\t\telif [ $i -eq 1 ]; then\n\t\t\ttri_list[$i]=3\n\t\telif [\
    \ $i -eq 2 ]; then\n\t\t\ttri_list[$i]=2\n\t\telse\n\t\t\tif [ $((i % 2)) -eq\
    \ 0 ]; then\n\t\t\t\ttri_list[$i]=$((i / 2))\n\t\t\telse\n\t\t\t\ttri_list[$i]=$((tri_list[$((i\
    \ - 1))] + tri_list[$((i - 2))] + tri_list[$((i + 1))]))\n\t\t\tfi\n\t\tfi\n\t\
    \ti=$((i + 1))\n\tdone\n\techo ${tri_list[@]}", "    local n=$1\n    local i=0\n\
    \    local result=\"\"\n    local tri_n\n    local tri_n_1\n    local tri_n_2\n\
    \    local tri_n_3\n    local tri_n_4\n    local tri_n_5\n    local tri_n_6\n\
    \    local tri_n_7\n    local tri_n_8\n    local tri_n_9\n    local tri_n_10\n\
    \    local tri_n_11\n    local tri_n_12\n    local tri_n_13\n    local tri_n_14\n\
    \    local tri_n_15\n    local tri_n_16\n    local tri_n_17\n    local tri_n_18\n\
    \    local tri_n_19\n    local tri_n_20\n    local tri_n_21\n    local tri_n_22\n\
    \    local tri_n_23\n    local tri_n_24\n    local tri_n_25\n    local tri_n_26\n\
    \    local tri_n_27\n    local tri_n_28\n    local tri_n_29\n    local tri_n_30\n\
    \    local tri_n_31\n    local tri_n_32\n    local tri_n_33\n    local tri_n_34\n\
    \    local tri_n_35\n    local tri_n_36\n    local tri_n_37\n    local tri_n_38\n\
    \    local tri_n_39\n    local tri_n_40\n    local tri_n_41\n    local tri_n_42\n\
    \    local tri_n_43\n    local tri_n_44\n    local tri_n_45\n    local tri_n_46\n\
    \    local tri_n_47\n    local tri_n_48\n    local tri_n_49\n    local tri_n_50\n\
    \    local tri_n_51\n    local tri_n_52\n    local tri_n_53\n    local tri_n_54\n\
    \    local tri_n_55\n    local tri_n_56\n    local tri_n_57\n    local tri_n_58\n\
    \    local tri_n_59\n    local tri_n_60\n    local tri_n_61\n", "    if [ $1 -eq\
    \ 0 ]; then\n        echo '[\"1\"]'\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ '[\"1\", \"3\"]'\n    elif [ $1 -eq 2 ]; then\n        echo '[\"1\", \"3\",\
    \ \"2\"]'\n    else\n        echo '[\"1\", \"3\", \"2\"'\n        for (( i = 3;\
    \ i <= $1; i++ )); do\n            if [ $(( i % 2 )) -eq 0 ]; then\n         \
    \       echo '\"'$(( i / 2 ))'\"'\n            else\n                echo '\"\
    '$(( $(tri $(( i - 1 ))) + $(tri $(( i - 2 ))) + $(tri $(( i + 1 ))) ))'\"'\n\
    \            fi\n        done\n        echo ']'\n    fi", "    local n=$1\n  \
    \  local tri_list=()\n    local tri_list_str=\"\"\n    local tri_list_str_len=0\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n",
  "  local n=$1\n  local i=0\n  local a=1\n  local b=3\n  local c=2\n  local d=0\n\
    \  local res=\"\"\n  while [ $i -le $n ]; do\n    if [ $((i % 2)) -eq 0 ]; then\n\
    \      d=$((i / 2))\n    else\n      d=$((a + b + c))\n      a=$b\n      b=$c\n\
    \      c=$d\n    fi\n    res=\"$res $d\"\n    i=$((i + 1))\n  done\n  echo $res",
  "    local n=$1\n    local result=()\n    local i=0\n    local tri_n=0\n    local\
    \ tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n    if [[ $n -eq 1 ]];\
    \ then\n        result+=(\"3\")\n    else\n        result+=(\"1\")\n        result+=(\"\
    3\")\n        result+=(\"2\")\n        for ((i=3; i<=n; i++)); do\n          \
    \  if [[ $((i % 2)) -eq 0 ]]; then\n                tri_n=$((i / 2))\n       \
    \     else\n                tri_n_1=${result[$((i - 1))]}\n                tri_n_2=${result[$((i\
    \ - 2))]}\n                tri_n_3=${result[$((i + 1))]}\n                tri_n=$((tri_n_1\
    \ + tri_n_2 + tri_n_3))\n            fi\n            result+=(\"$tri_n\")\n  \
    \      done\n    fi\n    echo \"${result[@]}\"", "    local n=$1\n    local i=1\n\
    \    local a=1\n    local b=3\n    local c=2\n    local d=8\n    local result=\"\
    \"\n    while [ $i -le $n ]; do\n        if [ $i -eq 1 ]; then\n            result=\"\
    $result $a\"\n        elif [ $i -eq 2 ]; then\n            result=\"$result $b\"\
    \n        elif [ $i -eq 3 ]; then\n            result=\"$result $c\"\n       \
    \ else\n            result=\"$result $d\"\n            a=$b\n            b=$c\n\
    \            c=$d\n            d=$((a + b + c))\n        fi\n        i=$((i +\
    \ 1))\n    done\n    echo $result", "    local n=$1\n    local i=0\n    local\
    \ result=()\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n    \
    \        result[$i]=1\n        elif [ $i -eq 1 ]; then\n            result[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            result[$i]=2\n        else\n   \
    \         if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i / 2))\n\
    \            else\n                result[$i]=$((result[$((i - 1))] + result[$((i\
    \ - 2))] + result[$((i + 1))]))\n            fi\n        fi\n        i=$((i +\
    \ 1))\n    done\n    echo ${result[@]}", "    if [[ $1 -eq 1 ]]; then\n      \
    \  echo \"3\"\n    elif [[ $1 -eq 2 ]]; then\n        echo \"1\"\n    elif [[\
    \ $1 -eq 3 ]]; then\n        echo \"2\"\n    else\n        if [[ $1 -eq 4 ]];\
    \ then\n            echo \"8\"\n        else\n            echo \"$(tri $(($1 -\
    \ 1))) + $(tri $(($1 - 2))) + $(tri $(($1 - 3)))\" | bc\n        fi\n    fi",
  "    if [ $1 -eq 1 ]; then\n        echo \"3\"\n    elif [ $(( $1 % 2 )) -eq 0 ];\
    \ then\n        echo $(( 1 + $1 / 2 ))\n    else\n        echo $(( $(tri $(( $1\
    \ - 1 ))) + $(tri $(( $1 - 2 ))) + $(tri $(( $1 + 1 ))) ))\n    fi", "    local\
    \ n=$1\n    local i=0\n    local res=()\n    while [ $i -le $n ]; do\n       \
    \ if [ $i -eq 0 ]; then\n            res[$i]=1\n        elif [ $i -eq 1 ]; then\n\
    \            res[$i]=3\n        elif [ $i -eq 2 ]; then\n            res[$i]=2\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                res[$i]=$((i\
    \ / 2))\n            else\n                res[$i]=$((res[$((i - 1))] + res[$((i\
    \ - 2))] + res[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo \"${res[@]}\"", "    local -a arr\n    arr[0]=1\n    arr[1]=3\n\
    \    arr[2]=2\n    for ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n\
    \            arr[$i]=$((i/2))\n        else\n            arr[$i]=$((arr[$((i-1))]+arr[$((i-2))]+arr[$((i+1))]))\n\
    \        fi\n    done\n    echo ${arr[@]}", "    local -a tri_seq\n    tri_seq[0]=1\n\
    \    tri_seq[1]=3\n    tri_seq[2]=2\n    for (( i = 3; i <= $1; i++ )); do\n \
    \       if (( i % 2 == 0 )); then\n            tri_seq[$i]=$(( 1 + i / 2 ))\n\
    \        else\n            tri_seq[$i]=$(( tri_seq[$(( i - 1 ))] + tri_seq[$((\
    \ i - 2 ))] + tri_seq[$(( i + 1 ))] ))\n        fi\n    done\n    echo ${tri_seq[@]}",
  "\tif [ $1 -eq 1 ]; then\n\t\techo '\"3\"'\n\telif [ $1 -eq 2 ]; then\n\t\techo\
    \ '\"1\"'\n\t\techo '\"3\"'\n\t\techo '\"2\"'\n\telse\n\t\techo '\"1\"'\n\t\t\
    echo '\"3\"'\n\t\techo '\"2\"'\n\t\tfor ((i = 3; i <= $1; i++)); do\n\t\t\tif\
    \ [ $(($i % 2)) -eq 0 ]; then\n\t\t\t\techo '\"'$(($i / 2))'\"'\n\t\t\telse\n\t\
    \t\t\techo '\"'$(($(tri $((i - 1))) + $(tri $((i - 2))) + $(tri $((i + 1)))))\"\
    '\"\n\t\t\tfi\n\t\tdone\n\tfi", "    if [[ $1 -eq 0 ]]; then\n        echo '[\"\
    1\"]'\n    elif [[ $1 -eq 1 ]]; then\n        echo '[\"1\", \"3\"]'\n    elif\
    \ [[ $1 -eq 2 ]]; then\n        echo '[\"1\", \"3\", \"2\"]'\n    else\n     \
    \   echo '[\"1\", \"3\", \"2\", \"8\"]'\n    fi", "    if [[ $1 -eq 1 ]]; then\n\
    \        echo 3\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    elif [[ $1\
    \ -eq 3 ]]; then\n        echo 2\n    else\n        if [[ $1 -eq 0 ]]; then\n\
    \            echo 1\n        else\n            if [[ $1 -eq 4 ]]; then\n     \
    \           echo 8\n            else\n                if [[ $1 -eq 5 ]]; then\n\
    \                    echo 11\n                else\n                    if [[\
    \ $1 -eq 6 ]]; then\n                        echo 19\n                    else\n\
    \                        if [[ $1 -eq 7 ]]; then\n                           \
    \ echo 30\n                        else\n                            if [[ $1\
    \ -eq 8 ]]; then\n                                echo 49\n                  \
    \          else\n                                if [[ $1 -eq 9 ]]; then\n   \
    \                                 echo 79\n                                else\n\
    \                                    if [[ $1 -eq 10 ]]; then\n              \
    \                          echo 128\n                                    else\n\
    \                                        if [[ $1 -eq 11 ]]; then\n          \
    \                                  echo 207\n                                \
    \        else\n                                            if [[ $1 -eq 12 ]];\
    \ then\n                                                echo 335\n           \
    \                                 else\n                                     \
    \           if [[ $1 -eq 13 ]]; then\n                                       \
    \             echo 542\n                                                else\n\
    \                                                    if [[ $1 -eq 14 ]]; then\n\
    \                                                        echo 877\n          \
    \                                          else\n                            \
    \                            if [[ $1 -eq 15 ]]; then\n                      \
    \                                      echo 1419\n                           \
    \                             else\n                                         \
    \                   if [[ $1 -eq 16 ]]; then\n                               \
    \                                 echo 2296\n                                \
    \                            else\n                                          \
    \                      if [[ $1 -eq 17 ]]; then\n                            \
    \                                        echo 3705\n                         \
    \                                       else\n                               \
    \                                     if [[ $1 -eq 18 ]]; then\n             \
    \                                                           echo 5999\n      \
    \                                                              else\n        \
    \                                                                if [[ $1 -eq\
    \ 19 ]]; then\n                                                              \
    \              echo 9704\n                                                   \
    \                     else\n                                                 \
    \                           if [[ $1 -eq 20 ]]; then\n                       \
    \                                                         echo 15713\n       \
    \                                                                     else\n \
    \                                                                            \
    \   if [[ $1 -eq 21 ]]; then\n                                               \
    \                 ", "    local n=$1\n    local result=()\n    local i=0\n   \
    \ local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n    local tri_n_3=0\n\
    \    local tri_n_4=0\n    local tri_n_5=0\n    local tri_n_6=0\n    local tri_n_7=0\n\
    \    local tri_n_8=0\n    local tri_n_9=0\n    local tri_n_10=0\n    local tri_n_11=0\n\
    \    local tri_n_12=0\n    local tri_n_13=0\n    local tri_n_14=0\n    local tri_n_15=0\n\
    \    local tri_n_16=0\n    local tri_n_17=0\n    local tri_n_18=0\n    local tri_n_19=0\n\
    \    local tri_n_20=0\n    local tri_n_21=0\n    local tri_n_22=0\n    local tri_n_23=0\n\
    \    local tri_n_24=0\n    local tri_n_25=0\n    local tri_n_26=0\n    local tri_n_27=0\n\
    \    local tri_n_28=0\n    local tri_n_29=0\n    local tri_n_30=0\n    local tri_n_31=0\n\
    \    local tri_n_32=0\n    local tri_n_33=0\n    local tri_n_34=0\n    local tri_n_35=0\n\
    \    local tri_n_36=0\n    local tri_n_37=0\n    local tri_n_38=0\n    local tri_n_39=0\n\
    \    local tri_n_40=0\n    local tri_n_41=0\n    local tri_n_42=0\n    local tri_n_43=0\n\
    \    local tri_n_44=0\n    local tri_n_45=0\n    local tri_n_46=0\n    local tri_n_47=0\n\
    \    local tri_n_48=0\n    local tri_n", "    # Write your code here\n    # To\
    \ print results to the standard output you can use echo\n    # Example: echo \"\
    Hello world\"\n    echo \"Hello world\"", "    if [ $1 -eq 1 ]; then\n       \
    \ echo \"3\"\n    elif [ $(( $1 % 2 )) -eq 0 ]; then\n        echo $(( 1 + $1\
    \ / 2 ))\n    else\n        echo $(( $(tri $(( $1 - 1 ))) + $(tri $(( $1 - 2 )))\
    \ + $(tri $(( $1 + 1 ))) ))\n    fi", "    local n=$1\n    local tri_n=()\n  \
    \  local i=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n   \
    \         tri_n[$i]=1\n        elif [ $i -eq 1 ]; then\n            tri_n[$i]=3\n\
    \        elif [ $i -eq 2 ]; then\n            tri_n[$i]=2\n        else\n    \
    \        if [ $((i % 2)) -eq 0 ]; then\n                tri_n[$i]=$((i / 2))\n\
    \            else\n                tri_n[$i]=$((tri_n[$((i - 1))] + tri_n[$((i\
    \ - 2))] + tri_n[$((i + 1))]))\n            fi\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo \"${tri_n[@]}\"", "  local n=$1\n  local i=0\n  local tri_list=()\n\
    \  while [ $i -le $n ]; do\n    if [ $i -eq 0 ]; then\n      tri_list[$i]=1\n\
    \    elif [ $i -eq 1 ]; then\n      tri_list[$i]=3\n    elif [ $i -eq 2 ]; then\n\
    \      tri_list[$i]=2\n    else\n      if [ $((i % 2)) -eq 0 ]; then\n       \
    \ tri_list[$i]=$((i / 2))\n      else\n        tri_list[$i]=$((tri_list[$((i -\
    \ 1))] + tri_list[$((i - 2))] + tri_list[$((i + 1))]))\n      fi\n    fi\n   \
    \ i=$((i + 1))\n  done\n  echo \"${tri_list[@]}\"", "    local n=$1\n    local\
    \ result=()\n    local i=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0\
    \ ]; then\n            result[$i]=1\n        elif [ $i -eq 1 ]; then\n       \
    \     result[$i]=3\n        elif [ $i -eq 2 ]; then\n            result[$i]=2\n\
    \        else\n            if [ $((i % 2)) -eq 0 ]; then\n                result[$i]=$((i\
    \ / 2))\n            else\n                result[$i]=$((result[$((i - 1))] +\
    \ result[$((i - 2))] + result[$((i + 1))]))\n            fi\n        fi\n    \
    \    i=$((i + 1))\n    done\n    echo ${result[@]}", "    if [[ $1 -eq 1 ]]; then\n\
    \        echo '[\"3\"]'\n    elif [[ $1 -eq 2 ]]; then\n        echo '[\"3\",\
    \ \"2\"]'\n    elif [[ $1 -eq 3 ]]; then\n        echo '[\"3\", \"2\", \"8\"]'\n\
    \    else\n        echo '[\"3\", \"2\", \"8\", \"3\", \"8\", \"11\", \"19\", \"\
    32\", \"51\", \"83\", \"134\", \"217\", \"351\", \"572\", \"923\", \"1495\", \"\
    2418\", \"3913\", \"6311\", \"10223\", \"16554\", \"26877\", \"43331\", \"70088\"\
    , \"113419\", \"183527\", \"296946\", \"479475\", \"776423\", \"1255898\", \"\
    2032302\", \"3288200\", \"5326022\", \"8614222\", \"13940444\", \"22554666\",\
    \ \"36455090\", \"59010756\", \"95466802\", \"154477458\", \"249944260\", \"404421718\"\
    , \"654364978\", \"1058786976\", \"1713141254\", \"2771505230\", \"4484656504\"\
    , \"7256161734\", \"11740778230\", \"19000390064\", \"30740798330\", \"49741178394\"\
    , \"80481961724\", \"130223119018\", \"210565008742\", \"341087127760\", \"551649136482\"\
    , \"892736264224\", \"1444385400706\", \"2337121664930\", \"3780506865656\", \"\
    6117627474586\", \"9928134219242\", \"16046741683808\", \"26074975803050\", \"\
    42121717486858\", \"68196692290908\", \"110318610179756\", \"178515303470666\"\
    , \"288833915050572\", \"468149227920228\", \"756983142970800\", \"1225082367891078\"\
    , \"1981976050861878\", \"32109599", "    local -a tri\n    tri[0]=1\n    tri[1]=3\n\
    \    tri[2]=2\n    for ((i=3; i<=$1; i++)); do\n        if ((i%2==0)); then\n\
    \            tri[$i]=$((i/2))\n        else\n            tri[$i]=$((tri[$i-1]+tri[$i-2]+tri[$i+1]))\n\
    \        fi\n    done\n    echo ${tri[@]}", "    local n=$1\n    local result=()\n\
    \    local i=0\n    local tri_n=0\n    local tri_n_1=0\n    local tri_n_2=0\n\
    \    local tri_n_3=0\n    while [ $i -le $n ]; do\n        if [ $i -eq 0 ]; then\n\
    \            tri_n=1\n        elif [ $i -eq 1 ]; then\n            tri_n=3\n \
    \       elif [ $i -eq 2 ]; then\n            tri_n=2\n        else\n         \
    \   if [ $((i % 2)) -eq 0 ]; then\n                tri_n=$((i / 2))\n        \
    \    else\n                tri_n=$((tri_n_1 + tri_n_2 + tri_n_3))\n          \
    \  fi\n        fi\n        result+=($tri_n)\n        tri_n_3=$tri_n_2\n      \
    \  tri_n_2=$tri_n_1\n        tri_n_1=$tri_n\n        i=$((i + 1))\n    done\n\
    \    echo ${result[@]}"]
stop_tokens:
- "\n}"

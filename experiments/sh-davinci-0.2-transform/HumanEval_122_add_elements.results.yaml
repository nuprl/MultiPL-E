language: sh
name: HumanEval_122_add_elements
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            (( sum +=\
    \ arr[i] ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpr1j7xcqi.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_sfxuql0.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmp_sfxuql0.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp_sfxuql0.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp_sfxuql0.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for ((i=0; i<k; i++)); do\n\
    \    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    local -i i=0\n\
    \    local -i len=0\n    local -i num=0\n    local -i num_digits=0\n    local\
    \ -i max_digits=2\n    local -i max_num=99\n    local -i min_num=10\n    arr=($1)\n\
    \    k=$2\n    len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        num=${arr[i]}\n\
    \        num_digits=${#num}\n        if ((num_digits <= max_digits && num >= min_num\
    \ && num <= max_num)); then\n            sum=$((sum + num))\n        fi\n    \
    \    if ((i == k - 1)); then\n            break\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  for element\
    \ in $arr; do\n    if [[ $i -lt $k ]]; then\n      if [[ $element -lt 100 ]];\
    \ then\n        sum=$((sum + element))\n      fi\n    fi\n    i=$((i + 1))\n \
    \ done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            (( sum +=\
    \ arr[i] ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpr1j7xcqi.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k\n    local -i sum=0\n    IFS=' ' read\
    \ -r -a arr <<< \"$1\"\n    k=\"$2\"\n    for ((i=0; i<k; i++)); do\n        if\
    \ [[ ${arr[i]} =~ ^[0-9]{1,2}$ ]]; then\n            sum=$((sum + arr[i]))\n \
    \       fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            (( sum +=\
    \ arr[i] ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpr1j7xcqi.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    local -i i=0\n\
    \    local -i len=0\n    local -i num=0\n    local -i num_digits=0\n    local\
    \ -i max_digits=2\n    local -i max_num=99\n    local -i min_num=10\n    local\
    \ -i max_i=0\n    local -i min_i=0\n    local -i max_sum=0\n    local -i min_sum=0\n\
    \    local -i max_num_digits=0\n    local -i min_num_digits=0\n    local -i max_len=0\n\
    \    local -i min_len=0\n    local -i max_k=0\n    local -i min_k=0\n    local\
    \ -i max_max_digits=0\n    local -i min_max_digits=0\n    local -i max_max_num=0\n\
    \    local -i min_max_num=0\n    local -i max_min_num=0\n    local -i min_min_num=0\n\
    \    local -i max_max_i=0\n    local -i min_max_i=0\n    local -i max_min_i=0\n\
    \    local -i min_min_i=0\n    local -i max_max_sum=0\n    local -i min_max_sum=0\n\
    \    local -i max_min_sum=0\n    local -i min_min_sum=0\n    local -i max_max_num_digits=0\n\
    \    local -i min_max_num_digits=0\n    local -i max_min_num_digits=0\n    local\
    \ -i min_min_num_digits=0\n    local -i max_max_len=0\n    local -i min_max_len=0\n\
    \    local -i max_min_len=0\n    local -i min_min_len=0\n    local -i max_max_k=0\n\
    \    local -i min_max_k=0\n    local -i max_min_k=0\n   \n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=$(echo $arr | cut -d \" \" -f $i)\n        if [[\
    \ $num -lt 100 ]]; then\n            ((sum += num))\n        fi\n    done\n  \
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9hm2r804.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=()\n  local -i k=0\n  local -i i=0\n  local -i sum=0\n  local\
    \ -i len=0\n  local -i num=0\n  local -i num_digits=0\n  local -i max_digits=2\n\
    \  local -i max_num=99\n  local -i min_num=10\n  local -i max_num_digits=2\n \
    \ local -i min_num_digits=1\n  IFS=' ' read -r -a arr <<< \"$1\"\n  k=$2\n  len=${#arr[@]}\n\
    \  if [[ $k -gt $len ]]; then\n    k=$len\n  fi\n  for ((i=0; i<k; i++)); do\n\
    \    num=${arr[$i]}\n    num_digits=${#num}\n    if [[ $num_digits -le $max_digits\
    \ ]]; then\n      sum=$((sum + num))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for i in $(seq 0 $((k-1)));\
    \ do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[$i]}))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=$(echo $arr | cut -d ' ' -f $i)\n        if [[\
    \ $num -lt 100 ]]; then\n            ((sum += num))\n        fi\n    done\n  \
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmc0pxawf.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr\n  local -i k\n  local -i sum\n  local -i i\n  arr=($1)\n\
    \  k=$2\n  sum=0\n  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]];\
    \ then\n      ((sum+=arr[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=()\n  IFS=' ' read -r -a arr <<< \"$1\"\n  local k=\"$2\"\n\
    \  local sum=0\n  for ((i=0; i<k; i++)); do\n    if [[ \"${arr[i]}\" -lt 100 ]];\
    \ then\n      ((sum+=arr[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<$k;\
    \ i++)); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n  \
    \  add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=${arr[$i]}\n        if [[ $num -lt 100 ]]; then\n\
    \            ((sum+=num))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphfkjiug4.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=${arr[$i]}\n        if [[ $num -lt 100 ]]; then\n\
    \            ((sum+=num))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmphfkjiug4.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            ((sum+=${arr[$i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4f1v4udq.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmp4f1v4udq.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp4f1v4udq.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp4f1v4udq.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 100 ]]; then\n            ((sum+=i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp3ozoefnp.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            (( sum +=\
    \ arr[i] ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpr1j7xcqi.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n  \
    \  local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 100 ]]; then\n\
    \            sum=$((sum + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpobetktgp.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    local -i i=0\n\
    \    local -i len=0\n    local -i num=0\n    local -i num_len=0\n    local -i\
    \ num_digits=0\n    local -i num_tens=0\n    local -i num_ones=0\n    local -i\
    \ num_hundreds=0\n    local -i num_thousands=0\n    local -i num_tenthousands=0\n\
    \    local -i num_hundredthousands=0\n    local -i num_millions=0\n    local -i\
    \ num_tenmillions=0\n    local -i num_hundredmillions=0\n    local -i num_billions=0\n\
    \    local -i num_tenbillions=0\n    local -i num_hundredbillions=0\n    local\
    \ -i num_trillions=0\n    local -i num_tentrillions=0\n    local -i num_hundredtrillions=0\n\
    \    local -i num_quadrillion=0\n    local -i num_tenquadrillion=0\n    local\
    \ -i num_hundredquadrillion=0\n    local -i num_quintillion=0\n    local -i num_tenquintillion=0\n\
    \    local -i num_hundredquintillion=0\n    local -i num_sextillion=0\n    local\
    \ -i num_tensextillion=0\n    local -i num_hundredsextillion=0\n    local -i num_septillion=0\n\
    \    local -i num_tenseptillion=0\n    local -i num_hundredseptillion=0\n    local\
    \ -i num_octillion=0\n    local -i num_tenoctillion=0\n    local -i num_hundredoctillion=0\n\
    \    local -i num_nonillion=0\n    local -i num_tennonillion=0\n    local -i num_hundrednonillion=0\n\
    \    local -i num_decillion=0\n    local -i num_tendecillion=0\n    local -i num_hundreddecillion=0\n\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n  \
    \  local sum=0\n    for (( i=0; i<k; i++ )); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            (( sum += arr[i] ))\n        fi\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptdowwd0w.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4ab2pad.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in $(seq 1 $k); do\n\
    \    local num=$(echo $arr | cut -d' ' -f$i)\n    if [[ $num -lt 100 ]]; then\n\
    \      sum=$((sum + num))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpykpksqxi.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for i in ${arr[@]:0:$k};\
    \ do\n        if [[ $i -lt 100 ]]; then\n            ((sum+=i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n  \
    \  local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 100 ]]; then\n\
    \            sum=$((sum + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpobetktgp.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++));\
    \ do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum += arr[i]))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpsn6xlx9n.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in ${arr[@]};\
    \ do\n        if [[ $i -lt 100 ]]; then\n            ((sum += i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmprvhy33lv.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for (( i=0; i<$k;\
    \ i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            (( sum +=\
    \ ${arr[$i]} ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i i=0\n    local -i sum=0\n\
    \    local -i n=0\n    local -i x=0\n    local -i y=0\n    arr=($1)\n    k=$2\n\
    \    for ((i=0; i<k; i++)); do\n        n=${arr[i]}\n        x=$((n/10))\n   \
    \     y=$((n%10))\n        if [[ $x -gt 0 ]]; then\n            if [[ $y -gt 0\
    \ ]]; then\n                sum=$((sum+x+y))\n            else\n             \
    \   sum=$((sum+x))\n            fi\n        else\n            sum=$((sum+y))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=($1)\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 0 $((k-1))); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[$i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  for num\
    \ in $arr; do\n    if [[ $i -lt $k ]]; then\n      if [[ $num -lt 100 ]]; then\n\
    \        sum=$((sum + num))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local sum=0\n    local i=0\n    for num in $1; do\n        if [ $i -lt\
    \ $2 ]; then\n            if [ ${#num} -le 2 ]; then\n                sum=$((sum\
    \ + num))\n            fi\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for i in $(seq 0\
    \ $((k-1))); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[$i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  for num\
    \ in $arr; do\n    if [[ $i -lt $k ]]; then\n      if [[ ${#num} -le 2 ]]; then\n\
    \        sum=$((sum + num))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++));\
    \ do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprqkdn97t.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmprqkdn97t.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmprqkdn97t.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmprqkdn97t.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n\
    \    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n\
    \    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n\
    \    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++));\
    \ do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprqkdn97t.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmprqkdn97t.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmprqkdn97t.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmprqkdn97t.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$(( sum\
    \ + ${arr[i]} ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=$(echo $arr | cut -d' ' -f$i)\n        if [ ${#num}\
    \ -le 2 ]; then\n            sum=$((sum + num))\n        fi\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp0tbbglus.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    while [[ $i -lt $k ]]; do\n        local num=\"${arr[$i]}\"\n        if [[\
    \ $num -lt 100 ]]; then\n            ((sum+=num))\n        fi\n        ((i++))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpudyn4f4w.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [[ $i -lt $k ]]; do\n        local num=$(echo $arr | cut -d \" \" -f $((i+1)))\n\
    \        if [[ ${#num} -le 2 ]]; then\n            sum=$((sum+num))\n        fi\n\
    \        i=$((i+1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for i in \"${arr[@]:0:$k}\"\
    ; do\n        if [[ $i =~ ^[0-9]{1,2}$ ]]; then\n            sum=$((sum + i))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 0 $((k-1))); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[$i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg8fwipod.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpg8fwipod.sh: line 19: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    local -i i=0\n\
    \    local -i len=0\n    local -i num=0\n    local -i num_digits=0\n    local\
    \ -i max_digits=2\n    local -i max_num=99\n    local -i min_num=10\n    local\
    \ -i max_index=0\n    local -i min_index=0\n    local -i temp=0\n    local -i\
    \ temp_index=0\n    local -i temp_num=0\n    local -i temp_num_digits=0\n    local\
    \ -i temp_max_digits=0\n    local -i temp_max_num=0\n    local -i temp_min_num=0\n\
    \    local -i temp_max_index=0\n    local -i temp_min_index=0\n    local -i temp_sum=0\n\
    \    local -i temp_i=0\n    local -i temp_len=0\n    local -i temp_k=0\n    local\
    \ -i temp_max_k=0\n    local -i temp_min_k=0\n    local -i temp_max_k_index=0\n\
    \    local -i temp_min_k_index=0\n    local -i temp_max_k_num=0\n    local -i\
    \ temp_min_k_num=0\n    local -i temp_max_k_num_digits=0\n    local -i temp_min_k_num_digits=0\n\
    \    local -i temp_max_k_max_digits=0\n    local -i temp_min_k_max_digits=0\n\
    \    local -i temp_max_k_max_num=0\n    local -i temp_min_k_max_num=0\n    local\
    \ -i temp_max_k_min_num=0\n    local -i temp_min_k_min_num=0\n    local -i temp_max_k_max_index=0\n\
    \    local -i temp_min_k_max_index=0\n    local -i temp_max_k_min_index=0\n}\n\
    \ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  for n\
    \ in $arr; do\n    if [[ $i -lt $k ]]; then\n      if [[ $n -lt 100 ]]; then\n\
    \        sum=$((sum + n))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n  \
    \  local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            ((sum+=${arr[i]}))\n        fi\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1vqhsdkg.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    /tmp/tmp1vqhsdkg.sh: line 20: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp1vqhsdkg.sh: line 20: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++));\
    \ do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprqkdn97t.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmprqkdn97t.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmprqkdn97t.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmprqkdn97t.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr\n  local -i k\n  local -i sum\n  local -i i\n  local -i n\n\
    \n  IFS=' ' read -r -a arr <<< \"$1\"\n  k=\"$2\"\n  sum=0\n  for ((i=0; i<k;\
    \ i++)); do\n    n=\"${arr[i]}\"\n    if [[ \"$n\" -lt 100 ]]; then\n      ((sum\
    \ += n))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    local -i i=0\n\
    \    local -i len=0\n    local -i num=0\n    local -i num_digits=0\n    local\
    \ -i max_digits=2\n    local -i max_num=99\n    local -i min_num=10\n    local\
    \ -i max_index=0\n    local -i min_index=0\n    local -i max_num_index=0\n   \
    \ local -i min_num_index=0\n    local -i max_num_digits=0\n    local -i min_num_digits=0\n\
    \    local -i max_num_sum=0\n    local -i min_num_sum=0\n    local -i max_num_sum_index=0\n\
    \    local -i min_num_sum_index=0\n    local -i max_num_sum_digits=0\n    local\
    \ -i min_num_sum_digits=0\n    local -i max_num_sum_num=0\n    local -i min_num_sum_num=0\n\
    \    local -i max_num_sum_num_digits=0\n    local -i min_num_sum_num_digits=0\n\
    \    local -i max_num_sum_num_index=0\n    local -i min_num_sum_num_index=0\n\
    \    local -i max_num_sum_num_sum=0\n    local -i min_num_sum_num_sum=0\n    local\
    \ -i max_num_sum_num_sum_index=0\n    local -i min_num_sum_num_sum_index=0\n \
    \   local -i max_num_sum_num_sum_digits=0\n    local -i min_num_sum_num_sum_digits=0\n\
    \    local -i max_num_sum_num_sum_num=0\n    local -i min_num_sum_num_sum_num=0\n\
    \    local -i max_num_sum_num_sum_num_digits=0\n    local -i min_num_sum_num_\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr\n    IFS=' ' read -r -a arr <<< \"$1\"\n    local k=$2\n\
    \    local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            sum=$((sum + arr[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 0 $((k-1))); do\n        local num=$(echo \"${arr[$i]}\" | sed 's/^0*//')\n\
    \        if [[ ${#num} -le 2 ]]; then\n            sum=$((sum + num))\n      \
    \  fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpcjh46urf.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n\
    \    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for i in $(seq 0\
    \ $((k-1))); do\n        local num=${arr[$i]}\n        if [[ $num -lt 100 ]];\
    \ then\n            sum=$((sum + num))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in ${arr[@]}; do\n\
    \    if [[ $i -lt 100 ]]; then\n      sum=$((sum + i))\n    fi\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpti7jvuaq.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k\n    local -i sum=0\n    local -i i=0\n\
    \    local -i len\n    local -i num\n    IFS=' ' read -r -a arr <<< \"$1\"\n \
    \   k=\"$2\"\n    len=${#arr[@]}\n    while [ $i -lt $len ] && [ $i -lt $k ];\
    \ do\n        num=\"${arr[$i]}\"\n        if [ ${#num} -le 2 ]; then\n       \
    \     sum=$((sum + num))\n        fi\n        i=$((i + 1))\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=\"${arr[-1]}\"\n    unset arr[-1]\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ \"${#i}\" -le\
    \ 2 ]]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n  \
    \  local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            sum=$((sum + arr[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdd72g786.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=(\"$@\")\n    local k=${arr[-1]}\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        local num=${arr[i]}\n        if [[ $num -lt 100\
    \ ]]; then\n            sum=$((sum + num))\n        fi\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmplv50r4cx.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in $(seq 1 $k); do\n\
    \    local num=$(echo $arr | cut -d' ' -f$i)\n    if [[ $num -lt 100 ]]; then\n\
    \      sum=$((sum + num))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpykpksqxi.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n  \
    \  local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 100 ]]; then\n\
    \            sum=$((sum + i))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpobetktgp.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=${arr[$i]}\n        if [[ $num -lt 100 ]]; then\n\
    \            sum=$((sum + num))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwzlhincl.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=(\"$@\")\n  local k=${arr[-1]}\n  unset arr[-1]\n  local sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpmcyk_v4t.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    /tmp/tmpmcyk_v4t.sh: line 20: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpmcyk_v4t.sh: line 20: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for (( i=0; i<k; i++ ));\
    \ do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in $(seq 1 $k); do\n\
    \    if [[ ${arr[$i]} -lt 100 ]]; then\n      ((sum += ${arr[$i]}))\n    fi\n\
    \  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjom32lse.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpjom32lse.sh: line 19: ((: sum += : syntax error: operand expected (error
    token is "+= ")

    /tmp/tmpjom32lse.sh: line 19: ((: sum += : syntax error: operand expected (error
    token is "+= ")

    /tmp/tmpjom32lse.sh: line 19: ((: sum += : syntax error: operand expected (error
    token is "+= ")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n\
    \    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  for num in $arr;\
    \ do\n    if [[ $i -lt $k ]]; then\n      if [[ ${#num} -le 2 ]]; then\n     \
    \   sum=$((sum + num))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            ((sum += ${arr[$i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpjeq6tzf7.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpjeq6tzf7.sh: line 19: ((: sum += : syntax error: operand expected (error
    token is "+= ")

    /tmp/tmpjeq6tzf7.sh: line 19: ((: sum += : syntax error: operand expected (error
    token is "+= ")

    /tmp/tmpjeq6tzf7.sh: line 19: ((: sum += : syntax error: operand expected (error
    token is "+= ")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    for n in $arr; do\n        if [ $i -ge $k ]; then\n            break\n  \
    \      fi\n        if [ ${#n} -le 2 ]; then\n            sum=$((sum + n))\n  \
    \      fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  for num\
    \ in $arr; do\n    if [ $i -eq $k ]; then\n      break\n    fi\n    if [ ${#num}\
    \ -le 2 ]; then\n      sum=$((sum + num))\n    fi\n    i=$((i + 1))\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=(\"$@\")\n  local sum=0\n  for ((i=0; i<$2; i++)); do\n    if\
    \ [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[$i]}))\n    fi\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpthbi6e_p.sh: line 17: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    /tmp/tmpthbi6e_p.sh: line 18: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=()\n  local -i k\n  local -i sum=0\n  local -i i=0\n  local\
    \ -i len\n  local -i num\n\n  IFS=' ' read -r -a arr <<< \"$1\"\n  k=$2\n  len=${#arr[@]}\n\
    \n  while (( i < len && i < k )); do\n    num=${arr[i]}\n    if (( num < 100 ));\
    \ then\n      (( sum += num ))\n    fi\n    (( i++ ))\n  done\n\n  echo \"$sum\"\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=$(echo $arr | cut -d \" \" -f $i)\n        if [\
    \ ${#num} -le 2 ]; then\n            sum=$((sum + num))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9n0cz0fd.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local k\n    local i\n    local sum=0\n    IFS='\
    \ ' read -r -a arr <<< \"$1\"\n    k=\"$2\"\n    for ((i=0; i<k; i++)); do\n \
    \       if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=arr[i]))\n      \
    \  fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 0 $((k-1))); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[$i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpg8fwipod.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpg8fwipod.sh: line 19: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n  \
    \  local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            ((sum+=${arr[i]}))\n        fi\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1vqhsdkg.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    /tmp/tmp1vqhsdkg.sh: line 20: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp1vqhsdkg.sh: line 20: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n\
    \    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k\n    local -i i\n    local -i sum\n \
    \   local -i n\n    local -i d\n    local -i t\n    IFS=' ' read -r -a arr <<<\
    \ \"$1\"\n    k=$2\n    sum=0\n    for ((i=0; i<k; i++)); do\n        n=${arr[i]}\n\
    \        d=0\n        while [[ $n -gt 0 ]]; do\n            t=$((n % 10))\n  \
    \          n=$((n / 10))\n            d=$((d + 1))\n        done\n        if [[\
    \ $d -le 2 ]]; then\n            sum=$((sum + arr[i]))\n        fi\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k\n    local -i i\n    local -i sum=0\n\
    \    local -i num\n    IFS=' ' read -r -a arr <<< \"$1\"\n    k=$2\n    for ((i=0;\
    \ i<k; i++)); do\n        num=${arr[i]}\n        if [[ $num -lt 100 ]]; then\n\
    \            ((sum+=num))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in $(seq 0 $((k-1)));\
    \ do\n    if [[ ${arr[$i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[$i]}))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpsoqbxy8g.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpsoqbxy8g.sh: line 19: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  for num\
    \ in $arr; do\n    if [ $i -eq $k ]; then\n      break\n    fi\n    if [ ${#num}\
    \ -le 2 ]; then\n      sum=$((sum + num))\n    fi\n    i=$((i + 1))\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=()\n  local -i k=0\n  local -i sum=0\n  local -i i=0\n  local\
    \ -i len=0\n  local -i num=0\n  local -i num_digits=0\n  local -i max_digits=2\n\
    \  local -i max_num=99\n  local -i min_num=10\n  local -i max_sum=0\n  local -i\
    \ min_sum=0\n  local -i max_sum_digits=0\n  local -i min_sum_digits=0\n  local\
    \ -i max_sum_num=0\n  local -i min_sum_num=0\n  local -i max_sum_len=0\n  local\
    \ -i min_sum_len=0\n  local -i max_sum_i=0\n  local -i min_sum_i=0\n  local -i\
    \ max_sum_k=0\n  local -i min_sum_k=0\n  local -i max_sum_num_digits=0\n  local\
    \ -i min_sum_num_digits=0\n  local -i max_sum_max_digits=0\n  local -i min_sum_max_digits=0\n\
    \  local -i max_sum_max_num=0\n  local -i min_sum_max_num=0\n  local -i max_sum_min_num=0\n\
    \  local -i min_sum_min_num=0\n  local -i max_sum_max_sum=0\n  local -i min_sum_max_sum=0\n\
    \  local -i max_sum_min_sum=0\n  local -i min_sum_min_sum=0\n  local -i max_sum_max_sum_digits=0\n\
    \  local -i min_sum_max_sum_digits=0\n  local -i max_sum_min_sum_digits=0\n  local\
    \ -i min_sum_min_sum_digits=0\n  local -i max_sum_max_sum_num=0\n  local -i min_sum_max_sum_num=0\n\
    \  local -i max_sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\"\
    \ ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local k=$2\n    local sum=0\n    local i=0\n   \
    \ IFS=' ' read -r -a arr <<< \"$1\"\n    for ((i=0; i<k; i++)); do\n        if\
    \ [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n        fi\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++));\
    \ do\n    local num=${arr[i]}\n    if [[ $num -lt 100 ]]; then\n      ((sum+=num))\n\
    \    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmps8cpeo7n.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            (( sum +=\
    \ arr[i] ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpr1j7xcqi.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  for num\
    \ in $arr; do\n    if [[ $i -lt $k ]]; then\n      if [[ ${#num} -le 2 ]]; then\n\
    \        sum=$((sum + num))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local -i k=\"${arr[-1]}\"\n    unset arr[-1]\n\
    \    local -i sum=0\n    for i in \"${arr[@]:0:k}\"; do\n        if [[ \"$i\"\
    \ -lt 100 ]]; then\n            (( sum += i ))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp863e1d1p.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr\n    local -i k\n    local -i sum\n    local -i i\n    local\
    \ -i n\n    local -i n_digits\n    local -i digit\n    local -i tens\n    local\
    \ -i ones\n    local -i tens_digit\n    local -i ones_digit\n    local -i tens_sum\n\
    \    local -i ones_sum\n    local -i tens_ones_sum\n    local -i tens_ones_sum_sum\n\
    \    local -i tens_ones_sum_sum_sum\n    local -i tens_ones_sum_sum_sum_sum\n\
    \    local -i tens_ones_sum_sum_sum_sum_sum\n    local -i tens_ones_sum_sum_sum_sum_sum_sum\n\
    \    local -i tens_ones_sum_sum_sum_sum_sum_sum_sum\n    local -i tens_ones_sum_sum_sum_sum_sum_sum_sum_sum\n\
    \    local -i tens_ones_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local -i tens_ones_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n\
    \    local -i tens_ones_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local\
    \ -i tens_ones_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n    local -i tens_ones_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n\
    \    local -i tens_ones_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n\
    \    local -i tens_ones_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n\
    \    local -i tens_ones_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum_sum\n\
    \    local -i tens_ones_sum_sum_sum_sum_sum_sum_sum_\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local sum=0\n  local arr=($1)\n  local k=$2\n  for (( i=0; i<k; i++ ));\
    \ do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      (( sum += ${arr[i]} ))\n   \
    \ fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=(\"$@\")\n    local k=${arr[-1]}\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  sum=$((sum + arr[i]))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpd9rt0g5m.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n  \
    \  local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            sum=$((sum + arr[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpdd72g786.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in ${arr[@]:0:$k};\
    \ do\n        if [[ $i -lt 100 ]]; then\n            ((sum+=i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkh_qfv7a.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 0 $((k-1))); do\n        local n=${arr[$i]}\n        if [[ $n -lt 100 ]]; then\n\
    \            sum=$((sum + n))\n        fi\n    done\n    echo $sum\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmplyizdj6j.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=(\"$@\")\n  local k=\"${arr[-1]}\"\n  local sum=0\n  for ((i=0;\
    \ i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptqzxcrif.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    local i=0\n    while\
    \ [ $i -lt $k ]; do\n        local num=${arr[$i]}\n        if [[ $num -lt 100\
    \ ]]; then\n            sum=$((sum + num))\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    local -i i=0\n\
    \    local -i len=0\n    local -i num=0\n    local -i num_digits=0\n    local\
    \ -i max_digits=2\n    local -i max_num=99\n    local -i min_num=10\n    local\
    \ -i min_num_digits=2\n    local -i max_num_digits=2\n    local -i max_sum=0\n\
    \    local -i min_sum=0\n    local -i max_sum_digits=2\n    local -i min_sum_digits=2\n\
    \    local -i max_sum_num_digits=2\n    local -i min_sum_num_digits=2\n    local\
    \ -i max_sum_num=99\n    local -i min_sum_num=10\n    local -i max_sum_num_digits=2\n\
    \    local -i min_sum_num_digits=2\n    local -i max_sum_num_digits=2\n    local\
    \ -i min_sum_num_digits=2\n    local -i max_sum_num_digits=2\n    local -i min_sum_num_digits=2\n\
    \    local -i max_sum_num_digits=2\n    local -i min_sum_num_digits=2\n    local\
    \ -i max_sum_num_digits=2\n    local -i min_sum_num_digits=2\n    local -i max_sum_num_digits=2\n\
    \    local -i min_sum_num_digits=2\n    local -i max_sum_num_digits=2\n    local\
    \ -i min_sum_num_digits=2\n    local -i max_sum_num_digits=2\n    local -i min_sum_num_digits=2\n\
    \    local -i max_sum_num_digits=2\n    local -i min_sum_num_digits=2\n    local\
    \ -i max_sum_num_digits=2\n    local -i min_sum_num_\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            (( sum +=\
    \ arr[i] ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpr1j7xcqi.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n  \
    \  local sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100\
    \ ]]; then\n            ((sum+=${arr[i]}))\n        fi\n    done\n    echo \"\
    $sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1vqhsdkg.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    /tmp/tmp1vqhsdkg.sh: line 20: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp1vqhsdkg.sh: line 20: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=(\"$@\")\n  local k=${arr[-1]}\n  unset arr[-1]\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ ${#i} -le 2 ]]; then\n      sum=$((sum\
    \ + i))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local sum=0\n    local arr=($1)\n    local k=$2\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            (( sum+=${arr[$i]}\
    \ ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  for (( i=0; i<k;\
    \ i++ )); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      (( sum += arr[i] ))\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp8alidrnl.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=()\n  local -i k=$2\n  local -i i=0\n  local -i sum=0\n  local\
    \ -i num=0\n  local -i num_digits=0\n  local -i num_digits_max=2\n  local -i num_digits_min=1\n\
    \  local -i num_digits_max_10=10\n  local -i num_digits_max_100=100\n  local -i\
    \ num_digits_max_1000=1000\n  local -i num_digits_max_10000=10000\n  local -i\
    \ num_digits_max_100000=100000\n  local -i num_digits_max_1000000=1000000\n  local\
    \ -i num_digits_max_10000000=10000000\n  local -i num_digits_max_100000000=100000000\n\
    \  local -i num_digits_max_1000000000=1000000000\n  local -i num_digits_max_10000000000=10000000000\n\
    \  local -i num_digits_max_100000000000=100000000000\n  local -i num_digits_max_1000000000000=1000000000000\n\
    \  local -i num_digits_max_10000000000000=10000000000000\n  local -i num_digits_max_100000000000000=100000000000000\n\
    \  local -i num_digits_max_1000000000000000=1000000000000000\n  local -i num_digits_max_10000000000000000=10000000000000000\n\
    \  local -i num_digits_max_100000000000000000=100000000000000000\n  local -i num_digits_max_1000000000000000000=1000000000000000000\n\
    \  local -i num_digits_max_10000000000000000000=10000000000000000000\n  local\
    \ -i num_digits_max_100000000000000000000=100000000000000000000\n  local -i num_digits_max_1000000000000000000000=1000000000000000000000\n\
    \  local -i num_digits_max_10000000000000000000000=10000000000000000000000\n \
    \ local -i num_digits_max_100000000000000000000000=100000000000000000000000\n\
    \  local -i num_digits_max_1000000000000000000000000=1000000000000000000000000\n\
    \  local\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            (( sum +=\
    \ ${arr[i]} ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++));\
    \ do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum=$((sum + ${arr[i]}))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\")\
    \ = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i i=0\n    local -i sum=0\n\
    \    local -i num=0\n    local -i digits=0\n    local -i temp=0\n    arr=($1)\n\
    \    k=$2\n    for ((i=0; i<k; i++)); do\n        num=${arr[i]}\n        digits=0\n\
    \        temp=num\n        while ((temp > 0)); do\n            ((digits++))\n\
    \            ((temp /= 10))\n        done\n        if ((digits <= 2)); then\n\
    \            ((sum += num))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=$(echo $arr | cut -d' ' -f$i)\n        if [[ $num\
    \ -lt 100 ]]; then\n            ((sum+=num))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpf7_y5tas.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++));\
    \ do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  for n\
    \ in $arr; do\n    if [ $i -ge $k ]; then\n      break\n    fi\n    if [ ${#n}\
    \ -le 2 ]; then\n      sum=$((sum + n))\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    for num in $arr; do\n        if [ $i -eq $k ]; then\n            break\n\
    \        fi\n        if [ ${#num} -le 2 ]; then\n            sum=$((sum + num))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  for num\
    \ in $arr; do\n    if [[ $i -ge $k ]]; then\n      break\n    fi\n    if [[ ${#num}\
    \ -le 2 ]]; then\n      sum=$((sum + num))\n    fi\n    i=$((i + 1))\n  done\n\
    \  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    local -i i=0\n\
    \    local -i len=0\n    local -i num=0\n    local -i num_digits=0\n    local\
    \ -i num_digits_max=2\n    local -i num_digits_min=1\n    local -i num_digits_min_max=$((num_digits_min\
    \ + num_digits_max))\n    local -i num_digits_min_max_minus_1=$((num_digits_min_max\
    \ - 1))\n    local -i num_digits_min_max_minus_2=$((num_digits_min_max - 2))\n\
    \    local -i num_digits_min_max_minus_3=$((num_digits_min_max - 3))\n    local\
    \ -i num_digits_min_max_minus_4=$((num_digits_min_max - 4))\n    local -i num_digits_min_max_minus_5=$((num_digits_min_max\
    \ - 5))\n    local -i num_digits_min_max_minus_6=$((num_digits_min_max - 6))\n\
    \    local -i num_digits_min_max_minus_7=$((num_digits_min_max - 7))\n    local\
    \ -i num_digits_min_max_minus_8=$((num_digits_min_max - 8))\n    local -i num_digits_min_max_minus_9=$((num_digits_min_max\
    \ - 9))\n    local -i num_digits_min_max_minus_10=$((num_digits_min_max - 10))\n\
    \    local -i num_digits_min_max_minus_11=$((num_digits_min_max - 11))\n    local\
    \ -i num_digits_min_max_minus_12=$((num_digits_min_max - 12))\n    local -i num_digits_min_max_minus_13=$((num_digits_min_max\
    \ - 13))\n    local -i num_dig\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_sfxuql0.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmp_sfxuql0.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp_sfxuql0.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmp_sfxuql0.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    local i=0\n   \
    \ while [[ $i -lt $k ]]; do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n     \
    \       ((sum+=${arr[$i]}))\n        fi\n        ((i++))\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmptc6e5tjv.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmptc6e5tjv.sh: line 20: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmptc6e5tjv.sh: line 20: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmptc6e5tjv.sh: line 20: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in ${arr[@]:0:$k};\
    \ do\n        if [[ $i -lt 100 ]]; then\n            ((sum+=i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkh_qfv7a.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=(\"$@\")\n  local -i k=\"${arr[-1]}\"\n  local -i sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      sum+=${arr[i]}\n\
    \    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"\
    3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n\
    \    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpky_i2j6p.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  local i=0\n  while [[ $i\
    \ -lt $k ]]; do\n    local num=${arr[$i]}\n    if [[ $num -lt 100 ]]; then\n \
    \     sum=$((sum + num))\n    fi\n    i=$((i + 1))\n  done\n  echo \"$sum\"\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp6kivp7qf.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in ${arr[@]:0:$k};\
    \ do\n        if [[ $i -lt 100 ]]; then\n            ((sum += i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpfbcky21a.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for (( i=0; i<$k;\
    \ i++ )); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n  \
    \  add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    local -i i=0\n\
    \    local -i len=0\n    local -i num=0\n    local -i num_digits=0\n    local\
    \ -i num_digits_max=2\n    local -i num_digits_max_minus_one=1\n    local -i num_digits_max_minus_two=0\n\
    \    local -i num_digits_max_minus_three=0\n    local -i num_digits_max_minus_four=0\n\
    \    local -i num_digits_max_minus_five=0\n    local -i num_digits_max_minus_six=0\n\
    \    local -i num_digits_max_minus_seven=0\n    local -i num_digits_max_minus_eight=0\n\
    \    local -i num_digits_max_minus_nine=0\n    local -i num_digits_max_minus_ten=0\n\
    \    local -i num_digits_max_minus_eleven=0\n    local -i num_digits_max_minus_twelve=0\n\
    \    local -i num_digits_max_minus_thirteen=0\n    local -i num_digits_max_minus_fourteen=0\n\
    \    local -i num_digits_max_minus_fifteen=0\n    local -i num_digits_max_minus_sixteen=0\n\
    \    local -i num_digits_max_minus_seventeen=0\n    local -i num_digits_max_minus_eighteen=0\n\
    \    local -i num_digits_max_minus_nineteen=0\n    local -i num_digits_max_minus_twenty=0\n\
    \    local -i num_digits_max_minus_twenty_one=0\n    local -i num_digits_max_minus_twenty_two=0\n\
    \    local -i num_digits_max_minus_twenty_three=0\n    local -i num_digits_max_minus_twenty_four=0\n\
    \    local -i num_digits\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  for n\
    \ in $arr; do\n    if [ $i -lt $k ]; then\n      if [ ${#n} -le 2 ]; then\n  \
    \      sum=$((sum + n))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo \"\
    $sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for i in $(seq 0\
    \ $((k-1))); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[$i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            (( sum +=\
    \ ${arr[i]} ))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=$(echo $arr | cut -d \" \" -f $i)\n        if [[\
    \ $num -lt 100 ]]; then\n            ((sum += num))\n        fi\n    done\n  \
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9hm2r804.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in $(seq 1 $k); do\n\
    \    if [ ${#arr[$i]} -le 2 ]; then\n      sum=$((sum + arr[$i]))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpxs0vp2iq.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=()\n  local -i k\n  local -i i\n  local -i sum=0\n  IFS='\
    \ ' read -r -a arr <<< \"$1\"\n  k=\"$2\"\n  for ((i=0; i<k; i++)); do\n    if\
    \ [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=arr[i]))\n    fi\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local sum=0\n    local arr=($1)\n    for ((i=0; i<$2; i++)); do\n   \
    \     if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum + ${arr[$i]}))\n\
    \        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    local -i i=0\n\
    \    local -i len=0\n    local -i num=0\n    local -i num_digits=0\n    local\
    \ -i max_digits=2\n    local -i max_num=99\n    local -i min_num=10\n    arr=($1)\n\
    \    k=$2\n    len=${#arr[@]}\n    for ((i=0; i<k; i++)); do\n        num=${arr[i]}\n\
    \        num_digits=$(echo ${num} | wc -c)\n        if [[ $num_digits -le $max_digits\
    \ ]] && [[ $num -le $max_num ]] && [[ $num -ge $min_num ]]; then\n           \
    \ sum=$((sum + num))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    for num in $arr; do\n        if [ $i -ge $k ]; then\n            break\n\
    \        fi\n        if [ ${#num} -le 2 ]; then\n            sum=$((sum + num))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  while\
    \ [ $i -lt $k ]; do\n    local num=$(echo \"$arr\" | cut -d ' ' -f $((i+1)))\n\
    \    if [ ${#num} -le 2 ]; then\n      sum=$((sum+num))\n    fi\n    i=$((i+1))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=()\n  local -i k=0\n  local -i sum=0\n  local -i i=0\n  local\
    \ -i len=0\n  local -i num=0\n  local -i num_digits=0\n  local -i num_digits_max=2\n\
    \  local -i num_digits_min=1\n  local -i num_digits_min_max=2\n  local -i num_digits_max_max=3\n\
    \  local -i num_digits_min_min=0\n  local -i num_digits_max_min=1\n  local -i\
    \ num_digits_min_min_max=2\n  local -i num_digits_max_min_max=3\n  local -i num_digits_min_max_max=3\n\
    \  local -i num_digits_max_max_max=4\n  local -i num_digits_min_min_min=0\n  local\
    \ -i num_digits_max_min_min=1\n  local -i num_digits_min_min_min=0\n  local -i\
    \ num_digits_max_min_min=1\n  local -i num_digits_min_max_min=1\n  local -i num_digits_max_max_min=2\n\
    \  local -i num_digits_min_min_min_max=1\n  local -i num_digits_max_min_min_max=2\n\
    \  local -i num_digits_min_min_max_max=2\n  local -i num_digits_max_min_max_max=3\n\
    \  local -i num_digits_min_max_max_max=3\n  local -i num_digits_max_max_max_max=4\n\
    \  local -i num_digits_min_min_min_min=0\n  local -i num_digits_max_min_min_min=1\n\
    \  local -i num_digits_min_min_min_min=0\n  local -i num_digits_max_min_min_min=1\n\
    \  local -i num_\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    for num in $arr; do\n        if [[ $i -ge $k ]]; then\n            break\n\
    \        fi\n        if [[ $num -lt 100 ]]; then\n            sum=$((sum + num))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=$(echo $arr | cut -d' ' -f$i)\n        if [[ \"\
    $num\" =~ ^[0-9]{1,2}$ ]]; then\n            sum=$((sum + num))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp2_0dxpov.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 2
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    local -i i=0\n\
    \    local -i len=0\n    local -i num=0\n    local -i num_digits=0\n    local\
    \ -i max_digits=2\n    local -i max_num=99\n    local -i min_num=10\n    local\
    \ -i max_len=100\n    local -i min_len=1\n    local -i min_k=1\n    local -i max_k=0\n\
    \    local -i min_num_digits=1\n    local -i max_num_digits=2\n    local -i min_sum=0\n\
    \    local -i max_sum=0\n    local -i min_i=0\n    local -i max_i=0\n    local\
    \ -i min_num=0\n    local -i max_num=0\n\n    # Check if the number of arguments\
    \ is correct\n    if [[ $# -ne 2 ]]; then\n        echo \"Usage: $0 <space-separated\
    \ list> <integer>\"\n        exit 1\n    fi\n\n    # Check if the second argument\
    \ is an integer\n    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2\
    \ is not an integer\"\n        exit 1\n    fi\n\n    # Check if the second argument\
    \ is within the allowed range\n    if [[ $2 -lt $min_k ]] || [[ $2 -gt $max_len\
    \ ]]; then\n        echo \"Error: $2 is not within the allowed range\"\n     \
    \   exit 1\n    fi\n\n    # Check if the first argument is a space-separated list\n\
    \    if ! [[ $1 =~ ^[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+[[:space:]]+[0-9]+$\
    \ ]]; then\n        echo \"Error: $1 is not a space-separ\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfq6n87y_.sh: line 70: unexpected EOF while looking for matching
    `"''

    /tmp/tmpfq6n87y_.sh: line 74: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=()\n    local -i k=0\n    local -i sum=0\n    local -i i=0\n\
    \    local -i len=0\n    local -i num=0\n    local -i digits=0\n    local -i max_digits=2\n\
    \    local -i max_num=99\n    local -i min_num=10\n    arr=($1)\n    k=$2\n  \
    \  len=${#arr[@]}\n    for ((i=0; i<len; i++)); do\n        num=${arr[i]}\n  \
    \      digits=${#num}\n        if ((digits <= max_digits)); then\n           \
    \ if ((num <= max_num && num >= min_num)); then\n                sum=$((sum +\
    \ num))\n            fi\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in ${arr[@]:0:$k};\
    \ do\n        if [[ $i -lt 100 ]]; then\n            ((sum+=i))\n        fi\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpkh_qfv7a.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=(\"$@\")\n  local k=${arr[-1]}\n  unset arr[-1]\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ ${#i} -le 2 ]]; then\n      sum=$((sum\
    \ + i))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87\
    \ 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\"\
    ) = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n\
    \    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=$(echo $arr | cut -d' ' -f$i)\n        if [[ $num\
    \ -lt 100 ]]; then\n            sum=$((sum + num))\n        fi\n    done\n   \
    \ echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpwtk2yvfm.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    for num in $arr; do\n        if [[ $i -lt $k ]]; then\n            if [[\
    \ ${#num} -le 2 ]]; then\n                sum=$((sum + num))\n            fi\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n\
    \    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr\n    read -r -a arr <<< \"$1\"\n    local k=\"$2\"\n    local\
    \ sum=0\n    for ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n\
    \            ((sum+=${arr[i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121\
    \ 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\"\
    \ \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") =\
    \ \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n   \
    \ add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016804
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=($1)\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++)); do\n\
    \    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n  done\n\
    \  echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=$(echo \"${arr[$i]}\" | sed 's/^0*//')\n      \
    \  if [[ ${#num} -le 2 ]]; then\n            sum=$((sum + num))\n        fi\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\"\
    ) = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n \
    \   [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpdy97egza.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=$(echo $arr | cut -d \" \" -f $i)\n        if [\
    \ ${#num} -le 2 ]; then\n            sum=$((sum + num))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmp9n0cz0fd.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for ((i=0; i<k; i++));\
    \ do\n    if [[ ${arr[i]} -lt 100 ]]; then\n      ((sum+=${arr[i]}))\n    fi\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") =\
    \ \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n   \
    \ [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate\
    \ \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"\
    1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmprqkdn97t.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmprqkdn97t.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmprqkdn97t.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmprqkdn97t.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n  \
    \  local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ \"$i\" -lt 100 ]];\
    \ then\n            sum=$((sum + i))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpvtzf6q4h.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for i in $(seq 0\
    \ $((k-1))); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[$i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local arr=\"$1\"\n  local k=\"$2\"\n  local sum=0\n  local i=0\n  for num\
    \ in $arr; do\n    if [[ $i -lt $k ]]; then\n      if [[ $num -lt 100 ]]; then\n\
    \        sum=$((sum + num))\n      fi\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    local sum=0\n    for\
    \ ((i=0; i<k; i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n          \
    \  ((sum+=arr[i]))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpk4ab2pad.sh: line 18: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        if [[ ${arr[$i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[$i]}))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n  \
    \  add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3\
    \ 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_9wsn8xv.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmp_9wsn8xv.sh: line 19: sum + : syntax error: operand expected (error token
    is "+ ")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -a arr=(\"$@\")\n    local k=${arr[-1]}\n    unset arr[-1]\n  \
    \  local sum=0\n    for i in \"${arr[@]:0:$k}\"; do\n        if [[ $i -lt 100\
    \ ]]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp8w7_8bd4.sh: line 19: [[: 1 -2 -3 41 57 76 87 88 99: syntax error
    in expression (error token is "41 57 76 87 88 99")

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -n arr=$1\n  local k=$2\n  local sum=0\n  for i in $(seq 1 $k); do\n\
    \    local num=$(echo $arr | cut -d' ' -f$i)\n    if [[ $num -lt 100 ]]; then\n\
    \      sum=$((sum + num))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n \
    \   add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpykpksqxi.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for ((i=0; i<k;\
    \ i++)); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            ((sum+=${arr[i]}))\n\
    \        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add_elements \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\"\
    \ \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\"\
    \ ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[\
    \ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate\
    \ \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpop8nimco.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    /tmp/tmpop8nimco.sh: line 19: ((: sum+=: syntax error: operand expected (error
    token is "+=")

    '
  stdout: ''
  timestamp: 1660016804
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=(\"$@\")\n  local k=${arr[-1]}\n  unset arr[-1]\n  local sum=0\n\
    \  for ((i=0; i<k; i++)); do\n    local num=${arr[i]}\n    if [[ ${#num} -le 2\
    \ ]]; then\n      sum=$((sum + num))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=($1)\n    local k=$2\n    local sum=0\n    for (( i=0; i<k;\
    \ i++ )); do\n        if [[ ${arr[i]} -lt 100 ]]; then\n            sum=$((sum\
    \ + ${arr[i]}))\n        fi\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 -2\
    \ -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3 4000\
    \ 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"4\")\
    \ = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"24\"\
    \ ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local arr=\"$1\"\n    local k=\"$2\"\n    local sum=0\n    local i=0\n\
    \    for num in $arr; do\n        if [ $i -eq $k ]; then\n            break\n\
    \        fi\n        if [ ${#num} -le 2 ]; then\n            sum=$((sum + num))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate \"111 121 3\
    \ 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5 6 7 8 9\" \"\
    4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\" \"4\") = \"\
    24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n  local -a arr=()\n  local -i k=0\n  local -i sum=0\n  local -i i=0\n  local\
    \ -i len=0\n  local -i num=0\n  local -i num_digits=0\n  local -i max_digits=2\n\
    \  local -i max_num=99\n  local -i min_num=10\n  local -i min_num_digits=2\n \
    \ local -i max_num_digits=2\n  local -i max_num_digits_plus_one=3\n  local -i\
    \ min_num_digits_plus_one=3\n  local -i max_num_digits_minus_one=1\n  local -i\
    \ min_num_digits_minus_one=1\n  local -i max_num_digits_plus_one_minus_one=2\n\
    \  local -i min_num_digits_plus_one_minus_one=2\n  local -i max_num_digits_minus_one_plus_one=2\n\
    \  local -i min_num_digits_minus_one_plus_one=2\n  local -i max_num_digits_plus_one_plus_one=3\n\
    \  local -i min_num_digits_plus_one_plus_one=3\n  local -i max_num_digits_minus_one_minus_one=1\n\
    \  local -i min_num_digits_minus_one_minus_one=1\n  local -i max_num_digits_plus_one_minus_one_plus_one=3\n\
    \  local -i min_num_digits_plus_one_minus_one_plus_one=3\n  local -i max_num_digits_minus_one_plus_one_minus_one=1\n\
    \  local -i min_num_digits_minus_one_plus_one_minus_one=1\n  local -i max_num_digits_plus_one_plus_one_minus_one=3\n\
    \  local -i min_num_digits_plus_one_plus_one_minus_one=3\n  local -i max_num_dig\n\
    }\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n    [[ $(candidate\
    \ \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate \"11 21 3 90 5\
    \ 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3 4000 5 6 7 8 9\"\
    \ \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016805
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty array of integers arr and an integer\
    \ k, return\n# the sum of the elements with at most two digits from the first\
    \ k elements of arr.\n# Example:\n# >>> $(add_elements \"111 21 3 4000 5 6 7 8\
    \ 9\" \"4\")\n# \"24\"\n# Constraints:\n# 1. 1 <= len(arr) <= 100\n# 2. 1 <= k\
    \ <= len(arr)\n#\n# $1 is a space-separated list\n# $2 is an integer\nadd_elements()\
    \ {\n    local -n arr=$1\n    local k=$2\n    local sum=0\n    for i in $(seq\
    \ 1 $k); do\n        local num=$(echo $arr | cut -d ' ' -f $i)\n        if [[\
    \ $num -lt 100 ]]; then\n            sum=$((sum + num))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add_elements \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 -2 -3 41 57 76 87 88 99\" \"3\") = \"-4\" ]]\n   \
    \ [[ $(candidate \"111 121 3 4000 5 6\" \"2\") = \"0\" ]]\n    [[ $(candidate\
    \ \"11 21 3 90 5 6 7 8 9\" \"4\") = \"125\" ]]\n    [[ $(candidate \"111 21 3\
    \ 4000 5 6 7 8 9\" \"4\") = \"24\" ]]\n    [[ $(candidate \"1\" \"1\") = \"1\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpmjqm9cvi.sh: line 14: local: `1 -2 -3 41 57 76 87 88 99'': invalid
    variable name for name reference

    '
  stdout: ''
  timestamp: 1660016805

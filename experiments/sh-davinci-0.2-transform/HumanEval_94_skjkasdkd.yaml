name: HumanEval_94_skjkasdkd
language: sh
prompt: "#!/bin/bash\n# You are given a list of integers.\n# You need to find the\
  \ largest prime value and return the sum of its digits.\n# Examples:\n# >>> $(skjkasdkd\
  \ \"0 3 2 1 3 5 7 4 5 5 5 2 181 32 4 32 3 2 32 324 4 3\")\n# \"10\"\n# >>> $(skjkasdkd\
  \ \"1 0 1 8 2 4597 2 1 3 40 1 2 1 2 4 2 5 1\")\n# \"25\"\n# >>> $(skjkasdkd \"1\
  \ 3 1 32 5107 34 83278 109 163 23 2323 32 30 1 9 3\")\n# \"13\"\n# >>> $(skjkasdkd\
  \ \"0 724 32 71 99 32 6 0 5 91 83 0 5 6\")\n# \"11\"\n# >>> $(skjkasdkd \"0 81 12\
  \ 3 1 21\")\n# \"3\"\n# >>> $(skjkasdkd \"0 8 1 2 1 7\")\n# \"7\"\n#\n# $1 is a\
  \ space-separated list\nskjkasdkd() {\n"
tests: "}\n\ncandidate() {\n    skjkasdkd \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"0 3 2 1 3 5 7 4 5 5 5 2 181 32 4 32 3 2 32 324 4 3\") = \"10\" ]]\n\
  \    [[ $(candidate \"1 0 1 8 2 4597 2 1 3 40 1 2 1 2 4 2 5 1\") = \"25\" ]]\n \
  \   [[ $(candidate \"1 3 1 32 5107 34 83278 109 163 23 2323 32 30 1 9 3\") = \"\
  13\" ]]\n    [[ $(candidate \"0 724 32 71 99 32 6 0 5 91 83 0 5 6\") = \"11\" ]]\n\
  \    [[ $(candidate \"0 81 12 3 1 21\") = \"3\" ]]\n    [[ $(candidate \"0 8 1 2\
  \ 1 7\") = \"7\" ]]\n    [[ $(candidate \"8191\") = \"19\" ]]\n    [[ $(candidate\
  \ \"8191 123456 127 7\") = \"19\" ]]\n    [[ $(candidate \"127 97 8192\") = \"10\"\
  \ ]]\n}\n\nrun_test"
completions: ["  local -a arr=($1)\n  local max=0\n  for i in \"${arr[@]}\"; do\n\
    \    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n  done\n  local sum=0\n\
    \  while [[ $max -gt 0 ]]; do\n    sum=$((sum + max % 10))\n    max=$((max / 10))\n\
    \  done\n  echo $sum", "  local -a arr=($1)\n  local -a primes\n  local -a digits\n\
    \  local i j k\n  local max_prime=0\n  local max_prime_digits=0\n  local sum=0\n\
    \n  for ((i=0; i<${#arr[@]}; i++)); do\n    if [[ ${arr[$i]} -gt 1 ]]; then\n\
    \      for ((j=2; j<=${arr[$i]}/2; j++)); do\n        if [[ $((${arr[$i]}%$j))\
    \ -eq 0 ]]; then\n          break\n        fi\n      done\n      if [[ $j -eq\
    \ ${arr[$i]}/2+1 ]]; then\n        primes+=(${arr[$i]})\n      fi\n    fi\n  done\n\
    \n  for ((i=0; i<${#primes[@]}; i++)); do\n    if [[ ${primes[$i]} -gt $max_prime\
    \ ]]; then\n      max_prime=${primes[$i]}\n    fi\n  done\n\n  while [[ $max_prime\
    \ -gt 0 ]]; do\n    digits+=($(($max_prime%10)))\n    max_prime=$(($max_prime/10))\n\
    \  done\n\n  for ((i=0; i<${#digits[@]}; i++)); do\n    sum=$(($sum+${digits[$i]}))\n\
    \  done\n\n  echo $sum", "  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n  done\n  local sum=0\n  while [[ $max -gt 0\
    \ ]]; do\n    sum=$((sum + max % 10))\n    max=$((max / 10))\n  done\n  echo $sum",
  "  local max=0\n  for i in $1; do\n    if [ $i -gt $max ]; then\n      max=$i\n\
    \    fi\n  done\n  local sum=0\n  for (( i=0; i<${#max}; i++ )); do\n    sum=$((\
    \ sum + ${max:$i:1} ))\n  done\n  echo $sum", "\tlocal max=0\n\tfor i in $1; do\n\
    \t\tif [ $i -gt $max ]; then\n\t\t\tmax=$i\n\t\tfi\n\tdone\n\tlocal sum=0\n\t\
    while [ $max -gt 0 ]; do\n\t\tsum=$((sum + max % 10))\n\t\tmax=$((max / 10))\n\
    \tdone\n\techo $sum", "  local max=0\n  for i in $1; do\n    if [[ $i -gt $max\
    \ ]]; then\n      max=$i\n    fi\n  done\n  local sum=0\n  while [[ $max -gt 0\
    \ ]]; do\n    sum=$((sum + max % 10))\n    max=$((max / 10))\n  done\n  echo $sum",
  "  local -a arr=($1)\n  local max=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i\
    \ -gt $max ]]; then\n      max=$i\n    fi\n  done\n  local prime=0\n  for (( i=2;\
    \ i<=$max; i++ )); do\n    if [[ $max%$i -eq 0 ]]; then\n      prime=$i\n    \
    \  break\n    fi\n  done\n  local sum=0\n  while [[ $prime -gt 0 ]]; do\n    sum=$((sum\
    \ + prime%10))\n    prime=$((prime/10))\n  done\n  echo $sum", "  local -a arr=($1)\n\
    \  local -i max=0\n  for i in \"${arr[@]}\"; do\n    if (( i > max )); then\n\
    \      max=$i\n    fi\n  done\n  local -i sum=0\n  while (( max > 0 )); do\n \
    \   sum+=$(( max % 10 ))\n    max=$(( max / 10 ))\n  done\n  echo \"$sum\"", " \
    \ local -a arr=()\n  local -a primes=()\n  local -a digits=()\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local\
    \ -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n\
    \  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local\
    \ -i mmm=0\n ", "  local -a arr=($1)\n  local max=${arr[0]}\n  for i in \"${arr[@]}\"\
    ; do\n    if [[ $i -gt $max ]]; then\n      max=$i\n    fi\n  done\n  echo $max\
    \ | grep -o . | paste -sd+ | bc", "  local a\n  local b\n  local c\n  local d\n\
    \  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local A\n  local B\n  local C\n  local D\n  local E\n  local F\n\
    \  local G\n  local H\n  local I\n  local J\n  local K\n  local L\n  local M\n\
    \  local N\n  local O\n  local P\n  local Q\n  local R\n  local S\n  local T\n\
    \  local U\n  local V\n  local W\n  local X\n  local Y\n  local Z\n  local aa\n\
    \  local ab\n  local ac\n  local ad\n  local ae\n  local af\n  local ag\n  local\
    \ ah\n  local ai\n  local aj\n  local ak\n  local al\n  local am\n  local an\n\
    \  local ao\n  local ap\n  local aq\n  local ar\n  local as\n  local at\n  local\
    \ au\n  local av\n  local aw\n  local ax\n  local ay\n  local az\n  local aA\n\
    \  local aB\n  local aC\n  local aD\n  local aE\n  local aF\n  local aG\n  local\
    \ aH\n  local aI\n  local aJ\n  local aK\n  local aL\n  local aM\n  local aN\n\
    \  local aO\n  local aP\n  local aQ\n  local aR\n  local aS\n  local aT\n  local\
    \ aU\n  local aV\n  local aW\n  local aX\n  local aY\n  local aZ\n  local ba\n\
    \  local bb\n  local bc\n  local bd\n  local be\n  local bf\n  local bg\n  local\
    \ bh\n  local bi\n  local bj\n  local bk\n  local bl\n  local bm\n  local b",
  "  local -a arr=($1)\n  local -i max=0\n  for i in \"${arr[@]}\"; do\n    if ((i\
    \ > max)); then\n      max=$i\n    fi\n  done\n  local -i sum=0\n  while ((max\
    \ > 0)); do\n    sum+=$((max % 10))\n    max=$((max / 10))\n  done\n  echo \"\
    $sum\"", "\t# Write your code here\n\techo \"0\"", "  local -a a=($1)\n  local\
    \ -i i=0 j=0 max=0\n  for ((i=0; i<${#a[@]}; i++)); do\n    if ((a[i] > max));\
    \ then\n      max=a[i]\n    fi\n  done\n  echo $max | grep -o . | paste -sd+ |\
    \ bc", "  local -a a=($1)\n  local -a b=()\n  local -a c=()\n  local -a d=()\n\
    \  local -a e=()\n  local -a f=()\n  local -a g=()\n  local -a h=()\n  local -a\
    \ i=()\n  local -a j=()\n  local -a k=()\n  local -a l=()\n  local -a m=()\n \
    \ local -a n=()\n  local -a o=()\n  local -a p=()\n  local -a q=()\n  local -a\
    \ r=()\n  local -a s=()\n  local -a t=()\n  local -a u=()\n  local -a v=()\n \
    \ local -a w=()\n  local -a x=()\n  local -a y=()\n  local -a z=()\n  local -a\
    \ A=()\n  local -a B=()\n  local -a C=()\n  local -a D=()\n  local -a E=()\n \
    \ local -a F=()\n  local -a G=()\n  local -a H=()\n  local -a I=()\n  local -a\
    \ J=()\n  local -a K=()\n  local -a L=()\n  local -a M=()\n  local -a N=()\n \
    \ local -a O=()\n  local -a P=()\n  local -a Q=()\n  local -a R=()\n  local -a\
    \ S=()\n  local -a T=()\n  local -a U=()\n  local -a V=()\n  local -a W=()\n \
    \ local -a X=()\n  local -a Y=()\n  local -a Z=()\n  local -a aa=()\n  local -a\
    \ ab=()\n  local -a ac=()\n  local -a ad=()\n  local -a ae=()\n  local -a af=()\n\
    \  local -a ag=()\n  local -a ah=()\n  local -a ai=()\n  local -a aj=()\n  local\
    \ -a ak=()\n ", "  local nums=($1)\n  local largest_prime=0\n  for num in ${nums[@]};\
    \ do\n    if [[ $num -gt $largest_prime ]]; then\n      if is_prime $num; then\n\
    \        largest_prime=$num\n      fi\n    fi\n  done\n  echo $largest_prime |\
    \ sed -e 's/\\(.\\)/\\1\\n/g' | awk '{sum+=$1} END {print sum}'", "  local -a\
    \ arr=($1)\n  local -i max=0\n  for i in \"${arr[@]}\"; do\n    if (( i > max\
    \ )); then\n      max=$i\n    fi\n  done\n  local -i sum=0\n  while (( max > 0\
    \ )); do\n    sum+=$(( max % 10 ))\n    max=$(( max / 10 ))\n  done\n  echo \"\
    $sum\"", "  local largest_prime=0\n  for i in $1; do\n    if [[ $i -gt $largest_prime\
    \ ]]; then\n      if [[ $i -eq 2 ]] || [[ $i -eq 3 ]] || [[ $i -eq 5 ]] || [[\
    \ $i -eq 7 ]]; then\n        largest_prime=$i\n      elif [[ $((i % 2)) -ne 0\
    \ ]] && [[ $((i % 3)) -ne 0 ]] && [[ $((i % 5)) -ne 0 ]] && [[ $((i % 7)) -ne\
    \ 0 ]]; then\n        largest_prime=$i\n      fi\n    fi\n  done\n  local sum=0\n\
    \  for (( i=0; i<${#largest_prime}; i++ )); do\n    sum=$((sum + ${largest_prime:$i:1}))\n\
    \  done\n  echo $sum", "  local -a arr=(\"$@\")\n  local -i max=0\n  for i in\
    \ \"${arr[@]}\"; do\n    ((i > max)) && max=$i\n  done\n  local -i i=2\n  local\
    \ -i j=0\n  local -i sum=0\n  while ((i <= max)); do\n    if ((max % i == 0));\
    \ then\n      max=$((max / i))\n      j=$i\n    else\n      ((++i))\n    fi\n\
    \  done\n  while ((j > 0)); do\n    sum=$((sum + j % 10))\n    j=$((j / 10))\n\
    \  done\n  echo \"$sum\"", "    local -a arr\n    local -i i\n    local -i max\n\
    \    local -i prime\n    local -i sum\n    local -i tmp\n    local -i x\n    local\
    \ -i y\n\n    IFS=' ' read -r -a arr <<< \"$1\"\n    max=0\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        x=${arr[i]}\n        if ((x > max)); then\n            max=x\n\
    \        fi\n    done\n\n    prime=0\n    for ((i=2; i<=max; i++)); do\n     \
    \   tmp=0\n        for ((y=2; y<i; y++)); do\n            if ((i % y == 0)); then\n\
    \                tmp=1\n                break\n            fi\n        done\n\
    \        if ((tmp == 0)); then\n            prime=i\n        fi\n    done\n\n\
    \    sum=0\n    while ((prime > 0)); do\n        sum=$((sum + prime % 10))\n \
    \       prime=$((prime / 10))\n    done\n\n    echo \"$sum\""]
stop_tokens:
- "\n}"

name: HumanEval_101_words_string
language: sh
prompt: "#!/bin/bash\n# You will be given a string of words separated by commas or\
  \ spaces. Your task is\n# to split the string into words and return an array of\
  \ the words.\n# For example:\n# >>> $(words_string \"Hi, my name is John\")\n# ['\"\
  Hi\"', '\"my\"', '\"name\"', '\"is\"', '\"John\"']\n# >>> $(words_string \"One,\
  \ two, three, four, five, six\")\n# ['\"One\"', '\"two\"', '\"three\"', '\"four\"\
  ', '\"five\"', '\"six\"']\n#\n# $1 is a string\nwords_string() {\n"
tests: "}\n\ncandidate() {\n    words_string \"$@\"\n}\n\nset -e\nrun_test() {\n \
  \   [[ $(candidate \"Hi, my name is John\") = \"Hi my name is John\" ]]\n    [[\
  \ $(candidate \"One, two, three, four, five, six\") = \"One two three four five\
  \ six\" ]]\n    [[ $(candidate \"Hi, my name\") = \"Hi my name\" ]]\n    [[ $(candidate\
  \ \"One,, two, three, four, five, six,\") = \"One two three four five six\" ]]\n\
  \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"ahmed     , gamal\") =\
  \ \"ahmed gamal\" ]]\n}\n\nrun_test"
completions: ["    echo \"$1\" | tr ' ' '\\n' | tr ',' '\\n' | tr -d '\"' | tr '\\\
    n' ' ' | sed 's/^ *//g' | sed 's/ *$//g'", "  echo \"$1\" | tr -s ' ' '\\n' |\
    \ tr -s ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", "  echo \"$1\" | tr -s '[:space:]'\
    \ '\\n' | tr -d ',' | tr -d '\"' | tr '\\n' ' ' | sed 's/^ *//g' | sed 's/ *$//g'",
  "  echo \"$1\" | sed -e 's/[, ]\\+/\", \"/g' | sed -e 's/^/\"/' -e 's/$/\"/'", " \
    \ local string=$1\n  local words=()\n  local word=''\n  local i=0\n  local c=''\n\
    \  local in_word=false\n  local in_quote=false\n  local quote_char=''\n  local\
    \ len=${#string}\n  for ((i=0; i<len; i++)); do\n    c=${string:$i:1}\n    if\
    \ [[ $in_word == true ]]; then\n      if [[ $in_quote == true ]]; then\n     \
    \   if [[ $c == $quote_char ]]; then\n          in_quote=false\n        fi\n \
    \     else\n        if [[ $c == '\"' || $c == \"'\" ]]; then\n          in_quote=true\n\
    \          quote_char=$c\n        elif [[ $c == ' ' || $c == ',' ]]; then\n  \
    \        in_word=false\n          words+=(\"$word\")\n          word=''\n    \
    \    fi\n      fi\n      word+=$c\n    else\n      if [[ $c != ' ' && $c != ','\
    \ ]]; then\n        in_word=true\n        word+=$c\n      fi\n    fi\n  done\n\
    \  if [[ $in_word == true ]]; then\n    words+=(\"$word\")\n  fi\n  echo ${words[@]}",
  "  echo $1 | sed -E 's/[, ]+/\" \"/g'", "  local string=$1\n  local words=()\n \
    \ local word=\"\"\n  local i=0\n  local c=\"\"\n  local in_word=0\n  local in_quote=0\n\
    \  local in_space=0\n  local in_comma=0\n  local in_word_quote=0\n  local in_word_space=0\n\
    \  local in_word_comma=0\n  local in_quote_space=0\n  local in_quote_comma=0\n\
    \  local in_space_comma=0\n  local in_word_quote_space=0\n  local in_word_quote_comma=0\n\
    \  local in_word_space_comma=0\n  local in_quote_space_comma=0\n  local in_word_quote_space_comma=0\n\
    \  local in_word_quote_space_comma_word=0\n  local in_word_quote_space_comma_quote=0\n\
    \  local in_word_quote_space_comma_space=0\n  local in_word_quote_space_comma_comma=0\n\
    \  local in_word_quote_space_comma_word_quote=0\n  local in_word_quote_space_comma_word_space=0\n\
    \  local in_word_quote_space_comma_word_comma=0\n  local in_word_quote_space_comma_quote_space=0\n\
    \  local in_word_quote_space_comma_quote_comma=0\n  local in_word_quote_space_comma_space_comma=0\n\
    \  local in_word_quote_space_comma_word_quote_space=0\n  local in_word_quote_space_comma_word_quote_comma=0\n\
    \  local in_word_quote_space_comma_word_space_comma=0\n  local in_word_quote_space_comma_quote_space_comma=0\n\
    \  local in_word_quote_space_comma_word_quote_space_comma=0\n  local in_word_quote_space_comma_word_quote_space_comma_word=",
  "  local words_string=\"$1\"\n  local words_array=()\n  local word=\"\"\n  local\
    \ i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local\
    \ o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local\
    \ u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local\
    \ A=0\n  local B=0\n  local C=0\n  local D=0\n  local E=0\n  local F=0\n  local\
    \ G=0\n  local H=0\n  local I=0\n  local J=0\n  local K=0\n  local L=0\n  local\
    \ M=0\n  local N=0\n  local O=0\n  local P=0\n  local Q=0\n  local R=0\n  local\
    \ S=0\n  local T=0\n  local U=0\n  local V=0\n  local W=0\n  local X=0\n  local\
    \ Y=0\n  local Z=0\n  local a=0\n  local b=0\n  local c=0\n  local d=0\n  local\
    \ e=0\n  local f=0\n  local g=0\n  local h=0\n  local i=0\n  local j=0\n  local\
    \ k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local\
    \ q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local\
    \ w=0\n  local x=0\n  local y=0\n  local z=0\n  local A=0\n  local B=0\n  local\
    \ C=0\n  local D=0\n  local E=0\n  local F=0\n  local G=0\n  local H=0\n  local\
    \ I=0\n  local J=0\n  local K=0\n  local", "    echo \"$1\" | tr -s '[:space:]'\
    \ '\\n' | tr -d ',' | tr -d '\"' | tr '\\n' ' ' | sed 's/^ *//g' | sed 's/ *$//g'",
  "    echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed 's/^/\"/g' | sed 's/$/\"\
    /g'", "  echo \"$1\" | sed -e 's/[, ]\\+/\", \"/g' | sed -e 's/^/\"/' -e 's/$/\"\
    /'", "  echo $1 | tr -s ' ' '\\n' | tr -s ',' '\\n' | sed 's/^/\"/' | sed 's/$/\"\
    /'", "    echo $1 | tr ',' ' ' | tr ' ' '\\n' | sed 's/^/\"/' | sed 's/$/\"/'",
  "  echo \"$1\" | tr -s '[:space:]' '\\n' | sed 's/^/\"/g' | sed 's/$/\"/g'", " \
    \ echo \"$1\" | sed -e 's/[, ]\\+/\", \"/g' | sed -e 's/^/\"/' -e 's/$/\"/'",
  "  local string=$1\n  local words=()\n  local word=''\n  local char=''\n  local\
    \ i=0\n  local j=0\n  local len=${#string}\n  local in_word=0\n  local in_quote=0\n\
    \  local quote_char=''\n  local escaped=0\n\n  while [ $i -lt $len ]; do\n   \
    \ char=${string:$i:1}\n    if [ $in_word -eq 0 ]; then\n      if [ \"$char\" =\
    \ '\"' ] || [ \"$char\" = \"'\" ]; then\n        in_quote=1\n        quote_char=$char\n\
    \      else\n        in_word=1\n        word=\"$char\"\n      fi\n    else\n \
    \     if [ $in_quote -eq 1 ]; then\n        if [ \"$char\" = '\\\\' ]; then\n\
    \          escaped=1\n        elif [ $escaped -eq 1 ]; then\n          escaped=0\n\
    \          word=\"$word$char\"\n        elif [ \"$char\" = \"$quote_char\" ];\
    \ then\n          in_quote=0\n          in_word=0\n          words[$j]=\"$word\"\
    \n          j=$((j+1))\n        else\n          word=\"$word$char\"\n        fi\n\
    \      else\n        if [ \"$char\" = ',' ] || [ \"$char\" = ' ' ]; then\n   \
    \       in_word=0\n          words[$j]=\"$word\"\n          j=$((j+1))\n     \
    \   else\n          word=\"$word$char\"\n        fi\n      fi\n    fi\n    i=$((i+1))\n\
    \  done\n\n  if [ $in_word -eq 1 ]; then\n    words[$j]=\"$word\"\n  fi\n\n  echo\
    \ \"${words[@]}\"", "  echo \"$1\" | sed -e 's/[, ]\\+/ /g' | tr ' ' '\\n' | sed\
    \ -e 's/^/\"/g' -e 's/$/\"/g' | tr '\\n' ' '", "  local str=$1\n  local words=()\n\
    \  local word=''\n  local char=''\n  local i=0\n  local len=${#str}\n  local in_word=false\n\
    \  local in_quotes=false\n  local escaped=false\n\n  while [ $i -lt $len ]; do\n\
    \    char=${str:$i:1}\n    if [ \"$char\" == '\\\\' ]; then\n      escaped=true\n\
    \    elif [ \"$char\" == '\"' ]; then\n      if [ \"$escaped\" == true ]; then\n\
    \        word+=$char\n        escaped=false\n      else\n        in_quotes=!$in_quotes\n\
    \      fi\n    elif [ \"$char\" == ' ' ] || [ \"$char\" == ',' ]; then\n     \
    \ if [ \"$in_quotes\" == true ]; then\n        word+=$char\n      elif [ \"$in_word\"\
    \ == true ]; then\n        words+=(\"\\\"$word\\\"\")\n        word=''\n     \
    \   in_word=false\n      fi\n    else\n      in_word=true\n      word+=$char\n\
    \    fi\n    i=$((i+1))\n  done\n\n  if [ \"$in_word\" == true ]; then\n    words+=(\"\
    \\\"$word\\\"\")\n  fi\n\n  echo ${words[@]}", "  echo \"$1\" | tr -s '[:space:]'\
    \ '\\n' | tr -d ',' | tr -d '\"' | tr '\\n' ' ' | sed -e 's/^[[:space:]]*//' -e\
    \ 's/[[:space:]]*$//'", "    echo \"$1\" | tr -s ' ' '\\n' | tr -s ',' '\\n' |\
    \ sed 's/^/\"/g' | sed 's/$/\"/g'"]
stop_tokens:
- "\n}"

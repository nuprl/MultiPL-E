name: HumanEval_155_even_odd_count
language: sh
prompt: "#!/bin/bash\n# Given an integer. return a tuple that has the number of even\
  \ and odd digits respectively.\n# Example:\n# >>> $(even_odd_count \"-12\")\n# ['\"\
  1\"', '\"1\"']\n# >>> $(even_odd_count \"123\")\n# ['\"1\"', '\"2\"']\n#\n# $1 is\
  \ an integer\neven_odd_count() {\n"
tests: "}\n\ncandidate() {\n    even_odd_count \"$@\"\n}\n\nset -e\nrun_test() {\n\
  \    [[ $(candidate \"7\") = \"0 1\" ]]\n    [[ $(candidate \"-78\") = \"1 1\" ]]\n\
  \    [[ $(candidate \"3452\") = \"2 2\" ]]\n    [[ $(candidate \"346211\") = \"\
  3 3\" ]]\n    [[ $(candidate \"-345821\") = \"3 3\" ]]\n    [[ $(candidate \"-2\"\
  ) = \"1 0\" ]]\n    [[ $(candidate \"-45347\") = \"2 3\" ]]\n    [[ $(candidate\
  \ \"0\") = \"1 0\" ]]\n}\n\nrun_test"
completions: ["    local even_count=0\n    local odd_count=0\n    local number=\"\
    $1\"\n    local digit\n    while [ \"$number\" -ne 0 ]; do\n        digit=$((number\
    \ % 10))\n        if [ $((digit % 2)) -eq 0 ]; then\n            even_count=$((even_count\
    \ + 1))\n        else\n            odd_count=$((odd_count + 1))\n        fi\n\
    \        number=$((number / 10))\n    done\n    echo \"[\\\"$even_count\\\", \\\
    \"$odd_count\\\"]\"", "  local even_count=0\n  local odd_count=0\n  local num=$1\n\
    \  while [ $num -ne 0 ]; do\n    local digit=$((num % 10))\n    if [ $((digit\
    \ % 2)) -eq 0 ]; then\n      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"$even_count\\\"\
    , \\\"$odd_count\\\"]\"", "  local even_count=0\n  local odd_count=0\n  local\
    \ digit\n  for (( i=0; i<${#1}; i++ )); do\n    digit=${1:$i:1}\n    if [[ \"\
    $digit\" == \"-\" ]]; then\n      continue\n    fi\n    if [[ $(( digit % 2 ))\
    \ -eq 0 ]]; then\n      even_count=$(( even_count + 1 ))\n    else\n      odd_count=$((\
    \ odd_count + 1 ))\n    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\
    \"]\"", "  local even_count=0\n  local odd_count=0\n  local number=$1\n  local\
    \ digit\n  while [ $number -ne 0 ]; do\n    digit=$((number % 10))\n    if [ $((digit\
    \ % 2)) -eq 0 ]; then\n      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n    number=$((number / 10))\n  done\n  echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"", "  local even_count=0\n  local odd_count=0\n  local\
    \ number=$1\n  local digit\n  while [ \"$number\" -gt 0 ]; do\n    digit=$((number\
    \ % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"", "  local\
    \ num=$1\n  local even_count=0\n  local odd_count=0\n  local digit\n  while [\
    \ \"$num\" -gt 0 ]; do\n    digit=$((num % 10))\n    if [ $((digit % 2)) -eq 0\
    \ ]; then\n      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n    num=$((num / 10))\n  done\n  echo \"[\\\"$even_count\\\"\
    , \\\"$odd_count\\\"]\"", "  local even_count=0\n  local odd_count=0\n  local\
    \ num=$1\n  local digit\n  while [ $num -gt 0 ]; do\n    digit=$((num % 10))\n\
    \    if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count + 1))\n\
    \    else\n      odd_count=$((odd_count + 1))\n    fi\n    num=$((num / 10))\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"", "    local even_count=0\n\
    \    local odd_count=0\n    local num=\"$1\"\n    local digit\n    while [ \"\
    $num\" -ne 0 ]; do\n        digit=$((num % 10))\n        if [ $((digit % 2)) -eq\
    \ 0 ]; then\n            even_count=$((even_count + 1))\n        else\n      \
    \      odd_count=$((odd_count + 1))\n        fi\n        num=$((num / 10))\n \
    \   done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"", "  local even_count=0\n\
    \  local odd_count=0\n  local num_str=\"$1\"\n  local num_len=${#num_str}\n  local\
    \ i=0\n  local digit=0\n  for ((i=0; i<num_len; i++)); do\n    digit=${num_str:i:1}\n\
    \    if [[ $((digit % 2)) -eq 0 ]]; then\n      even_count=$((even_count + 1))\n\
    \    else\n      odd_count=$((odd_count + 1))\n    fi\n  done\n  echo \"[\\\"\
    $even_count\\\", \\\"$odd_count\\\"]\"", "    local number=$1\n    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    for (( i=0; i<${#number}; i++ ));\
    \ do\n        digit=${number:$i:1}\n        if [[ $digit =~ ^[0-9]+$ ]]; then\n\
    \            if [[ $((digit % 2)) -eq 0 ]]; then\n                ((even_count++))\n\
    \            else\n                ((odd_count++))\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"", "    local\
    \ even_count=0\n    local odd_count=0\n    local num=$1\n    local digit\n   \
    \ while [[ $num -gt 0 ]]; do\n        digit=$((num % 10))\n        if [[ $((digit\
    \ % 2)) -eq 0 ]]; then\n            even_count=$((even_count + 1))\n        else\n\
    \            odd_count=$((odd_count + 1))\n        fi\n        num=$((num / 10))\n\
    \    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"", "  local even_count=0\n\
    \  local odd_count=0\n  local number=$1\n  local digit\n\n  while [ $number -ne\
    \ 0 ]; do\n    digit=$((number % 10))\n    if [ $((digit % 2)) -eq 0 ]; then\n\
    \      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n    number=$((number / 10))\n  done\n\n  echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"", "  local even=0\n  local odd=0\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    if (( ${1:$i:1} % 2 == 0 )); then\n      (( even++ ))\n    else\n\
    \      (( odd++ ))\n    fi\n  done\n  echo \"[\\\"$even\\\", \\\"$odd\\\"]\"",
  "  local even_count=0\n  local odd_count=0\n  local num=\"$1\"\n  local digit\n\
    \  while [ -n \"$num\" ]; do\n    digit=\"${num: -1}\"\n    if [ \"$((digit %\
    \ 2))\" -eq 0 ]; then\n      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n    num=\"${num%?}\"\n  done\n  echo \"[\\\"$even_count\\\",\
    \ \\\"$odd_count\\\"]\"", "  local even_count=0\n  local odd_count=0\n  local\
    \ number=$1\n  local digit\n  while [[ $number -ne 0 ]]; do\n    digit=$((number\
    \ % 10))\n    if [[ $((digit % 2)) -eq 0 ]]; then\n      even_count=$((even_count\
    \ + 1))\n    else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number\
    \ / 10))\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"", "  local\
    \ even_count=0\n  local odd_count=0\n  local number=$1\n  local digit\n  while\
    \ [ $number -ne 0 ]; do\n    digit=$((number % 10))\n    if [ $((digit % 2)) -eq\
    \ 0 ]; then\n      even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count\
    \ + 1))\n    fi\n    number=$((number / 10))\n  done\n  echo \"[\\\"$even_count\\\
    \", \\\"$odd_count\\\"]\"", "  local even_count=0\n  local odd_count=0\n  local\
    \ digits=$(echo \"$1\" | sed 's/-//g')\n  for (( i=0; i<${#digits}; i++ )); do\n\
    \    local digit=${digits:$i:1}\n    if [[ $((digit % 2)) -eq 0 ]]; then\n   \
    \   even_count=$((even_count + 1))\n    else\n      odd_count=$((odd_count + 1))\n\
    \    fi\n  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"", "    local\
    \ even=0\n    local odd=0\n    local num=$1\n    while [[ $num -ne 0 ]]; do\n\
    \        local digit=$((num % 10))\n        if [[ $((digit % 2)) -eq 0 ]]; then\n\
    \            even=$((even + 1))\n        else\n            odd=$((odd + 1))\n\
    \        fi\n        num=$((num / 10))\n    done\n    echo \"[\\\"$even\\\", \\\
    \"$odd\\\"]\"", "  local even_count=0\n  local odd_count=0\n  local number=$1\n\
    \  local digit\n  while [ $number -ne 0 ]; do\n    digit=$((number % 10))\n  \
    \  if [ $((digit % 2)) -eq 0 ]; then\n      even_count=$((even_count + 1))\n \
    \   else\n      odd_count=$((odd_count + 1))\n    fi\n    number=$((number / 10))\n\
    \  done\n  echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\"", "    local even_count=0\n\
    \    local odd_count=0\n    local digit\n    for (( i=0; i<${#1}; i++ )); do\n\
    \        digit=\"${1:$i:1}\"\n        if [[ $digit =~ ^[0-9]+$ ]]; then\n    \
    \        if (( digit % 2 == 0 )); then\n                (( even_count++ ))\n \
    \           else\n                (( odd_count++ ))\n            fi\n        fi\n\
    \    done\n    echo \"[\\\"$even_count\\\", \\\"$odd_count\\\"]\""]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_47_median
results:
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local len=${#l[@]}\n\
    \    local mid=$((len/2))\n    local m\n    if ((len % 2 == 0)); then\n      \
    \  m=$(echo \"scale=1; (${l[mid]} + ${l[mid-1]})/2\" | bc)\n    else\n       \
    \ m=${l[mid]}\n    fi\n    echo $m\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local t=0\n    for ((i=0; i<m;\
    \ i++)); do\n        for ((j=i+1; j<m; j++)); do\n            if ((${l[i]} > ${l[j]}));\
    \ then\n                t=${l[i]}\n                l[i]=${l[j]}\n            \
    \    l[j]=$t\n            fi\n        done\n    done\n    if ((m % 2 == 0)); then\n\
    \        ((k = m / 2))\n        echo \"$(echo \"scale=1; (${l[k-1]} + ${l[k]})/2\"\
    \ | bc)\"\n    else\n        ((k = (m - 1) / 2))\n        echo \"${l[k]}\"\n \
    \   fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i=0\n\
    \    local m=0\n    local n=${#l[@]}\n    local sum=0\n    local avg=0\n    local\
    \ mid=0\n    local max=0\n    local min=0\n    local med=0\n    local med_low=0\n\
    \    local med_high=0\n    local med_low_index=0\n    local med_high_index=0\n\
    \    local med_index=0\n    local med_index_low=0\n    local med_index_high=0\n\
    \    local med_index_low_index=0\n    local med_index_high_index=0\n    local\
    \ med_index_index=0\n    local med_index_index_low=0\n    local med_index_index_high=0\n\
    \    local med_index_index_low_index=0\n    local med_index_index_high_index=0\n\
    \    local med_index_index_index=0\n    local med_index_index_index_low=0\n  \
    \  local med_index_index_index_high=0\n    local med_index_index_index_low_index=0\n\
    \    local med_index_index_index_high_index=0\n    local med_index_index_index_index=0\n\
    \    local med_index_index_index_index_low=0\n    local med_index_index_index_index_high=0\n\
    \    local med_index_index_index_index_low_index=0\n    local med_index_index_index_index_high_index=0\n\
    \    local med_index_index_index_index_index=0\n    local med_index_index_index_index_index_low=0\n\
    \    local med_index_index_index_index_index_high=0\n    local med_index_index_index_index_index_low_index=0\n\
    \    local med_index_index_index_index_index_high_index=0\n    local med_index_index_index_index_index_index=0\n\
    \    local med_index_index_index_index_index_index_low=0\n    local med_index_index_index_\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i=0\n\
    \    local j=0\n    local temp=0\n    local n=${#l[@]}\n    for ((i=0; i<n; i++))\n\
    \    do\n        for ((j=0; j<n-i-1; j++))\n        do\n            if ((${l[j]}\
    \ > ${l[$((j+1))]}))\n            then\n                temp=${l[j]}\n       \
    \         l[$j]=${l[$((j+1))]}\n                l[$((j+1))]=$temp\n          \
    \  fi\n        done\n    done\n    if (($n % 2 == 0))\n    then\n        echo\
    \ \"$(echo \"scale=1; (${l[$((n/2))]} + ${l[$((n/2-1))]})/2\" | bc -l)\"\n   \
    \ else\n        echo \"${l[$((n/2))]}\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i\n    local s\n    local sum=0\n    for i in ${l[@]}; do\n       \
    \ sum=$(echo \"$sum + $i\" | bc)\n    done\n    s=$(echo \"$sum / $m\" | bc -l)\n\
    \    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local s=0\n    local i=0\n    for e in ${l[@]}; do\n        s=$(echo \"$s\
    \ + $e\" | bc)\n    done\n    echo \"$s / $m\" | bc -l\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n | awk\
    \ '{s+=$1} END {print s}')\n  if ((n%2==1)); then\n    echo \"${l[$m]}\"\n  else\n\
    \    echo \"$(echo \"scale=1; $s/$n\" | bc -l)\"\n  fi\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i\n    local j\n    local tmp\n    for ((i=0; i<m; i++)); do\n    \
    \    for ((j=i+1; j<m; j++)); do\n            if (($(echo \"${l[$i]} > ${l[$j]}\"\
    \ | bc -l))); then\n                tmp=${l[$i]}\n                l[$i]=${l[$j]}\n\
    \                l[$j]=$tmp\n            fi\n        done\n    done\n    if (($(echo\
    \ \"$m % 2 == 0\" | bc -l))); then\n        echo \"$(echo \"scale=1; (${l[$(($m/2))]}\
    \ + ${l[$(($m/2-1))]}) / 2\" | bc -l)\"\n    else\n        echo \"${l[$(($m/2))]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local t=0\n    local s=0\n \
    \   local r=0\n    local p=0\n    local q=0\n    local n=0\n    local o=0\n  \
    \  local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n   \
    \ local h=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n    local\
    \ b=0\n    local v=0\n    local w=0\n    local u=0\n    local A=0\n    local B=0\n\
    \    local C=0\n    local D=0\n    local E=0\n    local F=0\n    local G=0\n \
    \   local H=0\n    local I=0\n    local J=0\n    local K=0\n    local L=0\n  \
    \  local M=0\n    local N=0\n    local O=0\n    local P=0\n    local Q=0\n   \
    \ local R=0\n    local S=0\n    local T=0\n    local U=0\n    local V=0\n    local\
    \ W=0\n    local X=0\n    local Y=0\n    local Z=0\n    local aa=0\n    local\
    \ ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local\
    \ ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local\
    \ al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local\
    \ aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local\
    \ av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local\
    \ ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local aa\n    local bb\n    local cc\n    local\
    \ dd\n    local ee\n    local ff\n    local gg\n    local hh\n    local ii\n \
    \   local jj\n    local kk\n    local ll\n    local mm\n    local nn\n    local\
    \ oo\n    local pp\n    local qq\n    local rr\n    local ss\n    local tt\n \
    \   local uu\n    local vv\n    local ww\n    local xx\n    local yy\n    local\
    \ zz\n    local aaa\n    local bbb\n    local ccc\n    local ddd\n    local eee\n\
    \    local fff\n    local ggg\n    local hhh\n    local iii\n    local jjj\n \
    \   local kkk\n    local lll\n    local mmm\n    local nnn\n    local ooo\n  \
    \  local ppp\n    local qqq\n    local rrr\n    local sss\n    local ttt\n   \
    \ local uuu\n    local vvv\n    local www\n    local xxx\n    local yyy\n    local\
    \ zzz\n    local aaaa\n    local bbbb\n    local cccc\n    local dddd\n    local\
    \ eeee\n    local ffff\n    local gggg\n    local hhhh\n    local iiii\n    local\
    \ jjjj\n    local kkkk\n    local llll\n    local mmmm\n    local nnnn\n    local\
    \ oooo\n    local pppp\n    local qqqq\n    local rrrr\n    local ssss\n    local\
    \ tttt\n    local uuuu\n    local vvvv\n    local wwww\n    local xxxx\n    local\
    \ yyyy\n    local zzzz\n    local aaaaa\n    local bbbbb\n    local ccccc\n  \
    \  local ddddd\n    local eeeee\n    local fffff\n    local ggggg\n    local hhhhh\n\
    \    local iii\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i=$((${#l[@]}/2))\n\
    \    local m=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n | sed -n \"${i}p\")\n\
    \    echo \"$m\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local n=$(echo\
    \ \"$l\" | wc -w)\n    local m=$((n/2))\n    local s=$(echo \"$l\" | tr ' ' '\\\
    n' | sort -n)\n    local r=$(echo \"$s\" | sed -n \"${m}p\")\n    if [ $((n%2))\
    \ -eq 0 ]; then\n        local r2=$(echo \"$s\" | sed -n \"$((m-1))p\")\n    \
    \    r=$(echo \"scale=1; ($r+$r2)/2\" | bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local v=$(printf \"%s\\n\" \"$s\" | sed -n \"$((m+1))p\")\n    if ((n%2==0));\
    \ then\n        local v2=$(printf \"%s\\n\" \"$s\" | sed -n \"$((m))p\")\n   \
    \     v=$(echo \"scale=1; ($v+$v2)/2\" | bc)\n    fi\n    echo \"$v\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n\
    \        s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local i\n    local m\n    local s\n    local t\n    local v\n    for i in\
    \ $(seq 0 $((n-1))); do\n        v=${l[$i]}\n        if [[ -z $m ]]; then\n  \
    \          m=$v\n        elif [[ $v -lt $m ]]; then\n            t=$m\n      \
    \      m=$v\n            v=$t\n        fi\n        if [[ -z $s ]]; then\n    \
    \        s=$v\n        elif [[ $v -gt $s ]]; then\n            t=$s\n        \
    \    s=$v\n            v=$t\n        fi\n    done\n    if [[ $((n%2)) -eq 0 ]];\
    \ then\n        echo $(((m+s)/2))\n    else\n        echo $m\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  local s=${l[@]}\n  local i\n  for ((i=0; i<n; i++)); do\n\
    \    s=${s//${l[i]}/}\n    if ((${#s}<m)); then\n      echo ${l[i]}\n      return\n\
    \    fi\n  done\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local n=$(echo\
    \ \"$l\" | wc -w)\n    local m=$((n / 2))\n    local s=$(echo \"$l\" | sort -n)\n\
    \    if ((n % 2 == 0)); then\n        echo \"$s\" | awk -v m=$m '{print ($m +\
    \ $(m + 1)) / 2.0}'\n    else\n        echo \"$s\" | awk -v m=$m '{print $m}'\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$(( ${#l[@]}\
    \ / 2 ))\n  local r=$(( ${#l[@]} % 2 ))\n  local s=$(printf \"%s\\n\" \"${l[@]}\"\
    \ | sort -n)\n  local v=($s)\n  if (( r == 0 )); then\n    echo \"$(( (${v[$m-1]}\
    \ + ${v[$m]}) / 2 ))\"\n  else\n    echo \"${v[$m]}\"\n  fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local tmp=0\n    local m=0\n    local n2=0\n\
    \    local n4=0\n    local n5=0\n    local n6=0\n    local n7=0\n    local n8=0\n\
    \    local n9=0\n    local n10=0\n    local n11=0\n    local n12=0\n    local\
    \ n13=0\n    local n14=0\n    local n15=0\n    local n16=0\n    local n17=0\n\
    \    local n18=0\n    local n19=0\n    local n20=0\n    local n21=0\n    local\
    \ n22=0\n    local n23=0\n    local n24=0\n    local n25=0\n    local n26=0\n\
    \    local n27=0\n    local n28=0\n    local n29=0\n    local n30=0\n    local\
    \ n31=0\n    local n32=0\n    local n33=0\n    local n34=0\n    local n35=0\n\
    \    local n36=0\n    local n37=0\n    local n38=0\n    local n39=0\n    local\
    \ n40=0\n    local n41=0\n    local n42=0\n    local n43=0\n    local n44=0\n\
    \    local n45=0\n    local n46=0\n    local n47=0\n    local n48=0\n    local\
    \ n49=0\n    local n50=0\n    local n51=0\n    local n52=0\n    local n53=0\n\
    \    local n54=0\n    local n55=0\n    local n56=0\n    local n57=0\n    local\
    \ n58=0\n    local n59=0\n    local n60=0\n    local n61=0\n    local n62=0\n\
    \    local n63=0\n    local n64=0\n    local n65=0\n    local n66=0\n    local\
    \ n67=0\n    local n68=0\n    local n69=0\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($(echo $1 | tr ' '\
    \ '\\n' | sort -n))\n    local n=$((${#l[@]} / 2))\n    echo ${l[$n]}\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    l=($(echo \"$1\" | tr ' ' '\\\
    n' | sort -n))\n    n=$(echo \"$1\" | wc -w)\n    if (( $n % 2 == 1 )); then\n\
    \        echo ${l[$((n/2))]}\n    else\n        echo $(echo \"${l[$((n/2-1))]}\
    \ + ${l[$((n/2))]}\" | bc -l)/2 | bc -l\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r=$(echo \"$s\" | sed -n \"$m p\")\n    if ((n%2==0)); then\n     \
    \   local r2=$(echo \"$s\" | sed -n \"$((m-1)) p\")\n        r=$(echo \"scale=1;\
    \ ($r+$r2)/2\" | bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local n=$(( ${#l[@]} % 2 ))\n    if [ $n -eq 0 ]; then\n\
    \        echo \"$(echo \"scale=1; (${l[$m-1]} + ${l[$m]}) / 2\" | bc)\"\n    else\n\
    \        echo \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n \
    \       s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo \"\
    $s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local t=0\n    local n=0\n \
    \   local s=0\n    local r=0\n    local p=0\n    local q=0\n    local o=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local aa=0\n    local\
    \ ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n    local af=0\n    local\
    \ ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n    local ak=0\n    local\
    \ al=0\n    local am=0\n    local an=0\n    local ao=0\n    local ap=0\n    local\
    \ aq=0\n    local ar=0\n    local as=0\n    local at=0\n    local au=0\n    local\
    \ av=0\n    local aw=0\n    local ax=0\n    local ay=0\n    local az=0\n    local\
    \ ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n    local be=0\n    local\
    \ bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n    local bj=0\n    local\
    \ bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n    local bo=0\n    local\
    \ bp=0\n    local bq=0\n    local br=0\n    local bs=0\n    local bt=0\n    local\
    \ bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n    local by=0\n    local\
    \ bz=0\n    local ca=0\n    local cb=0\n\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i\n    local sum=0\n    for ((i=0; i<m; i++)); do\n        sum=$(echo\
    \ \"$sum + ${l[$i]}\" | bc -l)\n    done\n    echo \"$sum / $m\" | bc -l\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($@)\n    local i=0\n\
    \    local sum=0\n    local len=${#l[@]}\n    local mid=$((len/2))\n    local\
    \ median=0\n    local sorted=($(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n))\n\
    \    for i in $(seq 0 $((len-1))); do\n        sum=$(echo \"$sum + ${sorted[$i]}\"\
    \ | bc)\n    done\n    median=$(echo \"scale=1; $sum / $len\" | bc)\n    echo\
    \ \"$median\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\n    local r\n    if ((n % 2 == 0)); then\n        r=$(echo\
    \ \"scale=1; (${s[$m-1]} + ${s[$m]}) / 2\" | bc)\n    else\n        r=${s[$m]}\n\
    \    fi\n    echo $r\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r=$(echo \"$s\" | sed -n \"$((m + 1))p\")\n    if ((n % 2 == 0)); then\n\
    \        local r2=$(echo \"$s\" | sed -n \"$((m))p\")\n        r=$(echo \"scale=1;\
    \ ($r + $r2) / 2\" | bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r=$(echo \"$s\" | sed -n \"$((m + 1))p\")\n    if ((n % 2 == 0)); then\n\
    \        local l=$(echo \"$s\" | sed -n \"$m p\")\n        r=$(echo \"scale=1;\
    \ ($l + $r) / 2\" | bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local i=0\n    local m=0\n    local s=0\n    local t=0\n    for i in ${l[@]};\
    \ do\n        s=$(echo \"$s + $i\" | bc)\n    done\n    s=$(echo \"$s / $n\" |\
    \ bc)\n    for i in ${l[@]}; do\n        t=$(echo \"$t + ($i - $s)^2\" | bc)\n\
    \    done\n    t=$(echo \"sqrt($t / $n)\" | bc)\n    echo \"$s $t\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i\n    local s\n    local r\n    local t\n\n    for ((i=0; i<$m; i++));\
    \ do\n        s+=\"${l[$i]} \"\n    done\n    s=$(echo $s | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\n    l=($s)\n    m=${#l[@]}\n    if ((m%2==1)); then\n  \
    \      r=$((m/2))\n        t=${l[$r]}\n    else\n        r=$((m/2))\n        t=$(echo\
    \ \"scale=1; (${l[$r-1]}+${l[$r]})/2\" | bc)\n    fi\n    echo $t\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n   \
    \ local v=($s)\n    if (( ${#l[@]} % 2 == 1 )); then\n        echo ${v[$m]}\n\
    \    else\n        echo $(( ( ${v[$m-1]} + ${v[$m]} ) / 2 ))\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 2
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local l_len=${#l[@]}\n\
    \    local l_median_idx=$((l_len / 2))\n    local l_median_idx_2=$((l_median_idx\
    \ - 1))\n    local l_median_idx_3=$((l_median_idx + 1))\n    local l_median_idx_4=$((l_median_idx\
    \ + 2))\n    local l_median_idx_5=$((l_median_idx + 3))\n    local l_median_idx_6=$((l_median_idx\
    \ + 4))\n    local l_median_idx_7=$((l_median_idx + 5))\n    local l_median_idx_8=$((l_median_idx\
    \ + 6))\n    local l_median_idx_9=$((l_median_idx + 7))\n    local l_median_idx_10=$((l_median_idx\
    \ + 8))\n    local l_median_idx_11=$((l_median_idx + 9))\n    local l_median_idx_12=$((l_median_idx\
    \ + 10))\n    local l_median_idx_13=$((l_median_idx + 11))\n    local l_median_idx_14=$((l_median_idx\
    \ + 12))\n    local l_median_idx_15=$((l_median_idx + 13))\n    local l_median_idx_16=$((l_median_idx\
    \ + 14))\n    local l_median_idx_17=$((l_median_idx + 15))\n    local l_median_idx_18=$((l_median_idx\
    \ + 16))\n    local l_median_idx_19=$((l_median_idx + 17))\n    local l_median_idx_20=$((l_median_idx\
    \ + 18))\n    local l_median_idx_21=$((l_med\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpeny092le.sh: line 32: unexpected EOF while looking for matching
    `)''

    /tmp/tmpeny092le.sh: line 49: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[@]}\n    local t=${l[@]}\n    local i\n\
    \    for ((i=0; i<n; i++)); do\n        s=${s/ ${l[i]} /}\n        t=${t/ ${l[i]}\
    \ /}\n        if ((i==m)); then\n            if ((n%2==1)); then\n           \
    \     echo ${l[i]}\n                return\n            fi\n            s=${s/\
    \ ${l[i]} /}\n            t=${t/ ${l[i]} /}\n        fi\n    done\n    local a=($(median\
    \ \"$s\"))\n    local b=($(median \"$t\"))\n    echo $(((a+b)/2))\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=($s)\n\
    \    if (( ${#l[@]} % 2 == 1 )); then\n        echo ${v[$m]}\n    else\n     \
    \   echo $(echo \"scale=1; (${v[$m-1]} + ${v[$m]})/2\" | bc)\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i=0\n\
    \    local m=0\n    local n=${#l[@]}\n    local s=0\n    local t=0\n    local\
    \ u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n\
    \    for i in ${l[@]}; do\n        s=$(echo \"$s + $i\" | bc)\n    done\n    m=$(echo\
    \ \"$s / $n\" | bc)\n    for i in ${l[@]}; do\n        t=$(echo \"$t + ($i - $m)^2\"\
    \ | bc)\n    done\n    u=$(echo \"sqrt($t / $n)\" | bc)\n    for i in ${l[@]};\
    \ do\n        v=$(echo \"$v + ($i - $m)^3\" | bc)\n    done\n    w=$(echo \"$v\
    \ / $n\" | bc)\n    for i in ${l[@]}; do\n        x=$(echo \"$x + ($i - $m)^4\"\
    \ | bc)\n    done\n    y=$(echo \"$x / $n\" | bc)\n    z=$(echo \"$y - 3 * $u^2\"\
    \ | bc)\n    echo \"$m $u $w $z\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 2
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    [[ ${#l[@]} -eq 1 ]] && echo \"$s\"\
    \ && return\n    [[ ${#l[@]} -eq 2 ]] && echo \"$(( (l[0] + l[1]) / 2 ))\" &&\
    \ return\n    [[ ${#l[@]} -eq 3 ]] && echo \"$(( (l[0] + l[1] + l[2]) / 3 ))\"\
    \ && return\n    [[ ${#l[@]} -eq 4 ]] && echo \"$(( (l[0] + l[1] + l[2] + l[3])\
    \ / 4 ))\" && return\n    [[ ${#l[@]} -eq 5 ]] && echo \"$(( (l[0] + l[1] + l[2]\
    \ + l[3] + l[4]) / 5 ))\" && return\n    [[ ${#l[@]} -eq 6 ]] && echo \"$(( (l[0]\
    \ + l[1] + l[2] + l[3] + l[4] + l[5]) / 6 ))\" && return\n    [[ ${#l[@]} -eq\
    \ 7 ]] && echo \"$(( (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6]) / 7 ))\"\
    \ && return\n    [[ ${#l[@]} -eq 8 ]] && echo \"$(( (l[0] + l[1] + l[2] + l[3]\
    \ + l[4] + l[5] + l[6] + l[7]) / 8 ))\" && return\n    [[ ${#l[@]} -eq 9 ]] &&\
    \ echo \"$(( (l[0] + l[1] + l[2] + l[3] + l[4] + l[5] + l[6] + l[7] + l[8]) /\
    \ 9 ))\" && return\n    [[ ${#l[@]} -eq 10 ]] && echo \"$(( (l[0] + l[1] + l[2]\
    \ + l[3] + l[4] + l\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3neleosr.sh: line 22: unexpected EOF while looking for matching
    `)''

    /tmp/tmp3neleosr.sh: line 39: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=${l[*]}\n    local t=${s// /$'\\n'}\n    local\
    \ u=($(sort -n <<< \"$t\"))\n    if ((m%2==0)); then\n        echo \"$(bc -l <<<\
    \ \"scale=1;(${u[n-1]}+${u[n]})/2\")\"\n    else\n        echo \"${u[n]}\"\n \
    \   fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo\
    \ \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[@]}\n    local t\n    for ((i=0; i<m; i++));\
    \ do\n        t=${s#* }\n        s=${s%$t}\n    done\n    if ((n%2)); then\n \
    \       echo $s\n    else\n        echo $(((s+t)/2))\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(echo ${l[@]} | tr ' ' '\\n' | sort -n)\n    local r=$(echo\
    \ \"$s\" | sed -n \"$m p\")\n    if [ $(( ${#l[@]} % 2 )) -eq 0 ]; then\n    \
    \    local r2=$(echo \"$s\" | sed -n \"$((m - 1)) p\")\n        echo \"scale=1;\
    \ ($r + $r2) / 2\" | bc\n    else\n        echo \"$r\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n\
    \        s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local mid=$((\
    \ ${#l[@]} / 2 ))\n  local sorted=($(printf \"%s\\n\" \"${l[@]}\" | sort -n))\n\
    \  if (( ${#l[@]} % 2 == 0 )); then\n    echo \"$(echo \"scale=1; (${sorted[$mid]}\
    \ + ${sorted[$((mid-1))]})/2\" | bc -l)\"\n  else\n    echo \"${sorted[$mid]}\"\
    \n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$(($m/2))\n    local s=$(echo \"${l[*]}\" | tr ' ' '\\n' | sort -n)\n\
    \    if (($m%2==0)); then\n        echo \"$(echo \"$s\" | sed -n \"$n,$(($n+1))p\"\
    \ | awk '{print ($1+$2)/2}')\"\n    else\n        echo \"$(echo \"$s\" | sed -n\
    \ \"$(($n+1))p\")\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  local s=${l[@]}\n  for ((i=0;i<n;i++)); do\n    s=$(echo\
    \ \"$s\" | sed -e \"s/[^ ]* //\" | sort -n)\n  done\n  echo \"$s\" | sed -e \"\
    s/[^ ]* //\" | sort -n | sed -e \"${m}q;d\"\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r\n    if ((n%2==0)); then\n        r=$(echo \"${s[$m-1]}\" \"${s[$m]}\"\
    \ | awk '{print ($1+$2)/2}')\n    else\n        r=${s[$m]}\n    fi\n    echo \"\
    $r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=${#l[@]}\n\
    \  local i=0\n  local j=0\n  local k=0\n  local t=0\n  local s=0\n  local r=0\n\
    \  local p=0\n  local q=0\n  local n=0\n  local o=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local a=0\n  local b=0\n\
    \  local c=0\n  local d=0\n  local e=0\n  local f=0\n  local g=0\n  local h=0\n\
    \  local median=0\n  local median_index=0\n  local median_index_1=0\n  local median_index_2=0\n\
    \  local median_index_3=0\n  local median_index_4=0\n  local median_index_5=0\n\
    \  local median_index_6=0\n  local median_index_7=0\n  local median_index_8=0\n\
    \  local median_index_9=0\n  local median_index_10=0\n  local median_index_11=0\n\
    \  local median_index_12=0\n  local median_index_13=0\n  local median_index_14=0\n\
    \  local median_index_15=0\n  local median_index_16=0\n  local median_index_17=0\n\
    \  local median_index_18=0\n  local median_index_19=0\n  local median_index_20=0\n\
    \  local median_index_21=0\n  local median_index_22=0\n  local median_index_23=0\n\
    \  local median_index_24=0\n  local median_index_25=0\n  local median_index_26=0\n\
    \  local median_index_27=0\n  local median_index_28=0\n  local median_index_29=0\n\
    \  local median_index_30=0\n  local median_index_31=0\n  local median_index_32=0\n\
    \  local median_index_33=0\n  local median_\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ ((m--))\n        s=$(echo \"scale=1; (${l[$m]}+$s)/2\" | bc)\n    fi\n    echo\
    \ $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n  local\
    \ v=$(echo \"$s\" | sed -n \"${m}p\")\n  if ((n%2==0)); then\n    v=$(echo \"\
    $s\" | sed -n \"${m}p;${m}q\" | awk '{print ($1+$2)/2}')\n  fi\n  echo \"$v\"\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local l_len=${#l[@]}\n\
    \    local m=$((l_len / 2))\n    local s=${l[@]}\n    local s_sorted=($(echo \"\
    $s\" | tr ' ' '\\n' | sort -n))\n    if [ $((l_len % 2)) -eq 0 ]; then\n     \
    \   echo \"$(((s_sorted[m - 1] + s_sorted[m]) / 2))\"\n    else\n        echo\
    \ \"${s_sorted[m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($(echo $1 | tr ' '\
    \ '\\n' | sort -n))\n    local m=$((${#l[@]} / 2))\n    if (( ${#l[@]} % 2 ==\
    \ 0 )); then\n        echo $(echo \"scale=1; (${l[$m-1]} + ${l[$m]})/2\" | bc)\n\
    \    else\n        echo ${l[$m]}\n    fi\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    l=($1)\n    n=${#l[@]}\n  \
    \  if ((n == 0)); then\n        echo \"0\"\n    elif ((n == 1)); then\n      \
    \  echo \"${l[0]}\"\n    else\n        if ((n % 2 == 1)); then\n            echo\
    \ \"${l[$((n / 2))]}\"\n        else\n            echo \"$(echo \"scale=1; (${l[$((n\
    \ / 2 - 1))]} + ${l[$((n / 2))]}) / 2\" | bc)\"\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=($s)\n\
    \    if (( ${#l[@]} % 2 == 1 )); then\n        echo ${v[$m]}\n    else\n     \
    \   echo $(( (${v[$m-1]} + ${v[$m]}) / 2 ))\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"$((${l[$m-1]}\
    \ + ${l[$m]})) / 2\" | bc -l\n    else\n        echo \"${l[$m]}\"\n    fi\n}\n\
    \ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local v=$(printf \"%s\\n\" \"$s\" | sed -n \"${n}p\")\n    if ((m % 2 ==\
    \ 0)); then\n        local v2=$(printf \"%s\\n\" \"$s\" | sed -n \"$((n - 1))p\"\
    )\n        echo \"$(((v + v2) / 2))\"\n    else\n        echo \"$v\"\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m\n\
    \    local i\n    local j\n    local n\n    local tmp\n    n=${#l[@]}\n    for\
    \ ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++)); do\n            if ((l[i]\
    \ > l[j])); then\n                tmp=${l[i]}\n                l[i]=${l[j]}\n\
    \                l[j]=$tmp\n            fi\n        done\n    done\n    if ((n\
    \ % 2 == 1)); then\n        m=${l[n/2]}\n    else\n        m=$(echo \"scale=1;\
    \ (${l[n/2-1]} + ${l[n/2]}) / 2\" | bc)\n    fi\n    echo $m\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[@]}\n    local t\n    for ((i=0; i<m; i++));\
    \ do\n        t=${s#* }\n        s=${s%$t}\n    done\n    if ((n%2)); then\n \
    \       echo $s\n    else\n        t=${t% *}\n        echo $(((s+t)/2))\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n\
    \        s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    ((n%2)) && s=$(echo \"scale=1;\
    \ (${l[$((m-1))]}+$s)/2\" | bc)\n    echo $s\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$((${#l[@]}/2))\n\
    \  local s=${l[$m]}\n  [ $(((${#l[@]}+1)%2)) -eq 0 ] && s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc -l)\n  echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    ((n%2)) && s=$(echo \"scale=1;\
    \ (${l[$((m-1))]}+$s)/2\" | bc)\n    echo \"$s\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local n=$(echo\
    \ \"$l\" | wc -w)\n    local m=$((n/2))\n    local r=$(echo \"$l\" | tr ' ' '\\\
    n' | sort -n | awk -v m=$m '{if (NR==m) print $1; if (NR==m+1) print $1}' | awk\
    \ '{if (NR==1) print $1; if (NR==2) print ($1+$2)/2}')\n    echo $r\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=${l[$m]}\n    if (( ${#l[@]}%2 == 0 )); then\n        s=$(echo \"\
    scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 2
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    l=($1)\n    n=${#l[@]}\n  \
    \  if ((n == 0)); then\n        echo 0\n        return\n    fi\n    if ((n ==\
    \ 1)); then\n        echo ${l[0]}\n        return\n    fi\n    if ((n == 2));\
    \ then\n        echo $(((${l[0]} + ${l[1]})/2))\n        return\n    fi\n    if\
    \ ((n == 3)); then\n        echo $(((${l[0]} + ${l[1]} + ${l[2]})/3))\n      \
    \  return\n    fi\n    if ((n == 4)); then\n        echo $(((${l[0]} + ${l[1]}\
    \ + ${l[2]} + ${l[3]})/4))\n        return\n    fi\n    if ((n == 5)); then\n\
    \        echo $(((${l[0]} + ${l[1]} + ${l[2]} + ${l[3]} + ${l[4]})/5))\n     \
    \   return\n    fi\n    if ((n == 6)); then\n        echo $(((${l[0]} + ${l[1]}\
    \ + ${l[2]} + ${l[3]} + ${l[4]} + ${l[5]})/6))\n        return\n    fi\n    if\
    \ ((n == 7)); then\n        echo $(((${l[0]} + ${l[1]} + ${l[2]} + ${l[3]} + ${l[4]}\
    \ + ${l[5]} + ${l[6]})/7))\n        return\n    fi\n    if ((n == 8)); then\n\
    \        echo $(((${l[0]} + ${l[1]} + ${l[2]} + ${l[3]} + ${l[4]} + ${l[5]} +\
    \ ${l[6]} + ${l[7]})/8))\n        return\n    fi\n    if ((n == 9)); then\n  \
    \      echo $(((${l[0]} + ${l[1]} + ${l[2]} + ${l[3]} + ${l[4]} + ${l[5]} + ${l[6]}\
    \ + ${l[7]} + ${l[8]})/9))\n        return\n    fi\n    if ((n\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpiueyiyi4.sh: line 52: unexpected EOF while looking for matching
    `)''

    /tmp/tmpiueyiyi4.sh: line 69: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=`echo $1 | tr ' ' '\\\
    n' | sort -n`\n  local n=`echo $l | wc -w`\n  local m=$((n/2))\n  if [ $((n%2))\
    \ -eq 0 ]; then\n    echo \"($(echo $l | cut -d' ' -f$((m)) ) + $(echo $l | cut\
    \ -d' ' -f$((m+1)) ))/2\" | bc -l\n  else\n    echo $l | cut -d' ' -f$((m+1))\n\
    \  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=${#l[@]}\n\
    \  local c=$((m/2))\n  local s=${l[$c]}\n  if ((m%2==0)); then\n    s=$(echo \"\
    scale=1;(${l[$c-1]}+$s)/2\" | bc)\n  fi\n  echo \"$s\"\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$((${#l[@]}\
    \ / 2))\n  local s=${l[$m]}\n  if (( ${#l[@]} % 2 == 0 )); then\n    s=$(echo\
    \ \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n  fi\n  echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($@)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r\n    if ((n % 2 == 0)); then\n        r=$(echo \"${s[$m-1]}\" \"\
    ${s[$m]}\" | awk '{print ($1+$2)/2}')\n    else\n        r=${s[$m]}\n    fi\n\
    \    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r\n    if ((n % 2 == 0)); then\n        r=$(echo \"${s[m-1]}\" \"${s[m]}\"\
    \ | awk '{print ($1 + $2) / 2}')\n    else\n        r=${s[m]}\n    fi\n    echo\
    \ \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=${l[$m]}\n    if ((${#l[@]}%2==0)); then\n        s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$(echo\
    \ \"${#l[@]} / 2\" | bc)\n    local n=$(echo \"${#l[@]} % 2\" | bc)\n    if [\
    \ $n -eq 0 ]; then\n        echo \"$(echo \"scale=1; (${l[$m]} + ${l[$m-1]}) /\
    \ 2\" | bc)\"\n    else\n        echo \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=($(printf '%s\\n' \"${l[@]}\" | sort -n))\n    if (( ${#l[@]} % 2\
    \ == 1 )); then\n        echo \"${s[$m]}\"\n    else\n        echo \"$(echo \"\
    scale=1; (${s[$m-1]}+${s[$m]})/2\" | bc -l)\"\n    fi\n}\n\ncandidate() {\n  \
    \  median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=`echo $1 | sed 's/ /\\\
    n/g' | sort -n`\n  local n=`echo $l | wc -w`\n  local m=`echo $l | cut -d ' '\
    \ -f $((n/2+1))`\n  if [ $((n%2)) -eq 0 ]; then\n    local m2=`echo $l | cut -d\
    \ ' ' -f $((n/2))`\n    echo \"scale=1;($m+$m2)/2\" | bc\n  else\n    echo $m\n\
    \  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$(echo \"scale=1;\
    \ (${l[$m]} + ${l[$((m - 1))]}) / 2\" | bc)\"\n    else\n        echo \"${l[$m]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo\
    \ \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo \"$s\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[@]}\n    local t=${l[@]}\n    local i\n    local j\n\
    \    local k\n    local n\n    local x\n    local y\n    local z\n\n    # Sort\
    \ the list.\n    for ((i = 0; i < ${#l[@]}; i++)); do\n        for ((j = i; j\
    \ < ${#l[@]}; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n        \
    \        t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n  \
    \          fi\n        done\n    done\n\n    # If the length of the list is odd,\
    \ return the middle element.\n    if (($((${#l[@]} % 2)) == 1)); then\n      \
    \  echo ${l[$m]}\n        return\n    fi\n\n    # If the length of the list is\
    \ even, return the average of the two middle\n    # elements.\n    n=$(($m - 1))\n\
    \    x=${l[$m]}\n    y=${l[$n]}\n    z=$(echo \"scale=2; ($x + $y) / 2\" | bc)\n\
    \    echo $z\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    l=($1)\n    n=${#l[@]}\n  \
    \  if ((n == 0)); then\n        echo 0\n        return\n    fi\n    if ((n ==\
    \ 1)); then\n        echo ${l[0]}\n        return\n    fi\n    if ((n == 2));\
    \ then\n        echo $(((${l[0]} + ${l[1]})/2))\n        return\n    fi\n    if\
    \ ((n % 2 == 1)); then\n        echo $(sort -n <<< \"${l[*]}\" | awk \"NR==$((n/2+1))\"\
    )\n        return\n    fi\n    if ((n % 2 == 0)); then\n        echo $(sort -n\
    \ <<< \"${l[*]}\" | awk \"NR==$((n/2))+0.5\")\n        return\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo\
    \ \"$s\" | sed -n \"$m p\")\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$((${#l[@]}\
    \ / 2))\n  local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n  if (( ${#l[@]}\
    \ % 2 == 0 )); then\n    echo \"$(( ($(echo \"$s\" | sed -n \"$m\"p) + $(echo\
    \ \"$s\" | sed -n \"$((m + 1))\"p)) / 2 ))\"\n  else\n    echo \"$(echo \"$s\"\
    \ | sed -n \"$((m + 1))\"p)\"\n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$(echo\
    \ \"scale=1; ${#l[@]}/2\" | bc)\n    local i=$(echo \"scale=0; $m+0.5\" | bc)\n\
    \    local n=$(echo \"scale=0; $m-0.5\" | bc)\n    if [ $(echo \"$i == $n\" |\
    \ bc) -eq 1 ]; then\n        echo \"${l[$i]}\"\n    else\n        echo \"$(echo\
    \ \"scale=1; (${l[$i]}+${l[$n]})/2\" | bc)\"\n    fi\n}\n\ncandidate() {\n   \
    \ median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\")\
    \ = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2qdrutkx.sh: line 17: 3.0: syntax error: invalid arithmetic operator
    (error token is ".0")

    '
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n\
    \ | tr '\\n' ' ')\n    if (( n % 2 == 0 )); then\n        echo \"$(echo \"$s\"\
    \ | cut -d' ' -f$m-$((m+1)) | awk '{print ($1+$2)/2}')\"\n    else\n        echo\
    \ \"$(echo \"$s\" | cut -d' ' -f$((m+1)))\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    echo $(echo\
    \ \"${l[*]}\" | tr ' ' '\\n' | sort -n | awk '{a[i++]=$1} END {print a[int(i/2)]}')\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local t=0\n    for ((i=0; i<m;\
    \ i++)); do\n        for ((j=i+1; j<m; j++)); do\n            if (( ${l[i]} >\
    \ ${l[j]} )); then\n                t=${l[i]}\n                l[i]=${l[j]}\n\
    \                l[j]=$t\n            fi\n        done\n    done\n    if (( m\
    \ % 2 == 1 )); then\n        echo ${l[m/2]}\n    else\n        k=$((m/2))\n  \
    \      echo $(((${l[k-1]}+${l[k]})/2))\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$(echo \"scale=1;\
    \ (${l[$m]} + ${l[$m - 1]}) / 2\" | bc)\"\n    else\n        echo \"${l[$m]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=$(echo ${l[@]} | tr ' ' '\\n' | sort -n)\n    local m=$(echo \"$s\"\
    \ | sed -n \"$m p\")\n    echo \"$m\"\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n / 2))\n  local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n \
    \ local r=$(echo \"$s\" | sed -n \"$((m + 1))p\")\n  if ((n % 2 == 0)); then\n\
    \    local p=$(echo \"$s\" | sed -n \"${m}p\")\n    r=$(echo \"scale=1; ($r +\
    \ $p) / 2\" | bc)\n  fi\n  echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local len=${#l[@]}\n\
    \    local m=$((len / 2))\n    local sum=0\n    for i in ${l[@]}; do\n       \
    \ sum=$(echo \"$sum + $i\" | bc)\n    done\n    echo \"$sum / $len\" | bc -l\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$(( ${#l[@]}\
    \ / 2 ))\n  local s=${l[$m]}\n  if (( ${#l[@]} % 2 == 0 )); then\n    s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n  fi\n  echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=$1\n  local n=$(echo\
    \ $l | wc -w)\n  local m=$(echo $l | tr ' ' '\\n' | sort -n | awk \"NR==$((n/2+1))\"\
    )\n  echo $m\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    if ((${#l[@]} % 2 == 0)); then\n        echo \"$((${l[$m]} + ${l[$m-1]}))\
    \ / 2.0\" | bc -l\n    else\n        echo \"${l[$m]}\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    ((n%2)) && s=$(echo \"scale=1;(${l[$((m-1))]}+$s)/2\"\
    \ | bc)\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$(( ${#l[@]}\
    \ / 2 ))\n  local s=${l[$m]}\n  (( ${#l[@]} % 2 == 0 )) && s=$(echo \"scale=1;\
    \ (${l[$m-1]} + $s) / 2\" | bc -l)\n  echo $s\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=$1\n  local m=$(echo\
    \ \"$l\" | wc -w)\n  local n=$(echo \"$l\" | tr ' ' '\\n' | sort -n | awk -v m=$m\
    \ '{if(NR==m/2) print $1; else if(NR==m/2+1) print ($1+$2)/2}')\n  echo $n\n}\n\
    \ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n\
    \        s=$(echo \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(echo ${l[@]} | tr ' ' '\\n' | sort -n)\n    local v=($s)\n\
    \    if (( ${#l[@]} % 2 == 1 )); then\n        echo ${v[$m]}\n    else\n     \
    \   echo $(((${v[$m-1]} + ${v[$m]})/2))\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n / 2))\n  local s=${l[$m]}\n  ((n % 2 == 0)) && s=$(echo \"scale=1;\
    \ (${l[$m - 1]} + $s) / 2\" | bc -l)\n  echo $s\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i\n    local j\n    local k\n    local t\n    for ((i=0; i<m; i++));\
    \ do\n        k=${l[i]}\n        for ((j=i; j>0 && l[j-1]>k; j--)); do\n     \
    \       l[j]=${l[j-1]}\n        done\n        l[j]=$k\n    done\n    if ((m%2));\
    \ then\n        echo ${l[m/2]}\n    else\n        t=$(echo \"scale=1; (${l[m/2-1]}+${l[m/2]})/2\"\
    \ | bc)\n        echo $t\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n\
    \ | tr '\\n' ' ')\n    if ((n%2==0)); then\n        echo \"scale=1; (${s[$m-1]}+${s[$m]})/2\"\
    \ | bc\n    else\n        echo \"${s[$m]}\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    if (( m % 2 == 0 )); then\n        echo \"$(echo \"\
    scale=1; (${l[$n-1]} + ${l[$n]})/2\" | bc -l)\"\n    else\n        echo \"${l[$n]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=${l[$m]}\n    if (( ${#l[@]}%2 == 0 )); then\n        s=$(echo \"\
    scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=${l[$n]}\n    if ((m%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$n-1]}+$s)/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r\n    if ((m%2==1)); then\n        r=$(echo \"$s\" | sed -n \"${n}p\"\
    )\n    else\n        r=$(echo \"$s\" | sed -n \"${n}p;${n}q\" | awk '{print ($1+$2)/2}')\n\
    \    fi\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local t=0\n    local s=0\n \
    \   local r=0\n    local p=0\n    local q=0\n    local o=0\n    local n=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local l1=0\n    local\
    \ l2=0\n    local l3=0\n    local l4=0\n    local l5=0\n    local l6=0\n    local\
    \ l7=0\n    local l8=0\n    local l9=0\n    local l10=0\n    local l11=0\n   \
    \ local l12=0\n    local l13=0\n    local l14=0\n    local l15=0\n    local l16=0\n\
    \    local l17=0\n    local l18=0\n    local l19=0\n    local l20=0\n    local\
    \ l21=0\n    local l22=0\n    local l23=0\n    local l24=0\n    local l25=0\n\
    \    local l26=0\n    local l27=0\n    local l28=0\n    local l29=0\n    local\
    \ l30=0\n    local l31=0\n    local l32=0\n    local l33=0\n    local l34=0\n\
    \    local l35=0\n    local l36=0\n    local l37=0\n    local l38=0\n    local\
    \ l39=0\n    local l40=0\n    local l41=0\n    local l42=0\n    local l43=0\n\
    \    local l44=0\n    local l45=0\n    local l46=0\n    local l47=0\n    local\
    \ l48=0\n    local l49=0\n    local l50=\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s\n    if ((n%2==0)); then\n        s=$(echo\
    \ \"scale=1;(${l[m-1]}+${l[m]})/2\" | bc)\n    else\n        s=${l[m]}\n    fi\n\
    \    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local m=$(echo\
    \ \"$l\" | wc -w)\n    local n=$(echo \"$l\" | sort -n | awk '{print $'$((m/2+1))'}')\n\
    \    local o=$(echo \"$l\" | sort -n | awk '{print $'$((m/2))'}')\n    if [ $((m%2))\
    \ -eq 0 ]; then\n        echo \"$(echo \"$n+$o\" | bc -l)/2\"\n    else\n    \
    \    echo \"$n\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n  local\
    \ r\n  if ((n%2==0)); then\n    r=$(echo \"${s[$m-1]}\" \"${s[$m]}\" | awk '{print\
    \ ($1+$2)/2}')\n  else\n    r=${s[$m]}\n  fi\n  echo \"$r\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i\n\
    \    local m\n    local n\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local -a a\n    local\
    \ -a b\n    local -a c\n    local -a d\n    local -a e\n    local -a f\n    local\
    \ -a g\n    local -a h\n    local -a j\n    local -a k\n    local -a l\n    local\
    \ -a m\n    local -a n\n    local -a o\n    local -a p\n    local -a q\n    local\
    \ -a r\n    local -a s\n    local -a t\n    local -a u\n    local -a v\n    local\
    \ -a w\n    local -a x\n    local -a y\n    local -a z\n    local -a A\n    local\
    \ -a B\n    local -a C\n    local -a D\n    local -a E\n    local -a F\n    local\
    \ -a G\n    local -a H\n    local -a I\n    local -a J\n    local -a K\n    local\
    \ -a L\n    local -a M\n    local -a N\n    local -a O\n    local -a P\n    local\
    \ -a Q\n    local -a R\n    local -a S\n    local -a T\n    local -a U\n    local\
    \ -a V\n    local -a W\n    local -a X\n    local -a Y\n    local -a Z\n    local\
    \ -a aa\n    local -a ab\n    local -a ac\n    local -a ad\n    local -a ae\n\
    \    local -a af\n    local -a ag\n    local -a ah\n    local -a ai\n    local\
    \ -a aj\n    local -a ak\n    local -a al\n    local -a am\n    local -a an\n\
    \    local -a ao\n    local -a ap\n    local -a aq\n    local -a ar\n    local\
    \ -a as\n    local -a at\n    local -a au\n    local -a av\n    local -a aw\n\
    \    local -a ax\n    local -\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n   \
    \ local v=($s)\n    if (( ${#l[@]} % 2 == 1 )); then\n        echo ${v[$m]}\n\
    \    else\n        echo $(( (v[m-1] + v[m]) / 2 ))\n    fi\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local tmp=0\n    for ((i=0; i<m; i++)); do\n\
    \        for ((j=i; j<m; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n\
    \                tmp=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$tmp\n\
    \            fi\n        done\n    done\n    if ((m % 2 == 1)); then\n       \
    \ echo ${l[m/2]}\n    else\n        echo $(((${l[m/2-1]} + ${l[m/2]})/2))\n  \
    \  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local m=$(echo\
    \ \"$l\" | tr ' ' '\\n' | sort -n | awk '{a[i++]=$0} END {print a[int(i/2)]}')\n\
    \    echo \"$m\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local n=$(echo\
    \ \"$l\" | wc -w)\n    local m=$((n/2))\n    local s=$(echo \"$l\" | tr ' ' '\\\
    n' | sort -n)\n    if ((n%2==0)); then\n        echo \"$s\" | sed -n \"$m,$((m+1))p\"\
    \ | awk '{print ($1+$2)/2}'\n    else\n        echo \"$s\" | sed -n \"$((m+1)),$((m+1))p\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m\n\
    \    local i\n    local j\n    local n\n    local s\n    local t\n    n=${#l[@]}\n\
    \    if ((n == 0)); then\n        echo 0\n        return\n    fi\n    for ((i\
    \ = 0; i < n; i++)); do\n        s=${l[i]}\n        for ((j = i + 1; j < n; j++));\
    \ do\n            t=${l[j]}\n            if ((t < s)); then\n                l[i]=$t\n\
    \                l[j]=$s\n                s=$t\n            fi\n        done\n\
    \    done\n    if ((n % 2 == 1)); then\n        m=$((n / 2))\n        echo ${l[m]}\n\
    \    else\n        m=$((n / 2 - 1))\n        echo $(((${l[m]} + ${l[m + 1]} +\
    \ 1) / 2))\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' ')\n    if ((n % 2 == 0)); then\n        echo \"$(echo \"$s\"\
    \ | awk '{print $'$m' + $'$((m + 1))'}') / 2\" | bc -l\n    else\n        echo\
    \ \"$(echo \"$s\" | awk '{print $'$((m + 1))'}')\"\n    fi\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s\n    local i\n    for i in \"${l[@]}\"; do\n\
    \        s+=$i\n    done\n    if ((n%2)); then\n        echo \"${l[$m]}\"\n  \
    \  else\n        echo \"$(bc -l <<< \"scale=1; (${l[$m-1]}+${l[$m]})/2\")\"\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo\
    \ \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local r=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n | sed\
    \ -n \"${m}p\")\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s\n    for i in \"${l[@]}\"; do\n        s+=\"$i \"\n    done\n   \
    \ echo \"$s\" | tr ' ' '\\n' | sort -n | sed -n \"${m}p\"\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n\
    \ | sed -n \"$m p\")\n    if ((n%2==0)); then\n        local s2=$(echo \"${l[@]}\"\
    \ | tr ' ' '\\n' | sort -n | sed -n \"$((m-1)) p\")\n        echo \"scale=1; ($s+$s2)/2\"\
    \ | bc\n    else\n        echo \"$s\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$(echo \"$1\" | tr\
    \ \" \" \"\\n\" | sort -n)\n    local n=$(echo \"$l\" | wc -l)\n    local m=$((n\
    \ / 2))\n    if ((n % 2 == 0)); then\n        echo \"$l\" | sed -n \"$((m + 1))p\"\
    \ | awk '{print ($1 + $2) / 2}'\n    else\n        echo \"$l\" | sed -n \"$((m\
    \ + 1))p\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n \
    \       s=$(echo \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo\
    \ \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local m=$((${#l[@]}\
    \ / 2))\n  local s=${l[$m]}\n  if (( ${#l[@]} % 2 == 0 )); then\n    s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n  fi\n  echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    local r\n    if ((n % 2 == 0)); then\n        r=$(echo \"${s[m-1]}\" \"${s[m]}\"\
    \ | awk '{print ($1 + $2) / 2}')\n    else\n        r=${s[m]}\n    fi\n    echo\
    \ \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n / 2))\n  local s=${l[$m]}\n  if ((n % 2 == 0)); then\n    s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n  fi\n  echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i=0\n\
    \    local j=0\n    local k=0\n    local m=0\n    local n=0\n    local t=0\n \
    \   local s=0\n    local p=0\n    local q=0\n    local r=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n   \
    \ local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local\
    \ u=0\n    local v=0\n    local w=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local q\n}\n\ncandidate() {\n \
    \   median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local l_len=${#l[@]}\n\
    \    local l_mid=$((l_len / 2))\n    local l_sorted=($(printf \"%s\\n\" \"${l[@]}\"\
    \ | sort -n))\n    if ((l_len % 2 == 0)); then\n        echo \"$(bc -l <<< \"\
    ${l_sorted[$l_mid]} + ${l_sorted[$((l_mid - 1))]}\") / 2\"\n    else\n       \
    \ echo \"${l_sorted[$l_mid]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"${l[$m-1]} + $s\" | bc -l)\n        s=$(echo \"scale=1; $s / 2\"\
    \ | bc -l)\n    fi\n    echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    if ((n%2==0)); then\n        echo \"$(echo \"scale=1;\
    \ (${l[m-1]}+${l[m]})/2\" | bc -l)\"\n    else\n        echo \"${l[m]}\"\n   \
    \ fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo\
    \ \"$s\" | sed -n \"$m\"p)\n    if (( ${#l[@]} % 2 == 0 )); then\n        local\
    \ r2=$(echo \"$s\" | sed -n \"$(($m - 1))\"p)\n        echo \"scale=1; ($r + $r2)\
    \ / 2\" | bc\n    else\n        echo \"$r\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=${l[$n]}\n    if ((m%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$n-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"$(echo\
    \ \"scale=1; (${l[$m]} + ${l[$((m - 1))]})/2\" | bc)\"\n    else\n        echo\
    \ \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i=0\n\
    \    local m=0\n    local n=${#l[@]}\n    local s=0\n    local t=0\n    for i\
    \ in ${l[@]}; do\n        s=$(echo \"$s + $i\" | bc)\n    done\n    m=$(echo \"\
    $s / $n\" | bc -l)\n    for i in ${l[@]}; do\n        t=$(echo \"$t + ($i - $m)^2\"\
    \ | bc -l)\n    done\n    echo $(echo \"sqrt($t / $n)\" | bc -l)\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 2
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n\
    \    if ((m%2==0)); then\n        echo \"$(echo \"$s\" | sed -n \"$((n+1))p\"\
    \ | awk '{print $1}\")\"\n    else\n        echo \"$(echo \"$s\" | sed -n \"$((n+1))p\"\
    \ | awk '{print $1}')\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxm9w_trm.sh: line 17: unexpected EOF while looking for matching
    `''''

    /tmp/tmpxm9w_trm.sh: line 35: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local t=0\n    for ((i=0; i<m; i++)); do\n\
    \        for ((j=i; j<m; j++)); do\n            if ((${l[i]} > ${l[j]})); then\n\
    \                t=${l[i]}\n                l[i]=${l[j]}\n                l[j]=$t\n\
    \            fi\n        done\n    done\n    if ((m % 2 == 1)); then\n       \
    \ echo ${l[m/2]}\n    else\n        echo $(((${l[m/2-1]} + ${l[m/2]})/2))\n  \
    \  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10\
    \ 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=${l[$m]}\n    if (( ${#l[@]}%2 == 0 )); then\n        s=$(echo \"\
    scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    l=($1)\n    l=(\"${l[@]}\"\
    \ \"${l[@]}\" \"${l[@]}\")\n    l=(\"${l[@]}\" \"${l[@]}\" \"${l[@]}\")\n    l=(\"\
    ${l[@]}\" \"${l[@]}\" \"${l[@]}\")\n    l=(\"${l[@]}\" \"${l[@]}\" \"${l[@]}\"\
    )\n    l=(\"${l[@]}\" \"${l[@]}\" \"${l[@]}\")\n    l=(\"${l[@]}\" \"${l[@]}\"\
    \ \"${l[@]}\")\n    l=(\"${l[@]}\" \"${l[@]}\" \"${l[@]}\")\n    l=(\"${l[@]}\"\
    \ \"${l[@]}\" \"${l[@]}\")\n    l=(\"${l[@]}\" \"${l[@]}\" \"${l[@]}\")\n    l=(\"\
    ${l[@]}\" \"${l[@]}\" \"${l[@]}\")\n    l=(\"${l[@]}\" \"${l[@]}\" \"${l[@]}\"\
    )\n    l=(\"${l[@]}\" \"${l[@]}\" \"${l[@]}\")\n    l=(\"${l[@]}\" \"${l[@]}\"\
    \ \"${l[@]}\")\n    l=(\"${l[@]}\" \"${l[@]}\" \"${l[@]}\")\n    l=(\"${l[@]}\"\
    \ \"${l[@]}\" \"${l[@]}\")\n    l=(\"${l[@]}\" \"${l[@]}\" \"${l[@]}\")\n    l=(\"\
    ${l[@]}\" \"${l[@]}\" \"${l[@]}\")\n    l=(\"${l[@]}\" \"${l[@]}\" \"${l[@]}\"\
    )\n    l=(\"${l[@]}\" \"${l[@]}\" \"${l[@]}\")\n    l=(\"${l[@]}\" \"${l[@]}\"\
    \ \"${l[@]}\")\n    l=(\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1v91j9df.sh: line 44: unexpected EOF while looking for matching
    `"''

    /tmp/tmp1v91j9df.sh: line 48: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n)\n    local r=$(echo\
    \ \"$s\" | sed -n \"$m p\")\n    if (( ${#l[@]} % 2 == 0 )); then\n        local\
    \ r2=$(echo \"$s\" | sed -n \"$((m - 1)) p\")\n        echo \"$(echo \"scale=1;\
    \ ($r + $r2) / 2\" | bc -l)\"\n    else\n        echo \"$r\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$(echo\
    \ \"${#l[@]} / 2\" | bc)\n    if [ $(echo \"${#l[@]} % 2\" | bc) -eq 0 ]; then\n\
    \        echo \"$(echo \"scale=1; (${l[$m-1]} + ${l[$m]})/2\" | bc)\"\n    else\n\
    \        echo \"${l[$m]}\"\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i\n\
    \    local m\n    local n\n    local s\n    local t\n    for i in \"${l[@]}\"\
    ; do\n        ((m+=$i))\n        ((n++))\n    done\n    ((m/=n))\n    for i in\
    \ \"${l[@]}\"; do\n        ((s+=(i-m)*(i-m)))\n    done\n    ((s/=n))\n    t=$(echo\
    \ \"sqrt($s)\" | bc -l)\n    echo \"$t\"\n}\n\ncandidate() {\n    median \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n  \
    \  [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=$1\n  local n=$(echo\
    \ \"$l\" | wc -w)\n  local m=$((n/2))\n  local s=$(echo \"$l\" | tr ' ' '\\n'\
    \ | sort -n | sed -n \"$m p\")\n  if ((n%2==0)); then\n    local s2=$(echo \"\
    $l\" | tr ' ' '\\n' | sort -n | sed -n \"$((m+1)) p\")\n    echo \"scale=1;($s+$s2)/2\"\
    \ | bc\n  else\n    echo \"$s\"\n  fi\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n)\n\
    \    local r=$(echo \"$s\" | sed -n \"$m p\")\n    if (( ${#l[@]} % 2 == 0 ));\
    \ then\n        local r2=$(echo \"$s\" | sed -n \"$((m+1)) p\")\n        r=$(echo\
    \ \"scale=1; ($r + $r2) / 2\" | bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n  local\
    \ r=$(echo \"$s\" | sed -n \"$((m+1))p\")\n  if ((n%2==0)); then\n    r=$(echo\
    \ \"$r + $(echo \"$s\" | sed -n \"$((m))p\")\" | bc -l)\n    r=$(echo \"$r / 2\"\
    \ | bc -l)\n  fi\n  echo \"$r\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n / 2))\n    local s=${l[$m]}\n    if ((n % 2 == 0)); then\n \
    \       s=$(echo \"scale=1; (${l[$m - 1]} + $s) / 2\" | bc)\n    fi\n    echo\
    \ \"$s\"\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local t=0\n    local sum=0\n\
    \n    # sort the list\n    for ((i=0; i<m; i++)); do\n        for ((j=i; j<m;\
    \ j++)); do\n            if ((${l[i]} > ${l[j]})); then\n                t=${l[i]}\n\
    \                l[i]=${l[j]}\n                l[j]=$t\n            fi\n     \
    \   done\n    done\n\n    # get the median\n    if ((m % 2 == 1)); then\n    \
    \    echo ${l[m/2]}\n    else\n        for ((k=m/2-1; k<m/2+1; k++)); do\n   \
    \         sum=$(echo \"$sum + ${l[k]}\" | bc)\n        done\n        echo $(echo\
    \ \"$sum / 2\" | bc -l)\n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    # sort the list\n    local\
    \ l=$(echo \"$1\" | tr ' ' '\\n' | sort -n)\n    # get the length of the list\n\
    \    local len=$(echo \"$l\" | wc -l)\n    # get the middle element\n    local\
    \ mid=$((len / 2))\n    # if the length is odd, return the middle element\n  \
    \  if ((len % 2 == 1)); then\n        echo \"$l\" | sed -n \"${mid}p\"\n    #\
    \ if the length is even, return the average of the two middle elements\n    else\n\
    \        local a=$(echo \"$l\" | sed -n \"${mid}p\")\n        local b=$(echo \"\
    $l\" | sed -n \"$((mid + 1))p\")\n        echo \"scale=1; ($a + $b) / 2\" | bc\n\
    \    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local n=$(echo\
    \ \"$l\" | wc -w)\n    local m=$((n/2))\n    local s=$(echo \"$l\" | tr ' ' '\\\
    n' | sort -n)\n    local r=$(echo \"$s\" | sed -n \"${m}p\")\n    if [ $((n%2))\
    \ -eq 0 ]; then\n        local r2=$(echo \"$s\" | sed -n \"$((m-1))p\")\n    \
    \    r=$(echo \"scale=1; ($r+$r2)/2\" | bc)\n    fi\n    echo \"$r\"\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  local s\n  local i\n  local j\n  local k\n  local t\n \
    \ for ((i=0; i<n; i++)); do\n    for ((j=i; j>0; j--)); do\n      k=$((j-1))\n\
    \      if ((${l[$k]} > ${l[$j]})); then\n        t=${l[$k]}\n        l[$k]=${l[$j]}\n\
    \        l[$j]=$t\n      fi\n    done\n  done\n  if ((n % 2 == 0)); then\n   \
    \ s=$(((${l[$m]} + ${l[$((m-1))]})/2))\n  else\n    s=${l[$m]}\n  fi\n  echo $s\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=${l[$n]}\n    if ((m%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$n-1]}+$s)/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($(echo \"$1\" | tr\
    \ ' ' '\\n' | sort -n))\n    local n=$((${#l[@]} / 2))\n    if ((${#l[@]} % 2\
    \ == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]})) / 2.0\" | bc -l\n  \
    \  else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$1\n    local n=$(echo\
    \ \"$l\" | wc -w)\n    local m=$((n / 2))\n    local s=$(echo \"$l\" | tr ' '\
    \ '\\n' | sort -n | sed -n \"${m}p\")\n    if ((n % 2 == 0)); then\n        local\
    \ s2=$(echo \"$l\" | tr ' ' '\\n' | sort -n | sed -n \"$((m + 1))p\")\n      \
    \  echo \"scale=1; ($s + $s2) / 2\" | bc\n    else\n        echo \"$s\"\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=$(echo \"$1\" | tr\
    \ ' ' '\\n' | sort -n)\n    local n=$(echo \"$l\" | wc -l)\n    local m=$((n/2))\n\
    \    if ((n%2==0)); then\n        echo \"$(echo \"$l\" | sed -n \"$((m+1))p\"\
    )\"\n    else\n        echo \"$(echo \"$l\" | sed -n \"$((m+1))p\")\"\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  local s=$((n%2))\n  local i\n  local j\n  local tmp\n \
    \ for ((i=0; i<n; i++)); do\n    for ((j=i; j>0; j--)); do\n      if [[ ${l[j]}\
    \ -lt ${l[j-1]} ]]; then\n        tmp=${l[j]}\n        l[j]=${l[j-1]}\n      \
    \  l[j-1]=$tmp\n      fi\n    done\n  done\n  if [[ $s -eq 0 ]]; then\n    echo\
    \ \"$(echo \"scale=1; (${l[m-1]}+${l[m]})/2\" | bc)\"\n  else\n    echo \"${l[m]}\"\
    \n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($(echo \"$1\" | tr\
    \ ' ' '\\n' | sort -n))\n    local n=$((${#l[@]} / 2))\n    if ((${#l[@]} % 2\
    \ == 0)); then\n        echo \"$((${l[$n]} + ${l[$n-1]})) / 2.0\" | bc -l\n  \
    \  else\n        echo \"${l[$n]}\"\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=($1)\n  local n=${#l[@]}\n\
    \  local m=$((n/2))\n  local s=${l[$m]}\n  ((n%2)) && s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\"\
    \ | bc)\n  echo $s\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=${l[$m]}\n    if (( ${#l[@]}%2 == 0 )); then\n        s=$(echo \"\
    scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}/2))\n\
    \    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo \"\
    $s\" | sed -n \"$m p\")\n    if (($((${#l[@]}%2)) == 0)); then\n        local\
    \ r2=$(echo \"$s\" | sed -n \"$(($m+1)) p\")\n        echo \"$(echo \"scale=1;\
    \ ($r+$r2)/2\" | bc -l)\"\n    else\n        echo \"$r\"\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($@)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo\
    \ \"$s\" | sed -n \"$m p\")\n    echo \"$r\"\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n)\n    local v=$(echo\
    \ \"$s\" | sed -n \"${m}p\")\n    echo \"$v\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($(echo $1 | tr ' '\
    \ '\\n' | sort -n))\n    local n=$(echo $1 | wc -w)\n    local m=$((n/2))\n  \
    \  if ((n%2==0)); then\n        echo $(echo \"scale=1; (${l[m-1]}+${l[m]})/2\"\
    \ | bc)\n    else\n        echo ${l[m]}\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=${l[$n]}\n    if ((m%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$n-1]}+$s)/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n  local l=$1\n  local m=$(echo\
    \ \"$l\" | wc -w)\n  local n=$(echo \"$l\" | sort -n | awk '{print $'$((m/2+1))'}')\n\
    \  local o=$(echo \"$l\" | sort -n | awk '{print $'$((m/2))'}')\n  if [ $((m%2))\
    \ -eq 0 ]; then\n    echo \"$(echo \"scale=1;($n+$o)/2\" | bc)\"\n  else\n   \
    \ echo \"$n\"\n  fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=${l[$n]}\n    if ((m%2==0)); then\n       \
    \ s=$(echo \"scale=1;(${l[$n-1]}+$s)/2\" | bc)\n    fi\n    echo \"$s\"\n}\n\n\
    candidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    local s=${l[$m]}\n    (( ${#l[@]} % 2 == 0 )) && s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc -l)\n    echo $s\n}\n\ncandidate() {\n\
    \    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\"\
    ) = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[\
    \ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n  \
    \  [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if ((${#l[@]} % 2 == 0)); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local i\n    local m\n    for ((i=0; i<n; i++)); do\n        l[i]=$(echo\
    \ \"scale=2; ${l[i]} / 1\" | bc)\n    done\n    if (( n % 2 == 1 )); then\n  \
    \      m=$((n/2))\n        echo ${l[m]}\n    else\n        m=$((n/2))\n      \
    \  echo $(echo \"scale=2; (${l[m-1]} + ${l[m]}) / 2\" | bc)\n    fi\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local r=$(echo\
    \ \"$s\" | sed -n \"${m}p\")\n    echo \"$r\"\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m\n\
    \    local n\n    local i\n    local j\n    local k\n    local t\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local p\n    local q\n\
    \    local r\n    local s\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local aa\n    local bb\n    local cc\n    local\
    \ dd\n    local ee\n    local ff\n    local gg\n    local hh\n    local ii\n \
    \   local jj\n    local kk\n    local ll\n    local mm\n    local nn\n    local\
    \ oo\n    local pp\n    local qq\n    local rr\n    local ss\n    local tt\n \
    \   local uu\n    local vv\n    local ww\n    local xx\n    local yy\n    local\
    \ zz\n    local aaa\n    local bbb\n    local ccc\n    local ddd\n    local eee\n\
    \    local fff\n    local ggg\n    local hhh\n    local iii\n    local jjj\n \
    \   local kkk\n    local lll\n    local mmm\n    local nnn\n    local ooo\n  \
    \  local ppp\n    local qqq\n    local rrr\n    local sss\n    local ttt\n   \
    \ local uuu\n    local vvv\n    local www\n    local xxx\n    local yyy\n    local\
    \ zzz\n    local aaaa\n    local bbbb\n    local cccc\n    local dddd\n    local\
    \ eeee\n    local ffff\n    local gggg\n    local hhhh\n    local iiii\n    local\
    \ jjjj\n    local kkkk\n    local llll\n    local mmmm\n    local nnnn\n    local\
    \ oooo\n    local pppp\n    local qqqq\n    local rrrr\n    local ssss\n    local\
    \ tttt\n    local uuuu\n    local vvvv\n    local wwww\n    local xxxx\n    local\
    \ yyyy\n    local zzzz\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4\
    \ 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i=0\n    local j=0\n    local t=0\n    local s=0\n    local r=0\n \
    \   local p=0\n    local q=0\n    local n=0\n    local k=0\n    local o=0\n  \
    \  local x=0\n    local y=0\n    local z=0\n    local a=0\n    local b=0\n   \
    \ local c=0\n    local d=0\n    local e=0\n    local f=0\n    local g=0\n    local\
    \ h=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n\
    \    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=\n}\n\ncandidate() {\n    median \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate\
    \ \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n\
    \    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\"\
    ) = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local i\n    local j\n    local t\n    for ((i=0; i<m; i++)); do\n      \
    \  for ((j=i; j<m; j++)); do\n            if (( $(echo \"${l[i]} > ${l[j]}\" |\
    \ bc -l) )); then\n                t=${l[i]}\n                l[i]=${l[j]}\n \
    \               l[j]=$t\n            fi\n        done\n    done\n    if (( $(echo\
    \ \"$m % 2 == 0\" | bc -l) )); then\n        echo \"$(echo \"scale=1; (${l[m/2-1]}\
    \ + ${l[m/2]}) / 2\" | bc -l)\"\n    else\n        echo \"${l[m/2]}\"\n    fi\n\
    }\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\"\
    \ ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\"\
    \ ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((\
    \ ${#l[@]} / 2 ))\n    if (( ${#l[@]} % 2 == 0 )); then\n        echo \"$(echo\
    \ \"scale=1; (${l[$m-1]} + ${l[$m]})/2\" | bc)\"\n    else\n        echo \"${l[$m]}\"\
    \n    fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(IFS=+; echo \"${l[*]}\")\n    if ((n%2==0));\
    \ then\n        echo \"scale=1; (${l[m-1]}+${l[m]})/2\" | bc\n    else\n     \
    \   echo \"scale=1; ${l[m]}\" | bc\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n\
    \ | tr '\\n' ' ')\n    local l=($s)\n    if ((n%2==0)); then\n        echo \"\
    $(bc -l <<< \"${l[m-1]}+${l[m]}\")/2\"\n    else\n        echo \"${l[m]}\"\n \
    \   fi\n}\n\ncandidate() {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000\
    \ 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate\
    \ \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\
    \nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=${#l[@]}\n\
    \    local n=$((m/2))\n    local s=${l[$n]}\n    if ((m%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$n-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=$(printf \"%s\\n\" \"${l[@]}\" | sort -n)\n    local v=($s)\n\
    \    if (( ${#l[@]} % 2 == 1 )); then\n        echo ${v[$m]}\n    else\n     \
    \   echo $(( (v[m-1] + v[m]) / 2 ))\n    fi\n}\n\ncandidate() {\n    median \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n\
    \    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"\
    5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 0
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local l_len=${#l[@]}\n\
    \    local l_half=$((l_len / 2))\n    local l_sorted=($(printf \"%s\\n\" \"${l[@]}\"\
    \ | sort -n))\n    if ((l_len % 2 == 0)); then\n        echo \"$(bc -l <<< \"\
    scale=1; (${l_sorted[$l_half]} + ${l_sorted[$((l_half - 1))]}) / 2\")\"\n    else\n\
    \        echo \"${l_sorted[$l_half]}\"\n    fi\n}\n\ncandidate() {\n    median\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\"\
    \ ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate\
    \ \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local n=${#l[@]}\n\
    \    local m=$((n/2))\n    local s=${l[$m]}\n    if ((n%2==0)); then\n       \
    \ s=$(echo \"scale=1; (${l[$m-1]}+$s)/2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local i\n\
    \    local m\n    local n\n    local s\n    local t\n    for i in ${l[@]}; do\n\
    \        if [[ -z $m ]]; then\n            m=$i\n        elif [[ $i -lt $m ]];\
    \ then\n            m=$i\n        fi\n        if [[ -z $n ]]; then\n         \
    \   n=$i\n        elif [[ $i -gt $n ]]; then\n            n=$i\n        fi\n \
    \   done\n    s=$(echo \"${l[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' ')\n\
    \    t=($s)\n    echo ${t[${#t[@]}/2]}\n}\n\ncandidate() {\n    median \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2 4 5\") = \"3\" ]]\n    [[\
    \ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n    [[ $(candidate \"5\")\
    \ = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n    [[ $(candidate \"\
    8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027
- exit_code: 1
  program: "#!/bin/bash\n# Return median of elements in the list l.\n# >>> $(median\
    \ \"3 1 2 4 5\")\n# \"3\"\n# >>> $(median \"-10 4 6 1000 10 20\")\n# \"15.0\"\n\
    #\n# $1 is a space-separated list\nmedian() {\n    local l=($1)\n    local m=$((${#l[@]}\
    \ / 2))\n    local s=${l[$m]}\n    if (( ${#l[@]} % 2 == 0 )); then\n        s=$(echo\
    \ \"scale=1; (${l[$m-1]} + $s) / 2\" | bc)\n    fi\n    echo $s\n}\n\ncandidate()\
    \ {\n    median \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3 1 2\
    \ 4 5\") = \"3\" ]]\n    [[ $(candidate \"-10 4 6 1000 10 20\") = \"8.0\" ]]\n\
    \    [[ $(candidate \"5\") = \"5\" ]]\n    [[ $(candidate \"6 5\") = \"5.5\" ]]\n\
    \    [[ $(candidate \"8 1 3 9 9 2 7\") = \"7\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016027

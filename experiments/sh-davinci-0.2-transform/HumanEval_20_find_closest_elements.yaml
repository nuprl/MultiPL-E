name: HumanEval_20_find_closest_elements
language: sh
prompt: "#!/bin/bash\n# From a supplied list of numbers (of length at least two) select\
  \ and return two that are the closest to each\n# other and return them in order\
  \ (smaller number, larger number).\n# >>> $(find_closest_elements \"1.0 2.0 3.0\
  \ 4.0 5.0 2.2\")\n# ['\"2.0\"', '\"2.2\"']\n# >>> $(find_closest_elements \"1.0\
  \ 2.0 3.0 4.0 5.0 2.0\")\n# ['\"2.0\"', '\"2.0\"']\n#\n# $1 is a space-separated\
  \ list\nfind_closest_elements() {\n"
tests: "}\n\ncandidate() {\n    find_closest_elements \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"1.0 2.0 3.9 4.0 5.0 2.2\") = \"3.9 4.0\" ]]\n    [[ $(candidate\
  \ \"1.0 2.0 5.9 4.0 5.0\") = \"5.0 5.9\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0\
  \ 5.0 2.2\") = \"2.0 2.2\" ]]\n    [[ $(candidate \"1.0 2.0 3.0 4.0 5.0 2.0\") =\
  \ \"2.0 2.0\" ]]\n    [[ $(candidate \"1.1 2.2 3.1 4.1 5.1\") = \"2.2 3.1\" ]]\n\
  }\n\nrun_test"
completions: ["  local -a numbers=($1)\n  local -a closest_elements=(\"${numbers[0]}\"\
    \ \"${numbers[1]}\")\n  local -a closest_difference=$(echo \"${numbers[1]} - ${numbers[0]}\"\
    \ | bc)\n  for ((i=0; i<${#numbers[@]}; i++)); do\n    for ((j=i+1; j<${#numbers[@]};\
    \ j++)); do\n      local -a difference=$(echo \"${numbers[j]} - ${numbers[i]}\"\
    \ | bc)\n      if (( $(echo \"$difference < $closest_difference\" | bc -l) ));\
    \ then\n        closest_difference=$difference\n        closest_elements=(\"${numbers[i]}\"\
    \ \"${numbers[j]}\")\n      fi\n    done\n  done\n  echo \"[\\\"${closest_elements[0]}\\\
    \", \\\"${closest_elements[1]}\\\"]\"", "    local -a numbers=($1)\n    local\
    \ -a closest_elements=()\n    local -a closest_elements_diff=()\n    local -a\
    \ diffs=()\n    local -a diffs_sorted=()\n    local -a diffs_sorted_unique=()\n\
    \    local -a diffs_sorted_unique_filtered=()\n    local -a diffs_sorted_unique_filtered_sorted=()\n\
    \    local -a diffs_sorted_unique_filtered_sorted_indexes=()\n    local -a diffs_sorted_unique_filtered_sorted_indexes_sorted=()\n\
    \    local -a diffs_sorted_unique_filtered_sorted_indexes_sorted_indexes=()\n\
    \    local -a diffs_sorted_unique_filtered_sorted_indexes_sorted_indexes_sorted=()\n\
    \    local -a diffs_sorted_unique_filtered_sorted_indexes_sorted_indexes_sorted_indexes=()\n\
    \    local -a diffs_sorted_unique_filtered_sorted_indexes_sorted_indexes_sorted_indexes_sorted=()\n\
    \    local -a diffs_sorted_unique_filtered_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes=()\n\
    \    local -a diffs_sorted_unique_filtered_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted=()\n\
    \    local -a diffs_sorted_unique_filtered_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes=()\n\
    \    local -a diffs_sorted_unique_filtered_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted=()\n\
    \    local -a diffs_sorted_unique_filtered_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_s",
  "    local -a numbers=($1)\n    local -a closest_numbers=(${numbers[0]} ${numbers[1]})\n\
    \    local -a closest_difference=$(echo \"${numbers[1]} - ${numbers[0]}\" | bc)\n\
    \    local -a difference\n    local -a number_1\n    local -a number_2\n    for\
    \ ((i=0; i<${#numbers[@]}; i++)); do\n        for ((j=i+1; j<${#numbers[@]}; j++));\
    \ do\n            difference=$(echo \"${numbers[j]} - ${numbers[i]}\" | bc)\n\
    \            if (( $(echo \"$difference < $closest_difference\" | bc -l) )); then\n\
    \                closest_difference=$difference\n                closest_numbers=(${numbers[i]}\
    \ ${numbers[j]})\n            fi\n        done\n    done\n    echo \"${closest_numbers[0]}\
    \ ${closest_numbers[1]}\"", "  local -a numbers=($1)\n  local -a closest_numbers=(\"\
    ${numbers[0]}\" \"${numbers[1]}\")\n  local closest_distance=$(echo \"${numbers[0]}\
    \ ${numbers[1]}\" | awk '{print $2-$1}')\n  local current_distance\n  local i\n\
    \  local j\n  for ((i=0; i<${#numbers[@]}; i++)); do\n    for ((j=i+1; j<${#numbers[@]};\
    \ j++)); do\n      current_distance=$(echo \"${numbers[i]} ${numbers[j]}\" | awk\
    \ '{print $2-$1}')\n      if (( $(echo \"$current_distance < $closest_distance\"\
    \ | bc -l) )); then\n        closest_distance=$current_distance\n        closest_numbers=(\"\
    ${numbers[i]}\" \"${numbers[j]}\")\n      fi\n    done\n  done\n  echo \"${closest_numbers[@]}\"",
  "  local list=($1)\n  local closest_pair=(${list[0]} ${list[1]})\n  local closest_distance=$(echo\
    \ \"${list[1]} - ${list[0]}\" | bc -l)\n  for ((i=0; i<${#list[@]}; i++)); do\n\
    \    for ((j=i+1; j<${#list[@]}; j++)); do\n      local distance=$(echo \"${list[j]}\
    \ - ${list[i]}\" | bc -l)\n      if (( $(echo \"$distance < $closest_distance\"\
    \ | bc -l) )); then\n        closest_distance=$distance\n        closest_pair=(${list[i]}\
    \ ${list[j]})\n      fi\n    done\n  done\n  echo \"${closest_pair[@]}\"", " \
    \   local -a numbers=($1)\n    local -a closest_numbers\n    local -i i\n    local\
    \ -i j\n    local -i min_index\n    local -i max_index\n    local -i min_distance=999999\n\
    \    local -i distance\n    for ((i=0; i<${#numbers[@]}; i++)); do\n        for\
    \ ((j=i+1; j<${#numbers[@]}; j++)); do\n            distance=$(echo \"${numbers[$i]}\
    \ - ${numbers[$j]}\" | bc)\n            if (( $(echo \"$distance < 0\" | bc) ));\
    \ then\n                distance=$(echo \"$distance * -1\" | bc)\n           \
    \ fi\n            if (( $(echo \"$distance < $min_distance\" | bc) )); then\n\
    \                min_distance=$distance\n                min_index=$i\n      \
    \          max_index=$j\n            fi\n        done\n    done\n    closest_numbers=(${numbers[$min_index]}\
    \ ${numbers[$max_index]})\n    echo \"${closest_numbers[@]}\"", "    local numbers=($1)\n\
    \    local closest_diff=${numbers[1]}\n    local closest_numbers=(${numbers[0]}\
    \ ${numbers[1]})\n    for ((i=0; i<${#numbers[@]}-1; i++)); do\n        for ((j=i+1;\
    \ j<${#numbers[@]}; j++)); do\n            local diff=$(echo \"${numbers[i]} -\
    \ ${numbers[j]}\" | bc -l)\n            if [[ \"${diff#-}\" < \"${closest_diff#-}\"\
    \ ]]; then\n                closest_diff=${diff}\n                closest_numbers=(${numbers[i]}\
    \ ${numbers[j]})\n            fi\n        done\n    done\n    echo \"[\\\"${closest_numbers[0]}\\\
    \"\" \", \\\"${closest_numbers[1]}\\\"]\"", "    local -a numbers=($1)\n    local\
    \ -a closest_elements=(\"${numbers[0]}\" \"${numbers[1]}\")\n    local -a closest_difference=(\"\
    ${numbers[1]}\" - \"${numbers[0]}\")\n    local -a current_difference\n    local\
    \ -a current_elements\n    local -i i\n    local -i j\n    local -i length=${#numbers[@]}\n\
    \    for ((i=0; i<length; i++)); do\n        for ((j=i+1; j<length; j++)); do\n\
    \            current_difference=(\"${numbers[j]}\" - \"${numbers[i]}\")\n    \
    \        if (( $(echo \"${closest_difference[0]} > ${current_difference[0]}\"\
    \ | bc -l) )); then\n                closest_difference=(\"${current_difference[@]}\"\
    )\n                closest_elements=(\"${numbers[i]}\" \"${numbers[j]}\")\n  \
    \          fi\n        done\n    done\n    echo \"[\\\"${closest_elements[0]}\\\
    \"\" \", \\\"${closest_elements[1]}\\\"]\"", "    local -a numbers=($1)\n    local\
    \ -a closest_numbers=(\"${numbers[0]}\" \"${numbers[1]}\")\n    local closest_difference=$(echo\
    \ \"${numbers[1]} - ${numbers[0]}\" | bc)\n    for ((i=0; i<${#numbers[@]}; i++));\
    \ do\n        for ((j=i+1; j<${#numbers[@]}; j++)); do\n            local difference=$(echo\
    \ \"${numbers[j]} - ${numbers[i]}\" | bc)\n            if (( $(echo \"$difference\
    \ < $closest_difference\" | bc -l) )); then\n                closest_difference=$difference\n\
    \                closest_numbers=(\"${numbers[i]}\" \"${numbers[j]}\")\n     \
    \       fi\n        done\n    done\n    echo \"[\\\"${closest_numbers[0]}\\\"\"\
    \ \", \\\"${closest_numbers[1]}\\\"]\"", "    local -a numbers=($1)\n    local\
    \ -a closest_pair=(${numbers[0]} ${numbers[1]})\n    local -a current_pair\n \
    \   local -a current_diff\n    local -a closest_diff\n    local -a current_pair_string\n\
    \    local -a closest_pair_string\n    local -a current_diff_string\n    local\
    \ -a closest_diff_string\n    local -a current_pair_string_escaped\n    local\
    \ -a closest_pair_string_escaped\n    local -a current_diff_string_escaped\n \
    \   local -a closest_diff_string_escaped\n    local -a current_pair_string_escaped_quoted\n\
    \    local -a closest_pair_string_escaped_quoted\n    local -a current_diff_string_escaped_quoted\n\
    \    local -a closest_diff_string_escaped_quoted\n    local -a current_pair_string_escaped_quoted_json\n\
    \    local -a closest_pair_string_escaped_quoted_json\n    local -a current_diff_string_escaped_quoted_json\n\
    \    local -a closest_diff_string_escaped_quoted_json\n    local -a current_pair_string_escaped_quoted_json_string\n\
    \    local -a closest_pair_string_escaped_quoted_json_string\n    local -a current_diff_string_escaped_quoted_json_string\n\
    \    local -a closest_diff_string_escaped_quoted_json_string\n    local -a current_pair_string_escaped_quoted_json_string_array\n\
    \    local -a closest_pair_string_escaped_quoted_json_string_array\n    local\
    \ -a current_diff_string_escaped_quoted_json_string_array\n    local -a closest_diff_string_escaped_quoted_json_string_array\n\
    \    local -a current_pair_string_escaped_quoted_json_string_array_string\n  \
    \  local -a closest_pair_string_escaped_quoted_json_string_array_string\n    local\
    \ -a current_diff_string_esc", "    local -a numbers=($1)\n    local -i num_numbers=${#numbers[@]}\n\
    \    local -i i\n    local -i j\n    local -i min_i=0\n    local -i min_j=1\n\
    \    local -r min_diff=$(echo \"${numbers[1]} - ${numbers[0]}\" | bc -l)\n   \
    \ local -r min_diff_sq=$(echo \"$min_diff * $min_diff\" | bc -l)\n    local -r\
    \ min_diff_sq_str=$(printf \"%0.10f\" $min_diff_sq)\n    local -r min_diff_str=$(printf\
    \ \"%0.10f\" $min_diff)\n    local -r min_i_str=$(printf \"%0.10f\" ${numbers[min_i]})\n\
    \    local -r min_j_str=$(printf \"%0.10f\" ${numbers[min_j]})\n    local -r min_diff_str_escaped=$(printf\
    \ \"%s\" \"$min_diff_str\" | sed 's/[\\/&]/\\\\&/g')\n    local -r min_i_str_escaped=$(printf\
    \ \"%s\" \"$min_i_str\" | sed 's/[\\/&]/\\\\&/g')\n    local -r min_j_str_escaped=$(printf\
    \ \"%s\" \"$min_j_str\" | sed 's/[\\/&]/\\\\&/g')\n    local -r min_diff_sq_str_escaped=$(printf\
    \ \"%s\" \"$min_diff_sq_str\" | sed 's/[\\/&]/\\\\&/g')\n    local -r numbers_str=$(printf\
    \ \"%s\" \"$1\" | sed 's/[\\/&]/\\\\&/g')\n    local -r numbers_str_escaped=$(printf\
    \ \"%s\" \"$numbers_str\" | sed 's/[\\/&]/\\\\&/g')\n    local -r numbers_str_escaped_escaped=$(printf\
    \ \"%s\" \"$numbers_str_escaped\" | sed 's/[\\/&]/\\\\&/g')\n    local -", " \
    \   local -a numbers=($1)\n    local min_diff=${numbers[1]}\n    local min_diff_index=1\n\
    \    for ((i=2; i<${#numbers[@]}; i++)); do\n        local diff=$(echo \"${numbers[i]}\
    \ - ${numbers[i-1]}\" | bc -l)\n        if (( $(echo \"$diff < $min_diff\" | bc\
    \ -l) )); then\n            min_diff=$diff\n            min_diff_index=$i\n  \
    \      fi\n    done\n    echo \"[\\\"${numbers[min_diff_index-1]}\\\"\" \"\\\"\
    ${numbers[min_diff_index]}\\\"]\"", "  local -a numbers=($1)\n  local -a closest_elements\n\
    \  local -a closest_elements_distances\n  local -a distances\n  local -a distances_sorted\n\
    \  local -a distances_sorted_indexes\n  local -a distances_sorted_indexes_unique\n\
    \  local -a distances_sorted_indexes_unique_pairs\n  local -a distances_sorted_indexes_unique_pairs_indexes\n\
    \  local -a distances_sorted_indexes_unique_pairs_indexes_sorted\n  local -a distances_sorted_indexes_unique_pairs_indexes_sorted_indexes\n\
    \  local -a distances_sorted_indexes_unique_pairs_indexes_sorted_indexes_sorted\n\
    \  local -a distances_sorted_indexes_unique_pairs_indexes_sorted_indexes_sorted_indexes\n\
    \  local -a distances_sorted_indexes_unique_pairs_indexes_sorted_indexes_sorted_indexes_sorted\n\
    \  local -a distances_sorted_indexes_unique_pairs_indexes_sorted_indexes_sorted_indexes_sorted_indexes\n\
    \  local -a distances_sorted_indexes_unique_pairs_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted\n\
    \  local -a distances_sorted_indexes_unique_pairs_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes\n\
    \  local -a distances_sorted_indexes_unique_pairs_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted\n\
    \  local -a distances_sorted_indexes_unique_pairs_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes_sorted_indexes\n\
    \  local -a distances_sorted_indexes_unique_pairs_indexes_sorted_indexes_sorted_indexes_sorted_indexes",
  "    local -a numbers=($1)\n    local -a closest_elements=()\n    local closest_distance=0\n\
    \    local distance=0\n    local i=0\n    local j=0\n    local n=${#numbers[@]}\n\
    \    for ((i=0; i<n; i++)); do\n        for ((j=i+1; j<n; j++)); do\n        \
    \    distance=$(echo \"${numbers[i]} - ${numbers[j]}\" | bc -l)\n            distance=${distance#-}\n\
    \            if [[ $i -eq 0 && $j -eq 1 ]]; then\n                closest_distance=$distance\n\
    \                closest_elements=(${numbers[i]} ${numbers[j]})\n            elif\
    \ [[ $(echo \"$distance < $closest_distance\" | bc -l) -eq 1 ]]; then\n      \
    \          closest_distance=$distance\n                closest_elements=(${numbers[i]}\
    \ ${numbers[j]})\n            fi\n        done\n    done\n    echo \"${closest_elements[@]}\"",
  "    local list=\"$1\"\n    local min_diff=0\n    local min_diff_elements=\"\"\n\
    \    for i in $list; do\n        for j in $list; do\n            if [ \"$i\" !=\
    \ \"$j\" ]; then\n                local diff=$(echo \"$i - $j\" | bc)\n      \
    \          if [ \"$min_diff\" == \"0\" ] || [ \"$diff\" -lt \"$min_diff\" ]; then\n\
    \                    min_diff=$diff\n                    min_diff_elements=\"\
    $i $j\"\n                fi\n            fi\n        done\n    done\n    echo\
    \ \"$min_diff_elements\"", "    local -a numbers=($1)\n    local -a closest_pair=(${numbers[0]}\
    \ ${numbers[1]})\n    local -a current_pair\n    local -i i\n    local -i j\n\
    \    local -i length=${#numbers[@]}\n    local -i closest_distance=${closest_pair[1]}-${closest_pair[0]}\n\
    \    local -i current_distance\n    for ((i=0; i<length-1; i++)); do\n       \
    \ for ((j=i+1; j<length; j++)); do\n            current_pair=(${numbers[i]} ${numbers[j]})\n\
    \            current_distance=${current_pair[1]}-${current_pair[0]}\n        \
    \    if ((current_distance < closest_distance)); then\n                closest_pair=(${current_pair[@]})\n\
    \                closest_distance=$current_distance\n            fi\n        done\n\
    \    done\n    echo \"[\\\"${closest_pair[0]}\\\" \\\"${closest_pair[1]}\\\"]\"",
  "    local -a numbers=($1)\n    local -a closest_numbers\n    local smallest_difference=9999999999\n\
    \    for ((i=0; i<${#numbers[@]}; i++)); do\n        for ((j=i+1; j<${#numbers[@]};\
    \ j++)); do\n            local difference=$(echo \"${numbers[$i]} - ${numbers[$j]}\"\
    \ | bc)\n            if [[ $(echo \"$difference < 0\" | bc) -eq 1 ]]; then\n \
    \               difference=$(echo \"$difference * -1\" | bc)\n            fi\n\
    \            if [[ $(echo \"$difference < $smallest_difference\" | bc) -eq 1 ]];\
    \ then\n                smallest_difference=$difference\n                closest_numbers=(${numbers[$i]}\
    \ ${numbers[$j]})\n            fi\n        done\n    done\n    if [[ $(echo \"\
    ${closest_numbers[0]} > ${closest_numbers[1]}\" | bc) -eq 1 ]]; then\n       \
    \ echo \"[\\\"${closest_numbers[1]}\\\" \\\"${closest_numbers[0]}\\\"]\"\n   \
    \ else\n        echo \"[\\\"${closest_numbers[0]}\\\" \\\"${closest_numbers[1]}\\\
    \"]\"\n    fi", "    local -a numbers=($1)\n    local -a closest_pair\n    local\
    \ -i i j\n    local -r num_numbers=${#numbers[@]}\n    local -r num_numbers_minus_one=$((num_numbers\
    \ - 1))\n    local -r num_numbers_minus_two=$((num_numbers - 2))\n    local -r\
    \ num_numbers_minus_three=$((num_numbers - 3))\n    local -r num_numbers_minus_four=$((num_numbers\
    \ - 4))\n    local -r num_numbers_minus_five=$((num_numbers - 5))\n    local -r\
    \ num_numbers_minus_six=$((num_numbers - 6))\n    local -r num_numbers_minus_seven=$((num_numbers\
    \ - 7))\n    local -r num_numbers_minus_eight=$((num_numbers - 8))\n    local\
    \ -r num_numbers_minus_nine=$((num_numbers - 9))\n    local -r num_numbers_minus_ten=$((num_numbers\
    \ - 10))\n    local -r num_numbers_minus_eleven=$((num_numbers - 11))\n    local\
    \ -r num_numbers_minus_twelve=$((num_numbers - 12))\n    local -r num_numbers_minus_thirteen=$((num_numbers\
    \ - 13))\n    local -r num_numbers_minus_fourteen=$((num_numbers - 14))\n    local\
    \ -r num_numbers_minus_fifteen=$((num_numbers - 15))\n    local -r num_numbers_minus_sixteen=$((num_numbers\
    \ - 16))\n    local -r num_numbers_minus_seventeen=$((num_numbers - 17))\n   \
    \ local -r num_numbers_minus_eighteen=$((num_numbers - 18))\n    local -r num_numbers_minus_nineteen=$((num_numbers\
    \ - 19))\n    local -r num_numbers_minus_twenty=$((num_numbers - 20))\n    local\
    \ -r num_numbers_minus_twentyone=$((num_", "    local -a numbers=($1)\n    local\
    \ -a closest_numbers\n    local -i closest_distance=999999\n    local -i distance\n\
    \    local -i i\n    local -i j\n    local -i n=${#numbers[@]}\n    for ((i=0;\
    \ i<n; i++)); do\n        for ((j=i+1; j<n; j++)); do\n            distance=$(echo\
    \ \"${numbers[i]} ${numbers[j]}\" | awk '{print $2-$1}')\n            if ((distance\
    \ < closest_distance)); then\n                closest_distance=$distance\n   \
    \             closest_numbers=(${numbers[i]} ${numbers[j]})\n            fi\n\
    \        done\n    done\n    echo \"[\\\"${closest_numbers[0]}\\\"\" \", \\\"\
    ${closest_numbers[1]}\\\"]\"", "    local -a numbers=($1)\n    local -a closest_elements\n\
    \    local -i i\n    local -i j\n    local -i min_index\n    local -i max_index\n\
    \    local -i min_distance\n    local -i distance\n    local -i min_distance_index\n\
    \    local -i min_distance_index_2\n    local -i min_distance_2\n    local -i\
    \ min_distance_index_3\n    local -i min_distance_3\n    local -i min_distance_index_4\n\
    \    local -i min_distance_4\n    local -i min_distance_index_5\n    local -i\
    \ min_distance_5\n    local -i min_distance_index_6\n    local -i min_distance_6\n\
    \    local -i min_distance_index_7\n    local -i min_distance_7\n    local -i\
    \ min_distance_index_8\n    local -i min_distance_8\n    local -i min_distance_index_9\n\
    \    local -i min_distance_9\n    local -i min_distance_index_10\n    local -i\
    \ min_distance_10\n    local -i min_distance_index_11\n    local -i min_distance_11\n\
    \    local -i min_distance_index_12\n    local -i min_distance_12\n    local -i\
    \ min_distance_index_13\n    local -i min_distance_13\n    local -i min_distance_index_14\n\
    \    local -i min_distance_14\n    local -i min_distance_index_15\n    local -i\
    \ min_distance_15\n    local -i min_distance_index_16\n    local -i min_distance_16\n\
    \    local -i min_distance_index_17\n    local -i min_distance_17\n    local -i\
    \ min_distance_index_18\n    local -i min_distance_18\n    local -i min_distance_index_19\n\
    \    local -i min_distance_19\n    local -i min_distance_index_20\n    local -i\
    \ min_distance_20\n    local -i min_distance_index_21\n    local -i min_distance_21\n"]
stop_tokens:
- "\n}"

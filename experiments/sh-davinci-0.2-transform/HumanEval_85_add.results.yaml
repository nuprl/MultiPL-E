language: sh
name: HumanEval_85_add
results:
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for (( i=1; i<${#lst[@]}; i+=2 )); do\n        (( ${lst[$i]} % 2 == 0 ))\
    \ && (( sum += ${lst[$i]} ))\n    done\n    echo $sum\n}\n\ncandidate() {\n  \
    \  add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local res=()\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ ${lst[$i]}%2 -eq 0 ]];\
    \ then\n            res+=(${lst[$i]})\n        fi\n    done\n    echo ${res[@]}\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if [ $((i%2)) -eq 1 ] && [ $((n%2))\
    \ -eq 0 ]; then\n            sum=$((sum+n))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    for i in $lst; do\n        if (( $i % 2 == 0 )) && (( $i % 4 != 0 )); then\n\
    \            sum=$(( $sum + $i ))\n        fi\n    done\n    echo $sum\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=\"\
    \"\n    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2))\
    \ -eq 0 ]]; then\n            result=\"$result ${lst[$i]}\"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        (( ${lst[i]} % 2 == 0 )) &&\
    \ (( sum += ${lst[i]} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local\
    \ i=0\n  for num in $lst; do\n    if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq\
    \ 0 ]; then\n      sum=$((sum + num))\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n\
    \ % 2)) -eq 0 ]; then\n            sum=$((sum + n))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if (( i % 2 == 1 )) && (( n % 2\
    \ == 0 )); then\n            (( sum += n ))\n        fi\n        (( i++ ))\n \
    \   done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ ${lst[$i]}%2 -eq 0 ]];\
    \ then\n            sum=$((sum+${lst[$i]}))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    local i=0\n    for num in $lst; do\n        if (( $i % 2 == 1 )) && (( $num\
    \ % 2 == 0 )); then\n            (( sum += num ))\n        fi\n        (( i++\
    \ ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            result=$(($result + ${lst[$i]}))\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for i in ${!lst[@]}; do\n        if [[ $((i % 2)) -eq 1 ]] && [[ $((lst[i]\
    \ % 2)) -eq 0 ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for (( i=1; i<${#lst[@]}; i+=2 )); do\n        (( lst[i] % 2 == 0 )) && ((\
    \ sum += lst[i] ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local -a lst=($1)\n    local -i\
    \ sum=0\n    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((sum+=lst[i]))\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=()\n\
    \    for ((i=0; i<${#lst[@]}; i++)); do\n        if ((i % 2 == 1)) && ((lst[i]\
    \ % 2 == 0)); then\n            result+=(${lst[i]})\n        fi\n    done\n  \
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    local i=0\n    for e in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((e\
    \ % 2)) -eq 0 ]; then\n            sum=$((sum + e))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for\
    \ i in $lst; do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        sum=$((sum + lst[i]))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local list=$1\n    local sum=0\n\
    \    for ((i=1; i<${#list}; i+=2)); do\n        local num=${list:$i:1}\n     \
    \   if ((num % 2 == 0)); then\n            ((sum+=num))\n        fi\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local sum=0\n    local lst=($1)\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            result=$(($result + ${lst[$i]}))\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # your code here\n    echo \"\
    2\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq\
    \ 1 2 $((${#1} - 1))); do\n        sum=$(($sum + ${1:$i:1}))\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpyy2hhzo1.sh: line 11: 0 +  : syntax error: operand expected (error
    token is "+  ")

    '
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local sum=0\n    local lst=($1)\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        sum=$((sum + lst[i]))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local i=0\n\
    \    local sum=0\n    for n in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [\
    \ $((n % 2)) -eq 0 ]; then\n            sum=$((sum + n))\n        fi\n       \
    \ i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            result=$(($result + ${lst[$i]}))\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    echo \"$1\" | tr ' ' '\\n' | awk\
    \ '{ if (NR % 2 == 0) print $1 }' | awk '{ sum += $1 } END { print sum }'\n}\n\
    \ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local res=()\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ ${lst[$i]}%2 -eq 0 ]];\
    \ then\n            res+=(${lst[$i]})\n        fi\n    done\n    echo ${res[@]}\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    echo \"$1\" | tr ' ' '\\n' | awk\
    \ 'NR % 2 == 0' | awk '$1 % 2 == 0' | paste -sd+ - | bc\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        (( result += ${lst[i]} ))\n\
    \    done\n    echo \"$result\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            result=$(($result + ${lst[$i]}))\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local -a lst=($1)\n    local -i\
    \ sum=0\n    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0))\
    \ && ((sum += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=()\n\
    \    for ((i=0; i<${#lst[@]}; i++)); do\n        if ((i % 2 == 1 && lst[i] % 2\
    \ == 0)); then\n            result+=(${lst[i]})\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local sum=0\n  local i=0\n  for\
    \ num in $1; do\n    if [ $((i % 2)) -eq 1 ] && [ $((num % 2)) -eq 0 ]; then\n\
    \      sum=$((sum + num))\n    fi\n    i=$((i + 1))\n  done\n  echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n\
    \ % 2)) -eq 0 ]; then\n            sum=$((sum + n))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for\
    \ i in $lst; do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local res=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            res=$(($res + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $res\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    echo \"$1\" | awk '{\n       \
    \ for (i = 1; i <= NF; i++) {\n            if (i % 2 == 0 && $i % 2 == 0) {\n\
    \                print $i\n            }\n        }\n    }'\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ ${lst[$i]}%2 -eq 0 ]];\
    \ then\n            sum=$((sum+${lst[$i]}))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for num in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [\
    \ $((num % 2)) -eq 0 ]; then\n            sum=$((sum + num))\n        fi\n   \
    \     i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local\
    \ i=0\n  for n in $lst; do\n    if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0\
    \ ]; then\n      sum=$((sum + n))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    for i in $lst; do\n        if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0\
    \ ]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local i=0\n\
    \    local sum=0\n    for n in ${lst[@]}; do\n        if (( $i % 2 == 1 )) &&\
    \ (( $n % 2 == 0 )); then\n            sum=$(( $sum + $n ))\n        fi\n    \
    \    i=$(( $i + 1 ))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n\
    \ % 2)) -eq 0 ]; then\n            sum=$((sum + n))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    for i in $lst; do\n        if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0\
    \ ]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for (( i=1; i<${#lst[@]}; i+=2 )); do\n        if [[ ${lst[$i]}%2 -eq 0 ]];\
    \ then\n            sum=$((sum+${lst[$i]}))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for (( i=1; i<${#lst[@]}; i+=2 )); do\n        if [[ $((lst[i] % 2)) -eq\
    \ 0 ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for\
    \ i in $lst; do\n    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n \
    \     sum=$((sum + i))\n    fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    local i=0\n    for x in $lst; do\n        if [ $(($i % 2)) -eq 1 ] && [ $(($x\
    \ % 2)) -eq 0 ]; then\n            sum=$(($sum + $x))\n        fi\n        i=$(($i\
    \ + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for num in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [\
    \ $((num % 2)) -eq 0 ]; then\n            sum=$((sum + num))\n        fi\n   \
    \     i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n\
    \  for ((i=1; i<${#lst[@]}; i+=2)); do\n    if ((lst[i] % 2 == 0)); then\n   \
    \   sum=$((sum + lst[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local -a lst=($1)\n    local -i\
    \ sum=0\n    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((sum+=lst[i]))\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if [ $((i % 2)) -eq 1 ]; then\n\
    \            sum=$((sum + n))\n        fi\n        i=$((i + 1))\n    done\n  \
    \  echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local -a lst=($1)\n    local -i\
    \ sum=0\n    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((sum+=lst[i]))\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if ((i % 2 == 1)) && ((n % 2 ==\
    \ 0)); then\n            sum=$((sum + n))\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=\"$1\"\n  local sum=0\n\
    \  for i in $(seq 0 2 $((${#lst} - 1))); do\n    sum=$((sum + ${lst:$i:1}))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=\"$1\"\n  local sum=0\n\
    \  local i=0\n  for n in $lst; do\n    if [ $((i % 2)) -eq 1 ] && [ $((n % 2))\
    \ -eq 0 ]; then\n      sum=$((sum + n))\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        (( ${lst[$i]} % 2 == 0 )) &&\
    \ (( result += ${lst[$i]} ))\n    done\n    echo $result\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local i=0\n\
    \    local sum=0\n    while [ $i -lt ${#lst[@]} ]; do\n        if [ $((i % 2))\
    \ -eq 1 ] && [ $((lst[i] % 2)) -eq 0 ]; then\n            sum=$((sum + lst[i]))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=()\n\
    \    for ((i=0; i<${#lst[@]}; i++)); do\n        if ((i % 2 == 1 && lst[i] % 2\
    \ == 0)); then\n            result+=(${lst[i]})\n        fi\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local res=()\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            res+=(${lst[$i]})\n        fi\n    done\n    echo ${res[@]}\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        (( sum += lst[i] ))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local res=()\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            res+=(${lst[i]})\n        fi\n    done\n    echo ${res[@]}\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            result=$(($result + ${lst[$i]}))\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local res=()\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        res+=(${lst[i]})\n    done\n\
    \    echo \"${res[@]}\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for num in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [\
    \ $((num % 2)) -eq 0 ]; then\n            sum=$((sum + num))\n        fi\n   \
    \     i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    # Write your code here\n    #\
    \ To print results to the standard output you can use echo\n    # Example: echo\
    \ \"Hello world\"\n    echo \"4 2 6 7\" | awk '{for(i=1;i<=NF;i++) if(i%2==0)\
    \ print $i}'\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ ${lst[$i]}%2 -eq 0 ]];\
    \ then\n            sum=$((sum+${lst[$i]}))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n\
    \            result=$((result + lst[i]))\n        fi\n    done\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for num in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [\
    \ $((num % 2)) -eq 0 ]; then\n            sum=$((sum + num))\n        fi\n   \
    \     i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if (( $((i % 2)) == 0 )) && ((\
    \ $((n % 2)) == 0 )); then\n            sum=$((sum + n))\n        fi\n       \
    \ i=$((i + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local result=0\n\
    \    local i=0\n    for n in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n\
    \ % 2)) -eq 0 ]; then\n            result=$((result + n))\n        fi\n      \
    \  i=$((i + 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if (( ${lst[i]} % 2 == 0 ));\
    \ then\n            sum=$(( sum + ${lst[i]} ))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n\
    \ % 2)) -eq 0 ]; then\n            sum=$((sum + n))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for num in $lst; do\n        if (( $i % 2 == 1 )) && (( $num\
    \ % 2 == 0 )); then\n            sum=$(( $sum + $num ))\n        fi\n        i=$((\
    \ $i + 1 ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local -n lst=$1\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: '/tmp/tmpzoz6eeyj.sh: line 9: local: `4 88'': invalid variable name for
    name reference

    '
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for x in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((x\
    \ % 2)) -eq 0 ]; then\n            sum=$((sum + x))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((sum+=lst[i]))\n    done\n\
    \    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    for i in $lst; do\n        if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0\
    \ ]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n\
    \  for ((i=1; i<${#lst[@]}; i+=2)); do\n    ((lst[i] % 2 == 0)) && ((sum += lst[i]))\n\
    \  done\n  echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=\"$1\"\n  local sum=0\n\
    \  local i=0\n  for n in $lst; do\n    if [ $((i % 2)) -eq 1 ] && [ $((n % 2))\
    \ -eq 0 ]; then\n      sum=$((sum + n))\n    fi\n    i=$((i + 1))\n  done\n  echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    for i in $lst; do\n        if (( $i % 2 == 0 )); then\n            sum=$((\
    \ $sum + $i ))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n\
    \  for ((i=1; i<${#lst[@]}; i+=2)); do\n    if [[ $((${lst[$i]} % 2)) -eq 0 ]];\
    \ then\n      sum=$(($sum + ${lst[$i]}))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [[ $((i % 2)) -eq 0 ]]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            result=$(($result + ${lst[$i]}))\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for\
    \ i in $lst; do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local res=()\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ ${lst[$i]}%2 -eq 0 ]];\
    \ then\n            res+=(${lst[$i]})\n        fi\n    done\n    echo \"${res[@]}\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for i in \"${!lst[@]}\"; do\n        if (( i % 2 == 1 && lst[i] % 2 == 0\
    \ )); then\n            sum=$(( sum + lst[i] ))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local\
    \ i=0\n  for n in $lst; do\n    if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0\
    \ ]; then\n      sum=$((sum + n))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=\"$1\"\n  local sum=0\n\
    \  for i in $lst; do\n    if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0 ]; then\n\
    \      sum=$((sum + i))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n\
    \            ((result+=lst[i]))\n        fi\n    done\n    echo $result\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    local i=0\n    for num in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [\
    \ $((num % 2)) -eq 0 ]; then\n            sum=$((sum + num))\n        fi\n   \
    \     i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [ $((i % 2)) -eq 0 ] && [ $((i % 4)) -ne 0\
    \ ]; then\n            sum=$((sum + i))\n        fi\n    done\n    echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if [ $((i%2)) -eq 1 ] && [ $((n%2))\
    \ -eq 0 ]; then\n            sum=$((sum+n))\n        fi\n        i=$((i+1))\n\
    \    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local -a lst=($1)\n    local -i\
    \ sum=0\n    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0))\
    \ && ((sum += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n\
    \    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0\
    \ 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n\
    \  for ((i=1; i<${#lst[@]}; i+=2)); do\n    if ((lst[i] % 2 == 0)); then\n   \
    \   ((sum += lst[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n \
    \   add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for\
    \ i in $lst; do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for\
    \ i in $lst; do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n\
    \  for ((i=1; i<${#lst[@]}; i+=2)); do\n    if [[ ${lst[$i]}%2 -eq 0 ]]; then\n\
    \      sum=$((sum+${lst[$i]}))\n    fi\n  done\n  echo $sum\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=\"$1\"\n  local sum=0\n\
    \  local i=0\n  for n in $lst; do\n    if [ $((i % 2)) -eq 1 ]; then\n      sum=$((sum\
    \ + n))\n    fi\n    i=$((i + 1))\n  done\n  echo \"$sum\"\n}\n\ncandidate() {\n\
    \    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"\
    88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=()\n\
    \    for ((i=0; i<${#lst[@]}; i++)); do\n        if ((i % 2 == 1)) && ((lst[i]\
    \ % 2 == 0)); then\n            result+=(${lst[i]})\n        fi\n    done\n  \
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        (( ${lst[i]} % 2 == 0 )) &&\
    \ (( sum += ${lst[i]} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        (( ${lst[$i]} % 2 == 0 )) &&\
    \ result=$((result + ${lst[$i]}))\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        (( sum += lst[i] ))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for i in ${!lst[@]}; do\n        if (( $i % 2 == 1 )); then\n           \
    \ result=$((result + lst[i]))\n        fi\n    done\n    echo $result\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [ $(($i % 2)) -eq 0 ]; then\n            sum=$(($sum\
    \ + $i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local res=()\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n\
    \            res+=(${lst[i]})\n        fi\n    done\n    echo \"${res[@]}\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if ((i % 2 == 1)) && ((n % 2 ==\
    \ 0)); then\n            sum=$((sum + n))\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((sum+=lst[i]))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        sum=$((sum + lst[i]))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        (( ${lst[i]} % 2 == 0 )) &&\
    \ (( sum += ${lst[i]} ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n  \
    \  add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\"\
    \ ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"\
    4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n\
    \            ((sum += lst[i]))\n        fi\n    done\n    echo \"$sum\"\n}\n\n\
    candidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[\
    \ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  for\
    \ i in $lst; do\n    if [ $((i % 2)) -eq 0 ]; then\n      sum=$((sum + i))\n \
    \   fi\n  done\n  echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local i=0\n\
    \    local sum=0\n    for ((i=0; i<${#lst[@]}; i++)); do\n        if ((i % 2 ==\
    \ 1)) && ((lst[i] % 2 == 0)); then\n            ((sum += lst[i]))\n        fi\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((lst[i] % 2 == 0)) && ((sum\
    \ += lst[i]))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016600
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=($1)\n  local sum=0\n\
    \  for ((i=1; i<${#lst[@]}; i+=2)); do\n    if [[ $((lst[i] % 2)) -eq 0 ]]; then\n\
    \      sum=$((sum + lst[i]))\n    fi\n  done\n  echo \"$sum\"\n}\n\ncandidate()\
    \ {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") =\
    \ \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate\
    \ \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\n\
    run_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((sum+=lst[i]))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [ $(($i % 2)) -eq 0 ]; then\n            sum=$(($sum\
    \ + $i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local sum=0\n    for i in $(seq\
    \ 0 2 $((${#1} - 1))); do\n        sum=$(($sum + ${1:$i:1}))\n    done\n    echo\
    \ $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"\
    122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4\
    \ 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n\
    \ % 2)) -eq 0 ]; then\n            sum=$((sum + n))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for (( i=1; i<${#lst[@]}; i+=2 )); do\n        (( lst[i] % 2 == 0 )) && ((\
    \ sum += lst[i] ))\n    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if ((lst[i] % 2 == 0)); then\n\
    \            sum=$((sum + lst[i]))\n        fi\n    done\n    echo \"$sum\"\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n  local lst=$1\n  local sum=0\n  local\
    \ i=0\n  for n in $lst; do\n    if [ $((i % 2)) -eq 1 ] && [ $((n % 2)) -eq 0\
    \ ]; then\n      sum=$((sum + n))\n    fi\n    i=$((i + 1))\n  done\n  echo $sum\n\
    }\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    for i in $lst; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sum=$((sum\
    \ + i))\n        fi\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    local i=0\n    for num in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [\
    \ $((num % 2)) -eq 0 ]; then\n            sum=$((sum + num))\n        fi\n   \
    \     i=$((i + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[\
    \ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\"\
    ) = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i]%2)) -eq 0 ]];\
    \ then\n            sum=$((sum+lst[i]))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=\"$1\"\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if (( i % 2 == 1 && n % 2 == 0\
    \ )); then\n            sum=$(( sum + n ))\n        fi\n        i=$(( i + 1 ))\n\
    \    done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ ${lst[$i]}%2 -eq 0 ]];\
    \ then\n            result=$((result+${lst[$i]}))\n        fi\n    done\n    echo\
    \ $result\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\")\
    \ = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i]%2)) -eq 0 ]];\
    \ then\n            sum=$((sum+lst[i]))\n        fi\n    done\n    echo \"$sum\"\
    \n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n\
    \    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") =\
    \ \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            sum=$(($sum + ${lst[$i]}))\n        fi\n    done\n \
    \   echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for i in \"${!lst[@]}\"; do\n        if (( i % 2 == 1 && lst[i] % 2 == 0\
    \ )); then\n            sum=$(( sum + lst[i] ))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local result=\"\
    \"\n    local i=0\n    for n in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [\
    \ $((n % 2)) -eq 0 ]; then\n            result=\"$result $n\"\n        fi\n  \
    \      i=$((i + 1))\n    done\n    echo $result\n}\n\ncandidate() {\n    add \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n  \
    \  [[ $(candidate \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6\
    \ 7\") = \"0\" ]]\n    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=$1\n    local sum=0\n\
    \    local i=0\n    for n in $lst; do\n        if [ $((i % 2)) -eq 1 ] && [ $((n\
    \ % 2)) -eq 0 ]; then\n            sum=$((sum + n))\n        fi\n        i=$((i\
    \ + 1))\n    done\n    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate\
    \ \"4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n\
    \    [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((sum+=lst[i]))\n    done\n\
    \    echo $sum\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local -a lst=($1)\n    local -i\
    \ sum=0\n    for ((i=1; i<${#lst[@]}; i+=2)); do\n        ((sum+=lst[i]))\n  \
    \  done\n    echo \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"\
    4 5 6 7 2 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n  \
    \  [[ $(candidate \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local sum=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((lst[i] % 2)) -eq 0\
    \ ]]; then\n            sum=$((sum + lst[i]))\n        fi\n    done\n    echo\
    \ \"$sum\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2 122\"\
    ) = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 0
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=0\n\
    \    for ((i=1; i<${#lst[@]}; i+=2)); do\n        if [[ $((${lst[$i]} % 2)) -eq\
    \ 0 ]]; then\n            result=$(($result + ${lst[$i]}))\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016601
- exit_code: 1
  program: "#!/bin/bash\n# Given a non-empty list of integers lst. add the even elements\
    \ that are at odd indices..\n# Examples:\n# >>> $(add \"4 2 6 7\")\n# \"2\"\n\
    #\n# $1 is a space-separated list\nadd() {\n    local lst=($1)\n    local result=()\n\
    \    for ((i=0; i<${#lst[@]}; i++)); do\n        if ((i % 2 == 1 && lst[i] % 2\
    \ == 0)); then\n            result+=(${lst[i]})\n        fi\n    done\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    add \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"4 88\") = \"88\" ]]\n    [[ $(candidate \"4 5 6 7 2\
    \ 122\") = \"122\" ]]\n    [[ $(candidate \"4 0 6 7\") = \"0\" ]]\n    [[ $(candidate\
    \ \"4 4 6 8\") = \"12\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016601

language: sh
name: HumanEval_70_strange_sort_list
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=${#list[@]}\n    local -i half=$(($len / 2))\n\
    \    local -i is_even=$(($len % 2))\n    local -i is_odd=$((1 - $is_even))\n \
    \   local -i is_first=$is_even\n    local -i is_second=$is_odd\n    local -i is_ascending=1\n\
    \    local -i is_descending=0\n    local -i is_ascending_now=$is_ascending\n \
    \   local -i is_descending_now=$is_descending\n    local -i is_ascending_next=$is_descending\n\
    \    local -i is_descending_next=$is_ascending\n    local -i is_first_half=$is_first\n\
    \    local -i is_second_half=$is_second\n    local -i is_first_half_now=$is_first_half\n\
    \    local -i is_second_half_now=$is_second_half\n    local -i is_first_half_next=$is_second_half\n\
    \    local -i is_second_half_next=$is_first_half\n    local -i is_first_half_now_ascending=$is_first_half_now\n\
    \    local -i is_second_half_now_ascending=$is_second_half_now\n    local -i is_first_half_now_descending=$is_second_half_now\n\
    \    local -i is_second_half_now_descending=$is_first_half_now\n    local -i is_first_half_next_ascending=$is_second_half_next\n\
    \    local -i is_second_half_next_ascending=$is_first_half_next\n    local -i\
    \ is_first_half_next_descending=$is_first_half_next\n    local -i is_second_half_next_descending=$is_second_half_next\n\
    \    local -i is_first_half_now_ascending_now=$\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph86rxghm.sh: line 46: local: $: syntax error: operand expected
    (error token is "$")

    '
  stdout: ''
  timestamp: 1660016714
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=${#list[@]}\n    local -i half=$((len / 2))\n\
    \    local -i odd=$((len % 2))\n    local -i min=0\n    local -i max=0\n    local\
    \ -i min_pos=0\n    local -i max_pos=0\n    local -i tmp=0\n    local -i tmp_pos=0\n\
    \    for ((i=0; i<len; i++)); do\n        if [[ ${list[i]} -lt ${list[min_pos]}\
    \ ]]; then\n            min_pos=$i\n        fi\n        if [[ ${list[i]} -gt ${list[max_pos]}\
    \ ]]; then\n            max_pos=$i\n        fi\n    done\n    min=${list[min_pos]}\n\
    \    max=${list[max_pos]}\n    result[0]=$min\n    result[-1]=$max\n    if [[\
    \ $odd -eq 1 ]]; then\n        tmp_pos=$((min_pos + 1))\n        if [[ $tmp_pos\
    \ -eq $len ]]; then\n            tmp_pos=0\n        fi\n        tmp=${list[tmp_pos]}\n\
    \        result[1]=$tmp\n        j=2\n        k=1\n    else\n        j=1\n   \
    \     k=0\n    fi\n    for ((i=1; i<half; i++)); do\n        tmp_pos=$((max_pos\
    \ - 1))\n        if [[ $tmp_pos -lt 0 ]]; then\n            tmp_pos=$((len - 1))\n\
    \        fi\n        tmp=${list[tmp_pos]}\n        result[j]=$tmp\n        j=$((j\
    \ + 1))\n        tmp_pos=$((min_pos + 1))\n        if [[ $tmp_pos -eq $len ]];\
    \ then\n            tmp_pos=0\n        fi\n        tmp=${list[tmp_pos]}\n    \
    \    result[-k]=$tmp\n        k=$((k + 1))\n        min_pos=$tmp_pos\n       \
    \ max\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_le4lfjq.sh: line 71: syntax error near unexpected token `}''

    /tmp/tmp_le4lfjq.sh: line 71: `}''

    '
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a array=($1)\n    local -a result\n    local -i i=0\n    local -i j=${#array[@]}-1\n\
    \    local -i k=0\n    while [ $i -le $j ]; do\n        if [ $k -eq 0 ]; then\n\
    \            result[$i]=${array[$i]}\n            ((i++))\n        else\n    \
    \        result[$j]=${array[$j]}\n            ((j--))\n        fi\n        ((k^=1))\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=()\n    local -a sorted=()\n    local -a result=()\n    local -a temp=()\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n\
    \    local -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n\
    \    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n\
    \    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n\
    \    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n\
    \    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n\
    \    local -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n\
    \    local -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n\
    \    local -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n\
    \    local -i kkk=0\n    local -i lll=0\n    local -\n}\n\ncandidate() {\n   \
    \ strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n/2))\n    local min=0\n    local max=0\n\
    \    local min_index=0\n    local max_index=0\n    local tmp=0\n    for ((i=0;\
    \ i<m; i++)); do\n        min=${list[0]}\n        max=${list[0]}\n        min_index=0\n\
    \        max_index=0\n        for ((j=0; j<n; j++)); do\n            if [[ ${list[j]}\
    \ -lt $min ]]; then\n                min=${list[j]}\n                min_index=$j\n\
    \            fi\n            if [[ ${list[j]} -gt $max ]]; then\n            \
    \    max=${list[j]}\n                max_index=$j\n            fi\n        done\n\
    \        result[k]=$min\n        ((k++))\n        result[k]=$max\n        ((k++))\n\
    \        list[min_index]=$max\n        list[max_index]=$min\n    done\n    if\
    \ [[ $((n%2)) -eq 1 ]]; then\n        result[k]=${list[0]}\n    fi\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local min=${list[0]}\n  local max=${list[0]}\n\
    \  local min_index=0\n  local max_index=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local len=${#list[@]}\n  local half_len=$((len / 2))\n  local odd_len=$((len\
    \ % 2))\n  local is_odd=0\n  local is_even=0\n  local is_first=0\n  local is_second=0\n\
    \  local is_last=0\n  local is_first_half=0\n  local is_second_half=0\n  local\
    \ is_last_half=0\n  local is_first_half_odd=0\n  local is_second_half_odd=0\n\
    \  local is_last_half_odd=0\n  local is_first_half_even=0\n  local is_second_half_even=0\n\
    \  local is_last_half_even=0\n  local is_first_half_first=0\n  local is_first_half_second=0\n\
    \  local is_first_half_last=0\n  local is_second_half_first=0\n  local is_second_half_second=0\n\
    \  local is_second_half_last=0\n  local is_last_half_first=0\n  local is_last_half_second=0\n\
    \  local is_last_half_last=0\n  local is_first_half_first_odd=0\n  local is_first_half_second_odd=0\n\
    \  local is_first_half_last_odd=0\n  local is_second_half_first_odd=0\n  local\
    \ is_second_half_second_odd=0\n  local is_second_half_last_odd=0\n  local is_last_half_first_odd=0\n\
    \  local is_last_half_second_odd=0\n  local is_last_half_last_odd=0\n  local is_first_half_first_even=0\n\
    \  local is_first_half_second_even=0\n  local is_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=${#list[@]}\n    local -i mid=0\n    local\
    \ -i mid_i=0\n    local -i mid_j=0\n    local -i min=0\n    local -i max=0\n \
    \   local -i min_i=0\n    local -i max_i=0\n    local -i min_j=0\n    local -i\
    \ max_j=0\n    local -i tmp=0\n    local -i tmp_i=0\n    local -i tmp_j=0\n  \
    \  if [[ $len -eq 0 ]]; then\n        echo \"[]\"\n        return\n    fi\n  \
    \  if [[ $len -eq 1 ]]; then\n        echo \"[\\\"${list[0]}\\\"]\"\n        return\n\
    \    fi\n    if [[ $len -eq 2 ]]; then\n        if [[ ${list[0]} -gt ${list[1]}\
    \ ]]; then\n            echo \"[\\\"${list[1]}\\\" \\\"${list[0]}\\\"]\"\n   \
    \     else\n            echo \"[\\\"${list[0]}\\\" \\\"${list[1]}\\\"]\"\n   \
    \     fi\n        return\n    fi\n    if [[ $len -eq 3 ]]; then\n        if [[\
    \ ${list[0]} -gt ${list[1]} ]]; then\n            tmp=${list[0]}\n           \
    \ list[0]=${list[1]}\n            list[1]=$tmp\n        fi\n        if [[ ${list[1]}\
    \ -gt ${list[2]} ]]; then\n            tmp=${list[1]}\n            list[1]=${list[2]}\n\
    \            list[2]=$tmp\n        fi\n        if [[ ${list[0]} -gt ${list[1]}\
    \ ]]; then\n            tmp=${list[0]}\n            list[0]=${list[1]}\n     \
    \       list[1]=$tmp\n        fi\n        echo \"[\\\"${list[0]}\\\" \\\"${list[2]}\\\
    \" \\\"${list[1]}\\\"]\"\n        return\n    fi\n    if [[ $len -eq 4 ]]; then\n\
    \        if [[ ${\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpl1o120er.sh: line 70: unexpected token `newline'', conditional
    binary operator expected

    /tmp/tmpl1o120er.sh: line 70: syntax error near `}''

    /tmp/tmpl1o120er.sh: line 70: `}''

    '
  stdout: ''
  timestamp: 1660016714
- exit_code: 0
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=${#list[@]}\n\
    \    local -i k=0\n    while (( i < j )); do\n        if (( k % 2 == 0 )); then\n\
    \            result+=($(printf \"%s\\n\" \"${list[@]}\" | sort -n | head -n 1))\n\
    \            list=($(printf \"%s\\n\" \"${list[@]}\" | sort -n | tail -n +2))\n\
    \        else\n            result+=($(printf \"%s\\n\" \"${list[@]}\" | sort -nr\
    \ | head -n 1))\n            list=($(printf \"%s\\n\" \"${list[@]}\" | sort -nr\
    \ | tail -n +2))\n        fi\n        (( i++ ))\n        (( k++ ))\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local n=${#list[@]}\n    local m=$((n / 2))\n    local o=$((n\
    \ % 2))\n    local p=()\n    local q=()\n    local r=()\n    local s=()\n    local\
    \ t=()\n    local u=()\n    local v=()\n    local w=()\n    local x=()\n    local\
    \ y=()\n    local z=()\n    local aa=()\n    local ab=()\n    local ac=()\n  \
    \  local ad=()\n    local ae=()\n    local af=()\n    local ag=()\n    local ah=()\n\
    \    local ai=()\n    local aj=()\n    local ak=()\n    local al=()\n    local\
    \ am=()\n    local an=()\n    local ao=()\n    local ap=()\n    local aq=()\n\
    \    local ar=()\n    local as=()\n    local at=()\n    local au=()\n    local\
    \ av=()\n    local aw=()\n    local ax=()\n    local ay=()\n    local az=()\n\
    \    local ba=()\n    local bb=()\n    local bc=()\n    local bd=()\n    local\
    \ be=()\n    local bf=()\n    local bg=()\n    local bh=()\n    local bi=()\n\
    \    local bj=()\n    local bk=()\n    local bl=()\n    local bm=()\n    local\
    \ bn=()\n    local bo=()\n    local bp=()\n    local bq=()\n    local br=()\n\
    \    local bs=()\n    local bt=()\n    local bu=()\n    local bv=()\n    local\
    \ bw=()\n    local bx=()\n    local by=()\n    local bz=()\n    local ca=()\n\
    \    local cb=()\n    local cc=()\n    local cd=()\n    local ce=()\n    local\
    \ cf=()\n    local cg\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local len=${#list[@]}\n    local res=()\n    local i=0\n    while\
    \ [ $i -lt $len ]; do\n        local min=${list[0]}\n        local min_i=0\n \
    \       local max=${list[0]}\n        local max_i=0\n        local j=0\n     \
    \   while [ $j -lt $len ]; do\n            if [ ${list[$j]} -lt $min ]; then\n\
    \                min=${list[$j]}\n                min_i=$j\n            fi\n \
    \           if [ ${list[$j]} -gt $max ]; then\n                max=${list[$j]}\n\
    \                max_i=$j\n            fi\n            j=$((j+1))\n        done\n\
    \        res+=($min)\n        list[$min_i]=$max\n        i=$((i+1))\n        if\
    \ [ $i -lt $len ]; then\n            res+=($max)\n            list[$max_i]=$min\n\
    \            i=$((i+1))\n        fi\n    done\n    echo ${res[@]}\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i n=${#list[@]}\n    local -i min=0\n    local -i max=0\n    local\
    \ -i min_index=0\n    local -i max_index=0\n    local -i min_found=0\n    local\
    \ -i max_found=0\n    local -i min_index_found=0\n    local -i max_index_found=0\n\
    \    local -i min_index_found_prev=0\n    local -i max_index_found_prev=0\n  \
    \  local -i min_index_found_prev_prev=0\n    local -i max_index_found_prev_prev=0\n\
    \    local -i min_index_found_prev_prev_prev=0\n    local -i max_index_found_prev_prev_prev=0\n\
    \    local -i min_index_found_prev_prev_prev_prev=0\n    local -i max_index_found_prev_prev_prev_prev=0\n\
    \    local -i min_index_found_prev_prev_prev_prev_prev=0\n    local -i max_index_found_prev_prev_prev_prev_prev=0\n\
    \    local -i min_index_found_prev_prev_prev_prev_prev_prev=0\n    local -i max_index_found_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i min_index_found_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i max_index_found_prev_prev_prev_prev_prev_prev_prev=0\n    local -i min_index_found_prev_prev_prev_prev_prev_prev_prev_prev=0\n\
    \    local -i max_index_found_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i min_index_found_prev_prev_prev_prev_prev_prev_prev_prev_prev=0\n    local\
    \ -i max_index_found_prev_prev_prev_prev_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 0
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ n=${#list[@]}\n  local m=$((n/2))\n  local tmp=()\n  for ((i=0; i<n; i++));\
    \ do\n    if ((i%2==0)); then\n      tmp=($(printf \"%s\\n\" \"${list[@]}\" |\
    \ sort -n))\n    else\n      tmp=($(printf \"%s\\n\" \"${list[@]}\" | sort -nr))\n\
    \    fi\n    result[$i]=${tmp[0]}\n    list=(${tmp[@]:1})\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local tmp=0\n    local tmp_index=0\n    local odd=0\n\
    \    local even=0\n    local even_index=0\n    local odd_index=0\n    local even_min=0\n\
    \    local even_max=0\n    local odd_min=0\n    local odd_max=0\n    local even_min_index=0\n\
    \    local even_max_index=0\n    local odd_min_index=0\n    local odd_max_index=0\n\
    \    local even_tmp=0\n    local even_tmp_index=0\n    local odd_tmp=0\n    local\
    \ odd_tmp_index=0\n    local even_n=0\n    local odd_n=0\n    local even_i=0\n\
    \    local odd_i=0\n    local even_j=0\n    local odd_j=0\n    local even_k=0\n\
    \    local odd_k=0\n    local even_list=()\n    local odd_list=()\n    local even_result=()\n\
    \    local odd_result=()\n    if [ $n -eq 0 ]; then\n        echo \"[]\"\n   \
    \     return\n    fi\n    for i in $(seq 0 $((n-1))); do\n        if [ $((list[i]\
    \ % 2)) -eq 0 ]; then\n            even_list[even_n]=${list[i]}\n            even_n=$((even_n+1))\n\
    \        else\n            odd_list[odd_n]=${list[i]}\n            odd_n=$((odd_n+1))\n\
    \        fi\n    done\n    if [ $even_n -gt 0 ]; then\n        even_min=${even_list[0]}\n\
    \        even_max=${even_list[0]}\n        for i in $(seq 0 $((even_n-1))); do\n\
    \            if [ ${even_list[i]} -lt $even_min\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5qkrmd6_.sh: line 73: syntax error near unexpected token `}''

    /tmp/tmp5qkrmd6_.sh: line 73: `}''

    '
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ -a list=($1)\n  local -a result=()\n  local i=0\n  local j=0\n  local min=0\n\
    \  local max=0\n  local max_index=0\n  local min_index=0\n  local len=${#list[@]}\n\
    \  local len_half=$((len / 2))\n  local len_mod=$((len % 2))\n  local len_half_mod=$((len_mod\
    \ + len_half))\n  local -a list_sorted=()\n  local -a list_sorted_half=()\n  local\
    \ -a list_sorted_half_mod=()\n  local -a list_sorted_half_mod_rev=()\n  local\
    \ -a list_sorted_half_mod_rev_half=()\n  local -a list_sorted_half_mod_rev_half_mod=()\n\
    \  local -a list_sorted_half_mod_rev_half_mod_rev=()\n  local -a list_sorted_half_mod_rev_half_mod_rev_half=()\n\
    \  local -a list_sorted_half_mod_rev_half_mod_rev_half_mod=()\n  local -a list_sorted_half_mod_rev_half_mod_rev_half_mod_rev=()\n\
    \  local -a list_sorted_half_mod_rev_half_mod_rev_half_mod_rev_half=()\n  local\
    \ -a list_sorted_half_mod_rev_half_mod_rev_half_mod_rev_half_mod=()\n  local -a\
    \ list_sorted_half_mod_rev_half_mod_rev_half_mod_rev_half_mod_rev=()\n  local\
    \ -a list_sorted_half_mod_rev_half_mod_rev_half_mod_rev_half_mod_rev_half=()\n\
    \  local -a list_sorted_half_mod_rev_half_mod_rev_half_mod_rev_half_mod_rev_half_mod=()\n\
    \  local -a list_sorted_half_mod_rev_half_mod_rev_half_mod_\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local min=${list[0]}\n  local max=${list[0]}\n\
    \  local min_index=0\n  local max_index=0\n  local i=0\n  for i in ${!list[@]};\
    \ do\n    if [[ ${list[$i]} -lt $min ]]; then\n      min=${list[$i]}\n      min_index=$i\n\
    \    fi\n    if [[ ${list[$i]} -gt $max ]]; then\n      max=${list[$i]}\n    \
    \  max_index=$i\n    fi\n  done\n  result+=(\"$min\")\n  if [[ $min_index -lt\
    \ $max_index ]]; then\n    for i in $(seq $((min_index+1)) $((max_index-1)));\
    \ do\n      result+=(\"${list[$i]}\")\n    done\n  else\n    for i in $(seq $((min_index+1))\
    \ $((max_index+1)) | tac); do\n      result+=(\"${list[$i]}\")\n    done\n  fi\n\
    \  result+=(\"$max\")\n  if [[ $max_index -lt $min_index ]]; then\n    for i in\
    \ $(seq $((max_index+1)) $((min_index-1))); do\n      result+=(\"${list[$i]}\"\
    )\n    done\n  else\n    for i in $(seq $((max_index+1)) $((min_index+1)) | tac);\
    \ do\n      result+=(\"${list[$i]}\")\n    done\n  fi\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    for ((i=0; i<${#list[@]}; i++)); do\n        if [[ ${list[i]}\
    \ -lt $min ]]; then\n            min=${list[i]}\n            min_index=$i\n  \
    \      fi\n        if [[ ${list[i]} -gt $max ]]; then\n            max=${list[i]}\n\
    \            max_index=$i\n        fi\n    done\n    result+=($min)\n    list[min_index]=$max\n\
    \    for ((j=0; j<${#list[@]}; j++)); do\n        if [[ ${list[j]} -lt $min ]];\
    \ then\n            min=${list[j]}\n            min_index=$j\n        fi\n   \
    \     if [[ ${list[j]} -gt $max ]]; then\n            max=${list[j]}\n       \
    \     max_index=$j\n        fi\n    done\n    result+=($max)\n    list[max_index]=$min\n\
    \    for ((k=0; k<${#list[@]}; k++)); do\n        if [[ ${list[k]} -lt $min ]];\
    \ then\n            min=${list[k]}\n            min_index=$k\n        fi\n   \
    \     if [[ ${list[k]} -gt $max ]]; then\n            max=${list[k]}\n       \
    \     max_index=$k\n        fi\n    done\n    result+=($min)\n    list[min_index]=$max\n\
    \    for ((l=0; l<${#list[@]}; l\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmph9chtx7g.sh: line 75: unexpected EOF while looking for matching
    `)''

    /tmp/tmph9chtx7g.sh: line 96: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660016715
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=$1\n  local sorted_list=$(echo \"$list\" | sort -n)\n  local min=$(echo\
    \ \"$sorted_list\" | head -n 1)\n  local max=$(echo \"$sorted_list\" | tail -n\
    \ 1)\n  local min_max_list=$(echo \"$sorted_list\" | sed \"s/$min//g;s/$max//g\"\
    )\n  local min_max_list_len=$(echo \"$min_max_list\" | wc -w)\n  local min_max_list_len_half=$((min_max_list_len\
    \ / 2))\n  local min_max_list_len_half_remainder=$((min_max_list_len % 2))\n \
    \ local min_max_list_len_half_remainder_half=$((min_max_list_len_half_remainder\
    \ / 2))\n  local min_max_list_len_half_remainder_half_remainder=$((min_max_list_len_half_remainder\
    \ % 2))\n  local min_max_list_len_half_remainder_half_remainder_half=$((min_max_list_len_half_remainder_half_remainder\
    \ / 2))\n  local min_max_list_len_half_remainder_half_remainder_half_remainder=$((min_max_list_len_half_remainder_half_remainder\
    \ % 2))\n  local min_max_list_len_half_remainder_half_remainder_half_remainder_half=$((min_max_list_len_half_remainder_half_remainder_half_remainder\
    \ / 2))\n  local min_max_list_len_half_remainder_half_remainder_half_remainder_half_remainder=$((min_max_list_len_half_remainder_half_remainder_half_remainder\
    \ % 2))\n  local min_max_list_len_half_remainder_half_remainder_half_remainder_half_remainder_half=$((min_max\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpo5nlns8l.sh: line 29: unexpected EOF while looking for matching
    `)''

    /tmp/tmpo5nlns8l.sh: line 50: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local result=\"\"\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n    local\
    \ temp=0\n    local temp_index=0\n    local temp_list=\"\"\n    local temp_result=\"\
    \"\n    local temp_result_list=\"\"\n    local temp_result_list_length=0\n   \
    \ local temp_result_list_index=0\n    local temp_result_list_index_length=0\n\
    \    local temp_result_list_index_length_index=0\n    local temp_result_list_index_length_index_length=0\n\
    \    local temp_result_list_index_length_index_length_index=0\n    local temp_result_list_index_length_index_length_index_length=0\n\
    \    local temp_result_list_index_length_index_length_index_length_index=0\n \
    \   local temp_result_list_index_length_index_length_index_length_index_length=0\n\
    \    local temp_result_list_index_length_index_length_index_length_index_length_index=0\n\
    \    local temp_result_list_index_length_index_length_index_length_index_length_index_length=0\n\
    \    local temp_result_list_index_length_index_length_index_length_index_length_index_length_index=0\n\
    \    local temp_result_list_index_length_index_length_index_length_index_length_index_length_index_length=0\n\
    \    local temp_result_list_index_length_index_length_index_length_index_length_index_length_index_length_index=0\n\
    \    local temp_result_list_index_length_index_length_index_length_index_length_index_length_index_length_index_length=0\n\
    \    local temp_result_list_index_length_index_length_index_length_index_length_index_length_index_length_index_length_index=0\n\
    \    local temp_result_list_index_length_index_length_index_length_index\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local len=${#list[@]}\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local result=()\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local tmp=0\n    if [ $len -eq 0 ]; then\n       \
    \ echo \"[]\"\n        return\n    fi\n    for ((i=0; i<len; i++)); do\n     \
    \   min=${list[0]}\n        max=${list[0]}\n        min_index=0\n        max_index=0\n\
    \        for ((j=0; j<len; j++)); do\n            if [ ${list[j]} -lt $min ];\
    \ then\n                min=${list[j]}\n                min_index=$j\n       \
    \     fi\n            if [ ${list[j]} -gt $max ]; then\n                max=${list[j]}\n\
    \                max_index=$j\n            fi\n        done\n        if [ $i -eq\
    \ 0 ]; then\n            result[k]=$min\n            k=$((k+1))\n        fi\n\
    \        result[k]=$max\n        k=$((k+1))\n        list[$max_index]=$min\n \
    \       list[$min_index]=$max\n    done\n    echo \"[\"\n    for ((i=0; i<len;\
    \ i++)); do\n        echo \"\\\"${result[i]}\\\"\"\n        if [ $i -ne $((len-1))\
    \ ]; then\n            echo \",\"\n        fi\n    done\n    echo \"]\"\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_idx=0\n    local max_idx=0\n    for ((i=0; i<${#list[@]}; i++));\
    \ do\n        if [[ ${list[$i]} -lt $min ]]; then\n            min=${list[$i]}\n\
    \            min_idx=$i\n        fi\n        if [[ ${list[$i]} -gt $max ]]; then\n\
    \            max=${list[$i]}\n            max_idx=$i\n        fi\n    done\n \
    \   sorted+=($min)\n    list[$min_idx]=$max\n    if [[ ${#list[@]} -gt 1 ]]; then\n\
    \        sorted+=($(strange_sort_list \"${list[@]}\"))\n    fi\n    echo \"${sorted[@]}\"\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n / 2))\n    local min=0\n    local max=0\n\
    \    local min_index=0\n    local max_index=0\n    local temp=0\n    while [ $i\
    \ -lt $n ]; do\n        min=${list[0]}\n        max=${list[0]}\n        min_index=0\n\
    \        max_index=0\n        for j in ${list[@]}; do\n            if [ $j -lt\
    \ $min ]; then\n                min=$j\n                min_index=$k\n       \
    \     fi\n            if [ $j -gt $max ]; then\n                max=$j\n     \
    \           max_index=$k\n            fi\n            k=$((k + 1))\n        done\n\
    \        if [ $i -lt $m ]; then\n            result+=($min)\n            list[$min_index]=$max\n\
    \        else\n            result+=($max)\n            list[$max_index]=$min\n\
    \        fi\n        i=$((i + 1))\n        k=0\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ -a list=($1)\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local min_flag=0\n    local max_flag=0\n    local\
    \ tmp=0\n    local tmp_index=0\n    local tmp_flag=0\n    local result=()\n\n\
    \    if [[ $n -eq 0 ]]; then\n        echo \"[]\"\n        return\n    fi\n\n\
    \    for ((i=0; i<n; i++)); do\n        sorted[i]=${list[i]}\n    done\n\n   \
    \ for ((i=0; i<n; i++)); do\n        min=${sorted[0]}\n        max=${sorted[0]}\n\
    \        min_index=0\n        max_index=0\n        min_flag=0\n        max_flag=0\n\
    \        for ((j=0; j<n; j++)); do\n            if [[ ${sorted[j]} -lt $min ]];\
    \ then\n                min=${sorted[j]}\n                min_index=$j\n     \
    \           min_flag=1\n            fi\n            if [[ ${sorted[j]} -gt $max\
    \ ]]; then\n                max=${sorted[j]}\n                max_index=$j\n \
    \               max_flag=1\n            fi\n        done\n        if [[ $min_flag\
    \ -eq 1 ]]; then\n            result[k]=\"\\\"$min\\\"\"\n            sorted[min_index]=$((min+1))\n\
    \            k=$((k+1))\n        fi\n        if [[ $max_flag -eq 1 ]]; then\n\
    \            result[k]=\"\\\"$max\\\"\"\n            sorted[max_index]=$((max-1))\n\
    \            k=$((k+1))\n        fi\n    done\n\n    echo \"[${result[@]}]\"\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local n=${#list[@]}\n    local tmp=0\n    local tmp_index=0\n\
    \    local tmp_min=0\n    local tmp_max=0\n    local tmp_min_index=0\n    local\
    \ tmp_max_index=0\n    local tmp_list=()\n    local tmp_sorted=()\n    local tmp_i=0\n\
    \    local tmp_j=0\n    local tmp_k=0\n    local tmp_n=0\n    local tmp_tmp=0\n\
    \    local tmp_tmp_index=0\n    local tmp_tmp_min=0\n    local tmp_tmp_max=0\n\
    \    local tmp_tmp_min_index=0\n    local tmp_tmp_max_index=0\n    local tmp_tmp_list=()\n\
    \    local tmp_tmp_sorted=()\n    local tmp_tmp_i=0\n    local tmp_tmp_j=0\n \
    \   local tmp_tmp_k=0\n    local tmp_tmp_n=0\n    local tmp_tmp_tmp=0\n    local\
    \ tmp_tmp_tmp_index=0\n    local tmp_tmp_tmp_min=0\n    local tmp_tmp_tmp_max=0\n\
    \    local tmp_tmp_tmp_min_index=0\n    local tmp_tmp_tmp_max_index=0\n    local\
    \ tmp_tmp_tmp_list=()\n    local tmp_tmp_tmp_sorted=()\n    local tmp_tmp_tmp_i=0\n\
    \    local tmp_tmp_tmp_j=0\n    local tmp_tmp_tmp_k=0\n    local tmp_tmp_tmp_n=0\n\
    \    local tmp_tmp_tmp_tmp=0\n    local tmp_tmp_tmp_tmp_index=0\n    local tmp_tmp_tmp_tmp_min=0\n\
    \    local tmp_tmp_tmp_tmp_max=0\n    local tmp_tmp_tmp_tmp\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local n=\"\
    \"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\"\n \
    \   local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n    local\
    \ w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local aa=\"\
    \"\n    local bb=\"\"\n    local cc=\"\"\n    local dd=\"\"\n    local ee=\"\"\
    \n    local ff=\"\"\n    local gg=\"\"\n    local hh=\"\"\n    local ii=\"\"\n\
    \    local jj=\"\"\n    local kk=\"\"\n    local ll=\"\"\n    local mm=\"\"\n\
    \    local nn=\"\"\n    local oo=\"\"\n    local pp=\"\"\n    local qq=\"\"\n\
    \    local rr=\"\"\n    local ss=\"\"\n    local tt=\"\"\n    local uu=\"\"\n\
    \    local vv=\"\"\n    local ww=\"\"\n    local xx=\"\"\n    local yy=\"\"\n\
    \    local zz=\"\"\n    local aaa=\"\"\n    local bbb=\"\"\n    local ccc=\"\"\
    \n    local ddd=\"\"\n    local eee=\"\"\n    local fff=\"\"\n    local ggg=\"\
    \"\n    local hhh=\"\"\n    local iii=\"\"\n    local jjj=\"\"\n    local kkk=\"\
    \"\n    local lll=\"\"\n    local mmm=\"\"\n    local nnn=\"\"\n    local ooo=\"\
    \"\n    local ppp=\"\"\n    local qqq=\"\"\n    local rrr=\"\"\n    local sss=\"\
    \"\n    local ttt=\"\"\n    local uuu=\"\"\n    local vvv=\"\"\n    local www=\"\
    \"\n    local xxx=\"\"\n    local yyy=\"\"\n    local zzz=\"\"\n    local aaaa=\"\
    \"\n    local bbbb=\"\"\n    local cccc=\"\"\n    local dddd=\"\"\n    local eeee=\"\
    \"\n    local ffff=\"\"\n    local gggg=\"\"\n    local hhhh=\"\"\n    local iiii=\"\
    \"\n    local jjjj=\"\"\n    local kkkk=\"\"\n    local llll=\"\"\n    local mmmm\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local -a arr\n    local -a res\n    local i\n    local j\n    local\
    \ k\n    local min\n    local max\n    local min_i\n    local max_i\n    local\
    \ min_j\n    local max_j\n    local min_k\n    local max_k\n    local min_flag\n\
    \    local max_flag\n    local min_flag_i\n    local max_flag_i\n    local min_flag_j\n\
    \    local max_flag_j\n    local min_flag_k\n    local max_flag_k\n    local len\n\
    \    local len_i\n    local len_j\n    local len_k\n    local tmp\n    local tmp_i\n\
    \    local tmp_j\n    local tmp_k\n    local tmp_flag\n    local tmp_flag_i\n\
    \    local tmp_flag_j\n    local tmp_flag_k\n    local -i flag\n    local -i flag_i\n\
    \    local -i flag_j\n    local -i flag_k\n    local -i flag_min\n    local -i\
    \ flag_max\n    local -i flag_min_i\n    local -i flag_max_i\n    local -i flag_min_j\n\
    \    local -i flag_max_j\n    local -i flag_min_k\n    local -i flag_max_k\n \
    \   local -i flag_tmp\n    local -i flag_tmp_i\n    local -i flag_tmp_j\n    local\
    \ -i flag_tmp_k\n    local -i flag_tmp_flag\n    local -i flag_tmp_flag_i\n  \
    \  local -i flag_tmp_flag_j\n    local -i flag_tmp_flag_k\n    local -i flag_tmp_flag_flag\n\
    \    local -i flag_tmp_flag_flag_i\n    local -i flag_tmp_flag_flag_j\n    local\
    \ -i flag_tmp_flag_flag_k\n    local -i flag_tmp_flag_flag_flag\n    local -i\
    \ flag_tmp_flag_flag_flag_i\n    local -i flag_tmp_flag_flag_flag_j\n    local\
    \ -i flag_tmp_flag_flag_flag\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a sorted_list=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=()\n    local result=()\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n\
    \    local b\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local tmp=0\n    local tmp_index=0\n    local\
    \ tmp_min=0\n    local tmp_max=0\n    local tmp_min_index=0\n    local tmp_max_index=0\n\
    \    local tmp_i=0\n    local tmp_j=0\n    local tmp_k=0\n    local tmp_l=0\n\
    \    local tmp_result=()\n    local tmp_list=()\n    local tmp_result_str=()\n\
    \    local tmp_list_str=()\n    local result_str=()\n    local list_str=()\n \
    \   local list_length=${#list[@]}\n    local list_length_half=$((list_length /\
    \ 2))\n    local list_length_mod=$((list_length % 2))\n    local list_length_half_mod=$((list_length_mod\
    \ / 2))\n    local list_length_half_mod_plus=$((list_length_half_mod + 1))\n \
    \   local list_length_half_mod_minus=$((list_length_half_mod - 1))\n    local\
    \ list_length_half_mod_plus_minus=$((list_length_half_mod_plus - 1))\n    local\
    \ list_length_half_mod_plus_minus_plus=$((list_length_half_mod_plus_minus + 1))\n\
    \    local list_length_half_mod_plus_minus_plus_plus=$((list_length_half_mod_plus_minus_plus\
    \ + 1))\n    local list_length_half_mod_plus_minus_plus_plus_plus=$((list_length_half_mod_plus_minus_plus_plus\
    \ + 1))\n    local list_length_half_mod_plus_minus_plus_plus_plus_plus=$((list_length_half_mod_plus_minus_plus_plus_plus\
    \ + 1))\n    local list_length_half_mod_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min_value\n    local max_value\n\
    \    local min_index\n    local max_index\n    local i\n    local j\n    local\
    \ value\n    local value_list\n    local value_list_length\n    local value_list_length_half\n\
    \    local value_list_length_half_rounded\n    local value_list_length_half_rounded_plus_one\n\
    \    local value_list_length_half_rounded_minus_one\n    local value_list_length_half_rounded_minus_one_plus_one\n\
    \    local value_list_length_half_rounded_minus_one_plus_one_plus_one\n    local\
    \ value_list_length_half_rounded_minus_one_plus_one_plus_one_plus_one\n    local\
    \ value_list_length_half_rounded_minus_one_plus_one_plus_one_plus_one_plus_one\n\
    \    local value_list_length_half_rounded_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one\n\
    \    local value_list_length_half_rounded_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one\n\
    \    local value_list_length_half_rounded_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one\n\
    \    local value_list_length_half_rounded_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one\n\
    \    local value_list_length_half_rounded_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one\n\
    \    local value_list_length_half_rounded_minus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one_plus_one\n\
    \    local value_list_length_half_rounded_minus_\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 0
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local i=0\n    while [ ${#list[@]} -gt 0\
    \ ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n            sorted+=($(echo \"\
    ${list[@]}\" | tr ' ' '\\n' | sort -n | head -n 1))\n            list=($(echo\
    \ \"${list[@]}\" | tr ' ' '\\n' | sort -n | tail -n +2))\n        else\n     \
    \       sorted+=($(echo \"${list[@]}\" | tr ' ' '\\n' | sort -n | tail -n 1))\n\
    \            list=($(echo \"${list[@]}\" | tr ' ' '\\n' | sort -n | head -n -1))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"${sorted[@]}\"\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local min=${list[0]}\n    local max=${list[0]}\n    local min_index=0\n\
    \    local max_index=0\n    local result=()\n    local i=0\n    local j=0\n  \
    \  local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n   \
    \ local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local\
    \ u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n\
    \    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i len=${#list[@]}\n    local -i half=$((len / 2))\n    local -i start=0\n\
    \    local -i end=$((len - 1))\n    local -i inc=1\n    local -i dec=-1\n    local\
    \ -i direction=$inc\n    local -i index=$start\n    local -i max_index=$end\n\
    \    local -i min_index=$start\n    local -i max=${list[$max_index]}\n    local\
    \ -i min=${list[$min_index]}\n    local -i value=0\n    local -i tmp=0\n    local\
    \ -i tmp_index=0\n    local -i tmp_max=0\n    local -i tmp_min=0\n    local -i\
    \ tmp_max_index=0\n    local -i tmp_min_index=0\n    local -i tmp_direction=0\n\
    \    local -i tmp_index=0\n    local -i tmp_start=0\n    local -i tmp_end=0\n\
    \    local -i tmp_inc=0\n    local -i tmp_dec=0\n    local -i tmp_value=0\n  \
    \  local -i tmp_len=0\n    local -i tmp_half=0\n    local -i tmp_max_index=0\n\
    \    local -i tmp_min_index=0\n    local -i tmp_max=0\n    local -i tmp_min=0\n\
    \    local -i tmp_value=0\n    local -i tmp_tmp=0\n    local -i tmp_tmp_index=0\n\
    \    local -i tmp_tmp_max=0\n    local -i tmp_tmp_min=0\n    local -i tmp_tmp_max_index=0\n\
    \    local -i tmp_tmp_min_index=0\n    local -i tmp_tmp_direction=0\n    local\
    \ -i tmp_tmp_index=0\n    local -i tmp_tmp_start=0\n    local -i tmp_tmp_end=0\n\
    \    local -i tmp_tmp_inc=0\n    local\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=()\n    local min=0\n    local max=0\n    local\
    \ i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n\
    \    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n \
    \   local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n  \
    \  local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n   \
    \ local d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local\
    \ ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local\
    \ nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local\
    \ ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local\
    \ xx=0\n    local yy=0\n    local zz=0\n    local aa=0\n    local bb=0\n    local\
    \ cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local\
    \ hh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n \
    \   local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n\
    \   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local n=\"\
    \"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\"\n \
    \   local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n    local\
    \ w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local aa=\"\
    \"\n    local bb=\"\"\n    local cc=\"\"\n    local dd=\"\"\n    local ee=\"\"\
    \n    local ff=\"\"\n    local gg=\"\"\n    local hh=\"\"\n    local ii=\"\"\n\
    \    local jj=\"\"\n    local kk=\"\"\n    local ll=\"\"\n    local mm=\"\"\n\
    \    local nn=\"\"\n    local oo=\"\"\n    local pp=\"\"\n    local qq=\"\"\n\
    \    local rr=\"\"\n    local ss=\"\"\n    local tt=\"\"\n    local uu=\"\"\n\
    \    local vv=\"\"\n    local ww=\"\"\n    local xx=\"\"\n    local yy=\"\"\n\
    \    local zz=\"\"\n    local aaa=\"\"\n    local bbb=\"\"\n    local ccc=\"\"\
    \n    local ddd=\"\"\n    local eee=\"\"\n    local fff=\"\"\n    local ggg=\"\
    \"\n    local hhh=\"\"\n    local iii=\"\"\n    local jjj=\"\"\n    local kkk=\"\
    \"\n    local lll=\"\"\n    local mmm=\"\"\n    local nnn=\"\"\n    local ooo=\"\
    \"\n    local ppp=\"\"\n    local qqq=\"\"\n    local rrr=\"\"\n    local sss=\"\
    \"\n    local ttt=\"\"\n    local uuu=\"\"\n    local vvv=\"\"\n    local www=\"\
    \"\n    local xxx=\"\"\n    local yyy=\"\"\n    local zzz=\"\"\n    local aaaa=\"\
    \"\n    local bbbb=\"\"\n    local cccc=\"\"\n    local dddd=\"\"\n    local eeee=\"\
    \"\n    local ffff=\"\"\n    local gggg=\"\"\n    local hhhh=\"\"\n    local iiii=\"\
    \"\n    local jjjj=\"\"\n    local kkkk=\"\"\n    local llll=\"\"\n    local mmmm\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local tmp=0\n    local n=${#list[@]}\n    local n2=$((n / 2))\n    local\
    \ n3=$((n - n2))\n    local n4=$((n - 1))\n    local n5=$((n - 2))\n    local\
    \ n6=$((n - 3))\n    local n7=$((n - 4))\n    local n8=$((n - 5))\n    local n9=$((n\
    \ - 6))\n    local n10=$((n - 7))\n    local n11=$((n - 8))\n    local n12=$((n\
    \ - 9))\n    local n13=$((n - 10))\n    local n14=$((n - 11))\n    local n15=$((n\
    \ - 12))\n    local n16=$((n - 13))\n    local n17=$((n - 14))\n    local n18=$((n\
    \ - 15))\n    local n19=$((n - 16))\n    local n20=$((n - 17))\n    local n21=$((n\
    \ - 18))\n    local n22=$((n - 19))\n    local n23=$((n - 20))\n    local n24=$((n\
    \ - 21))\n    local n25=$((n - 22))\n    local n26=$((n - 23))\n    local n27=$((n\
    \ - 24))\n    local n28=$((n - 25))\n    local n29=$((n - 26))\n    local n30=$((n\
    \ - 27))\n    local n31=$((n - 28))\n    local n32=$((n - 29))\n    local n33=$((n\
    \ - 30))\n    local n34=$((n - 31))\n    local n35=$((n - 32))\n    local n36=$((n\
    \ - 33))\n    local n37=$((n - 34))\n    local n38=$((n - 35))\n    local n39=$((n\
    \ - 36))\n    local n40=$((n - 37))\n    local n41=$((n - 38))\n    local n42=$((n\
    \ - 39))\n    local n43=$((n - 40))\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=$1\n  local result=\"\"\n  local min=0\n  local max=0\n  local min_index=0\n\
    \  local max_index=0\n  local i=0\n  local j=0\n  local temp=0\n  local temp_index=0\n\
    \  local min_max_index=0\n  local max_min_index=0\n  local min_max=0\n  local\
    \ max_min=0\n  local min_max_index_temp=0\n  local max_min_index_temp=0\n  local\
    \ min_max_temp=0\n  local max_min_temp=0\n  local min_max_index_temp_index=0\n\
    \  local max_min_index_temp_index=0\n  local min_max_temp_index=0\n  local max_min_temp_index=0\n\
    \  local min_max_index_temp_index_temp=0\n  local max_min_index_temp_index_temp=0\n\
    \  local min_max_temp_index_temp=0\n  local max_min_temp_index_temp=0\n  local\
    \ min_max_index_temp_index_temp_index=0\n  local max_min_index_temp_index_temp_index=0\n\
    \  local min_max_temp_index_temp_index=0\n  local max_min_temp_index_temp_index=0\n\
    \  local min_max_index_temp_index_temp_index_temp=0\n  local max_min_index_temp_index_temp_index_temp=0\n\
    \  local min_max_temp_index_temp_index_temp=0\n  local max_min_temp_index_temp_index_temp=0\n\
    \  local min_max_index_temp_index_temp_index_temp_index=0\n  local max_min_index_temp_index_temp_index_temp_index=0\n\
    \  local min_max_temp_index_temp_index_temp_index=0\n  local max_min_temp_index_temp_index_temp_index=0\n\
    \  local min_max_index_temp_index_temp_index_temp_index_temp=0\n  local\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted_list=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    while [[ $i -lt ${#list[@]}\
    \ ]]; do\n        local min=${list[0]}\n        local min_index=0\n        local\
    \ max=${list[0]}\n        local max_index=0\n        for ((j=0; j<${#list[@]};\
    \ j++)); do\n            if [[ ${list[j]} -lt $min ]]; then\n                min=${list[j]}\n\
    \                min_index=$j\n            fi\n            if [[ ${list[j]} -gt\
    \ $max ]]; then\n                max=${list[j]}\n                max_index=$j\n\
    \            fi\n        done\n        result[$i]=$min\n        list[$min_index]=$max\n\
    \        i=$((i+1))\n        result[$i]=$max\n        list[$max_index]=$min\n\
    \        i=$((i+1))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=()\n    local sorted=()\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n\
    \    local b\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local sorted_list=\"\"\n    local min_val=\"\"\n    local max_val=\"\
    \"\n    local min_index=\"\"\n    local max_index=\"\"\n    local i=\"\"\n   \
    \ local j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local\
    \ n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\
    \"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n \
    \   local w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local\
    \ aa=\"\"\n    local bb=\"\"\n    local cc=\"\"\n    local dd=\"\"\n    local\
    \ ee=\"\"\n    local ff=\"\"\n    local gg=\"\"\n    local hh=\"\"\n    local\
    \ ii=\"\"\n    local jj=\"\"\n    local kk=\"\"\n    local ll=\"\"\n    local\
    \ mm=\"\"\n    local nn=\"\"\n    local oo=\"\"\n    local pp=\"\"\n    local\
    \ qq=\"\"\n    local rr=\"\"\n    local ss=\"\"\n    local tt=\"\"\n    local\
    \ uu=\"\"\n    local vv=\"\"\n    local ww=\"\"\n    local xx=\"\"\n    local\
    \ yy=\"\"\n    local zz=\"\"\n    local aaa=\"\"\n    local bbb=\"\"\n    local\
    \ ccc=\"\"\n    local ddd=\"\"\n    local eee=\"\"\n    local fff=\"\"\n    local\
    \ ggg=\"\"\n    local hhh=\"\"\n    local iii=\"\"\n    local jjj=\"\"\n    local\
    \ kkk=\"\"\n    local lll=\"\"\n    local mmm=\"\"\n    local nnn=\"\"\n    local\
    \ ooo=\"\"\n    local ppp=\"\"\n    local qqq=\"\"\n    local rrr=\"\"\n    local\
    \ sss=\"\"\n    local ttt=\"\"\n    local uuu=\"\"\n    local vvv=\"\"\n    local\
    \ www=\"\"\n    local xxx=\"\"\n    local yyy=\"\"\n    local zzz=\"\"\n    local\
    \ aaaa=\"\"\n    local bbbb=\"\"\n    local cccc=\"\"\n    local dddd=\"\"\n \
    \   local eeee=\"\"\n    local ffff=\"\"\n    local gggg=\"\"\n    local hhhh=\"\
    \"\n    local iiii=\"\"\n    local jjjj=\"\"\n    local kkkk=\"\"\n    local llll=\"\
    \"\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local\
    \ new_list=$(echo \"$list\" | tr ' ' '\\n' | grep -v \"$min\" | grep -v \"$max\"\
    )\n    local new_list_len=$(echo \"$new_list\" | wc -l)\n    local new_list_len_half=$((new_list_len\
    \ / 2))\n    local new_list_min=$(echo \"$new_list\" | sort -n | head -n $new_list_len_half)\n\
    \    local new_list_max=$(echo \"$new_list\" | sort -n | tail -n $new_list_len_half)\n\
    \    local new_list_min_len=$(echo \"$new_list_min\" | wc -l)\n    local new_list_max_len=$(echo\
    \ \"$new_list_max\" | wc -l)\n    local new_list_min_len_half=$((new_list_min_len\
    \ / 2))\n    local new_list_max_len_half=$((new_list_max_len / 2))\n    local\
    \ new_list_min_min=$(echo \"$new_list_min\" | head -n $new_list_min_len_half)\n\
    \    local new_list_min_max=$(echo \"$new_list_min\" | tail -n $new_list_min_len_half)\n\
    \    local new_list_max_min=$(echo \"$new_list_max\" | head -n $new_list_max_len_half)\n\
    \    local new_list_max_max=$(echo \"$new_list_max\" | tail -n $new_list_max_len_half)\n\
    \    echo \"$min $new_list_max_max $new_list_min_min $max $new_list_min_max $new_list_max_min\"\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local result=()\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local aa=0\n \
    \   local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n\
    \    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n\
    \    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n\
    \    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n\
    \    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n\
    \    local aaa=0\n    local bbb=0\n    local ccc=0\n    local ddd=0\n    local\
    \ eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n\
    \    local jjj=0\n    local kkk=0\n    local lll=0\n    local mmm=0\n    local\
    \ nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n\
    \    local sss=0\n    local ttt=0\n    local uuu=0\n    local vvv=0\n    local\
    \ www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n\
    \    local b\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n / 2))\n    local min=0\n    local max=0\n\
    \    local min_index=0\n    local max_index=0\n    local tmp=0\n    local tmp_index=0\n\
    \    local tmp_str=0\n    local tmp_str_index=0\n    local tmp_str_index_2=0\n\
    \    local tmp_str_index_3=0\n    local tmp_str_index_4=0\n    local tmp_str_index_5=0\n\
    \    local tmp_str_index_6=0\n    local tmp_str_index_7=0\n    local tmp_str_index_8=0\n\
    \    local tmp_str_index_9=0\n    local tmp_str_index_10=0\n    local tmp_str_index_11=0\n\
    \    local tmp_str_index_12=0\n    local tmp_str_index_13=0\n    local tmp_str_index_14=0\n\
    \    local tmp_str_index_15=0\n    local tmp_str_index_16=0\n    local tmp_str_index_17=0\n\
    \    local tmp_str_index_18=0\n    local tmp_str_index_19=0\n    local tmp_str_index_20=0\n\
    \    local tmp_str_index_21=0\n    local tmp_str_index_22=0\n    local tmp_str_index_23=0\n\
    \    local tmp_str_index_24=0\n    local tmp_str_index_25=0\n    local tmp_str_index_26=0\n\
    \    local tmp_str_index_27=0\n    local tmp_str_index_28=0\n    local tmp_str_index_29=0\n\
    \    local tmp_str_index_30=0\n    local tmp_str_index_31=0\n    local tmp_str_index_32=0\n\
    \    local tmp_str_index_33=0\n    local tmp_str_index_34=0\n    local\n}\n\n\
    candidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local n=${#list[@]}\n    local temp=0\n    local temp_index=0\n\
    \    local temp_list=()\n    local temp_result=()\n    local temp_min=0\n    local\
    \ temp_max=0\n    local temp_min_index=0\n    local temp_max_index=0\n    local\
    \ temp_i=0\n    local temp_j=0\n    local temp_k=0\n    local temp_n=0\n    local\
    \ temp_temp=0\n    local temp_temp_index=0\n    local temp_temp_list=()\n    local\
    \ temp_temp_result=()\n    local temp_temp_min=0\n    local temp_temp_max=0\n\
    \    local temp_temp_min_index=0\n    local temp_temp_max_index=0\n    local temp_temp_i=0\n\
    \    local temp_temp_j=0\n    local temp_temp_k=0\n    local temp_temp_n=0\n \
    \   local temp_temp_temp=0\n    local temp_temp_temp_index=0\n    local temp_temp_temp_list=()\n\
    \    local temp_temp_temp_result=()\n    local temp_temp_temp_min=0\n    local\
    \ temp_temp_temp_max=0\n    local temp_temp_temp_min_index=0\n    local temp_temp_temp_max_index=0\n\
    \    local temp_temp_temp_i=0\n    local temp_temp_temp_j=0\n    local temp_temp_temp_k=0\n\
    \    local temp_temp_temp_n=0\n    local temp_temp_temp_temp=0\n    local temp_temp_temp_temp_index=0\n\
    \    local temp_temp_temp_temp_list=()\n    local temp_temp_temp_temp_result=()\n\
    \    local temp_temp_temp_temp_min=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=(\"$@\")\n  local len=${#list[@]}\n  local result=()\n  local min=0\n \
    \ local max=0\n  local i=0\n  local j=0\n  local k=0\n  local temp=0\n  local\
    \ temp_index=0\n  local temp_index_2=0\n  local temp_index_3=0\n  local temp_index_4=0\n\
    \  local temp_index_5=0\n  local temp_index_6=0\n  local temp_index_7=0\n  local\
    \ temp_index_8=0\n  local temp_index_9=0\n  local temp_index_10=0\n  local temp_index_11=0\n\
    \  local temp_index_12=0\n  local temp_index_13=0\n  local temp_index_14=0\n \
    \ local temp_index_15=0\n  local temp_index_16=0\n  local temp_index_17=0\n  local\
    \ temp_index_18=0\n  local temp_index_19=0\n  local temp_index_20=0\n  local temp_index_21=0\n\
    \  local temp_index_22=0\n  local temp_index_23=0\n  local temp_index_24=0\n \
    \ local temp_index_25=0\n  local temp_index_26=0\n  local temp_index_27=0\n  local\
    \ temp_index_28=0\n  local temp_index_29=0\n  local temp_index_30=0\n  local temp_index_31=0\n\
    \  local temp_index_32=0\n  local temp_index_33=0\n  local temp_index_34=0\n \
    \ local temp_index_35=0\n  local temp_index_36=0\n  local temp_index_37=0\n  local\
    \ temp_index_38=0\n  local temp_index_39=0\n  local temp_index_40=0\n  local temp_index_41=0\n\
    \  local temp_index_42=0\n  local temp_index_43=0\n  local temp_index_44=0\n \
    \ local temp_index_45=0\n \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    for i in ${list[@]}; do\n        if [[ $i -lt $min ]]; then\n\
    \            min=$i\n            min_index=$j\n        fi\n        if [[ $i -gt\
    \ $max ]]; then\n            max=$i\n            max_index=$j\n        fi\n  \
    \      j=$((j+1))\n    done\n    result[$k]=$min\n    k=$((k+1))\n    if [[ $min_index\
    \ -lt $max_index ]]; then\n        for i in $(seq $((min_index+1)) $((max_index-1)));\
    \ do\n            result[$k]=${list[$i]}\n            k=$((k+1))\n        done\n\
    \    else\n        for i in $(seq $((max_index+1)) $((min_index-1))); do\n   \
    \         result[$k]=${list[$i]}\n            k=$((k+1))\n        done\n    fi\n\
    \    result[$k]=$max\n    k=$((k+1))\n    if [[ $max_index -lt $min_index ]];\
    \ then\n        for i in $(seq $((max_index+1)) $((min_index-1))); do\n      \
    \      result[$k]=${list[$i]}\n            k=$((k+1))\n        done\n    else\n\
    \        for i in $(seq $((min_index+1)) $((max_index-1))); do\n            result[$k]=${list[$i]}\n\
    \            k=$((k+1))\n        done\n    fi\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=\"$1\"\n  local result=\"\"\n  local min=\"\"\n  local max=\"\"\n  local\
    \ min_index=\"\"\n  local max_index=\"\"\n  local i=\"\"\n  local j=\"\"\n  local\
    \ k=\"\"\n  local l=\"\"\n  local m=\"\"\n  local n=\"\"\n  local o=\"\"\n  local\
    \ p=\"\"\n  local q=\"\"\n  local r=\"\"\n  local s=\"\"\n  local t=\"\"\n  local\
    \ u=\"\"\n  local v=\"\"\n  local w=\"\"\n  local x=\"\"\n  local y=\"\"\n  local\
    \ z=\"\"\n  local a=\"\"\n  local b=\"\"\n  local c=\"\"\n  local d=\"\"\n  local\
    \ e=\"\"\n  local f=\"\"\n  local g=\"\"\n  local h=\"\"\n  local i=\"\"\n  local\
    \ j=\"\"\n  local k=\"\"\n  local l=\"\"\n  local m=\"\"\n  local n=\"\"\n  local\
    \ o=\"\"\n  local p=\"\"\n  local q=\"\"\n  local r=\"\"\n  local s=\"\"\n  local\
    \ t=\"\"\n  local u=\"\"\n  local v=\"\"\n  local w=\"\"\n  local x=\"\"\n  local\
    \ y=\"\"\n  local z=\"\"\n  local a=\"\"\n  local b=\"\"\n  local c=\"\"\n  local\
    \ d=\"\"\n  local e=\"\"\n  local f=\"\"\n  local g=\"\"\n  local h=\"\"\n  local\
    \ i=\"\"\n  local j=\"\"\n  local k=\"\"\n  local l=\"\"\n  local m=\"\"\n  local\
    \ n=\"\"\n  local o=\"\"\n  local p=\"\"\n  local q=\"\"\n  local r=\"\"\n  local\
    \ s=\"\"\n  local t=\"\"\n  local u=\"\"\n  local v=\"\"\n  local w=\"\"\n  local\
    \ x=\"\"\n  local y=\"\"\n  local z=\"\"\n  local a=\"\"\n  local b=\"\"\n  local\
    \ c=\"\"\n  local d=\"\"\n  local e=\"\"\n  local f=\"\"\n  local g=\"\"\n  local\
    \ h=\"\"\n  local i=\"\"\n  local j=\"\"\n  local k=\"\"\n  local l=\"\"\n  local\
    \ m=\"\"\n  local n=\"\"\n  local o=\"\"\n  local p=\"\"\n  local q=\"\"\n  local\
    \ r=\"\"\n  local s=\"\"\n  local t=\"\"\n  local u=\"\"\n  local v=\"\"\n  local\
    \ w=\"\"\n  local x=\"\"\n  local y=\"\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=${#list[@]}\n   \
    \ local k=0\n    local l=0\n    while (( i < j )); do\n        if (( k % 2 ==\
    \ 0 )); then\n            result[l]=${list[i]}\n            (( i++ ))\n      \
    \  else\n            result[l]=${list[j-1]}\n            (( j-- ))\n        fi\n\
    \        (( k++ ))\n        (( l++ ))\n    done\n    echo \"${result[@]}\"\n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    for n in ${list[@]};\
    \ do\n        if [[ $n -lt $min ]]; then\n            min=$n\n            min_index=$i\n\
    \        fi\n        if [[ $n -gt $max ]]; then\n            max=$n\n        \
    \    max_index=$i\n        fi\n        i=$((i+1))\n    done\n    local i=0\n \
    \   while [[ $i -lt ${#list[@]} ]]; do\n        if [[ $i -eq 0 ]]; then\n    \
    \        result+=($min)\n            if [[ $min_index -eq $max_index ]]; then\n\
    \                i=$((i+1))\n            else\n                list[$min_index]=$max\n\
    \            fi\n        else\n            result+=($max)\n            if [[ $min_index\
    \ -eq $max_index ]]; then\n                i=$((i+1))\n            else\n    \
    \            list[$max_index]=$min\n            fi\n        fi\n        i=$((i+1))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    for num in \"\
    ${list[@]}\"; do\n        if [[ $num -lt $min ]]; then\n            min=$num\n\
    \            min_index=$i\n        fi\n        if [[ $num -gt $max ]]; then\n\
    \            max=$num\n            max_index=$i\n        fi\n        ((i++))\n\
    \    done\n    result+=(\"$min\")\n    list[$min_index]=$max\n    if [[ ${#list[@]}\
    \ -eq 1 ]]; then\n        echo \"[${result[@]}]\"\n        return\n    fi\n  \
    \  result+=(\"$max\")\n    list[$max_index]=$min\n    if [[ ${#list[@]} -eq 1\
    \ ]]; then\n        echo \"[${result[@]}]\"\n        return\n    fi\n    result+=($(strange_sort_list\
    \ \"${list[@]}\"))\n    echo \"[${result[@]}]\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local min=$(echo \"$list\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \    local max=$(echo \"$list\" | tr ' ' '\\n' | sort -n | tail -n 1)\n    local\
    \ min_list=$(echo \"$list\" | tr ' ' '\\n' | sort -n | grep -v \"$max\")\n   \
    \ local max_list=$(echo \"$list\" | tr ' ' '\\n' | sort -n | grep -v \"$min\"\
    )\n    local min_list_len=$(echo \"$min_list\" | wc -l)\n    local max_list_len=$(echo\
    \ \"$max_list\" | wc -l)\n    local min_list_len_half=$((min_list_len / 2))\n\
    \    local max_list_len_half=$((max_list_len / 2))\n    local min_list_first_half=$(echo\
    \ \"$min_list\" | head -n \"$min_list_len_half\")\n    local min_list_second_half=$(echo\
    \ \"$min_list\" | tail -n \"$min_list_len_half\")\n    local max_list_first_half=$(echo\
    \ \"$max_list\" | head -n \"$max_list_len_half\")\n    local max_list_second_half=$(echo\
    \ \"$max_list\" | tail -n \"$max_list_len_half\")\n    local result=\"\"\n   \
    \ local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local\
    \ n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n\
    \    local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n \
    \   local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local n=\"\
    \"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\"\n \
    \   local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n    local\
    \ w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local a=\"\
    \"\n    local b=\"\"\n    local c=\"\"\n    local d=\"\"\n    local e=\"\"\n \
    \   local f=\"\"\n    local g=\"\"\n    local h=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local n=\"\
    \"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\"\n \
    \   local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n    local\
    \ w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local a=\"\
    \"\n    local b=\"\"\n    local c=\"\"\n    local d=\"\"\n    local e=\"\"\n \
    \   local f=\"\"\n    local g=\"\"\n    local h=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local n=\"\
    \"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\"\n \
    \   local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n    local\
    \ w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local a=\"\
    \"\n    local b=\"\"\n    local c=\"\"\n    local d=\"\"\n    local e=\"\"\n \
    \   local f=\"\"\n    local g=\"\"\n    local h=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local n=\"\
    \"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\"\n \
    \   local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n    local\
    \ w=\"\"\n    local x=\"\"\n    local y=\"\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i n=${#list[@]}\n    local -i m=0\n    local -i min=0\n\
    \    local -i max=0\n    local -i min_index=0\n    local -i max_index=0\n    local\
    \ -i min_index_found=0\n    local -i max_index_found=0\n    local -i min_index_found_first=0\n\
    \    local -i max_index_found_first=0\n    local -i min_index_found_second=0\n\
    \    local -i max_index_found_second=0\n    local -i min_index_found_third=0\n\
    \    local -i max_index_found_third=0\n    local -i min_index_found_fourth=0\n\
    \    local -i max_index_found_fourth=0\n    local -i min_index_found_fifth=0\n\
    \    local -i max_index_found_fifth=0\n    local -i min_index_found_sixth=0\n\
    \    local -i max_index_found_sixth=0\n    local -i min_index_found_seventh=0\n\
    \    local -i max_index_found_seventh=0\n    local -i min_index_found_eighth=0\n\
    \    local -i max_index_found_eighth=0\n    local -i min_index_found_ninth=0\n\
    \    local -i max_index_found_ninth=0\n    local -i min_index_found_tenth=0\n\
    \    local -i max_index_found_tenth=0\n    local -i min_index_found_eleventh=0\n\
    \    local -i max_index_found_eleventh=0\n    local -i min_index_found_twelfth=0\n\
    \    local -i max_index_found_twelfth=0\n    local -i min_index_found_thirteenth=0\n\
    \    local -i max_index_found_thirteenth=0\n    local -i min_\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a array=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=${#array[@]}\n\
    \    while ((i < j)); do\n        result+=(${array[i]})\n        if ((i + 1 <\
    \ j)); then\n            result+=(${array[j - 1]})\n        fi\n        ((i++))\n\
    \        ((j--))\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n  \
    \  strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local n=${#list[@]}\n\
    \    local min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n\
    \    local min_index_found=0\n    local max_index_found=0\n    local tmp=0\n \
    \   local tmp_index=0\n    local tmp_index_found=0\n    local tmp_index_found_2=0\n\
    \    local tmp_index_found_3=0\n    local tmp_index_found_4=0\n    local tmp_index_found_5=0\n\
    \    local tmp_index_found_6=0\n    local tmp_index_found_7=0\n    local tmp_index_found_8=0\n\
    \    local tmp_index_found_9=0\n    local tmp_index_found_10=0\n    local tmp_index_found_11=0\n\
    \    local tmp_index_found_12=0\n    local tmp_index_found_13=0\n    local tmp_index_found_14=0\n\
    \    local tmp_index_found_15=0\n    local tmp_index_found_16=0\n    local tmp_index_found_17=0\n\
    \    local tmp_index_found_18=0\n    local tmp_index_found_19=0\n    local tmp_index_found_20=0\n\
    \    local tmp_index_found_21=0\n    local tmp_index_found_22=0\n    local tmp_index_found_23=0\n\
    \    local tmp_index_found_24=0\n    local tmp_index_found_25=0\n    local tmp_index_found_26=0\n\
    \    local tmp_index_found_27=0\n    local tmp_index_found_28=0\n    local tmp_index_found_29=0\n\
    \    local tmp_index_found_30=0\n    local tmp_index_found_31=0\n    local tmp_index_found_32=0\n\
    \    local tmp_index_found_33=0\n    local tmp_index_found_34=0\n    local tmp_index_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local len=${#list[@]}\n\
    \    while [ $i -lt $len ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n      \
    \      result[$i]=$(echo \"${list[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \            list=($(echo \"${list[@]}\" | tr ' ' '\\n' | grep -v \"${result[$i]}\"\
    ))\n        else\n            result[$i]=$(echo \"${list[@]}\" | tr ' ' '\\n'\
    \ | sort -n | tail -n 1)\n            list=($(echo \"${list[@]}\" | tr ' ' '\\\
    n' | grep -v \"${result[$i]}\"))\n        fi\n        i=$((i + 1))\n    done\n\
    \    echo \"[$(echo \"${result[@]}\" | tr ' ' ',')]\"\n}\n\ncandidate() {\n  \
    \  strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local sorted_list=\"\"\n    local min=\"\"\n    local max=\"\
    \"\n    local min_index=\"\"\n    local max_index=\"\"\n    local i=\"\"\n   \
    \ local j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local\
    \ n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\
    \"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n \
    \   local w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local\
    \ a=\"\"\n    local b=\"\"\n    local c=\"\"\n    local d=\"\"\n    local e=\"\
    \"\n    local f=\"\"\n    local g=\"\"\n    local h=\"\"\n    local i=\"\"\n \
    \   local j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local\
    \ n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\
    \"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n \
    \   local w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local\
    \ a=\"\"\n    local b=\"\"\n    local c=\"\"\n    local d=\"\"\n    local e=\"\
    \"\n    local f=\"\"\n    local g=\"\"\n    local h=\"\"\n    local i=\"\"\n \
    \   local j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local\
    \ n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\
    \"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n \
    \   local w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local\
    \ a=\"\"\n    local b=\"\"\n    local c=\"\"\n    local d=\"\"\n    local e=\"\
    \"\n    local f=\"\"\n    local g=\"\"\n    local h=\"\"\n    local i=\"\"\n \
    \   local j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local\
    \ n=\"\"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\
    \"\n    local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n \
    \   local w=\"\"\n    local x=\"\"\n    local\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local min=${list[0]}\n  local max=${list[0]}\n\
    \  local min_index=0\n  local max_index=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local len=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local tmp=0\n    local tmp_index=0\n    local tmp_index2=0\n\
    \    local tmp_index3=0\n    local tmp_index4=0\n    local tmp_index5=0\n    local\
    \ tmp_index6=0\n    local tmp_index7=0\n    local tmp_index8=0\n    local tmp_index9=0\n\
    \    local tmp_index10=0\n    local tmp_index11=0\n    local tmp_index12=0\n \
    \   local tmp_index13=0\n    local tmp_index14=0\n    local tmp_index15=0\n  \
    \  local tmp_index16=0\n    local tmp_index17=0\n    local tmp_index18=0\n   \
    \ local tmp_index19=0\n    local tmp_index20=0\n    local tmp_index21=0\n    local\
    \ tmp_index22=0\n    local tmp_index23=0\n    local tmp_index24=0\n    local tmp_index25=0\n\
    \    local tmp_index26=0\n    local tmp_index27=0\n    local tmp_index28=0\n \
    \   local tmp_index29=0\n    local tmp_index30=0\n    local tmp_index31=0\n  \
    \  local tmp_index32=0\n    local tmp_index33=0\n    local tmp_index34=0\n   \
    \ local tmp_index35=0\n    local tmp_index36=0\n    local tmp_index37=0\n    local\
    \ tmp_index38=0\n    local tmp_index39=0\n    local tmp_index40=0\n    local tmp_index41=0\n\
    \    local tmp_index42=0\n    local tmp_index43=0\n    local tmp_index44=0\n \
    \   local tmp_index45=0\n    local tmp_index46=0\n    local tmp_index47=0\n  \
    \  local tmp_index48=0\n    local tmp\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=(\"$@\")\n  local result=()\n  local min=${list[0]}\n  local max=${list[0]}\n\
    \  local min_index=0\n  local max_index=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local length=${#list[@]}\n    local result=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n\
    \    local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local min=${list[0]}\n  local max=${list[0]}\n\
    \  local min_index=0\n  local max_index=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=()\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n/2))\n    local min=0\n    local max=0\n\
    \    local min_index=0\n    local max_index=0\n    local tmp=0\n    for ((i=0;\
    \ i<n; i++)); do\n        min=${list[0]}\n        max=${list[0]}\n        min_index=0\n\
    \        max_index=0\n        for ((j=0; j<n; j++)); do\n            if [[ ${list[j]}\
    \ -lt $min ]]; then\n                min=${list[j]}\n                min_index=$j\n\
    \            fi\n            if [[ ${list[j]} -gt $max ]]; then\n            \
    \    max=${list[j]}\n                max_index=$j\n            fi\n        done\n\
    \        if [[ $((i%2)) -eq 0 ]]; then\n            result[$k]=$min\n        \
    \    list[$min_index]=$max\n        else\n            result[$k]=$max\n      \
    \      list[$max_index]=$min\n        fi\n        k=$((k+1))\n    done\n    echo\
    \ ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local length=${#list[@]}\n  local sorted=()\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local\
    \ p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local\
    \ v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local\
    \ bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n\
    \  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local\
    \ mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n\
    \  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local\
    \ xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n\
    \  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n \
    \ local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local\
    \ nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n\
    \  local ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n \
    \ local yyy=0\n  local zzz=0\n  local aaaa=0\n  local bbbb=0\n  local cccc=0\n\
    \  local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local result=\"\"\n    local min=\"\"\n    local max=\"\"\n   \
    \ local min_index=\"\"\n    local max_index=\"\"\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n    local aaaa=0\n    local bbbb=0\n\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local n=\"\
    \"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\"\n \
    \   local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n    local\
    \ w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local a=\"\
    \"\n    local b=\"\"\n    local c=\"\"\n    local d=\"\"\n    local e=\"\"\n \
    \   local f=\"\"\n    local g=\"\"\n    local h=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local n=\"\
    \"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\"\n \
    \   local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n    local\
    \ w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local a=\"\
    \"\n    local b=\"\"\n    local c=\"\"\n    local d=\"\"\n    local e=\"\"\n \
    \   local f=\"\"\n    local g=\"\"\n    local h=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local n=\"\
    \"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\"\n \
    \   local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n    local\
    \ w=\"\"\n    local x=\"\"\n    local y=\"\"\n    local z=\"\"\n    local a=\"\
    \"\n    local b=\"\"\n    local c=\"\"\n    local d=\"\"\n    local e=\"\"\n \
    \   local f=\"\"\n    local g=\"\"\n    local h=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local l=\"\"\n    local m=\"\"\n    local n=\"\
    \"\n    local o=\"\"\n    local p=\"\"\n    local q=\"\"\n    local r=\"\"\n \
    \   local s=\"\"\n    local t=\"\"\n    local u=\"\"\n    local v=\"\"\n    local\
    \ w=\"\"\n    local x=\"\"\n    local y=\"\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local sorted_list=$(echo $list | tr ' ' '\\n' | sort -n)\n    local\
    \ min=$(echo $sorted_list | cut -d ' ' -f 1)\n    local max=$(echo $sorted_list\
    \ | cut -d ' ' -f $(echo $sorted_list | wc -w))\n    local min_max_list=$(echo\
    \ $sorted_list | sed -e \"s/$min//\" -e \"s/$max//\")\n    local result=$(echo\
    \ $min $max $min_max_list | tr ' ' '\\n' | sort -n)\n    echo \"[$(echo $result\
    \ | tr ' ' ',')]\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=$1\n  local sorted_list=\"\"\n  local min=\"\"\n  local max=\"\"\n  local\
    \ min_index=\"\"\n  local max_index=\"\"\n  local i=\"\"\n  local j=\"\"\n  local\
    \ k=\"\"\n  local l=\"\"\n  local m=\"\"\n  local n=\"\"\n  local o=\"\"\n  local\
    \ p=\"\"\n  local q=\"\"\n  local r=\"\"\n  local s=\"\"\n  local t=\"\"\n  local\
    \ u=\"\"\n  local v=\"\"\n  local w=\"\"\n  local x=\"\"\n  local y=\"\"\n  local\
    \ z=\"\"\n  local aa=\"\"\n  local bb=\"\"\n  local cc=\"\"\n  local dd=\"\"\n\
    \  local ee=\"\"\n  local ff=\"\"\n  local gg=\"\"\n  local hh=\"\"\n  local ii=\"\
    \"\n  local jj=\"\"\n  local kk=\"\"\n  local ll=\"\"\n  local mm=\"\"\n  local\
    \ nn=\"\"\n  local oo=\"\"\n  local pp=\"\"\n  local qq=\"\"\n  local rr=\"\"\n\
    \  local ss=\"\"\n  local tt=\"\"\n  local uu=\"\"\n  local vv=\"\"\n  local ww=\"\
    \"\n  local xx=\"\"\n  local yy=\"\"\n  local zz=\"\"\n  local aaa=\"\"\n  local\
    \ bbb=\"\"\n  local ccc=\"\"\n  local ddd=\"\"\n  local eee=\"\"\n  local fff=\"\
    \"\n  local ggg=\"\"\n  local hhh=\"\"\n  local iii=\"\"\n  local jjj=\"\"\n \
    \ local kkk=\"\"\n  local lll=\"\"\n  local mmm=\"\"\n  local nnn=\"\"\n  local\
    \ ooo=\"\"\n  local ppp=\"\"\n  local qqq=\"\"\n  local rrr=\"\"\n  local sss=\"\
    \"\n  local ttt=\"\"\n  local uuu=\"\"\n  local vvv=\"\"\n  local www=\"\"\n \
    \ local xxx=\"\"\n  local yyy=\"\"\n  local zzz=\"\"\n  local aaaa=\"\"\n  local\
    \ bbbb=\"\"\n  local cccc=\"\"\n  local dddd=\"\"\n  local eeee=\"\"\n  local\
    \ ffff=\"\"\n  local gggg=\"\"\n  local hhhh=\"\"\n  local iiii=\"\"\n  local\
    \ jjjj=\"\"\n  local kkkk=\"\"\n  local llll=\"\"\n  local mmmm\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local min_found=0\n    local max_found=0\n    local\
    \ temp=0\n    local temp_index=0\n    local temp_found=0\n    local temp_found_index=0\n\
    \    local temp_found_index_2=0\n    local temp_found_index_3=0\n    local temp_found_index_4=0\n\
    \    local temp_found_index_5=0\n    local temp_found_index_6=0\n    local temp_found_index_7=0\n\
    \    local temp_found_index_8=0\n    local temp_found_index_9=0\n    local temp_found_index_10=0\n\
    \    local temp_found_index_11=0\n    local temp_found_index_12=0\n    local temp_found_index_13=0\n\
    \    local temp_found_index_14=0\n    local temp_found_index_15=0\n    local temp_found_index_16=0\n\
    \    local temp_found_index_17=0\n    local temp_found_index_18=0\n    local temp_found_index_19=0\n\
    \    local temp_found_index_20=0\n    local temp_found_index_21=0\n    local temp_found_index_22=0\n\
    \    local temp_found_index_23=0\n    local temp_found_index_24=0\n    local temp_found_index_25=0\n\
    \    local temp_found_index_26=0\n    local temp_found_index_27=0\n    local temp_found_index_28=0\n\
    \    local temp_found_index_29=0\n    local temp_found_index_30=0\n    local temp_found_index_31=0\n\
    \    local temp_found_index_32=0\n    local temp_found_index_33=0\n    local temp_found_index_\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    for i in ${list[@]}; do\n        if [[ $i -lt $min ]]; then\n           \
    \ min=$i\n            min_index=$j\n        fi\n        if [[ $i -gt $max ]];\
    \ then\n            max=$i\n            max_index=$j\n        fi\n        j=$((j+1))\n\
    \    done\n    sorted[0]=$min\n    sorted[1]=$max\n    local k=0\n    for i in\
    \ ${list[@]}; do\n        if [[ $i -ne $min ]] && [[ $i -ne $max ]]; then\n  \
    \          sorted[$((k+2))]=$i\n            k=$((k+1))\n        fi\n    done\n\
    \    echo ${sorted[@]}\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local sorted_list=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=0\n    local\
    \ j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n\
    \    local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n \
    \   local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n  \
    \  local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n    local aaaa=0\n    local bbbb=\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local n=${#list[@]}\n\
    \    local min=0\n    local max=0\n    local min_index=0\n    local max_index=0\n\
    \    local tmp=0\n    local tmp_index=0\n    local is_even=0\n    local is_odd=0\n\
    \    local is_first=0\n    local is_last=0\n    local is_first_even=0\n    local\
    \ is_first_odd=0\n    local is_last_even=0\n    local is_last_odd=0\n    local\
    \ is_first_even_max=0\n    local is_first_odd_max=0\n    local is_last_even_max=0\n\
    \    local is_last_odd_max=0\n    local is_first_even_min=0\n    local is_first_odd_min=0\n\
    \    local is_last_even_min=0\n    local is_last_odd_min=0\n    local is_first_even_max_index=0\n\
    \    local is_first_odd_max_index=0\n    local is_last_even_max_index=0\n    local\
    \ is_last_odd_max_index=0\n    local is_first_even_min_index=0\n    local is_first_odd_min_index=0\n\
    \    local is_last_even_min_index=0\n    local is_last_odd_min_index=0\n    local\
    \ is_first_even_max_index_tmp=0\n    local is_first_odd_max_index_tmp=0\n    local\
    \ is_last_even_max_index_tmp=0\n    local is_last_odd_max_index_tmp=0\n    local\
    \ is_first_even_min_index_tmp=0\n    local is_first_odd_min_index_tmp=0\n    local\
    \ is_last_even_min_index_tmp=0\n    local is_last_odd_min_index_tmp=0\n    local\
    \ is_first_even_max_tmp=0\n    local is_first_odd_max_\n}\n\ncandidate() {\n \
    \   strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local length=${#list[@]}\n    local sorted=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local min=0\n    local max=0\n\
    \    local min_index=0\n    local max_index=0\n    local min_index_found=0\n \
    \   local max_index_found=0\n    local tmp=0\n    local tmp_index=0\n    local\
    \ tmp_index_found=0\n    local tmp_index_found_2=0\n    local tmp_index_found_3=0\n\
    \    local tmp_index_found_4=0\n    local tmp_index_found_5=0\n    local tmp_index_found_6=0\n\
    \    local tmp_index_found_7=0\n    local tmp_index_found_8=0\n    local tmp_index_found_9=0\n\
    \    local tmp_index_found_10=0\n    local tmp_index_found_11=0\n    local tmp_index_found_12=0\n\
    \    local tmp_index_found_13=0\n    local tmp_index_found_14=0\n    local tmp_index_found_15=0\n\
    \    local tmp_index_found_16=0\n    local tmp_index_found_17=0\n    local tmp_index_found_18=0\n\
    \    local tmp_index_found_19=0\n    local tmp_index_found_20=0\n    local tmp_index_found_21=0\n\
    \    local tmp_index_found_22=0\n    local tmp_index_found_23=0\n    local tmp_index_found_24=0\n\
    \    local tmp_index_found_25=0\n    local tmp_index_found_26=0\n    local tmp_index_found_27=0\n\
    \    local tmp_index_found_28=0\n    local tmp_index_found_29=0\n    local tmp_index_found_30=0\n\
    \    local tmp_index_found_31=0\n    local tmp_index_found_32=0\n    local tmp_index_found_33=0\n\
    \    local tmp_index_\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local tmp=0\n    for ((i=0; i<n; i++)); do\n     \
    \   min=${list[0]}\n        min_index=0\n        max=${list[0]}\n        max_index=0\n\
    \        for ((j=0; j<n; j++)); do\n            if [[ ${list[j]} -lt $min ]];\
    \ then\n                min=${list[j]}\n                min_index=$j\n       \
    \     fi\n            if [[ ${list[j]} -gt $max ]]; then\n                max=${list[j]}\n\
    \                max_index=$j\n            fi\n        done\n        if [[ $i%2\
    \ -eq 0 ]]; then\n            result[$k]=$min\n            list[$min_index]=$max\n\
    \        else\n            result[$k]=$max\n            list[$max_index]=$min\n\
    \        fi\n        ((k++))\n    done\n    echo ${result[@]}\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a sorted\n    local -i i=0\n    local -i j=${#list[@]}\n\
    \    while [ $i -lt $j ]; do\n        if [ $((i % 2)) -eq 0 ]; then\n        \
    \    sorted[$i]=$(echo \"${list[@]}\" | tr ' ' '\\n' | sort -n | head -n 1)\n\
    \        else\n            sorted[$i]=$(echo \"${list[@]}\" | tr ' ' '\\n' | sort\
    \ -n | tail -n 1)\n        fi\n        list=(${list[@]/${sorted[$i]}})\n     \
    \   ((i++))\n    done\n    echo \"${sorted[@]}\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local n=${#list[@]}\n    local m=$((n / 2))\n    local min=0\n\
    \    local max=0\n    local min_index=0\n    local max_index=0\n    local temp=0\n\
    \    local temp_index=0\n    local temp_list=()\n    local temp_list_index=()\n\
    \    local temp_list_index_index=0\n    local temp_list_index_index_index=0\n\
    \    local temp_list_index_index_index_index=0\n    local temp_list_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index=0\n    local temp_list_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index=0\n    local\
    \ temp_list_index_index_index_index_index_index_index_index_index=0\n    local\
    \ temp_list_index_index_index_index_index_index_index_index_index_index=0\n  \
    \  local temp_list_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local temp_list_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index_index=0\n\
    \    local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted_list=()\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ e\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    while [ $i -lt ${#list[@]}\
    \ ]; do\n        local min=${list[0]}\n        local max=${list[0]}\n        local\
    \ min_index=0\n        local max_index=0\n        for ((j=0; j<${#list[@]}; j++));\
    \ do\n            if [ ${list[$j]} -lt $min ]; then\n                min=${list[$j]}\n\
    \                min_index=$j\n            fi\n            if [ ${list[$j]} -gt\
    \ $max ]; then\n                max=${list[$j]}\n                max_index=$j\n\
    \            fi\n        done\n        if [ $((i % 2)) -eq 0 ]; then\n       \
    \     result+=($min)\n            list[$min_index]=$max\n        else\n      \
    \      result+=($max)\n            list[$max_index]=$min\n        fi\n       \
    \ i=$((i+1))\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local len=${#list[@]}\n    local tmp=0\n    local tmp_index=0\n\
    \    local tmp_index_2=0\n    local tmp_index_3=0\n    local tmp_index_4=0\n \
    \   local tmp_index_5=0\n    local tmp_index_6=0\n    local tmp_index_7=0\n  \
    \  local tmp_index_8=0\n    local tmp_index_9=0\n    local tmp_index_10=0\n  \
    \  local tmp_index_11=0\n    local tmp_index_12=0\n    local tmp_index_13=0\n\
    \    local tmp_index_14=0\n    local tmp_index_15=0\n    local tmp_index_16=0\n\
    \    local tmp_index_17=0\n    local tmp_index_18=0\n    local tmp_index_19=0\n\
    \    local tmp_index_20=0\n    local tmp_index_21=0\n    local tmp_index_22=0\n\
    \    local tmp_index_23=0\n    local tmp_index_24=0\n    local tmp_index_25=0\n\
    \    local tmp_index_26=0\n    local tmp_index_27=0\n    local tmp_index_28=0\n\
    \    local tmp_index_29=0\n    local tmp_index_30=0\n    local tmp_index_31=0\n\
    \    local tmp_index_32=0\n    local tmp_index_33=0\n    local tmp_index_34=0\n\
    \    local tmp_index_35=0\n    local tmp_index_36=0\n    local tmp_index_37=0\n\
    \    local tmp_index_38=0\n    local tmp_index_39=0\n    local tmp_index_40=0\n\
    \    local tmp_index_41=0\n    local tmp_index_42=0\n    local tmp_index_43=\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local result=()\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i=0\n    local j=0\n    local k=0\n    local\
    \ l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n    local q=0\n\
    \    local r=0\n    local s=0\n    local t=0\n    local u=0\n    local v=0\n \
    \   local w=0\n    local x=0\n    local y=0\n    local z=0\n    local a=0\n  \
    \  local b=0\n    local c=0\n    local d=0\n    local e=0\n    local f=0\n   \
    \ local g=0\n    local h=0\n    local i\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n / 2))\n    local min=0\n    local max=0\n\
    \    local min_index=0\n    local max_index=0\n    local tmp=0\n    local tmp_index=0\n\
    \    local tmp_index2=0\n    local tmp_index3=0\n    local tmp_index4=0\n    local\
    \ tmp_index5=0\n    local tmp_index6=0\n    local tmp_index7=0\n    local tmp_index8=0\n\
    \    local tmp_index9=0\n    local tmp_index10=0\n    local tmp_index11=0\n  \
    \  local tmp_index12=0\n    local tmp_index13=0\n    local tmp_index14=0\n   \
    \ local tmp_index15=0\n    local tmp_index16=0\n    local tmp_index17=0\n    local\
    \ tmp_index18=0\n    local tmp_index19=0\n    local tmp_index20=0\n    local tmp_index21=0\n\
    \    local tmp_index22=0\n    local tmp_index23=0\n    local tmp_index24=0\n \
    \   local tmp_index25=0\n    local tmp_index26=0\n    local tmp_index27=0\n  \
    \  local tmp_index28=0\n    local tmp_index29=0\n    local tmp_index30=0\n   \
    \ local tmp_index31=0\n    local tmp_index32=0\n    local tmp_index33=0\n    local\
    \ tmp_index34=0\n    local tmp_index35=0\n    local tmp_index36=0\n    local tmp_index37=0\n\
    \    local tmp_index38=0\n    local tmp_index39=0\n    local tmp_index40=0\n \
    \   local tmp_index41=0\n    local tmp_index42=0\n    local tmp_index43=0\n  \
    \  local tmp_index44=0\n    local tmp_index45=0\n    local tmp_index46=0\n   \
    \ local tmp_index47=0\n    local\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n / 2))\n    local tmp=()\n    if [ $n\
    \ -eq 0 ]; then\n        echo \"[]\"\n        return\n    fi\n    for ((i = 0;\
    \ i < m; i++)); do\n        tmp=()\n        for ((j = 0; j < n; j++)); do\n  \
    \          if [ $j -ne $k ]; then\n                tmp+=(${list[j]})\n       \
    \     fi\n        done\n        result+=(${list[k]})\n        list=(\"${tmp[@]}\"\
    )\n        n=$((n - 1))\n        if [ $((i % 2)) -eq 0 ]; then\n            k=0\n\
    \        else\n            k=$((n - 1))\n        fi\n    done\n    result+=(${list[0]})\n\
    \    echo \"[$(IFS=,; echo \"${result[*]}\")]\"\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local result=()\n    local min=0\n    local max=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n\
    \    local d\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local min=${list[0]}\n  local max=${list[0]}\n\
    \  local min_index=0\n  local max_index=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local n=${#list[@]}\n  local m=$((n / 2))\n  local tmp=0\n  local tmp_index=0\n\
    \  local tmp_index2=0\n  local tmp_index3=0\n  local tmp_index4=0\n  local tmp_index5=0\n\
    \  local tmp_index6=0\n  local tmp_index7=0\n  local tmp_index8=0\n  local tmp_index9=0\n\
    \  local tmp_index10=0\n  local tmp_index11=0\n  local tmp_index12=0\n  local\
    \ tmp_index13=0\n  local tmp_index14=0\n  local tmp_index15=0\n  local tmp_index16=0\n\
    \  local tmp_index17=0\n  local tmp_index18=0\n  local tmp_index19=0\n  local\
    \ tmp_index20=0\n  local tmp_index21=0\n  local tmp_index22=0\n  local tmp_index23=0\n\
    \  local tmp_index24=0\n  local tmp_index25=0\n  local tmp_index26=0\n  local\
    \ tmp_index27=0\n  local tmp_index28=0\n  local tmp_index29=0\n  local tmp_index30=0\n\
    \  local tmp_index31=0\n  local tmp_index32=0\n  local tmp_index33=0\n  local\
    \ tmp_index34=0\n  local tmp_index35=0\n  local tmp_index36=0\n  local tmp_index37=0\n\
    \  local tmp_index38=0\n  local tmp_index39=0\n  local tmp_index40=0\n  local\
    \ tmp_index41=0\n  local tmp_index42=0\n  local tmp_index43=0\n  local tmp_index44=0\n\
    \  local tmp_index45=0\n  local tmp_index46=0\n  local tmp\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a arr=()\n    local -a res=()\n    local -a min=()\n    local -a max=()\n \
    \   local -a min_idx=()\n    local -a max_idx=()\n    local -a tmp=()\n    local\
    \ -a tmp_idx=()\n    local -a tmp_idx_rev=()\n    local -a tmp_rev=()\n    local\
    \ -a tmp_rev_idx=()\n    local -a tmp_rev_idx_rev=()\n    local -a tmp_rev_rev=()\n\
    \    local -a tmp_rev_rev_idx=()\n    local -a tmp_rev_rev_idx_rev=()\n    local\
    \ -a tmp_rev_rev_rev=()\n    local -a tmp_rev_rev_rev_idx=()\n    local -a tmp_rev_rev_rev_idx_rev=()\n\
    \    local -a tmp_rev_rev_rev_rev=()\n    local -a tmp_rev_rev_rev_rev_idx=()\n\
    \    local -a tmp_rev_rev_rev_rev_idx_rev=()\n    local -a tmp_rev_rev_rev_rev_rev=()\n\
    \    local -a tmp_rev_rev_rev_rev_rev_idx=()\n    local -a tmp_rev_rev_rev_rev_rev_idx_rev=()\n\
    \    local -a tmp_rev_rev_rev_rev_rev_rev=()\n    local -a tmp_rev_rev_rev_rev_rev_rev_idx=()\n\
    \    local -a tmp_rev_rev_rev_rev_rev_rev_idx_rev=()\n    local -a tmp_rev_rev_rev_rev_rev_rev_rev=()\n\
    \    local -a tmp_rev_rev_rev_rev_rev_rev_rev_idx=()\n    local -a tmp_rev_rev_rev_rev_rev_rev_rev_idx_rev=()\n\
    \    local -a tmp_rev_rev_rev_rev_rev_rev_rev_rev=()\n    local -a tmp_rev_rev\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local temp=0\n    local temp_index=0\n    local temp_min=0\n    local temp_max=0\n\
    \    local temp_min_index=0\n    local temp_max_index=0\n    local temp_result=()\n\
    \    local temp_list=()\n    local temp_list_index=0\n    local temp_list_length=0\n\
    \    local temp_list_length_half=0\n    local temp_list_length_half_index=0\n\
    \    local temp_list_length_half_index_plus_one=0\n    local temp_list_length_half_index_minus_one=0\n\
    \    local temp_list_length_half_index_plus_one_value=0\n    local temp_list_length_half_index_minus_one_value=0\n\
    \    local temp_list_length_half_index_plus_one_index=0\n    local temp_list_length_half_index_minus_one_index=0\n\
    \    local temp_list_length_half_index_plus_one_min=0\n    local temp_list_length_half_index_minus_one_min=0\n\
    \    local temp_list_length_half_index_plus_one_max=0\n    local temp_list_length_half_index_minus_one_max=0\n\
    \    local temp_list_length_half_index_plus_one_min_index=0\n    local temp_list_length_half_index_minus_one_min_index=0\n\
    \    local temp_list_length_half_index_plus_one_max_index=0\n    local temp_list_length_half_index_minus_one_max_index=0\n\
    \    local temp_list_length_half_index_plus_one_min_index_plus_one=0\n    local\
    \ temp_list_length_half_index_minus_one_min_index_plus_one=0\n   \n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local length=${#list[@]}\n    local result=()\n    local i=0\n\
    \    while [ $i -lt $length ]; do\n        local min=${list[0]}\n        local\
    \ max=${list[0]}\n        local min_index=0\n        local max_index=0\n     \
    \   local j=0\n        while [ $j -lt $length ]; do\n            if [ ${list[$j]}\
    \ -lt $min ]; then\n                min=${list[$j]}\n                min_index=$j\n\
    \            fi\n            if [ ${list[$j]} -gt $max ]; then\n             \
    \   max=${list[$j]}\n                max_index=$j\n            fi\n          \
    \  j=$((j+1))\n        done\n        if [ $((i%2)) -eq 0 ]; then\n           \
    \ result[$i]=$min\n            list[$min_index]=$max\n        else\n         \
    \   result[$i]=$max\n            list[$max_index]=$min\n        fi\n        i=$((i+1))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n\n    while [ $i -lt ${#list[@]}\
    \ ]; do\n        local min=${list[0]}\n        local max=${list[0]}\n        local\
    \ min_index=0\n        local max_index=0\n\n        for j in \"${!list[@]}\";\
    \ do\n            if [ \"${list[$j]}\" -lt \"$min\" ]; then\n                min=${list[$j]}\n\
    \                min_index=$j\n            fi\n\n            if [ \"${list[$j]}\"\
    \ -gt \"$max\" ]; then\n                max=${list[$j]}\"\n                max_index=$j\n\
    \            fi\n        done\n\n        if [ $((i % 2)) -eq 0 ]; then\n     \
    \       result+=(\"$min\")\n            unset list[$min_index]\n        else\n\
    \            result+=(\"$max\")\n            unset list[$max_index]\n        fi\n\
    \n        list=( \"${list[@]}\" )\n        i=$((i + 1))\n    done\n\n    echo\
    \ \"${result[@]}\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp1bcjze65.sh: line 66: unexpected EOF while looking for matching
    `"''

    /tmp/tmp1bcjze65.sh: line 70: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local result=\"\"\n    local min=\"\"\n    local max=\"\"\n\
    \    local min_index=\"\"\n    local max_index=\"\"\n    local i=\"\"\n    local\
    \ j=\"\"\n    local k=\"\"\n    local temp=\"\"\n    local temp_list=\"\"\n  \
    \  local temp_index=\"\"\n    local temp_result=\"\"\n    local temp_min=\"\"\n\
    \    local temp_max=\"\"\n    local temp_min_index=\"\"\n    local temp_max_index=\"\
    \"\n    local temp_i=\"\"\n    local temp_j=\"\"\n    local temp_k=\"\"\n    local\
    \ temp_temp=\"\"\n    local temp_temp_list=\"\"\n    local temp_temp_index=\"\"\
    \n    local temp_temp_result=\"\"\n    local temp_temp_min=\"\"\n    local temp_temp_max=\"\
    \"\n    local temp_temp_min_index=\"\"\n    local temp_temp_max_index=\"\"\n \
    \   local temp_temp_i=\"\"\n    local temp_temp_j=\"\"\n    local temp_temp_k=\"\
    \"\n    local temp_temp_temp=\"\"\n    local temp_temp_temp_list=\"\"\n    local\
    \ temp_temp_temp_index=\"\"\n    local temp_temp_temp_result=\"\"\n    local temp_temp_temp_min=\"\
    \"\n    local temp_temp_temp_max=\"\"\n    local temp_temp_temp_min_index=\"\"\
    \n    local temp_temp_temp_max_index=\"\"\n    local temp_temp_temp_i=\"\"\n \
    \   local temp_temp_temp_j=\"\"\n    local temp_temp_temp_k=\"\"\n    local temp_temp_temp_temp=\"\
    \"\n    local temp_temp_temp_temp_list=\"\"\n    local temp_temp_temp_temp_index=\"\
    \"\n    local temp_temp_temp_temp_result=\"\"\n    local temp_temp_temp_temp_min=\"\
    \"\n    local temp_temp_temp_temp_max=\"\"\n    local temp_temp_temp_temp_min_index=\"\
    \"\n    local temp_temp_temp_temp_max_index=\"\"\n    local temp_temp_temp_temp_i=\"\
    \"\n    local temp_temp_temp_temp_j=\"\"\n    local temp_temp_temp_temp_k=\"\"\
    \n    local temp_temp_temp_temp_temp\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a arr\n    local -a res\n    local i\n    local j\n    local len\n    local\
    \ min\n    local max\n    local min_i\n    local max_i\n    local min_j\n    local\
    \ max_j\n    local -i flag\n    arr=($1)\n    len=${#arr[@]}\n    if [[ $len -eq\
    \ 0 ]]; then\n        echo \"[]\"\n        return\n    fi\n    flag=0\n    for\
    \ ((i=0; i<len; i++)); do\n        if [[ $flag -eq 0 ]]; then\n            min=${arr[i]}\n\
    \            min_i=$i\n            min_j=$i\n            for ((j=i+1; j<len; j++));\
    \ do\n                if [[ ${arr[j]} -lt $min ]]; then\n                    min=${arr[j]}\n\
    \                    min_i=$j\n                fi\n            done\n        \
    \    res[i]=$min\n            arr[min_i]=${arr[min_j]}\n            flag=1\n \
    \       else\n            max=${arr[i]}\n            max_i=$i\n            max_j=$i\n\
    \            for ((j=i+1; j<len; j++)); do\n                if [[ ${arr[j]} -gt\
    \ $max ]]; then\n                    max=${arr[j]}\n                    max_i=$j\n\
    \                fi\n            done\n            res[i]=$max\n            arr[max_i]=${arr[max_j]}\n\
    \            flag=0\n        fi\n    done\n    echo \"[\"$(printf '\"%s\" ' \"\
    ${res[@]}\")\"]\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local sorted_list=$(echo $list | tr ' ' '\\n' | sort -n)\n    local\
    \ min=$(echo $sorted_list | cut -d ' ' -f 1)\n    local max=$(echo $sorted_list\
    \ | cut -d ' ' -f $(echo $sorted_list | wc -w))\n    local min_max_list=$(echo\
    \ $sorted_list | sed \"s/$min//g\" | sed \"s/$max//g\")\n    local result=$(echo\
    \ $min $min_max_list $max)\n    echo $result\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i len=${#list[@]}\n    local\
    \ -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n\
    \    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local\
    \ -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n\
    \    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local\
    \ -i aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local\
    \ -i ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local\
    \ -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local\
    \ -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local\
    \ -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local\
    \ -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local\
    \ -i yy=0\n    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local\
    \ -i ccc=0\n    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local\
    \ -i ggg=0\n    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local\
    \ -i kkk=0\n    local -i lll=0\n    local -i\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=\"$1\"\n  local sorted_list=\"\"\n  local min=\"\"\n  local max=\"\"\n\
    \  local min_index=\"\"\n  local max_index=\"\"\n  local i=\"\"\n  local j=\"\"\
    \n  local k=\"\"\n  local l=\"\"\n  local m=\"\"\n  local n=\"\"\n  local o=\"\
    \"\n  local p=\"\"\n  local q=\"\"\n  local r=\"\"\n  local s=\"\"\n  local t=\"\
    \"\n  local u=\"\"\n  local v=\"\"\n  local w=\"\"\n  local x=\"\"\n  local y=\"\
    \"\n  local z=\"\"\n  local aa=\"\"\n  local bb=\"\"\n  local cc=\"\"\n  local\
    \ dd=\"\"\n  local ee=\"\"\n  local ff=\"\"\n  local gg=\"\"\n  local hh=\"\"\n\
    \  local ii=\"\"\n  local jj=\"\"\n  local kk=\"\"\n  local ll=\"\"\n  local mm=\"\
    \"\n  local nn=\"\"\n  local oo=\"\"\n  local pp=\"\"\n  local qq=\"\"\n  local\
    \ rr=\"\"\n  local ss=\"\"\n  local tt=\"\"\n  local uu=\"\"\n  local vv=\"\"\n\
    \  local ww=\"\"\n  local xx=\"\"\n  local yy=\"\"\n  local zz=\"\"\n  local aaa=\"\
    \"\n  local bbb=\"\"\n  local ccc=\"\"\n  local ddd=\"\"\n  local eee=\"\"\n \
    \ local fff=\"\"\n  local ggg=\"\"\n  local hhh=\"\"\n  local iii=\"\"\n  local\
    \ jjj=\"\"\n  local kkk=\"\"\n  local lll=\"\"\n  local mmm=\"\"\n  local nnn=\"\
    \"\n  local ooo=\"\"\n  local ppp=\"\"\n  local qqq=\"\"\n  local rrr=\"\"\n \
    \ local sss=\"\"\n  local ttt=\"\"\n  local uuu=\"\"\n  local vvv=\"\"\n  local\
    \ www=\"\"\n  local xxx=\"\"\n  local yyy=\"\"\n  local zzz=\"\"\n  local aaaa=\"\
    \"\n  local bbbb=\"\"\n  local cccc=\"\"\n  local dddd=\"\"\n  local eeee=\"\"\
    \n  local ffff=\"\"\n  local gggg=\"\"\n  local hhhh=\"\"\n  local iiii=\"\"\n\
    \  local jjjj=\"\"\n  local kkkk=\"\"\n  local llll=\"\"\n  local\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n    local h=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local a=0\n    local b=0\n    local c=0\n    local d=0\n    local\
    \ e=0\n    local f=0\n    local g=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local n=${#list[@]}\n    local m=$((n / 2))\n    local min=0\n    local max=0\n\
    \    local min_index=0\n    local max_index=0\n    local min_found=0\n    local\
    \ max_found=0\n    local min_found_index=0\n    local max_found_index=0\n    local\
    \ min_found_index_2=0\n    local max_found_index_2=0\n    local min_found_2=0\n\
    \    local max_found_2=0\n    local min_found_index_3=0\n    local max_found_index_3=0\n\
    \    local min_found_3=0\n    local max_found_3=0\n    local min_found_index_4=0\n\
    \    local max_found_index_4=0\n    local min_found_4=0\n    local max_found_4=0\n\
    \    local min_found_index_5=0\n    local max_found_index_5=0\n    local min_found_5=0\n\
    \    local max_found_5=0\n    local min_found_index_6=0\n    local max_found_index_6=0\n\
    \    local min_found_6=0\n    local max_found_6=0\n    local min_found_index_7=0\n\
    \    local max_found_index_7=0\n    local min_found_7=0\n    local max_found_7=0\n\
    \    local min_found_index_8=0\n    local max_found_index_8=0\n    local min_found_8=0\n\
    \    local max_found_8=0\n    local min_found_index_9=0\n    local max_found_index_9=0\n\
    \    local min_found_9=0\n    local max_found_9=0\n    local min_found_index_10=0\n\
    \    local max_found_index_10=0\n    local min_found_10=0\n    local max_found_10=\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local sorted_list=()\n    local min=0\n    local max=0\n    local\
    \ min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local aa=0\n    local ab=0\n    local ac=0\n    local ad=0\n    local ae=0\n\
    \    local af=0\n    local ag=0\n    local ah=0\n    local ai=0\n    local aj=0\n\
    \    local ak=0\n    local al=0\n    local am=0\n    local an=0\n    local ao=0\n\
    \    local ap=0\n    local aq=0\n    local ar=0\n    local as=0\n    local at=0\n\
    \    local au=0\n    local av=0\n    local aw=0\n    local ax=0\n    local ay=0\n\
    \    local az=0\n    local ba=0\n    local bb=0\n    local bc=0\n    local bd=0\n\
    \    local be=0\n    local bf=0\n    local bg=0\n    local bh=0\n    local bi=0\n\
    \    local bj=0\n    local bk=0\n    local bl=0\n    local bm=0\n    local bn=0\n\
    \    local bo=0\n    local bp=0\n    local bq=0\n    local br=0\n    local bs=0\n\
    \    local bt=0\n    local bu=0\n    local bv=0\n    local bw=0\n    local bx=0\n\
    \    local by=0\n    local bz=0\n    local ca=0\n    local cb=0\n    local cc=0\n\
    \    local cd=0\n   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[\
    \ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\"\
    \ ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n\
    \    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[\
    \ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ -a array\n  local -a result\n  local -i i\n  local -i j\n  local -i k\n  local\
    \ -i n\n  local -i m\n  local -i min\n  local -i max\n  local -i min_index\n \
    \ local -i max_index\n  local -i min_index_2\n  local -i max_index_2\n  local\
    \ -i min_index_3\n  local -i max_index_3\n  local -i min_index_4\n  local -i max_index_4\n\
    \  local -i min_index_5\n  local -i max_index_5\n  local -i min_index_6\n  local\
    \ -i max_index_6\n  local -i min_index_7\n  local -i max_index_7\n  local -i min_index_8\n\
    \  local -i max_index_8\n  local -i min_index_9\n  local -i max_index_9\n  local\
    \ -i min_index_10\n  local -i max_index_10\n  local -i min_index_11\n  local -i\
    \ max_index_11\n  local -i min_index_12\n  local -i max_index_12\n  local -i min_index_13\n\
    \  local -i max_index_13\n  local -i min_index_14\n  local -i max_index_14\n \
    \ local -i min_index_15\n  local -i max_index_15\n  local -i min_index_16\n  local\
    \ -i max_index_16\n  local -i min_index_17\n  local -i max_index_17\n  local -i\
    \ min_index_18\n  local -i max_index_18\n  local -i min_index_19\n  local -i max_index_19\n\
    \  local -i min_index_20\n  local -i max_index_20\n  local -i min_index_21\n \
    \ local -i max_index_21\n  local -i min_index_22\n  local -i max_index_22\n  local\
    \ -i min_index_23\n  local -i max_index_23\n \n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=(\"$@\")\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local n=${#list[@]}\n    local m=0\n    local tmp=0\n    local\
    \ tmp_index=0\n    local tmp_list=()\n    local tmp_list_index=()\n    local tmp_list_index_len=0\n\
    \    local tmp_list_len=0\n    local tmp_list_max=0\n    local tmp_list_max_index=0\n\
    \    local tmp_list_min=0\n    local tmp_list_min_index=0\n    local tmp_list_min_index_len=0\n\
    \    local tmp_list_min_len=0\n    local tmp_list_min_max=0\n    local tmp_list_min_max_index=0\n\
    \    local tmp_list_min_max_index_len=0\n    local tmp_list_min_max_len=0\n  \
    \  local tmp_list_min_max_min=0\n    local tmp_list_min_max_min_index=0\n    local\
    \ tmp_list_min_max_min_index_len=0\n    local tmp_list_min_max_min_len=0\n   \
    \ local tmp_list_min_max_min_max=0\n    local tmp_list_min_max_min_max_index=0\n\
    \    local tmp_list_min_max_min_max_index_len=0\n    local tmp_list_min_max_min_max_len=0\n\
    \    local tmp_list_min_max_min_max_min=0\n    local tmp_list_min_max_min_max_min_index=0\n\
    \    local tmp_list_min_max_min_max_min_index_len=0\n    local tmp_list_min_max_min_max_min_len=0\n\
    \    local tmp_list_min_max_min_max_min_max=0\n    local tmp_list_min_max\n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=$1\n  local sorted_list=$(echo $list | tr ' ' '\\n' | sort -n)\n  local\
    \ min=$(echo $sorted_list | cut -d ' ' -f 1)\n  local max=$(echo $sorted_list\
    \ | cut -d ' ' -f $(echo $sorted_list | wc -w))\n  local min_list=$(echo $sorted_list\
    \ | cut -d ' ' -f 2-$(echo $sorted_list | wc -w))\n  local max_list=$(echo $sorted_list\
    \ | cut -d ' ' -f 1-$(($(echo $sorted_list | wc -w) - 1)))\n  local result=$(echo\
    \ $min $max)\n  local min_max_list=$(echo $min_list $max_list | tr ' ' '\\n' |\
    \ sort -n)\n  local min_max_list_len=$(echo $min_max_list | wc -w)\n  local i=1\n\
    \  while [ $i -lt $min_max_list_len ]; do\n    result=$(echo $result $(echo $min_max_list\
    \ | cut -d ' ' -f $i))\n    i=$(($i + 1))\n  done\n  echo $result\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local i=0\n    local j=0\n    local k=0\n    local l=0\n    local m=0\n \
    \   local n=0\n    local o=0\n    local p=0\n    local q=0\n    local r=0\n  \
    \  local s=0\n    local t=0\n    local u=0\n    local v=0\n    local w=0\n   \
    \ local x=0\n    local y=0\n    local z=0\n    local aa=0\n    local bb=0\n  \
    \  local cc=0\n    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n\
    \    local hh=0\n    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n\
    \    local mm=0\n    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n\
    \    local rr=0\n    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n\
    \    local ww=0\n    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n\
    \    local bbb=0\n    local ccc=0\n    local ddd=0\n    local eee=0\n    local\
    \ fff=0\n    local ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n\
    \    local kkk=0\n    local lll=0\n    local mmm=0\n    local nnn=0\n    local\
    \ ooo=0\n    local ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n\
    \    local ttt=0\n    local uuu=0\n    local vvv=0\n    local www=0\n    local\
    \ xxx=0\n    local yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n\
    \   \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local sorted_list=$(echo $list | tr ' ' '\\n' | sort -n)\n    local\
    \ min=$(echo $sorted_list | cut -d ' ' -f 1)\n    local max=$(echo $sorted_list\
    \ | cut -d ' ' -f $(echo $sorted_list | wc -w))\n    local result=\"\"\n    local\
    \ i=1\n    local j=$(echo $sorted_list | wc -w)\n    while [ $i -le $j ]; do\n\
    \        if [ $((i % 2)) -eq 1 ]; then\n            result+=$(echo $sorted_list\
    \ | cut -d ' ' -f $i)\n        else\n            result+=$(echo $sorted_list |\
    \ cut -d ' ' -f $j)\n            j=$((j - 1))\n        fi\n        i=$((i + 1))\n\
    \    done\n    echo $result\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local sorted_list=$(echo \"$list\" | tr ' ' '\\n' | sort -n)\n\
    \    local min=$(echo \"$sorted_list\" | head -n 1)\n    local max=$(echo \"$sorted_list\"\
    \ | tail -n 1)\n    local min_list=$(echo \"$sorted_list\" | sed \"s/$max//\"\
    )\n    local max_list=$(echo \"$sorted_list\" | sed \"s/$min//\")\n    local result=\"\
    \"\n    while [ -n \"$min_list\" ] && [ -n \"$max_list\" ]; do\n        result=\"\
    $result $(echo \"$min_list\" | head -n 1)\"\n        result=\"$result $(echo \"\
    $max_list\" | tail -n 1)\"\n        min_list=$(echo \"$min_list\" | sed '1d')\n\
    \        max_list=$(echo \"$max_list\" | sed '$d')\n    done\n    if [ -n \"$min_list\"\
    \ ]; then\n        result=\"$result $min_list\"\n    fi\n    if [ -n \"$max_list\"\
    \ ]; then\n        result=\"$result $max_list\"\n    fi\n    echo \"$result\"\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local min=${list[0]}\n  local max=${list[0]}\n\
    \  local min_index=0\n  local max_index=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local\
    \ r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local\
    \ x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local\
    \ dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n\
    \  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local\
    \ oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n\
    \  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local\
    \ zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n\
    \  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n \
    \ local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local\
    \ ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n\
    \  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n \
    \ local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local eeee\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local len=${#list[@]}\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local result=()\n    local min=0\n    local max=0\n    local min_index=0\n\
    \    local max_index=0\n    local temp=0\n    local temp_index=0\n    local temp_index2=0\n\
    \    local temp_index3=0\n    local temp_index4=0\n    local temp_index5=0\n \
    \   local temp_index6=0\n    local temp_index7=0\n    local temp_index8=0\n  \
    \  local temp_index9=0\n    local temp_index10=0\n    local temp_index11=0\n \
    \   local temp_index12=0\n    local temp_index13=0\n    local temp_index14=0\n\
    \    local temp_index15=0\n    local temp_index16=0\n    local temp_index17=0\n\
    \    local temp_index18=0\n    local temp_index19=0\n    local temp_index20=0\n\
    \    local temp_index21=0\n    local temp_index22=0\n    local temp_index23=0\n\
    \    local temp_index24=0\n    local temp_index25=0\n    local temp_index26=0\n\
    \    local temp_index27=0\n    local temp_index28=0\n    local temp_index29=0\n\
    \    local temp_index30=0\n    local temp_index31=0\n    local temp_index32=0\n\
    \    local temp_index33=0\n    local temp_index34=0\n    local temp_index35=0\n\
    \    local temp_index36=0\n    local temp_index37=0\n    local temp_index38=0\n\
    \    local temp_index39=0\n    local temp_index40=0\n    local temp_index41=0\n\
    \    local temp_index42=0\n    local temp_index43=0\n    local temp_index44=0\n\
    \    local temp_index45=0\n    local temp_index46=0\n    local temp_index47=0\n\
    \    local temp_index48=0\n    local temp\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local i=0\n  local j=0\n  local k=0\n  local\
    \ n=${#list[@]}\n  local m=$((n/2))\n  local temp=()\n  local temp2=()\n  for\
    \ ((i=0; i<n; i++)); do\n    temp[i]=${list[i]}\n  done\n  for ((i=0; i<m; i++));\
    \ do\n    result[i]=${temp[i]}\n    result[n-i-1]=${temp[n-i-1]}\n  done\n  if\
    \ [[ $((n%2)) -eq 1 ]]; then\n    result[m]=${temp[m]}\n  fi\n  echo \"[$(IFS=,;\
    \ echo \"${result[*]}\")]\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n\
    \    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1\
    \ 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5\
    \ 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a res=()\n    local -i i=0\n    local -i j=0\n    local\
    \ -i k=0\n    local -i len=${#list[@]}\n    local -i half=$((len / 2))\n    local\
    \ -i odd=$((len % 2))\n    local -i min=0\n    local -i max=0\n    local -i min_index=0\n\
    \    local -i max_index=0\n    local -i min_index_tmp=0\n    local -i max_index_tmp=0\n\
    \    local -i min_index_tmp2=0\n    local -i max_index_tmp2=0\n    local -i min_index_tmp3=0\n\
    \    local -i max_index_tmp3=0\n    local -i min_index_tmp4=0\n    local -i max_index_tmp4=0\n\
    \    local -i min_index_tmp5=0\n    local -i max_index_tmp5=0\n    local -i min_index_tmp6=0\n\
    \    local -i max_index_tmp6=0\n    local -i min_index_tmp7=0\n    local -i max_index_tmp7=0\n\
    \    local -i min_index_tmp8=0\n    local -i max_index_tmp8=0\n    local -i min_index_tmp9=0\n\
    \    local -i max_index_tmp9=0\n    local -i min_index_tmp10=0\n    local -i max_index_tmp10=0\n\
    \    local -i min_index_tmp11=0\n    local -i max_index_tmp11=0\n    local -i\
    \ min_index_tmp12=0\n    local -i max_index_tmp12=0\n    local -i min_index_tmp13=0\n\
    \    local -i max_index_tmp13=0\n    local -i min_index_tmp14=0\n    local -i\
    \ max_index_tmp14=0\n    local -i min_index_tmp15=0\n    local -i max_index_tmp15=0\n\
    \    local -i min_index_\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n   \
    \ [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6\
    \ 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local result=()\n  local min=${list[0]}\n  local max=${list[0]}\n\
    \  local min_index=0\n  local max_index=0\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    \n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=${#list[@]}\n   \
    \ local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local\
    \ p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n\
    \    local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n \
    \   local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n\n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local length=${#list[@]}\n    local result=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n\
    \    local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted_list=()\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local n=${#list[@]}\n    local m=$((n / 2))\n    for ((i=0; i<m; i++));\
    \ do\n        sorted_list+=(${list[$i]})\n        sorted_list+=(${list[$((n -\
    \ i - 1))]})\n    done\n    if ((n % 2)); then\n        sorted_list+=(${list[$m]})\n\
    \    fi\n    echo \"[$(IFS=,; echo \"${sorted_list[*]}\")]\"\n}\n\ncandidate()\
    \ {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8\
    \ 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=${#list[@]}\n    local -i mid=0\n    local\
    \ -i odd=0\n    local -i even=0\n    local -i tmp=0\n    local -i min=0\n    local\
    \ -i max=0\n    local -i min_index=0\n    local -i max_index=0\n    local -i min_index_tmp=0\n\
    \    local -i max_index_tmp=0\n    local -i min_index_tmp_2=0\n    local -i max_index_tmp_2=0\n\
    \    local -i min_index_tmp_3=0\n    local -i max_index_tmp_3=0\n    local -i\
    \ min_index_tmp_4=0\n    local -i max_index_tmp_4=0\n    local -i min_index_tmp_5=0\n\
    \    local -i max_index_tmp_5=0\n    local -i min_index_tmp_6=0\n    local -i\
    \ max_index_tmp_6=0\n    local -i min_index_tmp_7=0\n    local -i max_index_tmp_7=0\n\
    \    local -i min_index_tmp_8=0\n    local -i max_index_tmp_8=0\n    local -i\
    \ min_index_tmp_9=0\n    local -i max_index_tmp_9=0\n    local -i min_index_tmp_10=0\n\
    \    local -i max_index_tmp_10=0\n    local -i min_index_tmp_11=0\n    local -i\
    \ max_index_tmp_11=0\n    local -i min_index_tmp_12=0\n    local -i max_index_tmp_12=0\n\
    \    local -i min_index_tmp_13=0\n    local -i max_index_tmp_13=0\n    local -i\
    \ min_index_tmp_14=0\n    local -i max_index_tmp_14=0\n\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    while [ $i -lt ${#list[@]}\
    \ ]; do\n        local min=${list[0]}\n        local max=${list[0]}\n        local\
    \ min_index=0\n        local max_index=0\n        for j in ${!list[@]}; do\n \
    \           if [ ${list[$j]} -lt $min ]; then\n                min=${list[$j]}\n\
    \                min_index=$j\n            fi\n            if [ ${list[$j]} -gt\
    \ $max ]; then\n                max=${list[$j]}\n                max_index=$j\n\
    \            fi\n        done\n        result+=($min)\n        list=(${list[@]:0:$min_index}\
    \ ${list[@]:$((min_index+1))})\n        if [ $i -lt $(( ${#list[@]} - 1 )) ];\
    \ then\n            result+=($max)\n            list=(${list[@]:0:$max_index}\
    \ ${list[@]:$((max_index+1))})\n        fi\n        i=$((i+2))\n    done\n   \
    \ echo \"${result[@]}\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n   \
    \ [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6\
    \ 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ list=($1)\n  local sorted_list=()\n  local i=0\n  local j=0\n  local k=0\n \
    \ local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n  local zzz=0\n\
    \  local aaaa=0\n  local bbbb=0\n  local cccc=0\n  local dddd=0\n  local e\n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i min=0\n    local -i max=0\n\
    \    local -i i=0\n    local -i j=0\n    local -i k=0\n    local -i l=0\n    local\
    \ -i m=0\n    local -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n\
    \    local -i r=0\n    local -i s=0\n    local -i t=0\n    local -i u=0\n    local\
    \ -i v=0\n    local -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n\
    \    local -i aa=0\n    local -i ab=0\n    local -i ac=0\n    local -i ad=0\n\
    \    local -i ae=0\n    local -i af=0\n    local -i ag=0\n    local -i ah=0\n\
    \    local -i ai=0\n    local -i aj=0\n    local -i ak=0\n    local -i al=0\n\
    \    local -i am=0\n    local -i an=0\n    local -i ao=0\n    local -i ap=0\n\
    \    local -i aq=0\n    local -i ar=0\n    local -i as=0\n    local -i at=0\n\
    \    local -i au=0\n    local -i av=0\n    local -i aw=0\n    local -i ax=0\n\
    \    local -i ay=0\n    local -i az=0\n    local -i ba=0\n    local -i bb=0\n\
    \    local -i bc=0\n    local -i bd=0\n    local -i be=0\n    local -i bf=0\n\
    \    local -i bg=0\n    local -i bh=0\n    local -i bi=0\n    local -i bj=0\n\
    \    local -i bk=0\n    local -i bl=0\n    local -i bm=0\n    local -i bn=\n}\n\
    \ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\"\
    ) = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n \
    \   [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"\
    5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local sorted=()\n    local min=${list[0]}\n    local max=${list[0]}\n\
    \    local min_index=0\n    local max_index=0\n    local i=0\n    local j=0\n\
    \    local k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n \
    \   local p=0\n    local q=0\n    local r=0\n    local s=0\n    local t=0\n  \
    \  local u=0\n    local v=0\n    local w=0\n    local x=0\n    local y=0\n   \
    \ local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n\
    \    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n\
    \    local ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local\
    \ hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n\
    \    local mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local\
    \ qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\
    \    local vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local\
    \ zzz=0\n\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local length=${#list[@]}\n    local result=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n\
    \    local\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=${#list[@]}\n    local -i half=$((len / 2))\n\
    \    local -i odd=$((len % 2))\n    local -i start=0\n    local -i end=$((len\
    \ - 1))\n    local -i inc=1\n    local -i dec=-1\n    local -i direction=inc\n\
    \    for ((i=0; i<len; i++)); do\n        if [[ $direction -eq $inc ]]; then\n\
    \            result[$i]=${list[$start]}\n            start=$((start + 1))\n  \
    \      else\n            result[$i]=${list[$end]}\n            end=$((end - 1))\n\
    \        fi\n        if [[ $i -eq $half ]]; then\n            if [[ $odd -eq 1\
    \ ]]; then\n                result[$i]=${list[$start]}\n                start=$((start\
    \ + 1))\n            fi\n            direction=$dec\n        fi\n    done\n  \
    \  echo \"${result[@]}\"\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n   \
    \ [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3\
    \ 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6\
    \ 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local length=${#list[@]}\n    local result=()\n    local i=0\n\
    \    while [ $i -lt $length ]; do\n        local min=${list[0]}\n        local\
    \ min_index=0\n        local max=${list[0]}\n        local max_index=0\n     \
    \   local j=0\n        while [ $j -lt $length ]; do\n            if [ ${list[$j]}\
    \ -lt $min ]; then\n                min=${list[$j]}\n                min_index=$j\n\
    \            fi\n            if [ ${list[$j]} -gt $max ]; then\n             \
    \   max=${list[$j]}\n                max_index=$j\n            fi\n          \
    \  j=$((j+1))\n        done\n        if [ $((i%2)) -eq 0 ]; then\n           \
    \ result[$i]=$min\n            list[$min_index]=$max\n        else\n         \
    \   result[$i]=$max\n            list[$max_index]=$min\n        fi\n        i=$((i+1))\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    strange_sort_list \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=\"$1\"\n    local -a array\n    local -a result\n    local -i i=0\n   \
    \ local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local\
    \ -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
    \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n\
    \    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n\
    \    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \    local -i lll=0\n    local -i mmm=0\n    local -i nnn\n}\n\ncandidate() {\n\
    \    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\"\
    \ ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"\
    5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4\
    \ 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\"\
    ) = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"111111\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=$1\n    local result=()\n    local min=0\n    local max=0\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www=0\n    local xxx=0\n    local\
    \ yyy=0\n    local zzz=0\n    local aaaa=0\n    local bbbb=0\n    local cccc=0\n\
    \    local d\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate\
    \ \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5\
    \ 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[\
    \ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n\
    \    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate\
    \ \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\"\
    ) = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016715
- exit_code: 2
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n  local\
    \ -a list=($1)\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i len=${#list[@]}\n  local -i half=$((len / 2))\n  local -i\
    \ odd=$((len % 2))\n  local -i start=0\n  local -i end=$((len - 1))\n  local -i\
    \ middle=$((len / 2))\n  local -i middle_odd=$((middle % 2))\n  local -i middle_even=$((middle\
    \ + 1))\n  local -i middle_even_odd=$((middle_even % 2))\n  local -i middle_even_even=$((middle_even\
    \ + 1))\n  local -i middle_even_even_odd=$((middle_even_even % 2))\n  local -i\
    \ middle_even_even_even=$((middle_even_even + 1))\n  local -i middle_even_even_even_odd=$((middle_even_even_even\
    \ % 2))\n  local -i middle_even_even_even_even=$((middle_even_even_even + 1))\n\
    \  local -i middle_even_even_even_even_odd=$((middle_even_even_even_even % 2))\n\
    \  local -i middle_even_even_even_even_even=$((middle_even_even_even_even + 1))\n\
    \  local -i middle_even_even_even_even_even_odd=$((middle_even_even_even_even_even\
    \ % 2))\n  local -i middle_even_even_even_even_even_even=$((middle_even_even_even_even_even\
    \ + 1))\n  local -i middle_even_even_even_even_even_even_odd=$((middle_even_even_even_even_even_even\
    \ % 2))\n  local -i middle_even_even_even_even_even_even_even=$((middle_even_even_even_even_even_even\
    \ + 1))\n  local -i middle_even_even_even_even_even_even_even_odd=$((middle_even_even_even_even_even_even\n\
    }\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5 6 7\
    \ 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4 3\"\
    \ ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9tgaavyp.sh: line 40: unexpected EOF while looking for matching
    `)''

    /tmp/tmp9tgaavyp.sh: line 61: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660016715
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ list=($1)\n    local result=()\n    local i=0\n    local j=0\n    local k=0\n\
    \    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n \
    \   local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n  \
    \  local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n   \
    \ local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=0\n    local www=0\n    local xxx=0\n    local yyy=0\n    local zzz=0\n\
    \    local aaaa=0\n    local bbbb=0\n    local cccc=0\n    local dddd=0\n    local\
    \ eeee\n}\n\ncandidate() {\n    strange_sort_list \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2 3\" ]]\n    [[ $(candidate \"5\
    \ 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate \"1 2 3 4 5\") = \"1 5 2 4\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"1 9 5 8 6 7\" ]]\n    [[ $(candidate\
    \ \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\" ]]\n    [[ $(candidate \"0 2 2 2\
    \ 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n    [[ $(candidate \"111111\") = \"\
    111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714
- exit_code: 1
  program: "#!/bin/bash\n# Given list of integers, return list in strange order.\n\
    # Strange sorting, is when you start with the minimum value,\n# then maximum of\
    \ the remaining integers, then minimum and so on.\n# Examples:\n# >>> $(strange_sort_list\
    \ \"1 2 3 4\")\n# ['\"1\"', '\"4\"', '\"2\"', '\"3\"']\n# >>> $(strange_sort_list\
    \ \"5 5 5 5\")\n# ['\"5\"', '\"5\"', '\"5\"', '\"5\"']\n# >>> $(strange_sort_list\
    \ \"\")\n# []\n#\n# $1 is a space-separated list\nstrange_sort_list() {\n    local\
    \ -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n    local -i\
    \ jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i\
    \ nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i\
    \ rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i\
    \ vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i\
    \ zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n    local\
    \ -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n    local\
    \ -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local\
    \ -i lll=0\n    local -i mmm=0\n    local -i nnn=0\n}\n\ncandidate() {\n    strange_sort_list\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 2 3 4\") = \"1 4 2\
    \ 3\" ]]\n    [[ $(candidate \"5 6 7 8 9\") = \"5 9 6 8 7\" ]]\n    [[ $(candidate\
    \ \"1 2 3 4 5\") = \"1 5 2 4 3\" ]]\n    [[ $(candidate \"5 6 7 8 9 1\") = \"\
    1 9 5 8 6 7\" ]]\n    [[ $(candidate \"5 5 5 5\") = \"5 5 5 5\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"1 2 3 4 5 6 7 8\") = \"1 8 2 7 3 6 4 5\"\
    \ ]]\n    [[ $(candidate \"0 2 2 2 5 5 -5 -5\") = \"-5 5 -5 5 0 2 2 2\" ]]\n \
    \   [[ $(candidate \"111111\") = \"111111\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660016714

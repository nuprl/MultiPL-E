language: sh
name: HumanEval_63_fibfib
results:
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n\
    \  elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1\
    \ - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -le 2 ]; then\n        echo $(( $1 - 1 ))\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018095
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 )) ) + $(fibfib $(( $1 - 2 )) ) + $(fibfib $(( $1 - 3 )) ) ))\n \
    \   fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n   \
    \ [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n  \
    \  [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=22 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=18 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n\
    \  elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1\
    \ - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n\
    \  elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1\
    \ - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ \"$1\" == \"0\" ]]; then\n        echo \"0\"\n    elif [[ \"$1\" == \"1\"\
    \ ]]; then\n        echo \"0\"\n    elif [[ \"$1\" == \"2\" ]]; then\n       \
    \ echo \"1\"\n    else\n        echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $((\
    \ $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=29 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n\
    \  elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1\
    \ - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -eq 0 ]; then\n        echo 0\n    elif [ \"$1\" -eq 1 ]; then\n  \
    \      echo 0\n    elif [ \"$1\" -eq 2 ]; then\n        echo 1\n    else\n   \
    \     echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n\
    \    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n  \
    \  [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n \
    \   [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq \"1\"\
    \ ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq \"2\" ]; then\n        echo\
    \ \"1\"\n    else\n        echo \"$(($(fibfib \"$(($1-1))\") + $(fibfib \"$(($1-2))\"\
    ) + $(fibfib \"$(($1-3))\")))\";\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=35 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -eq 0 ]; then\n        echo 0\n    elif [ \"$1\" -eq 1 ]; then\n  \
    \      echo 0\n    elif [ \"$1\" -eq 2 ]; then\n        echo 1\n    else\n   \
    \     echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $((\
    \ $1 - 3 ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=36 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=33 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq \"1\"\
    \ ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq \"2\" ]; then\n        echo\
    \ \"1\"\n    else\n        echo \"$(($(fibfib \"$(($1-1))\") + $(fibfib \"$(($1-2))\"\
    ) + $(fibfib \"$(($1-3))\")))\";\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=35 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ n=$1\n  local a=0\n  local b=0\n  local c=1\n  local d=0\n  for ((i=0; i<n;\
    \ i++)); do\n    d=$((a+b+c))\n    a=$b\n    b=$c\n    c=$d\n  done\n  echo $d\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018095
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -le 1 ]; then\n        echo 0\n    elif [ $1 -eq 2 ]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2\
    \ ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=40 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=34 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    local a=0\n    local b=0\n    local c=1\n    local d=0\n    local\
    \ i=2\n    while [ $i -le $n ]; do\n        d=$((a+b+c))\n        a=$b\n     \
    \   b=$c\n        c=$d\n        i=$((i+1))\n    done\n    echo $d\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018095
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n\
    \  elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1\
    \ - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=29 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq \"1\"\
    \ ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq \"2\" ]; then\n        echo\
    \ \"1\"\n    else\n        echo \"$(($(fibfib \"$(($1-1))\") + $(fibfib \"$(($1-2))\"\
    ) + $(fibfib \"$(($1-3))\")))\";\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=35 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    local a=0\n    local b=0\n    local c=1\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        local d=$((a + b + c))\n        a=$b\n        b=$c\n\
    \        c=$d\n        i=$((i + 1))\n    done\n    echo $c\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018095
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq \"1\"\
    \ ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq \"2\" ]; then\n        echo\
    \ \"1\"\n    else\n        echo \"$(($(fibfib \"$(($1-1))\") + $(fibfib \"$(($1-2))\"\
    ) + $(fibfib \"$(($1-3))\")))\";\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=35 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    local a=0\n    local b=0\n    local c=1\n    local i=2\n    while\
    \ [ $i -le $n ]; do\n        local d=$((a + b + c))\n        a=$b\n        b=$c\n\
    \        c=$d\n        i=$((i + 1))\n    done\n    echo $c\n}\n\ncandidate() {\n\
    \    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"\
    1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018095
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n\
    \  elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1\
    \ - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n\
    \  elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1\
    \ - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=45 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=43 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq \"1\"\
    \ ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq \"2\" ]; then\n        echo\
    \ \"1\"\n    else\n        echo \"$(($(fibfib \"$(($1-1))\") + $(fibfib \"$(($1-2))\"\
    ) + $(fibfib \"$(($1-3))\")))\";\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=35 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -eq 0 ]; then\n        echo 0\n    elif [ \"$1\" -eq 1 ]; then\n  \
    \      echo 0\n    elif [ \"$1\" -eq 2 ]; then\n        echo 1\n    else\n   \
    \     echo $(($(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n\
    \    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n  \
    \  [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n \
    \   [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -eq 0 ]; then\n        echo 0\n    elif [ \"$1\" -eq 1 ]; then\n  \
    \      echo 0\n    elif [ \"$1\" -eq 2 ]; then\n        echo 1\n    else\n   \
    \     echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $((\
    \ $1 - 3 ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=36 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=33 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=29 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -eq 0 ]; then\n        echo 0\n    elif [ \"$1\" -eq 1 ]; then\n  \
    \      echo 0\n    elif [ \"$1\" -eq 2 ]; then\n        echo 1\n    else\n   \
    \     echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $((\
    \ $1 - 3 ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\")\
    \ = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\")\
    \ = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\"\
    ) = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=36 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=33 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3))) ))\n   \
    \ fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[\
    \ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[\
    \ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n \
    \   [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ (( $1 == 0 )); then\n        echo 0\n    elif (( $1 == 1 )); then\n        echo\
    \ 0\n    elif (( $1 == 2 )); then\n        echo 1\n    else\n        echo $((\
    \ $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 )))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=60 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=54 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=48 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=44 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 2
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  # Your\
    \ code here\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp4xf1f7dv.sh: line 18: syntax error near unexpected token `}''

    /tmp/tmp4xf1f7dv.sh: line 18: `}''

    '
  stdout: ''
  timestamp: 1660018095
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 == 0 ]]; then\n    echo 0\n  elif [[ $1 == 1 ]]; then\n    echo 0\n  elif\
    \ [[ $1 == 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    #\
    \ TODO: Implement this function\n    echo \"0\"\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018095
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    local a=0\n    local b=0\n    local c=1\n    local d=0\n    local\
    \ i=2\n    while [ $i -le $n ]; do\n        d=$((a+b+c))\n        a=$b\n     \
    \   b=$c\n        c=$d\n        i=$((i+1))\n    done\n    echo $d\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018095
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n\
    \        echo 0\n    elif [ $n -eq 2 ]; then\n        echo 1\n    else\n     \
    \   echo $(( $(fibfib $((n-1))) + $(fibfib $((n-2))) + $(fibfib $((n-3))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n  \
    \  [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n \
    \   [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=68 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=64 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -lt 2 ]; then\n        echo 0\n    elif [ $1 -eq 2 ]; then\n        echo\
    \ 1\n    else\n        echo $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2\
    \ ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n\
    \  elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1\
    \ - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=29 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ \"$1\" -eq 0 ]; then\n    echo 0\n  elif [ \"$1\" -eq 1 ]; then\n    echo\
    \ 0\n  elif [ \"$1\" -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib\
    \ \"$(( $1 - 1 ))\") + $(fibfib \"$(( $1 - 2 ))\") + $(fibfib \"$(( $1 - 3 ))\"\
    ) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=69 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=62 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -eq \"0\" ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq \"1\"\
    \ ]; then\n        echo \"0\"\n    elif [ \"$1\" -eq \"2\" ]; then\n        echo\
    \ \"1\"\n    else\n        echo \"$(($(fibfib \"$(($1-1))\") + $(fibfib \"$(($1-2))\"\
    ) + $(fibfib \"$(($1-3))\")))\";\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=35 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=19 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ \"$1\" -eq 0 ]; then\n        echo 0\n    elif [ \"$1\" -eq 1 ]; then\n  \
    \      echo 0\n    elif [ \"$1\" -eq 2 ]; then\n        echo 1\n    else\n   \
    \     echo $(( $(fibfib \"$(( $1 - 1 ))\") + $(fibfib \"$(( $1 - 2 ))\") + $(fibfib\
    \ \"$(( $1 - 3 ))\") ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=66 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=56 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n\
    \        echo 0\n    elif [ $n -eq 2 ]; then\n        echo 1\n    else\n     \
    \   echo $(( $(fibfib $((n-1))) + $(fibfib $((n-2))) + $(fibfib $((n-3))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n  \
    \  [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n \
    \   [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=68 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=64 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    local a=0\n    local b=0\n    local c=1\n    local d=0\n    for ((i=2;\
    \ i<=n; i++)); do\n        d=$((a+b+c))\n        a=$b\n        b=$c\n        c=$d\n\
    \    done\n    echo $d\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018095
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ n=$1\n  local a=0\n  local b=0\n  local c=1\n  local d=0\n  local i=2\n  while\
    \ [ $i -le $n ]; do\n    d=$((a+b+c))\n    a=$b\n    b=$c\n    c=$d\n    i=$((i+1))\n\
    \  done\n  echo $d\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018095
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n\
    \  elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n    echo $(($(fibfib $(($1-1)))\
    \ + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n  fi\n}\n\ncandidate() {\n  \
    \  fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ n=$1\n  if [ $n -eq 0 ]; then\n    echo 0\n  elif [ $n -eq 1 ]; then\n    echo\
    \ 0\n  elif [ $n -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $((n-1)))\
    \ + $(fibfib $((n-2))) + $(fibfib $((n-3))) ))\n  fi\n}\n\ncandidate() {\n   \
    \ fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\"\
    \ ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\"\
    \ ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\"\
    \ ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"\
    927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018104
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  local\
    \ n=$1\n  local a=0\n  local b=0\n  local c=1\n  local d=0\n  for ((i=2; i<=n;\
    \ i++)); do\n    d=$((a+b+c))\n    a=$b\n    b=$c\n    c=$d\n  done\n  echo $d\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3))) ))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=45 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=43 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    if [ $n -eq 0 ]; then\n        echo 0\n    elif [ $n -eq 1 ]; then\n\
    \        echo 0\n    elif [ $n -eq 2 ]; then\n        echo 1\n    else\n     \
    \   echo $(( $(fibfib $((n-1))) + $(fibfib $((n-2))) + $(fibfib $((n-3))) ))\n\
    \    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n  \
    \  [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n \
    \   [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n\
    \    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=68 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=64 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(($(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3)))))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=20 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=14 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(($1-1))) + $(fibfib $(($1-2))) + $(fibfib $(($1-3))) ))\n    fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=48 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=44 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    local a=0\n    local b=0\n    local c=1\n    local d=0\n    for ((i=2;\
    \ i<=n; i++)); do\n        d=$((a+b+c))\n        a=$b\n        b=$c\n        c=$d\n\
    \    done\n    echo $d\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018095
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 == 0 ]]; then\n        echo 0\n    elif [[ $1 == 1 ]]; then\n        echo\
    \ 0\n    elif [[ $1 == 2 ]]; then\n        echo 1\n    else\n        echo $((\
    \ $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 )))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018104
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    local a=0\n    local b=0\n    local c=1\n    local d=0\n    for ((\
    \ i=2; i<=n; i++ )); do\n        d=$(( a + b + c ))\n        a=$b\n        b=$c\n\
    \        c=$d\n    done\n    echo $d\n}\n\ncandidate() {\n    fibfib \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate\
    \ \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate\
    \ \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate\
    \ \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    local\
    \ n=$1\n    local a=0\n    local b=0\n    local c=1\n    local d=0\n    while\
    \ [ $n -gt 0 ]; do\n        d=$((a+b+c))\n        a=$b\n        b=$c\n       \
    \ c=$d\n        n=$((n-1))\n    done\n    echo $d\n}\n\ncandidate() {\n    fibfib\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n  \
    \  [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n  \
    \  [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n\
    \    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 == 0 ]]; then\n        echo 0\n    elif [[ $1 == 1 ]]; then\n        echo\
    \ 0\n    elif [[ $1 == 2 ]]; then\n        echo 1\n    else\n        echo $((\
    \ $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 )))\
    \ ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018104
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n\
    \  elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1\
    \ - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(($(fibfib $(($1-1))) + $(fibfib\
    \ $(($1-2))) + $(fibfib $(($1-3)))))\n  fi\n}\n\ncandidate() {\n    fibfib \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[\
    \ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") = \"4\" ]]\n    [[\
    \ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\") = \"81\" ]]\n   \
    \ [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n\
    }\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=31 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=29 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: 0
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [[ $1 -eq 0 ]]; then\n    echo 0\n  elif [[ $1 -eq 1 ]]; then\n    echo 0\n\
    \  elif [[ $1 -eq 2 ]]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1\
    \ - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\n\
    candidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [ $1 -eq 0 ]; then\n        echo 0\n    elif [ $1 -eq 1 ]; then\n        echo\
    \ 0\n    elif [ $1 -eq 2 ]; then\n        echo 1\n    else\n        echo $(( $(fibfib\
    \ $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n    fi\n\
    }\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate\
    \ \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate\
    \ \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate\
    \ \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=12 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=9 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n  if\
    \ [ $1 -eq 0 ]; then\n    echo 0\n  elif [ $1 -eq 1 ]; then\n    echo 0\n  elif\
    \ [ $1 -eq 2 ]; then\n    echo 1\n  else\n    echo $(( $(fibfib $(( $1 - 1 )))\
    \ + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3 ))) ))\n  fi\n}\n\ncandidate()\
    \ {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"2\") =\
    \ \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n    [[ $(candidate \"5\") =\
    \ \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n    [[ $(candidate \"10\")\
    \ = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\" ]]\n    [[ $(candidate \"\
    14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=24 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=21 encoding='utf-8'>
  timestamp: 1660018100
- exit_code: -1
  program: "#!/bin/bash\n# The FibFib number sequence is a sequence similar to the\
    \ Fibbonacci sequnece that's defined as follows:\n# fibfib(0) == 0\n# fibfib(1)\
    \ == 0\n# fibfib(2) == 1\n# fibfib(n) == fibfib(n-1) + fibfib(n-2) + fibfib(n-3).\n\
    # Please write a function to efficiently compute the n-th element of the fibfib\
    \ number sequence.\n# >>> $(fibfib \"1\")\n# \"0\"\n# >>> $(fibfib \"5\")\n# \"\
    4\"\n# >>> $(fibfib \"8\")\n# \"24\"\n#\n# $1 is an integer\nfibfib() {\n    if\
    \ [[ $1 -eq 0 ]]; then\n        echo 0\n    elif [[ $1 -eq 1 ]]; then\n      \
    \  echo 0\n    elif [[ $1 -eq 2 ]]; then\n        echo 1\n    else\n        echo\
    \ $(( $(fibfib $(( $1 - 1 ))) + $(fibfib $(( $1 - 2 ))) + $(fibfib $(( $1 - 3\
    \ ))) ))\n    fi\n}\n\ncandidate() {\n    fibfib \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"2\") = \"1\" ]]\n    [[ $(candidate \"1\") = \"0\" ]]\n\
    \    [[ $(candidate \"5\") = \"4\" ]]\n    [[ $(candidate \"8\") = \"24\" ]]\n\
    \    [[ $(candidate \"10\") = \"81\" ]]\n    [[ $(candidate \"12\") = \"274\"\
    \ ]]\n    [[ $(candidate \"14\") = \"927\" ]]\n}\n\nrun_test"
  status: Timeout
  stderr: <_io.TextIOWrapper name=13 encoding='utf-8'>
  stdout: <_io.TextIOWrapper name=11 encoding='utf-8'>
  timestamp: 1660018100

language: sh
name: HumanEval_116_sort_array
results:
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -a arr=($1)\n    local -a arr2\n    local -a\
    \ arr3\n    local -a arr4\n    local -a arr5\n    local -a arr6\n    local -a\
    \ arr7\n    local -a arr8\n    local -a arr9\n    local -a arr10\n    local -a\
    \ arr11\n    local -a arr12\n    local -a arr13\n    local -a arr14\n    local\
    \ -a arr15\n    local -a arr16\n    local -a arr17\n    local -a arr18\n    local\
    \ -a arr19\n    local -a arr20\n    local -a arr21\n    local -a arr22\n    local\
    \ -a arr23\n    local -a arr24\n    local -a arr25\n    local -a arr26\n    local\
    \ -a arr27\n    local -a arr28\n    local -a arr29\n    local -a arr30\n    local\
    \ -a arr31\n    local -a arr32\n    local -a arr33\n    local -a arr34\n    local\
    \ -a arr35\n    local -a arr36\n    local -a arr37\n    local -a arr38\n    local\
    \ -a arr39\n    local -a arr40\n    local -a arr41\n    local -a arr42\n    local\
    \ -a arr43\n    local -a arr44\n    local -a arr45\n    local -a arr46\n    local\
    \ -a arr47\n    local -a arr48\n    local -a arr49\n    local -a arr50\n    local\
    \ -a arr51\n    local -a arr52\n    local -a arr53\n    local -a arr54\n    local\
    \ -a arr55\n    local -a arr56\n    local -a arr57\n    local -a arr58\n    local\
    \ -a arr59\n    local -a arr60\n    local -a arr61\n    local -a arr62\n    local\
    \ -a arr63\n    local -a arr64\n    local -a arr65\n    local -a arr66\n    local\
    \ -a arr67\n    local -a arr68\n    local -a arr69\n    local -a arr70\n    local\
    \ -a arr71\n    local -a arr72\n    local -a\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr\n  local -a arr_sorted\n  local -a arr_sorted_dec\n\
    \  local -a arr_sorted_bin\n  local -a arr_sorted_bin_dec\n  local -a arr_sorted_bin_dec_final\n\
    \  local -a arr_sorted_bin_dec_final_str\n  local -a arr_sorted_bin_dec_final_str_final\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final\n  local -a arr_sorted_bin_dec_final_str_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final\n  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_final=()\n  local\
    \ -a arr_sorted_final_dec=()\n  local -a arr_sorted_final_bin=()\n  local -a arr_sorted_final_bin_dec=()\n\
    \  local -a arr_sorted_final_bin_dec_final=()\n  local -a arr_sorted_final_bin_dec_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final=()\n  local -a arr_sorted_final_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_final_bin_dec_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final=()\n \
    \ local -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a ones=()\n  local -a\
    \ zeros=()\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i n=${#array[@]}\n  local -i m=0\n  local -i p=0\n  local -i q=0\n \
    \ local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n\
    \  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n\
    \  local -i b=0\n  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n\
    \  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i\
    \ kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n \
    \ local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i\
    \ tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n \
    \ local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local\
    \ -i lll=0\n  local -i mmm=0\n  local -i nnn=0\n \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2\n  local -a arr3\n\
    \  local -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a\
    \ arr8\n  local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n\
    \  local -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local\
    \ -a arr17\n  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n\
    \  local -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local\
    \ -a arr26\n  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n\
    \  local -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local\
    \ -a arr35\n  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n\
    \  local -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local\
    \ -a arr44\n  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n\
    \  local -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local\
    \ -a arr53\n  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n\
    \  local -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local\
    \ -a arr62\n  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n\
    \  local -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local\
    \ -a arr71\n  local -a arr72\n  local -a\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted\n  local -a\
    \ arr_sorted_dec\n  local -a arr_sorted_bin\n  local -a arr_sorted_bin_dec\n \
    \ local -a arr_sorted_bin_dec_sorted\n  local -a arr_sorted_bin_dec_sorted_dec\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted\n  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec\n  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec\n  local -a\
    \ arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted\n  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin\n\
    \  local -a arr_sorted_bin_dec_sorted_dec\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted\n  local -a\
    \ arr_ones\n  local -a arr_zeros\n  local -i i\n  local -i j\n  local -i k\n \
    \ local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local\
    \ -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n\
    \  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i aa\n  local\
    \ -i bb\n  local -i cc\n  local -i dd\n  local -i ee\n  local -i ff\n  local -i\
    \ gg\n  local -i hh\n  local -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n\
    \  local -i mm\n  local -i nn\n  local -i oo\n  local -i pp\n  local -i qq\n \
    \ local -i rr\n  local -i ss\n  local -i tt\n  local -i uu\n  local -i vv\n  local\
    \ -i ww\n  local -i xx\n  local -i yy\n  local -i zz\n  local -i aaa\n  local\
    \ -i bbb\n  local -i ccc\n  local -i ddd\n  local -i eee\n  local -i fff\n  local\
    \ -i ggg\n  local -i hhh\n  local -i iii\n  local -i jjj\n  local -i kkk\n  local\
    \ -i lll\n  local -i mmm\n  local -i nnn\n  local -i ooo\n  local -i ppp\n  local\
    \ -i qqq\n  local -i rrr\n  local -i sss\n  local -i ttt\n  local -i uuu\n  local\
    \ -i vvv\n  local -i www\n  local -i xxx\n  local -i yyy\n  local -i zzz\n  local\
    \ -i aaaa\n  local -i bbbb\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a result=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a temp=()\n  local -a temp2=()\n  local\
    \ -a temp3=()\n  local -a temp4=()\n  local -a temp5=()\n  local -a temp6=()\n\
    \  local -a temp7=()\n  local -a temp8=()\n  local -a temp9=()\n  local -a temp10=()\n\
    \  local -a temp11=()\n  local -a temp12=()\n  local -a temp13=()\n  local -a\
    \ temp14=()\n  local -a temp15=()\n  local -a temp16=()\n  local -a temp17=()\n\
    \  local -a temp18=()\n  local -a temp19=()\n  local -a temp20=()\n  local -a\
    \ temp21=()\n  local -a temp22=()\n  local -a temp23=()\n  local -a temp24=()\n\
    \  local -a temp25=()\n  local -a temp26=()\n  local -a temp27=()\n  local -a\
    \ temp28=()\n  local -a temp29=()\n  local -a temp30=()\n  local -a temp31=()\n\
    \  local -a temp32=()\n  local -a temp33=()\n  local -a temp34=()\n  local -a\
    \ temp35=()\n  local -a temp36=()\n  local -a temp37=()\n  local -a temp38=()\n\
    \  local -a temp39=()\n  local -a temp40=()\n  local -a temp41=()\n  local -a\
    \ temp42=()\n  local -a temp43=()\n  local -a temp44=()\n  local -a temp45=()\n\
    \  local -a temp46=()\n  local -a temp47=()\n  local -a temp48=()\n  local -a\
    \ temp49=()\n  local -a temp50=()\n  local -a temp51=()\n  local -a temp52=()\n\
    \  local -a temp53=()\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_decimal=()\n  local -a arr_sorted_binary=()\n  local -a arr_sorted_binary_decimal=()\n\
    \  local -a arr_sorted_binary_decimal_final=()\n  local -a arr_sorted_binary_decimal_final_final=()\n\
    \  local -a arr_sorted_binary_decimal_final_final_final=()\n  local -a arr_sorted_binary_decimal_final_final_final_final=()\n\
    \  local -a arr_sorted_binary_decimal_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_binary_decimal_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_binary_decimal_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_binary_decimal_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_binary_decimal_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_binary_decimal_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_binary_decimal_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_binary_decimal_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_binary_decimal_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_binary_decimal_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_binary_decimal\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted\n  local -a\
    \ arr_sorted_dec\n  local -a arr_sorted_bin\n  local -a arr_sorted_bin_count\n\
    \  local -a arr_sorted_bin_count_dec\n  local -a arr_sorted_bin_count_dec_sorted\n\
    \  local -a arr_sorted_bin_count_dec_sorted_dec\n  local -a arr_sorted_bin_count_dec_sorted_dec_sorted\n\
    \  local -a arr_sorted_bin_count_dec_sorted_dec_sorted_bin\n  local -a arr_sorted_bin_count_dec_sorted_dec_sorted_bin_count\n\
    \  local -a arr_sorted_bin_count_dec_sorted_dec_sorted_bin_count_dec\n  local\
    \ -a arr_sorted_bin_count_dec_sorted_dec_sorted_bin_count_dec_sorted\n  local\
    \ -a arr_sorted_bin_count_dec_sorted_dec_sorted_bin_count_dec_sorted_dec\n  local\
    \ -a arr_sorted_bin_count_dec_sorted_dec_sorted_bin_count_dec_sorted_dec_sorted\n\
    \  local -a arr_sorted_bin_count_dec_sorted_dec_sorted_bin_count_dec_sorted_dec_sorted_bin\n\
    \  local -a arr_sorted_bin_count_dec_sorted_dec_sorted_bin_count_dec_sorted_dec_sorted_bin_count\n\
    \  local -a arr_sorted_bin_count_dec_sorted_dec_sorted_bin_count_dec_sorted_dec_sorted_bin_count_dec\n\
    \  local -a arr_sorted_bin_count_dec_sorted_dec_sorted_bin_count_dec_sorted_dec_sorted_bin_count_dec_sorted\n\
    \  local -a arr_sorted_bin_count_dec_sorted_dec_sorted_bin_count_dec\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a sorted\n  local -a ones\n\
    \  local -a zeros\n  local -a result\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local aa\n  local bb\n  local cc\n  local dd\n  local ee\n  local ff\n\
    \  local gg\n  local hh\n  local ii\n  local jj\n  local kk\n  local ll\n  local\
    \ mm\n  local nn\n  local oo\n  local pp\n  local qq\n  local rr\n  local ss\n\
    \  local tt\n  local uu\n  local vv\n  local ww\n  local xx\n  local yy\n  local\
    \ zz\n  local aaa\n  local bbb\n  local ccc\n  local ddd\n  local eee\n  local\
    \ fff\n  local ggg\n  local hhh\n  local iii\n  local jjj\n  local kkk\n  local\
    \ lll\n  local mmm\n  local nnn\n  local ooo\n  local ppp\n  local qqq\n  local\
    \ rrr\n  local sss\n  local ttt\n  local uuu\n  local vvv\n  local www\n  local\
    \ xxx\n  local yyy\n  local zzz\n  local aaaa\n  local bbbb\n  local cccc\n  local\
    \ dddd\n  local eeee\n  local ffff\n  local gggg\n  local hhhh\n  local iiii\n\
    \  local jjjj\n  local kkkk\n  local llll\n  local mmmm\n  local nnnn\n  local\
    \ oooo\n  local pppp\n  local qqqq\n  local rrrr\n  local ssss\n  local tttt\n\
    \  local uuuu\n  local vvvv\n  local wwww\n  local xxxx\n  local yyyy\n  local\
    \ zzzz\n  local aaaaa\n  local b\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a sorted=()\n  local -a ones=()\n\
    \  local -a zeros=()\n  local -a neg=()\n  local -a pos=()\n  local -a neg_ones=()\n\
    \  local -a neg_zeros=()\n  local -a pos_ones=()\n  local -a pos_zeros=()\n  local\
    \ -a neg_sorted=()\n  local -a pos_sorted=()\n  local -a result=()\n  local -i\
    \ i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local\
    \ -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local\
    \ -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n\
    \  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i\
    \ qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n \
    \ local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i\
    \ zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  for i in $1; do\n    arr+=(\"$i\"\
    )\n  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=i+1; j<${#arr[@]};\
    \ j++)); do\n      if [[ $(echo \"obase=2; ${arr[i]}\" | bc) -lt $(echo \"obase=2;\
    \ ${arr[j]}\" | bc) ]]; then\n        local tmp=${arr[i]}\n        arr[i]=${arr[j]}\n\
    \        arr[j]=$tmp\n      fi\n    done\n  done\n  echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2\n  local -a arr3\n\
    \  local -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a\
    \ arr8\n  local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n\
    \  local -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local\
    \ -a arr17\n  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n\
    \  local -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local\
    \ -a arr26\n  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n\
    \  local -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local\
    \ -a arr35\n  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n\
    \  local -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local\
    \ -a arr44\n  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n\
    \  local -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local\
    \ -a arr53\n  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n\
    \  local -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local\
    \ -a arr62\n  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n\
    \  local -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local\
    \ -a arr71\n  local -a arr72\n  local -a\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=()\n  local -a sorted=()\n  local -a\
    \ result=()\n  local i=0\n  local j=0\n  local k=0\n  local n=0\n  local temp=0\n\
    \  local -i ones=0\n  local -i zeros=0\n  local -i max=0\n  local -i min=0\n \
    \ local -i len=0\n  local -i num=0\n  local -i max_ones=0\n  local -i max_zeros=0\n\
    \  local -i max_num=0\n  local -i min_ones=0\n  local -i min_zeros=0\n  local\
    \ -i min_num=0\n  local -i max_len=0\n  local -i min_len=0\n  local -i max_index=0\n\
    \  local -i min_index=0\n  local -i max_index_ones=0\n  local -i min_index_ones=0\n\
    \  local -i max_index_zeros=0\n  local -i min_index_zeros=0\n  local -i max_index_num=0\n\
    \  local -i min_index_num=0\n  local -i max_index_len=0\n  local -i min_index_len=0\n\
    \  local -i max_index_index=0\n  local -i min_index_index=0\n  local -i max_index_index_ones=0\n\
    \  local -i min_index_index_ones=0\n  local -i max_index_index_zeros=0\n  local\
    \ -i min_index_index_zeros=0\n  local -i max_index_index_num=0\n  local -i min_index_index_num=0\n\
    \  local -i max_index_index_len=0\n  local -i min_index_index_len=0\n  local -i\
    \ max_index_index_index=0\n  local -i min_index_index_index=0\n  local -i max_index_index_index_ones=0\n\
    \  local -i min_index_index_index_ones=0\n  local -i max_index_index_\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  for i in $1; do\n    arr+=($(printf\
    \ '%d %s\\n' \"$(echo \"obase=2;$i\" | bc)\" \"$i\"))\n  done\n  IFS=$'\\n' arr=($(sort\
    \ -n <<<\"${arr[*]}\"))\n  IFS=$' ' arr=($(cut -d' ' -f2 <<<\"${arr[*]}\"))\n\
    \  echo \"[$(IFS=, ; echo \"${arr[*]}\")]\"\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a sorted_array=()\n  local\
    \ -a ones_array=()\n  local -a zeros_array=()\n  local -a sorted_ones_array=()\n\
    \  local -a sorted_zeros_array=()\n  local -a sorted_array=()\n  local -a final_array=()\n\
    \  local -a final_array_sorted=()\n  local -a final_array_sorted_ones=()\n  local\
    \ -a final_array_sorted_zeros=()\n  local -a final_array_sorted_zeros_ones=()\n\
    \  local -a final_array_sorted_zeros_ones_decimal=()\n  local -a final_array_sorted_zeros_ones_decimal_final=()\n\
    \  local -a final_array_sorted_zeros_ones_decimal_final_final=()\n  local -a final_array_sorted_zeros_ones_decimal_final_final_final=()\n\
    \  local -a final_array_sorted_zeros_ones_decimal_final_final_final_final=()\n\
    \  local -a final_array_sorted_zeros_ones_decimal_final_final_final_final_final=()\n\
    \  local -a final_array_sorted_zeros_ones_decimal_final_final_final_final_final_final=()\n\
    \  local -a final_array_sorted_zeros_ones_decimal_final_final_final_final_final_final_final=()\n\
    \  local -a final_array_sorted_zeros_ones_decimal_final_final_final_final_final_final_final_final=()\n\
    \  local -a final_array_sorted_zeros_ones_decimal_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a final_array_sorted_zeros_ones_decimal_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a final_array_sorted_zeros_ones_decimal_final_final\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a result=()\n  local -i\
    \ i=0\n  local -i j=0\n  local -i k=0\n  local -i n=${#array[@]}\n  local -i ones=0\n\
    \  local -i max_ones=0\n  local -i max_ones_index=0\n  local -i max_ones_value=0\n\
    \  local -i max_ones_decimal=0\n  local -i max_ones_decimal_index=0\n  local -i\
    \ max_ones_decimal_value=0\n  local -i max_ones_decimal_decimal=0\n  local -i\
    \ max_ones_decimal_decimal_index=0\n  local -i max_ones_decimal_decimal_value=0\n\
    \  local -i max_ones_decimal_decimal_decimal=0\n  local -i max_ones_decimal_decimal_decimal_index=0\n\
    \  local -i max_ones_decimal_decimal_decimal_value=0\n  local -i max_ones_decimal_decimal_decimal_decimal=0\n\
    \  local -i max_ones_decimal_decimal_decimal_decimal_index=0\n  local -i max_ones_decimal_decimal_decimal_decimal_value=0\n\
    \  local -i max_ones_decimal_decimal_decimal_decimal_decimal=0\n  local -i max_ones_decimal_decimal_decimal_decimal_decimal_index=0\n\
    \  local -i max_ones_decimal_decimal_decimal_decimal_decimal_value=0\n  local\
    \ -i max_ones_decimal_decimal_decimal_decimal_decimal_decimal=0\n  local -i max_ones_decimal_decimal_decimal_decimal_decimal_decimal_index=0\n\
    \  local -i max_ones_decimal_decimal_decimal_decimal_decimal_decimal_value=0\n\
    \  local -i max_ones_decimal_decimal_decimal_decimal_dec\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a res=()\n  local -a bin=()\n\
    \  local -a ones=()\n  local -a dec=()\n  local -a tmp=()\n  local -a tmp2=()\n\
    \  local -a tmp3=()\n  local -a tmp4=()\n  local -a tmp5=()\n  local -a tmp6=()\n\
    \  local -a tmp7=()\n  local -a tmp8=()\n  local -a tmp9=()\n  local -a tmp10=()\n\
    \  local -a tmp11=()\n  local -a tmp12=()\n  local -a tmp13=()\n  local -a tmp14=()\n\
    \  local -a tmp15=()\n  local -a tmp16=()\n  local -a tmp17=()\n  local -a tmp18=()\n\
    \  local -a tmp19=()\n  local -a tmp20=()\n  local -a tmp21=()\n  local -a tmp22=()\n\
    \  local -a tmp23=()\n  local -a tmp24=()\n  local -a tmp25=()\n  local -a tmp26=()\n\
    \  local -a tmp27=()\n  local -a tmp28=()\n  local -a tmp29=()\n  local -a tmp30=()\n\
    \  local -a tmp31=()\n  local -a tmp32=()\n  local -a tmp33=()\n  local -a tmp34=()\n\
    \  local -a tmp35=()\n  local -a tmp36=()\n  local -a tmp37=()\n  local -a tmp38=()\n\
    \  local -a tmp39=()\n  local -a tmp40=()\n  local -a tmp41=()\n  local -a tmp42=()\n\
    \  local -a tmp43=()\n  local -a tmp44=()\n  local -a tmp45=()\n  local -a tmp46=()\n\
    \  local -a tmp47=()\n  local -a tmp48=()\n  local -a tmp49=()\n  local -a tmp50=()\n\
    \  local -a tmp51=()\n  local -a tmp52=()\n  local\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_bin=()\n  local -a arr_sorted_dec=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local i=0\n  local j=0\n  local k=0\n\
    \  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n  local q=0\n\
    \  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n  local w=0\n\
    \  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n\
    \  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local\
    \ ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n\
    \  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local\
    \ tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n\
    \  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local\
    \ eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n\
    \  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n \
    \ local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local\
    \ uuu=0\n  local vvv=\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_bin=()\n  local -a arr_sorted_dec=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a sorted=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a neg=()\n  local -a pos=()\n  local\
    \ -a result=()\n  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n\
    \  local n=0\n  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n\
    \  local t=0\n  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n\
    \  local z=0\n  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local\
    \ ee=0\n  local ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n\
    \  local kk=0\n  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local\
    \ pp=0\n  local qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n\
    \  local vv=0\n  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local\
    \ aaa=0\n  local bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n\
    \  local ggg=0\n  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n \
    \ local lll=0\n  local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local\
    \ qqq=0\n  local rrr=0\n  local sss=0\n  local ttt=0\n  local uuu=0\n  local vvv=0\n\
    \  local www=0\n  local xxx=0\n  local yyy=\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr\n  local -a arr_sorted\n  local -a arr_sorted_dec\n\
    \  local -a arr_sorted_bin\n  local -a arr_sorted_bin_count\n  local -a arr_sorted_bin_count_dec\n\
    \  local -a arr_sorted_bin_count_dec_final\n  local -a arr_sorted_final\n  local\
    \ i\n  local j\n  local k\n  local bin_count\n  local bin_count_dec\n  local bin_count_dec_final\n\
    \  local bin_count_dec_final_final\n  local bin_count_dec_final_final_final\n\
    \  local bin_count_dec_final_final_final_final\n  local bin_count_dec_final_final_final_final_final\n\
    \  local bin_count_dec_final_final_final_final_final_final\n  local bin_count_dec_final_final_final_final_final_final_final\n\
    \  local bin_count_dec_final_final_final_final_final_final_final_final\n  local\
    \ bin_count_dec_final_final_final_final_final_final_final_final_final\n  local\
    \ bin_count_dec_final_final_final_final_final_final_final_final_final_final\n\
    \  local bin_count_dec_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local bin_count_dec_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local bin_count_dec_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local bin_count_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local bin_count_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local bin_count_dec_final_final_final_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a new_arr\n  local -a ones_arr\n\
    \  local -a zeros_arr\n  local -a sorted_arr\n  local -a sorted_ones_arr\n  local\
    \ -a sorted_zeros_arr\n  local -a final_arr\n  local i\n  local j\n  local k\n\
    \  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n\
    \  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n\
    \  local z\n  local aa\n  local bb\n  local cc\n  local dd\n  local ee\n  local\
    \ ff\n  local gg\n  local hh\n  local ii\n  local jj\n  local kk\n  local ll\n\
    \  local mm\n  local nn\n  local oo\n  local pp\n  local qq\n  local rr\n  local\
    \ ss\n  local tt\n  local uu\n  local vv\n  local ww\n  local xx\n  local yy\n\
    \  local zz\n  local aaa\n  local bbb\n  local ccc\n  local ddd\n  local eee\n\
    \  local fff\n  local ggg\n  local hhh\n  local iii\n  local jjj\n  local kkk\n\
    \  local lll\n  local mmm\n  local nnn\n  local ooo\n  local ppp\n  local qqq\n\
    \  local rrr\n  local sss\n  local ttt\n  local uuu\n  local vvv\n  local www\n\
    \  local xxx\n  local yyy\n  local zzz\n  local aaaa\n  local bbbb\n  local cccc\n\
    \  local dddd\n  local eeee\n  local ffff\n  local gggg\n  local hhhh\n  local\
    \ iiii\n  local jjjj\n  local kkkk\n  local llll\n  local mmmm\n  local nnnn\n\
    \  local oooo\n  local pppp\n  local qqqq\n  local rrrr\n  local ssss\n  local\
    \ tttt\n  local uuuu\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a new_arr=()\n  local -a ones=()\n\
    \  local -a zeros=()\n  local -a neg=()\n  local -a pos=()\n  local -a neg_ones=()\n\
    \  local -a neg_zeros=()\n  local -a pos_ones=()\n  local -a pos_zeros=()\n  local\
    \ -a neg_sorted=()\n  local -a pos_sorted=()\n  local -a sorted=()\n  local -a\
    \ result=()\n  local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local\
    \ -a tmp4=()\n  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local\
    \ -a tmp8=()\n  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n \
    \ local -a tmp12=()\n  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n\
    \  local -a tmp16=()\n  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n\
    \  local -a tmp20=()\n  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n\
    \  local -a tmp24=()\n  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n\
    \  local -a tmp28=()\n  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n\
    \  local -a tmp32=()\n  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n\
    \  local -a tmp36=()\n  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n\
    \  local -a tmp40=()\n  local -a tmp41=()\n  local -a tmp42=()\n  local -\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted\n  local -a\
    \ arr_ones\n  local -a arr_zeros\n  local -a arr_neg\n  local -a arr_pos\n  local\
    \ -a arr_sorted_neg\n  local -a arr_sorted_pos\n  local -a arr_sorted_zeros\n\
    \  local -a arr_sorted_ones\n  local -a arr_sorted_neg_zeros\n  local -a arr_sorted_neg_ones\n\
    \  local -a arr_sorted_pos_zeros\n  local -a arr_sorted_pos_ones\n  local -a arr_sorted_neg_zeros_ones\n\
    \  local -a arr_sorted_pos_zeros_ones\n  local -a arr_sorted_neg_pos_zeros_ones\n\
    \  local -a arr_sorted_neg_pos_zeros\n  local -a arr_sorted_neg_pos_ones\n  local\
    \ -a arr_sorted_neg_pos\n  local -a arr_sorted_neg_zeros_pos_ones\n  local -a\
    \ arr_sorted_neg_pos_zeros_ones\n  local -a arr_sorted_neg_pos_zeros_ones_sorted\n\
    \  local -a arr_sorted_neg_pos_zeros_ones_sorted_sorted\n  local -a arr_sorted_neg_pos_zeros_ones_sorted_sorted_sorted\n\
    \  local -a arr_sorted_neg_pos_zeros_ones_sorted_sorted_sorted_sorted\n  local\
    \ -a arr_sorted_neg_pos_zeros_ones_sorted_sorted_sorted_sorted_sorted\n  local\
    \ -a arr_sorted_neg_pos_zeros_ones_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted_neg_pos_zeros_ones_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted_neg_pos_zeros_ones_sorted\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_final=()\n\
    \  local -a arr_sorted_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_final_final=()\n  local -a arr_sorted_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_final_final_final_final_final_final=()\n  local -a\
    \ arr_sorted_final_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_final_final_final_final_final_final_final=()\n  local -a arr_sorted\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted\n  local -a\
    \ arr_ones\n  local -a arr_zeros\n  local -a arr_neg\n  local -a arr_pos\n  local\
    \ -a arr_neg_sorted\n  local -a arr_pos_sorted\n  local -a arr_neg_ones\n  local\
    \ -a arr_neg_zeros\n  local -a arr_pos_ones\n  local -a arr_pos_zeros\n  local\
    \ -a arr_neg_ones_sorted\n  local -a arr_neg_zeros_sorted\n  local -a arr_pos_ones_sorted\n\
    \  local -a arr_pos_zeros_sorted\n  local -a arr_neg_sorted_ones\n  local -a arr_neg_sorted_zeros\n\
    \  local -a arr_pos_sorted_ones\n  local -a arr_pos_sorted_zeros\n  local -a arr_sorted_ones\n\
    \  local -a arr_sorted_zeros\n  local -a arr_sorted_ones_sorted\n  local -a arr_sorted_zeros_sorted\n\
    \  local -a arr_sorted_ones_sorted_sorted\n  local -a arr_sorted_zeros_sorted_sorted\n\
    \  local -a arr_sorted_sorted\n  local -a arr_sorted_sorted_sorted\n  local -a\
    \ arr_sorted_sorted_sorted_sorted\n  local -a arr_sorted_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted_sorted_sorted_sorted_sorted_sorted\n  local -a arr_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n  local\
    \ -a arr_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted\n  local\
    \ -a arr_sorted_sorted_sorted_sorted_sorted\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a res=()\n  local -a bin=()\n\
    \  local -a ones=()\n  local -a dec=()\n  local -a tmp=()\n  local -i i=0\n  local\
    \ -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local\
    \ -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local\
    \ -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local\
    \ -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n\
    \  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i\
    \ hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n \
    \ local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i\
    \ qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n \
    \ local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i\
    \ zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n\
    \  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local\
    \ -i iii=0\n  local -i jjj=0\n  local -\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a res=()\n  local -a ones=()\n\
    \  local -a zeros=()\n  local -a tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n\
    \  local -a tmp4=()\n  local -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n\
    \  local -a tmp8=()\n  local -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n\
    \  local -a tmp12=()\n  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n\
    \  local -a tmp16=()\n  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n\
    \  local -a tmp20=()\n  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n\
    \  local -a tmp24=()\n  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n\
    \  local -a tmp28=()\n  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n\
    \  local -a tmp32=()\n  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n\
    \  local -a tmp36=()\n  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n\
    \  local -a tmp40=()\n  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n\
    \  local -a tmp44=()\n  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n\
    \  local -a tmp48=()\n  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n\
    \  local -a tmp52=()\n  local -a tmp53=()\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_final=()\n  local\
    \ -a arr_sorted_bin_final=()\n  local -a arr_sorted_bin_dec_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n \
    \ local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a res=()\n  for i in \"\
    ${arr[@]}\"; do\n    res+=(\"$(printf \"%s\\t%s\\n\" \"$(echo \"obase=2; $i\"\
    \ | bc)\" \"$i\")\")\n  done\n  echo \"${res[@]}\" | sort -k1,1 -k2,2n | cut -f2\
    \ | tr '\\n' ' ' | sed 's/ $//'\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a new_array=()\n  local\
    \ -a one_count=()\n  local -a decimal_value=()\n  local -a sorted_array=()\n \
    \ local -a sorted_one_count=()\n  local -a sorted_decimal_value=()\n  local -a\
    \ sorted_new_array=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  for i in $1; do\n    arr+=(\"$i\"\
    )\n  done\n  for ((i=0; i<${#arr[@]}; i++)); do\n    for ((j=i+1; j<${#arr[@]};\
    \ j++)); do\n      if [[ $(echo \"obase=2; ${arr[i]}\" | bc) =~ 1 ]]; then\n \
    \       if [[ $(echo \"obase=2; ${arr[j]}\" | bc) =~ 1 ]]; then\n          if\
    \ [[ $(echo \"obase=2; ${arr[i]}\" | bc | grep -o 1 | wc -l) -gt $(echo \"obase=2;\
    \ ${arr[j]}\" | bc | grep -o 1 | wc -l) ]]; then\n            local tmp=${arr[i]}\n\
    \            arr[i]=${arr[j]}\n            arr[j]=$tmp\n          elif [[ $(echo\
    \ \"obase=2; ${arr[i]}\" | bc | grep -o 1 | wc -l) -eq $(echo \"obase=2; ${arr[j]}\"\
    \ | bc | grep -o 1 | wc -l) ]]; then\n            if [[ ${arr[i]} -gt ${arr[j]}\
    \ ]]; then\n              local tmp=${arr[i]}\n              arr[i]=${arr[j]}\n\
    \              arr[j]=$tmp\n            fi\n          fi\n        fi\n      else\n\
    \        if [[ $(echo \"obase=2; ${arr[j]}\" | bc) =~ 1 ]]; then\n          local\
    \ tmp=${arr[i]}\n          arr[i]=${arr[j]}\n          arr[j]=$tmp\n        else\n\
    \          if [[ ${arr[i]} -gt ${arr[j]} ]]; then\n            local tmp=${arr[i]}\n\
    \            arr[i]=${arr[j]}\n            arr[j]=$tmp\n          fi\n       \
    \ fi\n      fi\n    done\n  done\n  echo \"${arr[@]}\"\n}\n\ncandidate() {\n \
    \   sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3\
    \ 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6\
    \ -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2\n  local -a arr3\n\
    \  local -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a\
    \ arr8\n  local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n\
    \  local -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local\
    \ -a arr17\n  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n\
    \  local -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local\
    \ -a arr26\n  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n\
    \  local -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local\
    \ -a arr35\n  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n\
    \  local -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local\
    \ -a arr44\n  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n\
    \  local -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local\
    \ -a arr53\n  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n\
    \  local -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local\
    \ -a arr62\n  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n\
    \  local -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local\
    \ -a arr71\n  local -a arr72\n  local -a\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_str=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final=()\n  local -a arr_sorted_bin_dec_final_str_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final=()\n  local -a arr_sorted_bin_dec_final_str_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a result=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n\
    \  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a sorted\n  local -a ones\n\
    \  local -a zeros\n  local -a result\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local aa\n  local bb\n  local cc\n  local dd\n  local ee\n  local ff\n\
    \  local gg\n  local hh\n  local ii\n  local jj\n  local kk\n  local ll\n  local\
    \ mm\n  local nn\n  local oo\n  local pp\n  local qq\n  local rr\n  local ss\n\
    \  local tt\n  local uu\n  local vv\n  local ww\n  local xx\n  local yy\n  local\
    \ zz\n  local aaa\n  local bbb\n  local ccc\n  local ddd\n  local eee\n  local\
    \ fff\n  local ggg\n  local hhh\n  local iii\n  local jjj\n  local kkk\n  local\
    \ lll\n  local mmm\n  local nnn\n  local ooo\n  local ppp\n  local qqq\n  local\
    \ rrr\n  local sss\n  local ttt\n  local uuu\n  local vvv\n  local www\n  local\
    \ xxx\n  local yyy\n  local zzz\n  local aaaa\n  local bbbb\n  local cccc\n  local\
    \ dddd\n  local eeee\n  local ffff\n  local gggg\n  local hhhh\n  local iiii\n\
    \  local jjjj\n  local kkkk\n  local llll\n  local mmmm\n  local nnnn\n  local\
    \ oooo\n  local pppp\n  local qqqq\n  local rrrr\n  local ssss\n  local tttt\n\
    \  local uuuu\n  local vvvv\n  local wwww\n  local xxxx\n  local yyyy\n  local\
    \ zzzz\n  local aaaaa\n  local b\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a result=()\n  local -i\
    \ i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local\
    \ -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local\
    \ -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local\
    \ -i x=0\n  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n \
    \ local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i\
    \ gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n \
    \ local -i ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i\
    \ pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n \
    \ local -i uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i\
    \ yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n\
    \  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local\
    \ -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\
    \  local -i mmm=0\n  local -i nnn=0\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a res=()\n  local -a ones=()\n\
    \  local -a zeros=()\n  local -a neg=()\n  local -a pos=()\n  local -a sorted=()\n\
    \  local -a sorted_neg=()\n  local -a sorted_pos=()\n  local -a sorted_ones=()\n\
    \  local -a sorted_zeros=()\n  local -a sorted_res=()\n  local -a sorted_res_neg=()\n\
    \  local -a sorted_res_pos=()\n  local -a sorted_res_ones=()\n  local -a sorted_res_zeros=()\n\
    \  local -a sorted_res_zeros_neg=()\n  local -a sorted_res_zeros_pos=()\n  local\
    \ -a sorted_res_ones_neg=()\n  local -a sorted_res_ones_pos=()\n  local -a sorted_res_ones_neg_dec=()\n\
    \  local -a sorted_res_ones_pos_dec=()\n  local -a sorted_res_zeros_neg_dec=()\n\
    \  local -a sorted_res_zeros_pos_dec=()\n  local -a sorted_res_neg_dec=()\n  local\
    \ -a sorted_res_pos_dec=()\n  local -a sorted_res_dec=()\n  local -a sorted_res_dec_neg=()\n\
    \  local -a sorted_res_dec_pos=()\n  local -a sorted_res_dec_neg_zeros=()\n  local\
    \ -a sorted_res_dec_pos_zeros=()\n  local -a sorted_res_dec_neg_ones=()\n  local\
    \ -a sorted_res_dec_pos_ones=()\n  local -a sorted_res_dec_neg_zeros_dec=()\n\
    \  local -a sorted_res_dec_pos_zeros_dec=()\n  local -a sorted_res_dec_neg_ones_dec=()\n\
    \  local -a sorted_res_dec_pos_ones_dec=()\n  local -a sorted_res_dec_neg_zeros_dec_dec=()\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a new_array=()\n  local\
    \ -a binary_array=()\n  local -a ones_array=()\n  local -a sorted_array=()\n \
    \ local -a sorted_ones_array=()\n  local -a sorted_binary_array=()\n  local -a\
    \ sorted_new_array=()\n  local -a sorted_new_array_2=()\n  local -a sorted_new_array_3=()\n\
    \  local -a sorted_new_array_4=()\n  local -a sorted_new_array_5=()\n  local -a\
    \ sorted_new_array_6=()\n  local -a sorted_new_array_7=()\n  local -a sorted_new_array_8=()\n\
    \  local -a sorted_new_array_9=()\n  local -a sorted_new_array_10=()\n  local\
    \ -a sorted_new_array_11=()\n  local -a sorted_new_array_12=()\n  local -a sorted_new_array_13=()\n\
    \  local -a sorted_new_array_14=()\n  local -a sorted_new_array_15=()\n  local\
    \ -a sorted_new_array_16=()\n  local -a sorted_new_array_17=()\n  local -a sorted_new_array_18=()\n\
    \  local -a sorted_new_array_19=()\n  local -a sorted_new_array_20=()\n  local\
    \ -a sorted_new_array_21=()\n  local -a sorted_new_array_22=()\n  local -a sorted_new_array_23=()\n\
    \  local -a sorted_new_array_24=()\n  local -a sorted_new_array_25=()\n  local\
    \ -a sorted_new_array_26=()\n  local -a sorted_new_array_27=()\n  local -a sorted_new_array_28=()\n\
    \  local -a sorted_new_array_29=()\n  local -a sorted_new_array_30=()\n  local\
    \ -a sorted_new_array_31=()\n  local -a sorted\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -a arr=($1)\n    local -a res=()\n    local\
    \ -a tmp=()\n    local -a bin=()\n    local -a dec=()\n    local -a ones=()\n\
    \    local -a zeros=()\n    local -a neg=()\n    local -a pos=()\n    local -a\
    \ sorted=()\n    local -a sorted_neg=()\n    local -a sorted_pos=()\n    local\
    \ -a sorted_dec=()\n    local -a sorted_bin=()\n    local -a sorted_ones=()\n\
    \    local -a sorted_zeros=()\n    local -a sorted_res=()\n    local -a sorted_tmp=()\n\
    \    local -a sorted_neg_dec=()\n    local -a sorted_pos_dec=()\n    local -a\
    \ sorted_neg_bin=()\n    local -a sorted_pos_bin=()\n    local -a sorted_neg_ones=()\n\
    \    local -a sorted_pos_ones=()\n    local -a sorted_neg_zeros=()\n    local\
    \ -a sorted_pos_zeros=()\n    local -a sorted_neg_res=()\n    local -a sorted_pos_res=()\n\
    \    local -a sorted_neg_tmp=()\n    local -a sorted_pos_tmp=()\n    local -a\
    \ sorted_neg_dec_bin=()\n    local -a sorted_pos_dec_bin=()\n    local -a sorted_neg_dec_ones=()\n\
    \    local -a sorted_pos_dec_ones=()\n    local -a sorted_neg_dec_zeros=()\n \
    \   local -a sorted_pos_dec_zeros=()\n    local -a sorted_neg_dec_res=()\n   \
    \ local -a sorted_pos_dec_res=()\n    local -a sorted_neg_dec_tmp=()\n    local\
    \ -a sorted_pos_dec_tmp=()\n    local -a sorted_neg_bin_ones=()\n    local -a\
    \ sorted_pos_bin_ones=()\n    local -a sorted_neg_bin_zeros=()\n    local -a sorted_pos_bin_zeros=()\n\
    \   \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a sorted\n  local -i i j\n\
    \  for ((i=0; i<${#arr[@]}; i++)); do\n    sorted[i]=$(printf '%08d' $(echo \"\
    obase=2; ${arr[i]}\" | bc))\n  done\n  for ((i=0; i<${#sorted[@]}; i++)); do\n\
    \    for ((j=i+1; j<${#sorted[@]}; j++)); do\n      if [[ ${sorted[i]} -gt ${sorted[j]}\
    \ ]]; then\n        local tmp=${sorted[i]}\n        sorted[i]=${sorted[j]}\n \
    \       sorted[j]=$tmp\n        tmp=${arr[i]}\n        arr[i]=${arr[j]}\n    \
    \    arr[j]=$tmp\n      fi\n    done\n  done\n  echo \"${arr[@]}\"\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr\n  local -a arr_sorted\n  local -a arr_sorted_dec\n\
    \  local -a arr_sorted_bin\n  local -a arr_sorted_bin_dec\n  local -a arr_sorted_bin_dec_sorted\n\
    \  local -a arr_sorted_bin_dec_sorted_dec\n  local -a arr_sorted_bin_dec_sorted_dec_sorted\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin\n  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted\n  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted\n \
    \ local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2\n  local -a arr3\n\
    \  local -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a\
    \ arr8\n  local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n\
    \  local -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local\
    \ -a arr17\n  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n\
    \  local -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local\
    \ -a arr26\n  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n\
    \  local -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local\
    \ -a arr35\n  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n\
    \  local -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local\
    \ -a arr44\n  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n\
    \  local -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local\
    \ -a arr53\n  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n\
    \  local -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local\
    \ -a arr62\n  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n\
    \  local -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local\
    \ -a arr71\n  local -a arr72\n  local -a\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a sorted\n  local -a ones\n\
    \  local -a zeros\n  local -a tmp\n  local -i i\n  local -i j\n  local -i k\n\
    \  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local\
    \ -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n\
    \  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local\
    \ -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n\
    \  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local\
    \ -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n\
    \  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local\
    \ -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n\
    \  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local\
    \ -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr\n  local -a arr_sorted\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i n\n  local -i m\n  local -i tmp\n  local\
    \ -i tmp_dec\n  local -i tmp_bin\n  local -i tmp_bin_count\n  local -i tmp_bin_count_max\n\
    \  local -i tmp_bin_count_min\n  local -i tmp_bin_count_min_index\n  local -i\
    \ tmp_bin_count_min_index_prev\n  local -i tmp_bin_count_min_index_prev_prev\n\
    \  local -i tmp_bin_count_min_index_prev_prev_prev\n  local -i tmp_bin_count_min_index_prev_prev_prev_prev\n\
    \  local -i tmp_bin_count_min_index_prev_prev_prev_prev_prev\n  local -i tmp_bin_count_min_index_prev_prev_prev_prev_prev_prev\n\
    \  local -i tmp_bin_count_min_index_prev_prev_prev_prev_prev_prev_prev\n  local\
    \ -i tmp_bin_count_min_index_prev_prev_prev_prev_prev_prev_prev_prev\n  local\
    \ -i tmp_bin_count_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev\n  local\
    \ -i tmp_bin_count_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local -i tmp_bin_count_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local -i tmp_bin_count_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local -i tmp_bin_count_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev_prev\n\
    \  local -i tmp_bin_count_min_index_prev_prev_prev_prev_prev_prev_prev_prev_prev_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr\n  local -a ones\n  local -a zeros\n  local\
    \ -a result\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i\
    \ m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local\
    \ -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n\
    \  local -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local\
    \ -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i\
    \ ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n\
    \  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n \
    \ local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local\
    \ -i yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local\
    \ -i ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local\
    \ -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local\
    \ -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local\
    \ -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local\
    \ -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n \
    \ local -i cccc\n  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a sorted\n  local -a ones\n\
    \  local -a zeros\n  local -a result\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local aa\n  local bb\n  local cc\n  local dd\n  local ee\n  local ff\n\
    \  local gg\n  local hh\n  local ii\n  local jj\n  local kk\n  local ll\n  local\
    \ mm\n  local nn\n  local oo\n  local pp\n  local qq\n  local rr\n  local ss\n\
    \  local tt\n  local uu\n  local vv\n  local ww\n  local xx\n  local yy\n  local\
    \ zz\n  local aaa\n  local bbb\n  local ccc\n  local ddd\n  local eee\n  local\
    \ fff\n  local ggg\n  local hhh\n  local iii\n  local jjj\n  local kkk\n  local\
    \ lll\n  local mmm\n  local nnn\n  local ooo\n  local ppp\n  local qqq\n  local\
    \ rrr\n  local sss\n  local ttt\n  local uuu\n  local vvv\n  local www\n  local\
    \ xxx\n  local yyy\n  local zzz\n  local aaaa\n  local bbbb\n  local cccc\n  local\
    \ dddd\n  local eeee\n  local ffff\n  local gggg\n  local hhhh\n  local iiii\n\
    \  local jjjj\n  local kkkk\n  local llll\n  local mmmm\n  local nnnn\n  local\
    \ oooo\n  local pppp\n  local qqqq\n  local rrrr\n  local ssss\n  local tttt\n\
    \  local uuuu\n  local vvvv\n  local wwww\n  local xxxx\n  local yyyy\n  local\
    \ zzzz\n  local aaaaa\n  local b\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a result=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a tmp=()\n  local -i i=0\n  local -i\
    \ j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local\
    \ -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local\
    \ -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local\
    \ -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local\
    \ -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local\
    \ -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n\
    \  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n \
    \ local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local -i\
    \ jjj=0\n  local -i kkk=0\n  local -i lll=0\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a result=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a sorted=()\n  local -a sorted_ones=()\n\
    \  local -a sorted_zeros=()\n  local -a sorted_result=()\n  local -a sorted_result_ones=()\n\
    \  local -a sorted_result_zeros=()\n  local -a sorted_result_zeros_ones=()\n \
    \ local -a sorted_result_zeros_zeros=()\n  local -a sorted_result_ones_ones=()\n\
    \  local -a sorted_result_ones_zeros=()\n  local -a sorted_result_zeros_ones_ones=()\n\
    \  local -a sorted_result_zeros_ones_zeros=()\n  local -a sorted_result_zeros_zeros_ones=()\n\
    \  local -a sorted_result_zeros_zeros_zeros=()\n  local -a sorted_result_ones_ones_ones=()\n\
    \  local -a sorted_result_ones_ones_zeros=()\n  local -a sorted_result_ones_zeros_ones=()\n\
    \  local -a sorted_result_ones_zeros_zeros=()\n  local -a sorted_result_zeros_ones_ones_ones=()\n\
    \  local -a sorted_result_zeros_ones_ones_zeros=()\n  local -a sorted_result_zeros_ones_zeros_ones=()\n\
    \  local -a sorted_result_zeros_ones_zeros_zeros=()\n  local -a sorted_result_zeros_zeros_ones_ones=()\n\
    \  local -a sorted_result_zeros_zeros_ones_zeros=()\n  local -a sorted_result_zeros_zeros_zeros_ones=()\n\
    \  local -a sorted_result_zeros_zeros_zeros_zeros=()\n  local -a sorted_result_ones_ones_ones_ones=()\n\
    \  local -a sorted_result_ones_ones_ones_zeros=()\n  local -a sorted_result_ones_ones\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a sorted=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a temp=()\n  local -a temp2=()\n  local\
    \ -a temp3=()\n  local -a temp4=()\n  local -a temp5=()\n  local -a temp6=()\n\
    \  local -a temp7=()\n  local -a temp8=()\n  local -a temp9=()\n  local -a temp10=()\n\
    \  local -a temp11=()\n  local -a temp12=()\n  local -a temp13=()\n  local -a\
    \ temp14=()\n  local -a temp15=()\n  local -a temp16=()\n  local -a temp17=()\n\
    \  local -a temp18=()\n  local -a temp19=()\n  local -a temp20=()\n  local -a\
    \ temp21=()\n  local -a temp22=()\n  local -a temp23=()\n  local -a temp24=()\n\
    \  local -a temp25=()\n  local -a temp26=()\n  local -a temp27=()\n  local -a\
    \ temp28=()\n  local -a temp29=()\n  local -a temp30=()\n  local -a temp31=()\n\
    \  local -a temp32=()\n  local -a temp33=()\n  local -a temp34=()\n  local -a\
    \ temp35=()\n  local -a temp36=()\n  local -a temp37=()\n  local -a temp38=()\n\
    \  local -a temp39=()\n  local -a temp40=()\n  local -a temp41=()\n  local -a\
    \ temp42=()\n  local -a temp43=()\n  local -a temp44=()\n  local -a temp45=()\n\
    \  local -a temp46=()\n  local -a temp47=()\n  local -a temp48=()\n  local -a\
    \ temp49=()\n  local -a temp50=()\n  local -a temp51=()\n  local -a temp52=()\n\
    \  local -a temp53=()\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr1 arr2\n  local -i i j\n  IFS=' ' read -r\
    \ -a arr1 <<< \"$1\"\n  for ((i=0; i<${#arr1[@]}; i++)); do\n    arr2[i]=$(printf\
    \ \"%b %d\" \"$(echo \"obase=2;${arr1[i]}\" | bc)\" \"${arr1[i]}\")\n  done\n\
    \  IFS=$'\\n' sorted=($(sort <<<\"${arr2[*]}\"))\n  for ((i=0; i<${#sorted[@]};\
    \ i++)); do\n    sorted[i]=$(echo \"${sorted[i]}\" | awk '{print $2}')\n  done\n\
    \  echo \"${sorted[*]}\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a result=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a negative=()\n  local -a positive=()\n\
    \  local -a temp=()\n  local -a temp2=()\n  local -a temp3=()\n  local -a temp4=()\n\
    \  local -a temp5=()\n  local -a temp6=()\n  local -a temp7=()\n  local -a temp8=()\n\
    \  local -a temp9=()\n  local -a temp10=()\n  local -a temp11=()\n  local -a temp12=()\n\
    \  local -a temp13=()\n  local -a temp14=()\n  local -a temp15=()\n  local -a\
    \ temp16=()\n  local -a temp17=()\n  local -a temp18=()\n  local -a temp19=()\n\
    \  local -a temp20=()\n  local -a temp21=()\n  local -a temp22=()\n  local -a\
    \ temp23=()\n  local -a temp24=()\n  local -a temp25=()\n  local -a temp26=()\n\
    \  local -a temp27=()\n  local -a temp28=()\n  local -a temp29=()\n  local -a\
    \ temp30=()\n  local -a temp31=()\n  local -a temp32=()\n  local -a temp33=()\n\
    \  local -a temp34=()\n  local -a temp35=()\n  local -a temp36=()\n  local -a\
    \ temp37=()\n  local -a temp38=()\n  local -a temp39=()\n  local -a temp40=()\n\
    \  local -a temp41=()\n  local -a temp42=()\n  local -a temp43=()\n  local -a\
    \ temp44=()\n  local -a temp45=()\n  local -a temp46=()\n  local -a temp47=()\n\
    \  local -a temp48=()\n  local -a temp49=()\n  local -a temp50=()\n  local -a\
    \ temp51=()\n  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2\n  local -a arr3\n\
    \  local -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a\
    \ arr8\n  local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n\
    \  local -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local\
    \ -a arr17\n  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n\
    \  local -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local\
    \ -a arr26\n  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n\
    \  local -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local\
    \ -a arr35\n  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n\
    \  local -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local\
    \ -a arr44\n  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n\
    \  local -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local\
    \ -a arr53\n  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n\
    \  local -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local\
    \ -a arr62\n  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n\
    \  local -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local\
    \ -a arr71\n  local -a arr72\n  local -a\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a sorted\n  local -a ones\n\
    \  local -a zeros\n  local -a result\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local aa\n  local bb\n  local cc\n  local dd\n  local ee\n  local ff\n\
    \  local gg\n  local hh\n  local ii\n  local jj\n  local kk\n  local ll\n  local\
    \ mm\n  local nn\n  local oo\n  local pp\n  local qq\n  local rr\n  local ss\n\
    \  local tt\n  local uu\n  local vv\n  local ww\n  local xx\n  local yy\n  local\
    \ zz\n  local aaa\n  local bbb\n  local ccc\n  local ddd\n  local eee\n  local\
    \ fff\n  local ggg\n  local hhh\n  local iii\n  local jjj\n  local kkk\n  local\
    \ lll\n  local mmm\n  local nnn\n  local ooo\n  local ppp\n  local qqq\n  local\
    \ rrr\n  local sss\n  local ttt\n  local uuu\n  local vvv\n  local www\n  local\
    \ xxx\n  local yyy\n  local zzz\n  local aaaa\n  local bbbb\n  local cccc\n  local\
    \ dddd\n  local eeee\n  local ffff\n  local gggg\n  local hhhh\n  local iiii\n\
    \  local jjjj\n  local kkkk\n  local llll\n  local mmmm\n  local nnnn\n  local\
    \ oooo\n  local pppp\n  local qqqq\n  local rrrr\n  local ssss\n  local tttt\n\
    \  local uuuu\n  local vvvv\n  local wwww\n  local xxxx\n  local yyyy\n  local\
    \ zzzz\n  local aaaaa\n  local b\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a sorted\n  local -a bin\n\
    \  local -a bin_sorted\n  local -a bin_sorted_dec\n  local -a bin_sorted_dec_sorted\n\
    \  local -a bin_sorted_dec_sorted_str\n  local -a bin_sorted_dec_sorted_str_sorted\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_dec\n  local -a bin_sorted_dec_sorted_str_sorted_dec_sorted\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_dec_sorted_str\n  local -a bin_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted_dec\n  local\
    \ -a bin_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted_dec_sorted\n  local\
    \ -a bin_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted_dec_sorted_str\n \
    \ local -a bin_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted_dec\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted_dec_sorted\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted_dec_sorted_str\n\
    \  local -a bin_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted_dec_sorted_str_sorted\n\
    \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4\
    \ -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1\
    \ 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a sorted=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a result=()\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n\
    \  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local\
    \ hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n\
    \  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local\
    \ ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n\
    \  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local\
    \ ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n\
    \  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n \
    \ local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local\
    \ ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n\
    \  local zzz=0\n  local aaaa=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a sorted\n  local -a ones\n\
    \  local -a zeros\n  local -a result\n  local -i i\n  local -i j\n  local -i k\n\
    \  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local\
    \ -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n\
    \  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local\
    \ -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n\
    \  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local\
    \ -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n\
    \  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local\
    \ -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n\
    \  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local\
    \ -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a result=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a temp=()\n  local -a temp2=()\n  local\
    \ -a temp3=()\n  local -a temp4=()\n  local -a temp5=()\n  local -a temp6=()\n\
    \  local -a temp7=()\n  local -a temp8=()\n  local -a temp9=()\n  local -a temp10=()\n\
    \  local -a temp11=()\n  local -a temp12=()\n  local -a temp13=()\n  local -a\
    \ temp14=()\n  local -a temp15=()\n  local -a temp16=()\n  local -a temp17=()\n\
    \  local -a temp18=()\n  local -a temp19=()\n  local -a temp20=()\n  local -a\
    \ temp21=()\n  local -a temp22=()\n  local -a temp23=()\n  local -a temp24=()\n\
    \  local -a temp25=()\n  local -a temp26=()\n  local -a temp27=()\n  local -a\
    \ temp28=()\n  local -a temp29=()\n  local -a temp30=()\n  local -a temp31=()\n\
    \  local -a temp32=()\n  local -a temp33=()\n  local -a temp34=()\n  local -a\
    \ temp35=()\n  local -a temp36=()\n  local -a temp37=()\n  local -a temp38=()\n\
    \  local -a temp39=()\n  local -a temp40=()\n  local -a temp41=()\n  local -a\
    \ temp42=()\n  local -a temp43=()\n  local -a temp44=()\n  local -a temp45=()\n\
    \  local -a temp46=()\n  local -a temp47=()\n  local -a temp48=()\n  local -a\
    \ temp49=()\n  local -a temp50=()\n  local -a temp51=()\n  local -a temp52=()\n\
    \  local -a temp53=()\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted\n  local -a\
    \ arr_sorted_dec\n  local -a arr_sorted_bin\n  local -a arr_sorted_bin_dec\n \
    \ local -a arr_sorted_bin_dec_final\n  local -a arr_sorted_bin_dec_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final\n  local -a arr_sorted_bin_dec_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr\n  local -a arr_sorted\n  local -a arr_sorted_dec\n\
    \  local -a arr_sorted_bin\n  local -a arr_sorted_bin_dec\n  local -a arr_sorted_bin_dec_str\n\
    \  local -a arr_sorted_bin_dec_str_final\n  local -a arr_sorted_bin_dec_str_final_str\n\
    \  local -a arr_sorted_bin_dec_str_final_str_final\n  local -a arr_sorted_bin_dec_str_final_str_final_final\n\
    \  local -a arr_sorted_bin_dec_str_final_str_final_final_final\n  local -a arr_sorted_bin_dec_str_final_str_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_str_final_str_final_final_final_final_final\n \
    \ local -a arr_sorted_bin_dec_str_final_str_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_str_final_str_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_str_final_str_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_str_final_str_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_str_final_str_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_str_final_str_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_str_final_str_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_str_final_str_final_final_final_final\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_bin=()\n  local -a arr_sorted_dec=()\n  local -a arr_sorted_final=()\n\
    \  local -a arr_sorted_final_dec=()\n  local -a arr_sorted_final_bin=()\n  local\
    \ -a arr_sorted_final_bin_dec=()\n  local -a arr_sorted_final_bin_dec_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final=()\n  local -a arr_sorted_final_bin_dec_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final=()\n  local -a arr_sorted_final_bin_dec_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a res=()\n  for ((i=0; i<${#arr[@]};\
    \ i++)); do\n    res[i]=$(printf \"%s %s\" \"$(printf \"%b\" \"${arr[i]}\" | grep\
    \ -o 1 | wc -l)\" \"${arr[i]}\")\n  done\n  echo \"${res[@]}\" | tr ' ' '\\n'\
    \ | sort -n | cut -d ' ' -f 2 | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a sorted_array=()\n  local\
    \ -a ones_array=()\n  local -a zeros_array=()\n  local -a sorted_ones_array=()\n\
    \  local -a sorted_zeros_array=()\n  local -a result_array=()\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local\
    \ -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a a=($1)\n  local -a b=()\n  local -a c=()\n\
    \  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a g=()\n  local -a\
    \ h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n  local -a l=()\n \
    \ local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a p=()\n  local -a\
    \ q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n  local -a u=()\n \
    \ local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a y=()\n  local -a\
    \ z=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n  local -a ad=()\n\
    \  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local -a ah=()\n  local\
    \ -a ai=()\n  local -a aj=()\n  local -a ak=()\n  local -a al=()\n  local -a am=()\n\
    \  local -a an=()\n  local -a ao=()\n  local -a ap=()\n  local -a aq=()\n  local\
    \ -a ar=()\n  local -a as=()\n  local -a at=()\n  local -a au=()\n  local -a av=()\n\
    \  local -a aw=()\n  local -a ax=()\n  local -a ay=()\n  local -a az=()\n  local\
    \ -a ba=()\n  local -a bb=()\n  local -a bc=()\n  local -a bd=()\n  local -a be=()\n\
    \  local -a bf=()\n  local -a bg=()\n  local -a bh=()\n  local -a bi=()\n  local\
    \ -a bj=()\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted\n  local -a\
    \ arr_sorted_dec\n  local -a arr_sorted_bin\n  local -a arr_sorted_bin_dec\n \
    \ local -a arr_sorted_bin_dec_final\n  local -a arr_sorted_final\n  local -a arr_sorted_final_final\n\
    \  local -a arr_sorted_final_final_final\n  local -a arr_sorted_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final\n  local -a arr_sorted_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final\n  local -a arr_sorted_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_ones=()\n  local -a arr_zeros=()\n  local -a arr_neg=()\n  local -a arr_pos=()\n\
    \  local -a arr_dec=()\n  local -a arr_dec_sorted=()\n  local -a arr_dec_neg=()\n\
    \  local -a arr_dec_pos=()\n  local -a arr_dec_neg_sorted=()\n  local -a arr_dec_pos_sorted=()\n\
    \  local -a arr_dec_neg_ones=()\n  local -a arr_dec_neg_zeros=()\n  local -a arr_dec_pos_ones=()\n\
    \  local -a arr_dec_pos_zeros=()\n  local -a arr_dec_neg_ones_sorted=()\n  local\
    \ -a arr_dec_neg_zeros_sorted=()\n  local -a arr_dec_pos_ones_sorted=()\n  local\
    \ -a arr_dec_pos_zeros_sorted=()\n  local -a arr_dec_neg_ones_sorted_sorted=()\n\
    \  local -a arr_dec_neg_zeros_sorted_sorted=()\n  local -a arr_dec_pos_ones_sorted_sorted=()\n\
    \  local -a arr_dec_pos_zeros_sorted_sorted=()\n  local -a arr_dec_neg_ones_sorted_sorted_sorted=()\n\
    \  local -a arr_dec_neg_zeros_sorted_sorted_sorted=()\n  local -a arr_dec_pos_ones_sorted_sorted_sorted=()\n\
    \  local -a arr_dec_pos_zeros_sorted_sorted_sorted=()\n  local -a arr_dec_neg_ones_sorted_sorted_sorted_sorted=()\n\
    \  local -a arr_dec_neg_zeros_sorted_sorted_sorted_sorted=()\n  local -a arr_dec_pos_ones_sorted_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_bin=()\n  local -a\
    \ arr_dec=()\n  local -a arr_sorted=()\n  local -a arr_sorted_dec=()\n  local\
    \ -a arr_sorted_bin=()\n  local -a arr_sorted_dec_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_dec_bin_final=()\n\
    \  local -a arr_sorted_final=()\n  local -a arr_sorted_final_final=()\n  local\
    \ -a arr_sorted_final_final_final=()\n  local -a arr_sorted_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final=()\n  local -a\
    \ arr_sorted_final_final_final_final_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted\n  local -a\
    \ arr_sorted_dec\n  local -a arr_sorted_bin\n  local -a arr_sorted_bin_dec\n \
    \ local -a arr_sorted_bin_dec_sorted\n  local -a arr_sorted_bin_dec_sorted_dec\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted\n  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec\n  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec\n  local -a\
    \ arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted\n  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin\n\
    \  local -a arr_sorted_bin_dec_sorted_dec\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a result=()\n  for i in\
    \ \"${array[@]}\"; do\n    result+=(\"$(printf \"%s %s\" \"$(echo \"obase=2;$i\"\
    \ | bc)\" \"$i\")\")\n  done\n  echo \"${result[@]}\" | tr ' ' '\\n' | sort -n\
    \ | cut -d' ' -f2 | tr '\\n' ' '\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -a arr=($1)\n    local -a result=()\n    local\
    \ -a ones=()\n    local -a zeros=()\n    local -a tmp=()\n    local -i i=0\n \
    \   local -i j=0\n    local -i k=0\n    local -i l=0\n    local -i m=0\n    local\
    \ -i n=0\n    local -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n\
    \    local -i s=0\n    local -i t=0\n    local -i u=0\n    local -i v=0\n    local\
    \ -i w=0\n    local -i x=0\n    local -i y=0\n    local -i z=0\n    local -i aa=0\n\
    \    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n\
    \    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i ii=0\n\
    \    local -i jj=0\n    local -i kk=0\n    local -i ll=0\n    local -i mm=0\n\
    \    local -i nn=0\n    local -i oo=0\n    local -i pp=0\n    local -i qq=0\n\
    \    local -i rr=0\n    local -i ss=0\n    local -i tt=0\n    local -i uu=0\n\
    \    local -i vv=0\n    local -i ww=0\n    local -i xx=0\n    local -i yy=0\n\
    \    local -i zz=0\n    local -i aaa=0\n    local -i bbb=0\n    local -i ccc=0\n\
    \    local -i ddd=0\n    local -i eee=0\n    local -i fff=0\n    local -i ggg=0\n\
    \    local -i hhh=0\n    local -i iii=0\n    local -i jjj=0\n    local -i kkk=0\n\
    \   \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -a arr=($1)\n    local -a bin_arr\n    local\
    \ -a bin_sort_arr\n    local -a dec_sort_arr\n    local -a result_arr\n    local\
    \ i\n    local j\n    local k\n    local bin_num\n    local dec_num\n    local\
    \ bin_sort_num\n    local dec_sort_num\n    local bin_sort_index\n    local dec_sort_index\n\
    \    local result_index\n    local result_num\n    local result_str\n\n    for\
    \ ((i=0; i<${#arr[@]}; i++)); do\n        bin_num=${arr[$i]}\n        dec_num=${arr[$i]}\n\
    \        bin_num=$(echo \"obase=2; $bin_num\" | bc)\n        bin_arr[$i]=$bin_num\n\
    \        dec_arr[$i]=$dec_num\n    done\n\n    for ((i=0; i<${#bin_arr[@]}; i++));\
    \ do\n        bin_sort_num=${bin_arr[$i]}\n        dec_sort_num=${dec_arr[$i]}\n\
    \        bin_sort_index=0\n        dec_sort_index=0\n        for ((j=0; j<${#bin_sort_arr[@]};\
    \ j++)); do\n            if [[ ${bin_sort_arr[$j]} -gt $bin_sort_num ]]; then\n\
    \                bin_sort_index=$j\n                break\n            fi\n  \
    \      done\n        for ((k=0; k<${#dec_sort_arr[@]}; k++)); do\n           \
    \ if [[ ${dec_sort_arr[$k]} -gt $dec_sort_num ]]; then\n                dec_sort_index=$k\n\
    \                break\n            fi\n        done\n        bin_sort_arr=(${bin_sort_arr[@]:0:$bin_sort_index}\
    \ $bin_sort_num ${bin_sort_arr[@]:$bin_sort_index})\n        dec_sort_arr=(${dec_sort_arr[@]:0:$dec_sort_index}\
    \ $dec_sort_num ${dec_sort_arr[\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpy6apntlq.sh: line 62: syntax error near unexpected token `(''

    /tmp/tmpy6apntlq.sh: line 62: `candidate() {''

    /tmp/tmpy6apntlq.sh: line 63: sort_array: command not found

    /tmp/tmpy6apntlq.sh: line 64: syntax error near unexpected token `}''

    /tmp/tmpy6apntlq.sh: line 64: `}''

    '
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2\n  local -a arr3\n\
    \  local -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a\
    \ arr8\n  local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n\
    \  local -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local\
    \ -a arr17\n  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n\
    \  local -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local\
    \ -a arr26\n  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n\
    \  local -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local\
    \ -a arr35\n  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n\
    \  local -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local\
    \ -a arr44\n  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n\
    \  local -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local\
    \ -a arr53\n  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n\
    \  local -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local\
    \ -a arr62\n  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n\
    \  local -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local\
    \ -a arr71\n  local -a arr72\n  local -a\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a res=()\n  local -a ones=()\n\
    \  local -a zeros=()\n  local -a neg=()\n  local -a pos=()\n  local -a tmp=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i n=0\n  local -i m=0\n\
    \  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n\
    \  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n\
    \  local -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n\
    \  local -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i l=0\n\
    \  local -i o=0\n  local -i one=0\n  local -i zero=0\n  local -i neg_num=0\n \
    \ local -i pos_num=0\n  local -i tmp_num=0\n  local -i res_num=0\n  local -i ones_num=0\n\
    \  local -i zeros_num=0\n  local -i neg_num=0\n  local -i pos_num=0\n  local -i\
    \ tmp_num=0\n  local -i res_num=0\n  local -i ones_num=0\n  local -i zeros_num=0\n\
    \  local -i neg_num=0\n  local -i pos_num=0\n  local -i tmp_num=0\n  local -i\
    \ res_num=0\n  local -i ones_num=0\n  local -i zeros_num=0\n  local -i neg_num=0\n\
    \  local -i pos_num=0\n  local -i tmp_num=0\n  local -i res_num=0\n  local -i\
    \ ones\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted\n  local -a\
    \ arr_sorted_dec\n  local -a arr_sorted_bin\n  local -a arr_sorted_bin_dec\n \
    \ local -a arr_sorted_bin_dec_str\n  local -a arr_sorted_bin_dec_str_sorted\n\
    \  local -a arr_sorted_bin_dec_str_sorted_dec\n  local -a arr_sorted_bin_dec_str_sorted_dec_str\n\
    \  local -a arr_sorted_bin_dec_str_sorted_dec_str_sorted\n  local -a arr_sorted_bin_dec_str_sorted_dec_str_sorted_dec\n\
    \  local -a arr_sorted_bin_dec_str_sorted_dec_str_sorted_dec_str\n  local -a arr_sorted_bin_dec_str_sorted_dec_str_sorted_dec_str_sorted\n\
    \  local -a arr_sorted_bin_dec_str_sorted_dec_str_sorted_dec_str_sorted_dec\n\
    \  local -a arr_sorted_bin_dec_str_sorted_dec_str_sorted_dec_str_sorted_dec_str\n\
    \  local -a arr_sorted_bin_dec_str_sorted_dec_str_sorted_dec_str_sorted_dec_str_sorted\n\
    \  local -a arr_sorted_bin_dec_str_sorted_dec_str_sorted_dec_str_sorted_dec_str_sorted_dec\n\
    \  local -a arr_sorted_bin_dec_str_sorted_dec_str_sorted_dec_str_sorted_dec_str_sorted_dec_str\n\
    \  local -a arr_sorted_bin_dec_str_sorted_dec_str_sorted_dec_str_sorted_dec_str_sorted_dec_str_sorted\n\
    \  local -a arr_sorted_bin_dec_str_sorted_dec_str_sorted_dec_str_s\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a bin=()\n  local -a dec=()\n\
    \  local -a res=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i\
    \ l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n  local -i lll=0\n  local -\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted\n  local -a\
    \ arr_sorted_dec\n  local -a arr_sorted_bin\n  local -a arr_sorted_bin_dec\n \
    \ local -a arr_sorted_bin_dec_final\n  local -a arr_sorted_bin_dec_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final\n  local -a arr_sorted_bin_dec_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final\n  local\
    \ -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr\n  local -a arr_sorted\n  local -a arr_sorted_dec\n\
    \  local -a arr_sorted_bin\n  local -a arr_sorted_bin_dec\n  local -a arr_sorted_bin_dec_final\n\
    \  local -a arr_sorted_bin_dec_final_final\n  local -a arr_sorted_bin_dec_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final\n  local -a arr_sorted_bin_dec_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final\n  local -a\
    \ arr_sorted_bin_dec_final_final_final_final_final_final_final\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_ones=()\n  local -a arr_sorted_dec=()\n  local -a arr_sorted_final=()\n\
    \  local -a arr_sorted_final_ones=()\n  local -a arr_sorted_final_dec=()\n  local\
    \ -a arr_sorted_final_final=()\n  local -a arr_sorted_final_final_ones=()\n  local\
    \ -a arr_sorted_final_final_dec=()\n  local -a arr_sorted_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_ones=()\n  local -a arr_sorted_final_final_final_dec=()\n\
    \  local -a arr_sorted_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_ones=()\n\
    \  local -a arr_sorted_final_final_final_final_dec=()\n  local -a arr_sorted_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_ones=()\n  local -a arr_sorted_final_final_final_final_final_dec=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final_final_ones=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_dec=()\n  local -a\
    \ arr_sorted_final_final_final_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final_final_final_ones=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_dec=()\n  local\
    \ -a arr_sorted_final_final_final_final_final_final_final_final=()\n  local -a\
    \ arr_sorted_final\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a a=($1)\n  local -a b=()\n  local -a c=()\n\
    \  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a g=()\n  local -a\
    \ h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n  local -a l=()\n \
    \ local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a p=()\n  local -a\
    \ q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n  local -a u=()\n \
    \ local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a y=()\n  local -a\
    \ z=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n  local -a ad=()\n\
    \  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local -a ah=()\n  local\
    \ -a ai=()\n  local -a aj=()\n  local -a ak=()\n  local -a al=()\n  local -a am=()\n\
    \  local -a an=()\n  local -a ao=()\n  local -a ap=()\n  local -a aq=()\n  local\
    \ -a ar=()\n  local -a as=()\n  local -a at=()\n  local -a au=()\n  local -a av=()\n\
    \  local -a aw=()\n  local -a ax=()\n  local -a ay=()\n  local -a az=()\n  local\
    \ -a ba=()\n  local -a bb=()\n  local -a bc=()\n  local -a bd=()\n  local -a be=()\n\
    \  local -a bf=()\n  local -a bg=()\n  local -a bh=()\n  local -a bi=()\n  local\
    \ -a bj=()\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_final=()\n  local\
    \ -a arr_sorted_final_final=()\n  local -a arr_sorted_final_final_final=()\n \
    \ local -a arr_sorted_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_final_final_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  echo \"$1\" | tr ' ' '\\n' | sort -n -k1.1,1.1 -k2,2\
    \ | tr '\\n' ' ' | sed 's/^ *//'\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=()\n  local -a result=()\n  local -a\
    \ tmp=()\n  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n  local\
    \ -a tmp5=()\n  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n  local\
    \ -a tmp9=()\n  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n\
    \  local -a tmp13=()\n  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n\
    \  local -a tmp17=()\n  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n\
    \  local -a tmp21=()\n  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n\
    \  local -a tmp25=()\n  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n\
    \  local -a tmp29=()\n  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n\
    \  local -a tmp33=()\n  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n\
    \  local -a tmp37=()\n  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n\
    \  local -a tmp41=()\n  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n\
    \  local -a tmp45=()\n  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n\
    \  local -a tmp49=()\n  local -a tmp50=()\n  local -a tmp51=()\n  local -a tmp52=()\n\
    \  local -a tmp53=()\n  local -a tmp54=()\n  local -a tmp55=()\n \n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -a arr=($1)\n    local -a arr_sorted=()\n  \
    \  local -a arr_sorted_dec=()\n    local -a arr_sorted_bin=()\n    local -a arr_sorted_bin_dec=()\n\
    \    local -a arr_sorted_bin_dec_final=()\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local l=0\n    local m=0\n    local n=0\n    local o=0\n    local p=0\n\
    \    local q=0\n    local r=0\n    local s=0\n    local t=0\n    local u=0\n \
    \   local v=0\n    local w=0\n    local x=0\n    local y=0\n    local z=0\n  \
    \  local aa=0\n    local bb=0\n    local cc=0\n    local dd=0\n    local ee=0\n\
    \    local ff=0\n    local gg=0\n    local hh=0\n    local ii=0\n    local jj=0\n\
    \    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n    local oo=0\n\
    \    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n    local tt=0\n\
    \    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n    local yy=0\n\
    \    local zz=0\n    local aaa=0\n    local bbb=0\n    local ccc=0\n    local\
    \ ddd=0\n    local eee=0\n    local fff=0\n    local ggg=0\n    local hhh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n    local\
    \ vvv=\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2\
    \ -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") =\
    \ \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_bin\n  local -a arr_dec\n\
    \  local -a arr_sorted\n  local -i i=0\n  local -i j=0\n  local -i k=0\n  local\
    \ -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n  local\
    \ -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n  local\
    \ -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n  local\
    \ -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n\
    \  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n  local -i\
    \ jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n \
    \ local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n  local -i\
    \ bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local -i fff=0\n\
    \  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local -i jjj=0\n  local\
    \ -i kkk=0\n  local -i lll=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a res\n  local -a ones\n\
    \  local -a zeros\n  local -a sorted\n  local -i i\n  local -i j\n  local -i k\n\
    \  local -i l\n  local -i m\n  local -i n\n  local -i o\n  local -i p\n  local\
    \ -i q\n  local -i r\n  local -i s\n  local -i t\n  local -i u\n  local -i v\n\
    \  local -i w\n  local -i x\n  local -i y\n  local -i z\n  local -i a\n  local\
    \ -i b\n  local -i c\n  local -i d\n  local -i e\n  local -i f\n  local -i g\n\
    \  local -i h\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local\
    \ -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n\
    \  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local\
    \ -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n\
    \  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local\
    \ -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n\
    \  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local\
    \ -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n\
    \  local -i z\n  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local\
    \ -i e\n  local -i f\n  local -i g\n  local -i h\n  local -i i\n  local\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2\n  local -a arr3\n\
    \  local -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a\
    \ arr8\n  local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n\
    \  local -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local\
    \ -a arr17\n  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n\
    \  local -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local\
    \ -a arr26\n  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n\
    \  local -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local\
    \ -a arr35\n  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n\
    \  local -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local\
    \ -a arr44\n  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n\
    \  local -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local\
    \ -a arr53\n  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n\
    \  local -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local\
    \ -a arr62\n  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n\
    \  local -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local\
    \ -a arr71\n  local -a arr72\n  local -a\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a new_arr=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a temp=()\n  local -a temp_arr=()\n \
    \ local -a temp_arr2=()\n  local -a temp_arr3=()\n  local -a temp_arr4=()\n  local\
    \ -a temp_arr5=()\n  local -a temp_arr6=()\n  local -a temp_arr7=()\n  local -a\
    \ temp_arr8=()\n  local -a temp_arr9=()\n  local -a temp_arr10=()\n  local -a\
    \ temp_arr11=()\n  local -a temp_arr12=()\n  local -a temp_arr13=()\n  local -a\
    \ temp_arr14=()\n  local -a temp_arr15=()\n  local -a temp_arr16=()\n  local -a\
    \ temp_arr17=()\n  local -a temp_arr18=()\n  local -a temp_arr19=()\n  local -a\
    \ temp_arr20=()\n  local -a temp_arr21=()\n  local -a temp_arr22=()\n  local -a\
    \ temp_arr23=()\n  local -a temp_arr24=()\n  local -a temp_arr25=()\n  local -a\
    \ temp_arr26=()\n  local -a temp_arr27=()\n  local -a temp_arr28=()\n  local -a\
    \ temp_arr29=()\n  local -a temp_arr30=()\n  local -a temp_arr31=()\n  local -a\
    \ temp_arr32=()\n  local -a temp_arr33=()\n  local -a temp_arr34=()\n  local -a\
    \ temp_arr35=()\n  local -a temp_arr36=()\n  local -a temp_arr37=()\n  local -a\
    \ temp_arr38=()\n  local -a temp_arr39=()\n  local -a temp_arr40=()\n  local -a\
    \ temp_arr41=()\n  local -a temp_arr42=()\n  local -a temp\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a a=($1)\n  local -a b=()\n  local -a c=()\n\
    \  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a g=()\n  local -a\
    \ h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n  local -a l=()\n \
    \ local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a p=()\n  local -a\
    \ q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n  local -a u=()\n \
    \ local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a y=()\n  local -a\
    \ z=()\n  for i in \"${a[@]}\"; do\n    local -i j=$(echo \"obase=2;$i\" | bc)\n\
    \    local -i k=$(echo \"$j\" | grep -o 1 | wc -l)\n    case $k in\n      0) b+=(\"\
    $i\") ;;\n      1) c+=(\"$i\") ;;\n      2) d+=(\"$i\") ;;\n      3) e+=(\"$i\"\
    ) ;;\n      4) f+=(\"$i\") ;;\n      5) g+=(\"$i\") ;;\n      6) h+=(\"$i\") ;;\n\
    \      7) i+=(\"$i\") ;;\n      8) j+=(\"$i\") ;;\n      9) k+=(\"$i\") ;;\n \
    \     10) l+=(\"$i\") ;;\n      11) m+=(\"$i\") ;;\n      12) n+=(\"$i\") ;;\n\
    \      13) o+=(\"$i\") ;;\n      14) p+=(\"$i\") ;;\n      15) q+=(\"$i\") ;;\n\
    \      16) r+=(\"$i\") ;;\n      17) s+=(\"$i\") ;;\n      18) t+=(\"$i\") ;;\n\
    \      19) u+=(\"$i\") ;;\n      20) v+=(\"$i\") ;;\n      21) w+=(\"$\n}\n\n\
    candidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp_aspysht.sh: line 82: unexpected EOF while looking for matching
    `"''

    /tmp/tmp_aspysht.sh: line 86: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 2
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a a=($1)\n  local -a b=()\n  local -a c=()\n\
    \  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a g=()\n  local -a\
    \ h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n  local -a l=()\n \
    \ local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a p=()\n  local -a\
    \ q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n  local -a u=()\n \
    \ local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a y=()\n  local -a\
    \ z=()\n  for i in ${a[@]}; do\n    local b=$(echo \"obase=2;$i\" | bc)\n    local\
    \ c=$(echo \"$b\" | grep -o 1 | wc -l)\n    local d=$(echo \"$b\" | grep -o 0\
    \ | wc -l)\n    case $c in\n      0)\n        e+=($i)\n        ;;\n      1)\n\
    \        f+=($i)\n        ;;\n      2)\n        g+=($i)\n        ;;\n      3)\n\
    \        h+=($i)\n        ;;\n      4)\n        i+=($i)\n        ;;\n      5)\n\
    \        j+=($i)\n        ;;\n      6)\n        k+=($i)\n        ;;\n      7)\n\
    \        l+=($i)\n        ;;\n      8)\n        m+=($i)\n        ;;\n      9)\n\
    \        n+=($i)\n        ;;\n      10)\n        o+=($i)\n        ;;\n      11)\n\
    \        p+=($i)\n        ;;\n      12)\n        q+=($i)\n        ;;\n      13)\n\
    \        r+=($i)\n        ;;\n      14)\n        s+=($i)\n\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp5s8lgfn6.sh: line 91: syntax error near unexpected token `}''

    /tmp/tmp5s8lgfn6.sh: line 91: `}''

    '
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2\n  local -a arr3\n\
    \  local -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a\
    \ arr8\n  local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n\
    \  local -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local\
    \ -a arr17\n  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n\
    \  local -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local\
    \ -a arr26\n  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n\
    \  local -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local\
    \ -a arr35\n  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n\
    \  local -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local\
    \ -a arr44\n  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n\
    \  local -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local\
    \ -a arr53\n  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n\
    \  local -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local\
    \ -a arr62\n  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n\
    \  local -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local\
    \ -a arr71\n  local -a arr72\n  local -a\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -a arr=($1)\n    local -a new_arr=()\n    local\
    \ -a bin_arr=()\n    local -a ones_arr=()\n    local -a dec_arr=()\n    local\
    \ -a sorted_arr=()\n    local -a sorted_dec_arr=()\n    local -a sorted_ones_arr=()\n\
    \    local -a final_arr=()\n    local -a final_arr_dec=()\n    local -a final_arr_ones=()\n\
    \    local -a final_arr_sorted=()\n    local -a final_arr_sorted_dec=()\n    local\
    \ -a final_arr_sorted_ones=()\n    local -a final_arr_sorted_dec_ones=()\n   \
    \ local -a final_arr_sorted_ones_dec=()\n    local -a final_arr_sorted_ones_dec_arr=()\n\
    \    local -a final_arr_sorted_dec_ones_arr=()\n    local -a final_arr_sorted_ones_arr=()\n\
    \    local -a final_arr_sorted_dec_arr=()\n    local -a final_arr_sorted_arr=()\n\
    \    local -a final_arr_sorted_dec_arr_ones=()\n    local -a final_arr_sorted_ones_arr_dec=()\n\
    \    local -a final_arr_sorted_dec_arr_ones_arr=()\n    local -a final_arr_sorted_ones_arr_dec_arr=()\n\
    \    local -a final_arr_sorted_ones_arr_dec_arr_arr=()\n    local -a final_arr_sorted_dec_arr_ones_arr_arr=()\n\
    \    local -a final_arr_sorted_ones_arr_dec_arr_arr_arr=()\n    local -a final_arr_sorted_dec_arr_ones_arr_arr_arr=()\n\
    \    local -a final_arr_sorted_ones_arr_dec_arr_arr_arr_arr=()\n    local -a final_arr_sorted_dec_arr_ones_arr_arr_arr_arr=()\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a result=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a neg=()\n  local -a pos=()\n  local\
    \ -a neg_ones=()\n  local -a neg_zeros=()\n  local -a pos_ones=()\n  local -a\
    \ pos_zeros=()\n  local -a neg_ones_dec=()\n  local -a neg_zeros_dec=()\n  local\
    \ -a pos_ones_dec=()\n  local -a pos_zeros_dec=()\n  local -a neg_ones_dec_sorted=()\n\
    \  local -a neg_zeros_dec_sorted=()\n  local -a pos_ones_dec_sorted=()\n  local\
    \ -a pos_zeros_dec_sorted=()\n  local -a neg_ones_sorted=()\n  local -a neg_zeros_sorted=()\n\
    \  local -a pos_ones_sorted=()\n  local -a pos_zeros_sorted=()\n  local -a neg_sorted=()\n\
    \  local -a pos_sorted=()\n  local -a ones_sorted=()\n  local -a zeros_sorted=()\n\
    \  local -a ones_dec_sorted=()\n  local -a zeros_dec_sorted=()\n  local -a ones_dec=()\n\
    \  local -a zeros_dec=()\n  local -a ones_dec_sorted=()\n  local -a zeros_dec_sorted=()\n\
    \  local -a ones_sorted=()\n  local -a zeros_sorted=()\n  local -a result=()\n\
    \  local -a result_sorted=()\n  local -a result_dec_sorted=()\n  local -a result_ones_sorted=()\n\
    \  local -a result_zeros_sorted=()\n  local -a result_ones_dec_sorted=()\n  local\
    \ -a result_zeros_dec_sorted=()\n  local -a result_neg_sorted=()\n  local -a result_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a sorted\n  local -a ones\n\
    \  local -a zeros\n  local -a result\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local\
    \ -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n\
    \  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local\
    \ -i mmm=0\n  local -i nnn=\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted\n  local -a\
    \ arr_ones\n  local -a arr_zeros\n  local -a arr_sorted_ones\n  local -a arr_sorted_zeros\n\
    \  local -a arr_sorted_ones_dec\n  local -a arr_sorted_zeros_dec\n  local -i i\n\
    \  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local -i n\n  local\
    \ -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n\
    \  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local\
    \ -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i dd\n  local -i\
    \ ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n  local -i jj\n\
    \  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n  local -i oo\n \
    \ local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local -i tt\n  local\
    \ -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i yy\n  local -i\
    \ zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i ddd\n  local\
    \ -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local -i iii\n  local\
    \ -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local -i nnn\n  local\
    \ -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local -i sss\n  local\
    \ -i ttt\n  local -i u\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a sorted\n  local -a ones\n\
    \  local -a zeros\n  local -a result\n  local i\n  local j\n  local k\n  local\
    \ l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local\
    \ s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local\
    \ z\n  local aa\n  local bb\n  local cc\n  local dd\n  local ee\n  local ff\n\
    \  local gg\n  local hh\n  local ii\n  local jj\n  local kk\n  local ll\n  local\
    \ mm\n  local nn\n  local oo\n  local pp\n  local qq\n  local rr\n  local ss\n\
    \  local tt\n  local uu\n  local vv\n  local ww\n  local xx\n  local yy\n  local\
    \ zz\n  local aaa\n  local bbb\n  local ccc\n  local ddd\n  local eee\n  local\
    \ fff\n  local ggg\n  local hhh\n  local iii\n  local jjj\n  local kkk\n  local\
    \ lll\n  local mmm\n  local nnn\n  local ooo\n  local ppp\n  local qqq\n  local\
    \ rrr\n  local sss\n  local ttt\n  local uuu\n  local vvv\n  local www\n  local\
    \ xxx\n  local yyy\n  local zzz\n  local aaaa\n  local bbbb\n  local cccc\n  local\
    \ dddd\n  local eeee\n  local ffff\n  local gggg\n  local hhhh\n  local iiii\n\
    \  local jjjj\n  local kkkk\n  local llll\n  local mmmm\n  local nnnn\n  local\
    \ oooo\n  local pppp\n  local qqqq\n  local rrrr\n  local ssss\n  local tttt\n\
    \  local uuuu\n  local vvvv\n  local wwww\n  local xxxx\n  local yyyy\n  local\
    \ zzzz\n  local aaaaa\n  local b\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a a=($1)\n  local -a b=()\n  local -a c=()\n\
    \  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a g=()\n  local -a\
    \ h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n  local -a l=()\n \
    \ local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a p=()\n  local -a\
    \ q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n  local -a u=()\n \
    \ local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a y=()\n  local -a\
    \ z=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n  local -a ad=()\n\
    \  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local -a ah=()\n  local\
    \ -a ai=()\n  local -a aj=()\n  local -a ak=()\n  local -a al=()\n  local -a am=()\n\
    \  local -a an=()\n  local -a ao=()\n  local -a ap=()\n  local -a aq=()\n  local\
    \ -a ar=()\n  local -a as=()\n  local -a at=()\n  local -a au=()\n  local -a av=()\n\
    \  local -a aw=()\n  local -a ax=()\n  local -a ay=()\n  local -a az=()\n  local\
    \ -a ba=()\n  local -a bb=()\n  local -a bc=()\n  local -a bd=()\n  local -a be=()\n\
    \  local -a bf=()\n  local -a bg=()\n  local -a bh=()\n  local -a bi=()\n  local\
    \ -a bj=()\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a bin=()\n  local -a dec=()\n\
    \  local -a res=()\n  local -a tmp=()\n  local -i i=0\n  local -i j=0\n  local\
    \ -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n\
    \  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i iii=0\n  local\
    \ -i jjj=0\n  local -i kkk=0\n  local -i\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=(\"$@\")\n  local -a res=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  for i in \"${arr[@]}\"; do\n    if [[ \"$i\"\
    \ -lt 0 ]]; then\n      res+=(\"$i\")\n    else\n      local ones_count=$(echo\
    \ \"obase=2;$i\" | bc | grep -o 1 | wc -l)\n      if [[ \"$ones_count\" -eq 0\
    \ ]]; then\n        zeros+=(\"$i\")\n      else\n        ones+=(\"$i\")\n    \
    \  fi\n    fi\n  done\n  if [[ \"${#ones[@]}\" -gt 0 ]]; then\n    IFS=$'\\n'\
    \ sorted=($(sort -n <<<\"${ones[*]}\"))\n    unset IFS\n    res+=(\"${sorted[@]}\"\
    )\n  fi\n  if [[ \"${#zeros[@]}\" -gt 0 ]]; then\n    IFS=$'\\n' sorted=($(sort\
    \ -n <<<\"${zeros[*]}\"))\n    unset IFS\n    res+=(\"${sorted[@]}\")\n  fi\n\
    \  echo \"${res[@]}\"\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpe6s7vqad.sh: line 20: [[: 1 5 2 3 4: syntax error in expression
    (error token is "5 2 3 4")

    (standard_in) 1: syntax error

    '
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2\n  local -a arr3\n\
    \  local -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a\
    \ arr8\n  local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n\
    \  local -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local\
    \ -a arr17\n  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n\
    \  local -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local\
    \ -a arr26\n  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n\
    \  local -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local\
    \ -a arr35\n  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n\
    \  local -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local\
    \ -a arr44\n  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n\
    \  local -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local\
    \ -a arr53\n  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n\
    \  local -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local\
    \ -a arr62\n  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n\
    \  local -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local\
    \ -a arr71\n  local -a arr72\n  local -a\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a result\n  local -i i=0\n\
    \  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n\
    \  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n\
    \  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n\
    \  local -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i\
    \ cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n \
    \ local -i hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local\
    \ -i ddd=0\n  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n\
    \  local -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -i lll=0\n  local\
    \ -i mmm=0\n  local -i nnn=0\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a a=($1)\n  local -a b=()\n  local -a c=()\n\
    \  local -a d=()\n  local -a e=()\n  local -a f=()\n  local -a g=()\n  local -a\
    \ h=()\n  local -a i=()\n  local -a j=()\n  local -a k=()\n  local -a l=()\n \
    \ local -a m=()\n  local -a n=()\n  local -a o=()\n  local -a p=()\n  local -a\
    \ q=()\n  local -a r=()\n  local -a s=()\n  local -a t=()\n  local -a u=()\n \
    \ local -a v=()\n  local -a w=()\n  local -a x=()\n  local -a y=()\n  local -a\
    \ z=()\n  local -a aa=()\n  local -a ab=()\n  local -a ac=()\n  local -a ad=()\n\
    \  local -a ae=()\n  local -a af=()\n  local -a ag=()\n  local -a ah=()\n  local\
    \ -a ai=()\n  local -a aj=()\n  local -a ak=()\n  local -a al=()\n  local -a am=()\n\
    \  local -a an=()\n  local -a ao=()\n  local -a ap=()\n  local -a aq=()\n  local\
    \ -a ar=()\n  local -a as=()\n  local -a at=()\n  local -a au=()\n  local -a av=()\n\
    \  local -a aw=()\n  local -a ax=()\n  local -a ay=()\n  local -a az=()\n  local\
    \ -a ba=()\n  local -a bb=()\n  local -a bc=()\n  local -a bd=()\n  local -a be=()\n\
    \  local -a bf=()\n  local -a bg=()\n  local -a bh=()\n  local -a bi=()\n  local\
    \ -a bj=()\n \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_final=()\n  local -a arr_sorted_final_final=()\n  local -a arr_sorted_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_final_final_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a sorted\n  local -a sorted_ones\n\
    \  local -a sorted_decimal\n  local -a sorted_ones_decimal\n  local -a sorted_decimal_ones\n\
    \  local -a sorted_decimal_ones_decimal\n  local -a sorted_ones_decimal_ones\n\
    \  local -a sorted_ones_decimal_ones_decimal\n  local -a sorted_decimal_ones_decimal_ones\n\
    \  local -a sorted_decimal_ones_decimal_ones_decimal\n  local -a sorted_ones_decimal_ones_decimal_ones\n\
    \  local -a sorted_ones_decimal_ones_decimal_ones_decimal\n  local -a sorted_decimal_ones_decimal_ones_decimal_ones\n\
    \  local -a sorted_decimal_ones_decimal_ones_decimal_ones_decimal\n  local -a\
    \ sorted_ones_decimal_ones_decimal_ones_decimal_ones\n  local -a sorted_ones_decimal_ones_decimal_ones_decimal_ones_decimal\n\
    \  local -a sorted_decimal_ones_decimal_ones_decimal_ones_decimal_ones\n  local\
    \ -a sorted_decimal_ones_decimal_ones_decimal_ones_decimal_ones_decimal\n  local\
    \ -a sorted_ones_decimal_ones_decimal_ones_decimal_ones_decimal_ones\n  local\
    \ -a sorted_ones_decimal_ones_decimal_ones_decimal_ones_decimal_ones_decimal\n\
    \  local -a sorted_decimal_ones_decimal_ones_decimal_ones_decimal_ones_decimal_ones\n\
    \  local -a sorted_decimal_ones_decimal_ones_decimal_ones_decimal_ones_decimal_ones_decimal\n\
    \  local -a sorted_ones_decimal_ones_decimal_ones_decimal_ones_decimal_ones_decimal_ones\n\
    \  local -a sorted_ones_decimal_ones_decimal_ones_decimal_ones_decimal_ones_decimal_ones_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=($1)\n  local -a\
    \ arr3=($1)\n  local -a arr4=($1)\n  local -a arr5=($1)\n  local -a arr6=($1)\n\
    \  local -a arr7=($1)\n  local -a arr8=($1)\n  local -a arr9=($1)\n  local -a\
    \ arr10=($1)\n  local -a arr11=($1)\n  local -a arr12=($1)\n  local -a arr13=($1)\n\
    \  local -a arr14=($1)\n  local -a arr15=($1)\n  local -a arr16=($1)\n  local\
    \ -a arr17=($1)\n  local -a arr18=($1)\n  local -a arr19=($1)\n  local -a arr20=($1)\n\
    \  local -a arr21=($1)\n  local -a arr22=($1)\n  local -a arr23=($1)\n  local\
    \ -a arr24=($1)\n  local -a arr25=($1)\n  local -a arr26=($1)\n  local -a arr27=($1)\n\
    \  local -a arr28=($1)\n  local -a arr29=($1)\n  local -a arr30=($1)\n  local\
    \ -a arr31=($1)\n  local -a arr32=($1)\n  local -a arr33=($1)\n  local -a arr34=($1)\n\
    \  local -a arr35=($1)\n  local -a arr36=($1)\n  local -a arr37=($1)\n  local\
    \ -a arr38=($1)\n  local -a arr39=($1)\n  local -a arr40=($1)\n  local -a arr41=($1)\n\
    \  local -a arr42=($1)\n  local -a arr43=($1)\n  local -a arr44=($1)\n  local\
    \ -a arr45=($1)\n  local -a arr46=($1)\n  local -a arr47\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2\n  local -a arr3\n\
    \  local -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a\
    \ arr8\n  local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n\
    \  local -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local\
    \ -a arr17\n  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n\
    \  local -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local\
    \ -a arr26\n  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n\
    \  local -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local\
    \ -a arr35\n  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n\
    \  local -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local\
    \ -a arr44\n  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n\
    \  local -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local\
    \ -a arr53\n  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n\
    \  local -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local\
    \ -a arr62\n  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n\
    \  local -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local\
    \ -a arr71\n  local -a arr72\n  local -a\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a res=()\n  local -a ones=()\n\
    \  local -a zeros=()\n  local -a neg=()\n  local -a pos=()\n  local -a sorted=()\n\
    \  local -a sorted_neg=()\n  local -a sorted_pos=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_ones=()\n  local -a sorted_res=()\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n\
    \  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local\
    \ hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n\
    \  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local\
    \ ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n\
    \  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local\
    \ ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n\
    \  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n \
    \ local ooo=0\n  local ppp=0\n  local qqq=0\n  local\n}\n\ncandidate() {\n   \
    \ sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\"\
    ) = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\"\
    \ ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -a arr=($1)\n    local -a arr_sorted=()\n  \
    \  local -a arr_ones=()\n    local -a arr_zeros=()\n    local -a arr_neg=()\n\
    \    local -a arr_pos=()\n    local -a arr_neg_sorted=()\n    local -a arr_pos_sorted=()\n\
    \    local -a arr_sorted_final=()\n    local -a arr_sorted_final_str=()\n    local\
    \ -a arr_sorted_final_str_final=()\n    local -a arr_sorted_final_str_final_final=()\n\
    \    local -a arr_sorted_final_str_final_final_final=()\n    local -a arr_sorted_final_str_final_final_final_final=()\n\
    \    local -a arr_sorted_final_str_final_final_final_final_final=()\n    local\
    \ -a arr_sorted_final_str_final_final_final_final_final_final=()\n    local -a\
    \ arr_sorted_final_str_final_final_final_final_final_final_final=()\n    local\
    \ -a arr_sorted_final_str_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_final_str_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_final_str_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_final_str_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_final_str_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_final_str_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a arr_sorted_final_str_final_final_final\n}\n\ncandidate() {\n   \
    \ sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\"\
    ) = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\"\
    \ ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate\
    \ \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4\
    \ 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12\
    \ 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a sorted=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a result=()\n  local i=0\n  local j=0\n\
    \  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local p=0\n\
    \  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local v=0\n\
    \  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local bb=0\n\
    \  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n  local\
    \ hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local mm=0\n\
    \  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n  local\
    \ ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local xx=0\n\
    \  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n  local\
    \ ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n  local iii=0\n\
    \  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local nnn=0\n \
    \ local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n  local\
    \ ttt=0\n  local uuu=0\n  local vvv=0\n  local www=0\n  local xxx=0\n  local yyy=0\n\
    \  local zzz=0\n  local aaaa=0\n\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a sorted=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a result=()\n  local -i i=0\n  local\
    \ -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local\
    \ -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local\
    \ -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local\
    \ -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n\
    \  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i\
    \ hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n \
    \ local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i\
    \ qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n \
    \ local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i\
    \ zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n\
    \  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local\
    \ -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a new_arr=()\n  local -a\
    \ ones_arr=()\n  local -a zeros_arr=()\n  local -a temp_arr=()\n  local -a temp_arr2=()\n\
    \  local -a temp_arr3=()\n  local -a temp_arr4=()\n  local -a temp_arr5=()\n \
    \ local -a temp_arr6=()\n  local -a temp_arr7=()\n  local -a temp_arr8=()\n  local\
    \ -a temp_arr9=()\n  local -a temp_arr10=()\n  local -a temp_arr11=()\n  local\
    \ -a temp_arr12=()\n  local -a temp_arr13=()\n  local -a temp_arr14=()\n  local\
    \ -a temp_arr15=()\n  local -a temp_arr16=()\n  local -a temp_arr17=()\n  local\
    \ -a temp_arr18=()\n  local -a temp_arr19=()\n  local -a temp_arr20=()\n  local\
    \ -a temp_arr21=()\n  local -a temp_arr22=()\n  local -a temp_arr23=()\n  local\
    \ -a temp_arr24=()\n  local -a temp_arr25=()\n  local -a temp_arr26=()\n  local\
    \ -a temp_arr27=()\n  local -a temp_arr28=()\n  local -a temp_arr29=()\n  local\
    \ -a temp_arr30=()\n  local -a temp_arr31=()\n  local -a temp_arr32=()\n  local\
    \ -a temp_arr33=()\n  local -a temp_arr34=()\n  local -a temp_arr35=()\n  local\
    \ -a temp_arr36=()\n  local -a temp_arr37=()\n  local -a temp_arr38=()\n  local\
    \ -a temp_arr39=()\n  local -a temp_arr40=()\n  local -a temp_arr41=()\n  local\
    \ -a temp_arr42=()\n  local -a temp_arr43=\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_ones=()\n  local -a arr_zeros=()\n  local -a arr_neg=()\n  local -a arr_pos=()\n\
    \  local -a arr_neg_sorted=()\n  local -a arr_pos_sorted=()\n  local -a arr_neg_ones=()\n\
    \  local -a arr_neg_zeros=()\n  local -a arr_pos_ones=()\n  local -a arr_pos_zeros=()\n\
    \  local -a arr_neg_ones_sorted=()\n  local -a arr_neg_zeros_sorted=()\n  local\
    \ -a arr_pos_ones_sorted=()\n  local -a arr_pos_zeros_sorted=()\n  local -a arr_neg_ones_sorted_dec=()\n\
    \  local -a arr_neg_zeros_sorted_dec=()\n  local -a arr_pos_ones_sorted_dec=()\n\
    \  local -a arr_pos_zeros_sorted_dec=()\n  local -a arr_neg_ones_sorted_dec_sorted=()\n\
    \  local -a arr_neg_zeros_sorted_dec_sorted=()\n  local -a arr_pos_ones_sorted_dec_sorted=()\n\
    \  local -a arr_pos_zeros_sorted_dec_sorted=()\n  local -a arr_neg_ones_sorted_dec_sorted_sorted=()\n\
    \  local -a arr_neg_zeros_sorted_dec_sorted_sorted=()\n  local -a arr_pos_ones_sorted_dec_sorted_sorted=()\n\
    \  local -a arr_pos_zeros_sorted_dec_sorted_sorted=()\n  local -a arr_neg_ones_sorted_dec_sorted_sorted_sorted=()\n\
    \  local -a arr_neg_zeros_sorted_dec_sorted_sorted_sorted=()\n  local -a arr_pos_ones_sorted\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_ones=()\n  local -a arr_sorted_dec=()\n  local -a arr_sorted_ones_dec=()\n\
    \  local -a arr_sorted_final=()\n  local -a arr_sorted_ones_dec_final=()\n  local\
    \ -a arr_sorted_final_final=()\n  local -a arr_sorted_ones_dec_final_final=()\n\
    \  local -a arr_sorted_final_final_final=()\n  local -a arr_sorted_ones_dec_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final=()\n  local -a arr_sorted_ones_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final=()\n  local -a arr_sorted_ones_dec_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final=()\n  local -a arr_sorted_ones_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final=()\n  local -a\
    \ arr_sorted_ones_dec_final_final_final_final_final_final_final=()\n  local -a\
    \ arr_sorted_final_final_final_final_final_final_final_final=()\n  local -a arr_sorted_ones_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_sorted=()\n  local -a arr_sorted_bin_dec_sorted_dec=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted=()\n  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec=()\n  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec=()\n  local\
    \ -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted=()\n  local\
    \ -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin=()\n \
    \ local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted=()\n\
    \  local -a arr_sorted_bin_dec_sorted_dec_sorted_bin_dec_sorted_dec_sorted\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_ones=()\n  local -a arr_zeros=()\n  local -a arr_neg=()\n  local -a arr_pos=()\n\
    \  local -a arr_neg_sorted=()\n  local -a arr_pos_sorted=()\n  local -a arr_sorted_final=()\n\
    \  local i=0\n  local j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n\
    \  local o=0\n  local p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n\
    \  local u=0\n  local v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n\
    \  local aa=0\n  local bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local\
    \ ff=0\n  local gg=0\n  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n\
    \  local ll=0\n  local mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local\
    \ qq=0\n  local rr=0\n  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n\
    \  local ww=0\n  local xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local\
    \ bbb=0\n  local ccc=0\n  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n\
    \  local hhh=0\n  local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n \
    \ local mmm=0\n  local nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local\
    \ rrr=0\n  local sss\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2\n  for i in \"${arr[@]}\"\
    ; do\n    arr2+=(\"$(printf \"%s %s\" \"$(printf \"%d\" \"$i\" | grep -o 1 | wc\
    \ -l)\" \"$i\")\")\n  done\n  IFS=$'\\n' sorted=($(sort <<<\"${arr2[*]}\"))\n\
    \  unset IFS\n  local -a arr3\n  for i in \"${sorted[@]}\"; do\n    arr3+=(\"\
    $(echo \"$i\" | cut -d' ' -f2)\")\n  done\n  echo \"${arr3[@]}\"\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a result=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_result=()\n  local -i i=0\n  local -i j=0\n  local -i k=0\n\
    \  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local -i p=0\n\
    \  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local -i u=0\n\
    \  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local -i z=0\n\
    \  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i\
    \ ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i ii=0\n \
    \ local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i\
    \ nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n \
    \ local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i\
    \ ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aaa=0\n\
    \  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n  local -i eee=0\n  local\
    \ -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local -i\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -a array=($1)\n    local -a result=()\n    local\
    \ -a ones=()\n    local -a zeros=()\n    local -a sorted=()\n    local -a sorted_ones=()\n\
    \    local -a sorted_zeros=()\n    local -a sorted_result=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local aa=0\n    local bb=0\n    local cc=0\n \
    \   local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local ii=0\n    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n\
    \    local nn=0\n    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n\
    \    local ss=0\n    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n\
    \    local xx=0\n    local yy=0\n    local zz=0\n    local aaa=0\n    local bbb=0\n\
    \    local ccc=0\n    local ddd=0\n    local eee=0\n    local fff=0\n    local\
    \ ggg=0\n    local hhh=0\n    local iii=0\n    local jjj=0\n    local kkk=0\n\
    \    local lll=0\n    local mmm=0\n    local nnn=0\n    local ooo=0\n    local\
    \ ppp=0\n    local qqq=0\n    local rrr=0\n    local sss=0\n    local ttt=0\n\
    \    local uuu=0\n    local vvv=0\n    local www\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_ones=()\n  local -a arr_sorted_dec=()\n  local -a arr_sorted_final=()\n\
    \  local -a arr_sorted_final_str=()\n  local -a arr_sorted_final_str_quoted=()\n\
    \  local -a arr_sorted_final_str_quoted_joined=()\n  local -a arr_sorted_final_str_quoted_joined_str=()\n\
    \  local -a arr_sorted_final_str_quoted_joined_str_quoted=()\n  local -a arr_sorted_final_str_quoted_joined_str_quoted_joined=()\n\
    \  local -a arr_sorted_final_str_quoted_joined_str_quoted_joined_str=()\n  local\
    \ -a arr_sorted_final_str_quoted_joined_str_quoted_joined_str_quoted=()\n  local\
    \ -a arr_sorted_final_str_quoted_joined_str_quoted_joined_str_quoted_joined=()\n\
    \  local -a arr_sorted_final_str_quoted_joined_str_quoted_joined_str_quoted_joined_str=()\n\
    \  local -a arr_sorted_final_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted=()\n\
    \  local -a arr_sorted_final_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined=()\n\
    \  local -a arr_sorted_final_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str=()\n\
    \  local -a arr_sorted_final_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted_joined_str_quoted=()\n\
    \  local -a arr_sorted_final_str_quoted_joined_str_quoted_joined\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a sorted=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a negs=()\n  local -a pos=()\n  local\
    \ -a neg=()\n  local -a result=()\n  local -i i=0\n  local -i j=0\n  local -i\
    \ k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i a=0\n  local -i b=0\n  local -i c=0\n  local -i d=0\n  local\
    \ -i e=0\n  local -i f=0\n  local -i g=0\n  local -i h=0\n  local -i ii=0\n  local\
    \ -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n  local -i nn=0\n\
    \  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i rr=0\n  local -i\
    \ ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n  local -i ww=0\n \
    \ local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i aa=0\n  local -i\
    \ bb=0\n  local -i cc=0\n  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n \
    \ local -i gg=0\n  local -i hh=0\n  local -i iii=0\n  local\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a sorted\n  local -a ones\n\
    \  local -a zeros\n  local -a sorted_ones\n  local -a sorted_zeros\n  local -a\
    \ result\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n \
    \ local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n\
    \  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local bb\n\
    \  local cc\n  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n  local\
    \ ii\n  local jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local oo\n\
    \  local pp\n  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n  local\
    \ vv\n  local ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local bbb\n\
    \  local ccc\n  local ddd\n  local eee\n  local fff\n  local ggg\n  local hhh\n\
    \  local iii\n  local jjj\n  local kkk\n  local lll\n  local mmm\n  local nnn\n\
    \  local ooo\n  local ppp\n  local qqq\n  local rrr\n  local sss\n  local ttt\n\
    \  local uuu\n  local vvv\n  local www\n  local xxx\n  local yyy\n  local zzz\n\
    \  local aaaa\n  local bbbb\n  local cccc\n  local dddd\n  local eeee\n  local\
    \ ffff\n  local gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local kkkk\n\
    \  local llll\n  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n  local\
    \ qqqq\n  local rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local vvvv\n\
    \  local wwww\n  local xxxx\n  local y\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a sorted=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  for i in \"${arr[@]}\"; do\n    if [[ $i -lt\
    \ 0 ]]; then\n      sorted+=(\"$i\")\n    else\n      local -i ones_count=$(echo\
    \ \"obase=2;$i\" | bc | grep -o 1 | wc -l)\n      if [[ $ones_count -eq 0 ]];\
    \ then\n        zeros+=(\"$i\")\n      else\n        ones+=(\"$i\")\n      fi\n\
    \    fi\n  done\n  local -a sorted_ones=($(printf \"%s\\n\" \"${ones[@]}\" | sort\
    \ -n))\n  local -a sorted_zeros=($(printf \"%s\\n\" \"${zeros[@]}\" | sort -n))\n\
    \  local -a sorted_arr=($(printf \"%s\\n\" \"${sorted[@]}\" \"${sorted_zeros[@]}\"\
    \ \"${sorted_ones[@]}\" | sort -n))\n  echo \"${sorted_arr[@]}\"\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -a arr=($1)\n    local -a bin_arr=()\n    local\
    \ -a bin_arr_sorted=()\n    local -a bin_arr_sorted_dec=()\n    local -a bin_arr_sorted_dec_sorted=()\n\
    \    local -a bin_arr_sorted_dec_sorted_final=()\n    local -a bin_arr_sorted_dec_sorted_final_final=()\n\
    \    local -a bin_arr_sorted_dec_sorted_final_final_final=()\n    local -a final_arr=()\n\
    \    local -a final_arr_final=()\n    local -a final_arr_final_final=()\n    local\
    \ -a final_arr_final_final_final=()\n    local -a final_arr_final_final_final_final=()\n\
    \    local -a final_arr_final_final_final_final_final=()\n    local -a final_arr_final_final_final_final_final_final=()\n\
    \    local -a final_arr_final_final_final_final_final_final_final=()\n    local\
    \ -a final_arr_final_final_final_final_final_final_final_final=()\n    local -a\
    \ final_arr_final_final_final_final_final_final_final_final_final=()\n    local\
    \ -a final_arr_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a final_arr_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a final_arr_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a final_arr_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a final_arr_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a final_arr_final_final_final_final_final_final\n}\n\ncandidate()\
    \ {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1\
    \ 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4\
    \ -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n   \
    \ [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\"\
    ) = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=()\n  local -a sorted=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a result=()\n  local -i i=0\n  local\
    \ -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local\
    \ -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local\
    \ -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local\
    \ -i y=0\n  local -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n\
    \  local -i dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i\
    \ hh=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n \
    \ local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i\
    \ qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n \
    \ local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i\
    \ zz=0\n  local -i aaa=0\n  local -i bbb=0\n  local -i ccc=0\n  local -i ddd=0\n\
    \  local -i eee=0\n  local -i fff=0\n  local -i ggg=0\n  local -i hhh=0\n  local\
    \ -i iii=0\n  local -i jjj=0\n  local -i kkk=0\n  local -\n}\n\ncandidate() {\n\
    \    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2\
    \ 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2\
    \ -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[\
    \ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\")\
    \ = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"\
    32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a res=()\n  local -a ones=()\n\
    \  local -a zeros=()\n  local -a neg=()\n  local -a pos=()\n  local -a tmp=()\n\
    \  local -a tmp2=()\n  local -a tmp3=()\n  local -a tmp4=()\n  local -a tmp5=()\n\
    \  local -a tmp6=()\n  local -a tmp7=()\n  local -a tmp8=()\n  local -a tmp9=()\n\
    \  local -a tmp10=()\n  local -a tmp11=()\n  local -a tmp12=()\n  local -a tmp13=()\n\
    \  local -a tmp14=()\n  local -a tmp15=()\n  local -a tmp16=()\n  local -a tmp17=()\n\
    \  local -a tmp18=()\n  local -a tmp19=()\n  local -a tmp20=()\n  local -a tmp21=()\n\
    \  local -a tmp22=()\n  local -a tmp23=()\n  local -a tmp24=()\n  local -a tmp25=()\n\
    \  local -a tmp26=()\n  local -a tmp27=()\n  local -a tmp28=()\n  local -a tmp29=()\n\
    \  local -a tmp30=()\n  local -a tmp31=()\n  local -a tmp32=()\n  local -a tmp33=()\n\
    \  local -a tmp34=()\n  local -a tmp35=()\n  local -a tmp36=()\n  local -a tmp37=()\n\
    \  local -a tmp38=()\n  local -a tmp39=()\n  local -a tmp40=()\n  local -a tmp41=()\n\
    \  local -a tmp42=()\n  local -a tmp43=()\n  local -a tmp44=()\n  local -a tmp45=()\n\
    \  local -a tmp46=()\n  local -a tmp47=()\n  local -a tmp48=()\n  local -a tmp49=()\n\
    \  local -a tmp50=()\n  local -a tmp51=()\n  local\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_ones=()\n  local -a\
    \ arr_dec=()\n  local -a arr_sorted=()\n  local -a arr_sorted_ones=()\n  local\
    \ -a arr_sorted_dec=()\n  local -a arr_sorted_final=()\n  local -a arr_sorted_final_dec=()\n\
    \  local -a arr_sorted_final_ones=()\n  local -a arr_sorted_final_ones_dec=()\n\
    \  local -a arr_sorted_final_dec_ones=()\n  local -a arr_sorted_final_dec_ones_dec=()\n\
    \  local -a arr_sorted_final_ones_dec_dec=()\n  local -a arr_sorted_final_ones_dec_ones=()\n\
    \  local -a arr_sorted_final_dec_ones_dec_ones=()\n  local -a arr_sorted_final_dec_ones_ones_dec=()\n\
    \  local -a arr_sorted_final_dec_ones_ones_dec_dec=()\n  local -a arr_sorted_final_dec_ones_ones_dec_ones=()\n\
    \  local -a arr_sorted_final_dec_ones_ones_ones_dec=()\n  local -a arr_sorted_final_dec_ones_ones_ones_dec_dec=()\n\
    \  local -a arr_sorted_final_dec_ones_ones_ones_dec_ones=()\n  local -a arr_sorted_final_dec_ones_ones_ones_ones_dec=()\n\
    \  local -a arr_sorted_final_dec_ones_ones_ones_ones_dec_dec=()\n  local -a arr_sorted_final_dec_ones_ones_ones_ones_dec_ones=()\n\
    \  local -a arr_sorted_final_dec_ones_ones_ones_ones_ones_dec=()\n  local -a arr_sorted_final_dec_ones_ones_ones_ones_ones_dec_dec=()\n\
    \  local -a arr_sorted_final_dec_ones_ones\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a sorted\n  local -a ones\n\
    \  local -a zeros\n  local i\n  local j\n  local k\n  local l\n  local m\n  local\
    \ n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local\
    \ u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local aa\n  local\
    \ bb\n  local cc\n  local dd\n  local ee\n  local ff\n  local gg\n  local hh\n\
    \  local ii\n  local jj\n  local kk\n  local ll\n  local mm\n  local nn\n  local\
    \ oo\n  local pp\n  local qq\n  local rr\n  local ss\n  local tt\n  local uu\n\
    \  local vv\n  local ww\n  local xx\n  local yy\n  local zz\n  local aaa\n  local\
    \ bbb\n  local ccc\n  local ddd\n  local eee\n  local fff\n  local ggg\n  local\
    \ hhh\n  local iii\n  local jjj\n  local kkk\n  local lll\n  local mmm\n  local\
    \ nnn\n  local ooo\n  local ppp\n  local qqq\n  local rrr\n  local sss\n  local\
    \ ttt\n  local uuu\n  local vvv\n  local www\n  local xxx\n  local yyy\n  local\
    \ zzz\n  local aaaa\n  local bbbb\n  local cccc\n  local dddd\n  local eeee\n\
    \  local ffff\n  local gggg\n  local hhhh\n  local iiii\n  local jjjj\n  local\
    \ kkkk\n  local llll\n  local mmmm\n  local nnnn\n  local oooo\n  local pppp\n\
    \  local qqqq\n  local rrrr\n  local ssss\n  local tttt\n  local uuuu\n  local\
    \ vvvv\n  local wwww\n  local xxxx\n  local yyyy\n  local zzzz\n  local aaaaa\n\
    \  local bbbbb\n  local c\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n   \
    \ [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted\n  local -a\
    \ arr_ones\n  local -a arr_zeros\n  local -a arr_neg\n  local -a arr_pos\n  local\
    \ -a arr_neg_sorted\n  local -a arr_pos_sorted\n  local -a arr_sorted_ones\n \
    \ local -a arr_sorted_zeros\n  local -a arr_sorted_neg\n  local -a arr_sorted_pos\n\
    \  local -a arr_sorted_neg_sorted\n  local -a arr_sorted_pos_sorted\n  local -a\
    \ arr_sorted_ones_sorted\n  local -a arr_sorted_zeros_sorted\n  local -a arr_sorted_neg_sorted_sorted\n\
    \  local -a arr_sorted_pos_sorted_sorted\n  local -a arr_sorted_ones_sorted_sorted\n\
    \  local -a arr_sorted_zeros_sorted_sorted\n  local -a arr_sorted_neg_sorted_sorted_sorted\n\
    \  local -a arr_sorted_pos_sorted_sorted_sorted\n  local -a arr_sorted_ones_sorted_sorted_sorted\n\
    \  local -a arr_sorted_zeros_sorted_sorted_sorted\n  local -a arr_sorted_neg_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted_pos_sorted_sorted_sorted_sorted\n  local -a arr_sorted_ones_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted_zeros_sorted_sorted_sorted_sorted\n  local -a arr_sorted_neg_sorted_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted_pos_sorted_sorted_sorted_sorted_sorted\n  local -a arr_sorted_ones_sorted_sorted_sorted_sorted_sorted\n\
    \  local -a arr_sorted_zeros_sorted\n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019314
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a ones\n  local -a zeros\n\
    \  local -a result\n  local i\n  local j\n  local k\n  local -i n\n  local -i\
    \ m\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n  local -i t\n  local\
    \ -i u\n  local -i v\n  local -i w\n  local -i x\n  local -i y\n  local -i z\n\
    \  local -i a\n  local -i b\n  local -i c\n  local -i d\n  local -i e\n  local\
    \ -i f\n  local -i g\n  local -i h\n  local -i l\n  local -i o\n  local -i tmp\n\
    \  local -i tmp2\n  local -i tmp3\n  local -i tmp4\n  local -i tmp5\n  local -i\
    \ tmp6\n  local -i tmp7\n  local -i tmp8\n  local -i tmp9\n  local -i tmp10\n\
    \  local -i tmp11\n  local -i tmp12\n  local -i tmp13\n  local -i tmp14\n  local\
    \ -i tmp15\n  local -i tmp16\n  local -i tmp17\n  local -i tmp18\n  local -i tmp19\n\
    \  local -i tmp20\n  local -i tmp21\n  local -i tmp22\n  local -i tmp23\n  local\
    \ -i tmp24\n  local -i tmp25\n  local -i tmp26\n  local -i tmp27\n  local -i tmp28\n\
    \  local -i tmp29\n  local -i tmp30\n  local -i tmp31\n  local -i tmp32\n  local\
    \ -i tmp33\n  local -i tmp34\n  local -i tmp35\n  local -i tmp36\n  local -i tmp37\n\
    \  local -i tmp38\n  local -i tmp39\n  local -i tmp40\n  local -i tmp41\n  local\
    \ -i tmp42\n  local -i tmp43\n  local -i tmp44\n  local -i tmp45\n  local -i tmp46\n\
    \  local -i tmp47\n  local -i\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n \
    \   [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_ones=()\n  local -a arr_zeros=()\n  local -a arr_neg=()\n  local -a arr_pos=()\n\
    \  local -a arr_neg_sorted=()\n  local -a arr_pos_sorted=()\n  local -a arr_sorted_final=()\n\
    \  local -a arr_sorted_final_str=()\n  local -i i=0\n  local -i j=0\n  local -i\
    \ k=0\n  local -i l=0\n  local -i m=0\n  local -i n=0\n  local -i o=0\n  local\
    \ -i p=0\n  local -i q=0\n  local -i r=0\n  local -i s=0\n  local -i t=0\n  local\
    \ -i u=0\n  local -i v=0\n  local -i w=0\n  local -i x=0\n  local -i y=0\n  local\
    \ -i z=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i dd=0\n\
    \  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n  local -i\
    \ ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i ll=0\n  local -i mm=0\n \
    \ local -i nn=0\n  local -i oo=0\n  local -i pp=0\n  local -i qq=0\n  local -i\
    \ rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i uu=0\n  local -i vv=0\n \
    \ local -i ww=0\n  local -i xx=0\n  local -i yy=0\n  local -i zz=0\n  local -i\
    \ aaa=0\n  local -i bbb=0\n  local -i ccc=0\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_ones=()\n  local -a\
    \ arr_dec=()\n  local -a arr_sorted=()\n  local -a arr_sorted_ones=()\n  local\
    \ -a arr_sorted_dec=()\n  local -a arr_sorted_final=()\n  local -a arr_sorted_final_dec=()\n\
    \  local -a arr_sorted_final_ones=()\n  local -a arr_sorted_final_ones_dec=()\n\
    \  local -a arr_sorted_final_dec_ones=()\n  local -a arr_sorted_final_dec_ones_dec=()\n\
    \  local -a arr_sorted_final_ones_dec_dec=()\n  local -a arr_sorted_final_ones_dec_ones=()\n\
    \  local -a arr_sorted_final_dec_ones_dec_ones=()\n  local -a arr_sorted_final_dec_ones_ones_dec=()\n\
    \  local -a arr_sorted_final_dec_ones_ones_dec_ones=()\n  local -a arr_sorted_final_dec_ones_ones_dec_ones_dec=()\n\
    \  local -a arr_sorted_final_dec_ones_ones_dec_ones_dec_ones=()\n  local -a arr_sorted_final_dec_ones_ones_dec_ones_dec_ones_dec=()\n\
    \  local -a arr_sorted_final_dec_ones_ones_dec_ones_dec_ones_dec_ones=()\n  local\
    \ -a arr_sorted_final_dec_ones_ones_dec_ones_dec_ones_dec_ones_dec=()\n  local\
    \ -a arr_sorted_final_dec_ones_ones_dec_ones_dec_ones_dec_ones_dec_ones=()\n \
    \ local -a arr_sorted_final_dec_ones_ones_dec_ones_dec_ones_dec_ones_dec_ones_dec=()\n\
    \  local -a arr_sorted_final_dec_ones_ones_dec_ones_dec_ones_dec_ones_dec\n}\n\
    \ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr\n  local -a arr2\n  local -a arr3\n  local\
    \ -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a arr8\n\
    \  local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n  local\
    \ -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local -a arr17\n\
    \  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n  local\
    \ -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local -a arr26\n\
    \  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n  local\
    \ -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local -a arr35\n\
    \  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n  local\
    \ -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local -a arr44\n\
    \  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n  local\
    \ -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local -a arr53\n\
    \  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n  local\
    \ -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local -a arr62\n\
    \  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n  local\
    \ -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local -a arr71\n\
    \  local -a arr72\n  local -a arr73\n \n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -a array=($1)\n    local -a result=()\n    local\
    \ -a ones=()\n    local -a zeros=()\n    local -a temp=()\n    local -a temp2=()\n\
    \    local -a temp3=()\n    local -a temp4=()\n    local -a temp5=()\n    local\
    \ -a temp6=()\n    local -a temp7=()\n    local -a temp8=()\n    local -a temp9=()\n\
    \    local -a temp10=()\n    local -a temp11=()\n    local -a temp12=()\n    local\
    \ -a temp13=()\n    local -a temp14=()\n    local -a temp15=()\n    local -a temp16=()\n\
    \    local -a temp17=()\n    local -a temp18=()\n    local -a temp19=()\n    local\
    \ -a temp20=()\n    local -a temp21=()\n    local -a temp22=()\n    local -a temp23=()\n\
    \    local -a temp24=()\n    local -a temp25=()\n    local -a temp26=()\n    local\
    \ -a temp27=()\n    local -a temp28=()\n    local -a temp29=()\n    local -a temp30=()\n\
    \    local -a temp31=()\n    local -a temp32=()\n    local -a temp33=()\n    local\
    \ -a temp34=()\n    local -a temp35=()\n    local -a temp36=()\n    local -a temp37=()\n\
    \    local -a temp38=()\n    local -a temp39=()\n    local -a temp40=()\n    local\
    \ -a temp41=()\n    local -a temp42=()\n    local -a temp43=()\n    local -a temp44=()\n\
    \    local -a temp45=()\n    local -a temp46=()\n    local -a temp47=()\n    local\
    \ -a temp48=()\n    local -a temp49=()\n    local -a temp50=()\n    local -a temp51=()\n\
    \    local -a temp52=()\n    local -a temp53=()\n\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a res\n  local -i i j\n\
    \  for ((i=0; i<${#arr[@]}; i++)); do\n    res[i]=$(printf \"%d %s\" \"$(echo\
    \ \"obase=2;${arr[i]}\" | bc)\" \"${arr[i]}\")\n  done\n  for ((i=0; i<${#res[@]};\
    \ i++)); do\n    for ((j=i+1; j<${#res[@]}; j++)); do\n      if [[ ${res[i]} >\
    \ ${res[j]} ]]; then\n        local tmp=${res[i]}\n        res[i]=${res[j]}\n\
    \        res[j]=$tmp\n      fi\n    done\n  done\n  for ((i=0; i<${#res[@]}; i++));\
    \ do\n    res[i]=$(echo ${res[i]} | cut -d' ' -f2)\n  done\n  echo ${res[@]}\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a ones\n  local -a zeros\n\
    \  local -a result\n  local i\n  local j\n  local k\n  local n\n  local m\n  local\
    \ p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local\
    \ w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local c\n  local\
    \ d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local j\n  local\
    \ k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local q\n  local\
    \ r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local x\n  local\
    \ y\n  local z\n  local a\n  local b\n  local c\n  local d\n  local e\n  local\
    \ f\n  local g\n  local h\n  local i\n  local j\n  local k\n  local l\n  local\
    \ m\n  local n\n  local o\n  local p\n  local q\n  local r\n  local s\n  local\
    \ t\n  local u\n  local v\n  local w\n  local x\n  local y\n  local z\n  local\
    \ a\n  local b\n  local c\n  local d\n  local e\n  local f\n  local g\n  local\
    \ h\n  local i\n  local j\n  local k\n  local l\n  local m\n  local n\n  local\
    \ o\n  local p\n  local q\n  local r\n  local s\n  local t\n  local u\n  local\
    \ v\n  local w\n  local x\n  local y\n  local z\n  local a\n  local b\n  local\
    \ c\n  local d\n  local e\n  local f\n  local g\n  local h\n  local i\n  local\
    \ j\n  local k\n  local l\n  local m\n  local n\n  local o\n  local p\n  local\
    \ q\n  local r\n  local s\n  local t\n  local u\n  local v\n  local w\n  local\
    \ x\n  local y\n  local z\n  local\n}\n\ncandidate() {\n    sort_array \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_bin=()\n  local -a arr_sorted_dec=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr2\n  local -a arr3\n\
    \  local -a arr4\n  local -a arr5\n  local -a arr6\n  local -a arr7\n  local -a\
    \ arr8\n  local -a arr9\n  local -a arr10\n  local -a arr11\n  local -a arr12\n\
    \  local -a arr13\n  local -a arr14\n  local -a arr15\n  local -a arr16\n  local\
    \ -a arr17\n  local -a arr18\n  local -a arr19\n  local -a arr20\n  local -a arr21\n\
    \  local -a arr22\n  local -a arr23\n  local -a arr24\n  local -a arr25\n  local\
    \ -a arr26\n  local -a arr27\n  local -a arr28\n  local -a arr29\n  local -a arr30\n\
    \  local -a arr31\n  local -a arr32\n  local -a arr33\n  local -a arr34\n  local\
    \ -a arr35\n  local -a arr36\n  local -a arr37\n  local -a arr38\n  local -a arr39\n\
    \  local -a arr40\n  local -a arr41\n  local -a arr42\n  local -a arr43\n  local\
    \ -a arr44\n  local -a arr45\n  local -a arr46\n  local -a arr47\n  local -a arr48\n\
    \  local -a arr49\n  local -a arr50\n  local -a arr51\n  local -a arr52\n  local\
    \ -a arr53\n  local -a arr54\n  local -a arr55\n  local -a arr56\n  local -a arr57\n\
    \  local -a arr58\n  local -a arr59\n  local -a arr60\n  local -a arr61\n  local\
    \ -a arr62\n  local -a arr63\n  local -a arr64\n  local -a arr65\n  local -a arr66\n\
    \  local -a arr67\n  local -a arr68\n  local -a arr69\n  local -a arr70\n  local\
    \ -a arr71\n  local -a arr72\n  local -a\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -a arr=($1)\n    local -a arr_sorted\n    local\
    \ -a arr_ones\n    local -a arr_zeros\n    local -a arr_neg\n    local -a arr_pos\n\
    \    local -a arr_sorted_neg\n    local -a arr_sorted_pos\n    local -a arr_sorted_zeros\n\
    \    local -a arr_sorted_ones\n    local -a arr_sorted_all\n    local -a arr_sorted_all_str\n\
    \    local -a arr_sorted_all_str_quoted\n    local -a arr_sorted_all_str_quoted_comma\n\
    \    local -a arr_sorted_all_str_quoted_comma_brackets\n    local -a arr_sorted_all_str_quoted_comma_brackets_str\n\
    \    local -a arr_sorted_all_str_quoted_comma_brackets_str_quoted\n    local -a\
    \ arr_sorted_all_str_quoted_comma_brackets_str_quoted_comma\n    local -a arr_sorted_all_str_quoted_comma_brackets_str_quoted_comma_brackets\n\
    \    local -a arr_sorted_all_str_quoted_comma_brackets_str_quoted_comma_brackets_str\n\
    \    local -a arr_sorted_all_str_quoted_comma_brackets_str_quoted_comma_brackets_str_quoted\n\
    \    local -a arr_sorted_all_str_quoted_comma_brackets_str_quoted_comma_brackets_str_quoted_comma\n\
    \    local -a arr_sorted_all_str_quoted_comma_brackets_str_quoted_comma_brackets_str_quoted_comma_brackets\n\
    \    local -a arr_sorted_all_str_quoted_comma_brackets_str_quoted_comma_brackets_str_quoted_comma_brackets_str\n\
    \    local -a arr_sorted_all_str_quoted\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n    local -a arr=()\n    local -a arr2=()\n    local -a\
    \ arr3=()\n    local -a arr4=()\n    local -a arr5=()\n    local -a arr6=()\n\
    \    local -a arr7=()\n    local -a arr8=()\n    local -a arr9=()\n    local -a\
    \ arr10=()\n    local -a arr11=()\n    local -a arr12=()\n    local -a arr13=()\n\
    \    local -a arr14=()\n    local -a arr15=()\n    local -a arr16=()\n    local\
    \ -a arr17=()\n    local -a arr18=()\n    local -a arr19=()\n    local -a arr20=()\n\
    \    local -a arr21=()\n    local -a arr22=()\n    local -a arr23=()\n    local\
    \ -a arr24=()\n    local -a arr25=()\n    local -a arr26=()\n    local -a arr27=()\n\
    \    local -a arr28=()\n    local -a arr29=()\n    local -a arr30=()\n    local\
    \ -a arr31=()\n    local -a arr32=()\n    local -a arr33=()\n    local -a arr34=()\n\
    \    local -a arr35=()\n    local -a arr36=()\n    local -a arr37=()\n    local\
    \ -a arr38=()\n    local -a arr39=()\n    local -a arr40=()\n    local -a arr41=()\n\
    \    local -a arr42=()\n    local -a arr43=()\n    local -a arr44=()\n    local\
    \ -a arr45=()\n    local -a arr46=()\n    local -a arr47=()\n    local -a arr48=()\n\
    \    local -a arr49=()\n    local -a arr50=()\n    local -a arr51=()\n    local\
    \ -a arr52=()\n    local -a arr53=()\n    local -a arr54=()\n    local -a arr55=()\n\
    \    local -a arr56=()\n    local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array=($1)\n  local -a result=()\n  local -a\
    \ ones=()\n  local -a zeros=()\n  local -a sorted_ones=()\n  local -a sorted_zeros=()\n\
    \  local -a sorted_array=()\n  local -a sorted_result=()\n  local i=0\n  local\
    \ j=0\n  local k=0\n  local l=0\n  local m=0\n  local n=0\n  local o=0\n  local\
    \ p=0\n  local q=0\n  local r=0\n  local s=0\n  local t=0\n  local u=0\n  local\
    \ v=0\n  local w=0\n  local x=0\n  local y=0\n  local z=0\n  local aa=0\n  local\
    \ bb=0\n  local cc=0\n  local dd=0\n  local ee=0\n  local ff=0\n  local gg=0\n\
    \  local hh=0\n  local ii=0\n  local jj=0\n  local kk=0\n  local ll=0\n  local\
    \ mm=0\n  local nn=0\n  local oo=0\n  local pp=0\n  local qq=0\n  local rr=0\n\
    \  local ss=0\n  local tt=0\n  local uu=0\n  local vv=0\n  local ww=0\n  local\
    \ xx=0\n  local yy=0\n  local zz=0\n  local aaa=0\n  local bbb=0\n  local ccc=0\n\
    \  local ddd=0\n  local eee=0\n  local fff=0\n  local ggg=0\n  local hhh=0\n \
    \ local iii=0\n  local jjj=0\n  local kkk=0\n  local lll=0\n  local mmm=0\n  local\
    \ nnn=0\n  local ooo=0\n  local ppp=0\n  local qqq=0\n  local rrr=0\n  local sss=0\n\
    \  local ttt=0\n  local uuu=0\n  local vvv=0\n \n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array\n  local -a sorted\n  local -a result\n\
    \  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local -i m\n  local\
    \ -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n  local -i s\n\
    \  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local -i x\n  local\
    \ -i y\n  local -i z\n  local -i aa\n  local -i bb\n  local -i cc\n  local -i\
    \ dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i ii\n\
    \  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i nn\n \
    \ local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n  local\
    \ -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n  local -i\
    \ yy\n  local -i zz\n  local -i aaa\n  local -i bbb\n  local -i ccc\n  local -i\
    \ ddd\n  local -i eee\n  local -i fff\n  local -i ggg\n  local -i hhh\n  local\
    \ -i iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local\
    \ -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local\
    \ -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local\
    \ -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaaa\n  local -i bbbb\n \
    \ local -i cccc\n  local -i dddd\n \n}\n\ncandidate() {\n    sort_array \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\"\
    \ ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a sorted=()\n  local -a ones=()\n\
    \  local -a zeros=()\n  local -a negs=()\n  local -a pos=()\n  local -a result=()\n\
    \  local -i i=0\n  local -i j=0\n  local -i k=0\n  local -i l=0\n  local -i m=0\n\
    \  local -i n=0\n  local -i o=0\n  local -i p=0\n  local -i q=0\n  local -i r=0\n\
    \  local -i s=0\n  local -i t=0\n  local -i u=0\n  local -i v=0\n  local -i w=0\n\
    \  local -i x=0\n  local -i y=0\n  local -i z=0\n  local -i a=0\n  local -i b=0\n\
    \  local -i c=0\n  local -i d=0\n  local -i e=0\n  local -i f=0\n  local -i g=0\n\
    \  local -i h=0\n  local -i ii=0\n  local -i jj=0\n  local -i kk=0\n  local -i\
    \ ll=0\n  local -i mm=0\n  local -i nn=0\n  local -i oo=0\n  local -i pp=0\n \
    \ local -i qq=0\n  local -i rr=0\n  local -i ss=0\n  local -i tt=0\n  local -i\
    \ uu=0\n  local -i vv=0\n  local -i ww=0\n  local -i xx=0\n  local -i yy=0\n \
    \ local -i zz=0\n  local -i aa=0\n  local -i bb=0\n  local -i cc=0\n  local -i\
    \ dd=0\n  local -i ee=0\n  local -i ff=0\n  local -i gg=0\n  local -i hh=0\n \
    \ local -i iii=0\n  local -i jjj=0\n  local -\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a array\n  local -a result\n  local -a ones\n\
    \  local -a zeros\n  local -i i\n  local -i j\n  local -i k\n  local -i l\n  local\
    \ -i m\n  local -i n\n  local -i o\n  local -i p\n  local -i q\n  local -i r\n\
    \  local -i s\n  local -i t\n  local -i u\n  local -i v\n  local -i w\n  local\
    \ -i x\n  local -i y\n  local -i z\n  local -i a\n  local -i b\n  local -i c\n\
    \  local -i d\n  local -i e\n  local -i f\n  local -i g\n  local -i h\n  local\
    \ -i ii\n  local -i jj\n  local -i kk\n  local -i ll\n  local -i mm\n  local -i\
    \ nn\n  local -i oo\n  local -i pp\n  local -i qq\n  local -i rr\n  local -i ss\n\
    \  local -i tt\n  local -i uu\n  local -i vv\n  local -i ww\n  local -i xx\n \
    \ local -i yy\n  local -i zz\n  local -i aa\n  local -i bb\n  local -i cc\n  local\
    \ -i dd\n  local -i ee\n  local -i ff\n  local -i gg\n  local -i hh\n  local -i\
    \ iii\n  local -i jjj\n  local -i kkk\n  local -i lll\n  local -i mmm\n  local\
    \ -i nnn\n  local -i ooo\n  local -i ppp\n  local -i qqq\n  local -i rrr\n  local\
    \ -i sss\n  local -i ttt\n  local -i uuu\n  local -i vvv\n  local -i www\n  local\
    \ -i xxx\n  local -i yyy\n  local -i zzz\n  local -i aaa\n  local -i bbb\n  local\
    \ -i ccc\n  local -i ddd\n  local -i e\n}\n\ncandidate() {\n    sort_array \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3\
    \ 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n   \
    \ [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") =\
    \ \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5\
    \ 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_str=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final=()\n  local -a arr_sorted_bin_dec_final_str_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final=()\n  local -a arr_sorted_bin_dec_final_str_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_str_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_bin_dec_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final=()\n  local -a arr_sorted_bin_dec_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_bin_dec_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  echo $1 | tr ' ' '\\n' | sort -n -t '-' -k 1.2 | tr\
    \ '\\n' ' '\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate\
    \ \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\"\
    ) = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"\
    2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate\
    \ \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\"\
    ) = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019314
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr2=()\n  local -a arr3=()\n\
    \  local -a arr4=()\n  local -a arr5=()\n  local -a arr6=()\n  local -a arr7=()\n\
    \  local -a arr8=()\n  local -a arr9=()\n  local -a arr10=()\n  local -a arr11=()\n\
    \  local -a arr12=()\n  local -a arr13=()\n  local -a arr14=()\n  local -a arr15=()\n\
    \  local -a arr16=()\n  local -a arr17=()\n  local -a arr18=()\n  local -a arr19=()\n\
    \  local -a arr20=()\n  local -a arr21=()\n  local -a arr22=()\n  local -a arr23=()\n\
    \  local -a arr24=()\n  local -a arr25=()\n  local -a arr26=()\n  local -a arr27=()\n\
    \  local -a arr28=()\n  local -a arr29=()\n  local -a arr30=()\n  local -a arr31=()\n\
    \  local -a arr32=()\n  local -a arr33=()\n  local -a arr34=()\n  local -a arr35=()\n\
    \  local -a arr36=()\n  local -a arr37=()\n  local -a arr38=()\n  local -a arr39=()\n\
    \  local -a arr40=()\n  local -a arr41=()\n  local -a arr42=()\n  local -a arr43=()\n\
    \  local -a arr44=()\n  local -a arr45=()\n  local -a arr46=()\n  local -a arr47=()\n\
    \  local -a arr48=()\n  local -a arr49=()\n  local -a arr50=()\n  local -a arr51=()\n\
    \  local -a arr52=()\n  local -a arr53=()\n  local -a arr54=()\n  local -a arr55=()\n\
    \  local -a arr56=()\n  local -a arr57=()\n}\n\ncandidate() {\n    sort_array\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2\
    \ 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n\
    \    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\"\
    ) = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5\
    \ 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n\
    \    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr\n  local -a arr_sorted\n  local -a arr_ones\n\
    \  local -a arr_zeros\n  local -a arr_neg\n  local -a arr_pos\n  local -a arr_neg_sorted\n\
    \  local -a arr_pos_sorted\n  local -a arr_neg_ones\n  local -a arr_neg_zeros\n\
    \  local -a arr_pos_ones\n  local -a arr_pos_zeros\n  local -a arr_sorted_neg\n\
    \  local -a arr_sorted_pos\n  local -a arr_sorted_neg_ones\n  local -a arr_sorted_neg_zeros\n\
    \  local -a arr_sorted_pos_ones\n  local -a arr_sorted_pos_zeros\n  local -a arr_sorted_ones\n\
    \  local -a arr_sorted_zeros\n  local -a arr_sorted_ones_neg\n  local -a arr_sorted_ones_pos\n\
    \  local -a arr_sorted_zeros_neg\n  local -a arr_sorted_zeros_pos\n  local -a\
    \ arr_sorted_ones_neg_sorted\n  local -a arr_sorted_ones_pos_sorted\n  local -a\
    \ arr_sorted_zeros_neg_sorted\n  local -a arr_sorted_zeros_pos_sorted\n  local\
    \ -a arr_sorted_ones_neg_sorted_sorted\n  local -a arr_sorted_ones_pos_sorted_sorted\n\
    \  local -a arr_sorted_zeros_neg_sorted_sorted\n  local -a arr_sorted_zeros_pos_sorted_sorted\n\
    \  local -a arr_sorted_ones_neg_sorted_sorted_sorted\n  local -a arr_sorted_ones_pos_sorted_sorted_sorted\n\
    \  local -a arr_sorted_zeros_neg_sorted_sorted_sorted\n  local -a arr_sorted_zeros_pos_sorted_sorted_sorted\n\
    \  local -a arr_sorted_ones_neg\n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n\
    \    [[ $(candidate \"-2 -3 -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate\
    \ \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[\
    \ $(candidate \"2 5 77 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n  \
    \  [[ $(candidate \"3 6 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate\
    \ \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=($1)\n  local -a arr_sorted=()\n  local\
    \ -a arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_ones=()\n\
    \  local -a arr_sorted_ones_dec=()\n  local -a arr_sorted_ones_bin=()\n  local\
    \ -a arr_sorted_ones_dec_bin=()\n  local -a arr_sorted_ones_dec_bin_str=()\n \
    \ local -a arr_sorted_ones_dec_bin_str_final=()\n  local -a arr_sorted_ones_dec_bin_str_final_final=()\n\
    \  local -a arr_sorted_ones_dec_bin_str_final_final_final=()\n  local -a arr_sorted_ones_dec_bin_str_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_bin_str_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_ones_dec_bin_str_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_ones_dec_bin_str_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_bin_str_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_bin_str_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_bin_str_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_bin_str_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_ones_dec_bin_str_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \ \n}\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n   \
    \ [[ $(candidate \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3\
    \ -4 -5 -6\") = \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"\
    0 1 2 4 3\" ]]\n    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77\
    \ 4 5 3 5 7 2 3 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6\
    \ 44 12 32 5\") = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") =\
    \ \"2 4 8 16 32\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n\
    }\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019314
- exit_code: 1
  program: "#!/bin/bash\n# In this Kata, you have to sort an array of non-negative\
    \ integers according to\n# number of ones in their binary representation in ascending\
    \ order.\n# For similar number of ones, sort based on decimal value.\n# It must\
    \ be implemented like this:\n# >>> $(sort_array \"1 5 2 3 4\")\n# ['\"1\"', '\"\
    2\"', '\"3\"', '\"4\"', '\"5\"']\n# >>> $(sort_array \"-2 -3 -4 -5 -6\")\n# ['\"\
    -6\"', '\"-5\"', '\"-4\"', '\"-3\"', '\"-2\"']\n# >>> $(sort_array \"1 0 2 3 4\"\
    )\n# ['\"0\"', '\"1\"', '\"2\"', '\"3\"', '\"4\"']\n#\n# $1 is a space-separated\
    \ list\nsort_array() {\n  local -a arr=()\n  local -a arr_sorted=()\n  local -a\
    \ arr_sorted_dec=()\n  local -a arr_sorted_bin=()\n  local -a arr_sorted_bin_dec=()\n\
    \  local -a arr_sorted_bin_dec_final=()\n  local -a arr_sorted_final=()\n  local\
    \ -a arr_sorted_final_final=()\n  local -a arr_sorted_final_final_final=()\n \
    \ local -a arr_sorted_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final=()\n  local -a arr_sorted_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_final_final_final_final_final_final_final_final_final=()\n  local\
    \ -a arr_sorted_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \  local -a arr_sorted_final_final_final_final_final_final_final_final_final_final_\n\
    }\n\ncandidate() {\n    sort_array \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"1 5 2 3 4\") = \"1 2 4 3 5\" ]]\n    [[ $(candidate \"-2 -3 -4 -5 -6\") =\
    \ \"-4 -2 -6 -5 -3\" ]]\n    [[ $(candidate \"1 0 2 3 4\") = \"0 1 2 4 3\" ]]\n\
    \    [[ $(candidate \"\") = \"\" ]]\n    [[ $(candidate \"2 5 77 4 5 3 5 7 2 3\
    \ 4\") = \"2 2 4 4 3 3 5 5 5 7 77\" ]]\n    [[ $(candidate \"3 6 44 12 32 5\"\
    ) = \"32 3 5 6 12 44\" ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\"\
    \ ]]\n    [[ $(candidate \"2 4 8 16 32\") = \"2 4 8 16 32\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019313

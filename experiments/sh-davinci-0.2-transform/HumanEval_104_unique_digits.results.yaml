language: sh
name: HumanEval_104_unique_digits
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=(\"$@\")\n    local -a res=()\n    local -a tmp=()\n    local i=0\n\
    \    local j=0\n    local k=0\n    local n=0\n    local m=0\n    local -i flag=0\n\
    \    local -i flag2=0\n    local -i flag3=0\n    local -i flag4=0\n    local -i\
    \ flag5=0\n    local -i flag6=0\n    local -i flag7=0\n    local -i flag8=0\n\
    \    local -i flag9=0\n    local -i flag10=0\n    local -i flag11=0\n    local\
    \ -i flag12=0\n    local -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n\
    \    local -i flag16=0\n    local -i flag17=0\n    local -i flag18=0\n    local\
    \ -i flag19=0\n    local -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n\
    \    local -i flag23=0\n    local -i flag24=0\n    local -i flag25=0\n    local\
    \ -i flag26=0\n    local -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n\
    \    local -i flag30=0\n    local -i flag31=0\n    local -i flag32=0\n    local\
    \ -i flag33=0\n    local -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n\
    \    local -i flag37=0\n    local -i flag38=0\n    local -i flag39=0\n    local\
    \ -i flag40=0\n    local -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n\
    \    local -i flag44=0\n    local -i flag45=0\n    local -i flag46=0\n    local\
    \ -i flag47=0\n    local -i flag48=0\n    local -i flag49=0\n    local -i flag50=0\n\
    \    local -i flag\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ ! $i =~ [02468] ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=(\"$@\")\n    local -a res=()\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9]+$ ]]; then\n            res+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a input=($1)\n    local -a output=()\n    for i in \"${input[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            output+=($i)\n        fi\n\
    \    done\n    echo \"${output[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ \"$i\" =~ ^[13579]+$ ]];\
    \ then\n            arr+=($i)\n        fi\n    done\n    echo \"${arr[@]}\" |\
    \ tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for x in $1; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n\
    \            result+=($x)\n        fi\n    done\n    echo ${result[@]} | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a tmp=()\n    local -a even=(\"\
    2\" \"4\" \"6\" \"8\" \"0\")\n    local -a odd=(\"1\" \"3\" \"5\" \"7\" \"9\"\
    )\n    local -a digits=(\"${even[@]}\" \"${odd[@]}\")\n    local -a unique=(\"\
    ${odd[@]}\")\n    local -a unique_sorted=(\"${odd[@]}\")\n    local -a sorted=(\"\
    ${even[@]}\" \"${odd[@]}\")\n    local -a sorted_sorted=(\"${even[@]}\" \"${odd[@]}\"\
    )\n    local -a sorted_unique=(\"${odd[@]}\")\n    local -a sorted_unique_sorted=(\"\
    ${odd[@]}\")\n    local -a sorted_unique_sorted_sorted=(\"${odd[@]}\")\n    local\
    \ -a sorted_unique_sorted_sorted_sorted=(\"${odd[@]}\")\n    local -a sorted_unique_sorted_sorted_sorted_sorted=(\"\
    ${odd[@]}\")\n    local -a sorted_unique_sorted_sorted_sorted_sorted_sorted=(\"\
    ${odd[@]}\")\n    local -a sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted=(\"\
    ${odd[@]}\")\n    local -a sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted=(\"\
    ${odd[@]}\")\n    local -a sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=(\"\
    ${odd[@]}\")\n    local -a sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=(\"\
    ${odd[@]}\")\n    local -a sorted_unique_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=(\"\
    ${odd[@]}\")\n    local -a sorted\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a x=($1)\n    local -a y=()\n    for i in ${x[@]}; do\n        if [[\
    \ $i =~ ^[13579]+$ ]]; then\n            y+=($i)\n        fi\n    done\n    echo\
    \ ${y[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=(\"$@\")\n    local -a res=()\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9]+$ ]]; then\n            res+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i len=${#list[@]}\n    local -i has_even=0\n    local -i digit=0\n\
    \    local -i num=0\n    local -i num_len=0\n    local -i num_len_half=0\n   \
    \ local -i num_len_half_plus_one=0\n    local -i num_len_half_minus_one=0\n  \
    \  local -i num_len_half_plus_two=0\n    local -i num_len_half_minus_two=0\n \
    \   local -i num_len_half_plus_three=0\n    local -i num_len_half_minus_three=0\n\
    \    local -i num_len_half_plus_four=0\n    local -i num_len_half_minus_four=0\n\
    \    local -i num_len_half_plus_five=0\n    local -i num_len_half_minus_five=0\n\
    \    local -i num_len_half_plus_six=0\n    local -i num_len_half_minus_six=0\n\
    \    local -i num_len_half_plus_seven=0\n    local -i num_len_half_minus_seven=0\n\
    \    local -i num_len_half_plus_eight=0\n    local -i num_len_half_minus_eight=0\n\
    \    local -i num_len_half_plus_nine=0\n    local -i num_len_half_minus_nine=0\n\
    \    local -i num_len_half_plus_ten=0\n    local -i num_len_half_minus_ten=0\n\
    \    local -i num_len_half_plus_eleven=0\n    local -i num_len_half_minus_eleven=0\n\
    \    local -i num_len_half_plus_twelve=0\n    local -i num_len_half_minus_twelve=0\n\
    \    local -i num_len_half_plus_thirteen=0\n    local -i num_len_half_minus\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i len=${#list[@]}\n    local -i len2=0\n    local -i flag=0\n    local\
    \ -i num=0\n    local -i digit=0\n    local -i even=0\n    local -i odd=0\n  \
    \  for ((i=0; i<len; i++)); do\n        flag=0\n        num=${list[i]}\n     \
    \   len2=${#num}\n        for ((j=0; j<len2; j++)); do\n            digit=${num:j:1}\n\
    \            if ((digit%2==0)); then\n                flag=1\n               \
    \ break\n            fi\n        done\n        if ((flag==0)); then\n        \
    \    result+=($num)\n        fi\n    done\n    len=${#result[@]}\n    if ((len==0));\
    \ then\n        echo \"[]\"\n    else\n        echo \"[\\\"${result[0]}\\\"\"\n\
    \        for ((i=1; i<len; i++)); do\n            echo \", \\\"${result[i]}\\\"\
    \"\n        done\n        echo \"]\"\n    fi\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local list=\"$1\"\n    local result=()\n    for num in $list; do\n        if\
    \ [[ $num =~ ^[13579]+$ ]]; then\n            result+=($num)\n        fi\n   \
    \ done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for num in $1; do\n        if [[ ! $num =~ [24680] ]];\
    \ then\n            result+=($num)\n        fi\n    done\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list\n    local -a res\n    IFS=' ' read -r -a list <<< \"$1\"\n  \
    \  for i in \"${list[@]}\"; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n    \
    \        res+=(\"$i\")\n        fi\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
    \ $i =~ ^[13579]+$ ]]; then\n            result+=\"$i \"\n        fi\n    done\n\
    \    echo $result\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=(\"$@\")\n    local -a res=()\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ ! $i =~ [24680] ]]; then\n            res+=(\"$i\")\n        fi\n\
    \    done\n    if [[ ${#res[@]} -gt 0 ]]; then\n        echo \"${res[@]}\" | tr\
    \ ' ' '\\n' | sort -n\n    fi\n}\n\ncandidate() {\n    unique_digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a result=()\n    local -a even_digits=(0 2 4 6 8)\n\
    \    local -a digits=()\n    local -a even_digits_in_number=()\n    local -a unique_digits_in_number=()\n\
    \    local -a unique_digits_in_number_sorted=()\n    local -a unique_digits_in_number_sorted_str=()\n\
    \    local -a unique_digits_in_number_sorted_str_joined=()\n    local -a unique_digits_in_number_sorted_str_joined_quoted=()\n\
    \    local -a unique_digits_in_number_sorted_str_joined_quoted_joined=()\n   \
    \ local -a unique_digits_in_number_sorted_str_joined_quoted_joined_sorted=()\n\
    \    local -a unique_digits_in_number_sorted_str_joined_quoted_joined_sorted_filtered=()\n\
    \    local -a unique_digits_in_number_sorted_str_joined_quoted_joined_sorted_filtered_joined=()\n\
    \    local -a unique_digits_in_number_sorted_str_joined_quoted_joined_sorted_filtered_joined_quoted=()\n\
    \    local -a unique_digits_in_number_sorted_str_joined_quoted_joined_sorted_filtered_joined_quoted_joined=()\n\
    \    local -a unique_digits_in_number_sorted_str_joined_quoted_joined_sorted_filtered_joined_quoted_joined_sorted=()\n\
    \    local -a unique_digits_in_number_sorted_str_joined_quoted_joined_sorted_filtered_joined_quoted_joined_sorted_filtered=()\n\
    \    local -a unique_digits_in_number_sorted_str_joined_quoted_joined_sorted_filtered_joined_quoted_joined_sorted_filtered_joined=()\n\
    \    local -a unique_digits_in_number_sorted_\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a tmp=()\n    local -a even=()\n\
    \    local -a odd=()\n    local -a unique=()\n    local -a unique_odd=()\n   \
    \ local -a unique_even=()\n    local -a unique_res=()\n    local -a unique_tmp=()\n\
    \    local -a unique_tmp_res=()\n    local -a unique_tmp_res_odd=()\n    local\
    \ -a unique_tmp_res_even=()\n    local -a unique_tmp_res_odd_even=()\n    local\
    \ -a unique_tmp_res_odd_even_res=()\n    local -a unique_tmp_res_odd_even_res_tmp=()\n\
    \    local -a unique_tmp_res_odd_even_res_tmp_res=()\n    local -a unique_tmp_res_odd_even_res_tmp_res_odd=()\n\
    \    local -a unique_tmp_res_odd_even_res_tmp_res_even=()\n    local -a unique_tmp_res_odd_even_res_tmp_res_odd_even=()\n\
    \    local -a unique_tmp_res_odd_even_res_tmp_res_odd_even_res=()\n    local -a\
    \ unique_tmp_res_odd_even_res_tmp_res_odd_even_res_tmp=()\n    local -a unique_tmp_res_odd_even_res_tmp_res_odd_even_res_tmp_res=()\n\
    \    local -a unique_tmp_res_odd_even_res_tmp_res_odd_even_res_tmp_res_odd=()\n\
    \    local -a unique_tmp_res_odd_even_res_tmp_res_odd_even_res_tmp_res_even=()\n\
    \    local -a unique_tmp_res_odd_even_res_tmp_res_odd_even_res_tmp_res_odd_even=()\n\
    \    local -a unique_tmp_res_odd_even_res_tmp_res_odd_even_res_tmp_res_odd_even_res=()\n\
    \   \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result\n    local -a even_digits=(0 2 4 6 8)\n\
    \    local -a digits\n    local -i i\n    local -i j\n    local -i k\n    local\
    \ -i n\n    local -i m\n    local -i has_even_digit\n    local -i digit\n\n  \
    \  for ((i=0; i<${#list[@]}; i++)); do\n        has_even_digit=0\n        digits=($(echo\
    \ ${list[$i]} | grep -o .))\n        for ((j=0; j<${#digits[@]}; j++)); do\n \
    \           for ((k=0; k<${#even_digits[@]}; k++)); do\n                if [[\
    \ ${digits[$j]} -eq ${even_digits[$k]} ]]; then\n                    has_even_digit=1\n\
    \                    break\n                fi\n            done\n           \
    \ if [[ $has_even_digit -eq 1 ]]; then\n                break\n            fi\n\
    \        done\n        if [[ $has_even_digit -eq 0 ]]; then\n            result[${#result[@]}]=${list[$i]}\n\
    \        fi\n    done\n\n    for ((i=0; i<${#result[@]}; i++)); do\n        for\
    \ ((j=i+1; j<${#result[@]}; j++)); do\n            if [[ ${result[$i]} -gt ${result[$j]}\
    \ ]]; then\n                n=${result[$i]}\n                result[$i]=${result[$j]}\n\
    \                result[$j]=$n\n            fi\n        done\n    done\n\n   \
    \ for ((i=0; i<${#result[@]}; i++)); do\n        result[$i]=\"\\\"${result[$i]}\\\
    \"\"\n    done\n\n    echo ${result[@]}\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local res=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=($i)\n        fi\n    done\n    echo ${res[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ ! $i =~ [24680] ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i len=0\n    local -i len_list=${#list[@]}\n   \
    \ local -i len_result=0\n    local -i len_digit=0\n    local -i len_digit_even=0\n\
    \    local -i len_digit_odd=0\n    local -i len_digit_unique=0\n    local -i digit=0\n\
    \    local -i digit_even=0\n    local -i digit_odd=0\n    local -i digit_unique=0\n\
    \    local -i digit_unique_even=0\n    local -i digit_unique_odd=0\n    local\
    \ -i digit_unique_even_count=0\n    local -i digit_unique_odd_count=0\n    local\
    \ -i digit_unique_even_count_max=0\n    local -i digit_unique_odd_count_max=0\n\
    \    local -i digit_unique_even_count_max_index=0\n    local -i digit_unique_odd_count_max_index=0\n\
    \    local -i digit_unique_even_count_max_index_prev=0\n    local -i digit_unique_odd_count_max_index_prev=0\n\
    \    local -i digit_unique_even_count_max_index_prev_prev=0\n    local -i digit_unique_odd_count_max_index_prev_prev=0\n\
    \    local -i digit_unique_even_count_max_index_prev_prev_prev=0\n    local -i\
    \ digit_unique_odd_count_max_index_prev_prev_prev=0\n    local -i digit_unique_even_count_max_index_prev_prev_prev_prev=0\n\
    \    local -i digit_unique_odd_count_max_index_prev_prev_prev_prev=0\n    local\
    \ -i digit_unique_even_count_max_index_prev_prev_prev_prev_prev=0\n    local -i\
    \ digit_unique_odd_count_max_index_prev_prev_\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=(\"$@\")\n    local -a res=()\n    local -a even_digits=(0 2 4\
    \ 6 8)\n    for i in \"${arr[@]}\"; do\n        local -a digits=($(echo \"$i\"\
    \ | grep -o .))\n        local has_even=0\n        for j in \"${digits[@]}\";\
    \ do\n            for k in \"${even_digits[@]}\"; do\n                if [[ \"\
    $j\" == \"$k\" ]]; then\n                    has_even=1\n                    break\n\
    \                fi\n            done\n            if [[ \"$has_even\" == 1 ]];\
    \ then\n                break\n            fi\n        done\n        if [[ \"\
    $has_even\" == 0 ]]; then\n            res+=(\"$i\")\n        fi\n    done\n \
    \   echo \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a tmp=()\n    local -a even_digits=(\"\
    0\" \"2\" \"4\" \"6\" \"8\")\n    local -a odd_digits=(\"1\" \"3\" \"5\" \"7\"\
    \ \"9\")\n    local -a digits=(\"0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\"\
    \ \"8\" \"9\")\n    local -a digits_in_num=()\n    local -a digits_in_num_tmp=()\n\
    \    local -a digits_in_num_tmp2=()\n    local -a digits_in_num_tmp3=()\n    local\
    \ -a digits_in_num_tmp4=()\n    local -a digits_in_num_tmp5=()\n    local -a digits_in_num_tmp6=()\n\
    \    local -a digits_in_num_tmp7=()\n    local -a digits_in_num_tmp8=()\n    local\
    \ -a digits_in_num_tmp9=()\n    local -a digits_in_num_tmp10=()\n    local -a\
    \ digits_in_num_tmp11=()\n    local -a digits_in_num_tmp12=()\n    local -a digits_in_num_tmp13=()\n\
    \    local -a digits_in_num_tmp14=()\n    local -a digits_in_num_tmp15=()\n  \
    \  local -a digits_in_num_tmp16=()\n    local -a digits_in_num_tmp17=()\n    local\
    \ -a digits_in_num_tmp18=()\n    local -a digits_in_num_tmp19=()\n    local -a\
    \ digits_in_num_tmp20=()\n    local -a digits_in_num_tmp21=()\n    local -a digits_in_num_tmp22=()\n\
    \    local -a digits_in_num_tmp23=()\n    local -a digits_in_num_tmp24=()\n  \
    \  local -a digits_in_num_tmp25=()\n    local -a digits_in_num_tmp26=()\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo ${result[@]} | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ ! $i =~ [24680] ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a evens=(0 2 4 6 8)\n    local\
    \ -a odds=(1 3 5 7 9)\n    local -a digits=()\n    local -a unique_digits=()\n\
    \    local -a unique_nums=()\n    local -a nums=()\n    local -a nums_digits=()\n\
    \    local -a nums_unique_digits=()\n    local -a nums_unique_digits_count=()\n\
    \    local -a nums_unique_digits_count_sorted=()\n    local -a nums_unique_digits_count_sorted_index=()\n\
    \    local -a nums_unique_digits_count_sorted_index_nums=()\n    local -a nums_unique_digits_count_sorted_index_nums_sorted=()\n\
    \    local -a nums_unique_digits_count_sorted_index_nums_sorted_str=()\n    local\
    \ -a nums_unique_digits_count_sorted_index_nums_sorted_str_quoted=()\n    local\
    \ -a nums_unique_digits_count_sorted_index_nums_sorted_str_quoted_str=()\n   \
    \ local -a nums_unique_digits_count_sorted_index_nums_sorted_str_quoted_str_joined=()\n\
    \    local -a nums_unique_digits_count_sorted_index_nums_sorted_str_quoted_str_joined_str=()\n\
    \    local -a nums_unique_digits_count_sorted_index_nums_sorted_str_quoted_str_joined_str_str=()\n\
    \    local -a nums_unique_digits_count_sorted_index_nums_sorted_str_quoted_str_joined_str_str_str=()\n\
    \    local -a nums_unique_digits_count_sorted_index_nums_sorted_str_quoted_str_joined_str_str_str_str=()\n\
    \   \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local result=\"[\"\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]];\
    \ then\n            result+=\"\\\"$i\\\",\"\n        fi\n    done\n    result=${result%,}\"\
    ]\"\n    echo $result\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a res\n    local -a nums=($1)\n    for num in ${nums[@]}; do\n      \
    \  if [[ $num =~ ^[1-9][0-9]*$ ]]; then\n            local -a digits=($(echo $num\
    \ | grep -o .))\n            local is_unique=1\n            for digit in ${digits[@]};\
    \ do\n                if [[ $digit =~ ^[02468]$ ]]; then\n                   \
    \ is_unique=0\n                    break\n                fi\n            done\n\
    \            if [[ $is_unique -eq 1 ]]; then\n                res+=($num)\n  \
    \          fi\n        fi\n    done\n    echo ${res[@]} | tr ' ' '\\n' | sort\
    \ -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local digits=\"$1\"\n    local result=()\n    for digit in $digits; do\n   \
    \     if [[ $digit =~ ^[13579]+$ ]]; then\n            result+=(\"$digit\")\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ ! $i =~ [24680] ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo ${arr[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a nums=($1)\n    local -a res=()\n    for num in ${nums[@]}; do\n   \
    \     local -a digits=($(echo $num | grep -o .))\n        local -a evens=($(echo\
    \ ${digits[@]} | grep -o \"[02468]\"))\n        if [ ${#evens[@]} -eq 0 ]; then\n\
    \            res+=($num)\n        fi\n    done\n    echo ${res[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr\n    local -a res\n    local -i i\n    local -i j\n    local -i\
    \ k\n    local -i l\n    local -i m\n    local -i n\n    local -i o\n    local\
    \ -i p\n    local -i q\n    local -i r\n    local -i s\n    local -i t\n    local\
    \ -i u\n    local -i v\n    local -i w\n    local -i x\n    local -i y\n    local\
    \ -i z\n    local -i cnt\n    local -i len\n    local -i num\n    local -i tmp\n\
    \    local -i tmp2\n    local -i tmp3\n    local -i tmp4\n    local -i tmp5\n\
    \    local -i tmp6\n    local -i tmp7\n    local -i tmp8\n    local -i tmp9\n\
    \    local -i tmp10\n    local -i tmp11\n    local -i tmp12\n    local -i tmp13\n\
    \    local -i tmp14\n    local -i tmp15\n    local -i tmp16\n    local -i tmp17\n\
    \    local -i tmp18\n    local -i tmp19\n    local -i tmp20\n    local -i tmp21\n\
    \    local -i tmp22\n    local -i tmp23\n    local -i tmp24\n    local -i tmp25\n\
    \    local -i tmp26\n    local -i tmp27\n    local -i tmp28\n    local -i tmp29\n\
    \    local -i tmp30\n    local -i tmp31\n    local -i tmp32\n    local -i tmp33\n\
    \    local -i tmp34\n    local -i tmp35\n    local -i tmp36\n    local -i tmp37\n\
    \    local -i tmp38\n    local -i tmp39\n    local -i tmp40\n    local -i tmp41\n\
    \    local -i tmp42\n    local -i tmp43\n    local -i tmp44\n    local -i tmp45\n\
    \    local -i tmp46\n    local -i tmp47\n    local -i tmp48\n    local -i tmp49\n\
    \    local -i tmp50\n    local -i tmp51\n    local -i tmp52\n    local -i tmp53\n\
    \    local\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a array=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            array+=($i)\n        fi\n    done\n    echo \"${array[@]}\"\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    local -a numbers=($1)\n    for number in \"${numbers[@]}\"\
    ; do\n        if [[ $number =~ ^[1-9]+$ ]]; then\n            result+=($number)\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr\n    local -a res\n    local -a tmp\n    local -a tmp2\n    local\
    \ -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local\
    \ -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local\
    \ -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local\
    \ -a tmp71\n    local -\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    local -a nums=($1)\n    local num\n    local digit\n  \
    \  for num in \"${nums[@]}\"; do\n        for digit in $(echo \"$num\" | grep\
    \ -o .); do\n            if [[ \"$digit\" =~ [02468] ]]; then\n              \
    \  break\n            fi\n        done\n        if [[ -z \"$digit\" ]]; then\n\
    \            result+=(\"$num\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \ | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result=()\n    local -a numbers=($1)\n    for number in \"${numbers[@]}\"\
    ; do\n        if [[ $number =~ ^[13579]+$ ]]; then\n            result+=(\"$number\"\
    )\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x\n    local result=()\n    for x in $1; do\n        if [[ $x =~ ^[13579]+$\
    \ ]]; then\n            result+=(\"$x\")\n        fi\n    done\n    echo ${result[@]}\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local input=$1\n    local output=\"\"\n    local num\n    for num in $input;\
    \ do\n        if [[ $num =~ [02468] ]]; then\n            continue\n        fi\n\
    \        if [[ -z $output ]]; then\n            output=\"$num\"\n        else\n\
    \            output=\"$output $num\"\n        fi\n    done\n    echo $output |\
    \ tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local result=()\n    for x in $1; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n\
    \            result+=($x)\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n  local\
    \ -a list=($1)\n  local -a result=()\n  for i in \"${list[@]}\"; do\n    if [[\
    \ $i =~ ^[13579]+$ ]]; then\n      result+=($i)\n    fi\n  done\n  echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ ! $i =~ [24680] ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=(\"$i\")\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local numbers=($1)\n    local result=()\n    for number in ${numbers[@]}; do\n\
    \        if [[ $number =~ ^[13579]+$ ]]; then\n            result+=($number)\n\
    \        fi\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\\
    n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a digits=()\n    local -a even_digits=()\n\
    \    local -a odd_digits=()\n    local -a unique_digits=()\n    local -a unique_even_digits=()\n\
    \    local -a unique_odd_digits=()\n    local -a unique_even_digits_sorted=()\n\
    \    local -a unique_odd_digits_sorted=()\n    local -a even_digits_sorted=()\n\
    \    local -a odd_digits_sorted=()\n    local -a res_sorted=()\n    local -a arr_sorted=()\n\
    \    local -a digits_sorted=()\n    local -a unique_digits_sorted=()\n    local\
    \ -a unique_digits_sorted_sorted=()\n    local -a unique_digits_sorted_sorted_sorted=()\n\
    \    local -a unique_digits_sorted_sorted_sorted_sorted=()\n    local -a unique_digits_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a unique_digits_sorted_sorted_sorted_sorted_sorted_sorted=()\n   \
    \ local -a unique_digits_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a unique_digits_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a unique_digits_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a unique_digits_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a unique_digits_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted_sorted=()\n\
    \    local -a unique_digits_sorted_sorted_s\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local result=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo \"${result[@]}\" | tr\
    \ ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=(\"$i\")\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a even=(\"0\" \"2\" \"4\" \"\
    6\" \"8\")\n    local -a odd=(\"1\" \"3\" \"5\" \"7\" \"9\")\n    local -a digits=(\"\
    ${even[@]}\" \"${odd[@]}\")\n    local -a unique=()\n    local -a unique_digits=()\n\
    \    local -a unique_numbers=()\n    local -a unique_res=()\n    local -a unique_res_sorted=()\n\
    \    local -a unique_res_sorted_final=()\n    local -a unique_res_sorted_final_final=()\n\
    \    local -a unique_res_sorted_final_final_final=()\n    local -a unique_res_sorted_final_final_final_final=()\n\
    \    local -a unique_res_sorted_final_final_final_final_final=()\n    local -a\
    \ unique_res_sorted_final_final_final_final_final_final=()\n    local -a unique_res_sorted_final_final_final_final_final_final_final=()\n\
    \    local -a unique_res_sorted_final_final_final_final_final_final_final_final=()\n\
    \    local -a unique_res_sorted_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a unique_res_sorted_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a unique_res_sorted_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a unique_res_sorted_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a unique_res_sorted_final_final_final_final_final_final_final_final_final_final_final_final_final=()\n\
    \    local -a unique_res_sorted_final_final_final_final_final_final_final_final\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo ${arr[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a numbers=($1)\n    local -a result=()\n    for number in \"${numbers[@]}\"\
    ; do\n        if [[ $number =~ ^[1-9]+$ ]]; then\n            result+=(\"$number\"\
    )\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a tmp=()\n    local -a tmp2=()\n\
    \    local -a tmp3=()\n    local -a tmp4=()\n    local -a tmp5=()\n    local -a\
    \ tmp6=()\n    local -a tmp7=()\n    local -a tmp8=()\n    local -a tmp9=()\n\
    \    local -a tmp10=()\n    local -a tmp11=()\n    local -a tmp12=()\n    local\
    \ -a tmp13=()\n    local -a tmp14=()\n    local -a tmp15=()\n    local -a tmp16=()\n\
    \    local -a tmp17=()\n    local -a tmp18=()\n    local -a tmp19=()\n    local\
    \ -a tmp20=()\n    local -a tmp21=()\n    local -a tmp22=()\n    local -a tmp23=()\n\
    \    local -a tmp24=()\n    local -a tmp25=()\n    local -a tmp26=()\n    local\
    \ -a tmp27=()\n    local -a tmp28=()\n    local -a tmp29=()\n    local -a tmp30=()\n\
    \    local -a tmp31=()\n    local -a tmp32=()\n    local -a tmp33=()\n    local\
    \ -a tmp34=()\n    local -a tmp35=()\n    local -a tmp36=()\n    local -a tmp37=()\n\
    \    local -a tmp38=()\n    local -a tmp39=()\n    local -a tmp40=()\n    local\
    \ -a tmp41=()\n    local -a tmp42=()\n    local -a tmp43=()\n    local -a tmp44=()\n\
    \    local -a tmp45=()\n    local -a tmp46=()\n    local -a tmp47=()\n    local\
    \ -a tmp48=()\n    local -a tmp49=()\n    local -a tmp50=()\n    local -a tmp51=()\n\
    \    local -a tmp52=()\n    local -a tmp53=()\n    local -a tmp54=()\n    local\
    \ -a tmp55=()\n   \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local digits=\"$1\"\n    local result=()\n    for i in $digits; do\n       \
    \ if [[ $i =~ ^[^24680]+$ ]]; then\n            result+=($i)\n        fi\n   \
    \ done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=(\"$i\")\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for n in $1; do\n        if [[ $n =~ ^[13579]+$ ]]; then\n\
    \            result+=($n)\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr\n    local -a res\n    local -a evens=(2 4 6 8 0)\n    local -a\
    \ odds=(1 3 5 7 9)\n    local -a digits\n    local -a tmp\n    local -i i\n  \
    \  local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i n\n\
    \    local -i o\n    local -i p\n    local -i q\n    local -i r\n    local -i\
    \ s\n    local -i t\n    local -i u\n    local -i v\n    local -i w\n    local\
    \ -i x\n    local -i y\n    local -i z\n    local -i flag\n    local -i flag2\n\
    \    local -i flag3\n    local -i flag4\n    local -i flag5\n    local -i flag6\n\
    \    local -i flag7\n    local -i flag8\n    local -i flag9\n    local -i flag10\n\
    \    local -i flag11\n    local -i flag12\n    local -i flag13\n    local -i flag14\n\
    \    local -i flag15\n    local -i flag16\n    local -i flag17\n    local -i flag18\n\
    \    local -i flag19\n    local -i flag20\n    local -i flag21\n    local -i flag22\n\
    \    local -i flag23\n    local -i flag24\n    local -i flag25\n    local -i flag26\n\
    \    local -i flag27\n    local -i flag28\n    local -i flag29\n    local -i flag30\n\
    \    local -i flag31\n    local -i flag32\n    local -i flag33\n    local -i flag34\n\
    \    local -i flag35\n    local -i flag36\n    local -i flag37\n    local -i flag38\n\
    \    local -i flag39\n    local -i flag40\n    local -i flag41\n    local -i flag42\n\
    \    local -i flag43\n    local -i flag44\n    local -i flag45\n    local -i flag46\n\
    \    local -i flag47\n    local -i flag48\n    local -i flag49\n    local -i flag50\n\
    \    local -\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for x in $1; do\n        if [[ ! $x =~ [24680] ]]; then\n\
    \            result+=($x)\n        fi\n    done\n    echo ${result[@]} | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a res=()\n    for i in ${list[@]}; do\n     \
    \   if [[ $i =~ ^[1-9]+$ ]]; then\n            res+=($i)\n        fi\n    done\n\
    \    echo ${res[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for x in $1; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n\
    \            result+=(\"$x\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9]+$ ]]; then\n            result+=(\"$i\")\n       \
    \ fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo ${arr[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local result=()\n    for x in $1; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n\
    \            result+=(\"$x\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a result=()\n    local -a evens=(0 2 4 6 8)\n  \
    \  local -a odds=(1 3 5 7 9)\n    local -a digits=()\n    local -a unique_digits=()\n\
    \    local -a unique_numbers=()\n    local -a unique_numbers_sorted=()\n    local\
    \ -a unique_numbers_sorted_str=()\n    local -a unique_numbers_sorted_str_quoted=()\n\
    \    local -a unique_numbers_sorted_str_quoted_json=()\n    local -a unique_numbers_sorted_str_quoted_json_str=()\n\
    \    local -a unique_numbers_sorted_str_quoted_json_str_no_brackets=()\n    local\
    \ -a unique_numbers_sorted_str_quoted_json_str_no_brackets_no_quotes=()\n    local\
    \ -a unique_numbers_sorted_str_quoted_json_str_no_brackets_no_quotes_no_commas=()\n\
    \    local -a unique_numbers_sorted_str_quoted_json_str_no_brackets_no_quotes_no_commas_no_spaces=()\n\
    \    local -a unique_numbers_sorted_str_quoted_json_str_no_brackets_no_quotes_no_commas_no_spaces_no_newlines=()\n\
    \    local -a unique_numbers_sorted_str_quoted_json_str_no_brackets_no_quotes_no_commas_no_spaces_no_newlines_no_tabs=()\n\
    \    local -a unique_numbers_sorted_str_quoted_json_str_no_brackets_no_quotes_no_commas_no_spaces_no_newlines_no_tabs_no_backslashes=()\n\
    \    local -a unique_numbers_sorted_str_quoted_json_str_no_brackets_no_quotes_no_commas_no_spaces_no_\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a even=()\n    local -a odd=()\n\
    \    local -a nums=()\n    local -a unique=()\n    local -a unique_nums=()\n \
    \   local -a unique_nums_sorted=()\n    local -a unique_nums_sorted_str=()\n \
    \   local -a unique_nums_sorted_str_json=()\n    local -a unique_nums_sorted_str_json_str=()\n\
    \    local -a unique_nums_sorted_str_json_str_str=()\n    local -a unique_nums_sorted_str_json_str_str_str=()\n\
    \    local -a unique_nums_sorted_str_json_str_str_str_str=()\n    local -a unique_nums_sorted_str_json_str_str_str_str_str=()\n\
    \    local -a unique_nums_sorted_str_json_str_str_str_str_str_str=()\n    local\
    \ -a unique_nums_sorted_str_json_str_str_str_str_str_str_str=()\n    local -a\
    \ unique_nums_sorted_str_json_str_str_str_str_str_str_str_str=()\n    local -a\
    \ unique_nums_sorted_str_json_str_str_str_str_str_str_str_str_str=()\n    local\
    \ -a unique_nums_sorted_str_json_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a unique_nums_sorted_str_json_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a unique_nums_sorted_str_json_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a unique_nums_sorted_str_json_str_str_str_str_str_str_str_str\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=(\"$@\")\n    local -a res=()\n    local -a tmp=()\n    local -a\
    \ even=(\"0\" \"2\" \"4\" \"6\" \"8\")\n    local -a odd=(\"1\" \"3\" \"5\" \"\
    7\" \"9\")\n    local -a digits=(\"${even[@]}\" \"${odd[@]}\")\n    local i=0\n\
    \    local j=0\n    local k=0\n    local l=0\n    local m=0\n    local n=0\n \
    \   local o=0\n    local p=0\n    local q=0\n    local r=0\n    local s=0\n  \
    \  local t=0\n    local u=0\n    local v=0\n    local w=0\n    local x=0\n   \
    \ local y=0\n    local z=0\n    local a=0\n    local b=0\n    local c=0\n    local\
    \ d=0\n    local e=0\n    local f=0\n    local g=0\n    local h=0\n    local ii=0\n\
    \    local jj=0\n    local kk=0\n    local ll=0\n    local mm=0\n    local nn=0\n\
    \    local oo=0\n    local pp=0\n    local qq=0\n    local rr=0\n    local ss=0\n\
    \    local tt=0\n    local uu=0\n    local vv=0\n    local ww=0\n    local xx=0\n\
    \    local yy=0\n    local zz=0\n    local aa=0\n    local bb=0\n    local cc=0\n\
    \    local dd=0\n    local ee=0\n    local ff=0\n    local gg=0\n    local hh=0\n\
    \    local iii=0\n    local jjj=0\n    local kkk=0\n    local lll=0\n    local\
    \ mmm=0\n    local nnn=0\n    local ooo=0\n    local ppp=0\n    local qqq=0\n\
    \    local rrr=0\n    local sss=0\n    local ttt=0\n    local uuu=0\n\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ [02468] ]]; then\n\
    \            continue\n        fi\n        arr+=(\"$i\")\n    done\n    echo \"\
    ${arr[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo ${arr[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for x in $1; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n\
    \            result+=($x)\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a evens=(\"2\" \"4\" \"6\"\
    \ \"8\" \"0\")\n    local -a odds=(\"1\" \"3\" \"5\" \"7\" \"9\")\n    local -a\
    \ digits=(\"${evens[@]}\" \"${odds[@]}\")\n    local -a unique=()\n    local -a\
    \ unique_odds=()\n    local -a unique_evens=()\n    local -a unique_digits=()\n\
    \    local -a unique_odds_digits=()\n    local -a unique_evens_digits=()\n   \
    \ local -a unique_odds_evens_digits=()\n    local -a unique_odds_evens=()\n  \
    \  local -a unique_odds_evens_digits_odds=()\n    local -a unique_odds_evens_digits_evens=()\n\
    \    local -a unique_odds_evens_digits_odds_evens=()\n    local -a unique_odds_evens_digits_odds_evens_digits=()\n\
    \    local -a unique_odds_evens_digits_odds_evens_digits_odds=()\n    local -a\
    \ unique_odds_evens_digits_odds_evens_digits_evens=()\n    local -a unique_odds_evens_digits_odds_evens_digits_odds_evens=()\n\
    \    local -a unique_odds_evens_digits_odds_evens_digits_odds_evens_digits=()\n\
    \    local -a unique_odds_evens_digits_odds_evens_digits_odds_evens_digits_odds=()\n\
    \    local -a unique_odds_evens_digits_odds_evens_digits_odds_evens_digits_evens=()\n\
    \    local -a unique_odds_evens_digits_odds_evens_digits_odds_evens_digits_odds_even\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local list=$1\n    local result=()\n    for i in $list; do\n        if [[ $i\
    \ =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n    done\n   \
    \ echo ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a res=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            res+=($i)\n        fi\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr\n    local -a res\n    local -a tmp\n    local -a tmp2\n    local\
    \ -a tmp3\n    local -a tmp4\n    local -a tmp5\n    local -a tmp6\n    local\
    \ -a tmp7\n    local -a tmp8\n    local -a tmp9\n    local -a tmp10\n    local\
    \ -a tmp11\n    local -a tmp12\n    local -a tmp13\n    local -a tmp14\n    local\
    \ -a tmp15\n    local -a tmp16\n    local -a tmp17\n    local -a tmp18\n    local\
    \ -a tmp19\n    local -a tmp20\n    local -a tmp21\n    local -a tmp22\n    local\
    \ -a tmp23\n    local -a tmp24\n    local -a tmp25\n    local -a tmp26\n    local\
    \ -a tmp27\n    local -a tmp28\n    local -a tmp29\n    local -a tmp30\n    local\
    \ -a tmp31\n    local -a tmp32\n    local -a tmp33\n    local -a tmp34\n    local\
    \ -a tmp35\n    local -a tmp36\n    local -a tmp37\n    local -a tmp38\n    local\
    \ -a tmp39\n    local -a tmp40\n    local -a tmp41\n    local -a tmp42\n    local\
    \ -a tmp43\n    local -a tmp44\n    local -a tmp45\n    local -a tmp46\n    local\
    \ -a tmp47\n    local -a tmp48\n    local -a tmp49\n    local -a tmp50\n    local\
    \ -a tmp51\n    local -a tmp52\n    local -a tmp53\n    local -a tmp54\n    local\
    \ -a tmp55\n    local -a tmp56\n    local -a tmp57\n    local -a tmp58\n    local\
    \ -a tmp59\n    local -a tmp60\n    local -a tmp61\n    local -a tmp62\n    local\
    \ -a tmp63\n    local -a tmp64\n    local -a tmp65\n    local -a tmp66\n    local\
    \ -a tmp67\n    local -a tmp68\n    local -a tmp69\n    local -a tmp70\n    local\
    \ -a tmp71\n    local -\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo ${result[@]} | tr '\
    \ ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a digits\n    local -a unique\n    local -a even\n    local -a result\n\
    \    local -a input\n    local -a output\n    local -i i\n    local -i j\n   \
    \ local -i k\n    local -i n\n    local -i m\n    local -i p\n    local -i q\n\
    \    local -i r\n    local -i s\n    local -i t\n    local -i u\n    local -i\
    \ v\n    local -i w\n    local -i x\n    local -i y\n    local -i z\n    local\
    \ -i a\n    local -i b\n    local -i c\n    local -i d\n    local -i e\n    local\
    \ -i f\n    local -i g\n    local -i h\n    local -i l\n    local -i o\n    local\
    \ -i digit\n    local -i number\n    local -i is_even\n    local -i is_unique\n\
    \    local -i is_result\n    local -i is_input\n    local -i is_output\n    local\
    \ -i is_digits\n    local -i is_unique\n    local -i is_even\n    local -i is_result\n\
    \    local -i is_input\n    local -i is_output\n    local -i is_digits\n    local\
    \ -i is_unique\n    local -i is_even\n    local -i is_result\n    local -i is_input\n\
    \    local -i is_output\n    local -i is_digits\n    local -i is_unique\n    local\
    \ -i is_even\n    local -i is_result\n    local -i is_input\n    local -i is_output\n\
    \    local -i is_digits\n    local -i is_unique\n    local -i is_even\n    local\
    \ -i is_result\n    local -i is_input\n    local -i is_output\n    local -i is_digits\n\
    \    local -i is_unique\n    local -i is_even\n    local -i is_result\n    local\
    \ -i is_input\n    local -i is_output\n    local -i is_digits\n    local -i is_unique\n\
    \    local -i is\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a digits\n    local -a result\n    local -a tmp\n    local i\n    local\
    \ j\n    local k\n    local l\n    local m\n    local n\n    local o\n    local\
    \ p\n    local q\n    local r\n    local s\n    local t\n    local u\n    local\
    \ v\n    local w\n    local x\n    local y\n    local z\n    local digit\n   \
    \ local number\n    local -i count=0\n    local -i flag=0\n    local -i flag2=0\n\
    \    local -i flag3=0\n    local -i flag4=0\n    local -i flag5=0\n    local -i\
    \ flag6=0\n    local -i flag7=0\n    local -i flag8=0\n    local -i flag9=0\n\
    \    local -i flag10=0\n    local -i flag11=0\n    local -i flag12=0\n    local\
    \ -i flag13=0\n    local -i flag14=0\n    local -i flag15=0\n    local -i flag16=0\n\
    \    local -i flag17=0\n    local -i flag18=0\n    local -i flag19=0\n    local\
    \ -i flag20=0\n    local -i flag21=0\n    local -i flag22=0\n    local -i flag23=0\n\
    \    local -i flag24=0\n    local -i flag25=0\n    local -i flag26=0\n    local\
    \ -i flag27=0\n    local -i flag28=0\n    local -i flag29=0\n    local -i flag30=0\n\
    \    local -i flag31=0\n    local -i flag32=0\n    local -i flag33=0\n    local\
    \ -i flag34=0\n    local -i flag35=0\n    local -i flag36=0\n    local -i flag37=0\n\
    \    local -i flag38=0\n    local -i flag39=0\n    local -i flag40=0\n    local\
    \ -i flag41=0\n    local -i flag42=0\n    local -i flag43=0\n    local -i flag44=0\n\
    \    local -i flag45=0\n   \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a tmp=()\n    local -a even=()\n\
    \    local -a odd=()\n    local -a digits=()\n    local -a unique=()\n    local\
    \ -a unique_digits=()\n    local -a unique_digits_sorted=()\n    local -a unique_digits_sorted_str=()\n\
    \    local -a unique_digits_sorted_str_quoted=()\n    local -a unique_digits_sorted_str_quoted_str=()\n\
    \    local -a unique_digits_sorted_str_quoted_str_str=()\n    local -a unique_digits_sorted_str_quoted_str_str_str=()\n\
    \    local -a unique_digits_sorted_str_quoted_str_str_str_str=()\n    local -a\
    \ unique_digits_sorted_str_quoted_str_str_str_str_str=()\n    local -a unique_digits_sorted_str_quoted_str_str_str_str_str_str=()\n\
    \    local -a unique_digits_sorted_str_quoted_str_str_str_str_str_str_str=()\n\
    \    local -a unique_digits_sorted_str_quoted_str_str_str_str_str_str_str_str=()\n\
    \    local -a unique_digits_sorted_str_quoted_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a unique_digits_sorted_str_quoted_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a unique_digits_sorted_str_quoted_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a unique_digits_sorted_str_quoted_str_str_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a unique_digits_sorted\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n  local\
    \ list=$1\n  local result=()\n  for i in $list; do\n    if [[ $i =~ ^[13579]+$\
    \ ]]; then\n      result+=($i)\n    fi\n  done\n  echo ${result[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=(\"$i\")\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for x in $1; do\n        if [[ ! $x =~ [24680] ]]; then\n\
    \            result+=($x)\n        fi\n    done\n    echo \"${result[@]}\" | tr\
    \ ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -i i=0\n    local -i j=0\n \
    \   local -i k=0\n    local -i len=0\n    local -i len_arr=0\n    local -i len_res=0\n\
    \    local -i len_sub=0\n    local -i len_sub_arr=0\n    local -i len_sub_res=0\n\
    \    local -i len_sub_sub=0\n    local -i len_sub_sub_arr=0\n    local -i len_sub_sub_res=0\n\
    \    local -i len_sub_sub_sub=0\n    local -i len_sub_sub_sub_arr=0\n    local\
    \ -i len_sub_sub_sub_res=0\n    local -i len_sub_sub_sub_sub=0\n    local -i len_sub_sub_sub_sub_arr=0\n\
    \    local -i len_sub_sub_sub_sub_res=0\n    local -i len_sub_sub_sub_sub_sub=0\n\
    \    local -i len_sub_sub_sub_sub_sub_arr=0\n    local -i len_sub_sub_sub_sub_sub_res=0\n\
    \    local -i len_sub_sub_sub_sub_sub_sub=0\n    local -i len_sub_sub_sub_sub_sub_sub_arr=0\n\
    \    local -i len_sub_sub_sub_sub_sub_sub_res=0\n    local -i len_sub_sub_sub_sub_sub_sub_sub=0\n\
    \    local -i len_sub_sub_sub_sub_sub_sub_sub_arr=0\n    local -i len_sub_sub_sub_sub_sub_sub_sub_res=0\n\
    \    local -i len_sub_sub_sub_sub_sub_sub_sub_sub=0\n    local -i len_sub_sub_sub_sub_sub_sub_sub_sub_arr=0\n\
    \    local -i len_sub_sub_sub_sub_sub_sub_sub_sub_res=0\n    local -\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a res\n    local -a nums=($1)\n    local -a evens=(0 2 4 6 8)\n    local\
    \ -a odds=(1 3 5 7 9)\n    local -a digits\n    local -a even_digits\n    local\
    \ -a odd_digits\n    local num\n    local digit\n    local i\n    local j\n  \
    \  local k\n    local l\n    for ((i=0; i<${#nums[@]}; i++)); do\n        num=${nums[$i]}\n\
    \        digits=($(echo $num | grep -o .))\n        even_digits=()\n        odd_digits=()\n\
    \        for ((j=0; j<${#digits[@]}; j++)); do\n            digit=${digits[$j]}\n\
    \            for ((k=0; k<${#evens[@]}; k++)); do\n                if [[ $digit\
    \ -eq ${evens[$k]} ]]; then\n                    even_digits+=($digit)\n     \
    \           fi\n            done\n            for ((l=0; l<${#odds[@]}; l++));\
    \ do\n                if [[ $digit -eq ${odds[$l]} ]]; then\n                \
    \    odd_digits+=($digit)\n                fi\n            done\n        done\n\
    \        if [[ ${#even_digits[@]} -eq 0 ]]; then\n            res+=($num)\n  \
    \      fi\n    done\n    echo ${res[@]} | tr ' ' '\\n' | sort -n | tr '\\n' '\
    \ '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ \"$i\" =~ ^[13579]+$ ]]; then\n            result+=($i)\n     \
    \   fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\\
    n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr\n    local -a res\n    local -a even_digits=(2 4 6 8 0)\n    local\
    \ -a digits\n    local -a digits_arr\n    local -a digits_arr_sorted\n    local\
    \ -a digits_arr_sorted_unique\n    local -a digits_arr_sorted_unique_joined\n\
    \    local -a digits_arr_sorted_unique_joined_arr\n    local -a digits_arr_sorted_unique_joined_arr_sorted\n\
    \    local -a digits_arr_sorted_unique_joined_arr_sorted_unique\n    local -a\
    \ digits_arr_sorted_unique_joined_arr_sorted_unique_joined\n    local -a digits_arr_sorted_unique_joined_arr_sorted_unique_joined_arr\n\
    \    local -a digits_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted\n\
    \    local -a digits_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted_unique\n\
    \    local -a digits_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted_unique_joined\n\
    \    local -a digits_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted_unique_joined_arr\n\
    \    local -a digits_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted\n\
    \    local -a digits_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted_unique\n\
    \    local -a digits_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted_unique_joined\n\
    \    local -a digits_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted_unique_joined_arr\n\
    \    local -a digits_arr_sorted_unique_joined_arr_sorted_unique_joined_arr_sorted_\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo ${arr[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=(\"$i\")\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local numbers=($1)\n    local result=()\n    for number in ${numbers[@]}; do\n\
    \        if [[ $number =~ ^[13579]+$ ]]; then\n            result+=($number)\n\
    \        fi\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local list=$1\n    local result=()\n    for i in $list; do\n        if [[ $i\
    \ =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n    done\n   \
    \ echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr\n    local -a res\n    local -a digits\n    local -a even_digits\n\
    \    local i\n    local j\n    local k\n    local n\n    local d\n    local e\n\
    \    local -i flag\n    local -i flag2\n    arr=($1)\n    for ((i=0; i<${#arr[@]};\
    \ i++)); do\n        n=${arr[$i]}\n        flag=1\n        while ((n > 0)); do\n\
    \            d=$((n % 10))\n            n=$((n / 10))\n            digits[${#digits[@]}]=$d\n\
    \        done\n        for ((j=0; j<${#digits[@]}; j++)); do\n            d=${digits[$j]}\n\
    \            if ((d % 2 == 0)); then\n                flag=0\n               \
    \ break\n            fi\n        done\n        if ((flag == 1)); then\n      \
    \      res[${#res[@]}]=${arr[$i]}\n        fi\n        unset digits\n    done\n\
    \    if ((${#res[@]} > 0)); then\n        echo -n '[';\n        for ((i=0; i<${#res[@]};\
    \ i++)); do\n            echo -n '\"'${res[$i]}'\"'\n            if ((i < ${#res[@]}\
    \ - 1)); then\n                echo -n ', '\n            fi\n        done\n  \
    \      echo -n ']'\n    else\n        echo -n '[]'\n    fi\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a res=()\n    for i in ${list[@]}; do\n     \
    \   if [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n    done\n\
    \    echo ${res[@]}\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo ${arr[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list\n    local -a result\n    local -a even_digits\n    local -a odd_digits\n\
    \    local -a sorted_even_digits\n    local -a sorted_odd_digits\n    local -a\
    \ sorted_result\n    local -a sorted_list\n    local -a unique_digits\n    local\
    \ -a sorted_unique_digits\n    local -a sorted_unique_digits_list\n    local -a\
    \ sorted_unique_digits_result\n    local -a sorted_unique_digits_list_result\n\
    \    local -a sorted_unique_digits_list_result_final\n    local -a sorted_unique_digits_list_result_final_final\n\
    \    local -a sorted_unique_digits_list_result_final_final_final\n    local -a\
    \ sorted_unique_digits_list_result_final_final_final_final\n    local -a sorted_unique_digits_list_result_final_final_final_final_final\n\
    \    local -a sorted_unique_digits_list_result_final_final_final_final_final_final\n\
    \    local -a sorted_unique_digits_list_result_final_final_final_final_final_final_final\n\
    \    local -a sorted_unique_digits_list_result_final_final_final_final_final_final_final_final\n\
    \    local -a sorted_unique_digits_list_result_final_final_final_final_final_final_final_final_final\n\
    \    local -a sorted_unique_digits_list_result_final_final_final_final_final_final_final_final_final_final\n\
    \    local -a sorted_unique_digits_list_result_final_final_final_final_final_final_final_final_final_final_final\n\
    \    local -a sorted_unique_digits_list_result_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \    local -a sorted_unique_digits_list_result_final_final_final_final_final_final_final_final_final_final_final_final_final\n\
    \    local -a sorted\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n  local\
    \ list=$(echo $1 | tr ' ' '\\n')\n  local result=\"\"\n  for i in $list; do\n\
    \    if [[ $i =~ ^[0-9]+$ ]]; then\n      local even=0\n      local digits=$(echo\
    \ $i | grep -o .)\n      for d in $digits; do\n        if [[ $d =~ ^[02468]$ ]];\
    \ then\n          even=1\n          break\n        fi\n      done\n      if [[\
    \ $even -eq 0 ]]; then\n        result+=\"\\\"$i\\\" \"\n      fi\n    fi\n  done\n\
    \  echo \"[$result]\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result\n    for i in ${list[@]}; do\n     \
    \   if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n  \
    \  done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a digits\n    local -a result\n    local -a even\n    local -a odd\n\
    \    local -a unique\n    local -a sorted\n    local -a sorted_unique\n    local\
    \ -a sorted_odd\n    local -a sorted_even\n    local -a unique_odd\n    local\
    \ -a unique_even\n    local -a unique_odd_even\n    local -a sorted_unique_odd_even\n\
    \    local -a sorted_unique_odd\n    local -a sorted_unique_even\n    local -a\
    \ sorted_unique_odd_even_sorted\n    local -a sorted_unique_odd_sorted\n    local\
    \ -a sorted_unique_even_sorted\n    local -a sorted_unique_odd_even_sorted_sorted\n\
    \    local -a sorted_unique_odd_sorted_sorted\n    local -a sorted_unique_even_sorted_sorted\n\
    \    local -a sorted_unique_odd_even_sorted_sorted_sorted\n    local -a sorted_unique_odd_sorted_sorted_sorted\n\
    \    local -a sorted_unique_even_sorted_sorted_sorted\n    local -a sorted_unique_odd_even_sorted_sorted_sorted_sorted\n\
    \    local -a sorted_unique_odd_sorted_sorted_sorted_sorted\n    local -a sorted_unique_even_sorted_sorted_sorted_sorted\n\
    \    local -a sorted_unique_odd_even_sorted_sorted_sorted_sorted_sorted\n    local\
    \ -a sorted_unique_odd_sorted_sorted_sorted_sorted_sorted\n    local -a sorted_unique_even_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a sorted_unique_odd_even_sorted_sorted_sorted_sorted_sorted_sorted\n\
    \    local -a sorted_unique_odd_sorted_sorted_sorted_sorted_sorted_sorted\n  \
    \  local -a sorted_unique_even_sorted_sorted_sorted_sorted_sorted_sorted\n   \
    \ local -a sorted_unique_odd_even_\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local numbers=($1)\n    local result=()\n    for number in ${numbers[@]}; do\n\
    \        if [[ $number =~ ^[13579]+$ ]]; then\n            result+=($number)\n\
    \        fi\n    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\\
    n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local list=$1\n    local result=()\n    for i in $list; do\n        if [[ $i\
    \ =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n    done\n   \
    \ echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    local -a list=($1)\n    for i in ${list[@]}; do\n     \
    \   if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n  \
    \  done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr\n    local -a res\n    local -a evens\n    local -a odds\n    local\
    \ i\n    local j\n    local k\n    local n\n    local x\n    local y\n    local\
    \ z\n    local -i flag\n    local -i flag2\n    local -i flag3\n    local -i flag4\n\
    \    local -i flag5\n    local -i flag6\n    local -i flag7\n    local -i flag8\n\
    \    local -i flag9\n    local -i flag10\n    local -i flag11\n    local -i flag12\n\
    \    local -i flag13\n    local -i flag14\n    local -i flag15\n    local -i flag16\n\
    \    local -i flag17\n    local -i flag18\n    local -i flag19\n    local -i flag20\n\
    \    local -i flag21\n    local -i flag22\n    local -i flag23\n    local -i flag24\n\
    \    local -i flag25\n    local -i flag26\n    local -i flag27\n    local -i flag28\n\
    \    local -i flag29\n    local -i flag30\n    local -i flag31\n    local -i flag32\n\
    \    local -i flag33\n    local -i flag34\n    local -i flag35\n    local -i flag36\n\
    \    local -i flag37\n    local -i flag38\n    local -i flag39\n    local -i flag40\n\
    \    local -i flag41\n    local -i flag42\n    local -i flag43\n    local -i flag44\n\
    \    local -i flag45\n    local -i flag46\n    local -i flag47\n    local -i flag48\n\
    \    local -i flag49\n    local -i flag50\n    local -i flag51\n    local -i flag52\n\
    \    local -i flag53\n    local -i flag54\n    local -i flag55\n    local -i flag56\n\
    \    local -i flag57\n    local -i flag58\n    local -i flag59\n    local -i flag60\n\
    \    local -i flag61\n    local -i flag62\n    local -i flag63\n    local -i flag64\n\
    \    local -i flag65\n    local -i\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ ! $i =~ [24680] ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo ${arr[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local input=($1)\n    local output=()\n    for num in ${input[@]}; do\n    \
    \    if [[ $num =~ ^[13579]+$ ]]; then\n            output+=($num)\n        fi\n\
    \    done\n    echo ${output[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a even=()\n    local -a odd=()\n\
    \    local -a unique=()\n    local -a unique_even=()\n    local -a unique_odd=()\n\
    \    local -a unique_res=()\n    local -a unique_res_even=()\n    local -a unique_res_odd=()\n\
    \    local -a unique_res_even_odd=()\n    local -a unique_res_odd_even=()\n  \
    \  local -a unique_res_odd_even_unique=()\n    local -a unique_res_odd_even_unique_res=()\n\
    \    local -a unique_res_odd_even_unique_res_even=()\n    local -a unique_res_odd_even_unique_res_odd=()\n\
    \    local -a unique_res_odd_even_unique_res_even_odd=()\n    local -a unique_res_odd_even_unique_res_odd_even=()\n\
    \    local -a unique_res_odd_even_unique_res_odd_even_unique=()\n    local -a\
    \ unique_res_odd_even_unique_res_odd_even_unique_res=()\n    local -a unique_res_odd_even_unique_res_odd_even_unique_res_even=()\n\
    \    local -a unique_res_odd_even_unique_res_odd_even_unique_res_odd=()\n    local\
    \ -a unique_res_odd_even_unique_res_odd_even_unique_res_even_odd=()\n    local\
    \ -a unique_res_odd_even_unique_res_odd_even_unique_res_odd_even=()\n    local\
    \ -a unique_res_odd_even_unique_res_odd_even_unique_res_odd_even_unique=()\n \
    \   local -a unique_res_odd_even_unique_res_odd_even_unique_res_odd_even_unique_res=()\n\
    \    local -a unique_res_odd_even_unique_res_odd_even_unique_res_odd_even_unique_res_even=()\n\
    \    local -\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo ${arr[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local nums=($1)\n    local result=()\n    for num in ${nums[@]}; do\n      \
    \  if [[ $num =~ ^[13579]+$ ]]; then\n            result+=($num)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local list=$1\n    local result=()\n    for num in $list; do\n        if [[\
    \ $num =~ ^[13579]+$ ]]; then\n            result+=($num)\n        fi\n    done\n\
    \    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a even=(0 2 4 6 8)\n    local\
    \ -a odd=(1 3 5 7 9)\n    local -a digits=()\n    local -a unique=()\n    local\
    \ -a unique_digits=()\n    local -a unique_numbers=()\n    local -a sorted_numbers=()\n\
    \    local -a sorted_digits=()\n    local -a sorted_unique_numbers=()\n    local\
    \ -a sorted_unique_digits=()\n    local -a sorted_unique_digits_numbers=()\n \
    \   local -a sorted_unique_digits_numbers_str=()\n    local -a sorted_unique_digits_numbers_str_json=()\n\
    \    local -a sorted_unique_digits_numbers_str_json_str=()\n    local -a sorted_unique_digits_numbers_str_json_str_str=()\n\
    \    local -a sorted_unique_digits_numbers_str_json_str_str_str=()\n    local\
    \ -a sorted_unique_digits_numbers_str_json_str_str_str_str=()\n    local -a sorted_unique_digits_numbers_str_json_str_str_str_str_str=()\n\
    \    local -a sorted_unique_digits_numbers_str_json_str_str_str_str_str_str=()\n\
    \    local -a sorted_unique_digits_numbers_str_json_str_str_str_str_str_str_str=()\n\
    \    local -a sorted_unique_digits_numbers_str_json_str_str_str_str_str_str_str_str=()\n\
    \    local -a sorted_unique_digits_numbers_str_json_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a sorted_unique_digits_numbers_str_json_str_str_str_str_str_str_str_str_str_str=()\n\
    \    local -a sorted_unique_digits_numbers_str_json_str\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local result=()\n    for i in $1; do\n        if [[ ! $i =~ [24680] ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo ${result[@]} | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr\n    local -a res\n    local -a even\n    local -a odd\n    local\
    \ -a unique\n    local -a sorted\n    local -a final\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n    local v\n    local w\n    local x\n    local y\n    local z\n\
    \    local a\n    local b\n    local c\n    local d\n    local e\n    local f\n\
    \    local g\n    local h\n    local i\n    local j\n    local k\n    local l\n\
    \    local m\n    local n\n    local o\n    local p\n    local q\n    local r\n\
    \    local s\n    local t\n    local u\n    local v\n    local w\n    local x\n\
    \    local y\n    local z\n    local a\n    local b\n    local c\n    local d\n\
    \    local e\n    local f\n    local g\n    local h\n    local i\n    local j\n\
    \    local k\n    local l\n    local m\n    local n\n    local o\n    local p\n\
    \    local q\n    local r\n    local s\n    local t\n    local u\n    local v\n\
    \    local w\n    local x\n    local y\n    local z\n    local a\n    local b\n\
    \    local c\n    local d\n    local e\n    local f\n    local g\n    local h\n\
    \    local i\n    local j\n    local k\n    local l\n    local m\n    local n\n\
    \    local o\n    local p\n    local q\n    local r\n    local s\n    local t\n\
    \    local u\n   \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a x=($1)\n    local -a res=()\n    for i in ${x[@]}; do\n        if [[\
    \ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n    done\n   \
    \ echo \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local list=$1\n    local result=()\n    for i in $list; do\n        if [[ $i\
    \ =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n    done\n   \
    \ echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n  local\
    \ list=\"$1\"\n  local result=\"\"\n  for i in $list; do\n    if [[ $i =~ ^[13579]+$\
    \ ]]; then\n      result=\"$result $i\"\n    fi\n  done\n  echo \"$result\"\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local digits=\"$1\"\n    local result=()\n    for digit in $digits; do\n   \
    \     if [[ $digit =~ ^[13579]+$ ]]; then\n            result+=(\"$digit\")\n\
    \        fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list\n    local -a result\n    local -a even_digits\n    local -a odd_digits\n\
    \    local -a unique_digits\n    local -a unique_digits_sorted\n    local -a unique_digits_sorted_result\n\
    \    local -a unique_digits_sorted_result_quoted\n    local -a unique_digits_sorted_result_quoted_joined\n\
    \    local -a unique_digits_sorted_result_quoted_joined_result\n    local -a unique_digits_sorted_result_quoted_joined_result_result\n\
    \    local -a unique_digits_sorted_result_quoted_joined_result_result_result\n\
    \    local -a unique_digits_sorted_result_quoted_joined_result_result_result_result\n\
    \    local -a unique_digits_sorted_result_quoted_joined_result_result_result_result_result\n\
    \    local -a unique_digits_sorted_result_quoted_joined_result_result_result_result_result_result\n\
    \    local -a unique_digits_sorted_result_quoted_joined_result_result_result_result_result_result_result\n\
    \    local -a unique_digits_sorted_result_quoted_joined_result_result_result_result_result_result_result_result\n\
    \    local -a unique_digits_sorted_result_quoted_joined_result_result_result_result_result_result_result_result_result\n\
    \    local -a unique_digits_sorted_result_quoted_joined_result_result_result_result_result_result_result_result_result_result\n\
    \    local -a unique_digits_sorted_result_quoted_joined_result_result_result_result_result_result_result_result_result_result_result\n\
    \    local -a unique_digits_sorted_result_quoted_joined_result_result_result_result_result_result_result_result_result_result_result_result\n\
    \    local -a unique_digits_sorted_result_quoted_joined_result_result_result_result\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    local -i i=0\n    local -i j=0\n\
    \    local -i k=0\n    local -i l=0\n    local -i m=0\n    local -i n=0\n    local\
    \ -i o=0\n    local -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n\
    \    local -i t=0\n    local -i u=0\n    local -i v=0\n    local -i w=0\n    local\
    \ -i x=0\n    local -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n\
    \    local -i c=0\n    local -i d=0\n    local -i e=0\n    local -i f=0\n    local\
    \ -i g=0\n    local -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i\
    \ kk=0\n    local -i ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i\
    \ oo=0\n    local -i pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i\
    \ ss=0\n    local -i tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i\
    \ ww=0\n    local -i xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i\
    \ aa=0\n    local -i bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i\
    \ ee=0\n    local -i ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i\
    \ iii=0\n    local -i jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local\
    \ -i mmm=0\n    local -i nnn=0\n    local -i ooo=\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for x in $1; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n\
    \            arr+=(\"$x\")\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local result=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result\n    for i in ${list[@]}; do\n     \
    \   local -a digits=($(echo $i | grep -o .))\n        local -a unique=($(echo\
    \ ${digits[@]} | tr ' ' '\\n' | sort -u | tr '\\n' ' '))\n        if [[ ${#digits[@]}\
    \ -eq ${#unique[@]} ]]; then\n            result+=($i)\n        fi\n    done\n\
    \    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local result=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a even=()\n    local -a odd=()\n\
    \    local -a tmp=()\n    local -a tmp2=()\n    local -a tmp3=()\n    local -a\
    \ tmp4=()\n    local -a tmp5=()\n    local -a tmp6=()\n    local -a tmp7=()\n\
    \    local -a tmp8=()\n    local -a tmp9=()\n    local -a tmp10=()\n    local\
    \ -a tmp11=()\n    local -a tmp12=()\n    local -a tmp13=()\n    local -a tmp14=()\n\
    \    local -a tmp15=()\n    local -a tmp16=()\n    local -a tmp17=()\n    local\
    \ -a tmp18=()\n    local -a tmp19=()\n    local -a tmp20=()\n    local -a tmp21=()\n\
    \    local -a tmp22=()\n    local -a tmp23=()\n    local -a tmp24=()\n    local\
    \ -a tmp25=()\n    local -a tmp26=()\n    local -a tmp27=()\n    local -a tmp28=()\n\
    \    local -a tmp29=()\n    local -a tmp30=()\n    local -a tmp31=()\n    local\
    \ -a tmp32=()\n    local -a tmp33=()\n    local -a tmp34=()\n    local -a tmp35=()\n\
    \    local -a tmp36=()\n    local -a tmp37=()\n    local -a tmp38=()\n    local\
    \ -a tmp39=()\n    local -a tmp40=()\n    local -a tmp41=()\n    local -a tmp42=()\n\
    \    local -a tmp43=()\n    local -a tmp44=()\n    local -a tmp45=()\n    local\
    \ -a tmp46=()\n    local -a tmp47=()\n    local -a tmp48=()\n    local -a tmp49=()\n\
    \    local -a tmp50=()\n    local -a tmp51=()\n    local -a tmp52=()\n    local\
    \ -a tmp53=()\n    local -\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local digits=\"$1\"\n    local result=\"\"\n    for digit in $digits; do\n \
    \       if [[ $digit =~ ^[13579]+$ ]]; then\n            result=\"$result $digit\"\
    \n        fi\n    done\n    echo \"[$result]\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9][0-9]*$ ]]; then\n            result+=($i)\n      \
    \  fi\n    done\n    echo \"${result[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n'\
    \ ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ ! $i =~ [24680] ]]; then\n            result+=(\"$i\")\n      \
    \  fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=(\"$i\")\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=(\"$@\")\n    local -a res=()\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9]+$ ]]; then\n            res+=(\"$i\")\n        fi\n\
    \    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a tmp=()\n    local -a tmp2=()\n\
    \    local -a tmp3=()\n    local -a tmp4=()\n    local -a tmp5=()\n    local -a\
    \ tmp6=()\n    local -a tmp7=()\n    local -a tmp8=()\n    local -a tmp9=()\n\
    \    local -a tmp10=()\n    local -a tmp11=()\n    local -a tmp12=()\n    local\
    \ -a tmp13=()\n    local -a tmp14=()\n    local -a tmp15=()\n    local -a tmp16=()\n\
    \    local -a tmp17=()\n    local -a tmp18=()\n    local -a tmp19=()\n    local\
    \ -a tmp20=()\n    local -a tmp21=()\n    local -a tmp22=()\n    local -a tmp23=()\n\
    \    local -a tmp24=()\n    local -a tmp25=()\n    local -a tmp26=()\n    local\
    \ -a tmp27=()\n    local -a tmp28=()\n    local -a tmp29=()\n    local -a tmp30=()\n\
    \    local -a tmp31=()\n    local -a tmp32=()\n    local -a tmp33=()\n    local\
    \ -a tmp34=()\n    local -a tmp35=()\n    local -a tmp36=()\n    local -a tmp37=()\n\
    \    local -a tmp38=()\n    local -a tmp39=()\n    local -a tmp40=()\n    local\
    \ -a tmp41=()\n    local -a tmp42=()\n    local -a tmp43=()\n    local -a tmp44=()\n\
    \    local -a tmp45=()\n    local -a tmp46=()\n    local -a tmp47=()\n    local\
    \ -a tmp48=()\n    local -a tmp49=()\n    local -a tmp50=()\n    local -a tmp51=()\n\
    \    local -a tmp52=()\n    local -a tmp53=()\n    local -a tmp54=()\n    local\
    \ -a tmp55=()\n   \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9]+$ ]]; then\n            result+=(\"$i\")\n       \
    \ fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9]+$ ]]; then\n            result+=(\"$i\")\n       \
    \ fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo ${arr[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a res\n    for x in $1; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n\
    \            res+=(\"$x\")\n        fi\n    done\n    echo \"${res[@]}\"\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=(\"$@\")\n    local -a res\n    for i in \"${arr[@]}\"; do\n  \
    \      if [[ $i =~ ^[0-9]+$ ]]; then\n            if [[ $i =~ ^[13579]+$ ]]; then\n\
    \                res+=(\"$i\")\n            fi\n        fi\n    done\n    echo\
    \ \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n\
    \    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15\
    \ 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\"\
    \ ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo \"${arr[@]}\"\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local list=($1)\n    local result=()\n    for i in ${list[@]}; do\n        if\
    \ [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n    done\n\
    \    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local x\n    local digits\n    local even\n    local result\n    for x in $1;\
    \ do\n        digits=$(echo $x | sed -e 's/\\(.\\)/\\1 /g')\n        even=0\n\
    \        for d in $digits; do\n            if [ $((d % 2)) -eq 0 ]; then\n   \
    \             even=1\n                break\n            fi\n        done\n  \
    \      if [ $even -eq 0 ]; then\n            result=\"$result $x\"\n        fi\n\
    \    done\n    echo $result | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a nums=($1)\n    local -a res=()\n    for n in \"${nums[@]}\"; do\n \
    \       if [[ $n =~ ^[13579]+$ ]]; then\n            res+=(\"$n\")\n        fi\n\
    \    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo \"${result[@]}\"\n}\n\
    \ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n  local\
    \ list=$1\n  local result=()\n  for i in $list; do\n    if [[ $i =~ ^[13579]+$\
    \ ]]; then\n      result+=($i)\n    fi\n  done\n  echo ${result[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ ! $i =~ [24680] ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo ${arr[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a x=($1)\n    local -a y=()\n    for i in ${x[@]}; do\n        if [[\
    \ $i =~ ^[1-9]+$ ]]; then\n            y+=($i)\n        fi\n    done\n    echo\
    \ ${y[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo ${arr[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ ! $i =~ [24680] ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for x in $1; do\n        if [[ $x =~ ^[13579]+$ ]]; then\n\
    \            result+=($x)\n        fi\n    done\n    if [[ ${#result[@]} -eq 0\
    \ ]]; then\n        echo \"[]\"\n    else\n        echo \"[\\\"${result[@]}\\\"\
    ]\"\n    fi\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo ${result[@]} | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    if [[ ${#result[@]} -eq 0 ]]; then\n        echo \"[]\"\n    else\n\
    \        echo \"[\\\"${result[@]}\\\"]\"\n    fi\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 0
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local i=0\n    local j=0\n    local\
    \ k=0\n    local tmp=0\n    local flag=0\n    local len=0\n    local -a digits=(\"\
    0\" \"1\" \"2\" \"3\" \"4\" \"5\" \"6\" \"7\" \"8\" \"9\")\n    local -a even=(\"\
    0\" \"2\" \"4\" \"6\" \"8\")\n    arr=($1)\n    len=${#arr[@]}\n    for ((i=0;\
    \ i<len; i++)); do\n        tmp=${arr[i]}\n        flag=0\n        for ((j=0;\
    \ j<${#even[@]}; j++)); do\n            if [[ $tmp == *\"${even[j]}\"* ]]; then\n\
    \                flag=1\n                break\n            fi\n        done\n\
    \        if [[ $flag -eq 0 ]]; then\n            res[k]=$tmp\n            k=$((k+1))\n\
    \        fi\n    done\n    len=${#res[@]}\n    for ((i=0; i<len; i++)); do\n \
    \       for ((j=i+1; j<len; j++)); do\n            if [[ ${res[i]} -gt ${res[j]}\
    \ ]]; then\n                tmp=${res[i]}\n                res[i]=${res[j]}\n\
    \                res[j]=$tmp\n            fi\n        done\n    done\n    echo\
    \ ${res[@]}\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local list=($1)\n    local result=()\n    for i in ${list[@]}; do\n        if\
    \ [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n    done\n\
    \    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local result=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=(\"$i\")\n        fi\n    done\n    echo \"${result[@]}\"\
    \n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152\
    \ 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111\
    \ 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=($1)\n    local -a res=()\n    for i in \"${arr[@]}\"; do\n   \
    \     if [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n   \
    \ done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    local -a nums=($1)\n    for num in ${nums[@]}; do\n   \
    \     if [[ $num =~ ^[1-9]+$ ]]; then\n            result+=($num)\n        fi\n\
    \    done\n    echo ${result[@]} | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a digits\n    local -a unique\n    local -a result\n    local -i i\n\
    \    local -i j\n    local -i k\n    local -i l\n    local -i m\n    local -i\
    \ n\n    local -i p\n    local -i q\n    local -i r\n    local -i s\n    local\
    \ -i t\n    local -i u\n    local -i v\n    local -i w\n    local -i x\n    local\
    \ -i y\n    local -i z\n    local -i count\n    local -i length\n    local -i\
    \ is_unique\n    local -i is_even\n    local -i is_odd\n    local -i is_zero\n\
    \    local -i is_one\n    local -i is_two\n    local -i is_three\n    local -i\
    \ is_four\n    local -i is_five\n    local -i is_six\n    local -i is_seven\n\
    \    local -i is_eight\n    local -i is_nine\n    local -i is_ten\n    local -i\
    \ is_eleven\n    local -i is_twelve\n    local -i is_thirteen\n    local -i is_fourteen\n\
    \    local -i is_fifteen\n    local -i is_sixteen\n    local -i is_seventeen\n\
    \    local -i is_eighteen\n    local -i is_nineteen\n    local -i is_twenty\n\
    \    local -i is_twenty_one\n    local -i is_twenty_two\n    local -i is_twenty_three\n\
    \    local -i is_twenty_four\n    local -i is_twenty_five\n    local -i is_twenty_six\n\
    \    local -i is_twenty_seven\n    local -i is_twenty_eight\n    local -i is_twenty_nine\n\
    \    local -i is_thirty\n    local -i is_thirty_one\n    local -i is_thirty_two\n\
    \    local -i is_thirty_three\n    local -i is_thirty_four\n    local -i is_thirty_five\n\
    \    local -i is_thirty_six\n    local\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a res=()\n    for i in ${list[@]}; do\n     \
    \   if [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n    done\n\
    \    echo ${res[@]}\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate\
    \ \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") =\
    \ \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local list=$1\n    local result=\"\"\n    for i in $list; do\n        if [[\
    \ $i =~ ^[13579]+$ ]]; then\n            result=\"$result $i\"\n        fi\n \
    \   done\n    echo \"[$result]\"\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo ${result[@]} | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a tmp=()\n    local -a even=()\n\
    \    local -a odd=()\n    local -i i=0\n    local -i j=0\n    local -i k=0\n \
    \   local -i l=0\n    local -i m=0\n    local -i n=0\n    local -i o=0\n    local\
    \ -i p=0\n    local -i q=0\n    local -i r=0\n    local -i s=0\n    local -i t=0\n\
    \    local -i u=0\n    local -i v=0\n    local -i w=0\n    local -i x=0\n    local\
    \ -i y=0\n    local -i z=0\n    local -i a=0\n    local -i b=0\n    local -i c=0\n\
    \    local -i d=0\n    local -i e=0\n    local -i f=0\n    local -i g=0\n    local\
    \ -i h=0\n    local -i ii=0\n    local -i jj=0\n    local -i kk=0\n    local -i\
    \ ll=0\n    local -i mm=0\n    local -i nn=0\n    local -i oo=0\n    local -i\
    \ pp=0\n    local -i qq=0\n    local -i rr=0\n    local -i ss=0\n    local -i\
    \ tt=0\n    local -i uu=0\n    local -i vv=0\n    local -i ww=0\n    local -i\
    \ xx=0\n    local -i yy=0\n    local -i zz=0\n    local -i aa=0\n    local -i\
    \ bb=0\n    local -i cc=0\n    local -i dd=0\n    local -i ee=0\n    local -i\
    \ ff=0\n    local -i gg=0\n    local -i hh=0\n    local -i iii=0\n    local -i\
    \ jjj=0\n    local -i kkk=0\n    local -i lll=0\n    local -\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[13579]+$ ]]; then\n            result+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a nums=($1)\n    local -a res=()\n    for num in ${nums[@]}; do\n   \
    \     if [[ ! $num =~ [24680] ]]; then\n            res+=($num)\n        fi\n\
    \    done\n    echo ${res[@]}\n}\n\ncandidate() {\n    unique_digits \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            arr+=($i)\n        fi\n    done\n    echo ${arr[@]} | tr ' ' '\\\
    n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n\
    \    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345\
    \ 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31\
    \ 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a result\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo ${result[@]}\n}\n\n\
    candidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\")\
    \ = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n   \
    \ [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=(\"$@\")\n    local -a res=()\n    for i in \"${arr[@]}\"; do\n\
    \        if [[ ! \"$i\" =~ [02468] ]]; then\n            res+=(\"$i\")\n     \
    \   fi\n    done\n    echo \"${res[@]}\"\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local list=\"$1\"\n    local result=\"\"\n    for x in $list; do\n        if\
    \ [[ $x =~ ^[13579]+$ ]]; then\n            result=\"$result $x\"\n        fi\n\
    \    done\n    echo \"[$(echo $result | tr ' ' ',')]\"\n}\n\ncandidate() {\n \
    \   unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33\
    \ 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n\
    \    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local numbers=($1)\n    local result=()\n    for number in ${numbers[@]}; do\n\
    \        if [[ $number =~ ^[13579]+$ ]]; then\n            result+=($number)\n\
    \        fi\n    done\n    echo ${result[@]}\n}\n\ncandidate() {\n    unique_digits\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"\
    1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=(\"$@\")\n    local -a res=()\n    local i\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n            res+=(\"$i\")\n   \
    \     fi\n    done\n    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n'\
    \ ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"\
    152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"\
    111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local result=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo \"${result[@]}\" | tr\
    \ ' ' '\\n' | sort -n\n}\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n  \
    \  [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033\
    \ 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a arr=()\n    local -a res=()\n    local -a tmp=()\n    local -a even=()\n\
    \    local -a odd=()\n    local -a unique=()\n    local -a unique_even=()\n  \
    \  local -a unique_odd=()\n    local -a unique_even_odd=()\n    local -a unique_odd_even=()\n\
    \    local -a unique_even_odd_even=()\n    local -a unique_odd_even_odd=()\n \
    \   local -a unique_even_odd_even_odd=()\n    local -a unique_odd_even_odd_even=()\n\
    \    local -a unique_even_odd_even_odd_even=()\n    local -a unique_odd_even_odd_even_odd=()\n\
    \    local -a unique_even_odd_even_odd_even_odd=()\n    local -a unique_odd_even_odd_even_odd_even=()\n\
    \    local -a unique_even_odd_even_odd_even_odd_even=()\n    local -a unique_odd_even_odd_even_odd_even_odd=()\n\
    \    local -a unique_even_odd_even_odd_even_odd_even_odd=()\n    local -a unique_odd_even_odd_even_odd_even_odd_even=()\n\
    \    local -a unique_even_odd_even_odd_even_odd_even_odd_even=()\n    local -a\
    \ unique_odd_even_odd_even_odd_even_odd_even_odd=()\n    local -a unique_even_odd_even_odd_even_odd_even_odd_even_odd=()\n\
    \    local -a unique_odd_even_odd_even_odd_even_odd_even_odd_even=()\n    local\
    \ -a unique_even_odd_even_odd_even_odd_even_odd_even_odd_even=()\n    local -a\
    \ unique_odd_even_odd_even_odd_even_odd_even_odd_even_odd=()\n    local -a unique_even_odd_even_odd_even_odd_even_odd_even\n\
    }\n\ncandidate() {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323\
    \ 1422 10\") = \"\" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\"\
    \ ]]\n    [[ $(candidate \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local result=()\n    for i in $1; do\n        if [[ $i =~ ^[13579]+$ ]]; then\n\
    \            result+=($i)\n        fi\n    done\n    echo ${result[@]} | tr '\
    \ ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate() {\n    unique_digits \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15 33\"\
    \ ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate \"\
    12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\") = \"\
    31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a res\n    local -a arr=($1)\n    for i in ${arr[@]}; do\n        if\
    \ [[ $i =~ ^[13579]+$ ]]; then\n            res+=($i)\n        fi\n    done\n\
    \    echo \"${res[@]}\" | tr ' ' '\\n' | sort -n | tr '\\n' ' '\n}\n\ncandidate()\
    \ {\n    unique_digits \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    15 33 1422 1\") = \"1 15 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\
    \" ]]\n    [[ $(candidate \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate\
    \ \"135 103 31\") = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015160
- exit_code: 1
  program: "#!/bin/bash\n# Given a list of positive integers x. return a sorted list\
    \ of all \n# elements that hasn't any even digit.\n# Note: Returned list should\
    \ be sorted in increasing order.\n# For example:\n# >>> $(unique_digits \"15 33\
    \ 1422 1\")\n# ['\"1\"', '\"15\"', '\"33\"']\n# >>> $(unique_digits \"152 323\
    \ 1422 10\")\n# []\n#\n# $1 is a space-separated list\nunique_digits() {\n   \
    \ local -a list=($1)\n    local -a result=()\n    for i in \"${list[@]}\"; do\n\
    \        if [[ $i =~ ^[1-9]+$ ]]; then\n            result+=($i)\n        fi\n\
    \    done\n    echo \"${result[@]}\"\n}\n\ncandidate() {\n    unique_digits \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"15 33 1422 1\") = \"1 15\
    \ 33\" ]]\n    [[ $(candidate \"152 323 1422 10\") = \"\" ]]\n    [[ $(candidate\
    \ \"12345 2033 111 151\") = \"111 151\" ]]\n    [[ $(candidate \"135 103 31\"\
    ) = \"31 135\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660015159

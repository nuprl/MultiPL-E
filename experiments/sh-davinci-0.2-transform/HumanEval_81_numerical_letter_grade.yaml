name: HumanEval_81_numerical_letter_grade
language: sh
prompt: "#!/bin/bash\n# It is the last week of the semester and the teacher has to\
  \ give the grades\n# to students. The teacher has been making her own algorithm\
  \ for grading.\n# The only problem is, she has lost the code she used for grading.\n\
  # She has given you a list of GPAs for some students and you have to write \n# a\
  \ function that can output a list of letter grades using the following table:\n\
  # GPA       |    Letter grade\n# 4.0                A+\n# > 3.7                A\
  \ \n# > 3.3                A- \n# > 3.0                B+\n# > 2.7             \
  \   B \n# > 2.3                B-\n# > 2.0                C+\n# > 1.7          \
  \      C\n# > 1.3                C-\n# > 1.0                D+ \n# > 0.7       \
  \         D \n# > 0.0                D-\n# 0.0                E\n# Example:\n# >>>\
  \ $(grade_equation \"4.0 3 1.7 2 3.5\")\n# ['\"A+\"', '\"B\"', '\"C-\"', '\"C\"\
  ', '\"A-\"']\n#\n# $1 is a space-separated list\nnumerical_letter_grade() {\n"
tests: "}\n\ncandidate() {\n    numerical_letter_grade \"$@\"\n}\n\nset -e\nrun_test()\
  \ {\n    [[ $(candidate \"4.0 3 1.7 2 3.5\") = \"A+ B C- C A-\" ]]\n    [[ $(candidate\
  \ \"1.2\") = \"D+\" ]]\n    [[ $(candidate \"0.5\") = \"D-\" ]]\n    [[ $(candidate\
  \ \"0.0\") = \"E\" ]]\n    [[ $(candidate \"1.0 0.3 1.5 2.8 3.3\") = \"D D- C- B\
  \ B+\" ]]\n    [[ $(candidate \"0.0 0.7\") = \"E D-\" ]]\n}\n\nrun_test"
completions: ["    if [ $1 -ge 4.0 ]; then\n        echo \"A+\"\n    elif [ $1 -ge\
    \ 3.7 ]; then\n        echo \"A\"\n    elif [ $1 -ge 3.3 ]; then\n        echo\
    \ \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n        echo \"B+\"\n    elif [ $1 -ge\
    \ 2.7 ]; then\n        echo \"B\"\n    elif [ $1 -ge 2.3 ]; then\n        echo\
    \ \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n        echo \"C+\"\n    elif [ $1 -ge\
    \ 1.7 ]; then\n        echo \"C\"\n    elif [ $1 -ge 1.3 ]; then\n        echo\
    \ \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ $1 -ge\
    \ 0.7 ]; then\n        echo \"D\"\n    elif [ $1 -ge 0.0 ]; then\n        echo\
    \ \"D-\"\n    else\n        echo \"E\"\n    fi", "    # Write your code here\n\
    \    # Hint: You can use the following code to convert a string to a float\n \
    \   # float=$(echo $1 | awk '{print $1 + 0}')\n    # Hint: You can use the following\
    \ code to convert a float to a string\n    # string=$(printf \"%.1f\" $1)\n  \
    \  # Hint: You can use the following code to convert a string to an array\n  \
    \  # array=($1)\n    # Hint: You can use the following code to convert an array\
    \ to a string\n    # string=$(printf '\"%s\" ' \"${array[@]}\")\n    # Hint: You\
    \ can use the following code to convert a string to a list\n    # list=$(echo\
    \ $1 | sed 's/ /, /g')\n    # Hint: You can use the following code to convert\
    \ a list to a string\n    # string=$(echo $1 | sed 's/, / /g')\n    # Hint: You\
    \ can use the following code to convert a string to a list\n    # list=$(echo\
    \ $1 | sed 's/ /, /g')\n    # Hint: You can use the following code to convert\
    \ a list to a string\n    # string=$(echo $1 | sed 's/, / /g')\n    # Hint: You\
    \ can use the following code to convert a string to a list\n    # list=$(echo\
    \ $1 | sed 's/ /, /g')\n    # Hint: You can use the following code to convert\
    \ a list to a string\n    # string=$(echo $1 | sed 's/, / /g')\n    # Hint: You\
    \ can use the following code to convert a string to a list\n    # list=$(echo\
    \ $1 | sed 's/ /, /g')\n    # Hint: You can use the following code to convert\
    \ a list to a string\n    # string=$(echo $1 | sed 's/, / /g')\n    # Hint: You\
    \ can use the following code to convert a string to a list\n    # list=$(echo\
    \ $1 | sed 's/ /, /g')\n    # Hint: You can use the following code to convert\
    \ a list to a string\n    # string=$(echo $", "    # Your code here\n    # Hint:\
    \ Use the following command to convert a string to a float\n    # float=$(echo\
    \ \"$1\" | bc -l)\n    # Hint: Use the following command to convert a float to\
    \ a string\n    # string=$(printf \"%.2f\" $float)\n    # Hint: Use the following\
    \ command to convert a string to an integer\n    # int=$(echo \"$1\" | bc)\n \
    \   # Hint: Use the following command to convert an integer to a string\n    #\
    \ string=$(printf \"%d\" $int)\n    # Hint: Use the following command to convert\
    \ a string to an array\n    # array=($(echo $string | tr \" \" \"\\n\"))\n   \
    \ # Hint: Use the following command to convert an array to a string\n    # string=$(printf\
    \ \"%s \" \"${array[@]}\")\n    # Hint: Use the following command to convert a\
    \ string to an array\n    # array=($(echo $string | tr \" \" \"\\n\"))\n    #\
    \ Hint: Use the following command to convert an array to a string\n    # string=$(printf\
    \ \"%s \" \"${array[@]}\")\n    # Hint: Use the following command to convert a\
    \ string to an array\n    # array=($(echo $string | tr \" \" \"\\n\"))\n    #\
    \ Hint: Use the following command to convert an array to a string\n    # string=$(printf\
    \ \"%s \" \"${array[@]}\")\n    # Hint: Use the following command to convert a\
    \ string to an array\n    # array=($(echo $string | tr \" \" \"\\n\"))\n    #\
    \ Hint: Use the following command to convert an array to a string\n    # string=$(printf\
    \ \"%s \" \"${array[@]}\")\n    # Hint: Use the following command to convert a\
    \ string to an array\n    # array=($(echo $string | tr \" \" \"\\n\"))\n    #\
    \ Hint: Use the following command to convert an array to a string\n    # string=$(printf\
    \ \"%s \" \"${array[@]}\")\n    # Hint: Use the following command to convert a\
    \ string to an array\n    # array=($(echo $string | tr \" \" \"\\n\"))\n    #\
    \ Hint: Use the", "    # $1 is a number\n    if [ $1 -ge 4.0 ]; then\n       \
    \ echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif [ $1\
    \ -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3.0 ]; then\n      \
    \  echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif [\
    \ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2.0 ]; then\n   \
    \     echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1.0 ]; then\n \
    \       echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0.0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n  \
    \  fi", "    if [[ $1 -ge 4.0 ]]; then\n        echo \"A+\"\n    elif [[ $1 -ge\
    \ 3.7 ]]; then\n        echo \"A\"\n    elif [[ $1 -ge 3.3 ]]; then\n        echo\
    \ \"A-\"\n    elif [[ $1 -ge 3.0 ]]; then\n        echo \"B+\"\n    elif [[ $1\
    \ -ge 2.7 ]]; then\n        echo \"B\"\n    elif [[ $1 -ge 2.3 ]]; then\n    \
    \    echo \"B-\"\n    elif [[ $1 -ge 2.0 ]]; then\n        echo \"C+\"\n    elif\
    \ [[ $1 -ge 1.7 ]]; then\n        echo \"C\"\n    elif [[ $1 -ge 1.3 ]]; then\n\
    \        echo \"C-\"\n    elif [[ $1 -ge 1.0 ]]; then\n        echo \"D+\"\n \
    \   elif [[ $1 -ge 0.7 ]]; then\n        echo \"D\"\n    elif [[ $1 -ge 0.0 ]];\
    \ then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    local\
    \ gpa=$1\n    if [ $(echo \"$gpa >= 4.0\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"A+\"\n    elif [ $(echo \"$gpa >= 3.7\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"A\"\n    elif [ $(echo \"$gpa >= 3.3\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"A-\"\n    elif [ $(echo \"$gpa >= 3.0\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"B+\"\n    elif [ $(echo \"$gpa >= 2.7\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"B\"\n    elif [ $(echo \"$gpa >= 2.3\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"B-\"\n    elif [ $(echo \"$gpa >= 2.0\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"C+\"\n    elif [ $(echo \"$gpa >= 1.7\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"C\"\n    elif [ $(echo \"$gpa >= 1.3\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"C-\"\n    elif [ $(echo \"$gpa >= 1.0\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"D+\"\n    elif [ $(echo \"$gpa >= 0.7\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"D\"\n    elif [ $(echo \"$gpa >= 0.0\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"D-\"\n    else\n        echo \"E\"\n    fi", "    # Write your code here\n\
    \    # You can use the following function to convert a string to a number\n  \
    \  # number=$(echo \"$1\" | bc -l)\n    # You can use the following function to\
    \ convert a number to a string\n    # string=$(printf \"%.2f\" $1)\n    # You\
    \ can use the following function to print a string\n    # echo $1\n    # You can\
    \ use the following function to print a list of strings\n    # echo \"[$1]\"",
  "    # your code here\n    # hint: use the case statement\n    # hint: use the bc\
    \ command\n    # hint: use the echo command\n    # hint: use the tr command\n\
    \    # hint: use the cut command\n    # hint: use the printf command\n    # hint:\
    \ use the sed command\n    # hint: use the grep command\n    # hint: use the head\
    \ command\n    # hint: use the tail command\n    # hint: use the sort command\n\
    \    # hint: use the uniq command\n    # hint: use the wc command\n    # hint:\
    \ use the tr command\n    # hint: use the cut command\n    # hint: use the printf\
    \ command\n    # hint: use the sed command\n    # hint: use the grep command\n\
    \    # hint: use the head command\n    # hint: use the tail command\n    # hint:\
    \ use the sort command\n    # hint: use the uniq command\n    # hint: use the\
    \ wc command\n    # hint: use the tr command\n    # hint: use the cut command\n\
    \    # hint: use the printf command\n    # hint: use the sed command\n    # hint:\
    \ use the grep command\n    # hint: use the head command\n    # hint: use the\
    \ tail command\n    # hint: use the sort command\n    # hint: use the uniq command\n\
    \    # hint: use the wc command\n    # hint: use the tr command\n    # hint: use\
    \ the cut command\n    # hint: use the printf command\n    # hint: use the sed\
    \ command\n    # hint: use the grep command\n    # hint: use the head command\n\
    \    # hint: use the tail command\n    # hint: use the sort command\n    # hint:\
    \ use the uniq command\n    # hint: use the wc command\n    # hint: use the tr\
    \ command\n    # hint: use the cut command\n    # hint: use the printf command\n\
    \    # hint: use the sed command\n    # hint: use the grep command\n    # hint:\
    \ use the head command\n    # hint: use the tail command\n    # hint: use the\
    \ sort command\n    # hint: use the uniq command\n    # hint: use the wc command\n\
    \    # hint: use the tr command\n    # hint: use the cut command\n", "    # $1\
    \ is a number\n    if [ $(echo \"$1 >= 4.0\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"A+\"\n    elif [ $(echo \"$1 >= 3.7\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"A\"\n    elif [ $(echo \"$1 >= 3.3\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"A-\"\n    elif [ $(echo \"$1 >= 3.0\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"B+\"\n    elif [ $(echo \"$1 >= 2.7\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"B\"\n    elif [ $(echo \"$1 >= 2.3\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"B-\"\n    elif [ $(echo \"$1 >= 2.0\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"C+\"\n    elif [ $(echo \"$1 >= 1.7\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"C\"\n    elif [ $(echo \"$1 >= 1.3\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"C-\"\n    elif [ $(echo \"$1 >= 1.0\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"D+\"\n    elif [ $(echo \"$1 >= 0.7\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"D\"\n    elif [ $(echo \"$1 >= 0.0\" | bc -l) -eq 1 ]; then\n        echo\
    \ \"D-\"\n    else\n        echo \"E\"\n    fi", '    # TODO: Write your code
    here', "    # $1 is a number\n    if [ \"$1\" -ge 4.0 ]; then\n        echo \"\
    A+\"\n    elif [ \"$1\" -ge 3.7 ]; then\n        echo \"A\"\n    elif [ \"$1\"\
    \ -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ \"$1\" -ge 3.0 ]; then\n  \
    \      echo \"B+\"\n    elif [ \"$1\" -ge 2.7 ]; then\n        echo \"B\"\n  \
    \  elif [ \"$1\" -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ \"$1\" -ge 2.0\
    \ ]; then\n        echo \"C+\"\n    elif [ \"$1\" -ge 1.7 ]; then\n        echo\
    \ \"C\"\n    elif [ \"$1\" -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ \"\
    $1\" -ge 1.0 ]; then\n        echo \"D+\"\n    elif [ \"$1\" -ge 0.7 ]; then\n\
    \        echo \"D\"\n    elif [ \"$1\" -ge 0.0 ]; then\n        echo \"D-\"\n\
    \    else\n        echo \"E\"\n    fi", "    local grade=$1\n    if (( $(echo\
    \ \"$grade >= 4.0\" | bc -l) )); then\n        echo \"A+\"\n    elif (( $(echo\
    \ \"$grade >= 3.7\" | bc -l) )); then\n        echo \"A\"\n    elif (( $(echo\
    \ \"$grade >= 3.3\" | bc -l) )); then\n        echo \"A-\"\n    elif (( $(echo\
    \ \"$grade >= 3.0\" | bc -l) )); then\n        echo \"B+\"\n    elif (( $(echo\
    \ \"$grade >= 2.7\" | bc -l) )); then\n        echo \"B\"\n    elif (( $(echo\
    \ \"$grade >= 2.3\" | bc -l) )); then\n        echo \"B-\"\n    elif (( $(echo\
    \ \"$grade >= 2.0\" | bc -l) )); then\n        echo \"C+\"\n    elif (( $(echo\
    \ \"$grade >= 1.7\" | bc -l) )); then\n        echo \"C\"\n    elif (( $(echo\
    \ \"$grade >= 1.3\" | bc -l) )); then\n        echo \"C-\"\n    elif (( $(echo\
    \ \"$grade >= 1.0\" | bc -l) )); then\n        echo \"D+\"\n    elif (( $(echo\
    \ \"$grade >= 0.7\" | bc -l) )); then\n        echo \"D\"\n    elif (( $(echo\
    \ \"$grade >= 0.0\" | bc -l) )); then\n        echo \"D-\"\n    else\n       \
    \ echo \"E\"\n    fi", "    # TODO: write your code here\n    echo \"TODO\"",
  "    # Write your code here\n    # You can use the following command to convert\
    \ a string to an array:\n    # arr=($(echo $1 | tr \" \" \"\\n\"))\n    # You\
    \ can use the following command to convert an array to a string:\n    # echo \"\
    ${arr[@]}\"\n    # You can use the following command to convert a string to a\
    \ float:\n    # echo \"$1\" | awk '{printf(\"%f\", $1)}'\n    # You can use the\
    \ following command to convert a float to a string:\n    # printf \"%.1f\" $1\n\
    \    # You can use the following command to convert a string to an integer:\n\
    \    # echo \"$1\" | awk '{printf(\"%d\", $1)}'\n    # You can use the following\
    \ command to convert an integer to a string:\n    # printf \"%d\" $1\n    # You\
    \ can use the following command to convert a string to a boolean:\n    # [[ $1\
    \ == \"true\" ]] && echo \"true\" || echo \"false\"\n    # You can use the following\
    \ command to convert a boolean to a string:\n    # [[ $1 == \"true\" ]] && echo\
    \ \"true\" || echo \"false\"\n    # You can use the following command to convert\
    \ a boolean to an integer:\n    # [[ $1 == \"true\" ]] && echo \"1\" || echo \"\
    0\"\n    # You can use the following command to convert an integer to a boolean:\n\
    \    # [[ $1 == \"1\" ]] && echo \"true\" || echo \"false\"\n    # You can use\
    \ the following command to convert a boolean to a float:\n    # [[ $1 == \"true\"\
    \ ]] && echo \"1.0\" || echo \"0.0\"\n    # You can use the following command\
    \ to convert a float to a boolean:\n    # [[ $(echo \"$1 > 0.0\" | bc) == \"1\"\
    \ ]] && echo \"true\" || echo \"false\"\n    # You can use the following command\
    \ to convert a boolean to a string:\n    # [[ $1 == \"true\" ]] && echo \"true\"\
    \ || echo \"false\"\n    # You can use the following command to convert a string\
    \ to a boolean:\n    # [[ $1 == \"true", "    # YOUR CODE HERE\n    # Hint: Use\
    \ the case statement\n    # Hint: Use the bc command to do floating point arithmetic\n\
    \    # Hint: Use the echo command to output the result\n    # Hint: Use the printf\
    \ command to format the output\n    # Hint: Use the bc command to do floating\
    \ point arithmetic\n    # Hint: Use the echo command to output the result\n  \
    \  # Hint: Use the printf command to format the output\n    # Hint: Use the bc\
    \ command to do floating point arithmetic\n    # Hint: Use the echo command to\
    \ output the result\n    # Hint: Use the printf command to format the output\n\
    \    # Hint: Use the bc command to do floating point arithmetic\n    # Hint: Use\
    \ the echo command to output the result\n    # Hint: Use the printf command to\
    \ format the output\n    # Hint: Use the bc command to do floating point arithmetic\n\
    \    # Hint: Use the echo command to output the result\n    # Hint: Use the printf\
    \ command to format the output\n    # Hint: Use the bc command to do floating\
    \ point arithmetic\n    # Hint: Use the echo command to output the result\n  \
    \  # Hint: Use the printf command to format the output\n    # Hint: Use the bc\
    \ command to do floating point arithmetic\n    # Hint: Use the echo command to\
    \ output the result\n    # Hint: Use the printf command to format the output\n\
    \    # Hint: Use the bc command to do floating point arithmetic\n    # Hint: Use\
    \ the echo command to output the result\n    # Hint: Use the printf command to\
    \ format the output\n    # Hint: Use the bc command to do floating point arithmetic\n\
    \    # Hint: Use the echo command to output the result\n    # Hint: Use the printf\
    \ command to format the output\n    # Hint: Use the bc command to do floating\
    \ point arithmetic\n    # Hint: Use the echo command to output the result\n  \
    \  # Hint: Use the printf command to format the output\n    # Hint: Use the bc\
    \ command to do floating point arithmetic\n    # Hint: Use the echo command to\
    \ output the result\n    # Hint: Use the printf command to format the output\n\
    \    # Hint: Use the bc command to do floating point arithmetic\n    # Hint: Use\
    \ the", "    local gpa=$1\n    if [ $(echo \"$gpa >= 4.0\" | bc -l) -eq 1 ]; then\n\
    \        echo \"A+\"\n    elif [ $(echo \"$gpa >= 3.7\" | bc -l) -eq 1 ]; then\n\
    \        echo \"A\"\n    elif [ $(echo \"$gpa >= 3.3\" | bc -l) -eq 1 ]; then\n\
    \        echo \"A-\"\n    elif [ $(echo \"$gpa >= 3.0\" | bc -l) -eq 1 ]; then\n\
    \        echo \"B+\"\n    elif [ $(echo \"$gpa >= 2.7\" | bc -l) -eq 1 ]; then\n\
    \        echo \"B\"\n    elif [ $(echo \"$gpa >= 2.3\" | bc -l) -eq 1 ]; then\n\
    \        echo \"B-\"\n    elif [ $(echo \"$gpa >= 2.0\" | bc -l) -eq 1 ]; then\n\
    \        echo \"C+\"\n    elif [ $(echo \"$gpa >= 1.7\" | bc -l) -eq 1 ]; then\n\
    \        echo \"C\"\n    elif [ $(echo \"$gpa >= 1.3\" | bc -l) -eq 1 ]; then\n\
    \        echo \"C-\"\n    elif [ $(echo \"$gpa >= 1.0\" | bc -l) -eq 1 ]; then\n\
    \        echo \"D+\"\n    elif [ $(echo \"$gpa >= 0.7\" | bc -l) -eq 1 ]; then\n\
    \        echo \"D\"\n    elif [ $(echo \"$gpa >= 0.0\" | bc -l) -eq 1 ]; then\n\
    \        echo \"D-\"\n    else\n        echo \"E\"\n    fi", "    case $1 in\n\
    \        4.0) echo \"A+\";;\n        3.7) echo \"A\";;\n        3.3) echo \"A-\"\
    ;;\n        3.0) echo \"B+\";;\n        2.7) echo \"B\";;\n        2.3) echo \"\
    B-\";;\n        2.0) echo \"C+\";;\n        1.7) echo \"C\";;\n        1.3) echo\
    \ \"C-\";;\n        1.0) echo \"D+\";;\n        0.7) echo \"D\";;\n        0.0)\
    \ echo \"D-\";;\n        *) echo \"E\";;\n    esac", "    if [ $1 -ge 4 ]; then\n\
    \        echo \"A+\"\n    elif [ $1 -ge 3.7 ]; then\n        echo \"A\"\n    elif\
    \ [ $1 -ge 3.3 ]; then\n        echo \"A-\"\n    elif [ $1 -ge 3 ]; then\n   \
    \     echo \"B+\"\n    elif [ $1 -ge 2.7 ]; then\n        echo \"B\"\n    elif\
    \ [ $1 -ge 2.3 ]; then\n        echo \"B-\"\n    elif [ $1 -ge 2 ]; then\n   \
    \     echo \"C+\"\n    elif [ $1 -ge 1.7 ]; then\n        echo \"C\"\n    elif\
    \ [ $1 -ge 1.3 ]; then\n        echo \"C-\"\n    elif [ $1 -ge 1 ]; then\n   \
    \     echo \"D+\"\n    elif [ $1 -ge 0.7 ]; then\n        echo \"D\"\n    elif\
    \ [ $1 -ge 0 ]; then\n        echo \"D-\"\n    else\n        echo \"E\"\n    fi",
  "    local grade=$1\n    if (( $(echo \"$grade >= 4.0\" | bc -l) )); then\n    \
    \    echo \"A+\"\n    elif (( $(echo \"$grade >= 3.7\" | bc -l) )); then\n   \
    \     echo \"A\"\n    elif (( $(echo \"$grade >= 3.3\" | bc -l) )); then\n   \
    \     echo \"A-\"\n    elif (( $(echo \"$grade >= 3.0\" | bc -l) )); then\n  \
    \      echo \"B+\"\n    elif (( $(echo \"$grade >= 2.7\" | bc -l) )); then\n \
    \       echo \"B\"\n    elif (( $(echo \"$grade >= 2.3\" | bc -l) )); then\n \
    \       echo \"B-\"\n    elif (( $(echo \"$grade >= 2.0\" | bc -l) )); then\n\
    \        echo \"C+\"\n    elif (( $(echo \"$grade >= 1.7\" | bc -l) )); then\n\
    \        echo \"C\"\n    elif (( $(echo \"$grade >= 1.3\" | bc -l) )); then\n\
    \        echo \"C-\"\n    elif (( $(echo \"$grade >= 1.0\" | bc -l) )); then\n\
    \        echo \"D+\"\n    elif (( $(echo \"$grade >= 0.7\" | bc -l) )); then\n\
    \        echo \"D\"\n    elif (( $(echo \"$grade >= 0.0\" | bc -l) )); then\n\
    \        echo \"D-\"\n    else\n        echo \"E\"\n    fi", '    # Your code
    here']
stop_tokens:
- "\n}"

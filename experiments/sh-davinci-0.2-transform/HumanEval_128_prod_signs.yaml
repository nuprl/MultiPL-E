name: HumanEval_128_prod_signs
language: sh
prompt: "#!/bin/bash\n# You are given an array arr of integers and you need to return\n\
  # sum of magnitudes of integers multiplied by product of all signs\n# of each number\
  \ in the array, represented by 1, -1 or 0.\n# Note: return None for empty arr.\n\
  # Example:\n# >>> $(prod_signs \"1 2 2 -4\")\n# \"9\"\n# >>> $(prod_signs \"0 1\"\
  )\n# \"0\"\n# >>> $(prod_signs \"\")\n# \"None\"\n#\n# $1 is a space-separated list\n\
  prod_signs() {\n"
tests: "}\n\ncandidate() {\n    prod_signs \"$@\"\n}\n\nset -e\nrun_test() {\n   \
  \ [[ $(candidate \"1 2 2 -4\") = \"-9\" ]]\n    [[ $(candidate \"0 1\") = \"0\"\
  \ ]]\n    [[ $(candidate \"1 1 1 2 3 -1 1\") = \"-10\" ]]\n    [[ $(candidate \"\
  \") = \"None\" ]]\n    [[ $(candidate \"2 4 1 2 -1 -1 9\") = \"20\" ]]\n    [[ $(candidate\
  \ \"-1 1 -1 1\") = \"4\" ]]\n    [[ $(candidate \"-1 1 1 1\") = \"-4\" ]]\n    [[\
  \ $(candidate \"-1 1 1 0\") = \"0\" ]]\n}\n\nrun_test"
completions: ["    if [[ -z \"$1\" ]]; then\n        echo \"None\"\n        return\n\
    \    fi\n    local prod=1\n    local sum=0\n    for i in $1; do\n        if [[\
    \ $i -eq 0 ]]; then\n            prod=0\n            break\n        fi\n     \
    \   if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n   \
    \     sum=$((sum + i))\n    done\n    echo $((sum * prod))", "    local arr\n\
    \    arr=($1)\n    local prod=1\n    local sum=0\n    local i\n    for i in \"\
    ${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n\
    \        elif [[ $i -gt 0 ]]; then\n            prod=$((prod * 1))\n        else\n\
    \            prod=0\n        fi\n        sum=$((sum + i))\n    done\n    if [[\
    \ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo $((sum *\
    \ prod))\n    fi", "  local arr=($1)\n  local sum=0\n  local prod=1\n  local sign=0\n\
    \  local i=0\n  local len=${#arr[@]}\n  if [ $len -eq 0 ]; then\n    echo \"None\"\
    \n    return\n  fi\n  for ((i=0; i<len; i++)); do\n    if [ ${arr[$i]} -lt 0 ];\
    \ then\n      sign=-1\n    elif [ ${arr[$i]} -gt 0 ]; then\n      sign=1\n   \
    \ else\n      sign=0\n    fi\n    sum=$((sum + ${arr[$i]}))\n    prod=$((prod\
    \ * sign))\n  done\n  echo $((sum * prod))", "    local arr=($1)\n    local sum=0\n\
    \    local prod=1\n    if [ ${#arr[@]} -eq 0 ]; then\n        echo \"None\"\n\
    \        return\n    fi\n    for i in ${arr[@]}; do\n        if [ $i -eq 0 ];\
    \ then\n            prod=0\n            break\n        fi\n        if [ $i -lt\
    \ 0 ]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum +\
    \ i))\n    done\n    echo $((sum * prod))", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq 0 ]]; then\n\
    \            prod=0\n            break\n        elif [[ $i -lt 0 ]]; then\n  \
    \          prod=$((prod * -1))\n        fi\n        sum=$((sum + i))\n    done\n\
    \    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n        echo\
    \ \"$((sum * prod))\"\n    fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  if [ ${#arr[@]} -eq 0 ]; then\n    echo \"None\"\n    return\n  fi\n  for i\
    \ in ${arr[@]}; do\n    if [ $i -gt 0 ]; then\n      prod=$((prod * 1))\n    elif\
    \ [ $i -lt 0 ]; then\n      prod=$((prod * -1))\n    else\n      prod=0\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo $((prod * sum))", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    if [ ${#arr[@]} -eq 0 ]; then\n      \
    \  echo \"None\"\n        return\n    fi\n    for i in ${arr[@]}; do\n       \
    \ if [ $i -gt 0 ]; then\n            sum=$((sum + i))\n        elif [ $i -lt 0\
    \ ]; then\n            sum=$((sum - i))\n            prod=$((prod * -1))\n   \
    \     fi\n    done\n    echo $((sum * prod))", "    local arr=(\"$@\")\n    local\
    \ prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if [[ $i -eq\
    \ 0 ]]; then\n            prod=0\n            break\n        elif [[ $i -lt 0\
    \ ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum +\
    \ i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi", "    local arr=\"$1\"\n    local prod=1\n\
    \    local sum=0\n    for i in $arr; do\n        if [[ $i -eq 0 ]]; then\n   \
    \         prod=0\n        elif [[ $i -lt 0 ]]; then\n            prod=$((prod\
    \ * -1))\n        fi\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0\
    \ ]]; then\n        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n\
    \    fi", "  local arr=($1)\n  local prod=1\n  local sum=0\n  local i\n  for i\
    \ in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n    elif [[\
    \ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n\
    \  done\n  echo $((sum * prod))", "  local arr=($1)\n  local prod=1\n  local sum=0\n\
    \  for i in \"${arr[@]}\"; do\n    if [[ $i -eq 0 ]]; then\n      prod=0\n   \
    \   break\n    elif [[ $i -lt 0 ]]; then\n      prod=$((prod * -1))\n    fi\n\
    \    sum=$((sum + i))\n  done\n  echo \"$((sum * prod))\"", "    local arr=($1)\n\
    \    local sum=0\n    local prod=1\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -eq 0 ]]; then\n            prod=0\n            break\n        fi\n  \
    \      if [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo $((sum * prod))\n    fi", "  local arr=(\"\
    $@\")\n  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[\
    \ $i -eq 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n\
    \      prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum\
    \ * prod))\"", "    local arr=($1)\n    local prod=1\n    local sum=0\n    local\
    \ i\n    for i in \"${arr[@]}\"; do\n        if [[ $i -lt 0 ]]; then\n       \
    \     prod=$((prod * -1))\n        elif [[ $i -gt 0 ]]; then\n            prod=$((prod\
    \ * 1))\n        else\n            prod=0\n        fi\n        sum=$((sum + i))\n\
    \    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n  \
    \      echo \"$((sum * prod))\"\n    fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    local sign=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -eq 0 ]]; then\n            sign=0\n        elif [[ $i -lt 0 ]]; then\n\
    \            sign=-1\n        else\n            sign=1\n        fi\n        prod=$((prod\
    \ * sign))\n        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n\
    \        echo \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", " \
    \   local arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n\
    \        sum=$((sum + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo\
    \ \"None\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "    local arr=($1)\n\
    \    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"; do\n        if\
    \ [[ $i -eq 0 ]]; then\n            prod=0\n            break\n        elif [[\
    \ $i -lt 0 ]]; then\n            prod=$((prod * -1))\n        fi\n        sum=$((sum\
    \ + i))\n    done\n    if [[ $sum -eq 0 ]]; then\n        echo \"None\"\n    else\n\
    \        echo $((sum * prod))\n    fi", "    local arr=($1)\n    local prod=1\n\
    \    local sum=0\n    local len=${#arr[@]}\n    if [ $len -eq 0 ]; then\n    \
    \    echo \"None\"\n        return\n    fi\n    for ((i=0; i<$len; i++)); do\n\
    \        local num=${arr[$i]}\n        if [ $num -lt 0 ]; then\n            prod=$((prod\
    \ * -1))\n        elif [ $num -eq 0 ]; then\n            prod=0\n            break\n\
    \        fi\n        sum=$((sum + num))\n    done\n    echo $((sum * prod))",
  "    local arr=($1)\n    local prod=1\n    local sum=0\n    for i in \"${arr[@]}\"\
    ; do\n        if [[ $i -eq 0 ]]; then\n            prod=0\n            break\n\
    \        elif [[ $i -lt 0 ]]; then\n            ((prod *= -1))\n        fi\n \
    \       ((sum += i))\n    done\n    if [[ $prod -eq 0 ]]; then\n        echo \"\
    0\"\n    else\n        echo \"$((sum * prod))\"\n    fi", "  local arr=($1)\n\
    \  local prod=1\n  local sum=0\n  for i in \"${arr[@]}\"; do\n    if [[ $i -eq\
    \ 0 ]]; then\n      prod=0\n      break\n    elif [[ $i -lt 0 ]]; then\n     \
    \ prod=$((prod * -1))\n    fi\n    sum=$((sum + i))\n  done\n  echo \"$((sum *\
    \ prod))\""]
stop_tokens:
- "\n}"

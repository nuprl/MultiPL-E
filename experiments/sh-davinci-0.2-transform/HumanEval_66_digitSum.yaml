name: HumanEval_66_digitSum
language: sh
prompt: "#!/bin/bash\n# Task\n# Write a function that takes a string as input and\
  \ returns the sum of the upper characters only'\n# ASCII codes.\n# Examples:\n#\
  \ >>> $(digitSum \"\")\n# \"0\"\n# >>> $(digitSum \"abAB\")\n# \"131\"\n# >>> $(digitSum\
  \ \"abcCd\")\n# \"67\"\n# >>> $(digitSum \"helloE\")\n# \"69\"\n# >>> $(digitSum\
  \ \"woArBld\")\n# \"131\"\n# >>> $(digitSum \"aAaaaXa\")\n# \"153\"\n#\n# $1 is\
  \ a string\ndigitSum() {\n"
tests: "}\n\ncandidate() {\n    digitSum \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
  \ $(candidate \"\") = \"0\" ]]\n    [[ $(candidate \"abAB\") = \"131\" ]]\n    [[\
  \ $(candidate \"abcCd\") = \"67\" ]]\n    [[ $(candidate \"helloE\") = \"69\" ]]\n\
  \    [[ $(candidate \"woArBld\") = \"131\" ]]\n    [[ $(candidate \"aAaaaXa\") =\
  \ \"153\" ]]\n    [[ $(candidate \" How are yOu?\") = \"151\" ]]\n    [[ $(candidate\
  \ \"You arE Very Smart\") = \"327\" ]]\n}\n\nrun_test"
completions: ["    local sum=0\n    local str=$1\n    local i=0\n    local len=${#str}\n\
    \    while [ $i -lt $len ]; do\n        local char=${str:$i:1}\n        local\
    \ char_ascii=$(printf \"%d\" \"'$char\")\n        if [ $char_ascii -ge 65 ] &&\
    \ [ $char_ascii -le 90 ]; then\n            sum=$((sum + char_ascii))\n      \
    \  fi\n        i=$((i + 1))\n    done\n    echo $sum", "    echo \"$1\" | grep\
    \ -o \"[A-Z]\" | awk '{s+=$1} END {print s}'", "    echo \"$1\" | grep -o '[A-Z]'\
    \ | awk '{s+=$1} END {print s}'", "    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:$i:1}\n        if [[ \"$char\" =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo \"$sum\"", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n \
    \       local char=${1:$i:1}\n        local ascii=$(printf \"%d\" \"'$char\")\n\
    \        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n            (( sum +=\
    \ ascii ))\n        fi\n    done\n    echo $sum", "    echo \"$1\" | grep -o '[A-Z]'\
    \ | awk '{sum+=$1} END {print sum}'", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local char=${1:$i:1}\n        local charCode=$(printf \"\
    %d\" \"'$char\")\n        if [[ $charCode -ge 65 && $charCode -le 90 ]]; then\n\
    \            (( sum += charCode ))\n        fi\n    done\n    echo $sum", "  \
    \  local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ $char =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\"\
    \ \"'$char\")))\n        fi\n    done\n    echo $sum", "    echo \"$1\" | tr -d\
    \ '[:lower:]' | awk '{sum=0;for(i=1;i<=length($0);i++)sum+=(substr($0,i,1))}END{print\
    \ sum}'", "  local sum=0\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n\
    \    if [[ $char =~ [A-Z] ]]; then\n      sum=$(( sum + $(printf \"%d\" \"'$char\"\
    ) ))\n    fi\n  done\n  echo $sum", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local char=${1:$i:1}\n        local ascii=$(printf \"%d\"\
    \ \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n       \
    \     sum=$((sum + ascii))\n        fi\n    done\n    echo $sum", "    local sum=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if\
    \ [[ $char =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf \"%d\" \"'$char\"\
    ) ))\n        fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        local ascii=$(printf\
    \ \"%d\" \"'$char\")\n        if (( ascii >= 65 && ascii <= 90 )); then\n    \
    \        (( sum += ascii ))\n        fi\n    done\n    echo $sum", "    local\
    \ sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n \
    \       local ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 &&\
    \ $ascii -le 90 ]]; then\n            (( sum+=ascii ))\n        fi\n    done\n\
    \    echo $sum", "    echo \"$1\" | grep -o \"[A-Z]\" | awk '{sum+=$1} END {print\
    \ sum}'", "    echo $1 | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "   \
    \ echo \"$1\" | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "    echo $(echo\
    \ $1 | tr -d [:lower:] | sed 's/\\(.\\)/\\1\\n/g' | awk '{sum+=$1} END {print\
    \ sum}')", "    echo $1 | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "  \
    \  # Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo $1 | grep -o '[A-Z]'\
    \ | awk '{s+=$1} END {print s}'", "    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n     \
    \   local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n    echo $sum", "   \
    \ local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        local charCode=$(printf \"%d\" \"'$char\")\n        if [[ $charCode -ge\
    \ 65 && $charCode -le 90 ]]; then\n            (( sum += charCode ))\n       \
    \ fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:$i:1}\n        if [[ \"$char\" =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo \"$sum\"", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n \
    \       local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n        \
    \    sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n    echo\
    \ $sum", "    echo \"$1\" | tr -d '[:lower:]' | awk '{sum=0; for(i=1;i<=length($0);i++)\
    \ {sum+=(substr($0,i,1))}; print sum}'", "    echo $1 | grep -o '[A-Z]' | awk\
    \ '{s+=$1} END {print s}'", "    echo \"$1\" | awk '{\n        for (i = 1; i <=\
    \ length($1); i++) {\n            if (substr($1, i, 1) ~ /[A-Z]/) {\n        \
    \        sum += sprintf(\"%d\", substr($1, i, 1))\n            }\n        }\n\
    \        print sum\n    }'", "    local sum=0\n    for (( i=0; i<${#1}; i++ ));\
    \ do\n        local char=${1:$i:1}\n        local ascii=$(printf \"%d\" \"'$char\"\
    )\n        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n            sum=$((sum\
    \ + ascii))\n        fi\n    done\n    echo $sum", "    local str=$1\n    local\
    \ sum=0\n    for (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n\
    \        local char_ascii=$(printf \"%d\" \"'$char\")\n        if [ $char_ascii\
    \ -ge 65 ] && [ $char_ascii -le 90 ]; then\n            sum=$((sum + char_ascii))\n\
    \        fi\n    done\n    echo $sum", "    local -i sum=0\n    for ((i=0; i<${#1};\
    \ i++)); do\n        if [[ \"${1:i:1}\" =~ [A-Z] ]]; then\n            sum+=$(printf\
    \ \"%d\" \"'${1:i:1}\")\n        fi\n    done\n    echo \"$sum\"", "  local sum=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    local charCode=$(printf\
    \ \"%d\" \"'$char\")\n    if [[ $charCode -ge 65 && $charCode -le 90 ]]; then\n\
    \      (( sum+=charCode ))\n    fi\n  done\n  echo $sum", "    # $1 is a string\n\
    \    # $2 is the sum of the upper characters only\n    if [ -z \"$1\" ]; then\n\
    \        echo \"$2\"\n    else\n        local char=\"${1:0:1}\"\n        local\
    \ rest=\"${1:1}\"\n        if [ \"$char\" == \"${char^^}\" ]; then\n         \
    \   local sum=$(( $2 + $(printf \"%d\" \"'$char\") ))\n        else\n        \
    \    local sum=$2\n        fi\n        digitSum \"$rest\" \"$sum\"\n    fi", " \
    \   local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        local ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65\
    \ && $ascii -le 90 ]]; then\n            (( sum += ascii ))\n        fi\n    done\n\
    \    echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n     \
    \   local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n    echo $sum", "   \
    \ local sum=0\n    local str=$1\n    for (( i=0; i<${#str}; i++ )); do\n     \
    \   local char=${str:$i:1}\n        local code=$(printf \"%d\" \"'$char\")\n \
    \       if [[ $code -ge 65 && $code -le 90 ]]; then\n            (( sum += code\
    \ ))\n        fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $char =~ [A-Z]\
    \ ]]; then\n            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n       \
    \ fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:$i:1}\n        local ascii=$(printf \"%d\" \"\
    '$char\")\n        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n           \
    \ (( sum += ascii ))\n        fi\n    done\n    echo $sum", "    local sum=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if\
    \ [[ \"$char\" =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\" \"\
    '$char\")))\n        fi\n    done\n    echo \"$sum\"", "    echo $1 | grep -o\
    \ '[A-Z]' | awk '{s+=$1} END {print s}'", "  local sum=0\n  for (( i=0; i<${#1};\
    \ i++ )); do\n    local char=${1:$i:1}\n    if [[ \"$char\" =~ [A-Z] ]]; then\n\
    \      sum=$((sum + $(printf \"%d\" \"'$char\")))\n    fi\n  done\n  echo \"$sum\"",
  "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ $char =~ [A-Z] ]]; then\n            local ascii=$(printf \"%d\"\
    \ \"'$char\")\n            sum=$((sum + ascii))\n        fi\n    done\n    echo\
    \ $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local\
    \ char=${1:$i:1}\n        local charCode=$(printf \"%d\" \"'$char\")\n       \
    \ if [[ $charCode -ge 65 && $charCode -le 90 ]]; then\n            (( sum += charCode\
    \ ))\n        fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ \"$char\" =~\
    \ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\" \"'$char\")))\n   \
    \     fi\n    done\n    echo \"$sum\"", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"0\"",
  "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ $char =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\"\
    \ \"'$char\")))\n        fi\n    done\n    echo $sum", "    # Write your code\
    \ here\n    # To print results to the standard output you can use echo\n    #\
    \ Example: echo \"Hello world\"\n    echo \"0\"", "    local sum=0\n    for ((\
    \ i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $char\
    \ =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n\
    \        fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local char=${1:$i:1}\n        if [[ \"$char\" =~ [A-Z] ]];\
    \ then\n            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n\
    \    done\n    echo \"$sum\"", "    echo \"$1\" | grep -o '[A-Z]' | awk '{s+=$1}\
    \ END {print s}'", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n   \
    \     local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n          \
    \  sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n    echo\
    \ $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local\
    \ ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if (( ascii >= 65 && ascii <=\
    \ 90 )); then\n            (( sum += ascii ))\n        fi\n    done\n    echo\
    \ $sum", "    echo $1 | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "    #\
    \ Write your code here\n    # To print results to the standard output you can\
    \ use echo\n    # Example: echo \"Hello world\"\n    echo \"0\"", "    echo \"\
    $1\" | grep -o \"[A-Z]\" | awk '{s+=$1} END {print s}'", "  local sum=0\n  for\
    \ (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ \"$char\" =~\
    \ [A-Z] ]]; then\n      sum=$((sum + $(printf \"%d\" \"'$char\")))\n    fi\n \
    \ done\n  echo \"$sum\"", "    echo $1 | grep -o [A-Z] | awk '{s+=$1} END {print\
    \ s}'", "  # Write your code here\n  # To print results to the standard output\
    \ you can use echo\n  # Example: echo \"Hello world\"\n  echo \"0\"", "    local\
    \ sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n \
    \       local charCode=$(printf \"%d\" \"'$char\")\n        if [[ $charCode -ge\
    \ 65 && $charCode -le 90 ]]; then\n            sum=$((sum + charCode))\n     \
    \   fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n     \
    \   local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n    echo $sum",
  "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ \"$char\" =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf\
    \ \"%d\" \"'$char\") ))\n        fi\n    done\n    echo \"$sum\"", "    local\
    \ sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n \
    \       if [[ \"$char\" =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"\
    %d\" \"'$char\")))\n        fi\n    done\n    echo \"$sum\"", "    echo \"$1\"\
    \ | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "    echo \"$1\" | grep -o\
    \ '[A-Z]' | awk '{s+=$1} END {print s}'", "    echo \"$1\" | tr -d '[:lower:]'\
    \ | awk '{sum=0; for(i=1;i<=length($0);i++) {sum+=(substr($0,i,1))} print sum}'",
  "    echo $1 | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "    local sum=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if\
    \ [[ \"$char\" =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\" \"\
    '$char\")))\n        fi\n    done\n    echo \"$sum\"", "    local sum=0\n    local\
    \ str=$1\n    for (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n\
    \        local ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65\
    \ && $ascii -le 90 ]]; then\n            (( sum += ascii ))\n        fi\n    done\n\
    \    echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n     \
    \   local char=${1:$i:1}\n        local ascii=$(printf \"%d\" \"'$char\")\n  \
    \      if (( ascii >= 65 && ascii <= 90 )); then\n            (( sum += ascii\
    \ ))\n        fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ \"$char\" =~\
    \ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\" \"'$char\")))\n   \
    \     fi\n    done\n    echo \"$sum\"", "    # your code here\n    echo \"$1\"\
    \ | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "  echo \"$1\" | grep -o \"\
    [A-Z]\" | awk '{sum+=$1} END {print sum}'", "    local sum=0\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        local char=\"${1:$i:1}\"\n        local ascii=$(printf\
    \ \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n\
    \            sum=$((sum + ascii))\n        fi\n    done\n    echo $sum", "   \
    \ local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ \"$char\" =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf\
    \ \"%d\" \"'$char\") ))\n        fi\n    done\n    echo \"$sum\"", "    local\
    \ sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n \
    \       local char_ascii=$(printf \"%d\" \"'$char\")\n        if [[ $char_ascii\
    \ -ge 65 && $char_ascii -le 90 ]]; then\n            (( sum += char_ascii ))\n\
    \        fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local ascii=$(printf \"%d\" \"'${1:$i:1}\")\n        if\
    \ (( ascii >= 65 && ascii <= 90 )); then\n            (( sum += ascii ))\n   \
    \     fi\n    done\n    echo $sum", "  local sum=0\n  for (( i=0; i<${#1}; i++\
    \ )); do\n    local char=${1:$i:1}\n    local charCode=$(printf \"%d\" \"'$char\"\
    )\n    if [[ $charCode -ge 65 && $charCode -le 90 ]]; then\n      (( sum+=charCode\
    \ ))\n    fi\n  done\n  echo $sum", "    echo \"$1\" | tr -d '[:lower:]' | awk\
    \ '{sum=0; for(i=1;i<=length($0);i++) {sum+=(substr($0,i,1))}; print sum}'", " \
    \   local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        local ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65\
    \ && $ascii -le 90 ]]; then\n            (( sum += ascii ))\n        fi\n    done\n\
    \    echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n     \
    \   local char=${1:$i:1}\n        local charCode=$(printf \"%d\" \"'$char\")\n\
    \        if [[ $charCode -ge 65 && $charCode -le 90 ]]; then\n            (( sum\
    \ += charCode ))\n        fi\n    done\n    echo $sum", "    local sum=0\n   \
    \ for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[\
    \ $char =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf \"%d\" \"'$char\"\
    ) ))\n        fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        local ascii=$(printf\
    \ \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n\
    \            (( sum+=ascii ))\n        fi\n    done\n    echo $sum", "    local\
    \ sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n \
    \       local ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65 &&\
    \ $ascii -le 90 ]]; then\n            (( sum += ascii ))\n        fi\n    done\n\
    \    echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n     \
    \   local char=${1:$i:1}\n        local ascii=$(printf \"%d\" \"'$char\")\n  \
    \      if (( ascii >= 65 && ascii <= 90 )); then\n            (( sum += ascii\
    \ ))\n        fi\n    done\n    echo $sum", "    # your code here\n    echo \"\
    $1\" | grep -o '[A-Z]' | awk '{ sum += $1 } END { print sum }'", "    echo \"\
    $1\" | tr -d '[:lower:]' | awk '{sum=0; for(i=1;i<=length($0);i++) {sum+=(substr($0,i,1))}\
    \ print sum}'", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n      \
    \  local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n    echo $sum", "   \
    \ local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ \"$char\" =~ [A-Z] ]]; then\n            sum=$((sum + $(printf\
    \ \"%d\" \"'$char\")))\n        fi\n    done\n    echo \"$sum\"", "  # Write your\
    \ code here\n  # To print results to the standard output you can use echo\n  #\
    \ Example: echo \"Hello world\"\n  echo \"0\"", "    local sum=0\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ \"$char\" =~\
    \ [A-Z] ]]; then\n            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n \
    \       fi\n    done\n    echo \"$sum\"", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local char=${1:$i:1}\n        local ascii=$(printf \"%d\"\
    \ \"'$char\")\n        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n       \
    \     sum=$((sum + ascii))\n        fi\n    done\n    echo $sum", "    echo \"\
    $1\" | tr -d [:lower:] | tr -d [:punct:] | tr -d [:digit:] | tr -d [:space:] |\
    \ awk '{sum=0; for(i=1;i<=NF;i++) {sum+=$i} print sum}'", "    local sum=0\n \
    \   for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        local\
    \ char_ascii=$(printf \"%d\" \"'$char\")\n        if [[ $char_ascii -ge 65 &&\
    \ $char_ascii -le 90 ]]; then\n            (( sum+=char_ascii ))\n        fi\n\
    \    done\n    echo $sum", "    echo \"$1\" | tr -d '[:lower:]' | awk '{sum=0;\
    \ for(i=1;i<=length($0);i++) {sum+=substr($0,i,1)}; print sum}'", "    # your\
    \ code here\n    echo $1 | tr -d [:lower:] | tr -d [:punct:] | tr -d [:space:]\
    \ | tr -d [:digit:] | awk '{sum=0; for(i=1;i<=NF;i++) {sum+=$i} print sum}'",
  "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ $char =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf \"\
    %d\" \"'$char\") ))\n        fi\n    done\n    echo $sum", "    # Write your code\
    \ here\n    # To print results to the standard output you can use echo\n    #\
    \ Example: echo \"Hello world\"\n    echo \"0\"", "    echo $1 | grep -o '[A-Z]'\
    \ | awk '{sum+=$1} END {print sum}'", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        if [[ ${1:$i:1} =~ [A-Z] ]]; then\n            sum=$(( sum\
    \ + ${1:$i:1} ))\n        fi\n    done\n    echo \"$sum\"", "  echo \"$1\" | grep\
    \ -o '[A-Z]' | awk '{s+=$1} END {print s}'", "    echo \"$1\" | grep -o '[A-Z]'\
    \ | awk '{sum += $1} END {print sum}'", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local c=${1:i:1}\n        if [[ $c =~ [A-Z] ]]; then\n \
    \           sum=$((sum + $(printf \"%d\" \"'$c\")))\n        fi\n    done\n  \
    \  echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n       \
    \ local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n    echo $sum", "  local\
    \ sum=0\n  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[\
    \ \"$char\" =~ [A-Z] ]]; then\n      sum=$(( sum + $(printf \"%d\" \"'$char\"\
    ) ))\n    fi\n  done\n  echo \"$sum\"", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local char=${1:$i:1}\n        if [[ \"$char\" =~ [A-Z] ]];\
    \ then\n            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n \
    \   done\n    echo \"$sum\"", "    echo $1 | grep -o '[A-Z]' | awk '{s+=$1} END\
    \ {print s}'", "    local sum=0\n    local str=$1\n    for (( i=0; i<${#str};\
    \ i++ )); do\n        local char=${str:$i:1}\n        if [[ \"$char\" =~ [A-Z]\
    \ ]]; then\n            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n\
    \    done\n    echo $sum", "    echo $1 | tr -d '[:lower:]' | awk '{sum=0; for(i=1;i<=length($0);i++)\
    \ {sum+=(substr($0,i,1))}; print sum}'", "    echo $1 | tr -d [:lower:] | tr -d\
    \ [:punct:] | tr -d [:space:] | tr -d [:digit:] | awk '{sum+=$1} END {print sum}'",
  "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ \"$char\" =~ [A-Z] ]]; then\n            sum=$((sum + $(printf\
    \ \"%d\" \"'$char\")))\n        fi\n    done\n    echo \"$sum\"", "    echo \"\
    $1\" | grep -o '[A-Z]' | awk '{sum += $1} END {print sum}'", "  local sum=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $char\
    \ =~ [A-Z] ]]; then\n      sum=$((sum + $(printf \"%d\" \"'$char\")))\n    fi\n\
    \  done\n  echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n\
    \        local char=${1:$i:1}\n        local char_ascii=$(printf \"%d\" \"'$char\"\
    )\n        if [[ $char_ascii -ge 65 && $char_ascii -le 90 ]]; then\n         \
    \   (( sum += char_ascii ))\n        fi\n    done\n    echo $sum", "    local\
    \ sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n \
    \       if [[ $char =~ [A-Z] ]]; then\n            local char_code=$(printf \"\
    %d\" \"'$char\")\n            sum=$((sum + char_code))\n        fi\n    done\n\
    \    echo $sum", "    echo \"$1\" | grep -o '[A-Z]' | awk '{s+=$1} END {print\
    \ s}'", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        if [[ ${1:$i:1}\
    \ =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\" \"'${1:$i:1}\")))\n\
    \        fi\n    done\n    echo $sum", "    echo \"$1\" | grep -o \"[A-Z]\" |\
    \ awk '{s+=$1} END {print s}'", "    local sum=0\n    for (( i=0; i<${#1}; i++\
    \ )); do\n        local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n\
    \    echo $sum", "    # Write your code here\n    # To print results to the standard\
    \ output you can use echo\n    # Example: echo \"Hello world\"\n    echo \"0\"",
  "    # your code here\n    echo \"$1\" | grep -o '[A-Z]' | awk '{s+=$1} END {print\
    \ s}'", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ $char =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf \"\
    %d\" \"'$char\") ))\n        fi\n    done\n    echo $sum", "    # your code here\n\
    \    echo \"$1\" | grep -o [A-Z] | awk '{s+=$1} END {print s}'", "    local sum=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if\
    \ [[ $char =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\" \"'$char\"\
    )))\n        fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local char=${1:$i:1}\n        local charCode=$(printf \"\
    %d\" \"'$char\")\n        if [[ $charCode -ge 65 && $charCode -le 90 ]]; then\n\
    \            (( sum += charCode ))\n        fi\n    done\n    echo $sum", "  \
    \  echo \"$1\" | tr -d '[:lower:]' | awk '{sum=0; for(i=1;i<=length($0);i++) {sum+=(substr($0,i,1))}\
    \ print sum}'", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n      \
    \  local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n    echo $sum",
  "    echo $1 | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "    local sum=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if\
    \ [[ $char =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf \"%d\" \"'$char\"\
    ) ))\n        fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $char =~ [A-Z]\
    \ ]]; then\n            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n\
    \    done\n    echo $sum", "    echo \"$1\" | tr -d -c 'A-Z' | awk '{sum += $1}\
    \ END {print sum}'", "    echo $1 | tr -d [:lower:] | tr -d [:punct:] | tr -d\
    \ [:space:] | tr -d [:digit:] | awk '{sum=0; for(i=1;i<=NF;i++) {sum+=$i}; print\
    \ sum}'", "    local sum=0\n    local str=\"$1\"\n    for (( i=0; i<${#str}; i++\
    \ )); do\n        local char=${str:$i:1}\n        local ascii=$(printf \"%d\"\
    \ \"'$char\")\n        if [ $ascii -ge 65 ] && [ $ascii -le 90 ]; then\n     \
    \       sum=$((sum + ascii))\n        fi\n    done\n    echo $sum", "    local\
    \ sum=0\n    local str=$1\n    for (( i=0; i<${#str}; i++ )); do\n        local\
    \ char=${str:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n    echo $sum",
  "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ $char =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf \"\
    %d\" \"'$char\") ))\n        fi\n    done\n    echo $sum", "    echo \"$1\" |\
    \ tr -d [:lower:] | tr -d [:punct:] | tr -d [:space:] | awk '{sum=0; for(i=1;i<=NF;i++)\
    \ {sum+=$i}; print sum}'", "    local sum=0\n    local str=\"$1\"\n    local i=0\n\
    \    local len=${#str}\n    while [ $i -lt $len ]; do\n        local char=${str:$i:1}\n\
    \        local ascii=$(printf \"%d\" \"'$char\")\n        if [ $ascii -ge 65 ]\
    \ && [ $ascii -le 90 ]; then\n            sum=$((sum + ascii))\n        fi\n \
    \       i=$((i + 1))\n    done\n    echo \"$sum\"", "    local sum=0\n    for\
    \ (( i=0; i<${#1}; i++ )); do\n        local c=${1:i:1}\n        if [[ $c =~ [A-Z]\
    \ ]]; then\n            sum=$((sum + $(printf \"%d\" \"'$c\")))\n        fi\n\
    \    done\n    echo $sum", "    echo \"$1\" | tr -d [:lower:] | awk '{sum=0; for(i=1;i<=length($0);i++)\
    \ {sum+=(substr($0,i,1))} print sum}'", "    echo $1 | grep -o '[A-Z]' | awk '{s+=$1}\
    \ END {print s}'", "    local -i sum=0\n    local -i i=0\n    local -i len=${#1}\n\
    \    while [ $i -lt $len ]; do\n        local -i char=${1:$i:1}\n        if [\
    \ $char -ge 65 ] && [ $char -le 90 ]; then\n            sum=$((sum + char))\n\
    \        fi\n        i=$((i + 1))\n    done\n    echo \"$sum\"", "    local sum=0\n\
    \    local str=$1\n    for (( i=0; i<${#str}; i++ )); do\n        local char=${str:$i:1}\n\
    \        local ascii=$(printf \"%d\" \"'$char\")\n        if [[ $ascii -ge 65\
    \ && $ascii -le 90 ]]; then\n            sum=$((sum + ascii))\n        fi\n  \
    \  done\n    echo $sum", "    local sum=0\n    local str=$1\n    for (( i=0; i<${#str};\
    \ i++ )); do\n        local char=${str:$i:1}\n        if [[ $char =~ [A-Z] ]];\
    \ then\n            sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n        fi\n\
    \    done\n    echo $sum", "    echo \"$1\" | tr -d -c 'A-Z' | awk '{sum += $1}\
    \ END {print sum}'", "    echo \"$1\" | tr -d '[:lower:]' | awk '{sum=0; for(i=1;i<=length($0);i++)\
    \ {sum+=(substr($0,i,1))} print sum}'", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local char=${1:$i:1}\n        if [[ \"$char\" =~ [A-Z] ]];\
    \ then\n            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n \
    \   done\n    echo \"$sum\"", "    echo \"$1\" | grep -o '[A-Z]' | awk '{sum +=\
    \ $1} END {print sum}'", "    echo \"$1\" | tr -d [:lower:] | tr -d [:punct:]\
    \ | tr -d [:space:] | tr -d [:digit:] | awk '{sum += $1} END {print sum}'", " \
    \   echo \"$1\" | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "    local sum=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if\
    \ [[ \"$char\" =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\" \"\
    '$char\")))\n        fi\n    done\n    echo \"$sum\"", "  local sum=0\n  for ((\
    \ i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    if [[ $char =~ [A-Z]\
    \ ]]; then\n      sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n\
    \  echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n       \
    \ local char=${1:$i:1}\n        if [[ \"$char\" =~ [A-Z] ]]; then\n          \
    \  sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n    echo\
    \ \"$sum\"", "    # Your code here\n    echo \"$1\" | grep -o '[A-Z]' | awk '{sum+=$1}\
    \ END {print sum}'", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n \
    \       local char=${1:$i:1}\n        local ascii=$(printf \"%d\" \"'$char\")\n\
    \        if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n            (( sum +=\
    \ ascii ))\n        fi\n    done\n    echo $sum", "    echo $1 | tr -d '[:lower:]'\
    \ | tr -d '[:punct:]' | tr -d '[:space:]' | tr -d '[:digit:]' | awk '{sum=0; for(i=1;i<=NF;i++)\
    \ {sum+=$i}; print sum}'", "    local sum=0\n    for (( i=0; i<${#1}; i++ ));\
    \ do\n        local char=${1:$i:1}\n        if [[ \"$char\" =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo \"$sum\"", "    echo \"$1\" | tr -d '[:lower:]' | awk '{sum=0; for(i=1;i<=length($0);i++)\
    \ {sum+=substr($0,i,1)}; print sum}'", "    echo $1 | grep -o [A-Z] | awk '{s+=$1}\
    \ END {print s}'", "  local sum=0\n  local str=$1\n  for (( i=0; i<${#str}; i++\
    \ )); do\n    local char=${str:$i:1}\n    if [[ $char =~ [A-Z] ]]; then\n    \
    \  sum=$(( sum + $(printf \"%d\" \"'$char\") ))\n    fi\n  done\n  echo $sum",
  "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        local ascii=$(printf \"%d\" \"'$char\")\n        if (( ascii >= 65 &&\
    \ ascii <= 90 )); then\n            (( sum += ascii ))\n        fi\n    done\n\
    \    echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n     \
    \   local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n            sum=$((\
    \ sum + $(printf \"%d\" \"'$char\") ))\n        fi\n    done\n    echo $sum",
  "    echo \"$1\" | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "    local sum=0\n\
    \    for (( i=0; i<${#1}; i++ )); do\n        local c=${1:i:1}\n        if [[\
    \ $c =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf \"%d\" \"'$c\") ))\n\
    \        fi\n    done\n    echo $sum", "    echo \"$1\" | tr -d '[:lower:]' |\
    \ awk '{sum=0; for(i=1;i<=length($0);i++) {sum+=substr($0,i,1)} print sum}'",
  "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ $char =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\"\
    \ \"'$char\")))\n        fi\n    done\n    echo $sum", "    echo \"$1\" | tr -d\
    \ [:lower:] | tr -d [:punct:] | tr -d [:space:] | tr -d [:digit:] | awk '{sum+=$1}\
    \ END {print sum}'", "  local sum=0\n  for (( i=0; i<${#1}; i++ )); do\n    local\
    \ char=${1:$i:1}\n    local ascii=$(printf \"%d\" \"'$char\")\n    if [[ $ascii\
    \ -ge 65 && $ascii -le 90 ]]; then\n      (( sum += ascii ))\n    fi\n  done\n\
    \  echo $sum", "    echo \"$1\" | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'",
  "    echo $1 | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "  local sum=0\n\
    \  for (( i=0; i<${#1}; i++ )); do\n    local char=${1:$i:1}\n    local ascii=$(printf\
    \ \"%d\" \"'$char\")\n    if [[ $ascii -ge 65 && $ascii -le 90 ]]; then\n    \
    \  (( sum += ascii ))\n    fi\n  done\n  echo $sum", "    local sum=0\n    for\
    \ (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $char\
    \ =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\" \"'$char\")))\n\
    \        fi\n    done\n    echo $sum", "    local sum=0\n    for (( i=0; i<${#1};\
    \ i++ )); do\n        local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n\
    \            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n\
    \    echo $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n     \
    \   local char=${1:$i:1}\n        if [[ \"$char\" =~ [A-Z] ]]; then\n        \
    \    sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n    echo\
    \ \"$sum\"", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local\
    \ char=${1:$i:1}\n        local char_ascii=$(printf \"%d\" \"'$char\")\n     \
    \   if [[ $char_ascii -ge 65 && $char_ascii -le 90 ]]; then\n            sum=$((sum\
    \ + char_ascii))\n        fi\n    done\n    echo $sum", "    echo \"$1\" | grep\
    \ -o '[A-Z]' | tr -d '\\n' | awk '{sum=0; for(i=1;i<=length($0);i++) sum+=sprintf(\"\
    %d\",substr($0,i,1)); print sum}'", "    echo \"$1\" | tr -d [:lower:] | tr -d\
    \ [:punct:] | tr -d [:space:] | tr -d [:digit:] | awk '{sum+=$1} END {print sum}'",
  "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ $char =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\"\
    \ \"'$char\")))\n        fi\n    done\n    echo $sum", "    local sum=0\n    for\
    \ (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ \"\
    $char\" =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\" \"'$char\"\
    )))\n        fi\n    done\n    echo \"$sum\"", "    local sum=0\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $char =~ [A-Z]\
    \ ]]; then\n            sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n\
    \    done\n    echo $sum", "    echo \"$1\" | grep -o '[A-Z]' | awk '{sum+=$1}\
    \ END {print sum}'", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n \
    \       local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n        \
    \    sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n    echo\
    \ $sum", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local\
    \ char=${1:$i:1}\n        if [[ \"$char\" =~ [A-Z] ]]; then\n            sum=$((sum\
    \ + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n    echo \"$sum\"", " \
    \   echo \"$1\" | grep -o \"[A-Z]\" | awk '{s+=$1} END {print s}'", "    local\
    \ sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n \
    \       if [[ $char =~ [A-Z] ]]; then\n            (( sum += $(printf \"%d\" \"\
    '$char\") ))\n        fi\n    done\n    echo $sum", "    echo \"$1\" | grep -o\
    \ '[A-Z]' | awk '{s+=$1} END {print s}'", "    echo $1 | grep -o [A-Z] | awk '{s+=$1}\
    \ END {print s}'", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n   \
    \     local char=${1:$i:1}\n        if [[ $char =~ [A-Z] ]]; then\n          \
    \  sum=$((sum + $(printf \"%d\" \"'$char\")))\n        fi\n    done\n    echo\
    \ $sum", "    local sum=0\n    local str=$1\n    for (( i=0; i<${#str}; i++ ));\
    \ do\n        local char=${str:$i:1}\n        local char_ascii=$(printf \"%d\"\
    \ \"'$char\")\n        if [ $char_ascii -ge 65 ] && [ $char_ascii -le 90 ]; then\n\
    \            sum=$((sum + char_ascii))\n        fi\n    done\n    echo $sum",
  "    echo $1 | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "    echo $1 | grep\
    \ -o '[A-Z]' | awk '{s+=$1} END {print s}'", "    local sum=0\n    for (( i=0;\
    \ i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $char =~ [A-Z]\
    \ ]]; then\n            (( sum += $(printf \"%d\" \"'$char\") ))\n        fi\n\
    \    done\n    echo $sum", "    echo $1 | tr -d [:lower:] | tr -d [:punct:] |\
    \ tr -d [:space:] | tr -d [:digit:] | awk '{sum=0; for(i=1;i<=NF;i++) {sum+=$i};\
    \ print sum}'", "    local -i sum=0\n    for (( i=0; i<${#1}; i++ )); do\n   \
    \     local -i ascii=$(printf \"%d\" \"'${1:i:1}\")\n        if (( ascii >= 65\
    \ && ascii <= 90 )); then\n            (( sum += ascii ))\n        fi\n    done\n\
    \    echo \"$sum\"", "    echo $1 | grep -o \"[A-Z]\" | awk '{s+=$1} END {print\
    \ s}'", "    local sum=0\n    for (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n\
    \        if [[ \"$char\" =~ [A-Z] ]]; then\n            sum=$(( sum + $(printf\
    \ \"%d\" \"'$char\") ))\n        fi\n    done\n    echo \"$sum\"", "    echo \"\
    $1\" | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'", "    local sum=0\n    for\
    \ (( i=0; i<${#1}; i++ )); do\n        local char=${1:$i:1}\n        if [[ $char\
    \ =~ [A-Z] ]]; then\n            sum=$((sum + $(printf \"%d\" \"'$char\")))\n\
    \        fi\n    done\n    echo $sum", "    echo $1 | tr -cd [:upper:] | awk '{sum=0;\
    \ for(i=1;i<=length($0);i++) {sum+=(substr($0,i,1))}; print sum}'", "    echo\
    \ \"$1\" | grep -o '[A-Z]' | awk '{s+=$1} END {print s}'"]
stop_tokens:
- "\n}"

language: sh
name: HumanEval_157_right_angle_triangle
results:
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ \"$1\" -eq 0 || \"$2\" -eq 0 || \"$3\" -eq 0 ]]; then\n    echo \"\
    false\"\n  elif [[ \"$1\" -eq \"$2\" && \"$2\" -eq \"$3\" ]]; then\n    echo \"\
    false\"\n  elif [[ \"$1\" -eq \"$2\" || \"$2\" -eq \"$3\" || \"$1\" -eq \"$3\"\
    \ ]]; then\n    echo \"false\"\n  elif [[ \"$1\" -gt \"$2\" && \"$1\" -gt \"$3\"\
    \ ]]; then\n    if [[ \"$1\" -eq \"$(($2 * $2 + $3 * $3))\" ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ \"$2\" -gt \"$1\"\
    \ && \"$2\" -gt \"$3\" ]]; then\n    if [[ \"$2\" -eq \"$(($1 * $1 + $3 * $3))\"\
    \ ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif\
    \ [[ \"$3\" -gt \"$1\" && \"$3\" -gt \"$2\" ]]; then\n    if [[ \"$3\" -eq \"\
    $(($1 * $1 + $2 * $2))\" ]]; then\n      echo \"true\"\n    else\n      echo \"\
    false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Usage: right_angle_triangle <integer> <integer> <integer>\"\n    return\
    \ 1\n  fi\n  if ! [[ $2 =~ ^[0-9]+$ ]]; then\n    echo \"Usage: right_angle_triangle\
    \ <integer> <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $3 =~ ^[0-9]+$\
    \ ]]; then\n    echo \"Usage: right_angle_triangle <integer> <integer> <integer>\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n\
    \  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\
    \n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"false\"\
    \n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpfz8kit37.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmpfz8kit37.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 && $2 -eq\
    \ $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n\
    \      if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $2 -gt $1\
    \ && $2 -gt $3 ]]; then\n      if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3\
    \ )) ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\n   \
    \   fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        echo \"true\"\n      else\n \
    \       echo \"false\"\n      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(($2*$2 + $3*$3)) ]]; then\n   \
    \   echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt $1\
    \ && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(($1*$1 + $3*$3)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt $1 && $3\
    \ -gt $2 ]]; then\n    if [[ $3 -eq $(($1*$1 + $2*$2)) ]]; then\n      echo \"\
    true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -ne $3 ]]; then\n            if [[ $1 -eq $3 ]]; then\n           \
    \     echo \"false\"\n            else\n                echo \"true\"\n      \
    \      fi\n        elif [[ $1 -ne $2 && $2 -eq $3 ]]; then\n            if [[\
    \ $1 -eq $3 ]]; then\n                echo \"false\"\n            else\n     \
    \           echo \"true\"\n            fi\n        elif [[ $1 -ne $2 && $2 -ne\
    \ $3 ]]; then\n            if [[ $1 -eq $3 ]]; then\n                echo \"false\"\
    \n            else\n                echo \"true\"\n            fi\n        fi\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max * max)) -eq $((min1 * min1 + min2 * min2)) ]; then\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(( $2 ** 2 + $3 ** 2 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(( $1 ** 2 + $3 ** 2 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n    if [[ $3 -eq $(( $1 ** 2 + $2 ** 2 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq $c ]]; then\n      echo \"\
    false\"\n    elif [[ $a -eq $b || $b -eq $c || $a -eq $c ]]; then\n      echo\
    \ \"false\"\n    elif [[ $a -gt $b && $a -gt $c ]]; then\n      if [[ $((a*a))\
    \ -eq $((b*b+c*c)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n      if [[ $((b*b))\
    \ -eq $((a*a+c*c)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $c -gt $a && $c -gt $b ]]; then\n      if [[ $((c*c))\
    \ -eq $((a*a+b*b)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq 0 || $2 -eq\
    \ 0 || $3 -eq 0 ]]; then\n        echo \"false\"\n        return 0\n    fi\n \
    \   if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return 0\n    fi\n    if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n\
    \        if [[ $1 -eq $(($2*$2+$3*$3)) ]]; then\n            echo \"true\"\n \
    \           return 0\n        fi\n    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]];\
    \ then\n        if [[ $2 -eq $(($1*$1+$3*$3)) ]]; then\n            echo \"true\"\
    \n            return 0\n        fi\n    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]];\
    \ then\n        if [[ $3 -eq $(($1*$1+$2*$2)) ]]; then\n            echo \"true\"\
    \n            return 0\n        fi\n    fi\n    echo \"false\"\n    return 0\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $(($1 * $1)) -eq $(($2\
    \ * $2 + $3 * $3)) ]]; then\n                echo \"true\"\n            else\n\
    \                echo \"false\"\n            fi\n        elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n            if [[ $(($2 * $2)) -eq $(($1 * $1 + $3 * $3))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n\
    \            if [[ $(($3 * $3)) -eq $(($1 * $1 + $2 * $2)) ]]; then\n        \
    \        echo \"true\"\n            else\n                echo \"false\"\n   \
    \         fi\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $2 + $3 ]]; then\n      echo \"false\"\
    \n    elif [[ $1 -gt $2 + $3 ]]; then\n      echo \"false\"\n    else\n      echo\
    \ \"true\"\n    fi\n  elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq\
    \ $1 + $3 ]]; then\n      echo \"false\"\n    elif [[ $2 -gt $1 + $3 ]]; then\n\
    \      echo \"false\"\n    else\n      echo \"true\"\n    fi\n  elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n    if [[ $3 -eq $1 + $2 ]]; then\n      echo \"false\"\
    \n    elif [[ $3 -gt $1 + $2 ]]; then\n      echo \"false\"\n    else\n      echo\
    \ \"true\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp616c0wb0.sh: line 23: syntax error in conditional expression

    /tmp/tmp616c0wb0.sh: line 23: syntax error near `+''

    /tmp/tmp616c0wb0.sh: line 23: `    if [[ $1 -eq $2 + $3 ]]; then''

    '
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ \"$1\" -eq \"0\" || \"$2\" -eq \"0\" || \"$3\" -eq \"0\" ]]; then\n\
    \    echo \"false\"\n  elif [[ \"$1\" -eq \"$2\" && \"$2\" -eq \"$3\" ]]; then\n\
    \    echo \"false\"\n  elif [[ \"$1\" -eq \"$2\" || \"$2\" -eq \"$3\" || \"$1\"\
    \ -eq \"$3\" ]]; then\n    echo \"false\"\n  elif [[ \"$1\" -gt \"$2\" && \"$1\"\
    \ -gt \"$3\" ]]; then\n    if [[ \"$1\" -eq \"$(($2 * $2 + $3 * $3))\" ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ \"$2\"\
    \ -gt \"$1\" && \"$2\" -gt \"$3\" ]]; then\n    if [[ \"$2\" -eq \"$(($1 * $1\
    \ + $3 * $3))\" ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  elif [[ \"$3\" -gt \"$1\" && \"$3\" -gt \"$2\" ]]; then\n    if [[\
    \ \"$3\" -eq \"$(($1 * $1 + $2 * $2))\" ]]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq $c ]]; then\n      echo \"\
    false\"\n    elif [[ $a -eq $b && $b -ne $c ]]; then\n      if [[ $a -gt $c ]];\
    \ then\n        if [[ $((a*a)) -eq $((b*b+c*c)) ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      else\n        if [[\
    \ $((c*c)) -eq $((a*a+b*b)) ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      fi\n    elif [[ $a -eq $c && $c -ne\
    \ $b ]]; then\n      if [[ $a -gt $b ]]; then\n        if [[ $((a*a)) -eq $((b*b+c*c))\
    \ ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\n\
    \        fi\n      else\n        if [[ $((b*b)) -eq $((a*a+c*c)) ]]; then\n  \
    \        echo \"true\"\n        else\n          echo \"false\"\n        fi\n \
    \     fi\n    elif [[ $b -eq $c && $c -ne $a ]]; then\n      if [[ $b -gt $a ]];\
    \ then\n        if [[ $((b*b)) -eq $((a*a+c*c)) ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      else\n        if [[\
    \ $((a*a)) -eq $((b*b+c*c)) ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      fi\n    else\n      if [[ $a -gt\
    \ $b && $a -gt $c ]]; then\n        if [[ $((a*a)) -eq $((b*b+c*c)) ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmphuif76sq.sh: line 71: syntax error near unexpected token `}''

    /tmp/tmphuif76sq.sh: line 71: `}''

    '
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq 0 || $2 -eq\
    \ 0 || $3 -eq 0 ]]; then\n        echo \"false\"\n        return 0\n    fi\n \
    \   if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return 0\n    fi\n    if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n\
    \        if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n            echo \"true\"\
    \n            return 0\n        fi\n    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]];\
    \ then\n        if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo\
    \ \"true\"\n            return 0\n        fi\n    fi\n    if [[ $3 -gt $1 && $3\
    \ -gt $2 ]]; then\n        if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n  \
    \          echo \"true\"\n            return 0\n        fi\n    fi\n    echo \"\
    false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=false\n  if [ $a\
    \ -gt 0 ] && [ $b -gt 0 ] && [ $c -gt 0 ]; then\n    if [ $a -eq $b ] && [ $b\
    \ -eq $c ]; then\n      result=true\n    elif [ $a -eq $b ] || [ $b -eq $c ] ||\
    \ [ $a -eq $c ]; then\n      result=false\n    elif [ $a -gt $b ] && [ $a -gt\
    \ $c ]; then\n      if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        result=true\n\
    \      fi\n    elif [ $b -gt $a ] && [ $b -gt $c ]; then\n      if [ $((b*b))\
    \ -eq $((a*a+c*c)) ]; then\n        result=true\n      fi\n    elif [ $c -gt $a\
    \ ] && [ $c -gt $b ]; then\n      if [ $((c*c)) -eq $((a*a+b*b)) ]; then\n   \
    \     result=true\n      fi\n    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n    if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n \
    \   fi\n    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an\
    \ integer\"\n        return 1\n    fi\n    if ! [[ $3 =~ ^[0-9]+$ ]]; then\n \
    \       echo \"Error: $3 is not an integer\"\n        return 1\n    fi\n    if\
    \ [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n\
    \        return 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n     \
    \   echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n\
    \    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $(( $1 * $1 )) -eq\
    \ $(( $2 * $2 + $3 * $3 )) ]; then\n            echo \"true\"\n            return\
    \ 0\n        fi\n    fi\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n       \
    \ if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n            echo \"\
    true\"\n            return 0\n        fi\n    fi\n    if [ $3 -gt $1 ] && [ $3\
    \ -gt $2 ]; then\n        if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ];\
    \ then\n            echo \"true\"\n            return 0\n        fi\n    fi\n\
    \    echo \"false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(($2 * $2 + $3 * $3)) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(($1 * $1 + $3 * $3)) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n    if [[ $3 -eq $(($1 * $1 + $2 * $2)) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $(( $2 * $2 )) -eq $(( $1 *\
    \ $1 + $3 * $3 )) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $((\
    \ $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        echo \"true\"\n  \
    \    else\n        echo \"false\"\n      fi\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n    echo \"false\"\
    \n  elif [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"false\"\n  elif [ $1\
    \ -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n  elif\
    \ [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n    else\n      echo \"false\"\n\
    \    fi\n  elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 ))\
    \ -eq $(( $1 * $1 + $3 * $3 )) ]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $((\
    \ $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n\
    \    local c=$3\n    if [ $a -eq 0 ] || [ $b -eq 0 ] || [ $c -eq 0 ]; then\n \
    \       echo \"false\"\n        return 0\n    fi\n    if [ $a -eq $b ] && [ $b\
    \ -eq $c ]; then\n        echo \"false\"\n        return 0\n    fi\n    if [ $a\
    \ -eq $b ] || [ $b -eq $c ] || [ $a -eq $c ]; then\n        echo \"false\"\n \
    \       return 0\n    fi\n    if [ $a -gt $b ] && [ $a -gt $c ]; then\n      \
    \  if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n            echo \"true\"\n       \
    \     return 0\n        fi\n    fi\n    if [ $b -gt $a ] && [ $b -gt $c ]; then\n\
    \        if [ $((b*b)) -eq $((a*a+c*c)) ]; then\n            echo \"true\"\n \
    \           return 0\n        fi\n    fi\n    if [ $c -gt $a ] && [ $c -gt $b\
    \ ]; then\n        if [ $((c*c)) -eq $((a*a+b*b)) ]; then\n            echo \"\
    true\"\n            return 0\n        fi\n    fi\n    echo \"false\"\n    return\
    \ 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 ]] || [[ $2 -eq 0 ]] || [[ $3 -eq 0 ]]; then\n       \
    \ echo \"false\"\n    elif [[ $1 -eq $2 ]] && [[ $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n    elif [[ $1 -eq $2 ]] || [[ $2 -eq $3 ]] || [[ $1 -eq $3 ]]; then\n\
    \        echo \"false\"\n    elif [[ $1 -gt $2 ]] && [[ $1 -gt $3 ]]; then\n \
    \       if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n         \
    \   echo \"true\"\n        else\n            echo \"false\"\n        fi\n    elif\
    \ [[ $2 -gt $1 ]] && [[ $2 -gt $3 ]]; then\n        if [[ $(( $2 * $2 )) -eq $((\
    \ $1 * $1 + $3 * $3 )) ]]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    elif [[ $3 -gt $1 ]] && [[ $3 -gt $2\
    \ ]]; then\n        if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -eq $(( $2 * $2 + $3 * $3 )) || $2 -eq $(( $1 * $1 + $3 * $3 )) || $3\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n        else\n\
    \            echo \"false\"\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(($2**2 + $3**2)) ]]; then\n\
    \            echo \"true\"\n            return\n        fi\n    fi\n    if [[\
    \ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(($1**2 + $3**2)) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(($1**2 + $2**2))\
    \ ]]; then\n            echo \"true\"\n            return\n        fi\n    fi\n\
    \    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [[ $b -gt $max ]]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [[ $c -gt $max ]]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [[ $((max*max)) -eq $((min1*min1+min2*min2)) ]]; then\n    echo \"true\"\
    \n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [[ \"$1\" =~ ^[0-9]+$ ]] &&\
    \ [[ \"$2\" =~ ^[0-9]+$ ]] && [[ \"$3\" =~ ^[0-9]+$ ]]; then\n    if [ $1 -gt\
    \ 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n      if [ $1 -eq $2 ] && [ $2 -eq\
    \ $3 ]; then\n        echo \"false\"\n      elif [ $1 -eq $2 ] || [ $2 -eq $3\
    \ ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n      else\n        if [ $1\
    \ -gt $2 ] && [ $1 -gt $3 ]; then\n          if [ $(( $1 * $1 )) -eq $(( $2 *\
    \ $2 + $3 * $3 )) ]; then\n            echo \"true\"\n          else\n       \
    \     echo \"false\"\n          fi\n        elif [ $2 -gt $1 ] && [ $2 -gt $3\
    \ ]; then\n          if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n\
    \            echo \"true\"\n          else\n            echo \"false\"\n     \
    \     fi\n        elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n          if [ $((\
    \ $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n            echo \"true\"\n\
    \          else\n            echo \"false\"\n          fi\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"Usage: right_angle_triangle\
    \ <integer> <integer> <integer>\"\n    return 1\n  fi\n}\n\ncandidate() {\n  \
    \  right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local med=$b\n\
    \  local min=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    med=$a\n  fi\n  if\
    \ [ $c -gt $max ]; then\n    max=$c\n    med=$b\n  fi\n  if [ $c -gt $med ]; then\n\
    \    med=$c\n  fi\n  if [ $min -gt $med ]; then\n    local tmp=$min\n    min=$med\n\
    \    med=$tmp\n  fi\n  if [ $((max*max)) -eq $((med*med+min*min)) ]; then\n  \
    \  echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq 0 || $2 -eq\
    \ 0 || $3 -eq 0 ]]; then\n        echo \"false\"\n        return 0\n    fi\n \
    \   if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return 0\n    fi\n    if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n\
    \        if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n            echo \"true\"\
    \n            return 0\n        fi\n    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]];\
    \ then\n        if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo\
    \ \"true\"\n            return 0\n        fi\n    fi\n    if [[ $3 -gt $1 && $3\
    \ -gt $2 ]]; then\n        if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n  \
    \          echo \"true\"\n            return 0\n        fi\n    fi\n    echo \"\
    false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 && $1 -eq $3 ]]; then\n        echo \"false\"\n    elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n    elif [[ $1\
    \ -gt $2 && $1 -gt $3 ]]; then\n        if [[ $(( $1 * $1 )) -eq $(( $2 * $2 +\
    \ $3 * $3 )) ]]; then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n       \
    \ if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    elif [[\
    \ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]]; then\n            echo \"true\"\n        else\n           \
    \ echo \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=false\n  if [ $a\
    \ -gt 0 ] && [ $b -gt 0 ] && [ $c -gt 0 ]; then\n    if [ $((a*a)) -eq $((b*b+c*c))\
    \ ] || [ $((b*b)) -eq $((a*a+c*c)) ] || [ $((c*c)) -eq $((a*a+b*b)) ]; then\n\
    \      result=true\n    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $(( $1 * $1 )) -eq $((\
    \ $2 * $2 + $3 * $3 )) ]]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n\
    \        if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $(( $3 * $3 )) -eq $((\
    \ $1 * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq $2 || $2 -eq\
    \ $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n    if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt $1 && $2\
    \ -gt $3 ]]; then\n    if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt $1 && $3\
    \ -gt $2 ]]; then\n    if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        el\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpaxyykhl3.sh: line 54: syntax error near unexpected token `}''

    /tmp/tmpaxyykhl3.sh: line 54: `}''

    '
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(( $2 ** 2 + $3 ** 2 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(( $1 ** 2 + $3 ** 2 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n    if [[ $3 -eq $(( $1 ** 2 + $2 ** 2 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq\
    \ $c ]]; then\n      result=\"false\"\n    elif [[ $a -eq $b || $b -eq $c || $a\
    \ -eq $c ]]; then\n      result=\"false\"\n    elif [[ $a -gt $b && $a -gt $c\
    \ ]]; then\n      if [[ $((a*a)) -eq $((b*b+c*c)) ]]; then\n        result=\"\
    true\"\n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n      if [[ $((b*b))\
    \ -eq $((a*a+c*c)) ]]; then\n        result=\"true\"\n      fi\n    elif [[ $c\
    \ -gt $a && $c -gt $b ]]; then\n      if [[ $((c*c)) -eq $((a*a+b*b)) ]]; then\n\
    \        result=\"true\"\n      fi\n    fi\n  fi\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $(( $b * $b + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    else\n\
    \        if [[ $b -gt $c ]]; then\n            if [[ $b -eq $(( $a * $a + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [[ ! $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if [[ ! $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if [[ ! $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $1 -eq $(( $2 * $2 + $3 * $3 ))\
    \ ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if [ $2 -gt $1\
    \ ] && [ $2 -gt $3 ]; then\n    if [ $2 -eq $(( $1 * $1 + $3 * $3 )) ]; then\n\
    \      echo \"true\"\n      return 0\n    fi\n  fi\n  if [ $3 -gt $1 ] && [ $3\
    \ -gt $2 ]; then\n    if [ $3 -eq $(( $1 * $1 + $2 * $2 )) ]; then\n      echo\
    \ \"true\"\n      return 0\n    fi\n  fi\n  echo \"false\"\n  return 0\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $(( $1 * $1 )) -eq $((\
    \ $2 * $2 + $3 * $3 )) ]]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n\
    \        if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $(( $3 * $3 )) -eq $((\
    \ $1 * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $(( $2 * $2 )) -eq $(( $1 *\
    \ $1 + $3 * $3 )) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $((\
    \ $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        echo \"true\"\n  \
    \    else\n        echo \"false\"\n      fi\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $(( $1 * $1 )) -eq $((\
    \ $2 * $2 + $3 * $3 )) ]]; then\n                echo \"true\"\n            else\n\
    \                echo \"false\"\n            fi\n        elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 *\
    \ $3 )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local result=\"false\"\
    \n    if [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n        if [[ $a -eq $b\
    \ && $b -eq $c ]]; then\n            result=\"false\"\n        elif [[ $a -eq\
    \ $b || $b -eq $c || $a -eq $c ]]; then\n            result=\"true\"\n       \
    \ elif [[ $a -gt $b && $a -gt $c ]]; then\n            if [[ $(( $a * $a )) -eq\
    \ $(( $b * $b + $c * $c )) ]]; then\n                result=\"true\"\n       \
    \     fi\n        elif [[ $b -gt $a && $b -gt $c ]]; then\n            if [[ $((\
    \ $b * $b )) -eq $(( $a * $a + $c * $c )) ]]; then\n                result=\"\
    true\"\n            fi\n        elif [[ $c -gt $a && $c -gt $b ]]; then\n    \
    \        if [[ $(( $c * $c )) -eq $(( $a * $a + $b * $b )) ]]; then\n        \
    \        result=\"true\"\n            fi\n        fi\n    fi\n    echo \"$result\"\
    \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max * max)) -eq $((min1 * min1 + min2 * min2)) ]; then\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(($2*$2 + $3*$3))\
    \ ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq\
    \ $(($1*$1 + $3*$3)) ]]; then\n            echo \"true\"\n        else\n     \
    \       echo \"false\"\n        fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n\
    \        if [[ $3 -eq $(($1*$1 + $2*$2)) ]]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $(($1 * $1)) -eq $(($2 * $2 + $3 * $3)) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $(($2 * $2)) -eq $(($1 * $1\
    \ + $3 * $3)) ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $(($3 * $3))\
    \ -eq $(($1 * $1 + $2 * $2)) ]]; then\n        echo \"true\"\n      else\n   \
    \     echo \"false\"\n      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: $0 <integer> <integer>\
    \ <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq 0 || $2 -eq 0 || $3\
    \ -eq 0 ]]; then\n        echo \"false\"\n        return 0\n    fi\n    if [[\
    \ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n        return 0\n\
    \    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return 0\n    fi\n    if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n\
    \        if [[ $1 -eq $(($2*$2 + $3*$3)) ]]; then\n            echo \"true\"\n\
    \            return 0\n        fi\n    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]];\
    \ then\n        if [[ $2 -eq $(($1*$1 + $3*$3)) ]]; then\n            echo \"\
    true\"\n            return 0\n        fi\n    fi\n    if [[ $3 -gt $1 && $3 -gt\
    \ $2 ]]; then\n        if [[ $3 -eq $(($1*$1 + $2*$2)) ]]; then\n            echo\
    \ \"true\"\n            return 0\n        fi\n    fi\n    echo \"false\"\n   \
    \ return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $(( $2 * $2 )) -eq $(( $1 *\
    \ $1 + $3 * $3 )) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $((\
    \ $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        echo \"true\"\n  \
    \    else\n        echo \"false\"\n      fi\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ ! $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n \
    \   fi\n    if [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an\
    \ integer\"\n        return 1\n    fi\n    if [[ ! $3 =~ ^[0-9]+$ ]]; then\n \
    \       echo \"Error: $3 is not an integer\"\n        return 1\n    fi\n    if\
    \ [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n\
    \        return 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n     \
    \   echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n\
    \    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $(( $1 * $1 )) -eq\
    \ $(( $2 * $2 + $3 * $3 )) ]; then\n            echo \"true\"\n            return\
    \ 0\n        fi\n    fi\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n       \
    \ if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n            echo \"\
    true\"\n            return 0\n        fi\n    fi\n    if [ $3 -gt $1 ] && [ $3\
    \ -gt $2 ]; then\n        if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ];\
    \ then\n            echo \"true\"\n            return 0\n        fi\n    fi\n\
    \    echo \"false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a > 0 && $b > 0 && $c\
    \ > 0 )); then\n    if (( $a**2 + $b**2 == $c**2 )); then\n      echo \"true\"\
    \n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n    if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a > 0 && $b > 0 && $c\
    \ > 0 )); then\n    if (( $a*$a + $b*$b == $c*$c || $a*$a + $c*$c == $b*$b ||\
    \ $b*$b + $c*$c == $a*$a )); then\n      echo \"true\"\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a > 0 && $b > 0 && $c\
    \ > 0 )); then\n    if (( $a == $b && $b == $c )); then\n      echo \"false\"\n\
    \    elif (( $a == $b || $b == $c || $a == $c )); then\n      echo \"false\"\n\
    \    elif (( $a*$a == $b*$b + $c*$c || $b*$b == $a*$a + $c*$c || $c*$c == $a*$a\
    \ + $b*$b )); then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ (( $a > 0 && $b > 0 && $c > 0 )); then\n    if (( $a*$a + $b*$b == $c*$c ||\
    \ $a*$a + $c*$c == $b*$b || $b*$b + $c*$c == $a*$a )); then\n      result=\"true\"\
    \n    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ else\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"false\"\n    else\n\
    \      if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\
    \n      else\n        if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n          if [[ $(($1*$1))\
    \ -eq $(($2*$2 + $3*$3)) ]]; then\n            echo \"true\"\n          else\n\
    \            echo \"false\"\n          fi\n        elif [[ $2 -gt $1 && $2 -gt\
    \ $3 ]]; then\n          if [[ $(($2*$2)) -eq $(($1*$1 + $3*$3)) ]]; then\n  \
    \          echo \"true\"\n          else\n            echo \"false\"\n       \
    \   fi\n        elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n          if [[ $(($3*$3))\
    \ -eq $(($1*$1 + $2*$2)) ]]; then\n            echo \"true\"\n          else\n\
    \            echo \"false\"\n          fi\n        fi\n      fi\n    fi\n  fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ ! $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n \
    \   fi\n    if [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an\
    \ integer\"\n        return 1\n    fi\n    if [[ ! $3 =~ ^[0-9]+$ ]]; then\n \
    \       echo \"Error: $3 is not an integer\"\n        return 1\n    fi\n    if\
    \ [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n\
    \        return 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n     \
    \   echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n\
    \    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $(( $1*$1 )) -eq $((\
    \ $2*$2 + $3*$3 )) ]; then\n            echo \"true\"\n            return 0\n\
    \        fi\n    fi\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [\
    \ $(( $2*$2 )) -eq $(( $1*$1 + $3*$3 )) ]; then\n            echo \"true\"\n \
    \           return 0\n        fi\n    fi\n    if [ $3 -gt $1 ] && [ $3 -gt $2\
    \ ]; then\n        if [ $(( $3*$3 )) -eq $(( $1*$1 + $2*$2 )) ]; then\n      \
    \      echo \"true\"\n            return 0\n        fi\n    fi\n    echo \"false\"\
    \n    return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ mid=$b\n    local min=$c\n    if [ $a -lt $b ]; then\n        max=$b\n     \
    \   mid=$a\n    fi\n    if [ $max -lt $c ]; then\n        min=$mid\n        mid=$max\n\
    \        max=$c\n    fi\n    if [ $mid -lt $c ]; then\n        min=$mid\n    \
    \    mid=$c\n    fi\n    if [ $((max*max)) -eq $((mid*mid+min*min)) ]; then\n\
    \        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ (( $a > 0 && $b > 0 && $c > 0 )); then\n    if (( $a*$a == $b*$b + $c*$c ||\
    \ $b*$b == $a*$a + $c*$c || $c*$c == $a*$a + $b*$b )); then\n      result=\"true\"\
    \n    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a > 0 && $b > 0 && $c\
    \ > 0 )); then\n    if (( $a*$a == $b*$b + $c*$c || $b*$b == $a*$a + $c*$c ||\
    \ $c*$c == $a*$a + $b*$b )); then\n      echo \"true\"\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq $c ]]; then\n      echo \"\
    false\"\n    elif [[ $a -eq $b || $b -eq $c || $a -eq $c ]]; then\n      echo\
    \ \"false\"\n    elif [[ $a -gt $b && $a -gt $c ]]; then\n      if [[ $((a*a))\
    \ -eq $((b*b+c*c)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n      if [[ $((b*b))\
    \ -eq $((a*a+c*c)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $c -gt $a && $c -gt $b ]]; then\n      if [[ $((c*c))\
    \ -eq $((a*a+b*b)) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq $2 ]] || [[ $2 -eq $3 ]] || [[ $1 -eq $3 ]]; then\n    \
    \    echo \"false\"\n    elif [[ $1 -gt $2 ]] && [[ $1 -gt $3 ]]; then\n     \
    \   if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    elif [[\
    \ $2 -gt $1 ]] && [[ $2 -gt $3 ]]; then\n        if [[ $(( $2 * $2 )) -eq $((\
    \ $1 * $1 + $3 * $3 )) ]]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    elif [[ $3 -gt $1 ]] && [[ $3 -gt $2\
    \ ]]; then\n        if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [ $a -gt $b ] && [\
    \ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [ $b -gt $a ] && [ $b -gt $c ]; then\n        if [ $((b*b)) -eq $((a*a+c*c))\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if [ $((c*c))\
    \ -eq $((a*a+b*b)) ]; then\n            echo \"true\"\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    # Write your code here\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt\
    \ 0 ]; then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo\
    \ \"false\"\n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n\
    \            echo \"false\"\n        else\n            if [ $1 -gt $2 ] && [ $1\
    \ -gt $3 ]; then\n                if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]; then\n                    echo \"true\"\n                else\n      \
    \              echo \"false\"\n                fi\n            elif [ $2 -gt $1\
    \ ] && [ $2 -gt $3 ]; then\n                if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n                    echo \"true\"\n                else\n\
    \                    echo \"false\"\n                fi\n            elif [ $3\
    \ -gt $1 ] && [ $3 -gt $2 ]; then\n                if [ $(( $3 * $3 )) -eq $((\
    \ $1 * $1 + $2 * $2 )) ]; then\n                    echo \"true\"\n          \
    \      else\n                    echo \"false\"\n                fi\n        \
    \    fi\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $((b*b + c*c)) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        else\n            if [[ $c -eq $((a*a + b*b))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        if [[ $b -gt $c ]];\
    \ then\n            if [[ $b -eq $((a*a + c*c)) ]]; then\n                echo\
    \ \"true\"\n            else\n                echo \"false\"\n            fi\n\
    \        else\n            if [[ $c -eq $((a*a + b*b)) ]]; then\n            \
    \    echo \"true\"\n            else\n                echo \"false\"\n       \
    \     fi\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ ! $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: argument 1 must be an integer\"\n        return\
    \ 1\n    fi\n    if [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: argument\
    \ 2 must be an integer\"\n        return 1\n    fi\n    if [[ ! $3 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: argument 3 must be an integer\"\n        return\
    \ 1\n    fi\n    if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n     \
    \   echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq\
    \ $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq\
    \ $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n     \
    \   return 0\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if\
    \ [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n            echo \"true\"\
    \n            return 0\n        fi\n    fi\n    if [ $2 -gt $1 ] && [ $2 -gt $3\
    \ ]; then\n        if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n\
    \            echo \"true\"\n            return 0\n        fi\n    fi\n    if [\
    \ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $(( $3 * $3 )) -eq $(( $1 *\
    \ $1 + $2 * $2 )) ]; then\n            echo \"true\"\n            return 0\n \
    \       fi\n    fi\n    echo \"false\"\n    return 0\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=0\n    local\
    \ sum=0\n    local result=\"false\"\n    if [[ $a -gt $b ]]; then\n        max=$a\n\
    \    else\n        max=$b\n    fi\n    if [[ $max -lt $c ]]; then\n        max=$c\n\
    \    fi\n    if [[ $max -eq $a ]]; then\n        sum=$((b*b+c*c))\n    elif [[\
    \ $max -eq $b ]]; then\n        sum=$((a*a+c*c))\n    else\n        sum=$((a*a+b*b))\n\
    \    fi\n    if [[ $sum -eq $((max*max)) ]]; then\n        result=\"true\"\n \
    \   fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $(( $b * $b + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    else\n\
    \        if [[ $b -gt $c ]]; then\n            if [[ $b -eq $(( $a * $a + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -eq 0 || $b\
    \ -eq 0 || $c -eq 0 ]]; then\n        echo \"false\"\n    elif [[ $a -eq $b &&\
    \ $b -eq $c ]]; then\n        echo \"false\"\n    elif [[ $a -eq $b || $b -eq\
    \ $c || $a -eq $c ]]; then\n        echo \"false\"\n    elif [[ $a -gt $b && $a\
    \ -gt $c ]]; then\n        if [[ $((a*a)) -eq $((b*b+c*c)) ]]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [[ $b -gt $a && $b -gt $c ]]; then\n        if [[ $((b*b)) -eq $((a*a+c*c))\
    \ ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [[ $c -gt $a && $c -gt $b ]]; then\n        if [[ $((c*c))\
    \ -eq $((a*a+b*b)) ]]; then\n            echo \"true\"\n        else\n       \
    \     echo \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    # Write your code here\n    # To print results to the standard output\
    \ you can use echo\n    # Example: echo \"Hello world\"\n    if [ $1 -eq 0 ] ||\
    \ [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n    elif [ $1 -eq\
    \ $2 ] && [ $2 -eq $3 ]; then\n        echo \"false\"\n    elif [ $1 -eq $2 ]\
    \ || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n    elif [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $(( $1 * $1 )) -eq $(( $2 *\
    \ $2 + $3 * $3 )) ]; then\n            echo \"true\"\n        else\n         \
    \   echo \"false\"\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n\
    \        if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n          \
    \  echo \"true\"\n        else\n            echo \"false\"\n        fi\n    elif\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $(( $3 * $3 )) -eq $(( $1\
    \ * $1 + $2 * $2 )) ]; then\n            echo \"true\"\n        else\n       \
    \     echo \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=0\n  local sum=0\n\
    \  local result=\"false\"\n  if [ $a -gt $b ] && [ $a -gt $c ]; then\n    max=$a\n\
    \    sum=$((b*b+c*c))\n  elif [ $b -gt $a ] && [ $b -gt $c ]; then\n    max=$b\n\
    \    sum=$((a*a+c*c))\n  elif [ $c -gt $a ] && [ $c -gt $b ]; then\n    max=$c\n\
    \    sum=$((a*a+b*b))\n  fi\n  if [ $((max*max)) -eq $sum ]; then\n    result=\"\
    true\"\n  fi\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $(( $1 * $1 )) -eq $((\
    \ $2 * $2 + $3 * $3 )) ]]; then\n                echo \"true\"\n            else\n\
    \                echo \"false\"\n            fi\n        elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 *\
    \ $3 )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $(( $1 * $1 )) -eq $((\
    \ $2 * $2 + $3 * $3 )) ]]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n\
    \        if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $(( $3 * $3 )) -eq $((\
    \ $1 * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [[ $b -gt $max ]]; then\n        max=$b\n\
    \        min1=$a\n        min2=$c\n    fi\n    if [[ $c -gt $max ]]; then\n  \
    \      max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [[ $min1 -gt $min2\
    \ ]]; then\n        local tmp=$min1\n        min1=$min2\n        min2=$tmp\n \
    \   fi\n    if [[ $((max*max)) -eq $((min1*min1+min2*min2)) ]]; then\n       \
    \ echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n\
    \    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n \
    \   fi\n    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an\
    \ integer\"\n        return 1\n    fi\n    if ! [[ $3 =~ ^[0-9]+$ ]]; then\n \
    \       echo \"Error: $3 is not an integer\"\n        return 1\n    fi\n    if\
    \ [ $1 -eq 0 -o $2 -eq 0 -o $3 -eq 0 ]; then\n        echo \"false\"\n       \
    \ return 0\n    fi\n    if [ $1 -eq $2 -a $2 -eq $3 ]; then\n        echo \"false\"\
    \n        return 0\n    fi\n    if [ $1 -eq $2 -o $2 -eq $3 -o $1 -eq $3 ]; then\n\
    \        echo \"false\"\n        return 0\n    fi\n    if [ $1 -gt $2 -a $1 -gt\
    \ $3 ]; then\n        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n\
    \            echo \"true\"\n            return 0\n        fi\n    fi\n    if [\
    \ $2 -gt $1 -a $2 -gt $3 ]; then\n        if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n            echo \"true\"\n            return 0\n    \
    \    fi\n    fi\n    if [ $3 -gt $1 -a $3 -gt $2 ]; then\n        if [ $(( $3\
    \ * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n            echo \"true\"\n  \
    \          return 0\n        fi\n    fi\n    echo \"false\"\n    return 0\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a*$a + $b*$b == $c*$c\
    \ )); then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=0\n    local\
    \ sum=0\n    local result=false\n    if [ $a -gt $b ]; then\n        max=$a\n\
    \    else\n        max=$b\n    fi\n    if [ $max -lt $c ]; then\n        max=$c\n\
    \    fi\n    if [ $max -eq $a ]; then\n        sum=$((b*b+c*c))\n    elif [ $max\
    \ -eq $b ]; then\n        sum=$((a*a+c*c))\n    else\n        sum=$((a*a+b*b))\n\
    \    fi\n    if [ $sum -eq $((max*max)) ]; then\n        result=true\n    fi\n\
    \    echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ mid=$b\n    local min=$c\n    if [[ $a -lt $b ]]; then\n        max=$b\n   \
    \     mid=$a\n    fi\n    if [[ $max -lt $c ]]; then\n        min=$mid\n     \
    \   mid=$max\n        max=$c\n    fi\n    if [[ $max -lt $mid + $min ]]; then\n\
    \        echo \"false\"\n    else\n        if [[ $max -eq $mid + $min ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxhawvxex.sh: line 31: syntax error in conditional expression

    /tmp/tmpxhawvxex.sh: line 31: syntax error near `+''

    /tmp/tmpxhawvxex.sh: line 31: `    if [[ $max -lt $mid + $min ]]; then''

    '
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $(( $2 * $2 )) -eq $(( $1 *\
    \ $1 + $3 * $3 )) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $((\
    \ $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        echo \"true\"\n  \
    \    else\n        echo \"false\"\n      fi\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n\
    \    local c=$3\n    if [[ $a -eq 0 ]] || [[ $b -eq 0 ]] || [[ $c -eq 0 ]]; then\n\
    \        echo \"false\"\n        return 0\n    fi\n    if [[ $a -eq $b ]] && [[\
    \ $b -eq $c ]]; then\n        echo \"false\"\n        return 0\n    fi\n    if\
    \ [[ $a -eq $b ]] || [[ $b -eq $c ]] || [[ $a -eq $c ]]; then\n        echo \"\
    false\"\n        return 0\n    fi\n    if [[ $a -gt $b ]] && [[ $a -gt $c ]];\
    \ then\n        if [[ $((a*a)) -eq $((b*b+c*c)) ]]; then\n            echo \"\
    true\"\n            return 0\n        fi\n    fi\n    if [[ $b -gt $a ]] && [[\
    \ $b -gt $c ]]; then\n        if [[ $((b*b)) -eq $((a*a+c*c)) ]]; then\n     \
    \       echo \"true\"\n            return 0\n        fi\n    fi\n    if [[ $c\
    \ -gt $a ]] && [[ $c -gt $b ]]; then\n        if [[ $((c*c)) -eq $((a*a+b*b))\
    \ ]]; then\n            echo \"true\"\n            return 0\n        fi\n    fi\n\
    \    echo \"false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n    if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 && $2 -eq\
    \ $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3 || $1\
    \ -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3 ||\
    \ $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq\
    \ $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2\
    \ -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 ||\
    \ $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2\
    \ || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1\
    \ -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[\
    \ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]];\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcg4oy5vq.sh: line 46: syntax error near unexpected token `}''

    /tmp/tmpcg4oy5vq.sh: line 46: `}''

    '
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a*$a + $b*$b == $c*$c\
    \ )); then\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $((a*a + b*b)) -eq $((c*c)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $((a*a)) -eq $((b*b+c*c))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        else\n            if [[ $((c*c)) -eq $((a*a+b*b))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        if [[ $b -gt $c ]];\
    \ then\n            if [[ $((b*b)) -eq $((a*a+c*c)) ]]; then\n               \
    \ echo \"true\"\n            else\n                echo \"false\"\n          \
    \  fi\n        else\n            if [[ $((c*c)) -eq $((a*a+b*b)) ]]; then\n  \
    \              echo \"true\"\n            else\n                echo \"false\"\
    \n            fi\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(($1 * $1)) -eq $(($2 * $2 + $3 * $3))\
    \ ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(($2 * $2)) -eq $(($1 * $1 +\
    \ $3 * $3)) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n  \
    \  fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(($3 * $3)) -eq $(($1\
    \ * $1 + $2 * $2)) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(($2*$2 + $3*$3)) ]]; then\n\
    \            echo \"true\"\n            return\n        fi\n    fi\n    if [[\
    \ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(($1*$1 + $3*$3)) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(($1*$1 + $2*$2))\
    \ ]]; then\n            echo \"true\"\n            return\n        fi\n    fi\n\
    \    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ ! $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: argument 1 must be an integer\"\n        return\
    \ 1\n    fi\n    if [[ ! $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: argument\
    \ 2 must be an integer\"\n        return 1\n    fi\n    if [[ ! $3 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: argument 3 must be an integer\"\n        return\
    \ 1\n    fi\n    if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n     \
    \   echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq\
    \ $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq\
    \ $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n     \
    \   return 0\n    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if\
    \ [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n            echo \"true\"\
    \n            return 0\n        fi\n    fi\n    if [ $2 -gt $1 ] && [ $2 -gt $3\
    \ ]; then\n        if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n\
    \            echo \"true\"\n            return 0\n        fi\n    fi\n    if [\
    \ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n        if [ $(( $3 * $3 )) -eq $(( $1 *\
    \ $1 + $2 * $2 )) ]; then\n            echo \"true\"\n            return 0\n \
    \       fi\n    fi\n    echo \"false\"\n    return 0\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local mid=$b\n\
    \  local min=$c\n  if [ $a -lt $b ]; then\n    max=$b\n    mid=$a\n  fi\n  if\
    \ [ $max -lt $c ]; then\n    min=$mid\n    mid=$max\n    max=$c\n  fi\n  if [\
    \ $max -lt $mid + $min ]; then\n    echo \"false\"\n  else\n    if [ $((max*max))\
    \ -eq $((mid*mid + min*min)) ]; then\n      echo \"true\"\n    else\n      echo\
    \ \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: '/tmp/tmphc056b8j.sh: line 31: [: too many arguments

    /tmp/tmphc056b8j.sh: line 31: [: too many arguments

    /tmp/tmphc056b8j.sh: line 31: [: too many arguments

    /tmp/tmphc056b8j.sh: line 31: [: too many arguments

    /tmp/tmphc056b8j.sh: line 31: [: too many arguments

    /tmp/tmphc056b8j.sh: line 31: [: too many arguments

    /tmp/tmphc056b8j.sh: line 31: [: too many arguments

    /tmp/tmphc056b8j.sh: line 31: [: too many arguments

    /tmp/tmphc056b8j.sh: line 31: [: too many arguments

    /tmp/tmphc056b8j.sh: line 31: [: too many arguments

    /tmp/tmphc056b8j.sh: line 31: [: too many arguments

    '
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [ $a -gt $b ] && [ $a -gt\
    \ $c ]; then\n    if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  elif [ $b -gt $a ] && [ $b -gt $c ];\
    \ then\n    if [ $((b*b)) -eq $((a*a+c*c)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  elif [ $c -gt $a ] && [ $c -gt $b ]; then\n \
    \   if [ $((c*c)) -eq $((a*a+b*b)) ]; then\n      echo \"true\"\n    else\n  \
    \    echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [ $a -gt $b ] && [\
    \ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [ $b -gt $a ] && [ $b -gt $c ]; then\n        if [ $((b*b)) -eq $((a*a+c*c))\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if [ $((c*c))\
    \ -eq $((a*a+b*b)) ]; then\n            echo \"true\"\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( a*a + b*b == c*c )) ||\
    \ (( a*a + c*c == b*b )) || (( b*b + c*c == a*a )); then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min=$b\n    if [ $a -lt $b ]; then\n        max=$b\n        min=$a\n    fi\n\
    \    if [ $max -lt $c ]; then\n        max=$c\n    fi\n    if [ $min -gt $c ];\
    \ then\n        min=$c\n    fi\n    if [ $max -eq $min ]; then\n        echo \"\
    false\"\n        return\n    fi\n    if [ $((max*max)) -eq $((min*min+c*c)) ];\
    \ then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        exit 1\n    fi\n    if [[ $1 -eq 0 || $2 -eq\
    \ 0 || $3 -eq 0 ]]; then\n        echo \"false\"\n        exit 0\n    fi\n   \
    \ if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n        exit\
    \ 0\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        exit 0\n    fi\n    if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n\
    \        if [[ $1 -eq $(($2*$2 + $3*$3)) ]]; then\n            echo \"true\"\n\
    \            exit 0\n        fi\n    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]];\
    \ then\n        if [[ $2 -eq $(($1*$1 + $3*$3)) ]]; then\n            echo \"\
    true\"\n            exit 0\n        fi\n    fi\n    if [[ $3 -gt $1 && $3 -gt\
    \ $2 ]]; then\n        if [[ $3 -eq $(($1*$1 + $2*$2)) ]]; then\n            echo\
    \ \"true\"\n            exit 0\n        fi\n    fi\n    echo \"false\"\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a =~ ^[0-9]+$ && $b =~\
    \ ^[0-9]+$ && $c =~ ^[0-9]+$ ]]; then\n    if [[ $a -gt 0 && $b -gt 0 && $c -gt\
    \ 0 ]]; then\n      if [[ $a -eq $b && $b -eq $c ]]; then\n        echo \"false\"\
    \n      elif [[ $a -eq $b || $b -eq $c || $a -eq $c ]]; then\n        echo \"\
    false\"\n      elif [[ $a -eq $(( $b * $b + $c * $c )) || $b -eq $(( $a * $a +\
    \ $c * $c )) || $c -eq $(( $a * $a + $b * $b )) ]]; then\n        echo \"true\"\
    \n      else\n        echo \"false\"\n      fi\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max*max)) -eq\
    \ $((min1*min1+min2*min2)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $(($1*$1)) -eq $(($2*$2+$3*$3)) ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $2 -gt $1\
    \ && $2 -gt $3 ]]; then\n      if [[ $(($2*$2)) -eq $(($1*$1+$3*$3)) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $(($3*$3)) -eq $(($1*$1+$2*$2))\
    \ ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\n      fi\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $(( $2 * $2\
    \ )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo \"true\"\n      \
    \      return\n        fi\n    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n\
    \        if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        \
    \    echo \"true\"\n            return\n        fi\n    fi\n    echo \"false\"\
    \n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [ $1 -eq 0 ] || [ $2\
    \ -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n        return 0\n  \
    \  fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"false\"\n \
    \       return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3\
    \ ]; then\n        echo \"false\"\n        return 0\n    fi\n    if [ $1 -gt $2\
    \ ] && [ $1 -gt $3 ]; then\n        if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 *\
    \ $3 )) ]; then\n            echo \"true\"\n            return 0\n        fi\n\
    \    fi\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n        if [ $(( $2 * $2\
    \ )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n            echo \"true\"\n       \
    \     return 0\n        fi\n    fi\n    if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n\
    \        if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n          \
    \  echo \"true\"\n            return 0\n        fi\n    fi\n    echo \"false\"\
    \n    return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max*max)) -eq\
    \ $((min1*min1+min2*min2)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n        return\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq\
    \ $3 ]]; then\n        echo \"false\"\n        return\n    fi\n    if [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2 * $2 + $3 * $3 )) ]];\
    \ then\n            echo \"true\"\n            return\n        fi\n    fi\n  \
    \  if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return\n        fi\n\
    \    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $3 -eq $(( $1\
    \ * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n            return\n\
    \        fi\n    fi\n    echo \"false\"\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Usage: right_angle_triangle <integer> <integer> <integer>\"\
    \n        return 1\n    fi\n    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo\
    \ \"Usage: right_angle_triangle <integer> <integer> <integer>\"\n        return\
    \ 1\n    fi\n    if ! [[ $3 =~ ^[0-9]+$ ]]; then\n        echo \"Usage: right_angle_triangle\
    \ <integer> <integer> <integer>\"\n        return 1\n    fi\n    if [ $1 -eq 0\
    \ ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"false\"\
    \n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq\
    \ $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq\
    \ $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n     \
    \   return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ];\
    \ then\n        echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ]\
    \ || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n  \
    \      echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2\
    \ -eq $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n        return 0\n\
    \    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $((a*a)) -eq $((b*b+c*c))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        else\n            if [[ $((c*c)) -eq $((a*a+b*b))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        if [[ $b -gt $c ]];\
    \ then\n            if [[ $((b*b)) -eq $((a*a+c*c)) ]]; then\n               \
    \ echo \"true\"\n            else\n                echo \"false\"\n          \
    \  fi\n        else\n            if [[ $((c*c)) -eq $((a*a+b*b)) ]]; then\n  \
    \              echo \"true\"\n            else\n                echo \"false\"\
    \n            fi\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$((a > b ? a : b))\n\
    \  max=$((max > c ? max : c))\n  local min=$((a < b ? a : b))\n  min=$((min <\
    \ c ? min : c))\n  local mid=$((a + b + c - max - min))\n  if ((max * max == mid\
    \ * mid + min * min)); then\n    echo \"true\"\n  else\n    echo \"false\"\n \
    \ fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq $2 ]] || [[\
    \ $1 -eq $3 ]] || [[ $2 -eq $3 ]]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [[ $1 -gt $2 ]] && [[ $1 -gt $3 ]]; then\n        if [[ $1\
    \ -eq $(( $2**2 + $3**2 )) ]]; then\n            echo \"true\"\n            return\
    \ 0\n        fi\n    elif [[ $2 -gt $1 ]] && [[ $2 -gt $3 ]]; then\n        if\
    \ [[ $2 -eq $(( $1**2 + $3**2 )) ]]; then\n            echo \"true\"\n       \
    \     return 0\n        fi\n    elif [[ $3 -gt $1 ]] && [[ $3 -gt $2 ]]; then\n\
    \        if [[ $3 -eq $(( $1**2 + $2**2 )) ]]; then\n            echo \"true\"\
    \n            return 0\n        fi\n    fi\n    echo \"false\"\n    return 0\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if (( $a > $b && $a >\
    \ $c )); then\n        if (( $a**2 == $b**2 + $c**2 )); then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    elif ((\
    \ $b > $a && $b > $c )); then\n        if (( $b**2 == $a**2 + $c**2 )); then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    elif (( $c > $a && $c > $b )); then\n        if (( $c**2 == $a**2 +\
    \ $b**2 )); then\n            echo \"true\"\n        else\n            echo \"\
    false\"\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [ $b -gt $max ]; then\n        max=$b\n \
    \       min1=$a\n        min2=$c\n    fi\n    if [ $c -gt $max ]; then\n     \
    \   max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [ $((max*max)) -eq\
    \ $((min1*min1+min2*min2)) ]; then\n        echo \"true\"\n    else\n        echo\
    \ \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n  \
    \  [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local result=\"false\"\
    \n    if [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n        if [[ $a -eq $b\
    \ && $b -eq $c ]]; then\n            result=\"false\"\n        elif [[ $a -eq\
    \ $b || $b -eq $c || $a -eq $c ]]; then\n            if [[ $a -eq $b ]]; then\n\
    \                if [[ $a -gt $c ]]; then\n                    if [[ $(( $a *\
    \ $a )) -eq $(( $c * $c )) ]]; then\n                        result=\"true\"\n\
    \                    fi\n                else\n                    if [[ $(( $c\
    \ * $c )) -eq $(( $a * $a )) ]]; then\n                        result=\"true\"\
    \n                    fi\n                fi\n            elif [[ $b -eq $c ]];\
    \ then\n                if [[ $b -gt $a ]]; then\n                    if [[ $((\
    \ $b * $b )) -eq $(( $a * $a )) ]]; then\n                        result=\"true\"\
    \n                    fi\n                else\n                    if [[ $((\
    \ $a * $a )) -eq $(( $b * $b )) ]]; then\n                        result=\"true\"\
    \n                    fi\n                fi\n            elif [[ $a -eq $c ]];\
    \ then\n                if [[ $a -gt $b ]]; then\n                    if [[ $((\
    \ $a * $a )) -eq $(( $b * $b )) ]]; then\n                        result=\"true\"\
    \n                    fi\n                else\n                    if [[ $((\
    \ $b * $b )) -eq $(( $a * $a )) ]]; then\n                        result=\"true\"\
    \n                    fi\n                fi\n            fi\n        else\n \
    \           if [[ $a -gt $b && $a -gt $c ]]; then\n                if [[ $(( $a\
    \ * $a )) -eq $(( $b * $b + $c * $c )) ]]; then\n                    result=\"\
    true\"\n                fi\n            elif [[ $b -gt $a && $b -gt $c ]]; then\n\
    \                if [[ $(( $b * $b )) -eq $(( $a * $\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpr0m4d40r.sh: line 61: unexpected EOF while looking for matching
    `)''

    /tmp/tmpr0m4d40r.sh: line 84: unexpected argument to conditional binary operator

    /tmp/tmpr0m4d40r.sh: line 84: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [ $1 -eq 0 ] || [ $2\
    \ -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n        return 0\n  \
    \  fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n        echo \"false\"\n \
    \       return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3\
    \ ]; then\n        echo \"false\"\n        return 0\n    fi\n    if [ $1 -lt $2\
    \ ] && [ $1 -lt $3 ]; then\n        if [ $(( $2 * $2 + $3 * $3 )) -eq $(( $1 *\
    \ $1 )) ]; then\n            echo \"true\"\n            return 0\n        fi\n\
    \    fi\n    if [ $2 -lt $1 ] && [ $2 -lt $3 ]; then\n        if [ $(( $1 * $1\
    \ + $3 * $3 )) -eq $(( $2 * $2 )) ]; then\n            echo \"true\"\n       \
    \     return 0\n        fi\n    fi\n    if [ $3 -lt $1 ] && [ $3 -lt $2 ]; then\n\
    \        if [ $(( $1 * $1 + $2 * $2 )) -eq $(( $3 * $3 )) ]; then\n          \
    \  echo \"true\"\n            return 0\n        fi\n    fi\n    echo \"false\"\
    \n    return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [ $1 -eq $2 ] || [ $1\
    \ -eq $3 ] || [ $2 -eq $3 ]; then\n        echo \"false\"\n        return 0\n\
    \    fi\n    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $(( $1 * $1\
    \ )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n            echo \"true\"\n       \
    \     return 0\n        fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n  \
    \      if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n            echo\
    \ \"true\"\n            return 0\n        fi\n    elif [ $3 -gt $1 ] && [ $3 -gt\
    \ $2 ]; then\n        if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n\
    \            echo \"true\"\n            return 0\n        fi\n    fi\n    echo\
    \ \"false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if (( $a > $b && $a >\
    \ $c )); then\n        if (( $a*$a == $b*$b + $c*$c )); then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    elif ((\
    \ $b > $a && $b > $c )); then\n        if (( $b*$b == $a*$a + $c*$c )); then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    elif (( $c > $a && $c > $b )); then\n        if (( $c*$c == $a*$a +\
    \ $b*$b )); then\n            echo \"true\"\n        else\n            echo \"\
    false\"\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a > 0 && $b > 0 && $c\
    \ > 0 )); then\n    if (( $a > $b && $a > $c )); then\n      if (( $a*$a == $b*$b\
    \ + $c*$c )); then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    elif (( $b > $a && $b > $c )); then\n      if (( $b*$b == $a*$a\
    \ + $c*$c )); then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    elif (( $c > $a && $c > $b )); then\n      if (( $c*$c == $a*$a\
    \ + $b*$b )); then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local result=\"false\"\
    \n    local max=0\n    local sum=0\n    local a_sqr=0\n    local b_sqr=0\n   \
    \ local c_sqr=0\n    local max_sqr=0\n    local sum_sqr=0\n    if [[ $a -gt $b\
    \ ]]; then\n        max=$a\n    else\n        max=$b\n    fi\n    if [[ $max -lt\
    \ $c ]]; then\n        max=$c\n    fi\n    sum=$((a + b + c))\n    a_sqr=$((a\
    \ * a))\n    b_sqr=$((b * b))\n    c_sqr=$((c * c))\n    max_sqr=$((max * max))\n\
    \    sum_sqr=$((a_sqr + b_sqr + c_sqr))\n    if [[ $max_sqr -eq $((sum_sqr - max_sqr))\
    \ ]]; then\n        result=\"true\"\n    fi\n    echo \"$result\"\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $(( $1*$1 )) -eq $((\
    \ $2*$2 + $3*$3 )) ]]; then\n            echo \"true\"\n        else\n       \
    \     echo \"false\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n\
    \        if [[ $(( $2*$2 )) -eq $(( $1*$1 + $3*$3 )) ]]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    elif [[\
    \ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $(( $3*$3 )) -eq $(( $1*$1 +\
    \ $2*$2 )) ]]; then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min=$b\n    if [ $max -lt $b ]; then\n        max=$b\n        min=$a\n    fi\n\
    \    if [ $max -lt $c ]; then\n        max=$c\n    fi\n    if [ $min -gt $c ];\
    \ then\n        min=$c\n    fi\n    if [ $((max*max)) -eq $((a*a+b*b+c*c-max*max))\
    \ ]; then\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $(($1**2)) -eq $(($2**2\
    \ + $3**2)) ]]; then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n       \
    \ if [[ $(($2**2)) -eq $(($1**2 + $3**2)) ]]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    elif [[ $3 -gt $1 &&\
    \ $3 -gt $2 ]]; then\n        if [[ $(($3**2)) -eq $(($1**2 + $2**2)) ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    local a=$1\n    local b=$2\n\
    \    local c=$3\n    if [[ $a -eq 0 || $b -eq 0 || $c -eq 0 ]]; then\n       \
    \ echo \"false\"\n        return 0\n    fi\n    if [[ $a -eq $b && $b -eq $c ]];\
    \ then\n        echo \"false\"\n        return 0\n    fi\n    if [[ $a -eq $b\
    \ || $b -eq $c || $a -eq $c ]]; then\n        echo \"false\"\n        return 0\n\
    \    fi\n    if [[ $a -gt $b && $a -gt $c ]]; then\n        if [[ $(( $a * $a\
    \ )) -eq $(( $b * $b + $c * $c )) ]]; then\n            echo \"true\"\n      \
    \      return 0\n        fi\n    fi\n    if [[ $b -gt $a && $b -gt $c ]]; then\n\
    \        if [[ $(( $b * $b )) -eq $(( $a * $a + $c * $c )) ]]; then\n        \
    \    echo \"true\"\n            return 0\n        fi\n    fi\n    if [[ $c -gt\
    \ $a && $c -gt $b ]]; then\n        if [[ $(( $c * $c )) -eq $(( $a * $a + $b\
    \ * $b )) ]]; then\n            echo \"true\"\n            return 0\n        fi\n\
    \    fi\n    echo \"false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    # Write your code here\n    if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt\
    \ 0 ]; then\n        if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n            echo\
    \ \"true\"\n        elif [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n\
    \            echo \"false\"\n        else\n            if [ $1 -gt $2 ] && [ $1\
    \ -gt $3 ]; then\n                if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]; then\n                    echo \"true\"\n                else\n      \
    \              echo \"false\"\n                fi\n            elif [ $2 -gt $1\
    \ ] && [ $2 -gt $3 ]; then\n                if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n                    echo \"true\"\n                else\n\
    \                    echo \"false\"\n                fi\n            elif [ $3\
    \ -gt $1 ] && [ $3 -gt $2 ]; then\n                if [ $(( $3 * $3 )) -eq $((\
    \ $1 * $1 + $2 * $2 )) ]; then\n                    echo \"true\"\n          \
    \      else\n                    echo \"false\"\n                fi\n        \
    \    fi\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n    if [ $1 -eq\
    \ $2 ] && [ $2 -eq $3 ]; then\n      echo \"false\"\n    elif [ $1 -eq $2 ] ||\
    \ [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"false\"\n    elif [ $1 -gt\
    \ $2 ] && [ $1 -gt $3 ]; then\n      if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3\
    \ * $3 )) ]; then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n      if [ $(( $2 *\
    \ $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n        echo \"true\"\n      else\n\
    \        echo \"false\"\n      fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n\
    \      if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    fi\n  else\n   \
    \ echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $# -ne 3 ]]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [[ $1 -eq 0 || $2 -eq 0 || $3\
    \ -eq 0 ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if [[ $1 -lt 0 ||\
    \ $2 -lt 0 || $3 -lt 0 ]]; then\n    echo \"false\"\n    return 0\n  fi\n  if\
    \ [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n    return 0\n  fi\n\
    \  if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  \
    \  return 0\n  fi\n  if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $((\
    \ $2 * $2 + $3 * $3 )) ]]; then\n      echo \"true\"\n      return 0\n    fi\n\
    \  fi\n  if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(( $1 * $1 +\
    \ $3 * $3 )) ]]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $3 -eq $(( $1 * $1 + $2 * $2 ))\
    \ ]]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo \"false\"\
    \n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $(( $2 * $2\
    \ + $3 * $3 )) || $2 -eq $(( $1 * $1 + $3 * $3 )) || $3 -eq $(( $1 * $1 + $2 *\
    \ $2 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $(( $1 * $1 )) -eq $((\
    \ $2 * $2 + $3 * $3 )) ]]; then\n                echo \"true\"\n            else\n\
    \                echo \"false\"\n            fi\n        elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 *\
    \ $3 )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq 0 ]] || [[\
    \ $2 -eq 0 ]] || [[ $3 -eq 0 ]]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [[ $1 -eq $2 ]] && [[ $2 -eq $3 ]]; then\n        echo \"\
    false\"\n        return 0\n    fi\n    if [[ $1 -eq $2 ]] || [[ $2 -eq $3 ]] ||\
    \ [[ $1 -eq $3 ]]; then\n        echo \"false\"\n        return 0\n    fi\n  \
    \  if [[ $1 -gt $2 ]] && [[ $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2 *\
    \ $2 + $3 * $3 )) ]]; then\n            echo \"true\"\n            return 0\n\
    \        fi\n    fi\n    if [[ $2 -gt $1 ]] && [[ $2 -gt $3 ]]; then\n       \
    \ if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo \"true\"\n\
    \            return 0\n        fi\n    fi\n    if [[ $3 -gt $1 ]] && [[ $3 -gt\
    \ $2 ]]; then\n        if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      \
    \      echo \"true\"\n            return 0\n        fi\n    fi\n    echo \"false\"\
    \n    return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $(($1 * $1)) -eq $(($2\
    \ * $2 + $3 * $3)) ]]; then\n            echo \"true\"\n        else\n       \
    \     echo \"false\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n\
    \        if [[ $(($2 * $2)) -eq $(($1 * $1 + $3 * $3)) ]]; then\n            echo\
    \ \"true\"\n        else\n            echo \"false\"\n        fi\n    elif [[\
    \ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $(($3 * $3)) -eq $(($1 * $1 +\
    \ $2 * $2)) ]]; then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max * max)) -eq $((min1 * min1 + min2 * min2)) ]; then\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local mid=$b\n\
    \  local min=$c\n  if [ $a -lt $b ]; then\n    max=$b\n    mid=$a\n  fi\n  if\
    \ [ $max -lt $c ]; then\n    min=$mid\n    mid=$max\n    max=$c\n  fi\n  if [\
    \ $mid -lt $c ]; then\n    min=$mid\n    mid=$c\n  fi\n  if [ $((max*max)) -eq\
    \ $((mid*mid+min*min)) ]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $1 -eq $(($2 * $2 + $3\
    \ * $3)) ]]; then\n                echo \"true\"\n            else\n         \
    \       echo \"false\"\n            fi\n        elif [[ $2 -gt $1 && $2 -gt $3\
    \ ]]; then\n            if [[ $2 -eq $(($1 * $1 + $3 * $3)) ]]; then\n       \
    \         echo \"true\"\n            else\n                echo \"false\"\n  \
    \          fi\n        elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n            if\
    \ [[ $3 -eq $(($1 * $1 + $2 * $2)) ]]; then\n                echo \"true\"\n \
    \           else\n                echo \"false\"\n            fi\n        fi\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $1 -eq $(( $2 * $2 + $3 * $3 ))\
    \ ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if [ $2 -gt $1\
    \ ] && [ $2 -gt $3 ]; then\n    if [ $2 -eq $(( $1 * $1 + $3 * $3 )) ]; then\n\
    \      echo \"true\"\n      return 0\n    fi\n  fi\n  if [ $3 -gt $1 ] && [ $3\
    \ -gt $2 ]; then\n    if [ $3 -eq $(( $1 * $1 + $2 * $2 )) ]; then\n      echo\
    \ \"true\"\n      return 0\n    fi\n  fi\n  echo \"false\"\n  return 0\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1 b=$2 c=$3\n  if [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n\
    \    if [[ $((a*a)) -eq $((b*b+c*c)) || $((b*b)) -eq $((a*a+c*c)) || $((c*c))\
    \ -eq $((a*a+b*b)) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ]\
    \ || [ $3 -eq 0 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -lt\
    \ 0 ] || [ $2 -lt 0 ] || [ $3 -lt 0 ]; then\n    echo \"false\"\n    return 0\n\
    \  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n    echo \"false\"\n    return\
    \ 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo\
    \ \"false\"\n    return 0\n  fi\n  if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n \
    \   if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]; then\n      echo \"true\"\
    \n      return 0\n    fi\n  fi\n  if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n  \
    \  if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n      echo \"true\"\
    \n      return 0\n    fi\n  fi\n  if [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n  \
    \  if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n      echo \"true\"\
    \n      return 0\n    fi\n  fi\n  echo \"false\"\n  return 0\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $# -ne 3 ]]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [[ $1 -gt 0 && $2 -gt 0 && $3\
    \ -gt 0 ]]; then\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo \"false\"\
    \n    elif [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\
    \n    elif [[ $1 -eq $(( $2 * $2 + $3 * $3 )) || $2 -eq $(( $1 * $1 + $3 * $3\
    \ )) || $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=0\n  local sum=0\n\
    \  local result=\"false\"\n  if [[ $a -gt $b ]]; then\n    max=$a\n  else\n  \
    \  max=$b\n  fi\n  if [[ $max -lt $c ]]; then\n    max=$c\n  fi\n  if [[ $max\
    \ -eq $a ]]; then\n    sum=$(($b*$b+$c*$c))\n  elif [[ $max -eq $b ]]; then\n\
    \    sum=$(($a*$a+$c*$c))\n  else\n    sum=$(($a*$a+$b*$b))\n  fi\n  if [[ $max*$max\
    \ -eq $sum ]]; then\n    result=\"true\"\n  fi\n  echo $result\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(($2*$2 + $3*$3)) ]]; then\n   \
    \   echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt $1\
    \ && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(($1*$1 + $3*$3)) ]]; then\n      echo\
    \ \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt $1 && $3\
    \ -gt $2 ]]; then\n    if [[ $3 -eq $(($1*$1 + $2*$2)) ]]; then\n      echo \"\
    true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(($1 * $1)) -eq $(($2 * $2 + $3 * $3))\
    \ ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(($2 * $2)) -eq $(($1 * $1 +\
    \ $3 * $3)) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n  \
    \  fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(($3 * $3)) -eq $(($1\
    \ * $1 + $2 * $2)) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [ $a -gt $b ] && [\
    \ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [ $b -gt $a ] && [ $b -gt $c ]; then\n        if [ $((b*b)) -eq $((a*a+c*c))\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if [ $((c*c))\
    \ -eq $((a*a+b*b)) ]; then\n            echo \"true\"\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if ((a*a+b*b==c*c)) ||\
    \ ((a*a+c*c==b*b)) || ((b*b+c*c==a*a)); then\n        echo \"true\"\n    else\n\
    \        echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $# -ne 3 ]]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq 0 || $2 -eq\
    \ 0 || $3 -eq 0 ]]; then\n        echo \"false\"\n        return 0\n    fi\n \
    \   if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n        return\
    \ 0\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo\
    \ \"false\"\n        return 0\n    fi\n    if [[ $1 -gt $2 && $1 -gt $3 ]]; then\n\
    \        if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n        \
    \    echo \"true\"\n            return 0\n        fi\n    fi\n    if [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n        if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3\
    \ * $3 )) ]]; then\n            echo \"true\"\n            return 0\n        fi\n\
    \    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $(( $3 * $3\
    \ )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n      \
    \      return 0\n        fi\n    fi\n    echo \"false\"\n    return 0\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ (( $a > 0 && $b > 0 && $c > 0 )); then\n    if (( $a*$a == $b*$b + $c*$c ));\
    \ then\n      result=\"true\"\n    elif (( $b*$b == $a*$a + $c*$c )); then\n \
    \     result=\"true\"\n    elif (( $c*$c == $a*$a + $b*$b )); then\n      result=\"\
    true\"\n    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=$a\n    local\
    \ min1=$b\n    local min2=$c\n    if [[ $b -gt $max ]]; then\n        max=$b\n\
    \        min1=$a\n        min2=$c\n    fi\n    if [[ $c -gt $max ]]; then\n  \
    \      max=$c\n        min1=$a\n        min2=$b\n    fi\n    if [[ $((max*max))\
    \ -eq $((min1*min1+min2*min2)) ]]; then\n        echo \"true\"\n    else\n   \
    \     echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n    if [[ $a -gt $b && $a -gt\
    \ $c ]]; then\n      if [[ $((a*a)) -eq $((b*b+c*c)) ]]; then\n        result=\"\
    true\"\n      fi\n    elif [[ $b -gt $a && $b -gt $c ]]; then\n      if [[ $((b*b))\
    \ -eq $((a*a+c*c)) ]]; then\n        result=\"true\"\n      fi\n    elif [[ $c\
    \ -gt $a && $c -gt $b ]]; then\n      if [[ $((c*c)) -eq $((a*a+b*b)) ]]; then\n\
    \        result=\"true\"\n      fi\n    fi\n  fi\n  echo \"$result\"\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $(($b*$b + $c*$c))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        else\n            if [[ $c -eq $(($a*$a +\
    \ $b*$b)) ]]; then\n                echo \"true\"\n            else\n        \
    \        echo \"false\"\n            fi\n        fi\n    else\n        if [[ $b\
    \ -gt $c ]]; then\n            if [[ $b -eq $(($a*$a + $c*$c)) ]]; then\n    \
    \            echo \"true\"\n            else\n                echo \"false\"\n\
    \            fi\n        else\n            if [[ $c -eq $(($a*$a + $b*$b)) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $(( $1 * $1 )) -eq $((\
    \ $2 * $2 + $3 * $3 )) ]]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n\
    \        if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[ $(( $3 * $3 )) -eq $((\
    \ $1 * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $(( $b * $b + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    else\n\
    \        if [[ $b -gt $c ]]; then\n            if [[ $b -eq $(( $a * $a + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if ! [[ $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if ! [[ $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if ! [[ $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n  \
    \  return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] ||\
    \ [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2\
    \ ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n\
    \  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n    echo \"\
    false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq $3 ] || [ $1\n}\n\n\
    candidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n\
    \    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\"\
    \ \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\"\
    \ ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\"\
    ) = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[\
    \ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp9vbdtzqr.sh: line 65: syntax error near unexpected token `}''

    /tmp/tmp9vbdtzqr.sh: line 65: `}''

    '
  stdout: ''
  timestamp: 1660018669
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(($2 * $2 +\
    \ $3 * $3)) ]]; then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n       \
    \ if [[ $2 -eq $(($1 * $1 + $3 * $3)) ]]; then\n            echo \"true\"\n  \
    \      else\n            echo \"false\"\n        fi\n    elif [[ $3 -gt $1 &&\
    \ $3 -gt $2 ]]; then\n        if [[ $3 -eq $(($1 * $1 + $2 * $2)) ]]; then\n \
    \           echo \"true\"\n        else\n            echo \"false\"\n        fi\n\
    \    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if (( $a + $b > $c &&\
    \ $a + $c > $b && $b + $c > $a )); then\n        if (( $a * $a + $b * $b == $c\
    \ * $c || $a * $a + $c * $c == $b * $b || $b * $b + $c * $c == $a * $a )); then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [ $a -gt $b ]; then\n    if\
    \ [ $a -gt $c ]; then\n      if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    else\n      if [\
    \ $((c*c)) -eq $((a*a+b*b)) ]; then\n        echo \"true\"\n      else\n     \
    \   echo \"false\"\n      fi\n    fi\n  else\n    if [ $b -gt $c ]; then\n   \
    \   if [ $((b*b)) -eq $((a*a+c*c)) ]; then\n        echo \"true\"\n      else\n\
    \        echo \"false\"\n      fi\n    else\n      if [ $((c*c)) -eq $((a*a+b*b))\
    \ ]; then\n        echo \"true\"\n      else\n        echo \"false\"\n      fi\n\
    \    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 && $2 -eq\
    \ $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n\
    \      echo \"false\"\n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n      echo\
    \ \"false\"\n    else\n      echo \"true\"\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $1 -eq $(($2 * $2 + $3 * $3)) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $2 -gt\
    \ $1 && $2 -gt $3 ]]; then\n    if [[ $2 -eq $(($1 * $1 + $3 * $3)) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif [[ $3 -gt\
    \ $1 && $3 -gt $2 ]]; then\n    if [[ $3 -eq $(($1 * $1 + $2 * $2)) ]]; then\n\
    \      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $(($b*$b + $c*$c))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        else\n            if [[ $c -eq $(($a*$a +\
    \ $b*$b)) ]]; then\n                echo \"true\"\n            else\n        \
    \        echo \"false\"\n            fi\n        fi\n    else\n        if [[ $b\
    \ -gt $c ]]; then\n            if [[ $b -eq $(($a*$a + $c*$c)) ]]; then\n    \
    \            echo \"true\"\n            else\n                echo \"false\"\n\
    \            fi\n        else\n            if [[ $c -eq $(($a*$a + $b*$b)) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [ $a -gt $b ] && [\
    \ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [ $b -gt $a ] && [ $b -gt $c ]; then\n        if [ $((b*b)) -eq $((a*a+c*c))\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if [ $((c*c))\
    \ -eq $((a*a+b*b)) ]; then\n            echo \"true\"\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n    if [ $1 -eq\
    \ $2 ] && [ $2 -eq $3 ]; then\n      echo \"false\"\n    elif [ $1 -eq $2 ] ||\
    \ [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"false\"\n    elif [ $1 -gt\
    \ $2 ] && [ $1 -gt $3 ]; then\n      if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3\
    \ * $3 )) ]; then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n      if [ $(( $2 *\
    \ $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n        echo \"true\"\n      else\n\
    \        echo \"false\"\n      fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n\
    \      if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    fi\n  else\n   \
    \ echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [[ $a -gt 0 && $b -gt 0 &&\
    \ $c -gt 0 ]]; then\n    if [[ $a -eq $b && $b -eq $c ]]; then\n      echo \"\
    false\"\n    elif [[ $a -eq $b || $b -eq $c || $a -eq $c ]]; then\n      echo\
    \ \"false\"\n    elif [[ $a -eq $(( $b * $b + $c * $c )) || $b -eq $(( $a * $a\
    \ + $c * $c )) || $c -eq $(( $a * $a + $b * $b )) ]]; then\n      echo \"true\"\
    \n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if [[ $1 -eq 0 || $2 -eq\
    \ 0 || $3 -eq 0 ]]; then\n        echo \"false\"\n        return 0\n    fi\n \
    \   if [[ $1 -lt 0 || $2 -lt 0 || $3 -lt 0 ]]; then\n        echo \"false\"\n\
    \        return 0\n    fi\n    if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n       \
    \ echo \"false\"\n        return 0\n    fi\n    if [[ $1 -eq $2 || $2 -eq $3 ||\
    \ $1 -eq $3 ]]; then\n        echo \"false\"\n        return 0\n    fi\n    if\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2 * $2 + $3 *\
    \ $3 )) ]]; then\n            echo \"true\"\n            return 0\n        fi\n\
    \    fi\n    if [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n            echo \"true\"\n            return 0\n\
    \        fi\n    fi\n    if [[ $3 -gt $1 && $3 -gt $2 ]]; then\n        if [[\
    \ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n            echo \"true\"\n      \
    \      return 0\n        fi\n    fi\n    echo \"false\"\n    return 0\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [ $# -ne 3 ]; then\n        echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n        return 1\n    fi\n    if ! [[ $1 =~ ^[0-9]+$\
    \ ]]; then\n        echo \"Error: $1 is not an integer\"\n        return 1\n \
    \   fi\n    if ! [[ $2 =~ ^[0-9]+$ ]]; then\n        echo \"Error: $2 is not an\
    \ integer\"\n        return 1\n    fi\n    if ! [[ $3 =~ ^[0-9]+$ ]]; then\n \
    \       echo \"Error: $3 is not an integer\"\n        return 1\n    fi\n    if\
    \ [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n        echo \"false\"\n\
    \        return 0\n    fi\n    if [ $1 -eq $2 ] && [ $2 -eq $3 ]; then\n     \
    \   echo \"false\"\n        return 0\n    fi\n    if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n        echo \"false\"\n        return 0\n    fi\n\
    \    if [ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n        if [ $(( $1 * $1 )) -eq\
    \ $(( $2 * $2 + $3 * $3 )) ]; then\n            echo \"true\"\n            return\
    \ 0\n        fi\n    fi\n    if [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n       \
    \ if [ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n            echo \"\
    true\"\n            return 0\n        fi\n    fi\n    if [ $3 -gt $1 ] && [ $3\
    \ -gt $2 ]; then\n        if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ];\
    \ then\n            echo \"true\"\n            return 0\n        fi\n    fi\n\
    \    echo \"false\"\n    return 0\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $((b*b + c*c)) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        else\n            if [[ $c -eq $((a*a + b*b))\
    \ ]]; then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        if [[ $b -gt $c ]];\
    \ then\n            if [[ $b -eq $((a*a + c*c)) ]]; then\n                echo\
    \ \"true\"\n            else\n                echo \"false\"\n            fi\n\
    \        else\n            if [[ $c -eq $((a*a + b*b)) ]]; then\n            \
    \    echo \"true\"\n            else\n                echo \"false\"\n       \
    \     fi\n        fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $1 -eq $(($2 * $2 + $3\
    \ * $3)) ]]; then\n                echo \"true\"\n            else\n         \
    \       echo \"false\"\n            fi\n        elif [[ $2 -gt $1 && $2 -gt $3\
    \ ]]; then\n            if [[ $2 -eq $(($1 * $1 + $3 * $3)) ]]; then\n       \
    \         echo \"true\"\n            else\n                echo \"false\"\n  \
    \          fi\n        elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n            if\
    \ [[ $3 -eq $(($1 * $1 + $2 * $2)) ]]; then\n                echo \"true\"\n \
    \           else\n                echo \"false\"\n            fi\n        fi\n\
    \    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3 )) ]]; then\n\
    \        echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n      if [[ $(( $2 * $2 )) -eq $(( $1 *\
    \ $1 + $3 * $3 )) ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $((\
    \ $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n        echo \"true\"\n  \
    \    else\n        echo \"false\"\n      fi\n    fi\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max*max)) -eq $((min1*min1+min2*min2)) ]; then\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(( $1 * $1 )) -eq $(( $2 * $2 + $3 * $3\
    \ )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n \
    \ elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(( $2 * $2 )) -eq $(( $1\
    \ * $1 + $3 * $3 )) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(( $3 * $3 ))\
    \ -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n      echo \"true\"\n    else\n     \
    \ echo \"false\"\n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\"\
    \ ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    local max=0\n    local\
    \ sum=0\n    local result=\"false\"\n    if [[ $a -gt $b ]]; then\n        max=$a\n\
    \    else\n        max=$b\n    fi\n    if [[ $max -lt $c ]]; then\n        max=$c\n\
    \    fi\n    if [[ $max -eq $a ]]; then\n        sum=$((b*b+c*c))\n    elif [[\
    \ $max -eq $b ]]; then\n        sum=$((a*a+c*c))\n    else\n        sum=$((a*a+b*b))\n\
    \    fi\n    if [[ $((max*max)) -eq $sum ]]; then\n        result=\"true\"\n \
    \   fi\n    echo $result\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local result=\"false\"\n  if\
    \ [[ $a -gt 0 && $b -gt 0 && $c -gt 0 ]]; then\n    if [[ $((a*a)) -eq $((b*b+c*c))\
    \ || $((b*b)) -eq $((a*a+c*c)) || $((c*c)) -eq $((a*a+b*b)) ]]; then\n      result=\"\
    true\"\n    fi\n  fi\n  echo $result\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 2
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 && $2 -eq\
    \ $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3 || $1\
    \ -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3 ||\
    \ $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq\
    \ $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2\
    \ -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 ||\
    \ $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2\
    \ || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1\
    \ -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[\
    \ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]];\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpcg4oy5vq.sh: line 46: syntax error near unexpected token `}''

    /tmp/tmpcg4oy5vq.sh: line 46: `}''

    '
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 && $2 -ne $3\
    \ ]]; then\n      if [[ $1 -eq $3 ]]; then\n        echo \"false\"\n      else\n\
    \        echo \"true\"\n      fi\n    elif [[ $1 -ne $2 && $2 -eq $3 ]]; then\n\
    \      if [[ $1 -eq $3 ]]; then\n        echo \"false\"\n      else\n        echo\
    \ \"true\"\n      fi\n    elif [[ $1 -ne $2 && $2 -ne $3 ]]; then\n      if [[\
    \ $1 -eq $3 ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\
    \n      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $(( $b * $b + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    else\n\
    \        if [[ $b -gt $c ]]; then\n            if [[ $b -eq $(( $a * $a + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $# -ne 3 ]; then\n    echo \"Usage: right_angle_triangle <integer>\
    \ <integer> <integer>\"\n    return 1\n  fi\n  if [[ ! $1 =~ ^[0-9]+$ ]]; then\n\
    \    echo \"Error: $1 is not an integer\"\n    return 1\n  fi\n  if [[ ! $2 =~\
    \ ^[0-9]+$ ]]; then\n    echo \"Error: $2 is not an integer\"\n    return 1\n\
    \  fi\n  if [[ ! $3 =~ ^[0-9]+$ ]]; then\n    echo \"Error: $3 is not an integer\"\
    \n    return 1\n  fi\n  if [ $1 -eq 0 ] || [ $2 -eq 0 ] || [ $3 -eq 0 ]; then\n\
    \    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] && [ $2 -eq $3 ];\
    \ then\n    echo \"false\"\n    return 0\n  fi\n  if [ $1 -eq $2 ] || [ $2 -eq\
    \ $3 ] || [ $1 -eq $3 ]; then\n    echo \"false\"\n    return 0\n  fi\n  if [\
    \ $1 -gt $2 ] && [ $1 -gt $3 ]; then\n    if [ $(( $1 * $1 )) -eq $(( $2 * $2\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n    if [ $(( $2 * $2 )) -eq $(( $1 * $1\
    \ + $3 * $3 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  if\
    \ [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n    if [ $(( $3 * $3 )) -eq $(( $1 * $1\
    \ + $2 * $2 )) ]; then\n      echo \"true\"\n      return 0\n    fi\n  fi\n  echo\
    \ \"false\"\n  return 0\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2 * $2 +\
    \ $3 * $3 )) ]]; then\n            echo \"true\"\n        else\n            echo\
    \ \"false\"\n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n       \
    \ if [[ $2 -eq $(( $1 * $1 + $3 * $3 )) ]]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    elif [[ $3 -gt $1 &&\
    \ $3 -gt $2 ]]; then\n        if [[ $3 -eq $(( $1 * $1 + $2 * $2 )) ]]; then\n\
    \            echo \"true\"\n        else\n            echo \"false\"\n       \
    \ fi\n    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate\
    \ \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") =\
    \ \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n    echo \"false\"\n \
    \ elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n    echo \"false\"\n  elif [[ $1 -gt\
    \ $2 && $1 -gt $3 ]]; then\n    if [[ $(($1 * $1)) -eq $(($2 * $2 + $3 * $3))\
    \ ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n    fi\n  elif\
    \ [[ $2 -gt $1 && $2 -gt $3 ]]; then\n    if [[ $(($2 * $2)) -eq $(($1 * $1 +\
    \ $3 * $3)) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\n  \
    \  fi\n  elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n    if [[ $(($3 * $3)) -eq $(($1\
    \ * $1 + $2 * $2)) ]]; then\n      echo \"true\"\n    else\n      echo \"false\"\
    \n    fi\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"\
    6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n\
    \    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"\
    10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"\
    true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate\
    \ \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") =\
    \ \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n        if [[ $1 -eq\
    \ $2 && $2 -eq $3 ]]; then\n            echo \"false\"\n        elif [[ $1 -eq\
    \ $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n            echo \"false\"\n        elif\
    \ [[ $1 -gt $2 && $1 -gt $3 ]]; then\n            if [[ $(( $1 * $1 )) -eq $((\
    \ $2 * $2 + $3 * $3 )) ]]; then\n                echo \"true\"\n            else\n\
    \                echo \"false\"\n            fi\n        elif [[ $2 -gt $1 &&\
    \ $2 -gt $3 ]]; then\n            if [[ $(( $2 * $2 )) -eq $(( $1 * $1 + $3 *\
    \ $3 )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        elif [[ $3 -gt $1 && $3 -gt $2\
    \ ]]; then\n            if [[ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]];\
    \ then\n                echo \"true\"\n            else\n                echo\
    \ \"false\"\n            fi\n        fi\n    else\n        echo \"false\"\n  \
    \  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $b+$c ]]; then\n \
    \               echo \"true\"\n            else\n                echo \"false\"\
    \n            fi\n        else\n            if [[ $c -eq $a+$b ]]; then\n    \
    \            echo \"true\"\n            else\n                echo \"false\"\n\
    \            fi\n        fi\n    else\n        if [[ $b -gt $c ]]; then\n    \
    \        if [[ $b -eq $a+$c ]]; then\n                echo \"true\"\n        \
    \    else\n                echo \"false\"\n            fi\n        else\n    \
    \        if [[ $c -eq $a+$b ]]; then\n                echo \"true\"\n        \
    \    else\n                echo \"false\"\n            fi\n        fi\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [ $1 -gt 0 ] && [ $2 -gt 0 ] && [ $3 -gt 0 ]; then\n    if [ $1 -eq\
    \ $2 ] && [ $2 -eq $3 ]; then\n      echo \"false\"\n    elif [ $1 -eq $2 ] ||\
    \ [ $2 -eq $3 ] || [ $1 -eq $3 ]; then\n      echo \"false\"\n    elif [ $1 -gt\
    \ $2 ] && [ $1 -gt $3 ]; then\n      if [ $(( $1 * $1 )) -eq $(( $2 * $2 + $3\
    \ * $3 )) ]; then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    elif [ $2 -gt $1 ] && [ $2 -gt $3 ]; then\n      if [ $(( $2 *\
    \ $2 )) -eq $(( $1 * $1 + $3 * $3 )) ]; then\n        echo \"true\"\n      else\n\
    \        echo \"false\"\n      fi\n    elif [ $3 -gt $1 ] && [ $3 -gt $2 ]; then\n\
    \      if [ $(( $3 * $3 )) -eq $(( $1 * $1 + $2 * $2 )) ]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    fi\n  else\n   \
    \ echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n\
    \    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\"\
    \ \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\"\
    \ ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  if [[ $1 -gt 0 && $2 -gt 0 && $3 -gt 0 ]]; then\n    if [[ $1 -eq $2 &&\
    \ $2 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -eq $2 || $2 -eq $3\
    \ || $1 -eq $3 ]]; then\n      echo \"false\"\n    elif [[ $1 -gt $2 && $1 -gt\
    \ $3 ]]; then\n      if [[ $(($1*$1)) -eq $(($2*$2 + $3*$3)) ]]; then\n      \
    \  echo \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $2\
    \ -gt $1 && $2 -gt $3 ]]; then\n      if [[ $(($2*$2)) -eq $(($1*$1 + $3*$3))\
    \ ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\n      fi\n\
    \    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n      if [[ $(($3*$3)) -eq $(($1*$1\
    \ + $2*$2)) ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"\
    3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\"\
    \ ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [ $a -gt $b ] && [\
    \ $a -gt $c ]; then\n        if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n        \
    \    echo \"true\"\n        else\n            echo \"false\"\n        fi\n   \
    \ elif [ $b -gt $a ] && [ $b -gt $c ]; then\n        if [ $((b*b)) -eq $((a*a+c*c))\
    \ ]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [ $c -gt $a ] && [ $c -gt $b ]; then\n        if [ $((c*c))\
    \ -eq $((a*a+b*b)) ]; then\n            echo \"true\"\n        else\n        \
    \    echo \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\
    \ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  local max=$a\n  local min1=$b\n\
    \  local min2=$c\n  if [ $b -gt $max ]; then\n    max=$b\n    min1=$a\n    min2=$c\n\
    \  fi\n  if [ $c -gt $max ]; then\n    max=$c\n    min1=$a\n    min2=$b\n  fi\n\
    \  if [ $((max * max)) -eq $((min1 * min1 + min2 * min2)) ]; then\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(($2*$2 + $3*$3))\
    \ ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq\
    \ $(($1*$1 + $3*$3)) ]]; then\n            echo \"true\"\n        else\n     \
    \       echo \"false\"\n        fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n\
    \        if [[ $3 -eq $(($1*$1 + $2*$2)) ]]; then\n            echo \"true\"\n\
    \        else\n            echo \"false\"\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    elif [[ $1 -eq $2 && $2 -eq $3 ]]; then\n        echo \"false\"\n    elif\
    \ [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]]; then\n        echo \"false\"\n  \
    \  elif [[ $1 -gt $2 && $1 -gt $3 ]]; then\n        if [[ $1 -eq $(( $2**2 + $3**2\
    \ )) ]]; then\n            echo \"true\"\n        else\n            echo \"false\"\
    \n        fi\n    elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n        if [[ $2 -eq\
    \ $(( $1**2 + $3**2 )) ]]; then\n            echo \"true\"\n        else\n   \
    \         echo \"false\"\n        fi\n    elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n\
    \        if [[ $3 -eq $(( $1**2 + $2**2 )) ]]; then\n            echo \"true\"\
    \n        else\n            echo \"false\"\n        fi\n    fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    if [[ $1 -eq 0 || $2 -eq 0 || $3 -eq 0 ]]; then\n        echo \"false\"\
    \n    else\n        if [[ $1 -eq $2 && $2 -eq $3 ]]; then\n            echo \"\
    false\"\n        else\n            if [[ $1 -eq $2 || $2 -eq $3 || $1 -eq $3 ]];\
    \ then\n                echo \"false\"\n            else\n                if [[\
    \ $1 -gt $2 && $1 -gt $3 ]]; then\n                    if [[ $1 -eq $(($2*$2 +\
    \ $3*$3)) ]]; then\n                        echo \"true\"\n                  \
    \  else\n                        echo \"false\"\n                    fi\n    \
    \            elif [[ $2 -gt $1 && $2 -gt $3 ]]; then\n                    if [[\
    \ $2 -eq $(($1*$1 + $3*$3)) ]]; then\n                        echo \"true\"\n\
    \                    else\n                        echo \"false\"\n          \
    \          fi\n                elif [[ $3 -gt $1 && $3 -gt $2 ]]; then\n     \
    \               if [[ $3 -eq $(($1*$1 + $2*$2)) ]]; then\n                   \
    \     echo \"true\"\n                    else\n                        echo \"\
    false\"\n                    fi\n                fi\n            fi\n        fi\n\
    \    fi\n}\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"\
    1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018669
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n    local a=$1\n    local b=$2\n    local c=$3\n    if [[ $a -gt $b ]]; then\n\
    \        if [[ $a -gt $c ]]; then\n            if [[ $a -eq $(( $b * $b + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    else\n\
    \        if [[ $b -gt $c ]]; then\n            if [[ $b -eq $(( $a * $a + $c *\
    \ $c )) ]]; then\n                echo \"true\"\n            else\n          \
    \      echo \"false\"\n            fi\n        else\n            if [[ $c -eq\
    \ $(( $a * $a + $b * $b )) ]]; then\n                echo \"true\"\n         \
    \   else\n                echo \"false\"\n            fi\n        fi\n    fi\n\
    }\n\ncandidate() {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\"\
    \ \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate\
    \ \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") =\
    \ \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\") = \"true\" ]]\n    [[\
    \ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[ $(candidate \"48\" \"\
    55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"1\" \"1\") = \"false\"\
    \ ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 0
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if [ $a -gt $b ] && [ $a -gt\
    \ $c ]; then\n    if [ $((a*a)) -eq $((b*b+c*c)) ]; then\n      echo \"true\"\n\
    \    else\n      echo \"false\"\n    fi\n  elif [ $b -gt $a ] && [ $b -gt $c ];\
    \ then\n    if [ $((b*b)) -eq $((a*a+c*c)) ]; then\n      echo \"true\"\n    else\n\
    \      echo \"false\"\n    fi\n  elif [ $c -gt $a ] && [ $c -gt $b ]; then\n \
    \   if [ $((c*c)) -eq $((a*a+b*b)) ]; then\n      echo \"true\"\n    else\n  \
    \    echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    right_angle_triangle \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"3\" \"4\" \"5\") = \"true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"\
    false\" ]]\n    [[ $(candidate \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate\
    \ \"2\" \"2\" \"2\") = \"false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") =\
    \ \"true\" ]]\n    [[ $(candidate \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate\
    \ \"5\" \"12\" \"13\") = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\")\
    \ = \"true\" ]]\n    [[ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[\
    \ $(candidate \"1\" \"1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\"\
    \ \"10\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660018668
- exit_code: 1
  program: "#!/bin/bash\n# Given the lengths of the three sides of a triangle. Return\
    \ True if the three\n# sides form a right-angled triangle, False otherwise.\n\
    # A right-angled triangle is a triangle in which one angle is right angle or \n\
    # 90 degree.\n# Example:\n# >>> $(right_angle_triangle \"3\" \"4\" \"5\")\n# \"\
    true\"\n# >>> $(right_angle_triangle \"1\" \"2\" \"3\")\n# \"false\"\n#\n# $1\
    \ is an integer\n# $2 is an integer\n# $3 is an integer\nright_angle_triangle()\
    \ {\n  local a=$1\n  local b=$2\n  local c=$3\n  if (( $a > 0 && $b > 0 && $c\
    \ > 0 )); then\n    if (( $a > $b && $a > $c )); then\n      if (( $a*$a == $b*$b\
    \ + $c*$c )); then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    elif (( $b > $a && $b > $c )); then\n      if (( $b*$b == $a*$a\
    \ + $c*$c )); then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    elif (( $c > $a && $c > $b )); then\n      if (( $c*$c == $a*$a\
    \ + $b*$b )); then\n        echo \"true\"\n      else\n        echo \"false\"\n\
    \      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    right_angle_triangle\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"3\" \"4\" \"5\") = \"\
    true\" ]]\n    [[ $(candidate \"1\" \"2\" \"3\") = \"false\" ]]\n    [[ $(candidate\
    \ \"10\" \"6\" \"8\") = \"true\" ]]\n    [[ $(candidate \"2\" \"2\" \"2\") = \"\
    false\" ]]\n    [[ $(candidate \"7\" \"24\" \"25\") = \"true\" ]]\n    [[ $(candidate\
    \ \"10\" \"5\" \"7\") = \"false\" ]]\n    [[ $(candidate \"5\" \"12\" \"13\")\
    \ = \"true\" ]]\n    [[ $(candidate \"15\" \"8\" \"17\") = \"true\" ]]\n    [[\
    \ $(candidate \"48\" \"55\" \"73\") = \"true\" ]]\n    [[ $(candidate \"1\" \"\
    1\" \"1\") = \"false\" ]]\n    [[ $(candidate \"2\" \"2\" \"10\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660018668

language: sh
name: HumanEval_124_valid_date
results:
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  # check if the format is correct\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n  # check if the date is valid\n\
    \  if [[ ! $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  # check if the month is valid\n  local\
    \ month=$(echo $1 | cut -d'-' -f1)\n  if [[ $month -eq 2 ]]; then\n    if [[ $1\
    \ =~ ^02-(0[1-9]|1[0-9]|2[0-8])-[0-9]{4}$ ]]; then\n      echo \"true\"\n    \
    \  return\n    else\n      echo \"false\"\n      return\n    fi\n  elif [[ $month\
    \ -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    if [[ $1\
    \ =~ ^(0[4-9]|1[0-1])-(0[1-9]|[1-2][0-9]|30)-[0-9]{4}$ ]]; then\n      echo \"\
    true\"\n      return\n    else\n      echo \"false\"\n      return\n    fi\n \
    \ else\n    if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n      echo \"true\"\n      return\n    else\n      echo \"false\"\n\
    \      return\n    fi\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[\
    \ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 12 || $month -lt 1 ]]; then\n      echo \"false\"\n    \
    \  return\n    fi\n    if [[ $month -eq 2 ]]; then\n      if [[ $day -gt 29 ||\
    \ $day -lt 1 ]]; then\n        echo \"false\"\n        return\n      fi\n    elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \      if [[ $day -gt 30 || $day -lt 1 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    else\n      if [[ $day -gt 31 || $day -lt 1 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    fi\n    echo \"true\"\n\
    \  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -le 12 && $month -ge 1 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -le 31 && $day -ge 1 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -le 30 && $day\
    \ -ge 1 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -le 29 &&\
    \ $day -ge 1 ]]; then\n          echo \"true\"\n        else\n          echo \"\
    false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=$1\n  local date_regex=\"\
    ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\n  local valid_date=\"false\"\n  if [[ $date\
    \ =~ $date_regex ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -ge 1 && $day -le 31 ]]; then\n          valid_date=\"true\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          valid_date=\"\
    true\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge\
    \ 1 && $day -le 29 ]]; then\n          valid_date=\"true\"\n        fi\n     \
    \ fi\n    fi\n  fi\n  echo $valid_date\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  local month=$(echo \"$1\" | cut -d '-'\
    \ -f 1)\n  local day=$(echo \"$1\" | cut -d '-' -f 2)\n  local year=$(echo \"\
    $1\" | cut -d '-' -f 3)\n  if [ $month -lt 1 ] || [ $month -gt 12 ]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  if [ $month -eq 1 ] || [ $month -eq 3 ]\
    \ || [ $month -eq 5 ] || [ $month -eq 7 ] || [ $month -eq 8 ] || [ $month -eq\
    \ 10 ] || [ $month -eq 12 ]; then\n    if [ $day -lt 1 ] || [ $day -gt 31 ]; then\n\
    \      echo \"false\"\n      return\n    fi\n  elif [ $month -eq 4 ] || [ $month\
    \ -eq 6 ] || [ $month -eq 9 ] || [ $month -eq 11 ]; then\n    if [ $day -lt 1\
    \ ] || [ $day -gt 30 ]; then\n      echo \"false\"\n      return\n    fi\n  elif\
    \ [ $month -eq 2 ]; then\n    if [ $day -lt 1 ] || [ $day -gt 29 ]; then\n   \
    \   echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n        month=${BASH_REMATCH[1]}\n        day=${BASH_REMATCH[2]}\n\
    \        year=${BASH_REMATCH[3]}\n        if [[ $month -gt 0 && $month -lt 13\
    \ ]]; then\n            if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 ||\
    \ $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n  \
    \              if [[ $day -gt 0 && $day -lt 32 ]]; then\n                    echo\
    \ \"true\"\n                else\n                    echo \"false\"\n       \
    \         fi\n            elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9\
    \ || $month -eq 11 ]]; then\n                if [[ $day -gt 0 && $day -lt 31 ]];\
    \ then\n                    echo \"true\"\n                else\n            \
    \        echo \"false\"\n                fi\n            elif [[ $month -eq 2\
    \ ]]; then\n                if [[ $day -gt 0 && $day -lt 30 ]]; then\n       \
    \             echo \"true\"\n                else\n                    echo \"\
    false\"\n                fi\n            fi\n        else\n            echo \"\
    false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -gt 0 &&\
    \ $day -lt 32 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -gt 0 && $day -lt 31 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -gt 0 && $day -lt 30 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d '-' -f 1)\n\
    \  local day=$(echo $1 | cut -d '-' -f 2)\n  local year=$(echo $1 | cut -d '-'\
    \ -f 3)\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[\
    \ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n   \
    \ fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11\
    \ ]]; then\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  elif [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1\
    \ || $day -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 2 ]]; then\n        if [[ $(( $year % 4 )) -eq\
    \ 0 ]]; then\n          if [[ $day -gt 0 && $day -lt 30 ]]; then\n           \
    \ echo \"true\"\n          else\n            echo \"false\"\n          fi\n  \
    \      else\n          if [[ $day -gt 0 && $day -lt 29 ]]; then\n            echo\
    \ \"true\"\n          else\n            echo \"false\"\n          fi\n       \
    \ fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq\
    \ 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      else\n \
    \       if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n  \
    \      else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo\
    \ \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n  \
    \  valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=$1\n  local regex=\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\"\
    \n  if [[ $date =~ $regex ]]; then\n    local month=$(echo $date | cut -d'-' -f1)\n\
    \    local day=$(echo $date | cut -d'-' -f2)\n    if [[ $month -eq 2 ]]; then\n\
    \      if [[ $day -gt 29 ]]; then\n        echo \"false\"\n        return\n  \
    \    fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq\
    \ 11 ]]; then\n      if [[ $day -gt 30 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    elif [[ $day -gt 31 ]]; then\n      echo \"false\"\n\
    \      return\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # check if the string is empty\n  if\
    \ [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\n  # check if the\
    \ string is in the format mm-dd-yyyy\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # check if the months are\
    \ not less than 1 or higher than 12\n  month=$(echo \"$1\" | cut -d '-' -f 1)\n\
    \  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"false\"\n\
    \    return\n  fi\n\n  # check if the number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12\n  day=$(echo \"$1\" | cut -d '-' -f\
    \ 2)\n  if [ \"$month\" -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\" -eq 5\
    \ ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq 10 ] ||\
    \ [ \"$month\" -eq 12 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n\n  # check if the\
    \ number of days is not less than 1 or higher than 30 days for months 4,6,9,11\n\
    \  if [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] ||\
    \ [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 30\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n\n  # check if the\
    \ number of days is not less than 1 or higher than 29 for the month 2\n  if [\
    \ \"$month\" -eq 2 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ];\
    \ then\n      echo \"false\"\n      return\n    fi\n  fi\n\n  echo \"true\"\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=\"$1\"\n  local month=\"$(echo\
    \ \"$date\" | cut -d'-' -f1)\"\n  local day=\"$(echo \"$date\" | cut -d'-' -f2)\"\
    \n  local year=\"$(echo \"$date\" | cut -d'-' -f3)\"\n  local is_valid=false\n\
    \n  if [[ -z \"$date\" ]]; then\n    is_valid=false\n  elif [[ \"$month\" -lt\
    \ 1 || \"$month\" -gt 12 ]]; then\n    is_valid=false\n  elif [[ \"$month\" -eq\
    \ 1 || \"$month\" -eq 3 || \"$month\" -eq 5 || \"$month\" -eq 7 || \"$month\"\
    \ -eq 8 || \"$month\" -eq 10 || \"$month\" -eq 12 ]]; then\n    if [[ \"$day\"\
    \ -lt 1 || \"$day\" -gt 31 ]]; then\n      is_valid=false\n    else\n      is_valid=true\n\
    \    fi\n  elif [[ \"$month\" -eq 4 || \"$month\" -eq 6 || \"$month\" -eq 9 ||\
    \ \"$month\" -eq 11 ]]; then\n    if [[ \"$day\" -lt 1 || \"$day\" -gt 30 ]];\
    \ then\n      is_valid=false\n    else\n      is_valid=true\n    fi\n  elif [[\
    \ \"$month\" -eq 2 ]]; then\n    if [[ \"$day\" -lt 1 || \"$day\" -gt 29 ]]; then\n\
    \      is_valid=false\n    else\n      is_valid=true\n    fi\n  fi\n\n  if [[\
    \ \"$is_valid\" = true ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # check if the string is empty\n  if\
    \ [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\n  # check if the\
    \ string is in the format mm-dd-yyyy\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # check if the month is\
    \ valid\n  month=$(echo \"$1\" | cut -d'-' -f1)\n  if [ \"$month\" -lt 1 ] ||\
    \ [ \"$month\" -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n\n  # check\
    \ if the day is valid\n  day=$(echo \"$1\" | cut -d'-' -f2)\n  if [ \"$month\"\
    \ -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\" -eq 5 ] || [ \"$month\" -eq\
    \ 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq 10 ] || [ \"$month\" -eq 12\
    \ ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\"\
    \ -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"\
    $day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [ \"$month\" -eq 2 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"\
    $day\" -gt 29 ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n\n  echo\
    \ \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  local month=$(echo \"$1\" | cut -d- -f1)\n\
    \  local day=$(echo \"$1\" | cut -d- -f2)\n  local year=$(echo \"$1\" | cut -d-\
    \ -f3)\n  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"\
    false\"\n    return\n  fi\n  if [ \"$month\" -eq 2 ]; then\n    if [ \"$((year\
    \ % 4))\" -eq 0 ] && [ \"$((year % 100))\" -ne 0 ] || [ \"$((year % 400))\" -eq\
    \ 0 ]; then\n      if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n      \
    \  echo \"false\"\n        return\n      fi\n    else\n      if [ \"$day\" -lt\
    \ 1 ] || [ \"$day\" -gt 28 ]; then\n        echo \"false\"\n        return\n \
    \     fi\n    fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"\
    $month\" -eq 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1 ] ||\
    \ [ \"$day\" -gt 30 ]; then\n      echo \"false\"\n      return\n    fi\n  else\n\
    \    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=$1\n  local valid_date=false\n\
    \  local month=$(echo $date | cut -d- -f1)\n  local day=$(echo $date | cut -d-\
    \ -f2)\n  local year=$(echo $date | cut -d- -f3)\n  local max_days=31\n  local\
    \ months_with_30_days=\"4 6 9 11\"\n  local february=2\n  local is_leap_year=false\n\
    \n  # Check if the date is empty\n  if [ -z \"$date\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n\n  # Check if the date is in the format mm-dd-yyyy\n  if\
    \ [[ ! $date =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\n  \
    \  return\n  fi\n\n  # Check if the month is valid\n  if [ $month -lt 1 ] || [\
    \ $month -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if\
    \ the day is valid\n  if [ $month -eq $february ]; then\n    if [ $((year % 4))\
    \ -eq 0 ]; then\n      is_leap_year=true\n    fi\n    if [ $is_leap_year = true\
    \ ]; then\n      max_days=29\n    else\n      max_days=28\n    fi\n  elif [[ $months_with_30_days\
    \ =~ $month ]]; then\n    max_days=30\n  fi\n  if [ $day -lt 1 ] || [ $day -gt\
    \ $max_days ]; then\n    echo \"false\"\n    return\n  fi\n\n  # If all the checks\
    \ are passed, the date is valid\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Check if the string is empty\n  if\
    \ [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the\
    \ string is in the format mm-dd-yyyy\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the months are\
    \ not less than 1 or higher than 12\n  if [ \"$(echo \"$1\" | cut -d \"-\" -f\
    \ 1)\" -lt 1 ] || [ \"$(echo \"$1\" | cut -d \"-\" -f 1)\" -gt 12 ]; then\n  \
    \  echo \"false\"\n    return\n  fi\n\n  # Check if the number of days is not\
    \ less than 1 or higher than 31 days for months 1,3,5,7,8,10,12\n  if [ \"$(echo\
    \ \"$1\" | cut -d \"-\" -f 1)\" -eq 1 ] || [ \"$(echo \"$1\" | cut -d \"-\" -f\
    \ 1)\" -eq 3 ] || [ \"$(echo \"$1\" | cut -d \"-\" -f 1)\" -eq 5 ] || [ \"$(echo\
    \ \"$1\" | cut -d \"-\" -f 1)\" -eq 7 ] || [ \"$(echo \"$1\" | cut -d \"-\" -f\
    \ 1)\" -eq 8 ] || [ \"$(echo \"$1\" | cut -d \"-\" -f 1)\" -eq 10 ] || [ \"$(echo\
    \ \"$1\" | cut -d \"-\" -f 1)\" -eq 12 ]; then\n    if [ \"$(echo \"$1\" | cut\
    \ -d \"-\" -f 2)\" -lt 1 ] || [ \"$(echo \"$1\" | cut -d \"-\" -f 2)\" -gt 31\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n\n  # Check if the\
    \ number of days is not less than 1 or higher than 30 days for months 4,6,9,11\n\
    \  if [ \"$(echo \"$1\" | cut -d \"-\" -f 1)\" -eq 4 ] || [ \"$(echo \"$1\" |\
    \ cut -d \"-\" -f 1)\" -eq 6 ] || [ \"$(echo \"$1\" | cut\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpxwfcqb3y.sh: line 49: unexpected EOF while looking for matching
    `)''

    /tmp/tmpxwfcqb3y.sh: line 77: syntax error: unexpected end of file

    '
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # your code here\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    date_arr=(${1//-/ })\n    month=${date_arr[0]}\n    day=${date_arr[1]}\n\
    \    year=${date_arr[2]}\n    if [[ $month -lt 1 || $month -gt 12 ]]; then\n \
    \     echo \"false\"\n    elif [[ $month -eq 2 ]]; then\n      if [[ $((year %\
    \ 4)) -eq 0 && $((year % 100)) -ne 0 || $((year % 400)) -eq 0 ]]; then\n     \
    \   if [[ $day -lt 1 || $day -gt 29 ]]; then\n          echo \"false\"\n     \
    \   else\n          echo \"true\"\n        fi\n      else\n        if [[ $day\
    \ -lt 1 || $day -gt 28 ]]; then\n          echo \"false\"\n        else\n    \
    \      echo \"true\"\n        fi\n      fi\n    elif [[ $month -eq 1 || $month\
    \ -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n      if [[ $day -lt 1 || $day -gt 31 ]]; then\n        echo\
    \ \"false\"\n      else\n        echo \"true\"\n      fi\n    else\n      if [[\
    \ $day -lt 1 || $day -gt 30 ]]; then\n        echo \"false\"\n      else\n   \
    \     echo \"true\"\n      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1\
    \ | cut -d- -f2)\n    local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -ge\
    \ 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local date=$1\n  local month=$(echo $date | cut -d- -f1)\n\
    \  local day=$(echo $date | cut -d- -f2)\n  local year=$(echo $date | cut -d-\
    \ -f3)\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n \
    \   return\n  fi\n  if [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1 || $day\
    \ -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif [[ $month\
    \ -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    if [[ $day\
    \ -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \  else\n    if [[ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\n\
    \      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  # $1 is a string\n\
    \  # return true or false\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    local month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1 | cut -d'-'\
    \ -f2)\n    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month -lt 1 || $month\
    \ -gt 12 ]]; then\n      echo \"false\"\n    elif [[ $month -eq 1 || $month -eq\
    \ 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n      if [[ $day -lt 1 || $day -gt 31 ]]; then\n        echo\
    \ \"false\"\n      else\n        echo \"true\"\n      fi\n    elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day\
    \ -lt 1 || $day -gt 30 ]]; then\n        echo \"false\"\n      else\n        echo\
    \ \"true\"\n      fi\n    elif [[ $month -eq 2 ]]; then\n      if [[ $day -lt\
    \ 1 || $day -gt 29 ]]; then\n        echo \"false\"\n      else\n        echo\
    \ \"true\"\n      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # Write your code here\n    #\n   \
    \ #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n  \
    \  #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n \
    \   #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n    #\n\
    \    #\n    #\n\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp3wa6jcq6.sh: line 192: syntax error near unexpected token `}''

    /tmp/tmp3wa6jcq6.sh: line 192: `}''

    '
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=$1\n  local regex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $regex ]]; then\n    local month=${BASH_REMATCH[1]}\n    local\
    \ day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -ge 1 && $month -le 12 ]]; then\n      if [[ $month == 2 ]]; then\n        if\
    \ [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      else\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n \
    \         echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpli49a_uh.sh: line 192: syntax error near unexpected token `}''

    /tmp/tmpli49a_uh.sh: line 192: `}''

    '
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d- -f1)\n\
    \  local day=$(echo $1 | cut -d- -f2)\n  local year=$(echo $1 | cut -d- -f3)\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month == 2 ]]; then\n    if [[ $((year % 4)) -eq 0 && $((year\
    \ % 100)) -ne 0 || $((year % 400)) -eq 0 ]]; then\n      if [[ $day -lt 1 || $day\
    \ -gt 29 ]]; then\n        echo \"false\"\n        return\n      fi\n    else\n\
    \      if [[ $day -lt 1 || $day -gt 28 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    fi\n  elif [[ $month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12 ]]; then\n\
    \    if [[ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  else\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1\
    \ | cut -d'-' -f2)\n    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month\
    \ -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      elif [[\
    \ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n   \
    \     if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n    \
    \    else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      fi\n    else\n   \
    \   echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1\
    \ | cut -d'-' -f2)\n    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month\
    \ -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      elif [[\
    \ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n   \
    \     if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n    \
    \    else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      fi\n    else\n   \
    \   echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpli49a_uh.sh: line 192: syntax error near unexpected token `}''

    /tmp/tmpli49a_uh.sh: line 192: `}''

    '
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local date_regex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\n\
    \  if [[ $1 =~ $date_regex ]]; then\n    local month=${BASH_REMATCH[1]}\n    local\
    \ day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -gt 12 || $month -lt 1 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \    if [[ $month -eq 2 ]]; then\n      if [[ $day -gt 29 || $day -lt 1 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -gt\
    \ 30 || $day -lt 1 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    else\n      if [[ $day -gt 31 || $day -lt 1 ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n\
    \    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\
    \ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  if [[ $1 =~\
    \ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    month=$(echo $1 | cut -d '-' -f 1)\n\
    \    day=$(echo $1 | cut -d '-' -f 2)\n    year=$(echo $1 | cut -d '-' -f 3)\n\
    \    if [ $month -gt 0 ] && [ $month -lt 13 ]; then\n      if [ $month -eq 1 ]\
    \ || [ $month -eq 3 ] || [ $month -eq 5 ] || [ $month -eq 7 ] || [ $month -eq\
    \ 8 ] || [ $month -eq 10 ] || [ $month -eq 12 ]; then\n        if [ $day -gt 0\
    \ ] && [ $day -lt 32 ]; then\n          echo \"true\"\n        else\n        \
    \  echo \"false\"\n        fi\n      elif [ $month -eq 4 ] || [ $month -eq 6 ]\
    \ || [ $month -eq 9 ] || [ $month -eq 11 ]; then\n        if [ $day -gt 0 ] &&\
    \ [ $day -lt 31 ]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      elif [ $month -eq 2 ]; then\n        if [ $day\
    \ -gt 0 ] && [ $day -lt 30 ]; then\n          echo \"true\"\n        else\n  \
    \        echo \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n\
    \    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Check if the string is empty\n  if\
    \ [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the\
    \ string is in the format mm-dd-yyyy\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the months are\
    \ not less than 1 or higher than 12\n  month=$(echo \"$1\" | cut -d'-' -f1)\n\
    \  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"false\"\n\
    \    return\n  fi\n\n  # Check if the number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less\
    \ than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is\
    \ not less than 1 or higher than 29 for the month 2.\n  day=$(echo \"$1\" | cut\
    \ -d'-' -f2)\n  if [ \"$month\" -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\"\
    \ -eq 5 ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq\
    \ 10 ] || [ \"$month\" -eq 12 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 31 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ \"$month\"\
    \ -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq\
    \ 11 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  elif [ \"$month\" -eq 2 ]; then\n    if [\
    \ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1\
    \ | cut -d- -f2)\n    local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -gt\
    \ 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 1 || $month -eq\
    \ 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      fi\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d- -f1)\n\
    \  local day=$(echo $1 | cut -d- -f2)\n  local year=$(echo $1 | cut -d- -f3)\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month -eq 2 ]]; then\n    if [[ $((year % 4)) -eq 0 && $((year\
    \ % 100)) -ne 0 || $((year % 400)) -eq 0 ]]; then\n      if [[ $day -lt 1 || $day\
    \ -gt 29 ]]; then\n        echo \"false\"\n        return\n      fi\n    else\n\
    \      if [[ $day -lt 1 || $day -gt 28 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  else\n    if [[ $day -lt 1 || $day\
    \ -gt 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"\
    true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  if [ -z \"\
    $1\" ]; then\n    echo \"false\"\n    return\n  fi\n  IFS='-' read -ra ARR <<<\
    \ \"$1\"\n  if [ ${#ARR[@]} -ne 3 ]; then\n    echo \"false\"\n    return\n  fi\n\
    \  if [[ ${ARR[0]} =~ ^[0-9]+$ ]] && [[ ${ARR[1]} =~ ^[0-9]+$ ]] && [[ ${ARR[2]}\
    \ =~ ^[0-9]+$ ]]; then\n    if [ ${ARR[0]} -gt 0 ] && [ ${ARR[0]} -lt 13 ]; then\n\
    \      if [ ${ARR[0]} -eq 1 ] || [ ${ARR[0]} -eq 3 ] || [ ${ARR[0]} -eq 5 ] ||\
    \ [ ${ARR[0]} -eq 7 ] || [ ${ARR[0]} -eq 8 ] || [ ${ARR[0]} -eq 10 ] || [ ${ARR[0]}\
    \ -eq 12 ]; then\n        if [ ${ARR[1]} -gt 0 ] && [ ${ARR[1]} -lt 32 ]; then\n\
    \          echo \"true\"\n          return\n        fi\n      elif [ ${ARR[0]}\
    \ -eq 4 ] || [ ${ARR[0]} -eq 6 ] || [ ${ARR[0]} -eq 9 ] || [ ${ARR[0]} -eq 11\
    \ ]; then\n        if [ ${ARR[1]} -gt 0 ] && [ ${ARR[1]} -lt 31 ]; then\n    \
    \      echo \"true\"\n          return\n        fi\n      elif [ ${ARR[0]} -eq\
    \ 2 ]; then\n        if [ ${ARR[1]} -gt 0 ] && [ ${ARR[1]} -lt 30 ]; then\n  \
    \        echo \"true\"\n          return\n        fi\n      fi\n    fi\n  fi\n\
    \  echo \"false\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=$1\n  local month=$(echo $date\
    \ | cut -d- -f1)\n  local day=$(echo $date | cut -d- -f2)\n  local year=$(echo\
    \ $date | cut -d- -f3)\n  local month_days=31\n  local is_leap_year=0\n  local\
    \ is_valid=1\n\n  if [[ -z $date ]]; then\n    is_valid=0\n  elif [[ $month -lt\
    \ 1 || $month -gt 12 ]]; then\n    is_valid=0\n  elif [[ $month -eq 2 ]]; then\n\
    \    if [[ $((year % 4)) -eq 0 ]]; then\n      is_leap_year=1\n    fi\n    if\
    \ [[ $is_leap_year -eq 1 ]]; then\n      month_days=29\n    else\n      month_days=28\n\
    \    fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq\
    \ 11 ]]; then\n    month_days=30\n  fi\n\n  if [[ $day -lt 1 || $day -gt $month_days\
    \ ]]; then\n    is_valid=0\n  fi\n\n  if [[ $is_valid -eq 1 ]]; then\n    echo\
    \ \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=$1\n  local month=$(echo $date\
    \ | cut -d- -f1)\n  local day=$(echo $date | cut -d- -f2)\n  local year=$(echo\
    \ $date | cut -d- -f3)\n  local month_days=0\n  local valid_date=false\n\n  if\
    \ [[ -z $date ]]; then\n    echo \"false\"\n    return\n  fi\n\n  if [[ $month\
    \ -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n  fi\n\n  if\
    \ [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq\
    \ 8 || $month -eq 10 || $month -eq 12 ]]; then\n    month_days=31\n  elif [[ $month\
    \ -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    month_days=30\n\
    \  elif [[ $month -eq 2 ]]; then\n    month_days=29\n  fi\n\n  if [[ $day -lt\
    \ 1 || $day -gt $month_days ]]; then\n    echo \"false\"\n    return\n  fi\n\n\
    \  if [[ $year -lt 1 ]]; then\n    echo \"false\"\n    return\n  fi\n\n  echo\
    \ \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 2 ]]; then\n        if [[ $((year % 4)) -eq 0 &&\
    \ $((year % 100)) -ne 0 || $((year % 400)) -eq 0 ]]; then\n          if [[ $day\
    \ -ge 1 && $day -le 29 ]]; then\n            echo \"true\"\n          else\n \
    \           echo \"false\"\n          fi\n        else\n          if [[ $day -ge\
    \ 1 && $day -le 28 ]]; then\n            echo \"true\"\n          else\n     \
    \       echo \"false\"\n          fi\n        fi\n      elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge\
    \ 1 && $day -le 30 ]]; then\n          echo \"true\"\n        else\n         \
    \ echo \"false\"\n        fi\n      else\n        if [[ $day -ge 1 && $day -le\
    \ 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d'-' -f1)\n\
    \  local day=$(echo $1 | cut -d'-' -f2)\n  local year=$(echo $1 | cut -d'-' -f3)\n\
    \  if [[ $month -gt 12 || $month -lt 1 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month == 2 ]]; then\n    if [[ $day -gt 29 || $day -lt 1 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  elif [[ $month == 4 || $month ==\
    \ 6 || $month == 9 || $month == 11 ]]; then\n    if [[ $day -gt 30 || $day -lt\
    \ 1 ]]; then\n      echo \"false\"\n      return\n    fi\n  else\n    if [[ $day\
    \ -gt 31 || $day -lt 1 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d- -f1)\n\
    \  local day=$(echo $1 | cut -d- -f2)\n  local year=$(echo $1 | cut -d- -f3)\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month == 2 ]]; then\n    if [[ $((year % 4)) -eq 0 && $((year\
    \ % 100)) -ne 0 || $((year % 400)) -eq 0 ]]; then\n      if [[ $day -lt 1 || $day\
    \ -gt 29 ]]; then\n        echo \"false\"\n        return\n      fi\n    else\n\
    \      if [[ $day -lt 1 || $day -gt 28 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    fi\n  elif [[ $month == 1 || $month == 3 || $month\
    \ == 5 || $month == 7 || $month == 8 || $month == 10 || $month == 12 ]]; then\n\
    \    if [[ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  else\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if (( year % 4 == 0 && year % 100 != 0\
    \ || year % 400 == 0 )); then\n      if (( month == 2 && day >= 1 && day <= 29\
    \ )); then\n        echo \"true\"\n      elif (( month == 2 && day < 1 || month\
    \ == 2 && day > 29 )); then\n        echo \"false\"\n      elif (( month == 1\
    \ || month == 3 || month == 5 || month == 7 || month == 8 || month == 10 || month\
    \ == 12 )); then\n        if (( day >= 1 && day <= 31 )); then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      elif ((\
    \ month == 4 || month == 6 || month == 9 || month == 11 )); then\n        if ((\
    \ day >= 1 && day <= 30 )); then\n          echo \"true\"\n        else\n    \
    \      echo \"false\"\n        fi\n      else\n        echo \"false\"\n      fi\n\
    \    else\n      if (( month == 2 && day >= 1 && day <= 28 )); then\n        echo\
    \ \"true\"\n      elif (( month == 2 && day < 1 || month == 2 && day > 28 ));\
    \ then\n        echo \"false\"\n      elif (( month == 1 || month == 3 || month\
    \ == 5 || month == 7 || month == 8 || month == 10 || month == 12 )); then\n  \
    \      if (( day >= 1 && day <= 31 )); then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      elif (( month == 4 || month\
    \ == 6 || month == 9 || month == 11 )); then\n        if (( day >= 1 && day <=\
    \ 30 )); then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      else\n        echo \"false\"\n      fi\n    fi\n  else\n \
    \   echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d- -f1)\n\
    \  local day=$(echo $1 | cut -d- -f2)\n  local year=$(echo $1 | cut -d- -f3)\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month -eq 2 ]]; then\n    if [[ $((year % 4)) -eq 0 && $((year\
    \ % 100)) -ne 0 || $((year % 400)) -eq 0 ]]; then\n      if [[ $day -lt 1 || $day\
    \ -gt 29 ]]; then\n        echo \"false\"\n        return\n      fi\n    else\n\
    \      if [[ $day -lt 1 || $day -gt 28 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  else\n    if [[ $day -lt 1 || $day\
    \ -gt 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"\
    true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month == 1 || $month == 3 || $month == 5 || $month == 7 ||\
    \ $month == 8 || $month == 10 || $month == 12 ]]; then\n        if [[ $day -gt\
    \ 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n         \
    \ echo \"false\"\n        fi\n      elif [[ $month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month == 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ -z $1 ]]; then\n        echo\
    \ \"false\"\n        return\n    fi\n    if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n        echo \"false\"\n        return\n    fi\n    local month=$(echo\
    \ $1 | cut -d'-' -f1)\n    local day=$(echo $1 | cut -d'-' -f2)\n    local year=$(echo\
    \ $1 | cut -d'-' -f3)\n    if [[ $month -lt 1 || $month -gt 12 ]]; then\n    \
    \    echo \"false\"\n        return\n    fi\n    if [[ $month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12 ]]; then\n        if [[ $day -lt 1 || $day -gt 31 ]]; then\n            echo\
    \ \"false\"\n            return\n        fi\n    elif [[ $month == 4 || $month\
    \ == 6 || $month == 9 || $month == 11 ]]; then\n        if [[ $day -lt 1 || $day\
    \ -gt 30 ]]; then\n            echo \"false\"\n            return\n        fi\n\
    \    elif [[ $month == 2 ]]; then\n        if [[ $day -lt 1 || $day -gt 29 ]];\
    \ then\n            echo \"false\"\n            return\n        fi\n    fi\n \
    \   echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d- -f1)\n\
    \  local day=$(echo $1 | cut -d- -f2)\n  local year=$(echo $1 | cut -d- -f3)\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n  fi\n  if [[ $month -eq 4\
    \ || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    if [[ $day -lt\
    \ 1 || $day -gt 30 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n\
    \  if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[ $day -lt 1 || $day\
    \ -gt 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"\
    true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 12 || $month -lt 1 ]]; then\n      echo \"false\"\n    \
    \  return\n    fi\n    if [[ $month == 2 ]]; then\n      if [[ $day -gt 29 ||\
    \ $day -lt 1 ]]; then\n        echo \"false\"\n        return\n      fi\n    elif\
    \ [[ $month == 4 || $month == 6 || $month == 9 || $month == 11 ]]; then\n    \
    \  if [[ $day -gt 30 || $day -lt 1 ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    else\n      if [[ $day -gt 31 || $day -lt 1 ]]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    fi\n    echo \"true\"\n  else\n   \
    \ echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  local date=$1\n  local month=$(echo $date\
    \ | cut -d'-' -f1)\n  local day=$(echo $date | cut -d'-' -f2)\n  local year=$(echo\
    \ $date | cut -d'-' -f3)\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n   \
    \ echo \"false\"\n    return\n  fi\n  if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n    if [[ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\n \
    \     return\n    fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 ||\
    \ $month -eq 11 ]]; then\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n     \
    \ echo \"false\"\n      return\n    fi\n  elif [[ $month -eq 2 ]]; then\n    if\
    \ [[ $day -lt 1 || $day -gt 29 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n        local month=${BASH_REMATCH[1]}\n        local day=${BASH_REMATCH[2]}\n\
    \        local year=${BASH_REMATCH[3]}\n        if [[ $month -gt 0 && $month -lt\
    \ 13 ]]; then\n            if [[ $month -eq 2 ]]; then\n                if [[\
    \ $((year % 4)) -eq 0 ]]; then\n                    if [[ $day -gt 0 && $day -lt\
    \ 30 ]]; then\n                        echo \"true\"\n                    else\n\
    \                        echo \"false\"\n                    fi\n            \
    \    else\n                    if [[ $day -gt 0 && $day -lt 29 ]]; then\n    \
    \                    echo \"true\"\n                    else\n               \
    \         echo \"false\"\n                    fi\n                fi\n       \
    \     elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n                if [[ $day -gt 0 && $day -lt 31 ]]; then\n           \
    \         echo \"true\"\n                else\n                    echo \"false\"\
    \n                fi\n            else\n                if [[ $day -gt 0 && $day\
    \ -lt 32 ]]; then\n                    echo \"true\"\n                else\n \
    \                   echo \"false\"\n                fi\n            fi\n     \
    \   else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Check if the date is empty\n  if [\
    \ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the\
    \ date is in the format mm-dd-yyyy\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the month is\
    \ less than 1 or higher than 12\n  month=$(echo \"$1\" | cut -d'-' -f1)\n  if\
    \ [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"false\"\n  \
    \  return\n  fi\n\n  # Check if the day is less than 1 or higher than 31 days\
    \ for months 1,3,5,7,8,10,12\n  day=$(echo \"$1\" | cut -d'-' -f2)\n  if [ \"\
    $month\" -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\" -eq 5 ] || [ \"$month\"\
    \ -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq 10 ] || [ \"$month\" -eq\
    \ 12 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  fi\n\n  # Check if the day is less than 1\
    \ or higher than 30 days for months 4,6,9,11\n  if [ \"$month\" -eq 4 ] || [ \"\
    $month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq 11 ]; then\n    if\
    \ [ \"$day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n      echo \"false\"\n    \
    \  return\n    fi\n  fi\n\n  # Check if the day is less than 1 or higher than\
    \ 29 days for the month 2\n  if [ \"$month\" -eq 2 ]; then\n    if [ \"$day\"\
    \ -lt 1 ] || [ \"$day\" -gt 29 ]; then\n      echo \"false\"\n      return\n \
    \   fi\n  fi\n\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  date=$1\n  IFS='-' read -ra date_array <<< \"$date\"\n \
    \ if [ ${#date_array[@]} -ne 3 ]; then\n    echo \"false\"\n    return\n  fi\n\
    \  month=${date_array[0]}\n  day=${date_array[1]}\n  year=${date_array[2]}\n \
    \ if [ $month -lt 1 ] || [ $month -gt 12 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [ $month -eq 1 ] || [ $month -eq 3 ] || [ $month -eq 5 ] || [ $month\
    \ -eq 7 ] || [ $month -eq 8 ] || [ $month -eq 10 ] || [ $month -eq 12 ]; then\n\
    \    if [ $day -lt 1 ] || [ $day -gt 31 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [ $month -eq 4 ] || [ $month -eq 6 ] || [ $month -eq 9 ] || [\
    \ $month -eq 11 ]; then\n    if [ $day -lt 1 ] || [ $day -gt 30 ]; then\n    \
    \  echo \"false\"\n      return\n    fi\n  elif [ $month -eq 2 ]; then\n    if\
    \ [ $day -lt 1 ] || [ $day -gt 29 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    if [[ ${BASH_REMATCH[1]} -eq 2 ]]; then\n      if [[ ${BASH_REMATCH[2]}\
    \ -gt 29 ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\n\
    \      fi\n    elif [[ ${BASH_REMATCH[1]} -eq 4 || ${BASH_REMATCH[1]} -eq 6 ||\
    \ ${BASH_REMATCH[1]} -eq 9 || ${BASH_REMATCH[1]} -eq 11 ]]; then\n      if [[\
    \ ${BASH_REMATCH[2]} -gt 30 ]]; then\n        echo \"false\"\n      else\n   \
    \     echo \"true\"\n      fi\n    else\n      echo \"true\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month == 1 || $month == 3 || $month == 5 || $month == 7 ||\
    \ $month == 8 || $month == 10 || $month == 12 ]]; then\n        if [[ $day -ge\
    \ 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n         \
    \ echo \"false\"\n        fi\n      elif [[ $month == 4 || $month == 6 || $month\
    \ == 9 || $month == 11 ]]; then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month == 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  if [[ $1 =~\
    \ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -ge\
    \ 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 12 || $month -lt 1 ]]; then\n      echo \"false\"\n    \
    \  return\n    fi\n    if [[ $month -eq 2 ]]; then\n      if [[ $((year % 4))\
    \ -eq 0 ]]; then\n        if [[ $day -gt 29 || $day -lt 1 ]]; then\n         \
    \ echo \"false\"\n          return\n        fi\n      else\n        if [[ $day\
    \ -gt 28 || $day -lt 1 ]]; then\n          echo \"false\"\n          return\n\
    \        fi\n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq\
    \ 9 || $month -eq 11 ]]; then\n      if [[ $day -gt 30 || $day -lt 1 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    else\n      if [[ $day\
    \ -gt 31 || $day -lt 1 ]]; then\n        echo \"false\"\n        return\n    \
    \  fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local date_regex=\"^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-([0-9]{4})$\"\
    \n  if [[ $1 =~ $date_regex ]]; then\n    local month=${BASH_REMATCH[1]}\n   \
    \ local day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -eq 2 ]]; then\n      if [[ $((year % 4)) -eq 0 ]]; then\n        if [[ $day\
    \ -gt 29 ]]; then\n          echo \"false\"\n          return\n        fi\n  \
    \    else\n        if [[ $day -gt 28 ]]; then\n          echo \"false\"\n    \
    \      return\n        fi\n      fi\n    elif [[ $month -eq 4 || $month -eq 6\
    \ || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -gt 30 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $day -gt 31 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -lt 1 ||\
    \ $day -gt 31 ]]; then\n        echo \"false\"\n        return\n      fi\n   \
    \ elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \      if [[ $day -lt 1 || $day -gt 30 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    elif [[ $month -eq 2 ]]; then\n      if [[ $day -lt\
    \ 1 || $day -gt 29 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -gt 0 &&\
    \ $day -lt 32 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -gt 0 && $day -lt 31 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -gt 0 && $day -lt 30 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -lt 1 || $month -gt 12 ]]; then\n      echo \"false\"\n    \
    \  return\n    fi\n    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[\
    \ $day -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -lt 1 || $day -gt 30 ]]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    elif [[ $month -eq 2 ]]; then\n   \
    \   if [[ $day -lt 1 || $day -gt 29 ]]; then\n        echo \"false\"\n       \
    \ return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d'-' -f1)\n\
    \  local day=$(echo $1 | cut -d'-' -f2)\n  local year=$(echo $1 | cut -d'-' -f3)\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 ||\
    \ $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[ $day -lt\
    \ 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    # check if the string is empty\n  \
    \  if [ -z \"$1\" ]; then\n        echo \"false\"\n        return\n    fi\n\n\
    \    # check if the string is in the format mm-dd-yyyy\n    if [[ ! \"$1\" =~\
    \ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n        echo \"false\"\n        return\n\
    \    fi\n\n    # check if the months are not less than 1 or higher than 12\n \
    \   month=$(echo \"$1\" | cut -d \"-\" -f 1)\n    if [ \"$month\" -lt 1 ] || [\
    \ \"$month\" -gt 12 ]; then\n        echo \"false\"\n        return\n    fi\n\n\
    \    # check if the number of days is not less than 1 or higher than 31 days for\
    \ months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n    day=$(echo \"$1\" | cut -d \"-\" -f\
    \ 2)\n    if [ \"$month\" -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\" -eq\
    \ 5 ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq 10 ]\
    \ || [ \"$month\" -eq 12 ]; then\n        if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 31 ]; then\n            echo \"false\"\n            return\n        fi\n\
    \    elif [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ]\
    \ || [ \"$month\" -eq 11 ]; then\n        if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 30 ]; then\n            echo \"false\"\n            return\n        fi\n\
    \    elif [ \"$month\" -eq 2 ]; then\n        if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 29 ]; then\n            echo \"false\"\n            return\n        fi\n\
    \    fi\n\n    echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\n\
    set -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[\
    \ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  local month=$(echo \"$1\" | cut -d- -f1)\n\
    \  local day=$(echo \"$1\" | cut -d- -f2)\n  local year=$(echo \"$1\" | cut -d-\
    \ -f3)\n  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"\
    false\"\n    return\n  fi\n  if [ \"$month\" -eq 2 ]; then\n    if [ \"$day\"\
    \ -lt 1 ] || [ \"$day\" -gt 29 ]; then\n      echo \"false\"\n      return\n \
    \   fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq\
    \ 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 30 ]; then\n      echo \"false\"\n      return\n    fi\n  else\n    if [\
    \ \"$day\" -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=$1\n  local month=$(echo $date\
    \ | cut -d'-' -f1)\n  local day=$(echo $date | cut -d'-' -f2)\n  local year=$(echo\
    \ $date | cut -d'-' -f3)\n  local is_valid=false\n  if [[ $date =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month\
    \ -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month\
    \ -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]];\
    \ then\n          is_valid=true\n        fi\n      elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 30 ]]; then\n          is_valid=true\n        fi\n      elif [[ $month\
    \ -eq 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n         \
    \ is_valid=true\n        fi\n      fi\n    fi\n  fi\n  echo $is_valid\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=$1\n  local date_regex=\"\
    ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\n  if [[ $date =~ $date_regex ]]; then\n\
    \    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n    local\
    \ year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]]; then\n\
    \      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 31 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day -le 30 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 29 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local\
    \ month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1 | cut -d- -f2)\n   \
    \ local year=$(echo $1 | cut -d- -f3)\n    if [ $month -eq 1 ] || [ $month -eq\
    \ 3 ] || [ $month -eq 5 ] || [ $month -eq 7 ] || [ $month -eq 8 ] || [ $month\
    \ -eq 10 ] || [ $month -eq 12 ]; then\n      if [ $day -gt 31 ] || [ $day -lt\
    \ 1 ]; then\n        echo \"false\"\n        return\n      fi\n    elif [ $month\
    \ -eq 4 ] || [ $month -eq 6 ] || [ $month -eq 9 ] || [ $month -eq 11 ]; then\n\
    \      if [ $day -gt 30 ] || [ $day -lt 1 ]; then\n        echo \"false\"\n  \
    \      return\n      fi\n    elif [ $month -eq 2 ]; then\n      if [ $day -gt\
    \ 29 ] || [ $day -lt 1 ]; then\n        echo \"false\"\n        return\n     \
    \ fi\n    else\n      echo \"false\"\n      return\n    fi\n    if [ $month -gt\
    \ 12 ] || [ $month -lt 1 ]; then\n      echo \"false\"\n      return\n    fi\n\
    \    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n   \
    \ valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d- -f1)\n\
    \  local day=$(echo $1 | cut -d- -f2)\n  local year=$(echo $1 | cut -d- -f3)\n\
    \  if [[ $month -gt 12 || $month -lt 1 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month == 2 ]]; then\n    if [[ $((year % 4)) -eq 0 ]]; then\n\
    \      if [[ $day -gt 29 || $day -lt 1 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    else\n      if [[ $day -gt 28 || $day -lt 1 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    fi\n  elif [[ $month ==\
    \ 4 || $month == 6 || $month == 9 || $month == 11 ]]; then\n    if [[ $day -gt\
    \ 30 || $day -lt 1 ]]; then\n      echo \"false\"\n      return\n    fi\n  else\n\
    \    if [[ $day -gt 31 || $day -lt 1 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d '-' -f 1)\n    local day=$(echo\
    \ $1 | cut -d '-' -f 2)\n    local year=$(echo $1 | cut -d '-' -f 3)\n    if [[\
    \ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq\
    \ 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2\
    \ ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"\
    true\"\n        else\n          echo \"false\"\n        fi\n      fi\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -le 12 && $month -ge 1 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -le 31 && $day -ge 1 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -le 30 && $day\
    \ -ge 1 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -le 29 &&\
    \ $day -ge 1 ]]; then\n          echo \"true\"\n        else\n          echo \"\
    false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    month=$(echo\
    \ $1 | cut -d- -f1)\n    day=$(echo $1 | cut -d- -f2)\n    year=$(echo $1 | cut\
    \ -d- -f3)\n    if [[ $month -gt 12 || $month -lt 1 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5\
    \ || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n\
    \      if [[ $day -gt 31 || $day -lt 1 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq\
    \ 9 || $month -eq 11 ]]; then\n      if [[ $day -gt 30 || $day -lt 1 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $month -eq 2 ]];\
    \ then\n      if [[ $day -gt 29 || $day -lt 1 ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ \"$1\" =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=\"${BASH_REMATCH[1]}\"\n    local day=\"${BASH_REMATCH[2]}\"\
    \n    local year=\"${BASH_REMATCH[3]}\"\n    if [[ \"$month\" -gt 0 && \"$month\"\
    \ -lt 13 ]]; then\n      if [[ \"$month\" -eq 1 || \"$month\" -eq 3 || \"$month\"\
    \ -eq 5 || \"$month\" -eq 7 || \"$month\" -eq 8 || \"$month\" -eq 10 || \"$month\"\
    \ -eq 12 ]]; then\n        if [[ \"$day\" -gt 0 && \"$day\" -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ \"$month\" -eq 4 || \"$month\" -eq 6 || \"$month\" -eq 9 || \"\
    $month\" -eq 11 ]]; then\n        if [[ \"$day\" -gt 0 && \"$day\" -lt 31 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      elif [[ \"$month\" -eq 2 ]]; then\n        if [[ \"$day\" -gt 0\
    \ && \"$day\" -lt 30 ]]; then\n          echo \"true\"\n        else\n       \
    \   echo \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n   \
    \ fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1\
    \ | cut -d- -f2)\n    local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -ge\
    \ 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  local month=$(echo \"$1\" | cut -d '-'\
    \ -f 1)\n  local day=$(echo \"$1\" | cut -d '-' -f 2)\n  local year=$(echo \"\
    $1\" | cut -d '-' -f 3)\n  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [ \"$month\" -eq 1 ] || [ \"$month\"\
    \ -eq 3 ] || [ \"$month\" -eq 5 ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq\
    \ 8 ] || [ \"$month\" -eq 10 ] || [ \"$month\" -eq 12 ]; then\n    if [ \"$day\"\
    \ -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo \"false\"\n      return\n \
    \   fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq\
    \ 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 30 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ \"$month\"\
    \ -eq 2 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n    \
    \  echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-[0-9]{4}$\
    \ ]]; then\n    month=$(echo $1 | cut -d'-' -f1)\n    day=$(echo $1 | cut -d'-'\
    \ -f2)\n    year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month -eq 1 || $month\
    \ -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n      if [[ $day -gt 0 && $day -lt 32 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n        echo \"true\"\n      else\n        echo\
    \ \"false\"\n      fi\n    elif [[ $month -eq 2 ]]; then\n      if [[ $day -gt\
    \ 0 && $day -lt 30 ]]; then\n        echo \"true\"\n      else\n        echo \"\
    false\"\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local date_regex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\n\
    \  if [[ $1 =~ $date_regex ]]; then\n    local month=${BASH_REMATCH[1]}\n    local\
    \ day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -lt 1 || $month -gt 12 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \    if [[ $month -eq 2 ]]; then\n      if [[ $day -lt 1 || $day -gt 29 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -lt\
    \ 1 || $day -gt 30 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    else\n      if [[ $day -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local date_regex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\n\
    \  if [[ $1 =~ $date_regex ]]; then\n    local month=${BASH_REMATCH[1]}\n    local\
    \ day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [[ $month\
    \ -le 0 || $month -gt 12 ]]; then\n      echo \"false\"\n      return\n    fi\n\
    \    if [[ $month -eq 2 ]]; then\n      if [[ $day -le 0 || $day -gt 29 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -le\
    \ 0 || $day -gt 30 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    else\n      if [[ $day -le 0 || $day -gt 31 ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\
    \n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    month=$(echo $1 | cut -d'-' -f1)\n    day=$(echo $1 | cut -d'-'\
    \ -f2)\n    year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month -gt 0 && $month\
    \ -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 ||\
    \ $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n  \
    \      if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n   \
    \     else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt\
    \ 0 && $day -lt 31 ]]; then\n          echo \"true\"\n        else\n         \
    \ echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n        if\
    \ [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=$1\n  local -i month=$(echo\
    \ $date | cut -d'-' -f1)\n  local -i day=$(echo $date | cut -d'-' -f2)\n  local\
    \ -i year=$(echo $date | cut -d'-' -f3)\n  local -i max_day=31\n  local -i min_day=1\n\
    \  local -i max_month=12\n  local -i min_month=1\n  local -i max_year=9999\n \
    \ local -i min_year=1000\n  local -i leap_year=0\n  local -i is_leap_year=0\n\
    \  local -i is_valid_date=0\n  local -i is_valid_month=0\n  local -i is_valid_day=0\n\
    \  local -i is_valid_year=0\n  local -i is_valid_format=0\n  local -i is_valid_date=0\n\
    \  local -i is_valid_month=0\n  local -i is_valid_day=0\n  local -i is_valid_year=0\n\
    \  local -i is_valid_format=0\n  local -i is_valid_date=0\n  local -i is_valid_month=0\n\
    \  local -i is_valid_day=0\n  local -i is_valid_year=0\n  local -i is_valid_format=0\n\
    \  local -i is_valid_date=0\n  local -i is_valid_month=0\n  local -i is_valid_day=0\n\
    \  local -i is_valid_year=0\n  local -i is_valid_format=0\n  local -i is_valid_date=0\n\
    \  local -i is_valid_month=0\n  local -i is_valid_day=0\n  local -i is_valid_year=0\n\
    \  local -i is_valid_format=0\n  local -i is_valid_date=0\n  local -i is_valid_month=0\n\
    \  local -i is_valid_day=0\n  local -i is_valid_year=0\n  local -i is_valid_format=0\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=$1\n  local month=$(echo $date\
    \ | cut -d- -f1)\n  local day=$(echo $date | cut -d- -f2)\n  local year=$(echo\
    \ $date | cut -d- -f3)\n  local valid_month=false\n  local valid_day=false\n \
    \ local valid_year=false\n  local valid_format=false\n  local valid_date=false\n\
    \n  if [[ $date =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    valid_format=true\n\
    \  fi\n\n  if [[ $month -ge 1 && $month -le 12 ]]; then\n    valid_month=true\n\
    \  fi\n\n  if [[ $year -ge 1 && $year -le 9999 ]]; then\n    valid_year=true\n\
    \  fi\n\n  if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7\
    \ || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[ $day -ge\
    \ 1 && $day -le 31 ]]; then\n      valid_day=true\n    fi\n  elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    if [[ $day\
    \ -ge 1 && $day -le 30 ]]; then\n      valid_day=true\n    fi\n  elif [[ $month\
    \ -eq 2 ]]; then\n    if [[ $day -ge 1 && $day -le 29 ]]; then\n      valid_day=true\n\
    \    fi\n  fi\n\n  if [[ $valid_format == true && $valid_month == true && $valid_day\
    \ == true && $valid_year == true ]]; then\n    valid_date=true\n  fi\n\n  if [[\
    \ $valid_date == true ]]; then\n    echo \"true\"\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # write your code here\n  if [[ $1 =~\
    \ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -lt\
    \ 1 || $month -gt 12 ]]; then\n      echo \"false\"\n    elif [[ $month -eq 2\
    \ ]]; then\n      if [[ $day -lt 1 || $day -gt 29 ]]; then\n        echo \"false\"\
    \n      else\n        echo \"true\"\n      fi\n    elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -lt 1 || $day\
    \ -gt 30 ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\n\
    \      fi\n    elif [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[\
    \ $day -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\n      else\n   \
    \     echo \"true\"\n      fi\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d '-' -f 1)\n\
    \  local day=$(echo $1 | cut -d '-' -f 2)\n  local year=$(echo $1 | cut -d '-'\
    \ -f 3)\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n\
    \    return\n  fi\n  if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[\
    \ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n   \
    \ fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11\
    \ ]]; then\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  elif [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1\
    \ || $day -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  local date_regex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\n\
    \  if [[ $1 =~ $date_regex ]]; then\n    local month=${BASH_REMATCH[1]}\n    local\
    \ day=${BASH_REMATCH[2]}\n    local year=${BASH_REMATCH[3]}\n    if [ $month -gt\
    \ 12 ] || [ $month -lt 1 ]; then\n      echo \"false\"\n      return\n    fi\n\
    \    if [ $month -eq 2 ]; then\n      if [ $((year % 4)) -eq 0 ] && [ $((year\
    \ % 100)) -ne 0 ] || [ $((year % 400)) -eq 0 ]; then\n        if [ $day -gt 29\
    \ ] || [ $day -lt 1 ]; then\n          echo \"false\"\n          return\n    \
    \    fi\n      else\n        if [ $day -gt 28 ] || [ $day -lt 1 ]; then\n    \
    \      echo \"false\"\n          return\n        fi\n      fi\n    elif [ $month\
    \ -eq 4 ] || [ $month -eq 6 ] || [ $month -eq 9 ] || [ $month -eq 11 ]; then\n\
    \      if [ $day -gt 30 ] || [ $day -lt 1 ]; then\n        echo \"false\"\n  \
    \      return\n      fi\n    else\n      if [ $day -gt 31 ] || [ $day -lt 1 ];\
    \ then\n        echo \"false\"\n        return\n      fi\n    fi\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1\
    \ | cut -d- -f2)\n    local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -le\
    \ 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n        if [[ $day -le 31 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 12 || $month -lt 1 ]]; then\n      echo \"false\"\n    \
    \  return\n    fi\n    if [[ $month == 2 ]]; then\n      if [[ $day -gt 29 ||\
    \ $day -lt 1 ]]; then\n        echo \"false\"\n        return\n      fi\n    elif\
    \ [[ $month == 4 || $month == 6 || $month == 9 || $month == 11 ]]; then\n    \
    \  if [[ $day -gt 30 || $day -lt 1 ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    else\n      if [[ $day -gt 31 || $day -lt 1 ]]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    fi\n    echo \"true\"\n  else\n   \
    \ echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\n\
    run_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1\
    \ | cut -d- -f2)\n    local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -gt\
    \ 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1\
    \ | cut -d'-' -f2)\n    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month\
    \ -eq 2 ]]; then\n      if [[ $((year % 4)) -eq 0 ]]; then\n        if [[ $day\
    \ -gt 29 ]]; then\n          echo \"false\"\n          return\n        fi\n  \
    \    else\n        if [[ $day -gt 28 ]]; then\n          echo \"false\"\n    \
    \      return\n        fi\n      fi\n    elif [[ $month -eq 4 || $month -eq 6\
    \ || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -gt 30 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $day -gt 31 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n    echo \"true\"\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d '-' -f 1)\n    local day=$(echo\
    \ $1 | cut -d '-' -f 2)\n    local year=$(echo $1 | cut -d '-' -f 3)\n    if [[\
    \ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq\
    \ 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n        \
    \  if [[ $year -gt 0 ]]; then\n            echo \"true\"\n          else\n   \
    \         echo \"false\"\n          fi\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  if [[ $year -gt 0 ]]; then\n            echo \"true\"\n          else\n   \
    \         echo \"false\"\n          fi\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          if [[ $year -gt 0 ]]; then\n            echo\
    \ \"true\"\n          else\n            echo \"false\"\n          fi\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # check if the string is empty\n  if\
    \ [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\n  # check if the\
    \ string is in the format mm-dd-yyyy\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # check if the months are\
    \ not less than 1 or higher than 12\n  month=$(echo \"$1\" | cut -d \"-\" -f 1)\n\
    \  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"false\"\n\
    \    return\n  fi\n\n  # check if the days are not less than 1 or higher than\
    \ 31 days for months 1,3,5,7,8,10,12. And the number of days is not less than\
    \ 1 or higher than 30 days for months 4,6,9,11. And, the number of days is not\
    \ less than 1 or higher than 29 for the month 2.\n  day=$(echo \"$1\" | cut -d\
    \ \"-\" -f 2)\n  if [ \"$month\" -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\"\
    \ -eq 5 ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq\
    \ 10 ] || [ \"$month\" -eq 12 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 31 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ \"$month\"\
    \ -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq\
    \ 11 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  elif [ \"$month\" -eq 2 ]; then\n    if [\
    \ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([1][9][0-9][0-9]|[2][0][0-9][0-9])$\
    \ ]]; then\n    if [ ${BASH_REMATCH[1]} -eq 2 ]; then\n      if [ ${BASH_REMATCH[2]}\
    \ -gt 29 ]; then\n        echo \"false\"\n      else\n        echo \"true\"\n\
    \      fi\n    elif [ ${BASH_REMATCH[1]} -eq 4 -o ${BASH_REMATCH[1]} -eq 6 -o\
    \ ${BASH_REMATCH[1]} -eq 9 -o ${BASH_REMATCH[1]} -eq 11 ]; then\n      if [ ${BASH_REMATCH[2]}\
    \ -gt 30 ]; then\n        echo \"false\"\n      else\n        echo \"true\"\n\
    \      fi\n    else\n      echo \"true\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Check if the string is empty\n  if\
    \ [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the\
    \ string is in the format mm-dd-yyyy\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the months are\
    \ not less than 1 or higher than 12\n  month=$(echo \"$1\" | cut -d '-' -f 1)\n\
    \  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"false\"\n\
    \    return\n  fi\n\n  # Check if the number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12. And the number of days is not less\
    \ than 1 or higher than 30 days for months 4,6,9,11. And, the number of days is\
    \ not less than 1 or higher than 29 for the month 2.\n  day=$(echo \"$1\" | cut\
    \ -d '-' -f 2)\n  if [ \"$month\" -eq 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\"\
    \ -eq 5 ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"$month\" -eq\
    \ 10 ] || [ \"$month\" -eq 12 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 31 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ \"$month\"\
    \ -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq\
    \ 11 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  elif [ \"$month\" -eq 2 ]; then\n    if [\
    \ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1\
    \ | cut -d'-' -f2)\n    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month\
    \ -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      elif [[\
    \ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n   \
    \     if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n    \
    \    else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      fi\n    else\n   \
    \   echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 2 ]]; then\n        if [[ $((year % 4)) -eq 0 ]];\
    \ then\n          if [[ $day -gt 0 && $day -lt 30 ]]; then\n            echo \"\
    true\"\n          else\n            echo \"false\"\n          fi\n        else\n\
    \          if [[ $day -gt 0 && $day -lt 29 ]]; then\n            echo \"true\"\
    \n          else\n            echo \"false\"\n          fi\n        fi\n     \
    \ elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      else\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month == 1 ||\
    \ $month == 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 ||\
    \ $month == 12 ]]; then\n        if [[ $day -le 31 && $day -ge 1 ]]; then\n  \
    \        echo \"true\"\n        else\n          echo \"false\"\n        fi\n \
    \     elif [[ $month == 4 || $month == 6 || $month == 9 || $month == 11 ]]; then\n\
    \        if [[ $day -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      elif [[ $month == 2\
    \ ]]; then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo \"\
    true\"\n        else\n          echo \"false\"\n        fi\n      fi\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 1
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # TODO: Write your code here\n  return\
    \ 1\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n  \
    \  [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: Exception
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Check if the date is empty\n  if [\
    \ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the\
    \ date is in the correct format\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the month is\
    \ valid\n  month=$(echo \"$1\" | cut -d- -f1)\n  if [ \"$month\" -lt 1 ] || [\
    \ \"$month\" -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check\
    \ if the day is valid\n  day=$(echo \"$1\" | cut -d- -f2)\n  if [ \"$month\" -eq\
    \ 1 ] || [ \"$month\" -eq 3 ] || [ \"$month\" -eq 5 ] || [ \"$month\" -eq 7 ]\
    \ || [ \"$month\" -eq 8 ] || [ \"$month\" -eq 10 ] || [ \"$month\" -eq 12 ]; then\n\
    \    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] ||\
    \ [ \"$month\" -eq 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1\
    \ ] || [ \"$day\" -gt 30 ]; then\n      echo \"false\"\n      return\n    fi\n\
    \  elif [ \"$month\" -eq 2 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt\
    \ 29 ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n\n  echo \"true\"\
    \n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[\
    \ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1\
    \ | cut -d- -f2)\n    local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -ge\
    \ 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=\"${1:0:2}\"\n    local day=\"${1:3:2}\"\n    local\
    \ year=\"${1:6:4}\"\n    if [[ \"$month\" -gt 0 && \"$month\" -lt 13 ]]; then\n\
    \      if [[ \"$month\" -eq 1 || \"$month\" -eq 3 || \"$month\" -eq 5 || \"$month\"\
    \ -eq 7 || \"$month\" -eq 8 || \"$month\" -eq 10 || \"$month\" -eq 12 ]]; then\n\
    \        if [[ \"$day\" -gt 0 && \"$day\" -lt 32 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ \"$month\"\
    \ -eq 4 || \"$month\" -eq 6 || \"$month\" -eq 9 || \"$month\" -eq 11 ]]; then\n\
    \        if [[ \"$day\" -gt 0 && \"$day\" -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ \"$month\"\
    \ -eq 2 ]]; then\n        if [[ \"$day\" -gt 0 && \"$day\" -lt 30 ]]; then\n \
    \         echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -le 12 && $month -ge 1 ]];\
    \ then\n      if [[ $month -eq 2 ]]; then\n        if [[ $day -le 29 && $day -ge\
    \ 1 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\n\
    \        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -le 30 && $day -ge 1 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      else\n\
    \        if [[ $day -le 31 && $day -ge 1 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      fi\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 && $day -lt\
    \ 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      else\n\
    \        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      fi\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n        local month=${BASH_REMATCH[1]}\n        local day=${BASH_REMATCH[2]}\n\
    \        local year=${BASH_REMATCH[3]}\n        if [ $month -gt 0 ] && [ $month\
    \ -lt 13 ]; then\n            if [ $month -eq 1 ] || [ $month -eq 3 ] || [ $month\
    \ -eq 5 ] || [ $month -eq 7 ] || [ $month -eq 8 ] || [ $month -eq 10 ] || [ $month\
    \ -eq 12 ]; then\n                if [ $day -gt 0 ] && [ $day -lt 32 ]; then\n\
    \                    echo \"true\"\n                else\n                   \
    \ echo \"false\"\n                fi\n            elif [ $month -eq 4 ] || [ $month\
    \ -eq 6 ] || [ $month -eq 9 ] || [ $month -eq 11 ]; then\n                if [\
    \ $day -gt 0 ] && [ $day -lt 31 ]; then\n                    echo \"true\"\n \
    \               else\n                    echo \"false\"\n                fi\n\
    \            elif [ $month -eq 2 ]; then\n                if [ $day -gt 0 ] &&\
    \ [ $day -lt 30 ]; then\n                    echo \"true\"\n                else\n\
    \                    echo \"false\"\n                fi\n            fi\n    \
    \    else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n        local month=${BASH_REMATCH[1]}\n        local day=${BASH_REMATCH[2]}\n\
    \        local year=${BASH_REMATCH[3]}\n        if [[ $month -eq 2 ]]; then\n\
    \            if [[ $((year % 4)) -eq 0 ]]; then\n                if [[ $day -gt\
    \ 29 ]]; then\n                    echo \"false\"\n                    return\n\
    \                fi\n            else\n                if [[ $day -gt 28 ]]; then\n\
    \                    echo \"false\"\n                    return\n            \
    \    fi\n            fi\n        elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n            if [[ $day -gt 30 ]]; then\n  \
    \              echo \"false\"\n                return\n            fi\n      \
    \  elif [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n            if [[ $day -gt\
    \ 31 ]]; then\n                echo \"false\"\n                return\n      \
    \      fi\n        else\n            echo \"false\"\n            return\n    \
    \    fi\n        echo \"true\"\n    else\n        echo \"false\"\n    fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  if [ -z \"\
    $1\" ]; then\n    echo \"false\"\n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut\
    \ -d'-' -f1)\n  local day=$(echo $1 | cut -d'-' -f2)\n  if [ $month -eq 1 ] ||\
    \ [ $month -eq 3 ] || [ $month -eq 5 ] || [ $month -eq 7 ] || [ $month -eq 8 ]\
    \ || [ $month -eq 10 ] || [ $month -eq 12 ]; then\n    if [ $day -lt 1 ] || [\
    \ $day -gt 31 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ $month\
    \ -eq 4 ] || [ $month -eq 6 ] || [ $month -eq 9 ] || [ $month -eq 11 ]; then\n\
    \    if [ $day -lt 1 ] || [ $day -gt 30 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [ $month -eq 2 ]; then\n    if [ $day -lt 1 ] || [ $day -gt 29\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  else\n    echo \"false\"\
    \n    return\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\
    \n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  # check if the date is in the format: mm-dd-yyyy\n  if [[\
    \ ! $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    echo \"false\"\n  \
    \  return\n  fi\n  # check if the month is between 1 and 12\n  if [[ ${BASH_REMATCH[1]}\
    \ -lt 1 || ${BASH_REMATCH[1]} -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  # check if the day is between 1 and 31\n  if [[ ${BASH_REMATCH[2]} -lt\
    \ 1 || ${BASH_REMATCH[2]} -gt 31 ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \  # check if the day is between 1 and 30 for months 4,6,9,11\n  if [[ ${BASH_REMATCH[1]}\
    \ -eq 4 || ${BASH_REMATCH[1]} -eq 6 || ${BASH_REMATCH[1]} -eq 9 || ${BASH_REMATCH[1]}\
    \ -eq 11 ]]; then\n    if [[ ${BASH_REMATCH[2]} -gt 30 ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  fi\n  # check if the day is between 1 and 29\
    \ for month 2\n  if [[ ${BASH_REMATCH[1]} -eq 2 ]]; then\n    if [[ ${BASH_REMATCH[2]}\
    \ -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"\
    true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [ $month -eq 2 ]; then\n      if [ $((year % 4)) -eq 0 ]; then\n     \
    \   if [ $day -gt 29 ]; then\n          echo \"false\"\n          return\n   \
    \     fi\n      else\n        if [ $day -gt 28 ]; then\n          echo \"false\"\
    \n          return\n        fi\n      fi\n    elif [ $month -eq 4 -o $month -eq\
    \ 6 -o $month -eq 9 -o $month -eq 11 ]; then\n      if [ $day -gt 30 ]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [ $month -eq 1 -o\
    \ $month -eq 3 -o $month -eq 5 -o $month -eq 7 -o $month -eq 8 -o $month -eq 10\
    \ -o $month -eq 12 ]; then\n      if [ $day -gt 31 ]; then\n        echo \"false\"\
    \n        return\n      fi\n    else\n      echo \"false\"\n      return\n   \
    \ fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # check if the string is empty\n  if\
    \ [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\n  # check if the\
    \ string is in the format mm-dd-yyyy\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # check if the month is\
    \ valid\n  month=$(echo \"$1\" | cut -d- -f1)\n  if [ \"$month\" -lt 1 ] || [\
    \ \"$month\" -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n\n  # check\
    \ if the day is valid\n  day=$(echo \"$1\" | cut -d- -f2)\n  if [ \"$day\" -lt\
    \ 1 ] || [ \"$day\" -gt 31 ]; then\n    echo \"false\"\n    return\n  fi\n\n \
    \ # check if the year is valid\n  year=$(echo \"$1\" | cut -d- -f3)\n  if [ \"\
    $year\" -lt 1 ]; then\n    echo \"false\"\n    return\n  fi\n\n  # check if the\
    \ day is valid for the month\n  if [ \"$month\" -eq 2 ]; then\n    if [ \"$day\"\
    \ -gt 29 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ \"$month\"\
    \ -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"$month\" -eq\
    \ 11 ]; then\n    if [ \"$day\" -gt 30 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n\
    }\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n\
    \    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  # You can use\
    \ the following command to check if the date is valid\n  # date -d \"$1\" > /dev/null\
    \ 2>&1\n  # The above command returns 0 if the date is valid and 1 if the date\
    \ is invalid\n  # You can use the following command to check if the date is in\
    \ the format mm-dd-yyyy\n  # [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]\n  # The\
    \ above command returns 0 if the date is in the format mm-dd-yyyy and 1 if the\
    \ date is not in the format mm-dd-yyyy\n  # You can use the following command\
    \ to check if the number of days is not less than 1 or higher than 31 days for\
    \ months 1,3,5,7,8,10,12. And the number of days is not less than 1 or higher\
    \ than 30 days for months 4,6,9,11. And, the number of days is not less than 1\
    \ or higher than 29 for the month 2.\n  # [[ $1 =~ ^(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])-[0-9]{4}$\
    \ ]]\n  # The above command returns 0 if the number of days is not less than 1\
    \ or higher than 31 days for months 1,3,5,7,8,10,12. And the number of days is\
    \ not less than 1 or higher than 30 days for months 4,6,9,11. And, the number\
    \ of days is not less than 1 or higher than 29 for the month 2. and 1 if the number\
    \ of days is less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. Or\
    \ the number of days is less than 1 or higher than 30 days for months 4,6,9,11.\
    \ Or, the number of days is less than 1 or higher than 29 for the month 2.\n \
    \ # You can use the following command to check if the months should not be less\
    \ than 1 or higher than 12.\n  # [[ $1 =~ ^(0[1-9]|1[0-2])-(0\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmp2tyj5gr3.sh: line 34: syntax error near unexpected token `}''

    /tmp/tmp2tyj5gr3.sh: line 34: `}''

    '
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n        local month=$(echo $1 | cut -d- -f1)\n        local day=$(echo\
    \ $1 | cut -d- -f2)\n        local year=$(echo $1 | cut -d- -f3)\n        if [[\
    \ $month -ge 1 && $month -le 12 ]]; then\n            if [[ $month -eq 1 || $month\
    \ -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n                if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \                    echo \"true\"\n                else\n                   \
    \ echo \"false\"\n                fi\n            elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n                if [[ $day\
    \ -ge 1 && $day -le 30 ]]; then\n                    echo \"true\"\n         \
    \       else\n                    echo \"false\"\n                fi\n       \
    \     elif [[ $month -eq 2 ]]; then\n                if [[ $day -ge 1 && $day\
    \ -le 29 ]]; then\n                    echo \"true\"\n                else\n \
    \                   echo \"false\"\n                fi\n            fi\n     \
    \   else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -gt 0 &&\
    \ $day -lt 32 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -gt 0 && $day -lt 31 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -gt 0 && $day -lt 30 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -lt 1 || $month -gt 12 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n    if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n      if [[ $day -lt 1 || $day -gt 31 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -lt\
    \ 1 || $day -gt 30 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    elif [[ $month -eq 2 ]]; then\n      if [[ $day -lt 1 || $day -gt 29 ]];\
    \ then\n        echo \"false\"\n        return\n      fi\n    fi\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local IFS=\"-\"\n  read -r month day year\
    \ <<< \"$1\"\n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[\
    \ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n   \
    \ fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11\
    \ ]]; then\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  elif [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1\
    \ || $day -gt 29 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n\
    \  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d- -f1)\n\
    \  local day=$(echo $1 | cut -d- -f2)\n  local year=$(echo $1 | cut -d- -f3)\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n  elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    if [[ $day -lt 1\
    \ || $day -gt 30 ]]; then\n      echo \"false\"\n      return\n    fi\n  else\n\
    \    if [[ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=$1\n  local month=$(echo $date\
    \ | cut -d'-' -f1)\n  local day=$(echo $date | cut -d'-' -f2)\n  local year=$(echo\
    \ $date | cut -d'-' -f3)\n  local date_regex=\"^([0-9]{2})-([0-9]{2})-([0-9]{4})$\"\
    \n  if [[ $date =~ $date_regex ]]; then\n    if [[ $month -gt 0 && $month -lt\
    \ 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d '-' -f 1)\n    local day=$(echo\
    \ $1 | cut -d '-' -f 2)\n    local year=$(echo $1 | cut -d '-' -f 3)\n    if [[\
    \ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq\
    \ 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2\
    \ ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"\
    true\"\n        else\n          echo \"false\"\n        fi\n      fi\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  if [[ $1 =~\
    \ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n    month=${BASH_REMATCH[1]}\n\
    \    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n    if [[ $month -gt\
    \ 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      else\n        if [[ $day -gt 0 && $day\
    \ -lt 32 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -le 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $((year % 4)) -eq 0 ]]; then\n          if [[ $day -le 29\
    \ && $day -ge 1 ]]; then\n            echo \"true\"\n          else\n        \
    \    echo \"false\"\n          fi\n        else\n          if [[ $day -le 28 &&\
    \ $day -ge 1 ]]; then\n            echo \"true\"\n          else\n           \
    \ echo \"false\"\n          fi\n        fi\n      elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -le 30 &&\
    \ $day -ge 1 ]]; then\n          echo \"true\"\n        else\n          echo \"\
    false\"\n        fi\n      else\n        if [[ $day -le 31 && $day -ge 1 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n\
    \  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month\
    \ -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[ $day -ge 1 &&\
    \ $day -le 31 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\
    \n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -ge 1 && $day -le 30 ]]; then\n        echo\
    \ \"true\"\n      else\n        echo \"false\"\n      fi\n    elif [[ $month -eq\
    \ 2 ]]; then\n      if [[ $day -ge 1 && $day -le 29 ]]; then\n        echo \"\
    true\"\n      else\n        echo \"false\"\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 && $day -lt\
    \ 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d- -f1)\n\
    \  local day=$(echo $1 | cut -d- -f2)\n  local year=$(echo $1 | cut -d- -f3)\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 ||\
    \ $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[ $day -lt\
    \ 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  IFS='-' read -r -a date_array <<< \"$1\"\n  if [ ${#date_array[@]}\
    \ -ne 3 ]; then\n    echo \"false\"\n    return\n  fi\n  if [[ ! \"${date_array[0]}\"\
    \ =~ ^[0-9]+$ ]]; then\n    echo \"false\"\n    return\n  fi\n  if [[ ! \"${date_array[1]}\"\
    \ =~ ^[0-9]+$ ]]; then\n    echo \"false\"\n    return\n  fi\n  if [[ ! \"${date_array[2]}\"\
    \ =~ ^[0-9]+$ ]]; then\n    echo \"false\"\n    return\n  fi\n  if [ \"${date_array[0]}\"\
    \ -lt 1 ] || [ \"${date_array[0]}\" -gt 12 ]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [ \"${date_array[0]}\" -eq 1 ] || [ \"${date_array[0]}\" -eq 3 ] ||\
    \ [ \"${date_array[0]}\" -eq 5 ] || [ \"${date_array[0]}\" -eq 7 ] || [ \"${date_array[0]}\"\
    \ -eq 8 ] || [ \"${date_array[0]}\" -eq 10 ] || [ \"${date_array[0]}\" -eq 12\
    \ ]; then\n    if [ \"${date_array[1]}\" -lt 1 ] || [ \"${date_array[1]}\" -gt\
    \ 31 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ \"${date_array[0]}\"\
    \ -eq 4 ] || [ \"${date_array[0]}\" -eq 6 ] || [ \"${date_array[0]}\" -eq 9 ]\
    \ || [ \"${date_array[0]}\" -eq 11 ]; then\n    if [ \"${date_array[1]}\" -lt\
    \ 1 ] || [ \"${date_array[1]}\" -gt 30 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [ \"${date_array[0]}\" -eq 2 ]; then\n\n}\n\ncandidate() {\n \
    \   valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpb5ncph89.sh: line 59: syntax error near unexpected token `}''

    /tmp/tmpb5ncph89.sh: line 59: `}''

    '
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n        local month=$(echo $1 | cut -d- -f1)\n        local day=$(echo\
    \ $1 | cut -d- -f2)\n        local year=$(echo $1 | cut -d- -f3)\n        if [[\
    \ $month -gt 0 && $month -lt 13 ]]; then\n            if [[ $month -eq 1 || $month\
    \ -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n                if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \                    echo \"true\"\n                else\n                   \
    \ echo \"false\"\n                fi\n            elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n                if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n                    echo \"true\"\n         \
    \       else\n                    echo \"false\"\n                fi\n       \
    \     elif [[ $month -eq 2 ]]; then\n                if [[ $day -gt 0 && $day\
    \ -lt 30 ]]; then\n                    echo \"true\"\n                else\n \
    \                   echo \"false\"\n                fi\n            fi\n     \
    \   else\n            echo \"false\"\n        fi\n    else\n        echo \"false\"\
    \n    fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 2 ]]; then\n        if [[ $((year % 4)) -eq 0 &&\
    \ $((year % 100)) -ne 0 || $((year % 400)) -eq 0 ]]; then\n          if [[ $day\
    \ -ge 1 && $day -le 29 ]]; then\n            echo \"true\"\n          else\n \
    \           echo \"false\"\n          fi\n        else\n          if [[ $day -ge\
    \ 1 && $day -le 28 ]]; then\n            echo \"true\"\n          else\n     \
    \       echo \"false\"\n          fi\n        fi\n      elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge\
    \ 1 && $day -le 30 ]]; then\n          echo \"true\"\n        else\n         \
    \ echo \"false\"\n        fi\n      else\n        if [[ $day -ge 1 && $day -le\
    \ 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  local date=\"$1\"\n  local regex=\"^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\"\
    \n  if [[ $date =~ $regex ]]; then\n    local month=\"${BASH_REMATCH[1]}\"\n \
    \   local day=\"${BASH_REMATCH[2]}\"\n    local year=\"${BASH_REMATCH[3]}\"\n\
    \    if [[ $month -eq 2 ]]; then\n      if [[ $((year % 4)) -eq 0 ]] && [[ $((year\
    \ % 100)) -ne 0 ]] || [[ $((year % 400)) -eq 0 ]]; then\n        if [[ $day -le\
    \ 29 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      else\n        if [[ $day -le 28 ]]; then\n          echo \"\
    true\"\n        else\n          echo \"false\"\n        fi\n      fi\n    elif\
    \ [[ $month -eq 1 ]] || [[ $month -eq 3 ]] || [[ $month -eq 5 ]] || [[ $month\
    \ -eq 7 ]] || [[ $month -eq 8 ]] || [[ $month -eq 10 ]] || [[ $month -eq 12 ]];\
    \ then\n      if [[ $day -le 31 ]]; then\n        echo \"true\"\n      else\n\
    \        echo \"false\"\n      fi\n    elif [[ $month -eq 4 ]] || [[ $month -eq\
    \ 6 ]] || [[ $month -eq 9 ]] || [[ $month -eq 11 ]]; then\n      if [[ $day -le\
    \ 30 ]]; then\n        echo \"true\"\n      else\n        echo \"false\"\n   \
    \   fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n \
    \ fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n \
    \   [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=\"${BASH_REMATCH[1]}\"\n    local day=\"${BASH_REMATCH[2]}\"\
    \n    local year=\"${BASH_REMATCH[3]}\"\n    if [[ $month -gt 0 && $month -lt\
    \ 13 ]]; then\n      if [[ $month -eq 2 ]]; then\n        if [[ $((year % 4))\
    \ -eq 0 ]]; then\n          if [[ $day -gt 0 && $day -lt 30 ]]; then\n       \
    \     echo \"true\"\n          else\n            echo \"false\"\n          fi\n\
    \        else\n          if [[ $day -gt 0 && $day -lt 29 ]]; then\n          \
    \  echo \"true\"\n          else\n            echo \"false\"\n          fi\n \
    \       fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      else\n\
    \        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      fi\n    else\n     \
    \ echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n\
    \    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -lt 1 || $month -gt 12 ]]; then\n      echo \"false\"\n    \
    \  return\n    fi\n    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[\
    \ $day -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -lt 1 || $day -gt 30 ]]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    elif [[ $month -eq 2 ]]; then\n   \
    \   if [[ $day -lt 1 || $day -gt 29 ]]; then\n        echo \"false\"\n       \
    \ return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1\
    \ | cut -d'-' -f2)\n    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month\
    \ -le 12 && $month -ge 1 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n        if [[ $day -le 31 && $day -ge 1 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      elif [[\
    \ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n   \
    \     if [[ $day -le 30 && $day -ge 1 ]]; then\n          echo \"true\"\n    \
    \    else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -le 29 && $day -ge 1 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      fi\n    else\n   \
    \   echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$ ]]; then\n\
    \    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -lt 1 || $month -gt 12 ]]; then\n      echo \"false\"\n    \
    \  return\n    fi\n    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[\
    \ $day -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -lt 1 || $day -gt 30 ]]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    elif [[ $month -eq 2 ]]; then\n   \
    \   if [[ $day -lt 1 || $day -gt 29 ]]; then\n        echo \"false\"\n       \
    \ return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 2 ]]; then\n        if [[ $((year % 4)) -eq 0 ]];\
    \ then\n          if [[ $day -gt 0 && $day -lt 30 ]]; then\n            echo \"\
    true\"\n          else\n            echo \"false\"\n          fi\n        else\n\
    \          if [[ $day -gt 0 && $day -lt 29 ]]; then\n            echo \"true\"\
    \n          else\n            echo \"false\"\n          fi\n        fi\n     \
    \ elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      else\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\
    \n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0][1-9]|[1][0-2])-([0][1-9]|[1-2][0-9]|[3][0-1])-([0-9]{4})$\
    \ ]]; then\n    if [[ ${BASH_REMATCH[1]} -eq 2 ]]; then\n      if [[ ${BASH_REMATCH[2]}\
    \ -gt 29 ]]; then\n        echo \"false\"\n      else\n        echo \"true\"\n\
    \      fi\n    elif [[ ${BASH_REMATCH[1]} -eq 4 || ${BASH_REMATCH[1]} -eq 6 ||\
    \ ${BASH_REMATCH[1]} -eq 9 || ${BASH_REMATCH[1]} -eq 11 ]]; then\n      if [[\
    \ ${BASH_REMATCH[2]} -gt 30 ]]; then\n        echo \"false\"\n      else\n   \
    \     echo \"true\"\n      fi\n    else\n      echo \"true\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  local month=$(echo $1 | cut -d- -f1)\n  local day=$(echo\
    \ $1 | cut -d- -f2)\n  local year=$(echo $1 | cut -d- -f3)\n  if [[ $month -lt\
    \ 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n  fi\n  if [[ $month\
    \ -eq 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29 ]]; then\n      echo \"\
    false\"\n      return\n    fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  else\n    if [[ $day -lt 1 || $day\
    \ -gt 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"\
    true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 && $day -lt\
    \ 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if\
    \ [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo\
    \ \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n \
    \ #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\
    \  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n  #\n\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpli49a_uh.sh: line 192: syntax error near unexpected token `}''

    /tmp/tmpli49a_uh.sh: line 192: `}''

    '
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1\
    \ | cut -d'-' -f2)\n    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month\
    \ -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          if\
    \ [[ $year -ge 1 ]]; then\n            echo \"true\"\n          else\n       \
    \     echo \"false\"\n          fi\n        else\n          echo \"false\"\n \
    \       fi\n      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n        if [[ $day -ge 1 && $day -le 30 ]]; then\n        \
    \  if [[ $year -ge 1 ]]; then\n            echo \"true\"\n          else\n   \
    \         echo \"false\"\n          fi\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          if [[ $year -ge 1 ]]; then\n            echo\
    \ \"true\"\n          else\n            echo \"false\"\n          fi\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # write your code here\n  if [[ $1 =~\
    \ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    month=$(echo $1 | cut -d- -f1)\n\
    \    day=$(echo $1 | cut -d- -f2)\n    year=$(echo $1 | cut -d- -f3)\n    if [[\
    \ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq\
    \ 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2\
    \ ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"\
    true\"\n        else\n          echo \"false\"\n        fi\n      fi\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d'-' -f1)\n\
    \  local day=$(echo $1 | cut -d'-' -f2)\n  local year=$(echo $1 | cut -d'-' -f3)\n\
    \  if [[ $month -gt 12 || $month -lt 1 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month -eq 2 ]]; then\n    if [[ $day -gt 29 || $day -lt 1 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n  elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n    if [[ $day -gt 30\
    \ || $day -lt 1 ]]; then\n      echo \"false\"\n      return\n    fi\n  else\n\
    \    if [[ $day -gt 31 || $day -lt 1 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Check if the date is empty\n  if [\
    \ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the\
    \ date is in the format: mm-dd-yyyy\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the months are\
    \ less than 1 or higher than 12\n  month=$(echo \"$1\" | cut -d'-' -f1)\n  if\
    \ [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"false\"\n  \
    \  return\n  fi\n\n  # Check if the number of days is not less than 1 or higher\
    \ than 31 days for months 1,3,5,7,8,10,12\n  # Check if the number of days is\
    \ not less than 1 or higher than 30 days for months 4,6,9,11\n  # Check if the\
    \ number of days is not less than 1 or higher than 29 for the month 2\n  day=$(echo\
    \ \"$1\" | cut -d'-' -f2)\n  if [ \"$month\" -eq 1 ] || [ \"$month\" -eq 3 ] ||\
    \ [ \"$month\" -eq 5 ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq 8 ] || [ \"\
    $month\" -eq 10 ] || [ \"$month\" -eq 12 ]; then\n    if [ \"$day\" -lt 1 ] ||\
    \ [ \"$day\" -gt 31 ]; then\n      echo \"false\"\n      return\n    fi\n  elif\
    \ [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9 ] || [ \"\
    $month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 30 ]; then\n\
    \      echo \"false\"\n      return\n    fi\n  elif [ \"$month\" -eq 2 ]; then\n\
    \    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  fi\n\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    month=$(echo $1 | cut -d- -f1)\n    day=$(echo $1 | cut -d- -f2)\n\
    \    year=$(echo $1 | cut -d- -f3)\n    if [[ $month -ge 1 && $month -le 12 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -ge 1 && $day -le 31 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -ge 1 && $day\
    \ -le 30 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -ge 1 &&\
    \ $day -le 29 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    local\
    \ month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1 | cut -d- -f2)\n   \
    \ local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -gt 12 || $month -lt 1\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n    if [[ $month -eq 1\
    \ || $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq\
    \ 10 || $month -eq 12 ]]; then\n      if [[ $day -gt 31 || $day -lt 1 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    elif [[ $month -eq 4 ||\
    \ $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -gt\
    \ 30 || $day -lt 1 ]]; then\n        echo \"false\"\n        return\n      fi\n\
    \    elif [[ $month -eq 2 ]]; then\n      if [[ $day -gt 29 || $day -lt 1 ]];\
    \ then\n        echo \"false\"\n        return\n      fi\n    fi\n    echo \"\
    true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"\
    $@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d- -f1)\n\
    \  local day=$(echo $1 | cut -d- -f2)\n  local year=$(echo $1 | cut -d- -f3)\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month -eq 2 ]]; then\n    if [[ $((year % 4)) -eq 0 && $((year\
    \ % 100)) -ne 0 || $((year % 400)) -eq 0 ]]; then\n      if [[ $day -lt 1 || $day\
    \ -gt 29 ]]; then\n        echo \"false\"\n        return\n      fi\n    else\n\
    \      if [[ $day -lt 1 || $day -gt 28 ]]; then\n        echo \"false\"\n    \
    \    return\n      fi\n    fi\n  elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  else\n    if [[ $day -lt 1 || $day\
    \ -gt 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"\
    true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n\
    \    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -lt 1 || $month -gt 12 ]]; then\n      echo \"false\"\n    \
    \  return\n    fi\n    if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month\
    \ -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n      if [[\
    \ $day -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\n        return\n\
    \      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month\
    \ -eq 11 ]]; then\n      if [[ $day -lt 1 || $day -gt 30 ]]; then\n        echo\
    \ \"false\"\n        return\n      fi\n    elif [[ $month -eq 2 ]]; then\n   \
    \   if [[ $day -lt 1 || $day -gt 29 ]]; then\n        echo \"false\"\n       \
    \ return\n      fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 2
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  # check if the date is in the format: mm-dd-yyyy\n  if [[\
    \ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  # check if the months are not less than 1 or higher than 12\n  if [ \"\
    $(echo \"$1\" | cut -d '-' -f 1)\" -lt 1 ] || [ \"$(echo \"$1\" | cut -d '-' -f\
    \ 1)\" -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n  # check if the\
    \ number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12\n\
    \  if [ \"$(echo \"$1\" | cut -d '-' -f 1)\" -eq 1 ] || [ \"$(echo \"$1\" | cut\
    \ -d '-' -f 1)\" -eq 3 ] || [ \"$(echo \"$1\" | cut -d '-' -f 1)\" -eq 5 ] ||\
    \ [ \"$(echo \"$1\" | cut -d '-' -f 1)\" -eq 7 ] || [ \"$(echo \"$1\" | cut -d\
    \ '-' -f 1)\" -eq 8 ] || [ \"$(echo \"$1\" | cut -d '-' -f 1)\" -eq 10 ] || [\
    \ \"$(echo \"$1\" | cut -d '-' -f 1)\" -eq 12 ]; then\n    if [ \"$(echo \"$1\"\
    \ | cut -d '-' -f 2)\" -lt 1 ] || [ \"$(echo \"$1\" | cut -d '-' -f 2)\" -gt 31\
    \ ]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  # check if the\
    \ number of days is not less than 1 or higher than 30 days for months 4,6,9,11\n\
    \  if [ \"$(echo \"$1\" | cut -d '-' -f 1)\" -eq 4 ] || [ \"$(echo \"$1\" | cut\
    \ -d '-' -f 1)\" -eq 6 ] || [ \"$(echo \"$1\" | cut -d '-' -f 1)\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: SyntaxError
  stderr: '/tmp/tmpztb209fs.sh: line 45: syntax error near unexpected token `}''

    /tmp/tmpztb209fs.sh: line 45: `}''

    '
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    month=$(echo $1 | cut -d- -f1)\n    day=$(echo $1 | cut -d- -f2)\n\
    \    year=$(echo $1 | cut -d- -f3)\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  IFS='-' read -r month day year <<< \"$1\"\
    \n  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq 7 ||\
    \ $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n    if [[ $day -lt\
    \ 1 || $day -gt 31 ]]; then\n      echo \"false\"\n      return\n    fi\n  elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \    if [[ $day -lt 1 || $day -gt 30 ]]; then\n      echo \"false\"\n      return\n\
    \    fi\n  elif [[ $month -eq 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29\
    \ ]]; then\n      echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n\
    }\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d- -f1)\n    local day=$(echo $1\
    \ | cut -d- -f2)\n    local year=$(echo $1 | cut -d- -f3)\n    if [[ $month -gt\
    \ 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 || $month\
    \ -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day\
    \ -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n        else\n     \
    \     echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]]; then\n      \
    \  if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"true\"\n       \
    \ else\n          echo \"false\"\n        fi\n      fi\n    else\n      echo \"\
    false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n        local month=${1:0:2}\n        local day=${1:3:2}\n       \
    \ local year=${1:6:4}\n        if [[ $month -gt 0 && $month -lt 13 ]]; then\n\
    \            if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n             \
    \   if [[ $day -gt 0 && $day -lt 32 ]]; then\n                    echo \"true\"\
    \n                else\n                    echo \"false\"\n                fi\n\
    \            elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq\
    \ 11 ]]; then\n                if [[ $day -gt 0 && $day -lt 31 ]]; then\n    \
    \                echo \"true\"\n                else\n                    echo\
    \ \"false\"\n                fi\n            elif [[ $month -eq 2 ]]; then\n \
    \               if [[ $day -gt 0 && $day -lt 30 ]]; then\n                   \
    \ echo \"true\"\n                else\n                    echo \"false\"\n  \
    \              fi\n            fi\n        else\n            echo \"false\"\n\
    \        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate() {\n  \
    \  valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  local month=$(echo \"$1\" | cut -d'-'\
    \ -f1)\n  local day=$(echo \"$1\" | cut -d'-' -f2)\n  local year=$(echo \"$1\"\
    \ | cut -d'-' -f3)\n  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [ \"$month\" -eq 1 ] || [ \"$month\"\
    \ -eq 3 ] || [ \"$month\" -eq 5 ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq\
    \ 8 ] || [ \"$month\" -eq 10 ] || [ \"$month\" -eq 12 ]; then\n    if [ \"$day\"\
    \ -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo \"false\"\n      return\n \
    \   fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq\
    \ 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 30 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ \"$month\"\
    \ -eq 2 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n    \
    \  echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -gt 0 && $month -lt 13 ]];\
    \ then\n      if [[ $month -eq 1 || $month -eq 3 || $month -eq 5 || $month -eq\
    \ 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n        if [[\
    \ $day -gt 0 && $day -lt 32 ]]; then\n          echo \"true\"\n        else\n\
    \          echo \"false\"\n        fi\n      elif [[ $month -eq 4 || $month -eq\
    \ 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 && $day\
    \ -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo \"false\"\
    \n        fi\n      elif [[ $month -eq 2 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 30 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n\
    \    echo \"false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset\
    \ -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate\
    \ \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\"\
    \ ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"\
    01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n\
    \    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") =\
    \ \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # check if the string is empty\n  if\
    \ [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n  fi\n\n  # check if the\
    \ string is in the format mm-dd-yyyy\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    echo \"false\"\n    return\n  fi\n\n  # extract the month, day\
    \ and year from the string\n  local month=$(echo \"$1\" | cut -d '-' -f 1)\n \
    \ local day=$(echo \"$1\" | cut -d '-' -f 2)\n  local year=$(echo \"$1\" | cut\
    \ -d '-' -f 3)\n\n  # check if the month is between 1 and 12\n  if [ \"$month\"\
    \ -lt 1 ] || [ \"$month\" -gt 12 ]; then\n    echo \"false\"\n    return\n  fi\n\
    \n  # check if the day is between 1 and 31\n  if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 31 ]; then\n    echo \"false\"\n    return\n  fi\n\n  # check if the year\
    \ is between 1 and 9999\n  if [ \"$year\" -lt 1 ] || [ \"$year\" -gt 9999 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n\n  # check if the day is between 1 and\
    \ 30\n  if [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq 9\
    \ ] || [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -gt 30 ]; then\n      echo\
    \ \"false\"\n      return\n    fi\n  fi\n\n  # check if the day is between 1 and\
    \ 29\n  if [ \"$month\" -eq 2 ]; then\n    if [ \"$day\" -gt 29 ]; then\n    \
    \  echo \"false\"\n      return\n    fi\n  fi\n\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=${1:0:2}\n    local day=${1:3:2}\n    local year=${1:6:4}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $((year % 4)) -eq 0 ]]; then\n          if [[ $day -gt 0\
    \ && $day -lt 30 ]]; then\n            echo \"true\"\n          else\n       \
    \     echo \"false\"\n          fi\n        else\n          if [[ $day -gt 0 &&\
    \ $day -lt 29 ]]; then\n            echo \"true\"\n          else\n          \
    \  echo \"false\"\n          fi\n        fi\n      elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      else\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  local month=$(echo \"$1\" | cut -d'-'\
    \ -f1)\n  local day=$(echo \"$1\" | cut -d'-' -f2)\n  local year=$(echo \"$1\"\
    \ | cut -d'-' -f3)\n  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [ \"$month\" -eq 1 ] || [ \"$month\"\
    \ -eq 3 ] || [ \"$month\" -eq 5 ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq\
    \ 8 ] || [ \"$month\" -eq 10 ] || [ \"$month\" -eq 12 ]; then\n    if [ \"$day\"\
    \ -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo \"false\"\n      return\n \
    \   fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq\
    \ 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 30 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ \"$month\"\
    \ -eq 2 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n    \
    \  echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  local month=$(echo \"$1\" | cut -d '-'\
    \ -f 1)\n  local day=$(echo \"$1\" | cut -d '-' -f 2)\n  local year=$(echo \"\
    $1\" | cut -d '-' -f 3)\n  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [ \"$month\" -eq 2 ]; then\n    if\
    \ [ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n      echo \"false\"\n    \
    \  return\n    fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"\
    $month\" -eq 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1 ] ||\
    \ [ \"$day\" -gt 30 ]; then\n      echo \"false\"\n      return\n    fi\n  else\n\
    \    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo \"false\"\n\
    \      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date\
    \ \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\"\
    \ ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"\
    04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n\
    \    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\"\
    ) = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\"\
    \ ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"\
    04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n\
    \    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 ||\
    \ $month -eq 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10\
    \ || $month -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n\
    \          echo \"true\"\n        else\n          echo \"false\"\n        fi\n\
    \      elif [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]];\
    \ then\n        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      elif [[ $month -eq\
    \ 2 ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      fi\n   \
    \ else\n      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\n\
    candidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate\
    \ \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"\
    06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n\
    \    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") =\
    \ \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\"\
    \ ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"\
    04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019706
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n    if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n        local month=${BASH_REMATCH[1]}\n        local day=${BASH_REMATCH[2]}\n\
    \        local year=${BASH_REMATCH[3]}\n        if [[ $month -gt 0 && $month -lt\
    \ 13 ]]; then\n            if [[ $month -eq 1 || $month -eq 3 || $month -eq 5\
    \ || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq 12 ]]; then\n\
    \                if [[ $day -gt 0 && $day -lt 32 ]]; then\n                  \
    \  echo \"true\"\n                else\n                    echo \"false\"\n \
    \               fi\n            elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n                if [[ $day -gt 0 && $day -lt\
    \ 31 ]]; then\n                    echo \"true\"\n                else\n     \
    \               echo \"false\"\n                fi\n            elif [[ $month\
    \ -eq 2 ]]; then\n                if [[ $day -gt 0 && $day -lt 30 ]]; then\n \
    \                   echo \"true\"\n                else\n                    echo\
    \ \"false\"\n                fi\n            fi\n        else\n            echo\
    \ \"false\"\n        fi\n    else\n        echo \"false\"\n    fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  local month=$(echo \"$1\" | cut -d- -f1)\n\
    \  local day=$(echo \"$1\" | cut -d- -f2)\n  local year=$(echo \"$1\" | cut -d-\
    \ -f3)\n  if [ $month -lt 1 ] || [ $month -gt 12 ]; then\n    echo \"false\"\n\
    \    return\n  fi\n  if [ $month -eq 1 ] || [ $month -eq 3 ] || [ $month -eq 5\
    \ ] || [ $month -eq 7 ] || [ $month -eq 8 ] || [ $month -eq 10 ] || [ $month -eq\
    \ 12 ]; then\n    if [ $day -lt 1 ] || [ $day -gt 31 ]; then\n      echo \"false\"\
    \n      return\n    fi\n  elif [ $month -eq 4 ] || [ $month -eq 6 ] || [ $month\
    \ -eq 9 ] || [ $month -eq 11 ]; then\n    if [ $day -lt 1 ] || [ $day -gt 30 ];\
    \ then\n      echo \"false\"\n      return\n    fi\n  elif [ $month -eq 2 ]; then\n\
    \    if [ $day -lt 1 ] || [ $day -gt 29 ]; then\n      echo \"false\"\n      return\n\
    \    fi\n  fi\n  echo \"true\"\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\
    \nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n   \
    \ [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate \"04-0-2040\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate\
    \ \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"03-32-2011\") = \"false\"\
    \ ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate\
    \ \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\"\
    \ ]]\n    [[ $(candidate \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate\
    \ \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\"\
    \ ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$\
    \ ]]; then\n    local month=$(echo $1 | cut -d'-' -f1)\n    local day=$(echo $1\
    \ | cut -d'-' -f2)\n    local year=$(echo $1 | cut -d'-' -f3)\n    if [[ $month\
    \ -ge 1 && $month -le 12 ]]; then\n      if [[ $month -eq 1 || $month -eq 3 ||\
    \ $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month -eq\
    \ 12 ]]; then\n        if [[ $day -ge 1 && $day -le 31 ]]; then\n          echo\
    \ \"true\"\n        else\n          echo \"false\"\n        fi\n      elif [[\
    \ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n   \
    \     if [[ $day -ge 1 && $day -le 30 ]]; then\n          echo \"true\"\n    \
    \    else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2 ]];\
    \ then\n        if [[ $day -ge 1 && $day -le 29 ]]; then\n          echo \"true\"\
    \n        else\n          echo \"false\"\n        fi\n      fi\n    else\n   \
    \   echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  if [[ $1 =~\
    \ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    month=$(echo $1 | cut -d- -f1)\n\
    \    day=$(echo $1 | cut -d- -f2)\n    year=$(echo $1 | cut -d- -f3)\n    if [[\
    \ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 1 || $month -eq\
    \ 3 || $month -eq 5 || $month -eq 7 || $month -eq 8 || $month -eq 10 || $month\
    \ -eq 12 ]]; then\n        if [[ $day -gt 0 && $day -lt 32 ]]; then\n        \
    \  echo \"true\"\n        else\n          echo \"false\"\n        fi\n      elif\
    \ [[ $month -eq 4 || $month -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n\
    \        if [[ $day -gt 0 && $day -lt 31 ]]; then\n          echo \"true\"\n \
    \       else\n          echo \"false\"\n        fi\n      elif [[ $month -eq 2\
    \ ]]; then\n        if [[ $day -gt 0 && $day -lt 30 ]]; then\n          echo \"\
    true\"\n        else\n          echo \"false\"\n        fi\n      fi\n    else\n\
    \      echo \"false\"\n    fi\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    local month=${BASH_REMATCH[1]}\n    local day=${BASH_REMATCH[2]}\n\
    \    local year=${BASH_REMATCH[3]}\n    if [[ $month -lt 1 || $month -gt 12 ]];\
    \ then\n      echo \"false\"\n      return\n    fi\n    if [[ $month -eq 2 ]];\
    \ then\n      if [[ $day -lt 1 || $day -gt 29 ]]; then\n        echo \"false\"\
    \n        return\n      fi\n    elif [[ $month -eq 4 || $month -eq 6 || $month\
    \ -eq 9 || $month -eq 11 ]]; then\n      if [[ $day -lt 1 || $day -gt 30 ]]; then\n\
    \        echo \"false\"\n        return\n      fi\n    else\n      if [[ $day\
    \ -lt 1 || $day -gt 31 ]]; then\n        echo \"false\"\n        return\n    \
    \  fi\n    fi\n    echo \"true\"\n  else\n    echo \"false\"\n  fi\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [ -z \"$1\" ]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! \"$1\" =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n\
    \    echo \"false\"\n    return\n  fi\n  local month=$(echo \"$1\" | cut -d'-'\
    \ -f1)\n  local day=$(echo \"$1\" | cut -d'-' -f2)\n  local year=$(echo \"$1\"\
    \ | cut -d'-' -f3)\n  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ]; then\n\
    \    echo \"false\"\n    return\n  fi\n  if [ \"$month\" -eq 1 ] || [ \"$month\"\
    \ -eq 3 ] || [ \"$month\" -eq 5 ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq\
    \ 8 ] || [ \"$month\" -eq 10 ] || [ \"$month\" -eq 12 ]; then\n    if [ \"$day\"\
    \ -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo \"false\"\n      return\n \
    \   fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq\
    \ 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 30 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ \"$month\"\
    \ -eq 2 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n    \
    \  echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  # Write your code here\n  # Check if\
    \ the date is empty\n  if [ -z \"$1\" ]; then\n    echo \"false\"\n    return\n\
    \  fi\n\n  # Check if the date is in the format mm-dd-yyyy\n  if [[ ! \"$1\" =~\
    \ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n    echo \"false\"\n    return\n  fi\n\
    \n  # Check if the months are not less than 1 or higher than 12\n  month=$(echo\
    \ \"$1\" | cut -d'-' -f1)\n  if [ \"$month\" -lt 1 ] || [ \"$month\" -gt 12 ];\
    \ then\n    echo \"false\"\n    return\n  fi\n\n  # Check if the number of days\
    \ is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12. And the\
    \ number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
    \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
    \  day=$(echo \"$1\" | cut -d'-' -f2)\n  if [ \"$month\" -eq 1 ] || [ \"$month\"\
    \ -eq 3 ] || [ \"$month\" -eq 5 ] || [ \"$month\" -eq 7 ] || [ \"$month\" -eq\
    \ 8 ] || [ \"$month\" -eq 10 ] || [ \"$month\" -eq 12 ]; then\n    if [ \"$day\"\
    \ -lt 1 ] || [ \"$day\" -gt 31 ]; then\n      echo \"false\"\n      return\n \
    \   fi\n  elif [ \"$month\" -eq 4 ] || [ \"$month\" -eq 6 ] || [ \"$month\" -eq\
    \ 9 ] || [ \"$month\" -eq 11 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\"\
    \ -gt 30 ]; then\n      echo \"false\"\n      return\n    fi\n  elif [ \"$month\"\
    \ -eq 2 ]; then\n    if [ \"$day\" -lt 1 ] || [ \"$day\" -gt 29 ]; then\n    \
    \  echo \"false\"\n      return\n    fi\n  fi\n\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ -z $1 ]]; then\n    echo \"false\"\
    \n    return\n  fi\n  if [[ ! $1 =~ ^[0-9]{2}-[0-9]{2}-[0-9]{4}$ ]]; then\n  \
    \  echo \"false\"\n    return\n  fi\n  local month=$(echo $1 | cut -d- -f1)\n\
    \  local day=$(echo $1 | cut -d- -f2)\n  local year=$(echo $1 | cut -d- -f3)\n\
    \  if [[ $month -lt 1 || $month -gt 12 ]]; then\n    echo \"false\"\n    return\n\
    \  fi\n  if [[ $month == 2 ]]; then\n    if [[ $day -lt 1 || $day -gt 29 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  elif [[ $month == 1 || $month ==\
    \ 3 || $month == 5 || $month == 7 || $month == 8 || $month == 10 || $month ==\
    \ 12 ]]; then\n    if [[ $day -lt 1 || $day -gt 31 ]]; then\n      echo \"false\"\
    \n      return\n    fi\n  else\n    if [[ $day -lt 1 || $day -gt 30 ]]; then\n\
    \      echo \"false\"\n      return\n    fi\n  fi\n  echo \"true\"\n}\n\ncandidate()\
    \ {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test() {\n    [[ $(candidate \"03-11-2000\"\
    ) = \"true\" ]]\n    [[ $(candidate \"15-01-2012\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate \"06-04-2020\") = \"true\"\
    \ ]]\n    [[ $(candidate \"01-01-2007\") = \"true\" ]]\n    [[ $(candidate \"\
    03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\") = \"false\" ]]\n    [[\
    \ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[ $(candidate \"06-06-2005\"\
    ) = \"true\" ]]\n    [[ $(candidate \"21-31-2000\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate \"04122003\") = \"false\"\
    \ ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n    [[ $(candidate \"2003-04\"\
    ) = \"false\" ]]\n    [[ $(candidate \"2003-04-12\") = \"false\" ]]\n    [[ $(candidate\
    \ \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707
- exit_code: 0
  program: "#!/bin/bash\n# You have to write a function which validates a given date\
    \ string and\n# returns True if the date is valid otherwise False.\n# The date\
    \ is valid if all of the following rules are satisfied:\n# 1. The date string\
    \ is not empty.\n# 2. The number of days is not less than 1 or higher than 31\
    \ days for months 1,3,5,7,8,10,12. And the number of days is not less than 1 or\
    \ higher than 30 days for months 4,6,9,11. And, the number of days is not less\
    \ than 1 or higher than 29 for the month 2.\n# 3. The months should not be less\
    \ than 1 or higher than 12.\n# 4. The date should be in the format: mm-dd-yyyy\n\
    # >>> $(valid_date \"03-11-2000\")\n# \"true\"\n# >>> $(valid_date \"15-01-2012\"\
    )\n# \"false\"\n# >>> $(valid_date \"04-0-2040\")\n# \"false\"\n# >>> $(valid_date\
    \ \"06-04-2020\")\n# \"true\"\n# >>> $(valid_date \"06/04/2020\")\n# \"false\"\
    \n#\n# $1 is a string\nvalid_date() {\n  if [[ $1 =~ ^([0-9]{2})-([0-9]{2})-([0-9]{4})$\
    \ ]]; then\n    month=${BASH_REMATCH[1]}\n    day=${BASH_REMATCH[2]}\n    year=${BASH_REMATCH[3]}\n\
    \    if [[ $month -gt 0 && $month -lt 13 ]]; then\n      if [[ $month -eq 2 ]];\
    \ then\n        if [[ $((year % 4)) -eq 0 ]]; then\n          if [[ $day -gt 0\
    \ && $day -lt 30 ]]; then\n            echo \"true\"\n          else\n       \
    \     echo \"false\"\n          fi\n        else\n          if [[ $day -gt 0 &&\
    \ $day -lt 29 ]]; then\n            echo \"true\"\n          else\n          \
    \  echo \"false\"\n          fi\n        fi\n      elif [[ $month -eq 4 || $month\
    \ -eq 6 || $month -eq 9 || $month -eq 11 ]]; then\n        if [[ $day -gt 0 &&\
    \ $day -lt 31 ]]; then\n          echo \"true\"\n        else\n          echo\
    \ \"false\"\n        fi\n      else\n        if [[ $day -gt 0 && $day -lt 32 ]];\
    \ then\n          echo \"true\"\n        else\n          echo \"false\"\n    \
    \    fi\n      fi\n    else\n      echo \"false\"\n    fi\n  else\n    echo \"\
    false\"\n  fi\n}\n\ncandidate() {\n    valid_date \"$@\"\n}\n\nset -e\nrun_test()\
    \ {\n    [[ $(candidate \"03-11-2000\") = \"true\" ]]\n    [[ $(candidate \"15-01-2012\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-0-2040\") = \"false\" ]]\n    [[ $(candidate\
    \ \"06-04-2020\") = \"true\" ]]\n    [[ $(candidate \"01-01-2007\") = \"true\"\
    \ ]]\n    [[ $(candidate \"03-32-2011\") = \"false\" ]]\n    [[ $(candidate \"\
    \") = \"false\" ]]\n    [[ $(candidate \"04-31-3000\") = \"false\" ]]\n    [[\
    \ $(candidate \"06-06-2005\") = \"true\" ]]\n    [[ $(candidate \"21-31-2000\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-12-2003\") = \"true\" ]]\n    [[ $(candidate\
    \ \"04122003\") = \"false\" ]]\n    [[ $(candidate \"20030412\") = \"false\" ]]\n\
    \    [[ $(candidate \"2003-04\") = \"false\" ]]\n    [[ $(candidate \"2003-04-12\"\
    ) = \"false\" ]]\n    [[ $(candidate \"04-2003\") = \"false\" ]]\n}\n\nrun_test"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660019707

name: HumanEval_117_select_words
language: swift
prompt: "\n/// Given a string s and a natural number n, you have been tasked to implement\
  \ \n/// a function that returns an array of all words from string s that contain\
  \ exactly \n/// n consonants, in order these words appear in the string s.\n///\
  \ If the string s is empty then the function should return an empty array.\n///\
  \ Note: you may assume the input string contains only letters and spaces.\n/// Examples:\n\
  /// >>> select_words(s: \"Mary had a little lamb\", n: 4)\n/// [\"little\"]\n///\
  \ >>> select_words(s: \"Mary had a little lamb\", n: 3)\n/// [\"Mary\", \"lamb\"\
  ]\n/// >>> select_words(s: \"simple white space\", n: 2)\n/// [] as [String]\n///\
  \ >>> select_words(s: \"Hello world\", n: 4)\n/// [\"world\"]\n/// >>> select_words(s:\
  \ \"Uncle sam\", n: 3)\n/// [\"Uncle\"]\nfunc select_words(s: String, n: Int) ->\
  \ [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(select_words(s: \"Mary had a little lamb\"\
  , n: 4) == [\"little\"])\nassert(select_words(s: \"Mary had a little lamb\", n:\
  \ 3) == [\"Mary\", \"lamb\"])\nassert(select_words(s: \"simple white space\", n:\
  \ 2) == [] as [String])\nassert(select_words(s: \"Hello world\", n: 4) == [\"world\"\
  ])\nassert(select_words(s: \"Uncle sam\", n: 3) == [\"Uncle\"])\nassert(select_words(s:\
  \ \"\", n: 4) == [] as [String])\nassert(select_words(s: \"a b c d e f\", n: 1)\
  \ == [\"b\", \"c\", \"d\", \"f\"])"
completions: ["    let vowels = \"aeiou\"\n    let words = s.components(separatedBy:\
    \ \" \")\n    var result = [String]()\n    for word in words {\n        var consonants\
    \ = 0\n        for char in word {\n            if !vowels.contains(char) {\n \
    \               consonants += 1\n            }\n        }\n        if consonants\
    \ == n {\n            result.append(word)\n        }\n    }\n    return result",
  "    var result = [String]()\n    let words = s.components(separatedBy: \" \")\n\
    \    for word in words {\n        if word.count == n {\n            result.append(word)\n\
    \        }\n    }\n    return result", "    var result: [String] = []\n    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let words = s.components(separatedBy:\
    \ \" \")\n    for word in words {\n        var consonants = 0\n        for letter\
    \ in word {\n            if !vowels.contains(String(letter).lowercased()) {\n\
    \                consonants += 1\n            }\n        }\n        if consonants\
    \ == n {\n            result.append(word)\n        }\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let words = s.split(separator: \" \")\n    var\
    \ result = [String]()\n    for word in words {\n        var count = 0\n      \
    \  for char in word {\n            if !vowels.contains(char) {\n             \
    \   count += 1\n            }\n        }\n        if count == n {\n          \
    \  result.append(String(word))\n        }\n    }\n    return result", "    let\
    \ vowels = \"aeiou\"\n    let words = s.split(separator: \" \")\n    var result\
    \ = [String]()\n    for word in words {\n        var count = 0\n        for char\
    \ in word {\n            if !vowels.contains(char) {\n                count +=\
    \ 1\n            }\n        }\n        if count == n {\n            result.append(String(word))\n\
    \        }\n    }\n    return result", '    return s.split(separator: " ").filter
    { $0.count == n }.map { String($0) }', "    let vowels = \"aeiou\"\n    let words\
    \ = s.components(separatedBy: \" \")\n    var result = [String]()\n    for word\
    \ in words {\n        var count = 0\n        for char in word {\n            if\
    \ !vowels.contains(char) {\n                count += 1\n            }\n      \
    \  }\n        if count == n {\n            result.append(word)\n        }\n  \
    \  }\n    return result", "    let vowels = Set(\"aeiou\")\n    let words = s.components(separatedBy:\
    \ \" \")\n    var result = [String]()\n    for word in words {\n        var count\
    \ = 0\n        for char in word {\n            if !vowels.contains(char) {\n \
    \               count += 1\n            }\n        }\n        if count == n {\n\
    \            result.append(word)\n        }\n    }\n    return result", "    let\
    \ vowels = \"aeiou\"\n    let words = s.split(separator: \" \")\n    var result\
    \ = [String]()\n    for word in words {\n        var count = 0\n        for char\
    \ in word {\n            if !vowels.contains(char) {\n                count +=\
    \ 1\n            }\n        }\n        if count == n {\n            result.append(String(word))\n\
    \        }\n    }\n    return result", "    var words = s.components(separatedBy:\
    \ \" \")\n    var result = [String]()\n    for word in words {\n        if word.count\
    \ == n {\n            result.append(word)\n        }\n    }\n    return result",
  "    let vowels = \"aeiou\"\n    let words = s.components(separatedBy: \" \")\n\
    \    var result: [String] = []\n    for word in words {\n        var count = 0\n\
    \        for char in word {\n            if !vowels.contains(char) {\n       \
    \         count += 1\n            }\n        }\n        if count == n {\n    \
    \        result.append(word)\n        }\n    }\n    return result", "    var words\
    \ = s.components(separatedBy: \" \")\n    words = words.filter { $0.count == n\
    \ }\n    return words", "    var result = [String]()\n    let words = s.components(separatedBy:\
    \ \" \")\n    for word in words {\n        if word.count == n {\n            result.append(word)\n\
    \        }\n    }\n    return result", "    var result = [String]()\n    let words\
    \ = s.components(separatedBy: \" \")\n    for word in words {\n        var count\
    \ = 0\n        for letter in word {\n            if letter != \"a\" && letter\
    \ != \"e\" && letter != \"i\" && letter != \"o\" && letter != \"u\" {\n      \
    \          count += 1\n            }\n        }\n        if count == n {\n   \
    \         result.append(word)\n        }\n    }\n    return result", "    var\
    \ words = [String]()\n    var word = \"\"\n    var consonants = 0\n    for char\
    \ in s {\n        if char == \" \" {\n            if consonants == n {\n     \
    \           words.append(word)\n            }\n            word = \"\"\n     \
    \       consonants = 0\n        } else {\n            if !isVowel(char: char)\
    \ {\n                consonants += 1\n            }\n            word.append(char)\n\
    \        }\n    }\n    if consonants == n {\n        words.append(word)\n    }\n\
    \    return words", "    let vowels = \"aeiou\"\n    let words = s.components(separatedBy:\
    \ \" \")\n    var result = [String]()\n    for word in words {\n        var count\
    \ = 0\n        for letter in word {\n            if !vowels.contains(letter) {\n\
    \                count += 1\n            }\n        }\n        if count == n {\n\
    \            result.append(word)\n        }\n    }\n    return result", "    let\
    \ vowels = \"aeiou\"\n    let words = s.components(separatedBy: \" \")\n    var\
    \ result: [String] = []\n    for word in words {\n        var count = 0\n    \
    \    for letter in word {\n            if !vowels.contains(letter) {\n       \
    \         count += 1\n            }\n        }\n        if count == n {\n    \
    \        result.append(word)\n        }\n    }\n    return result", "    var words\
    \ = [String]()\n    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    let arr = s.lowercased().components(separatedBy: \" \")\n    for word in\
    \ arr {\n        var count = 0\n        for char in word {\n            if consonants.contains(char)\
    \ {\n                count += 1\n            }\n        }\n        if count ==\
    \ n {\n            words.append(word)\n        }\n    }\n    return words", " \
    \   var words = s.components(separatedBy: \" \")\n    var result = [String]()\n\
    \    for word in words {\n        var consonants = 0\n        for letter in word\
    \ {\n            if letter != \"a\" && letter != \"e\" && letter != \"i\" && letter\
    \ != \"o\" && letter != \"u\" {\n                consonants += 1\n           \
    \ }\n        }\n        if consonants == n {\n            result.append(word)\n\
    \        }\n    }\n    return result", '    return s.components(separatedBy: "
    ").filter { $0.countConsonants() == n }']
stop_tokens:
- "\n}"

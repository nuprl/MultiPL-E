language: swift
name: HumanEval_26_remove_duplicates
results:
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjdfw5inj/tmpjdfw5inj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8968d86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8968a7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8968a7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8968a7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjdfw5inj                        0x0000559497e66961 <unavailable> + 6497

    5    libc.so.6                          0x00002b8968f72460 __libc_start_main +
    245

    6    tmpjdfw5inj                        0x0000559497e66319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbersSet = Set<Int>()\n    var result = [Int]()\n    for number\
    \ in numbers {\n        if !numbersSet.contains(number) {\n            numbersSet.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpe9o4y1pz/tmpe9o4y1pz.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02b4be3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02b48dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02b48da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02b48d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe9o4y1pz                        0x00005578cc80d981 <unavailable> + 6529

    5    libc.so.6                          0x00002b02b4dcf460 __libc_start_main +
    245

    6    tmpe9o4y1pz                        0x00005578cc80d339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: 0
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var dict = [Int: Int]()\n    for number in\
    \ numbers {\n        if let _ = dict[number] {\n            dict[number]! += 1\n\
    \        } else {\n            dict[number] = 1\n        }\n    }\n    for number\
    \ in numbers {\n        if dict[number] == 1 {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjdfw5inj/tmpjdfw5inj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8968d86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8968a7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8968a7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8968a7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjdfw5inj                        0x0000559497e66961 <unavailable> + 6497

    5    libc.so.6                          0x00002b8968f72460 __libc_start_main +
    245

    6    tmpjdfw5inj                        0x0000559497e66319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjdfw5inj/tmpjdfw5inj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8968d86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8968a7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8968a7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8968a7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjdfw5inj                        0x0000559497e66961 <unavailable> + 6497

    5    libc.so.6                          0x00002b8968f72460 __libc_start_main +
    245

    6    tmpjdfw5inj                        0x0000559497e66319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbersSet = Set<Int>()\n    var result = [Int]()\n    for number\
    \ in numbers {\n        if !numbersSet.contains(number) {\n            numbersSet.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpe9o4y1pz/tmpe9o4y1pz.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02b4be3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02b48dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02b48da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02b48d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe9o4y1pz                        0x00005578cc80d981 <unavailable> + 6529

    5    libc.so.6                          0x00002b02b4dcf460 __libc_start_main +
    245

    6    tmpe9o4y1pz                        0x00005578cc80d339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result: [Int] = []\n    for i in 0..<numbers.count\
    \ {\n        if !result.contains(numbers[i]) {\n            result.append(numbers[i])\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp7xkhzy8b/tmp7xkhzy8b.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3fea880c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3fea577b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3fea577988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3fea5767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7xkhzy8b                        0x00005577866e5911 <unavailable> + 6417

    5    libc.so.6                          0x00002b3feaa6c460 __libc_start_main +
    245

    6    tmp7xkhzy8b                        0x00005577866e52c9 <unavailable> + 4809

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjdfw5inj/tmpjdfw5inj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8968d86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8968a7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8968a7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8968a7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjdfw5inj                        0x0000559497e66961 <unavailable> + 6497

    5    libc.so.6                          0x00002b8968f72460 __libc_start_main +
    245

    6    tmpjdfw5inj                        0x0000559497e66319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result: [Int] = []\n    for number in\
    \ numbers {\n        if !result.contains(number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpa8e1rpt2/tmpa8e1rpt2.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa9d50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa9a47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa9a47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa9a467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa8e1rpt2                        0x0000562427b31841 <unavailable> + 6209

    5    libc.so.6                          0x00002b9aa9f3c460 __libc_start_main +
    245

    6    tmpa8e1rpt2                        0x0000562427b311f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result: [Int] = []\n    while !numbers.isEmpty\
    \ {\n        let number = numbers.removeFirst()\n        if !numbers.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmprn8atftf/tmprn8atftf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f2abac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f27b1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f27b1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f27b07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprn8atftf                        0x000055e6a285e811 <unavailable> + 6161

    5    libc.so.6                          0x00002ba1f2ca6460 __libc_start_main +
    245

    6    tmprn8atftf                        0x000055e6a285e1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjdfw5inj/tmpjdfw5inj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8968d86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8968a7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8968a7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8968a7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjdfw5inj                        0x0000559497e66961 <unavailable> + 6497

    5    libc.so.6                          0x00002b8968f72460 __libc_start_main +
    245

    6    tmpjdfw5inj                        0x0000559497e66319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var i = 0\n    while i < numbers.count {\n\
    \        var j = i + 1\n        while j < numbers.count {\n            if numbers[i]\
    \ == numbers[j] {\n                numbers.remove(at: j)\n            } else {\n\
    \                j += 1\n            }\n        }\n        i += 1\n    }\n   \
    \ return numbers\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpbuwph3i4/tmpbuwph3i4.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9702476c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b970216db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b970216d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b970216c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpbuwph3i4                        0x000055d451e59721 <unavailable> + 5921

    5    libc.so.6                          0x00002b9702662460 __libc_start_main +
    245

    6    tmpbuwph3i4                        0x000055d451e590d9 <unavailable> + 4313

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var dict: [Int: Int] = [:]\n    for number\
    \ in numbers {\n        if dict[number] == nil {\n            dict[number] = 1\n\
    \            result.append(number)\n        } else {\n            dict[number]!\
    \ += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp53t7ycyz/tmp53t7ycyz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad33749bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad337192b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad337192988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3371917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp53t7ycyz                        0x0000558f7356fa01 <unavailable> + 6657

    5    libc.so.6                          0x00002ad337687460 __libc_start_main +
    245

    6    tmp53t7ycyz                        0x0000558f7356f3b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result: [Int] = []\n    for i in 0..<numbers.count\
    \ {\n        if !result.contains(numbers[i]) {\n            result.append(numbers[i])\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp7xkhzy8b/tmp7xkhzy8b.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3fea880c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3fea577b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3fea577988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3fea5767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7xkhzy8b                        0x00005577866e5911 <unavailable> + 6417

    5    libc.so.6                          0x00002b3feaa6c460 __libc_start_main +
    245

    6    tmp7xkhzy8b                        0x00005577866e52c9 <unavailable> + 4809

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var dict: [Int: Int] = [:]\n    for number\
    \ in numbers {\n        if dict[number] == nil {\n            dict[number] = 1\n\
    \            result.append(number)\n        } else {\n            dict[number]!\
    \ += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp53t7ycyz/tmp53t7ycyz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad33749bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad337192b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad337192988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3371917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp53t7ycyz                        0x0000558f7356fa01 <unavailable> + 6657

    5    libc.so.6                          0x00002ad337687460 __libc_start_main +
    245

    6    tmp53t7ycyz                        0x0000558f7356f3b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var uniqueNumbers = [Int]()\n    for number\
    \ in numbers {\n        if !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpqlybge3f/tmpqlybge3f.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b762c019c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b762bd10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b762bd10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b762bd0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqlybge3f                        0x000055a1e6322891 <unavailable> + 6289

    5    libc.so.6                          0x00002b762c205460 __libc_start_main +
    245

    6    tmpqlybge3f                        0x000055a1e6322249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result: [Int] = []\n    for i in 0..<numbers.count\
    \ {\n        if !result.contains(numbers[i]) {\n            result.append(numbers[i])\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp7xkhzy8b/tmp7xkhzy8b.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3fea880c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3fea577b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3fea577988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3fea5767b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp7xkhzy8b                        0x00005577866e5911 <unavailable> + 6417

    5    libc.so.6                          0x00002b3feaa6c460 __libc_start_main +
    245

    6    tmp7xkhzy8b                        0x00005577866e52c9 <unavailable> + 4809

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var numbersSet = Set<Int>()\n    for number\
    \ in numbers {\n        if !numbersSet.contains(number) {\n            result.append(number)\n\
    \            numbersSet.insert(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpwyvobjrv/tmpwyvobjrv.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade34a8ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade34785b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade34785988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade347847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpwyvobjrv                        0x0000563221b3e981 <unavailable> + 6529

    5    libc.so.6                          0x00002ade34c7a460 __libc_start_main +
    245

    6    tmpwyvobjrv                        0x0000563221b3e339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result: [Int] = []\n    while !numbers.isEmpty\
    \ {\n        let number = numbers.removeFirst()\n        if !numbers.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmprn8atftf/tmprn8atftf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f2abac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f27b1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f27b1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f27b07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprn8atftf                        0x000055e6a285e811 <unavailable> + 6161

    5    libc.so.6                          0x00002ba1f2ca6460 __libc_start_main +
    245

    6    tmprn8atftf                        0x000055e6a285e1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjdfw5inj/tmpjdfw5inj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8968d86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8968a7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8968a7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8968a7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjdfw5inj                        0x0000559497e66961 <unavailable> + 6497

    5    libc.so.6                          0x00002b8968f72460 __libc_start_main +
    245

    6    tmpjdfw5inj                        0x0000559497e66319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result: [Int] = []\n    for number in\
    \ numbers {\n        if !result.contains(number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpa8e1rpt2/tmpa8e1rpt2.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa9d50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa9a47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa9a47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa9a467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa8e1rpt2                        0x0000562427b31841 <unavailable> + 6209

    5    libc.so.6                          0x00002b9aa9f3c460 __libc_start_main +
    245

    6    tmpa8e1rpt2                        0x0000562427b311f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    return []\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmprinmcuxg/tmprinmcuxg.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3013cdec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b30139d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b30139d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b30139d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprinmcuxg                        0x000055f559a974ad <unavailable> + 5293

    5    libc.so.6                          0x00002b3013eca460 __libc_start_main +
    245

    6    tmprinmcuxg                        0x000055f559a96fc9 <unavailable> + 4041

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if result.contains(number)\
    \ {\n            continue\n        }\n        result.append(number)\n    }\n \
    \   return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(remove_duplicates(numbers:\
    \ [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4])\
    \ == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) ==\
    \ [1, 4, 5])"
  status: Exception
  stderr: 'tmpmgf_no3u/tmpmgf_no3u.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5579f6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5579c65b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5579c65988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5579c647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmgf_no3u                        0x0000555e8cb3e841 <unavailable> + 6209

    5    libc.so.6                          0x00002b557a15a460 __libc_start_main +
    245

    6    tmpmgf_no3u                        0x0000555e8cb3e1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var dict: [Int: Int] = [:]\n    for number\
    \ in numbers {\n        if dict[number] == nil {\n            dict[number] = 1\n\
    \            result.append(number)\n        } else {\n            dict[number]!\
    \ += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp53t7ycyz/tmp53t7ycyz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad33749bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad337192b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad337192988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3371917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp53t7ycyz                        0x0000558f7356fa01 <unavailable> + 6657

    5    libc.so.6                          0x00002ad337687460 __libc_start_main +
    245

    6    tmp53t7ycyz                        0x0000558f7356f3b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result = [Int]()\n    while !numbers.isEmpty\
    \ {\n        let number = numbers.removeFirst()\n        if !numbers.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmprpddpv9b/tmprpddpv9b.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aef77cd4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aef779cbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aef779cb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aef779ca7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprpddpv9b                        0x00005561fa2f3861 <unavailable> + 6241

    5    libc.so.6                          0x00002aef77ec0460 __libc_start_main +
    245

    6    tmprpddpv9b                        0x00005561fa2f3219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var index = 0\n    while index < numbers.count\
    \ {\n        let current = numbers[index]\n        if numbers.filter({ $0 == current\
    \ }).count > 1 {\n            numbers.remove(at: index)\n        } else {\n  \
    \          index += 1\n        }\n    }\n    return numbers\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpfsnfquwt/tmpfsnfquwt.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9f5cc4ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9f5c945b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9f5c945988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9f5c9447b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpfsnfquwt                        0x000055a3d577b7e1 <unavailable> + 6113

    5    libc.so.6                          0x00002b9f5ce3a460 __libc_start_main +
    245

    6    tmpfsnfquwt                        0x000055a3d577b199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    return Array(Set(numbers))\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpy_jtzz71/tmpy_jtzz71.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4b89e0ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4b89b01b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4b89b01988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4b89b007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy_jtzz71                        0x000055ca9046d60d <unavailable> + 5645

    5    libc.so.6                          0x00002b4b89ff6460 __libc_start_main +
    245

    6    tmpy_jtzz71                        0x000055ca9046d129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var dict: [Int: Int] = [:]\n    for number\
    \ in numbers {\n        if dict[number] == nil {\n            dict[number] = 1\n\
    \            result.append(number)\n        } else {\n            dict[number]!\
    \ += 1\n        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp53t7ycyz/tmp53t7ycyz.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad33749bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad337192b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad337192988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad3371917b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp53t7ycyz                        0x0000558f7356fa01 <unavailable> + 6657

    5    libc.so.6                          0x00002ad337687460 __libc_start_main +
    245

    6    tmp53t7ycyz                        0x0000558f7356f3b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    return Array(Set(numbers))\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpy_jtzz71/tmpy_jtzz71.swift:24: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4b89e0ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4b89b01b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4b89b01988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4b89b007b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy_jtzz71                        0x000055ca9046d60d <unavailable> + 5645

    5    libc.so.6                          0x00002b4b89ff6460 __libc_start_main +
    245

    6    tmpy_jtzz71                        0x000055ca9046d129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result: [Int] = []\n    for number in\
    \ numbers {\n        if !result.contains(number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpa8e1rpt2/tmpa8e1rpt2.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa9d50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa9a47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa9a47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa9a467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa8e1rpt2                        0x0000562427b31841 <unavailable> + 6209

    5    libc.so.6                          0x00002b9aa9f3c460 __libc_start_main +
    245

    6    tmpa8e1rpt2                        0x0000562427b311f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjdfw5inj/tmpjdfw5inj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8968d86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8968a7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8968a7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8968a7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjdfw5inj                        0x0000559497e66961 <unavailable> + 6497

    5    libc.so.6                          0x00002b8968f72460 __libc_start_main +
    245

    6    tmpjdfw5inj                        0x0000559497e66319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result: [Int] = []\n    while !numbers.isEmpty\
    \ {\n        let number = numbers.removeFirst()\n        if !numbers.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmprn8atftf/tmprn8atftf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1f2abac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1f27b1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1f27b1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1f27b07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprn8atftf                        0x000055e6a285e811 <unavailable> + 6161

    5    libc.so.6                          0x00002ba1f2ca6460 __libc_start_main +
    245

    6    tmprn8atftf                        0x000055e6a285e1c9 <unavailable> + 4553

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result = [Int]()\n    for number in numbers\
    \ {\n        if !result.contains(number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpta978bd0/tmpta978bd0.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b35cf3b4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b35cf0abb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b35cf0ab988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b35cf0aa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpta978bd0                        0x000055bd266e6891 <unavailable> + 6289

    5    libc.so.6                          0x00002b35cf5a0460 __libc_start_main +
    245

    6    tmpta978bd0                        0x000055bd266e6249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjdfw5inj/tmpjdfw5inj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8968d86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8968a7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8968a7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8968a7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjdfw5inj                        0x0000559497e66961 <unavailable> + 6497

    5    libc.so.6                          0x00002b8968f72460 __libc_start_main +
    245

    6    tmpjdfw5inj                        0x0000559497e66319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var unique = [Int]()\n    for number in numbers {\n        if !unique.contains(number)\
    \ {\n            unique.append(number)\n        }\n    }\n    return unique\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpl1evm205/tmpl1evm205.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b769a331c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b769a028b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b769a028988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b769a0277b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpl1evm205                        0x00005588a2031891 <unavailable> + 6289

    5    libc.so.6                          0x00002b769a51d460 __libc_start_main +
    245

    6    tmpl1evm205                        0x00005588a2031249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: 0
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var count = [Int: Int]()\n    for number in\
    \ numbers {\n        if count[number] == nil {\n            count[number] = 1\n\
    \        } else {\n            count[number]! += 1\n        }\n    }\n    for\
    \ number in numbers {\n        if count[number] == 1 {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp544wivxn/tmp544wivxn.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5f68567c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5f6825eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5f6825e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5f6825d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp544wivxn                        0x0000560a8803d841 <unavailable> + 6209

    5    libc.so.6                          0x00002b5f68753460 __libc_start_main +
    245

    6    tmp544wivxn                        0x0000560a8803d1f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var unique = Set<Int>()\n    for number in\
    \ numbers {\n        if !unique.contains(number) {\n            result.append(number)\n\
    \            unique.insert(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpdsvoo6ob/tmpdsvoo6ob.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade03e24c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade03b1bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade03b1b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade03b1a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdsvoo6ob                        0x000055f949efd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ade04010460 __libc_start_main +
    245

    6    tmpdsvoo6ob                        0x000055f949efd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbers = numbers\n    var result: [Int] = []\n    for number in\
    \ numbers {\n        if !result.contains(number) {\n            result.append(number)\n\
    \        }\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpa8e1rpt2/tmpa8e1rpt2.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9aa9d50c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9aa9a47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9aa9a47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9aa9a467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpa8e1rpt2                        0x0000562427b31841 <unavailable> + 6209

    5    libc.so.6                          0x00002b9aa9f3c460 __libc_start_main +
    245

    6    tmpa8e1rpt2                        0x0000562427b311f9 <unavailable> + 4601

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var set: Set<Int> = []\n    for number in\
    \ numbers {\n        if !set.contains(number) {\n            result.append(number)\n\
    \            set.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmp83f3yavx/tmp83f3yavx.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac917bdac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac9178d1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac9178d1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac9178d07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp83f3yavx                        0x000055641588e941 <unavailable> + 6465

    5    libc.so.6                          0x00002ac917dc6460 __libc_start_main +
    245

    6    tmp83f3yavx                        0x000055641588e2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var seen = Set<Int>()\n    for number in numbers\
    \ {\n        if !seen.contains(number) {\n            result.append(number)\n\
    \            seen.insert(number)\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpu6i9xsnf/tmpu6i9xsnf.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba1aae19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba1aab10b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba1aab10988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba1aab0f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpu6i9xsnf                        0x000055febc9bd981 <unavailable> + 6529

    5    libc.so.6                          0x00002ba1ab005460 __libc_start_main +
    245

    6    tmpu6i9xsnf                        0x000055febc9bd339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjdfw5inj/tmpjdfw5inj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8968d86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8968a7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8968a7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8968a7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjdfw5inj                        0x0000559497e66961 <unavailable> + 6497

    5    libc.so.6                          0x00002b8968f72460 __libc_start_main +
    245

    6    tmpjdfw5inj                        0x0000559497e66319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var numbersSet = Set<Int>()\n    var result = [Int]()\n    for number\
    \ in numbers {\n        if !numbersSet.contains(number) {\n            numbersSet.insert(number)\n\
    \            result.append(number)\n        }\n    }\n    return result\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpe9o4y1pz/tmpe9o4y1pz.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b02b4be3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02b48dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02b48da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02b48d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe9o4y1pz                        0x00005578cc80d981 <unavailable> + 6529

    5    libc.so.6                          0x00002b02b4dcf460 __libc_start_main +
    245

    6    tmpe9o4y1pz                        0x00005578cc80d339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    for number in numbers {\n        if !result.contains(number)\
    \ {\n            result.append(number)\n        }\n    }\n    return result\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpb4v2_ttp/tmpb4v2_ttp.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b47de87bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b47de572b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b47de572988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b47de5717b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb4v2_ttp                        0x0000557840ce3891 <unavailable> + 6289

    5    libc.so.6                          0x00002b47dea67460 __libc_start_main +
    245

    6    tmpb4v2_ttp                        0x0000557840ce3249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result = [Int]()\n    var set = Set<Int>()\n    for number in numbers\
    \ {\n        if !set.contains(number) {\n            result.append(number)\n \
    \           set.insert(number)\n        }\n    }\n    return result\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpr_hs3bx4/tmpr_hs3bx4.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1f6c35fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1f6c056b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1f6c056988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1f6c0557b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpr_hs3bx4                        0x000055aabab2f981 <unavailable> + 6529

    5    libc.so.6                          0x00002b1f6c54b460 __libc_start_main +
    245

    6    tmpr_hs3bx4                        0x000055aabab2f339 <unavailable> + 4921

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var result: [Int] = []\n    var seen: [Int: Bool] = [:]\n    for number\
    \ in numbers {\n        if seen[number] == nil {\n            result.append(number)\n\
    \            seen[number] = true\n        }\n    }\n    return result\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(remove_duplicates(numbers: [] as [Int]) == []\
    \ as [Int])\nassert(remove_duplicates(numbers: [1, 2, 3, 4]) == [1, 2, 3, 4])\n\
    assert(remove_duplicates(numbers: [1, 2, 3, 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpjdfw5inj/tmpjdfw5inj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8968d86c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8968a7db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8968a7d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8968a7c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjdfw5inj                        0x0000559497e66961 <unavailable> + 6497

    5    libc.so.6                          0x00002b8968f72460 __libc_start_main +
    245

    6    tmpjdfw5inj                        0x0000559497e66319 <unavailable> + 4889

    '
  stdout: ''
  timestamp: 1659824595
- exit_code: -4
  program: "\n/// From an array of integers, remove all elements that occur more than\
    \ once.\n/// Keep order of elements left the same as in the input.\n/// >>> remove_duplicates(numbers:\
    \ [1, 2, 3, 2, 4])\n/// [1, 3, 4]\nfunc remove_duplicates(numbers: [Int]) -> [Int]\
    \ {\n    var uniqueNumbers = [Int]()\n    for number in numbers {\n        if\
    \ !uniqueNumbers.contains(number) {\n            uniqueNumbers.append(number)\n\
    \        }\n    }\n    return uniqueNumbers\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(remove_duplicates(numbers: [] as [Int]) == [] as [Int])\nassert(remove_duplicates(numbers:\
    \ [1, 2, 3, 4]) == [1, 2, 3, 4])\nassert(remove_duplicates(numbers: [1, 2, 3,\
    \ 2, 4, 3, 5]) == [1, 4, 5])"
  status: Exception
  stderr: 'tmpi7m5ro00/tmpi7m5ro00.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b201078ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2010485b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2010485988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b20104847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpi7m5ro00                        0x000055a8b1390891 <unavailable> + 6289

    5    libc.so.6                          0x00002b201097a460 __libc_start_main +
    245

    6    tmpi7m5ro00                        0x000055a8b1390249 <unavailable> + 4681

    '
  stdout: ''
  timestamp: 1659824595

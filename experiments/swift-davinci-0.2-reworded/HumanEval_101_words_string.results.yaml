language: swift
name: HumanEval_101_words_string
results:
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    // your\
    \ code here\n    return s.components(separatedBy: \", \")\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(words_string(s: \"Hi, my name is John\") == [\"Hi\", \"\
    my\", \"name\", \"is\", \"John\"])\nassert(words_string(s: \"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s:\
    \ \"One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"\
    four\", \"five\", \"six\"])\nassert(words_string(s: \"\") == [] as [String])\n\
    assert(words_string(s: \"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmp4emg8igq.swift:11:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    let words\
    \ = s.components(separatedBy: \", \")\n    return words\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(words_string(s: \"Hi, my name is John\") == [\"Hi\", \"\
    my\", \"name\", \"is\", \"John\"])\nassert(words_string(s: \"One, two, three,\
    \ four, five, six\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    ])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s:\
    \ \"One,, two, three, four, five, six,\") == [\"One\", \"two\", \"three\", \"\
    four\", \"five\", \"six\"])\nassert(words_string(s: \"\") == [] as [String])\n\
    assert(words_string(s: \"ahmed     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkig720mt.swift:10:19: error: value of type 'String' has no member\
    \ 'components'\n    let words = s.components(separatedBy: \", \")\n          \
    \      ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map(String.init)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpracl64kq/tmpracl64kq.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad264118c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad263e0fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad263e0f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad263e0e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpracl64kq                        0x000055688d31181f <unavailable> + 6175

    5    libc.so.6                          0x00002ad264304460 __libc_start_main +
    245

    6    tmpracl64kq                        0x000055688d311389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map(String.init)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpracl64kq/tmpracl64kq.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad264118c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad263e0fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad263e0f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad263e0e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpracl64kq                        0x000055688d31181f <unavailable> + 6175

    5    libc.so.6                          0x00002ad264304460 __libc_start_main +
    245

    6    tmpracl64kq                        0x000055688d311389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map(String.init)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpracl64kq/tmpracl64kq.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad264118c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad263e0fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad263e0f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad263e0e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpracl64kq                        0x000055688d31181f <unavailable> + 6175

    5    libc.so.6                          0x00002ad264304460 __libc_start_main +
    245

    6    tmpracl64kq                        0x000055688d311389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \" \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpkomqpar0.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \" \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: -4
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.split(separator:\
    \ \" \").map { String($0) }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(words_string(s:\
    \ \"Hi, my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\n\
    assert(words_string(s: \"One, two, three, four, five, six\") == [\"One\", \"two\"\
    , \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\"\
    ) == [\"Hi\", \"my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four,\
    \ five, six,\") == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\n\
    assert(words_string(s: \"\") == [] as [String])\nassert(words_string(s: \"ahmed\
    \     , gamal\") == [\"ahmed\", \"gamal\"])"
  status: Exception
  stderr: 'tmpcagzz1fy/tmpcagzz1fy.swift:26: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affd668ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affd6385b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affd6385988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affd63847b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcagzz1fy                        0x000055a2aa0f881f <unavailable> + 6175

    5    libc.so.6                          0x00002affd687a460 __libc_start_main +
    245

    6    tmpcagzz1fy                        0x000055a2aa0f8389 <unavailable> + 5001

    '
  stdout: ''
  timestamp: 1659824680
- exit_code: 1
  program: "\n/// You will be given a string of words separated by commas or spaces.\
    \ Your task is\n/// to split the string into words and return an array of the\
    \ words.\n/// For example:\n/// >>> words_string(s: \"Hi, my name is John\")\n\
    /// [\"Hi\", \"my\", \"name\", \"is\", \"John\"]\n/// >>> words_string(s: \"One,\
    \ two, three, four, five, six\")\n/// [\"One\", \"two\", \"three\", \"four\",\
    \ \"five\", \"six\"]\nfunc words_string(s: String) -> [String] {\n    return s.components(separatedBy:\
    \ \", \")\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(words_string(s: \"Hi,\
    \ my name is John\") == [\"Hi\", \"my\", \"name\", \"is\", \"John\"])\nassert(words_string(s:\
    \ \"One, two, three, four, five, six\") == [\"One\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\"])\nassert(words_string(s: \"Hi, my name\") == [\"Hi\", \"\
    my\", \"name\"])\nassert(words_string(s: \"One,, two, three, four, five, six,\"\
    ) == [\"One\", \"two\", \"three\", \"four\", \"five\", \"six\"])\nassert(words_string(s:\
    \ \"\") == [] as [String])\nassert(words_string(s: \"ahmed     , gamal\") == [\"\
    ahmed\", \"gamal\"])"
  status: SyntaxError
  stderr: "/tmp/tmpjacr4ycf.swift:10:14: error: value of type 'String' has no member\
    \ 'components'\n    return s.components(separatedBy: \", \")\n           ~ ^~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824680

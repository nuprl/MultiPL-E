language: swift
name: HumanEval_64_vowels_count
results:
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            vowels += 1\n        }\n    }\n    return vowels\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpj9ntr194/tmpj9ntr194.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b407f786c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b407f47db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b407f47d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b407f47c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj9ntr194                        0x00005564748524bb <unavailable> + 5307

    5    libc.so.6                          0x00002b407f972460 __libc_start_main +
    245

    6    tmpj9ntr194                        0x0000556474852099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd2ogp4j0/tmpd2ogp4j0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b98b62dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98b5fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98b5fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98b5fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd2ogp4j0                        0x000055955781678b <unavailable> + 6027

    5    libc.so.6                          0x00002b98b64cb460 __libc_start_main +
    245

    6    tmpd2ogp4j0                        0x0000559557816369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd6voc4dk/tmpd6voc4dk.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b757a257c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7579f4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7579f4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7579f4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6voc4dk                        0x000055b8f0ce27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b757a443460 __libc_start_main +
    245

    6    tmpd6voc4dk                        0x000055b8f0ce2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpehz5_2q6/tmpehz5_2q6.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72bdf2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72bdc26b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72bdc26988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72bdc257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpehz5_2q6                        0x000055b7d959e76b <unavailable> + 5995

    5    libc.so.6                          0x00002b72be11b460 __libc_start_main +
    245

    6    tmpehz5_2q6                        0x000055b7d959e349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let last_char = s.last\n    let last_char_is_vowel = last_char\
    \ != nil && vowels.contains(last_char!)\n    let last_char_is_y = last_char !=\
    \ nil && last_char! == \"y\"\n    let last_char_is_vowel_y = last_char_is_vowel\
    \ || last_char_is_y\n    return s.filter { vowels.contains($0) }.count + (last_char_is_vowel_y\
    \ ? 1 : 0)\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\"\
    ) == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: Exception
  stderr: 'tmphdam56nj/tmphdam56nj.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b01a1c75c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b01a196cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b01a196c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b01a196b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmphdam56nj                        0x000055676a1537e4 <unavailable> + 6116

    5    libc.so.6                          0x00002b01a1e61460 __libc_start_main +
    245

    6    tmphdam56nj                        0x000055676a153469 <unavailable> + 5225

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let s = s.lowercased()\n    var count = 0\n    for c in s {\n\
    \        if vowels.contains(c) {\n            count += 1\n        }\n    }\n \
    \   if s.last == \"y\" {\n        count += 1\n    }\n    return count\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpehz5_2q6/tmpehz5_2q6.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72bdf2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72bdc26b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72bdc26988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72bdc257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpehz5_2q6                        0x000055b7d959e76b <unavailable> + 5995

    5    libc.so.6                          0x00002b72be11b460 __libc_start_main +
    245

    6    tmpehz5_2q6                        0x000055b7d959e349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd6voc4dk/tmpd6voc4dk.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b757a257c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7579f4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7579f4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7579f4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6voc4dk                        0x000055b8f0ce27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b757a443460 __libc_start_main +
    245

    6    tmpd6voc4dk                        0x000055b8f0ce2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpvj2isaov/tmpvj2isaov.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb0e586c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb0e27db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb0e27d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb0e27c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvj2isaov                        0x000055d62553a69b <unavailable> + 5787

    5    libc.so.6                          0x00002afb0e772460 __libc_start_main +
    245

    6    tmpvj2isaov                        0x000055d62553a279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd2ogp4j0/tmpd2ogp4j0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b98b62dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98b5fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98b5fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98b5fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd2ogp4j0                        0x000055955781678b <unavailable> + 6027

    5    libc.so.6                          0x00002b98b64cb460 __libc_start_main +
    245

    6    tmpd2ogp4j0                        0x0000559557816369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter { \"aeiouy\".contains($0) }.count\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpj0fr1_kn/tmpj0fr1_kn.swift:29: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abf8b933c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abf8b62ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abf8b62a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abf8b6297b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpj0fr1_kn                        0x000056012d32351b <unavailable> + 5403

    5    libc.so.6                          0x00002abf8bb1f460 __libc_start_main +
    245

    6    tmpj0fr1_kn                        0x000056012d3230f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: 0
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let s = s.lowercased()\n    var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if s.hasSuffix(\"y\") {\n \
    \       count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpehz5_2q6/tmpehz5_2q6.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72bdf2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72bdc26b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72bdc26988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72bdc257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpehz5_2q6                        0x000055b7d959e76b <unavailable> + 5995

    5    libc.so.6                          0x00002b72be11b460 __libc_start_main +
    245

    6    tmpehz5_2q6                        0x000055b7d959e349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if let last = s.last, vowels.contains(last)\
    \ {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp78sh84a0/tmp78sh84a0.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b304875ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3048455b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3048455988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b30484547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78sh84a0                        0x000055ad5ec7c6c4 <unavailable> + 5828

    5    libc.so.6                          0x00002b304894a460 __libc_start_main +
    245

    6    tmp78sh84a0                        0x000055ad5ec7c349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3j8apavp/tmp3j8apavp.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace22df4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace22aebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace22aeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace22aea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3j8apavp                        0x000055f6f1b5d69b <unavailable> + 5787

    5    libc.so.6                          0x00002ace22fe0460 __libc_start_main +
    245

    6    tmp3j8apavp                        0x000055f6f1b5d279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd2ogp4j0/tmpd2ogp4j0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b98b62dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98b5fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98b5fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98b5fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd2ogp4j0                        0x000055955781678b <unavailable> + 6027

    5    libc.so.6                          0x00002b98b64cb460 __libc_start_main +
    245

    6    tmpd2ogp4j0                        0x0000559557816369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd6voc4dk/tmpd6voc4dk.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b757a257c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7579f4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7579f4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7579f4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6voc4dk                        0x000055b8f0ce27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b757a443460 __libc_start_main +
    245

    6    tmpd6voc4dk                        0x000055b8f0ce2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1yn_lg9d/tmp1yn_lg9d.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2ff4a1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2ff198b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2ff198988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2ff1977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1yn_lg9d                        0x00005578469ab4bb <unavailable> + 5307

    5    libc.so.6                          0x00002ab2ff68d460 __libc_start_main +
    245

    6    tmp1yn_lg9d                        0x00005578469ab099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd6voc4dk/tmpd6voc4dk.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b757a257c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7579f4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7579f4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7579f4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6voc4dk                        0x000055b8f0ce27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b757a443460 __libc_start_main +
    245

    6    tmpd6voc4dk                        0x000055b8f0ce2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd6voc4dk/tmpd6voc4dk.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b757a257c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7579f4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7579f4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7579f4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6voc4dk                        0x000055b8f0ce27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b757a443460 __libc_start_main +
    245

    6    tmpd6voc4dk                        0x000055b8f0ce2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpe929a9te/tmpe929a9te.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34af241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34aef38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34aef38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34aef377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe929a9te                        0x0000562996de14db <unavailable> + 5339

    5    libc.so.6                          0x00002b34af42d460 __libc_start_main +
    245

    6    tmpe929a9te                        0x0000562996de10b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpe929a9te/tmpe929a9te.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34af241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34aef38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34aef38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34aef377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe929a9te                        0x0000562996de14db <unavailable> + 5339

    5    libc.so.6                          0x00002b34af42d460 __libc_start_main +
    245

    6    tmpe929a9te                        0x0000562996de10b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp8vg3zivk/tmp8vg3zivk.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5acf3e3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5acf0dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5acf0da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5acf0d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp8vg3zivk                        0x0000559cb0f2f64b <unavailable> + 5707

    5    libc.so.6                          0x00002b5acf5cf460 __libc_start_main +
    245

    6    tmp8vg3zivk                        0x0000559cb0f2f229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var vowels = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            vowels += 1\n        }\n    }\n    if s.last == \"y\" {\n       \
    \ vowels += 1\n    }\n    return vowels\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmppgw11jpw/tmppgw11jpw.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b63e7650c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b63e7347b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b63e7347988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b63e73467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppgw11jpw                        0x000055e480aa558b <unavailable> + 5515

    5    libc.so.6                          0x00002b63e783c460 __libc_start_main +
    245

    6    tmppgw11jpw                        0x000055e480aa5169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd6voc4dk/tmpd6voc4dk.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b757a257c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7579f4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7579f4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7579f4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6voc4dk                        0x000055b8f0ce27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b757a443460 __libc_start_main +
    245

    6    tmpd6voc4dk                        0x000055b8f0ce2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd2ogp4j0/tmpd2ogp4j0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b98b62dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98b5fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98b5fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98b5fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd2ogp4j0                        0x000055955781678b <unavailable> + 6027

    5    libc.so.6                          0x00002b98b64cb460 __libc_start_main +
    245

    6    tmpd2ogp4j0                        0x0000559557816369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if let last = s.last, vowels.contains(last)\
    \ {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp78sh84a0/tmp78sh84a0.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b304875ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3048455b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3048455988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b30484547b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp78sh84a0                        0x000055ad5ec7c6c4 <unavailable> + 5828

    5    libc.so.6                          0x00002b304894a460 __libc_start_main +
    245

    6    tmp78sh84a0                        0x000055ad5ec7c349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd6voc4dk/tmpd6voc4dk.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b757a257c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7579f4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7579f4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7579f4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6voc4dk                        0x000055b8f0ce27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b757a443460 __libc_start_main +
    245

    6    tmpd6voc4dk                        0x000055b8f0ce2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd2ogp4j0/tmpd2ogp4j0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b98b62dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98b5fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98b5fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98b5fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd2ogp4j0                        0x000055955781678b <unavailable> + 6027

    5    libc.so.6                          0x00002b98b64cb460 __libc_start_main +
    245

    6    tmpd2ogp4j0                        0x0000559557816369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4qtghgfa/tmp4qtghgfa.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0b12b6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0b0fadb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0b0fad988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0b0fac7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4qtghgfa                        0x00005573fea1276b <unavailable> + 5995

    5    libc.so.6                          0x00002ab0b14a2460 __libc_start_main +
    245

    6    tmp4qtghgfa                        0x00005573fea12349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd2ogp4j0/tmpd2ogp4j0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b98b62dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98b5fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98b5fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98b5fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd2ogp4j0                        0x000055955781678b <unavailable> + 6027

    5    libc.so.6                          0x00002b98b64cb460 __libc_start_main +
    245

    6    tmpd2ogp4j0                        0x0000559557816369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd6voc4dk/tmpd6voc4dk.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b757a257c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7579f4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7579f4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7579f4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6voc4dk                        0x000055b8f0ce27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b757a443460 __libc_start_main +
    245

    6    tmpd6voc4dk                        0x000055b8f0ce2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd6voc4dk/tmpd6voc4dk.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b757a257c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7579f4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7579f4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7579f4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6voc4dk                        0x000055b8f0ce27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b757a443460 __libc_start_main +
    245

    6    tmpd6voc4dk                        0x000055b8f0ce2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp2b1il8s7/tmp2b1il8s7.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5b134f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5b131eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5b131ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5b131e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2b1il8s7                        0x0000564da4c8264b <unavailable> + 5707

    5    libc.so.6                          0x00002b5b136df460 __libc_start_main +
    245

    6    tmp2b1il8s7                        0x0000564da4c82229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\", \"y\"]\n    for char in s {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdf3yahbe/tmpdf3yahbe.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af373db8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af373aafb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af373aaf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af373aae7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdf3yahbe                        0x0000556a1f687882 <unavailable> + 6274

    5    libc.so.6                          0x00002af373fa4460 __libc_start_main +
    245

    6    tmpdf3yahbe                        0x0000556a1f6873b9 <unavailable> + 5049

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmprbbiek1g/tmprbbiek1g.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2fd2ca8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2fd299fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2fd299f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2fd299e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprbbiek1g                        0x000055bf7dbc069b <unavailable> + 5787

    5    libc.so.6                          0x00002b2fd2e94460 __libc_start_main +
    245

    6    tmprbbiek1g                        0x000055bf7dbc0279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = \"aeiouy\"\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaxvnh8dl/tmpaxvnh8dl.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2ce499cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2ce4693b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2ce4693988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2ce46927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaxvnh8dl                        0x0000563f986484db <unavailable> + 5339

    5    libc.so.6                          0x00002b2ce4b88460 __libc_start_main +
    245

    6    tmpaxvnh8dl                        0x0000563f986480b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"\
    ]\n    var count = 0\n    for char in s {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxy7jeek8/tmpxy7jeek8.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade38b6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade38865b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade38865988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade388647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxy7jeek8                        0x000056229c5377af <unavailable> + 6063

    5    libc.so.6                          0x00002ade38d5a460 __libc_start_main +
    245

    6    tmpxy7jeek8                        0x000056229c537239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1yn_lg9d/tmp1yn_lg9d.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2ff4a1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2ff198b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2ff198988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2ff1977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1yn_lg9d                        0x00005578469ab4bb <unavailable> + 5307

    5    libc.so.6                          0x00002ab2ff68d460 __libc_start_main +
    245

    6    tmp1yn_lg9d                        0x00005578469ab099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpy7w4hu6h/tmpy7w4hu6h.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0beff4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0befc41b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0befc41988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0befc407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy7w4hu6h                        0x0000560018a6b5fb <unavailable> + 5627

    5    libc.so.6                          0x00002b0bf0136460 __libc_start_main +
    245

    6    tmpy7w4hu6h                        0x0000560018a6b1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd2ogp4j0/tmpd2ogp4j0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b98b62dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98b5fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98b5fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98b5fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd2ogp4j0                        0x000055955781678b <unavailable> + 6027

    5    libc.so.6                          0x00002b98b64cb460 __libc_start_main +
    245

    6    tmpd2ogp4j0                        0x0000559557816369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.hasSuffix(\"y\") {\n \
    \       count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp24hwgfli/tmp24hwgfli.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b681822bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6817f22b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6817f22988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6817f217b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp24hwgfli                        0x00005578456b56eb <unavailable> + 5867

    5    libc.so.6                          0x00002b6818417460 __libc_start_main +
    245

    6    tmp24hwgfli                        0x00005578456b52c9 <unavailable> + 4809

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1yn_lg9d/tmp1yn_lg9d.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2ff4a1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2ff198b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2ff198988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2ff1977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1yn_lg9d                        0x00005578469ab4bb <unavailable> + 5307

    5    libc.so.6                          0x00002ab2ff68d460 __libc_start_main +
    245

    6    tmp1yn_lg9d                        0x00005578469ab099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"\
    ]\n    var count = 0\n    for char in s {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpxy7jeek8/tmpxy7jeek8.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ade38b6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ade38865b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ade38865988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ade388647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxy7jeek8                        0x000056229c5377af <unavailable> + 6063

    5    libc.so.6                          0x00002ade38d5a460 __libc_start_main +
    245

    6    tmpxy7jeek8                        0x000056229c537239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpe929a9te/tmpe929a9te.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34af241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34aef38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34aef38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34aef377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe929a9te                        0x0000562996de14db <unavailable> + 5339

    5    libc.so.6                          0x00002b34af42d460 __libc_start_main +
    245

    6    tmpe929a9te                        0x0000562996de10b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpehz5_2q6/tmpehz5_2q6.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b72bdf2fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b72bdc26b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b72bdc26988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b72bdc257b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpehz5_2q6                        0x000055b7d959e76b <unavailable> + 5995

    5    libc.so.6                          0x00002b72be11b460 __libc_start_main +
    245

    6    tmpehz5_2q6                        0x000055b7d959e349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: 1
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    return s.filter { $0.isVowel }.count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: SyntaxError
  stderr: "/tmp/tmp3kk4dfy1.swift:12:26: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isVowel'\n    return s.filter { $0.isVowel }.count\n\
    \                      ~~ ^~~~~~~\n"
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1yn_lg9d/tmp1yn_lg9d.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2ff4a1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2ff198b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2ff198988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2ff1977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1yn_lg9d                        0x00005578469ab4bb <unavailable> + 5307

    5    libc.so.6                          0x00002ab2ff68d460 __libc_start_main +
    245

    6    tmp1yn_lg9d                        0x00005578469ab099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpf10ad8yj/tmpf10ad8yj.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4683521c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4683218b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4683218988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b46832177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf10ad8yj                        0x000055907368a76b <unavailable> + 5995

    5    libc.so.6                          0x00002b468370d460 __libc_start_main +
    245

    6    tmpf10ad8yj                        0x000055907368a349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmppzrkf_kq/tmppzrkf_kq.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002adfc191fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002adfc1616b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002adfc1616988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002adfc16157b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppzrkf_kq                        0x000055c6151bd7bb <unavailable> + 6075

    5    libc.so.6                          0x00002adfc1b0b460 __libc_start_main +
    245

    6    tmppzrkf_kq                        0x000055c6151bd399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1yn_lg9d/tmp1yn_lg9d.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2ff4a1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2ff198b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2ff198988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2ff1977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1yn_lg9d                        0x00005578469ab4bb <unavailable> + 5307

    5    libc.so.6                          0x00002ab2ff68d460 __libc_start_main +
    245

    6    tmp1yn_lg9d                        0x00005578469ab099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpe929a9te/tmpe929a9te.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34af241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34aef38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34aef38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34aef377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe929a9te                        0x0000562996de14db <unavailable> + 5339

    5    libc.so.6                          0x00002b34af42d460 __libc_start_main +
    245

    6    tmpe929a9te                        0x0000562996de10b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\"\
    ) == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\"\
    ) == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\"\
    ) == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1yn_lg9d/tmp1yn_lg9d.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab2ff4a1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab2ff198b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab2ff198988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2ff1977b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1yn_lg9d                        0x00005578469ab4bb <unavailable> + 5307

    5    libc.so.6                          0x00002ab2ff68d460 __libc_start_main +
    245

    6    tmp1yn_lg9d                        0x00005578469ab099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if count > 0 && s.last == \"\
    y\" {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpsgdwhmsi/tmpsgdwhmsi.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0bf2c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0befbdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0befbd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0befbc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsgdwhmsi                        0x000055e1b641e7bb <unavailable> + 6075

    5    libc.so.6                          0x00002ae0bf4b2460 __libc_start_main +
    245

    6    tmpsgdwhmsi                        0x000055e1b641e399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\", \"y\"]\n    for char in s {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpz2htr0tn/tmpz2htr0tn.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad879dfdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad879af4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad879af4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad879af37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz2htr0tn                        0x00005576bf5c87af <unavailable> + 6063

    5    libc.so.6                          0x00002ad879fe9460 __libc_start_main +
    245

    6    tmpz2htr0tn                        0x00005576bf5c8239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let last = s.last!\n    let s = s.lowercased()\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(String(c)) {\n            count += 1\n  \
    \      }\n    }\n    if last == \"y\" {\n        count += 1\n    }\n    return\
    \ count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"abcde\"\
    ) == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s: \"key\"\
    ) == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s: \"keY\"\
    ) == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\"\
    ) == 3)"
  status: Exception
  stderr: 'tmp86irlno4/tmp86irlno4.swift:44: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b33ba4d5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b33ba1ccb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b33ba1cc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b33ba1cb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp86irlno4                        0x0000556d20bb1a7e <unavailable> + 6782

    5    libc.so.6                          0x00002b33ba6c1460 __libc_start_main +
    245

    6    tmp86irlno4                        0x0000556d20bb1449 <unavailable> + 5193

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp2b1il8s7/tmp2b1il8s7.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5b134f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5b131eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5b131ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5b131e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2b1il8s7                        0x0000564da4c8264b <unavailable> + 5707

    5    libc.so.6                          0x00002b5b136df460 __libc_start_main +
    245

    6    tmp2b1il8s7                        0x0000564da4c82229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\", \"y\"]\n    for char in s {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpz2htr0tn/tmpz2htr0tn.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad879dfdc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad879af4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad879af4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad879af37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpz2htr0tn                        0x00005576bf5c87af <unavailable> + 6063

    5    libc.so.6                          0x00002ad879fe9460 __libc_start_main +
    245

    6    tmpz2htr0tn                        0x00005576bf5c8239 <unavailable> + 4665

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd6voc4dk/tmpd6voc4dk.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b757a257c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7579f4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7579f4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7579f4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6voc4dk                        0x000055b8f0ce27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b757a443460 __libc_start_main +
    245

    6    tmpd6voc4dk                        0x000055b8f0ce2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd6voc4dk/tmpd6voc4dk.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b757a257c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7579f4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7579f4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7579f4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6voc4dk                        0x000055b8f0ce27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b757a443460 __libc_start_main +
    245

    6    tmpd6voc4dk                        0x000055b8f0ce2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd2ogp4j0/tmpd2ogp4j0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b98b62dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98b5fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98b5fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98b5fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd2ogp4j0                        0x000055955781678b <unavailable> + 6027

    5    libc.so.6                          0x00002b98b64cb460 __libc_start_main +
    245

    6    tmpd2ogp4j0                        0x0000559557816369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpy7w4hu6h/tmpy7w4hu6h.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0beff4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0befc41b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0befc41988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0befc407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy7w4hu6h                        0x0000560018a6b5fb <unavailable> + 5627

    5    libc.so.6                          0x00002b0bf0136460 __libc_start_main +
    245

    6    tmpy7w4hu6h                        0x0000560018a6b1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3j8apavp/tmp3j8apavp.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace22df4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace22aebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace22aeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace22aea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3j8apavp                        0x000055f6f1b5d69b <unavailable> + 5787

    5    libc.so.6                          0x00002ace22fe0460 __libc_start_main +
    245

    6    tmp3j8apavp                        0x000055f6f1b5d279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        switch c {\n\
    \        case \"a\", \"e\", \"i\", \"o\", \"u\":\n            count += 1\n   \
    \     case \"y\":\n            if s.last == \"y\" {\n                count +=\
    \ 1\n            }\n        default:\n            continue\n        }\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpsedvexzs/tmpsedvexzs.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afc00701c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afc003f8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afc003f8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afc003f77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsedvexzs                        0x000055d2200fe58b <unavailable> + 5515

    5    libc.so.6                          0x00002afc008ed460 __libc_start_main +
    245

    6    tmpsedvexzs                        0x000055d2200fe169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpiwxnptvh/tmpiwxnptvh.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aabe22c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aabe1fbdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aabe1fbd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aabe1fbc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiwxnptvh                        0x000055761ca427bb <unavailable> + 6075

    5    libc.so.6                          0x00002aabe24b2460 __libc_start_main +
    245

    6    tmpiwxnptvh                        0x000055761ca42399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpy7w4hu6h/tmpy7w4hu6h.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0beff4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0befc41b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0befc41988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0befc407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy7w4hu6h                        0x0000560018a6b5fb <unavailable> + 5627

    5    libc.so.6                          0x00002b0bf0136460 __libc_start_main +
    245

    6    tmpy7w4hu6h                        0x0000560018a6b1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpe929a9te/tmpe929a9te.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34af241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34aef38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34aef38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34aef377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe929a9te                        0x0000562996de14db <unavailable> + 5339

    5    libc.so.6                          0x00002b34af42d460 __libc_start_main +
    245

    6    tmpe929a9te                        0x0000562996de10b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpvj2isaov/tmpvj2isaov.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb0e586c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb0e27db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb0e27d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb0e27c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvj2isaov                        0x000055d62553a69b <unavailable> + 5787

    5    libc.so.6                          0x00002afb0e772460 __libc_start_main +
    245

    6    tmpvj2isaov                        0x000055d62553a279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmprbbiek1g/tmprbbiek1g.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2fd2ca8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2fd299fb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2fd299f988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2fd299e7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprbbiek1g                        0x000055bf7dbc069b <unavailable> + 5787

    5    libc.so.6                          0x00002b2fd2e94460 __libc_start_main +
    245

    6    tmprbbiek1g                        0x000055bf7dbc0279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3j8apavp/tmp3j8apavp.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace22df4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace22aebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace22aeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace22aea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3j8apavp                        0x000055f6f1b5d69b <unavailable> + 5787

    5    libc.so.6                          0x00002ace22fe0460 __libc_start_main +
    245

    6    tmp3j8apavp                        0x000055f6f1b5d279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpy7w4hu6h/tmpy7w4hu6h.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0beff4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0befc41b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0befc41988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0befc407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy7w4hu6h                        0x0000560018a6b5fb <unavailable> + 5627

    5    libc.so.6                          0x00002b0bf0136460 __libc_start_main +
    245

    6    tmpy7w4hu6h                        0x0000560018a6b1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouyAEIOUY\"\n    var count = 0\n   \
    \ for char in s {\n        if vowels.contains(char) {\n            count += 1\n\
    \        }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpjl_twnuv/tmpjl_twnuv.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4b72253c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4b71f4ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4b71f4a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4b71f497b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjl_twnuv                        0x000055fba575c62f <unavailable> + 5679

    5    libc.so.6                          0x00002b4b7243f460 __libc_start_main +
    245

    6    tmpjl_twnuv                        0x000055fba575c0b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpe929a9te/tmpe929a9te.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34af241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34aef38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34aef38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34aef377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe929a9te                        0x0000562996de14db <unavailable> + 5339

    5    libc.so.6                          0x00002b34af42d460 __libc_start_main +
    245

    6    tmpe929a9te                        0x0000562996de10b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let last = s.last ?? \" \"\n    let count = s.filter { vowels.contains($0)\
    \ }.count\n    return vowels.contains(last) ? count + 1 : count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpoose2gnk/tmpoose2gnk.swift:31: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4e753d3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4e750cab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4e750ca988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4e750c97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoose2gnk                        0x00005580528e56f4 <unavailable> + 5876

    5    libc.so.6                          0x00002b4e755bf460 __libc_start_main +
    245

    6    tmpoose2gnk                        0x00005580528e5379 <unavailable> + 4985

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpvj2isaov/tmpvj2isaov.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afb0e586c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afb0e27db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afb0e27d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afb0e27c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvj2isaov                        0x000055d62553a69b <unavailable> + 5787

    5    libc.so.6                          0x00002afb0e772460 __libc_start_main +
    245

    6    tmpvj2isaov                        0x000055d62553a279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd2ogp4j0/tmpd2ogp4j0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b98b62dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98b5fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98b5fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98b5fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd2ogp4j0                        0x000055955781678b <unavailable> + 6027

    5    libc.so.6                          0x00002b98b64cb460 __libc_start_main +
    245

    6    tmpd2ogp4j0                        0x0000559557816369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpiwxnptvh/tmpiwxnptvh.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aabe22c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aabe1fbdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aabe1fbd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aabe1fbc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiwxnptvh                        0x000055761ca427bb <unavailable> + 6075

    5    libc.so.6                          0x00002aabe24b2460 __libc_start_main +
    245

    6    tmpiwxnptvh                        0x000055761ca42399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpy7w4hu6h/tmpy7w4hu6h.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0beff4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0befc41b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0befc41988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0befc407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy7w4hu6h                        0x0000560018a6b5fb <unavailable> + 5627

    5    libc.so.6                          0x00002b0bf0136460 __libc_start_main +
    245

    6    tmpy7w4hu6h                        0x0000560018a6b1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: [Character] = [\"a\", \"\
    e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c) {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp13mpqul_/tmp13mpqul_.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba067416c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba06710db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba06710d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba06710c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp13mpqul_                        0x00005589b72ff76b <unavailable> + 5995

    5    libc.so.6                          0x00002ba067602460 __libc_start_main +
    245

    6    tmp13mpqul_                        0x00005589b72ff349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if count > 0 && s.last == \"\
    y\" {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpsgdwhmsi/tmpsgdwhmsi.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0bf2c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0befbdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0befbd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0befbc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsgdwhmsi                        0x000055e1b641e7bb <unavailable> + 6075

    5    libc.so.6                          0x00002ae0bf4b2460 __libc_start_main +
    245

    6    tmpsgdwhmsi                        0x000055e1b641e399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4qtghgfa/tmp4qtghgfa.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0b12b6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0b0fadb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0b0fad988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0b0fac7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4qtghgfa                        0x00005573fea1276b <unavailable> + 5995

    5    libc.so.6                          0x00002ab0b14a2460 __libc_start_main +
    245

    6    tmp4qtghgfa                        0x00005573fea12349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\", \"y\"]\n    for i in s {\n        if vowels.contains(String(i))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp635qlf_c/tmp635qlf_c.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b880e7b6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b880e4adb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b880e4ad988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b880e4ac7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp635qlf_c                        0x000056154841d5fb <unavailable> + 5627

    5    libc.so.6                          0x00002b880e9a2460 __libc_start_main +
    245

    6    tmp635qlf_c                        0x000056154841d1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp4qtghgfa/tmp4qtghgfa.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab0b12b6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab0b0fadb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab0b0fad988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab0b0fac7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp4qtghgfa                        0x00005573fea1276b <unavailable> + 5995

    5    libc.so.6                          0x00002ab0b14a2460 __libc_start_main +
    245

    6    tmp4qtghgfa                        0x00005573fea12349 <unavailable> + 4937

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpdkx56fow/tmpdkx56fow.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af17543ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af175131b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af175131988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af1751307b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpdkx56fow                        0x00005631169a27bb <unavailable> + 6075

    5    libc.so.6                          0x00002af175626460 __libc_start_main +
    245

    6    tmpdkx56fow                        0x00005631169a2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    let vowels: Set<Character> = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpiwxnptvh/tmpiwxnptvh.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aabe22c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aabe1fbdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aabe1fbd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aabe1fbc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpiwxnptvh                        0x000055761ca427bb <unavailable> + 6075

    5    libc.so.6                          0x00002aabe24b2460 __libc_start_main +
    245

    6    tmpiwxnptvh                        0x000055761ca42399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for i in 0..<s.count {\n        let index\
    \ = s.index(s.startIndex, offsetBy: i)\n        if vowels.contains(s[index]) {\n\
    \            count += 1\n        }\n    }\n    if s.count > 1 && s.last == \"\
    y\" {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpmi0bklfa/tmpmi0bklfa.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab877ed8c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab877bcfb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab877bcf988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab877bce7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpmi0bklfa                        0x000055e263e849fb <unavailable> + 6651

    5    libc.so.6                          0x00002ab8780c4460 __libc_start_main +
    245

    6    tmpmi0bklfa                        0x000055e263e845d9 <unavailable> + 5593

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd2ogp4j0/tmpd2ogp4j0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b98b62dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98b5fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98b5fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98b5fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd2ogp4j0                        0x000055955781678b <unavailable> + 6027

    5    libc.so.6                          0x00002b98b64cb460 __libc_start_main +
    245

    6    tmpd2ogp4j0                        0x0000559557816369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for c\
    \ in s {\n        if vowels.contains(c) {\n            count += 1\n        }\n\
    \    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpe929a9te/tmpe929a9te.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b34af241c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b34aef38b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b34aef38988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b34aef377b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpe929a9te                        0x0000562996de14db <unavailable> + 5339

    5    libc.so.6                          0x00002b34af42d460 __libc_start_main +
    245

    6    tmpe929a9te                        0x0000562996de10b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp2b1il8s7/tmp2b1il8s7.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5b134f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5b131eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5b131ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5b131e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2b1il8s7                        0x0000564da4c8264b <unavailable> + 5707

    5    libc.so.6                          0x00002b5b136df460 __libc_start_main +
    245

    6    tmp2b1il8s7                        0x0000564da4c82229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp3j8apavp/tmp3j8apavp.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ace22df4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ace22aebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ace22aeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ace22aea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp3j8apavp                        0x000055f6f1b5d69b <unavailable> + 5787

    5    libc.so.6                          0x00002ace22fe0460 __libc_start_main +
    245

    6    tmp3j8apavp                        0x000055f6f1b5d279 <unavailable> + 4729

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: [Character] = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp2b1il8s7/tmp2b1il8s7.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5b134f3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5b131eab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5b131ea988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5b131e97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2b1il8s7                        0x0000564da4c8264b <unavailable> + 5707

    5    libc.so.6                          0x00002b5b136df460 __libc_start_main +
    245

    6    tmp2b1il8s7                        0x0000564da4c82229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for char in s {\n        if vowels.contains(char)\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd6voc4dk/tmpd6voc4dk.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b757a257c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7579f4eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7579f4e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7579f4d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd6voc4dk                        0x000055b8f0ce27bb <unavailable> + 6075

    5    libc.so.6                          0x00002b757a443460 __libc_start_main +
    245

    6    tmpd6voc4dk                        0x000055b8f0ce2399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    if s.last == \"y\" {\n    \
    \    count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") ==\
    \ 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s: \"bye\") ==\
    \ 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") ==\
    \ 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd2ogp4j0/tmpd2ogp4j0.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b98b62dfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b98b5fd6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b98b5fd6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b98b5fd57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd2ogp4j0                        0x000055955781678b <unavailable> + 6027

    5    libc.so.6                          0x00002b98b64cb460 __libc_start_main +
    245

    6    tmpd2ogp4j0                        0x0000559557816369 <unavailable> + 4969

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmp1dbuqrou/tmp1dbuqrou.swift:35: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abae4d9ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abae4a95b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abae4a95988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abae4a947b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1dbuqrou                        0x000055e307c564bb <unavailable> + 5307

    5    libc.so.6                          0x00002abae4f8a460 __libc_start_main +
    245

    6    tmp1dbuqrou                        0x000055e307c56099 <unavailable> + 4249

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels: Set<Character> = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    var count = 0\n    for c in s {\n        if vowels.contains(c)\
    \ {\n            count += 1\n        }\n    }\n    if count > 0 && s.last == \"\
    y\" {\n        count += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpsgdwhmsi/tmpsgdwhmsi.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae0bf2c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae0befbdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae0befbd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae0befbc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpsgdwhmsi                        0x000055e1b641e7bb <unavailable> + 6075

    5    libc.so.6                          0x00002ae0bf4b2460 __libc_start_main +
    245

    6    tmpsgdwhmsi                        0x000055e1b641e399 <unavailable> + 5017

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var count = 0\n    for char in s {\n        if vowels.contains(String(char))\
    \ {\n            count += 1\n        }\n    }\n    return count\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(vowels_count(s: \"abcde\") == 2)\nassert(vowels_count(s:\
    \ \"Alone\") == 3)\nassert(vowels_count(s: \"key\") == 2)\nassert(vowels_count(s:\
    \ \"bye\") == 1)\nassert(vowels_count(s: \"keY\") == 2)\nassert(vowels_count(s:\
    \ \"bYe\") == 1)\nassert(vowels_count(s: \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpy7w4hu6h/tmpy7w4hu6h.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0beff4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0befc41b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b0befc41988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b0befc407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpy7w4hu6h                        0x0000560018a6b5fb <unavailable> + 5627

    5    libc.so.6                          0x00002b0bf0136460 __libc_start_main +
    245

    6    tmpy7w4hu6h                        0x0000560018a6b1d9 <unavailable> + 4569

    '
  stdout: ''
  timestamp: 1659824359
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    let vowels = \"aeiouy\"\n    var count = 0\n    for char\
    \ in s {\n        if vowels.contains(char) {\n            count += 1\n       \
    \ }\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpaoj6ljj5/tmpaoj6ljj5.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5306df6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5306aedb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5306aed988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5306aec7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpaoj6ljj5                        0x0000562d931514db <unavailable> + 5339

    5    libc.so.6                          0x00002b5306fe2460 __libc_start_main +
    245

    6    tmpaoj6ljj5                        0x0000562d931510b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for char in s {\n        if char ==\
    \ \"a\" || char == \"e\" || char == \"i\" || char == \"o\" || char == \"u\" {\n\
    \            count += 1\n        }\n    }\n    if s.last == \"y\" {\n        count\
    \ += 1\n    }\n    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(vowels_count(s:\
    \ \"abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpyg3rf23_/tmpyg3rf23_.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5473d1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5470c8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5470c8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5470c77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpyg3rf23_                        0x000055c8cc38c58b <unavailable> + 5515

    5    libc.so.6                          0x00002af5475bd460 __libc_start_main +
    245

    6    tmpyg3rf23_                        0x000055c8cc38c169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358
- exit_code: -4
  program: "\n/// Write a function vowels_count which takes a string representing\n\
    /// a word as input and returns the number of vowels in the string.\n/// Vowels\
    \ in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n/// vowel, but\
    \ only when it is at the end of the given word.\n/// Example:\n/// >>> vowels_count(s:\
    \ \"abcde\")\n/// 2\n/// >>> vowels_count(s: \"ACEDY\")\n/// 3\nfunc vowels_count(s:\
    \ String) -> Int {\n    var count = 0\n    for c in s {\n        if c == \"a\"\
    \ || c == \"e\" || c == \"i\" || c == \"o\" || c == \"u\" {\n            count\
    \ += 1\n        }\n    }\n    if s.last == \"y\" {\n        count += 1\n    }\n\
    \    return count\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(vowels_count(s: \"\
    abcde\") == 2)\nassert(vowels_count(s: \"Alone\") == 3)\nassert(vowels_count(s:\
    \ \"key\") == 2)\nassert(vowels_count(s: \"bye\") == 1)\nassert(vowels_count(s:\
    \ \"keY\") == 2)\nassert(vowels_count(s: \"bYe\") == 1)\nassert(vowels_count(s:\
    \ \"ACEDY\") == 3)"
  status: Exception
  stderr: 'tmpd8yarfom/tmpd8yarfom.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab849b15c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab84980cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab84980c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab84980b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpd8yarfom                        0x000056436d34b58b <unavailable> + 5515

    5    libc.so.6                          0x00002ab849d01460 __libc_start_main +
    245

    6    tmpd8yarfom                        0x000056436d34b169 <unavailable> + 4457

    '
  stdout: ''
  timestamp: 1659824358

name: HumanEval_140_fix_spaces
language: swift
prompt: "\n/// Given a string text, replace all spaces in it with underscores, \n\
  /// and if a string has more than 2 consecutive spaces, \n/// then replace all consecutive\
  \ spaces with - \n/// >>> fix_spaces(text: \" Example\")\n/// \"Example\"\n/// >>>\
  \ fix_spaces(text: \" Example 1\")\n/// \"Example_1\"\n/// >>> fix_spaces(text:\
  \ \" Example 2\")\n/// \"_Example_2\"\n/// >>> fix_spaces(text: \" Example 3\")\n\
  /// \"_Example-3\"\nfunc fix_spaces(text: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(fix_spaces(text: \"Example\") == \"Example\"\
  )\nassert(fix_spaces(text: \"Mudasir Hanif \") == \"Mudasir_Hanif_\")\nassert(fix_spaces(text:\
  \ \"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\nassert(fix_spaces(text:\
  \ \"Exa   mple\") == \"Exa-mple\")\nassert(fix_spaces(text: \"   Exa 1 2 2 mple\"\
  ) == \"-Exa_1_2_2_mple\")"
completions: ["    let space = \" \"\n    let underscore = \"_\"\n    let dash = \"\
    -\"\n    var result = \"\"\n    var count = 0\n    for char in text {\n      \
    \  if char == Character(space) {\n            count += 1\n            if count\
    \ > 2 {\n                result.append(Character(dash))\n            } else {\n\
    \                result.append(Character(underscore))\n            }\n       \
    \ } else {\n            result.append(char)\n            count = 0\n        }\n\
    \    }\n    return result", '    return text.replacingOccurrences(of: " ", with:
    "_")', "    let text = text.trimmingCharacters(in: .whitespaces)\n    var result\
    \ = \"\"\n    var spaceCount = 0\n    for char in text {\n        if char == \"\
    \ \" {\n            spaceCount += 1\n            if spaceCount == 2 {\n      \
    \          result += \"-\"\n            }\n        } else {\n            spaceCount\
    \ = 0\n            result += String(char)\n        }\n    }\n    return result.replacingOccurrences(of:\
    \ \" \", with: \"_\")", "    var result = \"\"\n    var last_char = \"\"\n   \
    \ for char in text {\n        if char == \" \" {\n            if last_char ==\
    \ \" \" {\n                result += \"-\"\n            } else {\n           \
    \     result += \"_\"\n            }\n        } else {\n            result +=\
    \ String(char)\n        }\n        last_char = String(char)\n    }\n    return\
    \ result", "    let text = text.trimmingCharacters(in: .whitespaces)\n    let\
    \ text = text.replacingOccurrences(of: \" \", with: \"_\")\n    let text = text.replacingOccurrences(of:\
    \ \"__\", with: \"_\")\n    let text = text.replacingOccurrences(of: \"___\",\
    \ with: \"-\")\n    return text", "    let text = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    let text = text.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return text", "    var result = \"\"\n    var previous_char = \" \"\n   \
    \ for char in text {\n        if char == \" \" {\n            if previous_char\
    \ == \" \" {\n                result += \"-\"\n            } else {\n        \
    \        result += \"_\"\n            }\n        } else {\n            result\
    \ += String(char)\n        }\n        previous_char = String(char)\n    }\n  \
    \  return result", "    var result = \"\"\n    var previous_char: Character?\n\
    \    for char in text {\n        if char == \" \" {\n            if previous_char\
    \ == \" \" {\n                result.append(\"-\")\n            } else {\n   \
    \             result.append(\"_\")\n            }\n        } else {\n        \
    \    result.append(char)\n        }\n        previous_char = char\n    }\n   \
    \ return result", "    var result = \"\"\n    var spaceCount = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            spaceCount += 1\n       \
    \     if spaceCount == 1 {\n                result += \"_\"\n            } else\
    \ if spaceCount > 2 {\n                result += \"-\"\n            }\n      \
    \  } else {\n            spaceCount = 0\n            result += String(char)\n\
    \        }\n    }\n    return result", "    let text = text.trimmingCharacters(in:\
    \ .whitespaces)\n    let text = text.replacingOccurrences(of: \" \", with: \"\
    _\")\n    let text = text.replacingOccurrences(of: \"__\", with: \"_\")\n    let\
    \ text = text.replacingOccurrences(of: \"___\", with: \"-\")\n    return text",
  "    var result = \"\"\n    var spaces = 0\n    for c in text {\n        if c ==\
    \ \" \" {\n            spaces += 1\n        } else {\n            if spaces ==\
    \ 1 {\n                result += \"_\"\n            } else if spaces > 2 {\n \
    \               result += \"-\"\n            }\n            result += String(c)\n\
    \            spaces = 0\n        }\n    }\n    return result", "    var result\
    \ = \"\"\n    var last_char = \"\"\n    var space_count = 0\n    for char in text\
    \ {\n        if char == \" \" {\n            space_count += 1\n            if\
    \ space_count == 1 {\n                result += \"_\"\n            } else if space_count\
    \ > 2 {\n                result += \"-\"\n            }\n        } else {\n  \
    \          space_count = 0\n            result += String(char)\n        }\n  \
    \      last_char = String(char)\n    }\n    return result", "    var result =\
    \ \"\"\n    var spaces = 0\n    for char in text {\n        if char == \" \" {\n\
    \            spaces += 1\n            if spaces > 2 {\n                result\
    \ += \"-\"\n            } else {\n                result += \"_\"\n          \
    \  }\n        } else {\n            spaces = 0\n            result += String(char)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    var last_char\
    \ = \"\"\n    var space_count = 0\n    for char in text {\n        if char ==\
    \ \" \" {\n            space_count += 1\n            if space_count > 2 {\n  \
    \              result.append(\"-\")\n            } else {\n                result.append(\"\
    _\")\n            }\n        } else {\n            space_count = 0\n         \
    \   result.append(char)\n        }\n        last_char = String(char)\n    }\n\
    \    return result", "    let space = \" \"\n    let underscore = \"_\"\n    let\
    \ dash = \"-\"\n    var result = text\n    while result.contains(space) {\n  \
    \      result = result.replacingOccurrences(of: space, with: underscore)\n   \
    \ }\n    while result.contains(underscore + underscore) {\n        result = result.replacingOccurrences(of:\
    \ underscore + underscore, with: dash)\n    }\n    return result", "    let newText\
    \ = text.replacingOccurrences(of: \" \", with: \"_\")\n    let newText2 = newText.replacingOccurrences(of:\
    \ \"__\", with: \"-\")\n    return newText2", "    var result = \"\"\n    var\
    \ space_count = 0\n    for char in text {\n        if char == \" \" {\n      \
    \      space_count += 1\n            if space_count == 1 {\n                result\
    \ += \"_\"\n            } else if space_count > 2 {\n                result +=\
    \ \"-\"\n            }\n        } else {\n            space_count = 0\n      \
    \      result += String(char)\n        }\n    }\n    return result", "    var\
    \ result = text\n    result = result.replacingOccurrences(of: \" \", with: \"\
    _\")\n    result = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return result",
  "    var result = \"\"\n    var spaces = 0\n    for char in text {\n        if char\
    \ == \" \" {\n            spaces += 1\n            if spaces == 1 {\n        \
    \        result += \"_\"\n            } else if spaces == 2 {\n              \
    \  result += \"-\"\n            }\n        } else {\n            spaces = 0\n\
    \            result += String(char)\n        }\n    }\n    return result", " \
    \   var result = \"\"\n    var space_count = 0\n    for char in text {\n     \
    \   if char == \" \" {\n            space_count += 1\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"_\"\n            } else {\n               \
    \ result += \"-\"\n            }\n        } else {\n            space_count =\
    \ 0\n            result += String(char)\n        }\n    }\n    return result"]
stop_tokens:
- "\n}"

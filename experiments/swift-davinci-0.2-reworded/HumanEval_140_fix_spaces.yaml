name: HumanEval_140_fix_spaces
language: swift
prompt: "\n/// Given a string text, replace all spaces in it with underscores, \n\
  /// and if a string has more than 2 consecutive spaces, \n/// then replace all consecutive\
  \ spaces with - \n/// >>> fix_spaces(text: \" Example\")\n/// \"Example\"\n/// >>>\
  \ fix_spaces(text: \" Example 1\")\n/// \"Example_1\"\n/// >>> fix_spaces(text:\
  \ \" Example 2\")\n/// \"_Example_2\"\n/// >>> fix_spaces(text: \" Example 3\")\n\
  /// \"_Example-3\"\nfunc fix_spaces(text: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(fix_spaces(text: \"Example\") == \"Example\"\
  )\nassert(fix_spaces(text: \"Mudasir Hanif \") == \"Mudasir_Hanif_\")\nassert(fix_spaces(text:\
  \ \"Yellow Yellow  Dirty  Fellow\") == \"Yellow_Yellow__Dirty__Fellow\")\nassert(fix_spaces(text:\
  \ \"Exa   mple\") == \"Exa-mple\")\nassert(fix_spaces(text: \"   Exa 1 2 2 mple\"\
  ) == \"-Exa_1_2_2_mple\")"
completions: ["    let space = \" \"\n    let underscore = \"_\"\n    let dash = \"\
    -\"\n    var result = \"\"\n    var count = 0\n    for char in text {\n      \
    \  if char == Character(space) {\n            count += 1\n            if count\
    \ > 2 {\n                result.append(Character(dash))\n            } else {\n\
    \                result.append(Character(underscore))\n            }\n       \
    \ } else {\n            result.append(char)\n            count = 0\n        }\n\
    \    }\n    return result", '    return text.replacingOccurrences(of: " ", with:
    "_")', "    let text = text.trimmingCharacters(in: .whitespaces)\n    var result\
    \ = \"\"\n    var spaceCount = 0\n    for char in text {\n        if char == \"\
    \ \" {\n            spaceCount += 1\n            if spaceCount == 2 {\n      \
    \          result += \"-\"\n            }\n        } else {\n            spaceCount\
    \ = 0\n            result += String(char)\n        }\n    }\n    return result.replacingOccurrences(of:\
    \ \" \", with: \"_\")", "    var result = \"\"\n    var last_char = \"\"\n   \
    \ for char in text {\n        if char == \" \" {\n            if last_char ==\
    \ \" \" {\n                result += \"-\"\n            } else {\n           \
    \     result += \"_\"\n            }\n        } else {\n            result +=\
    \ String(char)\n        }\n        last_char = String(char)\n    }\n    return\
    \ result", "    let text = text.trimmingCharacters(in: .whitespaces)\n    let\
    \ text = text.replacingOccurrences(of: \" \", with: \"_\")\n    let text = text.replacingOccurrences(of:\
    \ \"__\", with: \"_\")\n    let text = text.replacingOccurrences(of: \"___\",\
    \ with: \"-\")\n    return text", "    let text = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    let text = text.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return text", "    var result = \"\"\n    var previous_char = \" \"\n   \
    \ for char in text {\n        if char == \" \" {\n            if previous_char\
    \ == \" \" {\n                result += \"-\"\n            } else {\n        \
    \        result += \"_\"\n            }\n        } else {\n            result\
    \ += String(char)\n        }\n        previous_char = String(char)\n    }\n  \
    \  return result", "    var result = \"\"\n    var previous_char: Character?\n\
    \    for char in text {\n        if char == \" \" {\n            if previous_char\
    \ == \" \" {\n                result.append(\"-\")\n            } else {\n   \
    \             result.append(\"_\")\n            }\n        } else {\n        \
    \    result.append(char)\n        }\n        previous_char = char\n    }\n   \
    \ return result", "    var result = \"\"\n    var spaceCount = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            spaceCount += 1\n       \
    \     if spaceCount == 1 {\n                result += \"_\"\n            } else\
    \ if spaceCount > 2 {\n                result += \"-\"\n            }\n      \
    \  } else {\n            spaceCount = 0\n            result += String(char)\n\
    \        }\n    }\n    return result", "    let text = text.trimmingCharacters(in:\
    \ .whitespaces)\n    let text = text.replacingOccurrences(of: \" \", with: \"\
    _\")\n    let text = text.replacingOccurrences(of: \"__\", with: \"_\")\n    let\
    \ text = text.replacingOccurrences(of: \"___\", with: \"-\")\n    return text",
  "    var result = \"\"\n    var spaces = 0\n    for c in text {\n        if c ==\
    \ \" \" {\n            spaces += 1\n        } else {\n            if spaces ==\
    \ 1 {\n                result += \"_\"\n            } else if spaces > 2 {\n \
    \               result += \"-\"\n            }\n            result += String(c)\n\
    \            spaces = 0\n        }\n    }\n    return result", "    var result\
    \ = \"\"\n    var last_char = \"\"\n    var space_count = 0\n    for char in text\
    \ {\n        if char == \" \" {\n            space_count += 1\n            if\
    \ space_count == 1 {\n                result += \"_\"\n            } else if space_count\
    \ > 2 {\n                result += \"-\"\n            }\n        } else {\n  \
    \          space_count = 0\n            result += String(char)\n        }\n  \
    \      last_char = String(char)\n    }\n    return result", "    var result =\
    \ \"\"\n    var spaces = 0\n    for char in text {\n        if char == \" \" {\n\
    \            spaces += 1\n            if spaces > 2 {\n                result\
    \ += \"-\"\n            } else {\n                result += \"_\"\n          \
    \  }\n        } else {\n            spaces = 0\n            result += String(char)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    var last_char\
    \ = \"\"\n    var space_count = 0\n    for char in text {\n        if char ==\
    \ \" \" {\n            space_count += 1\n            if space_count > 2 {\n  \
    \              result.append(\"-\")\n            } else {\n                result.append(\"\
    _\")\n            }\n        } else {\n            space_count = 0\n         \
    \   result.append(char)\n        }\n        last_char = String(char)\n    }\n\
    \    return result", "    let space = \" \"\n    let underscore = \"_\"\n    let\
    \ dash = \"-\"\n    var result = text\n    while result.contains(space) {\n  \
    \      result = result.replacingOccurrences(of: space, with: underscore)\n   \
    \ }\n    while result.contains(underscore + underscore) {\n        result = result.replacingOccurrences(of:\
    \ underscore + underscore, with: dash)\n    }\n    return result", "    let newText\
    \ = text.replacingOccurrences(of: \" \", with: \"_\")\n    let newText2 = newText.replacingOccurrences(of:\
    \ \"__\", with: \"-\")\n    return newText2", "    var result = \"\"\n    var\
    \ space_count = 0\n    for char in text {\n        if char == \" \" {\n      \
    \      space_count += 1\n            if space_count == 1 {\n                result\
    \ += \"_\"\n            } else if space_count > 2 {\n                result +=\
    \ \"-\"\n            }\n        } else {\n            space_count = 0\n      \
    \      result += String(char)\n        }\n    }\n    return result", "    var\
    \ result = text\n    result = result.replacingOccurrences(of: \" \", with: \"\
    _\")\n    result = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return result",
  "    var result = \"\"\n    var spaces = 0\n    for char in text {\n        if char\
    \ == \" \" {\n            spaces += 1\n            if spaces == 1 {\n        \
    \        result += \"_\"\n            } else if spaces == 2 {\n              \
    \  result += \"-\"\n            }\n        } else {\n            spaces = 0\n\
    \            result += String(char)\n        }\n    }\n    return result", " \
    \   var result = \"\"\n    var space_count = 0\n    for char in text {\n     \
    \   if char == \" \" {\n            space_count += 1\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"_\"\n            } else {\n               \
    \ result += \"-\"\n            }\n        } else {\n            space_count =\
    \ 0\n            result += String(char)\n        }\n    }\n    return result",
  "    var result = \"\"\n    var spaceCount = 0\n    for char in text {\n       \
    \ if char == \" \" {\n            spaceCount += 1\n            if spaceCount ==\
    \ 2 {\n                result += \"-\"\n            }\n        } else {\n    \
    \        spaceCount = 0\n            result += String(char)\n        }\n    }\n\
    \    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    let text = text.trimmingCharacters(in: .whitespaces)\n\
    \    let text = text.replacingOccurrences(of: \" \", with: \"_\")\n    let text\
    \ = text.replacingOccurrences(of: \"__\", with: \"_\")\n    let text = text.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return text", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    var result = \"\"\n    var space_count = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            space_count += 1\n      \
    \      if space_count == 1 {\n                result += \"_\"\n            } else\
    \ if space_count == 2 {\n                result += \"_\"\n            } else {\n\
    \                result += \"-\"\n            }\n        } else {\n          \
    \  space_count = 0\n            result += String(char)\n        }\n    }\n   \
    \ return result", '    return text.replacingOccurrences(of: " ", with: "_")',
  "    var result = \"\"\n    var spaceCount = 0\n    for char in text {\n       \
    \ if char == \" \" {\n            spaceCount += 1\n            if spaceCount ==\
    \ 2 {\n                result += \"-\"\n            }\n        } else {\n    \
    \        spaceCount = 0\n            result += String(char)\n        }\n    }\n\
    \    return result", "    var result = \"\"\n    var lastChar = \"\"\n    var\
    \ lastCharIsSpace = false\n    var count = 0\n    for char in text {\n       \
    \ if char == \" \" {\n            if lastCharIsSpace {\n                count\
    \ += 1\n            } else {\n                count = 1\n            }\n     \
    \       lastCharIsSpace = true\n        } else {\n            if lastCharIsSpace\
    \ {\n                if count == 1 {\n                    result += \"_\"\n  \
    \              } else if count > 1 {\n                    result += \"-\"\n  \
    \              }\n            }\n            result += String(char)\n        \
    \    lastCharIsSpace = false\n        }\n        lastChar = String(char)\n   \
    \ }\n    return result", "    let space = \" \"\n    let underscore = \"_\"\n\
    \    let dash = \"-\"\n    var result = \"\"\n    var count = 0\n    for char\
    \ in text {\n        if char == Character(space) {\n            count += 1\n \
    \           if count == 1 {\n                result += underscore\n          \
    \  } else if count == 2 {\n                result += dash\n            }\n   \
    \     } else {\n            count = 0\n            result += String(char)\n  \
    \      }\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_").replacingOccurrences(of: "__", with: "-")', "    var result =\
    \ \"\"\n    var space_count = 0\n    for c in text {\n        if c == \" \" {\n\
    \            space_count += 1\n            if space_count == 1 {\n           \
    \     result += \"_\"\n            } else if space_count == 2 {\n            \
    \    result += \"_\"\n            } else {\n                result += \"-\"\n\
    \            }\n        } else {\n            space_count = 0\n            result\
    \ += String(c)\n        }\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_")', '    return text.replacingOccurrences(of: " ", with: "_").replacingOccurrences(of:
    "__", with: "-")', "    var result = \"\"\n    var space_count = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            space_count += 1\n      \
    \      if space_count == 1 {\n                result += \"_\"\n            } else\
    \ if space_count == 2 {\n                result += \"-\"\n            }\n    \
    \    } else {\n            result += String(char)\n            space_count = 0\n\
    \        }\n    }\n    return result", "    let result = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    return result", "    var result = \"\"\n    var prevChar\
    \ = \"\"\n    var prevPrevChar = \"\"\n    for char in text {\n        if char\
    \ == \" \" {\n            if prevChar == \" \" {\n                if prevPrevChar\
    \ == \" \" {\n                    result += \"-\"\n                } else {\n\
    \                    result += \"_\"\n                }\n            } else {\n\
    \                result += \"_\"\n            }\n        } else {\n          \
    \  result += String(char)\n        }\n        prevPrevChar = prevChar\n      \
    \  prevChar = String(char)\n    }\n    return result", "    let regex = try! NSRegularExpression(pattern:\
    \ \"\\\\s+\", options: [])\n    return regex.stringByReplacingMatches(in: text,\
    \ options: [], range: NSRange(location: 0, length: text.count), withTemplate:\
    \ \"_\")", "    var result = \"\"\n    var spaceCount = 0\n    for char in text\
    \ {\n        if char == \" \" {\n            spaceCount += 1\n            if spaceCount\
    \ == 1 {\n                result += \"_\"\n            } else if spaceCount >\
    \ 2 {\n                result += \"-\"\n            }\n        } else {\n    \
    \        spaceCount = 0\n            result += String(char)\n        }\n    }\n\
    \    return result", "    var result = text.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"__\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var spaceCount = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            spaceCount += 1\n       \
    \     if spaceCount > 2 {\n                result += \"-\"\n            } else\
    \ {\n                result += \"_\"\n            }\n        } else {\n      \
    \      result += String(char)\n            spaceCount = 0\n        }\n    }\n\
    \    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var prev = \"\"\n    for char\
    \ in text {\n        if char == \" \" {\n            if prev == \" \" {\n    \
    \            result += \"-\"\n            } else {\n                result +=\
    \ \"_\"\n            }\n        } else {\n            result += String(char)\n\
    \        }\n        prev = String(char)\n    }\n    return result", "    var result\
    \ = \"\"\n    var prevChar = \" \"\n    for char in text {\n        if char ==\
    \ \" \" {\n            if prevChar == \" \" {\n                result += \"-\"\
    \n            } else {\n                result += \"_\"\n            }\n     \
    \   } else {\n            result += String(char)\n        }\n        prevChar\
    \ = String(char)\n    }\n    return result", "    var result = \"\"\n    var spaceCount\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            spaceCount\
    \ += 1\n            if spaceCount > 2 {\n                result += \"-\"\n   \
    \         } else {\n                result += \"_\"\n            }\n        }\
    \ else {\n            spaceCount = 0\n            result += String(char)\n   \
    \     }\n    }\n    return result", "    var result = \"\"\n    var last_char\
    \ = \"\"\n    var space_count = 0\n    for char in text {\n        if char ==\
    \ \" \" {\n            space_count += 1\n            if space_count > 2 {\n  \
    \              result += \"-\"\n            } else {\n                result +=\
    \ \"_\"\n            }\n        } else {\n            space_count = 0\n      \
    \      result += String(char)\n        }\n        last_char = String(char)\n \
    \   }\n    return result", "    var result = \"\"\n    var previous_char: Character?\n\
    \    for char in text {\n        if char == \" \" {\n            if previous_char\
    \ == \" \" {\n                result.append(\"-\")\n            } else {\n   \
    \             result.append(\"_\")\n            }\n        } else {\n        \
    \    result.append(char)\n        }\n        previous_char = char\n    }\n   \
    \ return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    let text = text.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    let text = text.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ text", "    let result = text.replacingOccurrences(of: \" \", with: \"_\")\n\
    \    return result", '    return text.replacingOccurrences(of: " ", with: "_")',
  "    var text = text\n    text = text.replacingOccurrences(of: \" \", with: \"_\"\
    )\n    text = text.replacingOccurrences(of: \"__\", with: \"_\")\n    text = text.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return text", "    var result = text\n    result\
    \ = result.replacingOccurrences(of: \" \", with: \"_\")\n    result = result.replacingOccurrences(of:\
    \ \"__\", with: \"_\")\n    result = result.replacingOccurrences(of: \"___\",\
    \ with: \"-\")\n    return result", "    var result = \"\"\n    var last_char\
    \ = \"\"\n    for char in text {\n        if char == \" \" {\n            if last_char\
    \ == \" \" {\n                result += \"-\"\n            } else {\n        \
    \        result += \"_\"\n            }\n        } else {\n            result\
    \ += String(char)\n        }\n        last_char = String(char)\n    }\n    return\
    \ result", "    let result = text.replacingOccurrences(of: \" \", with: \"_\"\
    )\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", '    return text.replacingOccurrences(of: " ", with: "_")',
  '    return text.replacingOccurrences(of: " ", with: "_")', "    let text = text.trimmingCharacters(in:\
    \ .whitespaces)\n    let text = text.replacingOccurrences(of: \" \", with: \"\
    _\")\n    let text = text.replacingOccurrences(of: \"__\", with: \"_\")\n    let\
    \ text = text.replacingOccurrences(of: \"___\", with: \"-\")\n    return text",
  "    var result = \"\"\n    var last_char = \"\"\n    var last_char_is_space = false\n\
    \    for char in text {\n        if char == \" \" {\n            if last_char_is_space\
    \ {\n                result += \"-\"\n            } else {\n                result\
    \ += \"_\"\n            }\n            last_char_is_space = true\n        } else\
    \ {\n            result += String(char)\n            last_char_is_space = false\n\
    \        }\n        last_char = String(char)\n    }\n    return result", '    return
    text.replacingOccurrences(of: " ", with: "_").replacingOccurrences(of: "__", with:
    "-")', "    var result = \"\"\n    var prevChar = \"\"\n    for char in text {\n\
    \        if char == \" \" {\n            if prevChar == \" \" {\n            \
    \    result += \"-\"\n            } else {\n                result += \"_\"\n\
    \            }\n        } else {\n            result += String(char)\n       \
    \ }\n        prevChar = String(char)\n    }\n    return result", "    var result\
    \ = \"\"\n    var prev_char = \"\"\n    var space_count = 0\n    for char in text\
    \ {\n        if char == \" \" {\n            space_count += 1\n            if\
    \ space_count > 2 {\n                result += \"-\"\n            } else {\n \
    \               result += \"_\"\n            }\n        } else {\n           \
    \ space_count = 0\n            result += String(char)\n        }\n        prev_char\
    \ = String(char)\n    }\n    return result", "    var result = \"\"\n    var prev_char\
    \ = \"\"\n    var count = 0\n    for char in text {\n        if char == \" \"\
    \ {\n            if prev_char == \" \" {\n                count += 1\n       \
    \     } else {\n                count = 1\n            }\n            if count\
    \ > 2 {\n                result += \"-\"\n            } else {\n             \
    \   result += \"_\"\n            }\n        } else {\n            result += String(char)\n\
    \            count = 0\n        }\n        prev_char = String(char)\n    }\n \
    \   return result", "    var result = \"\"\n    var lastChar = \"\"\n    var lastCharCount\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            if lastChar\
    \ == \" \" {\n                lastCharCount += 1\n            } else {\n     \
    \           lastChar = \" \"\n                lastCharCount = 1\n            }\n\
    \            if lastCharCount > 2 {\n                result += \"-\"\n       \
    \     } else {\n                result += \"_\"\n            }\n        } else\
    \ {\n            result += String(char)\n            lastChar = String(char)\n\
    \            lastCharCount = 0\n        }\n    }\n    return result", '    return
    text.replacingOccurrences(of: " ", with: "_")', "    let space = \" \"\n    let\
    \ underscore = \"_\"\n    let dash = \"-\"\n    var result = text\n    result\
    \ = result.replacingOccurrences(of: space, with: underscore)\n    result = result.replacingOccurrences(of:\
    \ space + space + space, with: dash)\n    return result", "    var result = \"\
    \"\n    var prev_char = \"\"\n    var space_count = 0\n    for char in text {\n\
    \        if char == \" \" {\n            space_count += 1\n            if space_count\
    \ > 2 {\n                continue\n            }\n        } else {\n         \
    \   space_count = 0\n        }\n        if prev_char == \" \" && char == \" \"\
    \ {\n            result.append(\"-\")\n        } else {\n            result.append(char)\n\
    \        }\n        prev_char = char\n    }\n    return result", "    var result\
    \ = text\n    result = result.replacingOccurrences(of: \" \", with: \"_\")\n \
    \   result = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return result",
  "    var result = \"\"\n    var space_count = 0\n    for char in text {\n      \
    \  if char == \" \" {\n            space_count += 1\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"_\"\n            } else {\n               \
    \ result += \"-\"\n            }\n        } else {\n            space_count =\
    \ 0\n            result += String(char)\n        }\n    }\n    return result",
  "    var result = text\n    result = result.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ result", "    var result = \"\"\n    var space_count = 0\n    for char in text\
    \ {\n        if char == \" \" {\n            space_count += 1\n            if\
    \ space_count == 1 {\n                result += \"_\"\n            } else if space_count\
    \ == 2 {\n                result += \"-\"\n            }\n        } else {\n \
    \           result += String(char)\n            space_count = 0\n        }\n \
    \   }\n    return result", '    return text.replacingOccurrences(of: " ", with:
    "_").replacingOccurrences(of: "__", with: "-")', "    var result = \"\"\n    var\
    \ previousChar = \"\"\n    for char in text {\n        if char == \" \" {\n  \
    \          if previousChar == \" \" {\n                result += \"-\"\n     \
    \       } else {\n                result += \"_\"\n            }\n        } else\
    \ {\n            result += String(char)\n        }\n        previousChar = String(char)\n\
    \    }\n    return result", "    var result = \"\"\n    var last_char = \"\"\n\
    \    var consecutive_spaces = 0\n    for char in text {\n        if char == \"\
    \ \" {\n            if last_char == \" \" {\n                consecutive_spaces\
    \ += 1\n            } else {\n                consecutive_spaces = 1\n       \
    \     }\n            if consecutive_spaces > 2 {\n                result += \"\
    -\"\n            } else {\n                result += \"_\"\n            }\n  \
    \      } else {\n            consecutive_spaces = 0\n            result += String(char)\n\
    \        }\n        last_char = String(char)\n    }\n    return result", "   \
    \ var result = \"\"\n    var spaceCount = 0\n    for char in text {\n        if\
    \ char == \" \" {\n            spaceCount += 1\n            if spaceCount == 2\
    \ {\n                result += \"-\"\n            }\n        } else {\n      \
    \      spaceCount = 0\n            result += String(char)\n        }\n    }\n\
    \    return result", "    var result = \"\"\n    var last_char = \"\"\n    for\
    \ char in text {\n        if char == \" \" {\n            if last_char == \" \"\
    \ {\n                result += \"-\"\n            } else {\n                result\
    \ += \"_\"\n            }\n        } else {\n            result += String(char)\n\
    \        }\n        last_char = String(char)\n    }\n    return result", "   \
    \ var result = \"\"\n    var space_count = 0\n    for char in text {\n       \
    \ if char == \" \" {\n            space_count += 1\n            if space_count\
    \ == 2 {\n                result += \"-\"\n            }\n        } else {\n \
    \           space_count = 0\n            result += String(char)\n        }\n \
    \   }\n    return result", "    var result = text.replacingOccurrences(of: \"\
    \ \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = text.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ result", "    var result = \"\"\n    var spaceCount = 0\n    for char in text\
    \ {\n        if char == \" \" {\n            spaceCount += 1\n            if spaceCount\
    \ == 1 {\n                result += \"_\"\n            } else if spaceCount ==\
    \ 2 {\n                result += \"_\"\n            } else {\n               \
    \ result += \"-\"\n            }\n        } else {\n            spaceCount = 0\n\
    \            result += String(char)\n        }\n    }\n    return result", " \
    \   var result = \"\"\n    var spaces = 0\n    for char in text {\n        if\
    \ char == \" \" {\n            spaces += 1\n        } else {\n            if spaces\
    \ == 1 {\n                result += \"_\"\n            } else if spaces > 2 {\n\
    \                result += \"-\"\n            }\n            result += String(char)\n\
    \            spaces = 0\n        }\n    }\n    return result", "    var result\
    \ = \"\"\n    var spaceCount = 0\n    for char in text {\n        if char == \"\
    \ \" {\n            spaceCount += 1\n            if spaceCount == 2 {\n      \
    \          result += \"-\"\n            }\n        } else {\n            spaceCount\
    \ = 0\n            result += String(char)\n        }\n    }\n    return result",
  "    let text = text.trimmingCharacters(in: .whitespaces)\n    let text = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    let text = text.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return text", "    let text = text.trimmingCharacters(in: .whitespaces)\n\
    \    var result = text.replacingOccurrences(of: \" \", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result = result.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return result", "    var result = text\n    result\
    \ = result.replacingOccurrences(of: \" \", with: \"_\")\n    result = result.replacingOccurrences(of:\
    \ \"__\", with: \"_\")\n    result = result.replacingOccurrences(of: \"___\",\
    \ with: \"-\")\n    return result", "    let space = \" \"\n    let underscore\
    \ = \"_\"\n    let dash = \"-\"\n    var result = text\n    while result.contains(space)\
    \ {\n        result = result.replacingOccurrences(of: space, with: underscore)\n\
    \    }\n    while result.contains(underscore + underscore) {\n        result =\
    \ result.replacingOccurrences(of: underscore + underscore, with: dash)\n    }\n\
    \    return result", "    var result = \"\"\n    var last_char = \"\"\n    var\
    \ last_last_char = \"\"\n    for char in text {\n        if char == \" \" {\n\
    \            if last_char == \" \" {\n                if last_last_char == \"\
    \ \" {\n                    result += \"-\"\n                } else {\n      \
    \              result += \"_\"\n                }\n            } else {\n    \
    \            result += \"_\"\n            }\n        } else {\n            result\
    \ += String(char)\n        }\n        last_last_char = last_char\n        last_char\
    \ = String(char)\n    }\n    return result", "    var result = \"\"\n    var previous_char\
    \ = \"\"\n    for char in text {\n        if char == \" \" {\n            if previous_char\
    \ == \" \" {\n                result += \"-\"\n            } else {\n        \
    \        result += \"_\"\n            }\n        } else {\n            result\
    \ += String(char)\n        }\n        previous_char = String(char)\n    }\n  \
    \  return result", '    return text.replacingOccurrences(of: " ", with: "_")',
  "    let space = \" \"\n    let underscore = \"_\"\n    let dash = \"-\"\n    var\
    \ result = text\n    var spaceCount = 0\n    for i in 0..<result.count {\n   \
    \     let index = result.index(result.startIndex, offsetBy: i)\n        if result[index]\
    \ == Character(space) {\n            spaceCount += 1\n            if spaceCount\
    \ > 2 {\n                result.replaceSubrange(index..<result.index(after: index),\
    \ with: dash)\n            } else {\n                result.replaceSubrange(index..<result.index(after:\
    \ index), with: underscore)\n            }\n        } else {\n            spaceCount\
    \ = 0\n        }\n    }\n    return result", "    let regex = try! NSRegularExpression(pattern:\
    \ \"\\\\s{2,}\", options: [])\n    return regex.stringByReplacingMatches(in: text,\
    \ options: [], range: NSRange(location: 0, length: text.count), withTemplate:\
    \ \"-\")\n        .replacingOccurrences(of: \" \", with: \"_\")", "    var result\
    \ = \"\"\n    var space_count = 0\n    for char in text {\n        if char ==\
    \ \" \" {\n            space_count += 1\n            if space_count == 1 {\n \
    \               result += \"_\"\n            } else if space_count > 2 {\n   \
    \             result += \"-\"\n            }\n        } else {\n            space_count\
    \ = 0\n            result += String(char)\n        }\n    }\n    return result",
  "    let text = text.trimmingCharacters(in: .whitespaces)\n    var result = \"\"\
    \n    var count = 0\n    for char in text {\n        if char == \" \" {\n    \
    \        count += 1\n            if count == 1 {\n                result += \"\
    _\"\n            } else if count == 2 {\n                result += \"_\"\n   \
    \         } else {\n                result += \"-\"\n            }\n        }\
    \ else {\n            count = 0\n            result += String(char)\n        }\n\
    \    }\n    return result", "    let space = \" \"\n    let underscore = \"_\"\
    \n    let dash = \"-\"\n    var result = \"\"\n    var count = 0\n    for char\
    \ in text {\n        if char == Character(space) {\n            count += 1\n \
    \           if count == 1 {\n                result += underscore\n          \
    \  } else if count == 2 {\n                result += dash\n            }\n   \
    \     } else {\n            count = 0\n            result += String(char)\n  \
    \      }\n    }\n    return result", "    let space = \" \"\n    let underscore\
    \ = \"_\"\n    let dash = \"-\"\n    var result = text\n    while result.contains(space)\
    \ {\n        result = result.replacingOccurrences(of: space, with: underscore)\n\
    \    }\n    while result.contains(underscore + underscore) {\n        result =\
    \ result.replacingOccurrences(of: underscore + underscore, with: dash)\n    }\n\
    \    return result", "    var result = \"\"\n    var space_count = 0\n    for\
    \ char in text {\n        if char == \" \" {\n            space_count += 1\n \
    \           if space_count > 2 {\n                result += \"-\"\n          \
    \  } else {\n                result += \"_\"\n            }\n        } else {\n\
    \            result += String(char)\n            space_count = 0\n        }\n\
    \    }\n    return result", "    var result = \"\"\n    var spaceCount = 0\n \
    \   for char in text {\n        if char == \" \" {\n            spaceCount +=\
    \ 1\n            if spaceCount == 1 {\n                result += \"_\"\n     \
    \       } else if spaceCount == 2 {\n                result += \"-\"\n       \
    \     }\n        } else {\n            spaceCount = 0\n            result += String(char)\n\
    \        }\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    var result = \"\"\n    var count = 0\n    for char in text\
    \ {\n        if char == \" \" {\n            count += 1\n            if count\
    \ == 2 {\n                result += \"-\"\n            }\n        } else {\n \
    \           result += String(char)\n            count = 0\n        }\n    }\n\
    \    return result", "    let text = text.trimmingCharacters(in: .whitespaces)\n\
    \    var fixedText = text.replacingOccurrences(of: \" \", with: \"_\")\n    fixedText\
    \ = fixedText.replacingOccurrences(of: \"__\", with: \"-\")\n    return fixedText",
  "    let space_regex = try! NSRegularExpression(pattern: \"\\\\s+\", options: [])\n\
    \    let underscore_regex = try! NSRegularExpression(pattern: \"\\\\s\", options:\
    \ [])\n    let range = NSRange(location: 0, length: text.count)\n    let underscore_text\
    \ = underscore_regex.stringByReplacingMatches(in: text, options: [], range: range,\
    \ withTemplate: \"_\")\n    let fixed_text = space_regex.stringByReplacingMatches(in:\
    \ underscore_text, options: [], range: range, withTemplate: \"-\")\n    return\
    \ fixed_text", "    var result = \"\"\n    var prev_char = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count == 1 {\n                result += \"_\"\n \
    \           } else if space_count == 2 {\n                result += \"-\"\n  \
    \          }\n        } else {\n            space_count = 0\n            result\
    \ += String(char)\n        }\n        prev_char = String(char)\n    }\n    return\
    \ result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", '    return text.replacingOccurrences(of: " ", with: "_")',
  "    var result = \"\"\n    var previous_char: Character?\n    for char in text\
    \ {\n        if char == \" \" {\n            if previous_char == \" \" {\n   \
    \             result.append(\"-\")\n            } else {\n                result.append(\"\
    _\")\n            }\n        } else {\n            result.append(char)\n     \
    \   }\n        previous_char = char\n    }\n    return result", "    var result\
    \ = text\n    result = result.replacingOccurrences(of: \" \", with: \"_\")\n \
    \   result = result.replacingOccurrences(of: \"__\", with: \"_\")\n    result\
    \ = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return result",
  "    var result = \"\"\n    var spaces = 0\n    for char in text {\n        if char\
    \ == \" \" {\n            spaces += 1\n            if spaces > 2 {\n         \
    \       result += \"-\"\n            } else {\n                result += \"_\"\
    \n            }\n        } else {\n            spaces = 0\n            result\
    \ += String(char)\n        }\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    var result = \"\"\n    var spaces = 0\n    for char in\
    \ text {\n        if char == \" \" {\n            spaces += 1\n            if\
    \ spaces > 2 {\n                result += \"-\"\n            } else {\n      \
    \          result += \"_\"\n            }\n        } else {\n            result\
    \ += String(char)\n            spaces = 0\n        }\n    }\n    return result",
  "    var result = \"\"\n    var lastChar = \"\"\n    var spaceCount = 0\n    for\
    \ char in text {\n        if char == \" \" {\n            spaceCount += 1\n  \
    \          if spaceCount > 2 {\n                continue\n            }\n    \
    \    } else {\n            spaceCount = 0\n        }\n        if char == \" \"\
    \ && lastChar == \" \" {\n            result.removeLast()\n            result.append(\"\
    -\")\n        } else {\n            result.append(char)\n        }\n        lastChar\
    \ = char\n    }\n    return result", "    var result = \"\"\n    var previous_space\
    \ = false\n    for c in text {\n        if c == \" \" {\n            if previous_space\
    \ {\n                result += \"-\"\n            } else {\n                result\
    \ += \"_\"\n            }\n            previous_space = true\n        } else {\n\
    \            result += String(c)\n            previous_space = false\n       \
    \ }\n    }\n    return result", '    return text.replacingOccurrences(of: " ",
    with: "_")', "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    let text = text.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    let text = text.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ text", "    var result = \"\"\n    var spaceCount = 0\n    for char in text\
    \ {\n        if char == \" \" {\n            spaceCount += 1\n            if spaceCount\
    \ == 1 {\n                result += \"_\"\n            } else if spaceCount ==\
    \ 2 {\n                result += \"-\"\n            }\n        } else {\n    \
    \        spaceCount = 0\n            result += String(char)\n        }\n    }\n\
    \    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var last_char = \"\"\n    for\
    \ char in text {\n        if char == \" \" {\n            if last_char == \" \"\
    \ {\n                result += \"-\"\n            } else {\n                result\
    \ += \"_\"\n            }\n        } else {\n            result += String(char)\n\
    \        }\n        last_char = String(char)\n    }\n    return result", "   \
    \ var result = \"\"\n    var lastChar = \"\"\n    var lastCharIsSpace = false\n\
    \    for char in text {\n        if char == \" \" {\n            if lastCharIsSpace\
    \ {\n                result += \"-\"\n            } else {\n                result\
    \ += \"_\"\n            }\n            lastCharIsSpace = true\n        } else\
    \ {\n            result += String(char)\n            lastCharIsSpace = false\n\
    \        }\n        lastChar = String(char)\n    }\n    return result", "    let\
    \ result = text.replacingOccurrences(of: \" \", with: \"_\")\n    let result2\
    \ = result.replacingOccurrences(of: \"__\", with: \"-\")\n    return result2",
  '    return text.replacingOccurrences(of: " ", with: "_").replacingOccurrences(of:
    "__", with: "-")', "    var result = \"\"\n    var space_count = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            space_count += 1\n      \
    \      if space_count == 1 {\n                result += \"_\"\n            } else\
    \ if space_count == 2 {\n                result += \"-\"\n            }\n    \
    \    } else {\n            space_count = 0\n            result += String(char)\n\
    \        }\n    }\n    return result", "    var result = \"\"\n    var prev =\
    \ \"\"\n    var count = 0\n    for char in text {\n        if char == \" \" {\n\
    \            if prev == \" \" {\n                count += 1\n            } else\
    \ {\n                count = 1\n            }\n            if count > 2 {\n  \
    \              result += \"-\"\n            } else {\n                result +=\
    \ \"_\"\n            }\n        } else {\n            result += String(char)\n\
    \            count = 0\n        }\n        prev = String(char)\n    }\n    return\
    \ result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = text.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ result", "    var result = \"\"\n    var space_count = 0\n    for c in text\
    \ {\n        if c == \" \" {\n            space_count += 1\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"_\"\n            } else {\n               \
    \ result += \"-\"\n            }\n        } else {\n            space_count =\
    \ 0\n            result += String(c)\n        }\n    }\n    return result", '    return
    text.replacingOccurrences(of: " ", with: "_").replacingOccurrences(of: "__", with:
    "-")', "    var result = \"\"\n    var space_count = 0\n    for c in text {\n\
    \        if c == \" \" {\n            space_count += 1\n            if space_count\
    \ > 2 {\n                result += \"-\"\n            } else {\n             \
    \   result += \"_\"\n            }\n        } else {\n            space_count\
    \ = 0\n            result += String(c)\n        }\n    }\n    return result",
  "    let result = text.replacingOccurrences(of: \" \", with: \"_\")\n    return\
    \ result", "    var result = \"\"\n    var prev = \"\"\n    for c in text {\n\
    \        if c == \" \" {\n            if prev == \" \" {\n                result\
    \ += \"-\"\n            } else {\n                result += \"_\"\n          \
    \  }\n        } else {\n            result += String(c)\n        }\n        prev\
    \ = String(c)\n    }\n    return result", "    let spaces = CharacterSet.whitespaces\n\
    \    let components = text.components(separatedBy: spaces)\n    let filtered =\
    \ components.filter { !$0.isEmpty }\n    let joined = filtered.joined(separator:\
    \ \"_\")\n    return joined", "    let spaces = CharacterSet.whitespaces\n   \
    \ let underscore = \"_\"\n    let dash = \"-\"\n    var result = \"\"\n    var\
    \ consecutiveSpaces = 0\n    for char in text {\n        if spaces.contains(char.unicodeScalars.first!)\
    \ {\n            consecutiveSpaces += 1\n            if consecutiveSpaces > 2\
    \ {\n                result += dash\n                consecutiveSpaces = 0\n \
    \           } else {\n                result += underscore\n            }\n  \
    \      } else {\n            result += String(char)\n            consecutiveSpaces\
    \ = 0\n        }\n    }\n    return result", "    var result = text\n    result\
    \ = result.replacingOccurrences(of: \" \", with: \"_\")\n    result = result.replacingOccurrences(of:\
    \ \"__\", with: \"_\")\n    result = result.replacingOccurrences(of: \"___\",\
    \ with: \"-\")\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    let space = \" \"\n    let underscore = \"_\"\n    let\
    \ dash = \"-\"\n    var result = \"\"\n    var count = 0\n    for char in text\
    \ {\n        if char == Character(space) {\n            count += 1\n         \
    \   if count == 1 {\n                result += underscore\n            } else\
    \ if count == 2 {\n                result += dash\n            }\n        } else\
    \ {\n            result += String(char)\n            count = 0\n        }\n  \
    \  }\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    let text = text.trimmingCharacters(in: .whitespaces)\n\
    \    let text = text.replacingOccurrences(of: \" \", with: \"_\")\n    let text\
    \ = text.replacingOccurrences(of: \"__\", with: \"_\")\n    let text = text.replacingOccurrences(of:\
    \ \"___\", with: \"-\")\n    return text", "    var result = \"\"\n    var prev_char\
    \ = \"\"\n    var spaces = 0\n    for char in text {\n        if char == \" \"\
    \ {\n            spaces += 1\n        } else {\n            spaces = 0\n     \
    \   }\n        if spaces == 1 {\n            result += \"_\"\n        } else if\
    \ spaces == 2 {\n            result += \"-\"\n        } else if spaces > 2 {\n\
    \            continue\n        } else {\n            result += String(char)\n\
    \        }\n        prev_char = String(char)\n    }\n    return result", "   \
    \ var result = \"\"\n    var last_char = \"\"\n    var space_count = 0\n    for\
    \ char in text {\n        if char == \" \" {\n            space_count += 1\n \
    \           if space_count > 2 {\n                last_char = \"-\"\n        \
    \    } else {\n                last_char = \"_\"\n            }\n        } else\
    \ {\n            space_count = 0\n            last_char = String(char)\n     \
    \   }\n        result += last_char\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_").replacingOccurrences(of: "__", with: "-")', "    let spaces =\
    \ CharacterSet.whitespaces\n    let components = text.components(separatedBy:\
    \ spaces)\n    let filtered = components.filter { !$0.isEmpty }\n    let joined\
    \ = filtered.joined(separator: \"_\")\n    let replaced = joined.replacingOccurrences(of:\
    \ \"__\", with: \"-\")\n    return replaced", "    var result = \"\"\n    var\
    \ spaces = 0\n    for char in text {\n        if char == \" \" {\n           \
    \ spaces += 1\n        } else {\n            if spaces > 2 {\n               \
    \ result += \"-\"\n            } else if spaces > 0 {\n                result\
    \ += \"_\"\n            }\n            result.append(char)\n            spaces\
    \ = 0\n        }\n    }\n    return result", "    let space = \" \"\n    let underscore\
    \ = \"_\"\n    let dash = \"-\"\n    var result = text\n    result = result.replacingOccurrences(of:\
    \ space, with: underscore)\n    result = result.replacingOccurrences(of: space\
    \ + space + space, with: dash)\n    return result", "    var result = \"\"\n \
    \   var previous = \"\"\n    var count = 0\n    for char in text {\n        if\
    \ char == \" \" {\n            if previous == \" \" {\n                count +=\
    \ 1\n            } else {\n                count = 1\n            }\n        \
    \    previous = \" \"\n        } else {\n            previous = char\n       \
    \     count = 0\n        }\n        if count == 1 {\n            result += \"\
    _\"\n        } else if count == 2 {\n            result += \"-\"\n        } else\
    \ {\n            result += String(char)\n        }\n    }\n    return result",
  "    let result = text.replacingOccurrences(of: \" \", with: \"_\")\n    return\
    \ result", "    let space = Character(\" \")\n    let underscore = Character(\"\
    _\")\n    let dash = Character(\"-\")\n    var result = \"\"\n    var count =\
    \ 0\n    for c in text {\n        if c == space {\n            count += 1\n  \
    \          if count == 1 {\n                result.append(underscore)\n      \
    \      } else if count == 2 {\n                result.append(dash)\n         \
    \   }\n        } else {\n            result.append(c)\n            count = 0\n\
    \        }\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_").replacingOccurrences(of: "__", with: "-")', "    let space = \"\
    \ \"\n    let underscore = \"_\"\n    let dash = \"-\"\n    var result = text\n\
    \    var last_char = space\n    var consecutive_spaces = 0\n    for char in text\
    \ {\n        if char == space {\n            if last_char == space {\n       \
    \         consecutive_spaces += 1\n            }\n            if consecutive_spaces\
    \ > 2 {\n                result = result.replacingOccurrences(of: space, with:\
    \ dash)\n            } else {\n                result = result.replacingOccurrences(of:\
    \ space, with: underscore)\n            }\n        }\n        last_char = char\n\
    \    }\n    return result", "    var result = \"\"\n    var space_count = 0\n\
    \    for c in text {\n        if c == \" \" {\n            space_count += 1\n\
    \            if space_count >= 2 {\n                result += \"-\"\n        \
    \        space_count = 0\n            }\n        } else {\n            result\
    \ += c\n            space_count = 0\n        }\n    }\n    return result", " \
    \   let regex = try! NSRegularExpression(pattern: \"\\\\s+\", options: [])\n \
    \   let range = NSRange(location: 0, length: text.utf16.count)\n    let modifiedString\
    \ = regex.stringByReplacingMatches(in: text, options: [], range: range, withTemplate:\
    \ \"_\")\n    return modifiedString", '    return text.replacingOccurrences(of:
    " ", with: "_").replacingOccurrences(of: "__", with: "-")', "    var result =\
    \ \"\"\n    var space_count = 0\n    for char in text {\n        if char == \"\
    \ \" {\n            space_count += 1\n            if space_count == 1 {\n    \
    \            result += \"_\"\n            } else if space_count == 2 {\n     \
    \           result += \"_\"\n            } else {\n                result += \"\
    -\"\n            }\n        } else {\n            space_count = 0\n          \
    \  result += String(char)\n        }\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    let space = \" \"\n    let underscore = \"_\"\n    let\
    \ dash = \"-\"\n    var result = \"\"\n    var count = 0\n    for char in text\
    \ {\n        if char == Character(space) {\n            count += 1\n         \
    \   if count == 1 {\n                result += underscore\n            } else\
    \ if count == 2 {\n                result += dash\n            }\n        } else\
    \ {\n            result += String(char)\n            count = 0\n        }\n  \
    \  }\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    let text = text.trimmingCharacters(in: .whitespaces)\n\
    \    let text = text.replacingOccurrences(of: \"  \", with: \" \")\n    let text\
    \ = text.replacingOccurrences(of: \" \", with: \"_\")\n    let text = text.replacingOccurrences(of:\
    \ \"__\", with: \"-\")\n    return text", "    var result = text\n    result =\
    \ result.replacingOccurrences(of: \" \", with: \"_\")\n    result = result.replacingOccurrences(of:\
    \ \"__\", with: \"_\")\n    result = result.replacingOccurrences(of: \"___\",\
    \ with: \"-\")\n    return result", "    let result = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    return result", "    let regex = try! NSRegularExpression(pattern:\
    \ \"\\\\s{2,}\", options: .caseInsensitive)\n    let range = NSRange(location:\
    \ 0, length: text.utf16.count)\n    let modifiedString = regex.stringByReplacingMatches(in:\
    \ text, options: [], range: range, withTemplate: \"-\")\n    return modifiedString.replacingOccurrences(of:\
    \ \" \", with: \"_\")", "    let regex = try! NSRegularExpression(pattern: \"\\\
    \\s+\", options: [])\n    let range = NSRange(location: 0, length: text.utf16.count)\n\
    \    let result = regex.stringByReplacingMatches(in: text, options: [], range:\
    \ range, withTemplate: \"_\")\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_")', '    return text.replacingOccurrences(of: " ", with: "_").replacingOccurrences(of:
    "__", with: "-")', "    let result = text.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    let result2 = result.replacingOccurrences(of: \"__\", with: \"-\"\
    )\n    return result2", "    var result = \"\"\n    var last_char = \"\"\n   \
    \ for char in text {\n        if char == \" \" {\n            if last_char ==\
    \ \" \" {\n                result += \"-\"\n            } else {\n           \
    \     result += \"_\"\n            }\n        } else {\n            result +=\
    \ String(char)\n        }\n        last_char = String(char)\n    }\n    return\
    \ result", '    return text.replacingOccurrences(of: " ", with: "_")', "    let\
    \ space = \" \"\n    let underscore = \"_\"\n    let dash = \"-\"\n    var result\
    \ = text\n    while result.contains(space) {\n        result = result.replacingOccurrences(of:\
    \ space, with: underscore)\n    }\n    while result.contains(underscore + underscore)\
    \ {\n        result = result.replacingOccurrences(of: underscore + underscore,\
    \ with: dash)\n    }\n    return result", "    var result = \"\"\n    var spaceCount\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            spaceCount\
    \ += 1\n            if spaceCount == 2 {\n                result += \"-\"\n  \
    \          }\n        } else {\n            if spaceCount > 0 {\n            \
    \    result += \"_\"\n            }\n            result += String(char)\n    \
    \        spaceCount = 0\n        }\n    }\n    return result", "    var result\
    \ = text.replacingOccurrences(of: \" \", with: \"_\")\n    result = result.replacingOccurrences(of:\
    \ \"__\", with: \"_\")\n    result = result.replacingOccurrences(of: \"___\",\
    \ with: \"-\")\n    return result", "    var result = \"\"\n    var spaceCount\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            spaceCount\
    \ += 1\n            if spaceCount == 1 {\n                result += \"_\"\n  \
    \          } else if spaceCount == 2 {\n                result += \"_\"\n    \
    \        } else {\n                result += \"-\"\n            }\n        } else\
    \ {\n            spaceCount = 0\n            result += String(char)\n        }\n\
    \    }\n    return result", "    var result = \"\"\n    var last_char = \"\"\n\
    \    var count = 0\n    for char in text {\n        if char == \" \" {\n     \
    \       if last_char == \" \" {\n                count += 1\n                if\
    \ count > 2 {\n                    result += \"-\"\n                } else {\n\
    \                    result += \"_\"\n                }\n            } else {\n\
    \                result += \"_\"\n                count = 1\n            }\n \
    \       } else {\n            result += String(char)\n            count = 0\n\
    \        }\n        last_char = String(char)\n    }\n    return result", "   \
    \ var result = \"\"\n    var space_count = 0\n    for char in text {\n       \
    \ if char == \" \" {\n            space_count += 1\n            if space_count\
    \ == 1 {\n                result += \"_\"\n            } else if space_count ==\
    \ 2 {\n                result += \"-\"\n            }\n        } else {\n    \
    \        space_count = 0\n            result += String(char)\n        }\n    }\n\
    \    return result", "    let space = \" \"\n    let underscore = \"_\"\n    let\
    \ dash = \"-\"\n    var result = text\n    var spaces = 0\n    for char in text\
    \ {\n        if char == Character(space) {\n            spaces += 1\n        }\
    \ else {\n            spaces = 0\n        }\n        if spaces > 2 {\n       \
    \     result = result.replacingOccurrences(of: space, with: dash)\n        } else\
    \ {\n            result = result.replacingOccurrences(of: space, with: underscore)\n\
    \        }\n    }\n    return result", '    return text.replacingOccurrences(of:
    " ", with: "_")', "    var result = \"\"\n    var prevChar = \"\"\n    var prevPrevChar\
    \ = \"\"\n    for char in text {\n        if char == \" \" {\n            if prevChar\
    \ == \" \" {\n                if prevPrevChar == \" \" {\n                   \
    \ result += \"-\"\n                } else {\n                    result += \"\
    _\"\n                }\n            } else {\n                result += \"_\"\n\
    \            }\n        } else {\n            result += String(char)\n       \
    \ }\n        prevPrevChar = prevChar\n        prevChar = String(char)\n    }\n\
    \    return result", "    let spaces = CharacterSet.whitespaces\n    let underscore\
    \ = \"_\"\n    let dash = \"-\"\n    let newText = text.trimmingCharacters(in:\
    \ spaces)\n    let components = newText.components(separatedBy: spaces)\n    let\
    \ filtered = components.filter { !$0.isEmpty }\n    let joined = filtered.joined(separator:\
    \ underscore)\n    let replaced = joined.replacingOccurrences(of: \"__\", with:\
    \ dash)\n    return replaced", "    var result = \"\"\n    var previous_char:\
    \ Character?\n    for char in text {\n        if char == \" \" {\n           \
    \ if previous_char == \" \" {\n                result.append(\"-\")\n        \
    \    } else {\n                result.append(\"_\")\n            }\n        }\
    \ else {\n            result.append(char)\n        }\n        previous_char =\
    \ char\n    }\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var spaceCount = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            spaceCount += 1\n       \
    \     if spaceCount == 1 {\n                result += \"_\"\n            } else\
    \ if spaceCount == 2 {\n                result += \"_\"\n            } else {\n\
    \                result += \"-\"\n            }\n        } else {\n          \
    \  result += String(char)\n            spaceCount = 0\n        }\n    }\n    return\
    \ result", "    let newText = text.replacingOccurrences(of: \" \", with: \"_\"\
    )\n    let newText2 = newText.replacingOccurrences(of: \"__\", with: \"-\")\n\
    \    return newText2", "    var result = \"\"\n    var spaces = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            spaces += 1\n           \
    \ if spaces > 2 {\n                result += \"-\"\n            } else {\n   \
    \             result += \"_\"\n            }\n        } else {\n            spaces\
    \ = 0\n            result += String(char)\n        }\n    }\n    return result",
  '    return text.replacingOccurrences(of: " ", with: "_")', "    var result = \"\
    \"\n    var spaceCount = 0\n    for char in text {\n        if char == \" \" {\n\
    \            spaceCount += 1\n            if spaceCount == 1 {\n             \
    \   result += \"_\"\n            } else if spaceCount == 2 {\n               \
    \ result += \"_\"\n            } else {\n                result += \"-\"\n   \
    \         }\n        } else {\n            spaceCount = 0\n            result\
    \ += String(char)\n        }\n    }\n    return result", "    var result = \"\"\
    \n    var previous_char: Character?\n    for char in text {\n        if char ==\
    \ \" \" {\n            if previous_char == \" \" {\n                result +=\
    \ \"-\"\n            } else {\n                result += \"_\"\n            }\n\
    \        } else {\n            result += String(char)\n        }\n        previous_char\
    \ = char\n    }\n    return result", "    var result = \"\"\n    var space_count\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            space_count\
    \ += 1\n            if space_count > 2 {\n                result += \"-\"\n  \
    \          } else {\n                result += \"_\"\n            }\n        }\
    \ else {\n            space_count = 0\n            result += String(char)\n  \
    \      }\n    }\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var prev_space = false\n    var\
    \ space_count = 0\n    for char in text {\n        if char == \" \" {\n      \
    \      if prev_space {\n                space_count += 1\n            } else {\n\
    \                prev_space = true\n                space_count = 1\n        \
    \    }\n        } else {\n            if prev_space {\n                if space_count\
    \ > 2 {\n                    result += \"-\"\n                } else {\n     \
    \               result += \"_\"\n                }\n            }\n          \
    \  prev_space = false\n            space_count = 0\n            result += String(char)\n\
    \        }\n    }\n    if prev_space {\n        if space_count > 2 {\n       \
    \     result += \"-\"\n        } else {\n            result += \"_\"\n       \
    \ }\n    }\n    return result", "    var result = text.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    let text = text.replacingOccurrences(of: \" \", with:\
    \ \"_\")\n    let text = text.replacingOccurrences(of: \"__\", with: \"_\")\n\
    \    let text = text.replacingOccurrences(of: \"___\", with: \"-\")\n    return\
    \ text", "    var result = \"\"\n    var prevChar = \"\"\n    var count = 0\n\
    \    for char in text {\n        if char == \" \" {\n            if prevChar ==\
    \ \" \" {\n                count += 1\n            } else {\n                count\
    \ = 1\n            }\n        } else {\n            if count > 2 {\n         \
    \       result += \"-\"\n            } else if count > 0 {\n                result\
    \ += \"_\"\n            }\n            count = 0\n        }\n        if char !=\
    \ \" \" {\n            result += String(char)\n        }\n        prevChar = String(char)\n\
    \    }\n    return result", "    let result = text.replacingOccurrences(of: \"\
    \ \", with: \"_\")\n    return result", "    var result = \"\"\n    var spaceCount\
    \ = 0\n    for char in text {\n        if char == \" \" {\n            spaceCount\
    \ += 1\n            if spaceCount > 2 {\n                result += \"-\"\n   \
    \         } else {\n                result += \"_\"\n            }\n        }\
    \ else {\n            spaceCount = 0\n            result += String(char)\n   \
    \     }\n    }\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var space_count = 0\n    for\
    \ char in text {\n        if char == \" \" {\n            space_count += 1\n \
    \           if space_count == 1 {\n                result += \"_\"\n         \
    \   } else if space_count == 2 {\n                result += \"_\"\n          \
    \  } else {\n                result += \"-\"\n            }\n        } else {\n\
    \            space_count = 0\n            result += String(char)\n        }\n\
    \    }\n    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = text\n    result = result.replacingOccurrences(of:\
    \ \" \", with: \"_\")\n    result = result.replacingOccurrences(of: \"__\", with:\
    \ \"_\")\n    result = result.replacingOccurrences(of: \"___\", with: \"-\")\n\
    \    return result", "    var result = \"\"\n    var spaceCount = 0\n    for char\
    \ in text {\n        if char == \" \" {\n            spaceCount += 1\n       \
    \     if spaceCount == 1 {\n                result += \"_\"\n            } else\
    \ if spaceCount == 2 {\n                result += \"_\"\n            } else {\n\
    \                result += \"-\"\n            }\n        } else {\n          \
    \  spaceCount = 0\n            result += String(char)\n        }\n    }\n    return\
    \ result", '    return text.replacingOccurrences(of: " ", with: "_").replacingOccurrences(of:
    "__", with: "-")', "    var result = \"\"\n    var last_char = \" \"\n    for\
    \ char in text {\n        if char == \" \" {\n            if last_char == \" \"\
    \ {\n                result += \"-\"\n            } else {\n                result\
    \ += \"_\"\n            }\n        } else {\n            result += String(char)\n\
    \        }\n        last_char = String(char)\n    }\n    return result", "   \
    \ var result = \"\"\n    var prev = \"\"\n    var spaceCount = 0\n    for c in\
    \ text {\n        if c == \" \" {\n            spaceCount += 1\n            if\
    \ spaceCount > 2 {\n                result += \"-\"\n            } else {\n  \
    \              result += \"_\"\n            }\n        } else {\n            spaceCount\
    \ = 0\n            result += String(c)\n        }\n    }\n    return result",
  "    var result = \"\"\n    var spaceCount = 0\n    for char in text {\n       \
    \ if char == \" \" {\n            spaceCount += 1\n            if spaceCount ==\
    \ 2 {\n                result += \"-\"\n            }\n        } else {\n    \
    \        spaceCount = 0\n            result += String(char)\n        }\n    }\n\
    \    return result"]
stop_tokens:
- "\n}"

name: HumanEval_17_parse_music
language: swift
prompt: "\n/// Input to this function is a string representing musical notes in a\
  \ special ASCII format.\n/// Your task is to parse this string and return array\
  \ of integers corresponding to how many beats does each\n/// not last.\n/// Here\
  \ is a legend:\n/// 'o' - whole note, lasts four beats\n/// 'o|' - half note, lasts\
  \ two beats\n/// '.|' - quater note, lasts one beat\n/// >>> parse_music(music_string:\
  \ \"o o| .| o| o| .| .| .| .| o o\")\n/// [4, 2, 1, 2, 2, 1, 1, 1, 1, 4, 4]\nfunc\
  \ parse_music(music_string: String) -> [Int] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(parse_music(music_string: \"\") == [] as\
  \ [Int])\nassert(parse_music(music_string: \"o o o o\") == [4, 4, 4, 4])\nassert(parse_music(music_string:\
  \ \".| .| .| .|\") == [1, 1, 1, 1])\nassert(parse_music(music_string: \"o| o| .|\
  \ .| o o o o\") == [2, 2, 1, 1, 4, 4, 4, 4])\nassert(parse_music(music_string: \"\
  o| .| o| .| o o| o o|\") == [2, 1, 2, 1, 4, 2, 4, 2])"
completions: ["    var result = [Int]()\n    var current_beat = 0\n    for char in\
    \ music_string {\n        if char == \" \" {\n            continue\n        }\n\
    \        if char == \"o\" {\n            current_beat = 4\n        } else if char\
    \ == \"|\" {\n            current_beat = current_beat / 2\n        } else if char\
    \ == \".\" {\n            current_beat = current_beat / 2\n        }\n       \
    \ result.append(current_beat)\n    }\n    return result", "    var result: [Int]\
    \ = []\n    let notes = music_string.components(separatedBy: \" \")\n    for note\
    \ in notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      print(\"Invalid note\")\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var current_beat = 0\n    for char in music_string {\n\
    \        switch char {\n        case \"o\":\n            result.append(4)\n  \
    \      case \"|\":\n            result.append(current_beat)\n            current_beat\
    \ = 0\n        case \".\":\n            current_beat += 1\n        default:\n\
    \            continue\n        }\n    }\n    return result", "    var beats =\
    \ [Int]()\n    for char in music_string {\n        switch char {\n        case\
    \ \"o\":\n            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o|\" {\n \
    \           beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    var result: [Int] = []\n    var note_length:\
    \ Int = 0\n    for char in music_string {\n        if char == \"o\" {\n      \
    \      note_length = 4\n        } else if char == \"|\" {\n            note_length\
    \ = note_length / 2\n        } else if char == \".\" {\n            note_length\
    \ = note_length / 2\n        }\n        result.append(note_length)\n    }\n  \
    \  return result", "    var result: [Int] = []\n    var music_string = music_string\n\
    \    while music_string.count > 0 {\n        if music_string.hasPrefix(\"o o\"\
    ) {\n            result.append(4)\n            result.append(4)\n            music_string.removeFirst(3)\n\
    \        } else if music_string.hasPrefix(\"o\") {\n            result.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".\") {\n            result.append(1)\n\
    \            music_string.removeFirst()\n        } else {\n            music_string.removeFirst()\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    let music\
    \ = music_string.components(separatedBy: \" \")\n    for note in music {\n   \
    \     switch note {\n        case \"o\":\n            result.append(4)\n     \
    \   case \"o|\":\n            result.append(2)\n        case \".|\":\n       \
    \     result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    var beats = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    return music_string.split(separator:\
    \ \" \").map {\n        switch $0 {\n        case \"o\":\n            return 4\n\
    \        case \"o|\":\n            return 2\n        case \".|\":\n          \
    \  return 1\n        default:\n            return 0\n        }\n    }", "    let\
    \ notes = music_string.components(separatedBy: \" \")\n    var result = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     result.append(4)\n        case \"o|\":\n            result.append(2)\n \
    \       case \".|\":\n            result.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return result", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    var result = [Int]()\n    var i = 0\n    while i < music_string.count\
    \ {\n        let index = music_string.index(music_string.startIndex, offsetBy:\
    \ i)\n        let char = music_string[index]\n        if char == \"o\" {\n   \
    \         result.append(4)\n            i += 1\n        } else if char == \".\"\
    \ {\n            result.append(1)\n            i += 2\n        }\n    }\n    return\
    \ result", "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result: [Int] = []\n\
    \    let music_string_array = music_string.components(separatedBy: \" \")\n  \
    \  for i in music_string_array {\n        switch i {\n        case \"o\":\n  \
    \          result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    var notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            beats.append(4)\n\
    \        case \"o|\":\n            beats.append(2)\n        case \".|\":\n   \
    \         beats.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return beats", "    var result = [Int]()\n    let music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let musicArray = music_string.components(separatedBy: \" \")\n    for note\
    \ in musicArray {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result: [Int] = []\n\
    \    let music_array = music_string.components(separatedBy: \" \")\n    for note\
    \ in music_array {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var temp = \"\"\n    for char in music_string {\n        if char == \" \"\
    \ {\n            switch temp {\n            case \"o\":\n                result.append(4)\n\
    \            case \"o|\":\n                result.append(2)\n            case\
    \ \".|\":\n                result.append(1)\n            default:\n          \
    \      break\n            }\n            temp = \"\"\n        } else {\n     \
    \       temp.append(char)\n        }\n    }\n    return result", "    var result:\
    \ [Int] = []\n    var music_array = music_string.components(separatedBy: \" \"\
    )\n    for i in 0..<music_array.count {\n        if music_array[i] == \"o\" {\n\
    \            result.append(4)\n        } else if music_array[i] == \"o|\" {\n\
    \            result.append(2)\n        } else if music_array[i] == \".|\" {\n\
    \            result.append(1)\n        }\n    }\n    return result", "    var\
    \ beats = [Int]()\n    for char in music_string {\n        switch char {\n   \
    \     case \"o\":\n            beats.append(4)\n        case \"|\":\n        \
    \    beats.append(2)\n        case \".\":\n            beats.append(1)\n     \
    \   default:\n            break\n        }\n    }\n    return beats", "    var\
    \ result: [Int] = []\n    var note: String = \"\"\n    for char in music_string\
    \ {\n        if char == \" \" {\n            result.append(getNote(note: note))\n\
    \            note = \"\"\n        } else {\n            note += String(char)\n\
    \        }\n    }\n    result.append(getNote(note: note))\n    return result",
  "    var beats = [Int]()\n    for char in music_string {\n        switch char {\n\
    \        case \"o\":\n            beats.append(4)\n        case \"o|\":\n    \
    \        beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            continue\n        }\n    }\n    return beats",
  "    let music_string = music_string.replacingOccurrences(of: \" \", with: \"\"\
    )\n    var result: [Int] = []\n    var index = 0\n    while index < music_string.count\
    \ {\n        let index_of_next_bar = music_string.index(music_string.startIndex,\
    \ offsetBy: index + 1)\n        let index_of_next_next_bar = music_string.index(music_string.startIndex,\
    \ offsetBy: index + 2)\n        if music_string[index] == \"o\" {\n          \
    \  if music_string[index_of_next_bar] == \"|\" {\n                result.append(2)\n\
    \                index += 2\n            } else {\n                result.append(4)\n\
    \                index += 1\n            }\n        } else {\n            if music_string[index_of_next_bar]\
    \ == \"|\" {\n                result.append(1)\n                index += 2\n \
    \           } else {\n                result.append(4)\n                index\
    \ += 1\n            }\n        }\n    }\n    return result", "    var result =\
    \ [Int]()\n    let notes = music_string.components(separatedBy: \" \")\n    for\
    \ note in notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    let music_array = music_string.split(separator:\
    \ \" \")\n    var result = [Int]()\n    for note in music_array {\n        if\
    \ note == \"o\" {\n            result.append(4)\n        } else if note == \"\
    o|\" {\n            result.append(2)\n        } else if note == \".|\" {\n   \
    \         result.append(1)\n        }\n    }\n    return result", "    let notes\
    \ = music_string.components(separatedBy: \" \")\n    var result = [Int]()\n  \
    \  for note in notes {\n        switch note {\n        case \"o\":\n         \
    \   result.append(4)\n        case \"o|\":\n            result.append(2)\n   \
    \     case \".|\":\n            result.append(1)\n        default:\n         \
    \   break\n        }\n    }\n    return result", "    var result: [Int] = []\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            result.append(0)\n\
    \        }\n    }\n    return result", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    var result = [Int]()\n    var i = 0\n    while i < music_string.count\
    \ {\n        let char = music_string[i]\n        if char == \"o\" {\n        \
    \    if i + 1 < music_string.count && music_string[i + 1] == \"|\" {\n       \
    \         result.append(2)\n                i += 2\n            } else {\n   \
    \             result.append(4)\n                i += 1\n            }\n      \
    \  } else if char == \".\" {\n            result.append(1)\n            i += 2\n\
    \        }\n    }\n    return result", "    var result: [Int] = []\n    var current_beat:\
    \ Int = 0\n    for char in music_string {\n        switch char {\n        case\
    \ \"o\":\n            current_beat = 4\n        case \"|\":\n            result.append(current_beat)\n\
    \            current_beat = 0\n        case \".\":\n            current_beat =\
    \ 1\n        default:\n            break\n        }\n    }\n    return result",
  "    let notes = music_string.split(separator: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    var result = [Int]()\n   \
    \ let music_string_array = music_string.components(separatedBy: \" \")\n    for\
    \ note in music_string_array {\n        switch note {\n        case \"o\":\n \
    \           result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      print(\"Invalid note\")\n        }\n    }\n    return result", "    var\
    \ result = [Int]()\n    var music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      print(\"Invalid note\")\n        }\n    }\n    return result", "    var\
    \ beats = [Int]()\n    for char in music_string {\n        switch char {\n   \
    \     case \"o\":\n            beats.append(4)\n        case \"o|\":\n       \
    \     beats.append(2)\n        case \".|\":\n            beats.append(1)\n   \
    \     default:\n            break\n        }\n    }\n    return beats", "    var\
    \ beats = [Int]()\n    let notes = music_string.components(separatedBy: \" \"\
    )\n    for note in notes {\n        switch note {\n        case \"o\":\n     \
    \       beats.append(4)\n        case \"o|\":\n            beats.append(2)\n \
    \       case \".|\":\n            beats.append(1)\n        default:\n        \
    \    break\n        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    for char in music_string {\n        switch char {\n        case \"o\":\n\
    \            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     continue\n        }\n    }\n    return beats", "    var notes = [Int]()\n\
    \    for note in music_string.split(separator: \" \") {\n        switch note {\n\
    \        case \"o\":\n            notes.append(4)\n        case \"o|\":\n    \
    \        notes.append(2)\n        case \".|\":\n            notes.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return notes", " \
    \   var beats = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    var result = [Int]()\n\
    \    var i = 0\n    while i < music_string.count {\n        let index = music_string.index(music_string.startIndex,\
    \ offsetBy: i)\n        let char = music_string[index]\n        if char == \"\
    o\" {\n            result.append(4)\n            i += 1\n        } else if char\
    \ == \".\" {\n            result.append(1)\n            i += 2\n        } else\
    \ {\n            result.append(2)\n            i += 2\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var current_note = \"\"\n    for char\
    \ in music_string {\n        if char == \" \" {\n            if current_note ==\
    \ \"o\" {\n                result.append(4)\n            } else if current_note\
    \ == \"o|\" {\n                result.append(2)\n            } else if current_note\
    \ == \".|\" {\n                result.append(1)\n            }\n            current_note\
    \ = \"\"\n        } else {\n            current_note.append(char)\n        }\n\
    \    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var beats = [Int]()\n    var music = music_string.components(separatedBy:\
    \ \" \")\n    for note in music {\n        switch note {\n        case \"o\":\n\
    \            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     print(\"Invalid note\")\n        }\n    }\n    return beats", "    let notes\
    \ = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n   \
    \ for note in notes {\n        switch note {\n        case \"o\":\n          \
    \  beats.append(4)\n        case \"o|\":\n            beats.append(2)\n      \
    \  case \".|\":\n            beats.append(1)\n        default:\n            break\n\
    \        }\n    }\n    return beats", "    var result: [Int] = []\n    var note_length:\
    \ Int = 0\n    for char in music_string {\n        if char == \"o\" {\n      \
    \      note_length = 4\n        } else if char == \"|\" {\n            note_length\
    \ -= 1\n        } else if char == \".\" {\n            result.append(note_length)\n\
    \        }\n    }\n    return result", "    var beats = [Int]()\n    var beat\
    \ = 0\n    for char in music_string {\n        if char == \"o\" {\n          \
    \  beat = 4\n        } else if char == \"|\" {\n            beat = beat / 2\n\
    \        } else if char == \".\" {\n            beat = beat / 2\n        }\n \
    \       beats.append(beat)\n    }\n    return beats", "    var result = [Int]()\n\
    \    var music_array = music_string.components(separatedBy: \" \")\n    for i\
    \ in 0..<music_array.count {\n        if music_array[i] == \"o\" {\n         \
    \   result.append(4)\n        } else if music_array[i] == \"o|\" {\n         \
    \   result.append(2)\n        } else if music_array[i] == \".|\" {\n         \
    \   result.append(1)\n        }\n    }\n    return result", "    let notes = music_string.split(separator:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            beats.append(0)\n        }\n    }\n    return beats",
  "    let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    var beats = [Int]()\n    var\
    \ notes = music_string.components(separatedBy: \" \")\n    for note in notes {\n\
    \        switch note {\n        case \"o\":\n            beats.append(4)\n   \
    \     case \"o|\":\n            beats.append(2)\n        case \".|\":\n      \
    \      beats.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return beats", "    var result = [Int]()\n    let music_array = music_string.split(separator:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    for char in music_string {\n        if char == \"o\" {\n            beats.append(4)\n\
    \        } else if char == \"|\" {\n            beats.append(2)\n        } else\
    \ if char == \".\" {\n            beats.append(1)\n        }\n    }\n    return\
    \ beats", "    let music_string = music_string.replacingOccurrences(of: \" \"\
    , with: \"\")\n    let music_array = music_string.components(separatedBy: \"|\"\
    )\n    var music_int_array = [Int]()\n    for note in music_array {\n        switch\
    \ note {\n        case \"o\":\n            music_int_array.append(4)\n       \
    \ case \"o\":\n            music_int_array.append(2)\n        case \".\":\n  \
    \          music_int_array.append(1)\n        default:\n            break\n  \
    \      }\n    }\n    return music_int_array", "    // TODO: Implement this function\n\
    \    return []", "    var result = [Int]()\n    var array = music_string.components(separatedBy:\
    \ \" \")\n    for i in 0..<array.count {\n        if array[i] == \"o\" {\n   \
    \         result.append(4)\n        } else if array[i] == \"o|\" {\n         \
    \   result.append(2)\n        } else if array[i] == \".|\" {\n            result.append(1)\n\
    \        }\n    }\n    return result", "    var beats = [Int]()\n    let notes\
    \ = music_string.split(separator: \" \")\n    for note in notes {\n        switch\
    \ note {\n        case \"o\":\n            beats.append(4)\n        case \"o|\"\
    :\n            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", '    return
    [Int]()', "    var result = [Int]()\n    var music_string = music_string\n   \
    \ while music_string.count > 0 {\n        if music_string.hasPrefix(\"o\") {\n\
    \            result.append(4)\n            music_string.removeFirst()\n      \
    \  } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     switch note {\n        case \"o\":\n            result.append(4)\n     \
    \   case \"o|\":\n            result.append(2)\n        case \".|\":\n       \
    \     result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    let music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.split(separator:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            print(\"Invalid note\")\n        }\n    }\n   \
    \ return beats", "    let notes = music_string.split(separator: \" \")\n    var\
    \ beats = [Int]()\n    for note in notes {\n        switch note {\n        case\
    \ \"o\":\n            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     print(\"Error\")\n        }\n    }\n    return beats", "    var beats =\
    \ [Int]()\n    var music_string = music_string\n    while music_string.count >\
    \ 0 {\n        if music_string.hasPrefix(\"o\") {\n            beats.append(4)\n\
    \            music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            beats.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            beats.append(1)\n\
    \            music_string.removeFirst(2)\n        }\n    }\n    return beats",
  "    let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var beats = [Int]()\n    for char in music_string {\n        switch char {\n\
    \        case \"o\":\n            beats.append(4)\n        case \"o|\":\n    \
    \        beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    var result = [Int]()\n   \
    \ var music_array = music_string.components(separatedBy: \" \")\n    for note\
    \ in music_array {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            print(\"Invalid note\"\
    )\n        }\n    }\n    return result", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    var result: [Int] = []\n    for char in music_string\
    \ {\n        switch char {\n        case \"o\":\n            result.append(4)\n\
    \        case \"|\":\n            result.append(2)\n        case \".\":\n    \
    \        result.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return result", "    var beats = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    var music_array = music_string.components(separatedBy:\
    \ \" \")\n    for i in 0..<music_array.count {\n        if music_array[i] == \"\
    o\" {\n            result.append(4)\n        } else if music_array[i] == \"o|\"\
    \ {\n            result.append(2)\n        } else if music_array[i] == \".|\"\
    \ {\n            result.append(1)\n        }\n    }\n    return result", "   \
    \ let notes = music_string.split(separator: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        if note == \"o\" {\n            beats.append(4)\n\
    \        } else if note == \"o|\" {\n            beats.append(2)\n        } else\
    \ if note == \".|\" {\n            beats.append(1)\n        }\n    }\n    return\
    \ beats", "    let notes = music_string.components(separatedBy: \" \")\n    var\
    \ beats = [Int]()\n    for note in notes {\n        switch note {\n        case\
    \ \"o\":\n            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", '    return []', "    var music_array\
    \ = [Int]()\n    var music_array_string = music_string.components(separatedBy:\
    \ \" \")\n    for i in 0..<music_array_string.count {\n        if music_array_string[i]\
    \ == \"o\" {\n            music_array.append(4)\n        } else if music_array_string[i]\
    \ == \"o|\" {\n            music_array.append(2)\n        } else if music_array_string[i]\
    \ == \".|\" {\n            music_array.append(1)\n        }\n    }\n    return\
    \ music_array", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var temp = \"\"\n \
    \   for char in music_string {\n        if char == \" \" {\n            if temp\
    \ == \"o\" {\n                result.append(4)\n            } else if temp ==\
    \ \"o|\" {\n                result.append(2)\n            } else if temp == \"\
    .|\" {\n                result.append(1)\n            }\n            temp = \"\
    \"\n        } else {\n            temp.append(char)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats: [Int] = []\n\
    \    for char in music_string {\n        if char == \"o\" {\n            beats.append(4)\n\
    \        } else if char == \"|\" {\n            beats.append(1)\n        }\n \
    \   }\n    return beats", "    var result = [Int]()\n    for char in music_string\
    \ {\n        switch char {\n        case \"o\":\n            result.append(4)\n\
    \        case \"|\":\n            result.append(2)\n        case \".\":\n    \
    \        result.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return result", "    var beats: [Int] = []\n    var beat: Int = 0\n\
    \    for character in music_string {\n        if character == \"o\" {\n      \
    \      beat = 4\n        } else if character == \"|\" {\n            beat = beat\
    \ / 2\n        } else if character == \".\" {\n            beat = beat / 2\n \
    \       }\n        beats.append(beat)\n    }\n    return beats", "    var beats\
    \ = [Int]()\n    for note in music_string.split(separator: \" \") {\n        switch\
    \ note {\n        case \"o\":\n            beats.append(4)\n        case \"o|\"\
    :\n            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        if music_string.hasPrefix(\"o o\") {\n            result.append(4)\n\
    \            result.append(4)\n            music_string.removeFirst(3)\n     \
    \   } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    return music_string.split(separator: \" \").map {\n\
    \        switch $0 {\n        case \"o\":\n            return 4\n        case\
    \ \"o|\":\n            return 2\n        case \".|\":\n            return 1\n\
    \        default:\n            return 0\n        }\n    }", "    var beats: [Int]\
    \ = []\n    var musicArray = music_string.components(separatedBy: \" \")\n   \
    \ for note in musicArray {\n        if note == \"o\" {\n            beats.append(4)\n\
    \        } else if note == \"o|\" {\n            beats.append(2)\n        } else\
    \ if note == \".|\" {\n            beats.append(1)\n        }\n    }\n    return\
    \ beats", "    let notes = music_string.components(separatedBy: \" \")\n    var\
    \ beats = [Int]()\n    for note in notes {\n        switch note {\n        case\
    \ \"o\":\n            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var beats = [Int]()\n    var music = music_string.components(separatedBy:\
    \ \" \")\n    for note in music {\n        if note == \"o\" {\n            beats.append(4)\n\
    \        } else if note == \"o|\" {\n            beats.append(2)\n        } else\
    \ if note == \".|\" {\n            beats.append(1)\n        }\n    }\n    return\
    \ beats", "    var result = [Int]()\n    var music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      print(\"Invalid note\")\n        }\n    }\n    return result", "    var\
    \ beats = [Int]()\n    for char in music_string {\n        switch char {\n   \
    \     case \"o\":\n            beats.append(4)\n        case \"o|\":\n       \
    \     beats.append(2)\n        case \".|\":\n            beats.append(1)\n   \
    \     default:\n            break\n        }\n    }\n    return beats", "    var\
    \ beats = [Int]()\n    let notes = music_string.components(separatedBy: \" \"\
    )\n    for note in notes {\n        switch note {\n        case \"o\":\n     \
    \       beats.append(4)\n        case \"o|\":\n            beats.append(2)\n \
    \       case \".|\":\n            beats.append(1)\n        default:\n        \
    \    beats.append(0)\n        }\n    }\n    return beats", "    var result = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var beats = [Int]()\n    for char in music_string\
    \ {\n        switch char {\n        case \"o\":\n            beats.append(4)\n\
    \        case \"|\":\n            beats.append(2)\n        case \".\":\n     \
    \       beats.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return beats", "    var result = [Int]()\n    var music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var beats = [Int]()\n    var currentBeat = 0\n    for char in music_string\
    \ {\n        if char == \"o\" {\n            currentBeat = 4\n        } else if\
    \ char == \"|\" {\n            beats.append(currentBeat)\n            currentBeat\
    \ = 0\n        }\n    }\n    return beats", "    return music_string.split(separator:\
    \ \" \").map {\n        switch $0 {\n        case \"o\":\n            return 4\n\
    \        case \"o|\":\n            return 2\n        case \".|\":\n          \
    \  return 1\n        default:\n            return 0\n        }\n    }", "    var\
    \ result = [Int]()\n    let notes = music_string.components(separatedBy: \" \"\
    )\n    for note in notes {\n        switch note {\n        case \"o\":\n     \
    \       result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    for char in music_string {\n        switch char {\n        case \"o\":\n\
    \            result.append(4)\n        case \"|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        if note == \"o\" {\n            beats.append(4)\n\
    \        } else if note == \"o|\" {\n            beats.append(2)\n        } else\
    \ if note == \".|\" {\n            beats.append(1)\n        }\n    }\n    return\
    \ beats", "    var result = [Int]()\n    let music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    var notes = music_string.split(separator: \" \")\n    for note in notes {\n\
    \        switch note {\n        case \"o\":\n            beats.append(4)\n   \
    \     case \"o|\":\n            beats.append(2)\n        case \".|\":\n      \
    \      beats.append(1)\n        default:\n            print(\"Invalid note\")\n\
    \        }\n    }\n    return beats", "    var beats = [Int]()\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     switch note {\n        case \"o\":\n            beats.append(4)\n      \
    \  case \"o|\":\n            beats.append(2)\n        case \".|\":\n         \
    \   beats.append(1)\n        default:\n            break\n        }\n    }\n \
    \   return beats", "    var result = [Int]()\n    let music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result: [Int] = []\n    var music_array =\
    \ music_string.components(separatedBy: \" \")\n    for music in music_array {\n\
    \        switch music {\n        case \"o\":\n            result.append(4)\n \
    \       case \"o|\":\n            result.append(2)\n        case \".|\":\n   \
    \         result.append(1)\n        default:\n            break\n        }\n \
    \   }\n    return result", "    var result: [Int] = []\n    var beats: Int = 0\n\
    \    for char in music_string {\n        switch char {\n        case \"o\":\n\
    \            beats = 4\n        case \"|\":\n            result.append(beats)\n\
    \            beats = 0\n        default:\n            beats = beats / 2\n    \
    \    }\n    }\n    return result", "    var beats = [Int]()\n    for char in music_string\
    \ {\n        switch char {\n        case \"o\":\n            beats.append(4)\n\
    \        case \"|\":\n            beats.append(2)\n        case \".\":\n     \
    \       beats.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return beats", "    var result = [Int]()\n    var music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        if note == \"o\" {\n            beats.append(4)\n        }\
    \ else if note == \"o|\" {\n            beats.append(2)\n        } else if note\
    \ == \".|\" {\n            beats.append(1)\n        }\n    }\n    return beats",
  "    let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        if note == \"o\" {\n            beats.append(4)\n\
    \        } else if note == \"o|\" {\n            beats.append(2)\n        } else\
    \ if note == \".|\" {\n            beats.append(1)\n        }\n    }\n    return\
    \ beats", "    var result = [Int]()\n    let music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var result = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result: [Int] = []\n    var current_beat: Int = 0\n    for char in music_string\
    \ {\n        if char == \"o\" {\n            current_beat = 4\n        } else\
    \ if char == \"|\" {\n            result.append(current_beat)\n            current_beat\
    \ = 0\n        } else if char == \".\" {\n            current_beat -= 1\n    \
    \    }\n    }\n    return result", "    var result: [Int] = []\n    let music_array\
    \ = music_string.components(separatedBy: \" \")\n    for note in music_array {\n\
    \        switch note {\n        case \"o\":\n            result.append(4)\n  \
    \      case \"o|\":\n            result.append(2)\n        case \".|\":\n    \
    \        result.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return result", "    var result = [Int]()\n    let music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let music_string = music_string.replacingOccurrences(of:\
    \ \" \", with: \"\")\n    var result = [Int]()\n    var i = 0\n    while i < music_string.count\
    \ {\n        let index = music_string.index(music_string.startIndex, offsetBy:\
    \ i)\n        if music_string[index] == \"o\" {\n            if i + 1 < music_string.count\
    \ {\n                let next_index = music_string.index(music_string.startIndex,\
    \ offsetBy: i + 1)\n                if music_string[next_index] == \"|\" {\n \
    \                   result.append(2)\n                    i += 2\n           \
    \     } else {\n                    result.append(4)\n                    i +=\
    \ 1\n                }\n            } else {\n                result.append(4)\n\
    \                i += 1\n            }\n        } else {\n            result.append(1)\n\
    \            i += 2\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var music_string = music_string\n    while music_string.count > 0 {\n   \
    \     if music_string.hasPrefix(\"o\") {\n            result.append(4)\n     \
    \       music_string.removeFirst()\n        } else if music_string.hasPrefix(\"\
    o|\") {\n            result.append(2)\n            music_string.removeFirst(2)\n\
    \        } else if music_string.hasPrefix(\".|\") {\n            result.append(1)\n\
    \            music_string.removeFirst(2)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let music = music_string.components(separatedBy: \" \")\n    for note in\
    \ music {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    var note = \"\"\n \
    \   for char in music_string {\n        if char == \" \" {\n            result.append(note.count)\n\
    \            note = \"\"\n        } else {\n            note += String(char)\n\
    \        }\n    }\n    result.append(note.count)\n    return result", "    var\
    \ result: [Int] = []\n    let notes = music_string.split(separator: \" \")\n \
    \   for note in notes {\n        switch note {\n        case \"o\":\n        \
    \    result.append(4)\n        case \"o|\":\n            result.append(2)\n  \
    \      case \".|\":\n            result.append(1)\n        default:\n        \
    \    break\n        }\n    }\n    return result", "    var beats = [Int]()\n \
    \   var music = music_string.components(separatedBy: \" \")\n    for note in music\
    \ {\n        switch note {\n        case \"o\":\n            beats.append(4)\n\
    \        case \"o|\":\n            beats.append(2)\n        case \".|\":\n   \
    \         beats.append(1)\n        default:\n            beats.append(0)\n   \
    \     }\n    }\n    return beats", "    var result: [Int] = []\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     switch note {\n        case \"o\":\n            result.append(4)\n     \
    \   case \"o|\":\n            result.append(2)\n        case \".|\":\n       \
    \     result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    var result: [Int] = []\n    let music_string_array =\
    \ music_string.components(separatedBy: \" \")\n    for note in music_string_array\
    \ {\n        if note == \"o\" {\n            result.append(4)\n        } else\
    \ if note == \"o|\" {\n            result.append(2)\n        } else if note ==\
    \ \".|\" {\n            result.append(1)\n        }\n    }\n    return result",
  "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    var music = music_string.components(separatedBy: \" \")\n    for note in\
    \ music {\n        if note == \"o\" {\n            beats.append(4)\n        }\
    \ else if note == \"o|\" {\n            beats.append(2)\n        } else if note\
    \ == \".|\" {\n            beats.append(1)\n        }\n    }\n    return beats",
  "    var result = [Int]()\n    let notes = music_string.split(separator: \" \")\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     result.append(4)\n        case \"o|\":\n            result.append(2)\n \
    \       case \".|\":\n            result.append(1)\n        default:\n       \
    \     print(\"Invalid note\")\n        }\n    }\n    return result", "    var\
    \ result: [Int] = []\n    for char in music_string {\n        switch char {\n\
    \        case \"o\":\n            result.append(4)\n        case \"o|\":\n   \
    \         result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   let notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        if note == \"o\" {\n            beats.append(4)\n\
    \        } else if note == \"o|\" {\n            beats.append(2)\n        } else\
    \ if note == \".|\" {\n            beats.append(1)\n        }\n    }\n    return\
    \ beats", "    var result = [Int]()\n    var musicArray = music_string.components(separatedBy:\
    \ \" \")\n    for i in 0..<musicArray.count {\n        switch musicArray[i] {\n\
    \        case \"o\":\n            result.append(4)\n        case \"o|\":\n   \
    \         result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var result = [Int]()\n    let notes = music_string.split(separator: \" \"\
    )\n    for note in notes {\n        switch note {\n        case \"o\":\n     \
    \       result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      print(\"Wrong note\")\n        }\n    }\n    return result", "    var beats\
    \ = [Int]()\n    var currentBeat = 0\n    for char in music_string {\n       \
    \ if char == \"o\" {\n            currentBeat = 4\n        } else if char == \"\
    |\" {\n            currentBeat /= 2\n        } else if char == \".\" {\n     \
    \       beats.append(currentBeat)\n        }\n    }\n    return beats", "    var\
    \ result = [Int]()\n    let notes = music_string.components(separatedBy: \" \"\
    )\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var music_string = music_string\n  \
    \  while music_string.count > 0 {\n        if music_string.hasPrefix(\"o\") {\n\
    \            result.append(4)\n            music_string.removeFirst()\n      \
    \  } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            result.append(1)\n            music_string.removeFirst(2)\n\
    \        }\n    }\n    return result", "    var result = [Int]()\n    var music_string\
    \ = music_string\n    while music_string.count > 0 {\n        if music_string.hasPrefix(\"\
    o o\") {\n            result.append(4)\n            result.append(4)\n       \
    \     music_string.removeFirst(3)\n        } else if music_string.hasPrefix(\"\
    o\") {\n            result.append(4)\n            music_string.removeFirst()\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            result.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .\") {\n            result.append(1)\n            music_string.removeFirst()\n\
    \        } else {\n            music_string.removeFirst()\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var music_array = [Int]()\n\
    \    for char in music_string {\n        if char == \"o\" {\n            music_array.append(4)\n\
    \        } else if char == \"|\" {\n            music_array.append(2)\n      \
    \  } else if char == \".\" {\n            music_array.append(1)\n        }\n \
    \   }\n    return music_array", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o|\" {\n \
    \           beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats", "    var result: [Int] = []\n    let notes\
    \ = music_string.components(separatedBy: \" \")\n    for note in notes {\n   \
    \     switch note {\n        case \"o\":\n            result.append(4)\n     \
    \   case \"o|\":\n            result.append(2)\n        case \".|\":\n       \
    \     result.append(1)\n        default:\n            break\n        }\n    }\n\
    \    return result", "    var result = [Int]()\n    var temp = \"\"\n    for char\
    \ in music_string {\n        if char == \" \" {\n            if temp == \"o\"\
    \ {\n                result.append(4)\n            } else if temp == \"o|\" {\n\
    \                result.append(2)\n            } else if temp == \".|\" {\n  \
    \              result.append(1)\n            }\n            temp = \"\"\n    \
    \    } else {\n            temp.append(char)\n        }\n    }\n    return result",
  "    var beats = [Int]()\n    var beat = 0\n    for char in music_string {\n   \
    \     if char == \"o\" {\n            beat = 4\n        } else if char == \"|\"\
    \ {\n            beat = beat / 2\n        } else if char == \".\" {\n        \
    \    beat = beat / 2\n        }\n        beats.append(beat)\n    }\n    return\
    \ beats", "    var result: [Int] = []\n    var music_array = music_string.components(separatedBy:\
    \ \" \")\n    for i in 0..<music_array.count {\n        switch music_array[i]\
    \ {\n        case \"o\":\n            result.append(4)\n        case \"o|\":\n\
    \            result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return result", " \
    \   var beats = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     print(\"Invalid note\")\n        }\n    }\n    return beats", "    let music_string\
    \ = music_string.replacingOccurrences(of: \" \", with: \"\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \"o\", with: \"4\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \"o|\", with: \"2\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \".|\", with: \"1\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \"|\", with: \"\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \".\", with: \"\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \" \", with: \"\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \"o\", with: \"4\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \"o|\", with: \"2\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \".|\", with: \"1\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \"|\", with: \"\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \".\", with: \"\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \" \", with: \"\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \"o\", with: \"4\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \"o|\", with: \"2\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \".|\", with: \"1\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \"|\", with: \"\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \".\", with: \"\")\n    let music_string\
    \ = music_string.replacingOccurrences(of: \" \", with: \"\")\n    let music_string\
    \ = music_string.replacing", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var music = music_string.components(separatedBy: \" \")\n    for i in 0..<music.count\
    \ {\n        if music[i] == \"o\" {\n            result.append(4)\n        } else\
    \ if music[i] == \"o|\" {\n            result.append(2)\n        } else if music[i]\
    \ == \".|\" {\n            result.append(1)\n        }\n    }\n    return result",
  "    var beats = [Int]()\n    for char in music_string {\n        switch char {\n\
    \        case \"o\":\n            beats.append(4)\n        case \"o|\":\n    \
    \        beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            continue\n        }\n    }\n    return beats",
  "    var beats = [Int]()\n    var beat = 0\n    for char in music_string {\n   \
    \     switch char {\n        case \"o\":\n            beat = 4\n        case \"\
    |\":\n            beats.append(beat)\n            beat = 0\n        case \".\"\
    :\n            beat = 1\n        default:\n            break\n        }\n    }\n\
    \    return beats", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    var music_array = music_string.components(separatedBy: \" \")\n    for note\
    \ in music_array {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        if note == \"o\" {\n        \
    \    result.append(4)\n        } else if note == \"o|\" {\n            result.append(2)\n\
    \        } else if note == \".|\" {\n            result.append(1)\n        }\n\
    \    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            beats.append(0)\n        }\n    }\n    return beats",
  "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var result = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    var beat = 0\n    for char in music_string {\n        if char == \"o\" {\n\
    \            beat = 4\n        } else if char == \"|\" {\n            beats.append(beat)\n\
    \            beat = 0\n        } else if char == \".\" {\n            beat = 1\n\
    \        }\n    }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result: [Int] = []\n    var count = 0\n    for char in music_string {\n\
    \        if char == \"o\" {\n            count += 1\n        } else if char ==\
    \ \"|\" {\n            result.append(count)\n            count = 0\n        }\n\
    \    }\n    return result", "    var result = [Int]()\n    for char in music_string\
    \ {\n        switch char {\n        case \"o\":\n            result.append(4)\n\
    \        case \"|\":\n            result.append(2)\n        case \".\":\n    \
    \        result.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return result", "    var result: [Int] = []\n    for char in music_string\
    \ {\n        switch char {\n        case \"o\":\n            result.append(4)\n\
    \        case \"|\":\n            result.append(2)\n        case \".\":\n    \
    \        result.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return result", "    var beats = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     print(\"Invalid note\")\n        }\n    }\n    return beats", "    var result\
    \ = [Int]()\n    var current_note = \"\"\n    for char in music_string {\n   \
    \     if char == \" \" {\n            if current_note == \"o\" {\n           \
    \     result.append(4)\n            } else if current_note == \"o|\" {\n     \
    \           result.append(2)\n            } else if current_note == \".|\" {\n\
    \                result.append(1)\n            }\n            current_note = \"\
    \"\n        } else {\n            current_note.append(char)\n        }\n    }\n\
    \    return result", "    var beats = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     print(\"Invalid note\")\n        }\n    }\n    return beats", "    var result:\
    \ [Int] = []\n    var music_string = music_string\n    while music_string.count\
    \ > 0 {\n        let index = music_string.index(of: \" \") ?? music_string.endIndex\n\
    \        let substring = music_string[..<index]\n        switch substring {\n\
    \        case \"o\":\n            result.append(4)\n        case \"o|\":\n   \
    \         result.append(2)\n        case \".|\":\n            result.append(1)\n\
    \        default:\n            break\n        }\n        music_string = String(music_string[index...])\n\
    \        music_string.removeFirst()\n    }\n    return result", "    var result\
    \ = [Int]()\n    var music = music_string.components(separatedBy: \" \")\n   \
    \ for i in 0..<music.count {\n        switch music[i] {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            beats.append(4)\n\
    \        case \"o|\":\n            beats.append(2)\n        case \".|\":\n   \
    \         beats.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return beats", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    var current_note = \"\"\n    for char in music_string\
    \ {\n        if char == \" \" {\n            if current_note == \"o\" {\n    \
    \            result.append(4)\n            } else if current_note == \"o|\" {\n\
    \                result.append(2)\n            } else if current_note == \".|\"\
    \ {\n                result.append(1)\n            }\n            current_note\
    \ = \"\"\n        } else {\n            current_note.append(char)\n        }\n\
    \    }\n    return result", "    var beats: [Int] = []\n    var music_string =\
    \ music_string\n    while music_string.count > 0 {\n        if music_string.hasPrefix(\"\
    o\") {\n            beats.append(4)\n            music_string.removeFirst()\n\
    \        } else if music_string.hasPrefix(\"o|\") {\n            beats.append(2)\n\
    \            music_string.removeFirst(2)\n        } else if music_string.hasPrefix(\"\
    .|\") {\n            beats.append(1)\n            music_string.removeFirst(2)\n\
    \        }\n    }\n    return beats", '    return []', "    var result = [Int]()\n\
    \    var notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        if note == \"o\" {\n            result.append(4)\n        }\
    \ else if note == \"o|\" {\n            result.append(2)\n        } else if note\
    \ == \".|\" {\n            result.append(1)\n        }\n    }\n    return result",
  "    let notes = music_string.split(separator: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  fatalError(\"Invalid note\")\n        }\n    }\n    return beats", "    var\
    \ result = [Int]()\n    let music_array = music_string.components(separatedBy:\
    \ \" \")\n    for note in music_array {\n        switch note {\n        case \"\
    o\":\n            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        switch note\
    \ {\n        case \"o\":\n            beats.append(4)\n        case \"o|\":\n\
    \            beats.append(2)\n        case \".|\":\n            beats.append(1)\n\
    \        default:\n            break\n        }\n    }\n    return beats", " \
    \   var result = [Int]()\n    var music = music_string.components(separatedBy:\
    \ \" \")\n    for note in music {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        if note == \"o\" {\n            result.append(4)\n\
    \        } else if note == \"o|\" {\n            result.append(2)\n        } else\
    \ if note == \".|\" {\n            result.append(1)\n        }\n    }\n    return\
    \ result", "    var result = [Int]()\n    var music_array = music_string.components(separatedBy:\
    \ \" \")\n    for i in 0..<music_array.count {\n        if music_array[i] == \"\
    o\" {\n            result.append(4)\n        } else if music_array[i] == \"o|\"\
    \ {\n            result.append(2)\n        } else if music_array[i] == \".|\"\
    \ {\n            result.append(1)\n        }\n    }\n    return result", "   \
    \ var beats = [Int]()\n    let notes = music_string.components(separatedBy: \"\
    \ \")\n    for note in notes {\n        switch note {\n        case \"o\":\n \
    \           beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    var result = [Int]()\n\
    \    var music_array = music_string.components(separatedBy: \" \")\n    for i\
    \ in 0..<music_array.count {\n        if music_array[i] == \"o\" {\n         \
    \   result.append(4)\n        } else if music_array[i] == \"o|\" {\n         \
    \   result.append(2)\n        } else if music_array[i] == \".|\" {\n         \
    \   result.append(1)\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    for char in music_string {\n        switch char {\n        case \"o\":\n\
    \            beats.append(4)\n        case \"|\":\n            beats.append(2)\n\
    \        case \".\":\n            beats.append(1)\n        default:\n        \
    \    break\n        }\n    }\n    return beats", "    return music_string.split(separator:\
    \ \" \").map {\n        switch $0 {\n        case \"o\":\n            return 4\n\
    \        case \"o|\":\n            return 2\n        case \".|\":\n          \
    \  return 1\n        default:\n            return 0\n        }\n    }", "    let\
    \ notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     beats.append(4)\n        case \"o|\":\n            beats.append(2)\n   \
    \     case \".|\":\n            beats.append(1)\n        default:\n          \
    \  break\n        }\n    }\n    return beats", "    var result = [Int]()\n   \
    \ let music_array = music_string.components(separatedBy: \" \")\n    for note\
    \ in music_array {\n        switch note {\n        case \"o\":\n            result.append(4)\n\
    \        case \"o|\":\n            result.append(2)\n        case \".|\":\n  \
    \          result.append(1)\n        default:\n            break\n        }\n\
    \    }\n    return result", "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      print(\"Invalid note\")\n        }\n    }\n    return result", "    let\
    \ notes = music_string.components(separatedBy: \" \")\n    var beats = [Int]()\n\
    \    for note in notes {\n        if note == \"o\" {\n            beats.append(4)\n\
    \        } else if note == \"o|\" {\n            beats.append(2)\n        } else\
    \ if note == \".|\" {\n            beats.append(1)\n        }\n    }\n    return\
    \ beats", "    var result: [Int] = []\n    let notes = music_string.components(separatedBy:\
    \ \" \")\n    for note in notes {\n        switch note {\n        case \"o\":\n\
    \            result.append(4)\n        case \"o|\":\n            result.append(2)\n\
    \        case \".|\":\n            result.append(1)\n        default:\n      \
    \      break\n        }\n    }\n    return result", "    var beats = [Int]()\n\
    \    let notes = music_string.components(separatedBy: \" \")\n    for note in\
    \ notes {\n        switch note {\n        case \"o\":\n            beats.append(4)\n\
    \        case \"o|\":\n            beats.append(2)\n        case \".|\":\n   \
    \         beats.append(1)\n        default:\n            break\n        }\n  \
    \  }\n    return beats", "    var beats = [Int]()\n    var currentBeat = 0\n \
    \   for char in music_string {\n        switch char {\n        case \"o\":\n \
    \           beats.append(4)\n        case \"o|\":\n            beats.append(2)\n\
    \        case \".|\":\n            beats.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return beats", "    var beats = [Int]()\n \
    \   var beat_count = 0\n    for char in music_string {\n        if char == \"\
    o\" {\n            beat_count += 4\n        } else if char == \"|\" {\n      \
    \      beats.append(beat_count)\n            beat_count = 0\n        } else if\
    \ char == \".\" {\n            beat_count += 1\n        }\n    }\n    return beats",
  "    var result = [Int]()\n    let notes = music_string.split(separator: \" \")\n\
    \    for note in notes {\n        switch note {\n        case \"o\":\n       \
    \     result.append(4)\n        case \"o|\":\n            result.append(2)\n \
    \       case \".|\":\n            result.append(1)\n        default:\n       \
    \     break\n        }\n    }\n    return result", "    let notes = music_string.components(separatedBy:\
    \ \" \")\n    var beats = [Int]()\n    for note in notes {\n        if note ==\
    \ \"o\" {\n            beats.append(4)\n        } else if note == \"o|\" {\n \
    \           beats.append(2)\n        } else if note == \".|\" {\n            beats.append(1)\n\
    \        }\n    }\n    return beats"]
stop_tokens:
- "\n}"

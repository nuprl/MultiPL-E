name: HumanEval_76_is_simple_power
language: swift
prompt: "\n/// Your task is to write a function that returns true if a number x is\
  \ a simple\n/// power of n and false in other cases.\n/// x is a simple power of\
  \ n if n**int=x\n/// For example:\n/// >>> is_simple_power(x: 1, n: 4)\n/// true\n\
  /// >>> is_simple_power(x: 2, n: 2)\n/// true\n/// >>> is_simple_power(x: 8, n:\
  \ 2)\n/// true\n/// >>> is_simple_power(x: 3, n: 2)\n/// false\n/// >>> is_simple_power(x:\
  \ 3, n: 1)\n/// false\n/// >>> is_simple_power(x: 5, n: 3)\n/// false\nfunc is_simple_power(x:\
  \ Int, n: Int) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(is_simple_power(x: 16, n: 2) == true)\n\
  assert(is_simple_power(x: 143214, n: 16) == false)\nassert(is_simple_power(x: 4,\
  \ n: 2) == true)\nassert(is_simple_power(x: 9, n: 3) == true)\nassert(is_simple_power(x:\
  \ 16, n: 4) == true)\nassert(is_simple_power(x: 24, n: 2) == false)\nassert(is_simple_power(x:\
  \ 128, n: 4) == false)\nassert(is_simple_power(x: 12, n: 6) == false)\nassert(is_simple_power(x:\
  \ 1, n: 1) == true)\nassert(is_simple_power(x: 1, n: 12) == true)"
completions: ["    if x == 1 {\n        return true\n    }\n    if n == 1 {\n    \
    \    return false\n    }\n    var i = 1\n    while i < x {\n        i *= n\n \
    \   }\n    return i == x", "    if x == 1 {\n        return true\n    }\n    if\
    \ n == 1 {\n        return false\n    }\n    var pow = n\n    while pow < x {\n\
    \        pow *= n\n    }\n    return pow == x", "    if x == 1 {\n        return\
    \ true\n    }\n    if n == 1 {\n        return false\n    }\n    var result =\
    \ n\n    while result < x {\n        result *= n\n    }\n    return result ==\
    \ x", '    return x == Int(pow(Double(n), Double(log(Double(x)) / log(Double(n)))))',
  "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var power = n\n    while power < x {\n        power *= n\n    }\n\
    \    return power == x", "    if x == 1 {\n        return true\n    }\n    if\
    \ n == 1 {\n        return false\n    }\n    var result = n\n    while result\
    \ < x {\n        result *= n\n    }\n    return result == x", "    if n == 1 {\n\
    \        return x == 1\n    }\n    var power = n\n    while power < x {\n    \
    \    power *= n\n    }\n    return power == x", '    return false', "    if x\
    \ == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var result = n\n    while result < x {\n        result *= n\n    }\n\
    \    return result == x", '    return x == n * n', '    return false', "    if\
    \ x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var result = n\n    while result < x {\n        result *= n\n    }\n\
    \    return result == x", "    var result = false\n    if x == 1 && n == 1 {\n\
    \        result = true\n    } else if x == 1 && n != 1 {\n        result = false\n\
    \    } else if x != 1 && n == 1 {\n        result = false\n    } else {\n    \
    \    for i in 1...x {\n            if pow(Double(n), Double(i)) == Double(x) {\n\
    \                result = true\n            }\n        }\n    }\n    return result",
  "    if n == 1 {\n        return x == 1\n    }\n    var i = 1\n    while i <= x\
    \ {\n        if i == x {\n            return true\n        }\n        i *= n\n\
    \    }\n    return false", "    if x == 1 {\n        return true\n    }\n    if\
    \ n == 1 {\n        return false\n    }\n    var i = 1\n    while i < x {\n  \
    \      i *= n\n    }\n    return i == x", '    return x == n * n', '    return
    false', "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n      \
    \  return false\n    }\n    var power = n\n    while power < x {\n        power\
    \ *= n\n    }\n    return power == x", "    if n == 1 {\n        return x == 1\n\
    \    }\n    var power = n\n    while power < x {\n        power *= n\n    }\n\
    \    return power == x", "    if x == 1 {\n        return true\n    }\n    if\
    \ n == 1 {\n        return false\n    }\n    var result = n\n    while result\
    \ < x {\n        result *= n\n    }\n    return result == x", "    if x == 1 {\n\
    \        return true\n    }\n    if n == 1 {\n        return false\n    }\n  \
    \  var power = n\n    while power < x {\n        power *= n\n    }\n    return\
    \ power == x", "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n\
    \        return false\n    }\n    var result = n\n    while result < x {\n   \
    \     result *= n\n    }\n    return result == x", "    if x == 1 {\n        return\
    \ true\n    }\n    if n == 1 {\n        return false\n    }\n    var result =\
    \ n\n    while result < x {\n        result *= n\n    }\n    return result ==\
    \ x", '    return x == n * n', "    if x == 1 {\n        return true\n    }\n\
    \    if n == 1 {\n        return false\n    }\n    var result = n\n    while result\
    \ < x {\n        result *= n\n    }\n    return result == x", '    return false',
  '    return x == 1 ? true : x % n == 0 ? is_simple_power(x: x / n, n: n) : false',
  '    return x == n * n', "    if x == 1 && n == 1 {\n        return true\n    }\n\
    \    if x == 1 && n != 1 {\n        return false\n    }\n    if n == 1 {\n   \
    \     return false\n    }\n    if x % n != 0 {\n        return false\n    }\n\
    \    if x == n {\n        return true\n    }\n    return is_simple_power(x: x\
    \ / n, n: n)", '    return x == n * n', '    return false', '    return false',
  "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var power = n\n    while power < x {\n        power *= n\n    }\n\
    \    return power == x", "    if n == 1 {\n        return false\n    }\n    var\
    \ result = 1\n    for _ in 1...x {\n        result *= n\n        if result ==\
    \ x {\n            return true\n        }\n    }\n    return false", "    if x\
    \ == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var result = 1\n    for _ in 1...x {\n        result *= n\n      \
    \  if result == x {\n            return true\n        }\n    }\n    return false",
  '    return false', '    return false', '    return false', '    return false',
  "    var result = false\n    if n == 1 {\n        result = x == 1\n    } else {\n\
    \        var power = n\n        while power < x {\n            power *= n\n  \
    \      }\n        result = power == x\n    }\n    return result", "    if x ==\
    \ 1 {\n        return true\n    }\n    var result = 1\n    for _ in 1...x {\n\
    \        result *= n\n        if result == x {\n            return true\n    \
    \    }\n    }\n    return false", "    if x == 1 {\n        return true\n    }\n\
    \    if n == 1 {\n        return false\n    }\n    var result = n\n    while result\
    \ < x {\n        result *= n\n    }\n    return result == x", "    if x == 1 {\n\
    \        return true\n    }\n    if n == 1 {\n        return false\n    }\n  \
    \  var result = n\n    while result < x {\n        result *= n\n    }\n    return\
    \ result == x", "    guard n > 0 else { return false }\n    guard x > 0 else {\
    \ return false }\n    if x == 1 { return true }\n    var x = x\n    while x %\
    \ n == 0 {\n        x /= n\n    }\n    return x == 1", "    if x == 1 {\n    \
    \    return true\n    }\n    if n == 1 {\n        return false\n    }\n    var\
    \ result = n\n    while result < x {\n        result *= n\n    }\n    return result\
    \ == x", "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n     \
    \   return false\n    }\n    var nn = n\n    while nn < x {\n        nn *= n\n\
    \    }\n    return nn == x", "    if n == 1 {\n        return x == 1\n    }\n\
    \    if x == 1 {\n        return false\n    }\n    var i = 1\n    while i <= x\
    \ {\n        if i == x {\n            return true\n        }\n        i *= n\n\
    \    }\n    return false", '    return x == Int(pow(Double(n), Double(log(Double(x))
    / log(Double(n)))))', '    return false', "    if x == 1 {\n        return true\n\
    \    }\n    if n == 1 {\n        return false\n    }\n    var i = 1\n    while\
    \ i <= x {\n        if i == x {\n            return true\n        }\n        i\
    \ *= n\n    }\n    return false", "    if x == 1 {\n        return true\n    }\n\
    \    var num = n\n    while num < x {\n        num *= n\n    }\n    return num\
    \ == x", '    return false', "    if x == 1 {\n        return true\n    }\n  \
    \  if n == 1 {\n        return false\n    }\n    var x = x\n    var n = n\n  \
    \  while x % n == 0 {\n        x /= n\n    }\n    return x == 1", "    if x ==\
    \ 1 {\n        return true\n    }\n    var result = 1\n    for _ in 1...x {\n\
    \        result *= n\n        if result == x {\n            return true\n    \
    \    }\n    }\n    return false", '    return false', "    if x == 1 {\n     \
    \   return true\n    }\n    if n == 1 {\n        return false\n    }\n    var\
    \ result = n\n    while result < x {\n        result *= n\n    }\n    return result\
    \ == x", "    if x == 0 {\n        return false\n    }\n    if n == 0 {\n    \
    \    return false\n    }\n    if n == 1 {\n        return false\n    }\n    var\
    \ result = x\n    while result % n == 0 {\n        result /= n\n    }\n    return\
    \ result == 1", "    if x == 0 {\n        return false\n    }\n    if n == 0 {\n\
    \        return false\n    }\n    if n == 1 {\n        return true\n    }\n  \
    \  if x == 1 {\n        return true\n    }\n    if x == n {\n        return true\n\
    \    }\n    var power = n\n    while power < x {\n        power *= n\n    }\n\
    \    return power == x", '    return false', "    if x == 1 {\n        return\
    \ true\n    }\n    if n == 1 {\n        return false\n    }\n    var i = 1\n \
    \   while pow(Double(n), Double(i)) <= Double(x) {\n        if pow(Double(n),\
    \ Double(i)) == Double(x) {\n            return true\n        }\n        i +=\
    \ 1\n    }\n    return false", "    if x == 1 {\n        return true\n    }\n\
    \    var i = 1\n    while i < x {\n        i *= n\n        if i == x {\n     \
    \       return true\n        }\n    }\n    return false", '    return x == n *
    n', "    if x == 1 {\n        return true\n    }\n    var result = n\n    while\
    \ result < x {\n        result *= n\n    }\n    return result == x", "    if x\
    \ == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var i = 1\n    while i < x {\n        i *= n\n    }\n    return i\
    \ == x", "    if n == 1 {\n        return x == 1\n    }\n    var i = 1\n    while\
    \ i <= x {\n        if i == x {\n            return true\n        }\n        i\
    \ *= n\n    }\n    return false", "    if x == 1 {\n        return true\n    }\n\
    \    if n == 1 {\n        return false\n    }\n    var result = n\n    while result\
    \ < x {\n        result *= n\n    }\n    return result == x", "    if x == 1 {\n\
    \        return true\n    }\n    if n == 1 {\n        return false\n    }\n  \
    \  var x = x\n    var n = n\n    while x % n == 0 {\n        x /= n\n    }\n \
    \   return x == 1", "    if x == 1 {\n        return true\n    }\n    var i =\
    \ 1\n    while pow(Double(n), Double(i)) <= Double(x) {\n        if pow(Double(n),\
    \ Double(i)) == Double(x) {\n            return true\n        }\n        i +=\
    \ 1\n    }\n    return false", "    if n == 1 {\n        return x == 1\n    }\n\
    \    if x == 1 {\n        return false\n    }\n    var i = 1\n    while i < x\
    \ {\n        i *= n\n    }\n    return i == x", "    if x == 1 {\n        return\
    \ true\n    }\n    if n == 1 {\n        return false\n    }\n    var result =\
    \ n\n    while result < x {\n        result *= n\n    }\n    return result ==\
    \ x", "    if n == 1 {\n        return x == 1\n    }\n    var i = 1\n    while\
    \ i < x {\n        i *= n\n    }\n    return i == x", "    if x == 1 {\n     \
    \   return true\n    }\n    var result = 1\n    for _ in 1...n {\n        result\
    \ *= n\n        if result == x {\n            return true\n        }\n    }\n\
    \    return false", "    if x == 1 {\n        return true\n    }\n    if n ==\
    \ 1 {\n        return false\n    }\n    var result = n\n    while result < x {\n\
    \        result *= n\n    }\n    return result == x", "    if x == 1 {\n     \
    \   return true\n    }\n    if n == 1 {\n        return false\n    }\n    var\
    \ i = 1\n    while i <= x {\n        if i == x {\n            return true\n  \
    \      }\n        i *= n\n    }\n    return false", "    if x == 1 {\n       \
    \ return true\n    }\n    if n == 1 {\n        return false\n    }\n    var i\
    \ = 1\n    while i < x {\n        i *= n\n    }\n    return i == x", '    return
    false', "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n      \
    \  return false\n    }\n    var temp = n\n    while temp < x {\n        temp *=\
    \ n\n    }\n    return temp == x", "    if n == 1 {\n        return x == 1\n \
    \   }\n    var i = 1\n    while i <= x {\n        if i == x {\n            return\
    \ true\n        }\n        i *= n\n    }\n    return false", "    if x == 1 {\n\
    \        return true\n    }\n    if n == 1 {\n        return false\n    }\n  \
    \  var i = 1\n    while i < x {\n        i *= n\n    }\n    return i == x", " \
    \   if x == 1 {\n        return true\n    }\n    var i = 1\n    while i <= x {\n\
    \        if i == x {\n            return true\n        }\n        i *= n\n   \
    \ }\n    return false", "    if x == 0 {\n        return false\n    }\n    if\
    \ n == 0 {\n        return false\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    if x == 1 {\n        return true\n    }\n    var result = 1\n    var\
    \ i = 1\n    while result < x {\n        result = n * i\n        i += 1\n    }\n\
    \    if result == x {\n        return true\n    }\n    return false", "    if\
    \ x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var result = n\n    while result < x {\n        result *= n\n    }\n\
    \    return result == x", "    if n == 1 {\n        return x == 1\n    }\n   \
    \ var i = 1\n    while i <= x {\n        if i == x {\n            return true\n\
    \        }\n        i *= n\n    }\n    return false", "    if x == 0 {\n     \
    \   return false\n    }\n    if n == 0 {\n        return false\n    }\n    if\
    \ n == 1 {\n        return true\n    }\n    var x = x\n    var n = n\n    while\
    \ x % n == 0 {\n        x /= n\n    }\n    return x == 1", "    if x == 1 {\n\
    \        return true\n    }\n    if n == 1 {\n        return false\n    }\n  \
    \  var result = n\n    while result < x {\n        result *= n\n    }\n    return\
    \ result == x", '    return false', "    if x == 1 {\n        return true\n  \
    \  }\n    if n == 1 {\n        return false\n    }\n    var i = 1\n    while pow(Double(n),\
    \ Double(i)) <= Double(x) {\n        if pow(Double(n), Double(i)) == Double(x)\
    \ {\n            return true\n        }\n        i += 1\n    }\n    return false",
  '    return false', "    guard x > 0 && n > 0 else { return false }\n    guard x\
    \ != 1 else { return true }\n    guard n != 1 else { return false }\n    var result\
    \ = x\n    while result % n == 0 {\n        result /= n\n    }\n    return result\
    \ == 1", "    var result = false\n    if x == 1 {\n        result = true\n   \
    \ } else if x % n == 0 {\n        result = is_simple_power(x: x / n, n: n)\n \
    \   }\n    return result", "    if x < 0 || n < 0 {\n        return false\n  \
    \  }\n    if x == 0 && n == 0 {\n        return false\n    }\n    if x == 0 &&\
    \ n != 0 {\n        return true\n    }\n    if x == 1 && n == 0 {\n        return\
    \ true\n    }\n    if x == 1 && n != 0 {\n        return false\n    }\n    if\
    \ n == 0 {\n        return false\n    }\n    if n == 1 {\n        return true\n\
    \    }\n    if x == n {\n        return true\n    }\n    var result = 1\n    var\
    \ i = 1\n    while result <= x {\n        result = n * n\n        i += 1\n   \
    \ }\n    if result == x {\n        return true\n    }\n    return false", '    return
    x > 0 && n > 0 && pow(Double(n), Double(Int(log(Double(x)) / log(Double(n)))))
    == Double(x)', "    if x == 1 {\n        return true\n    }\n    var result =\
    \ 1\n    for _ in 1...x {\n        result *= n\n        if result == x {\n   \
    \         return true\n        }\n    }\n    return false", '    return false',
  '    return false', '    return x == n * n', "    if n == 1 {\n        return x\
    \ == 1\n    }\n    if x == 1 {\n        return false\n    }\n    if x == n {\n\
    \        return true\n    }\n    var result = n\n    while result < x {\n    \
    \    result *= n\n    }\n    return result == x", "    if x == 1 {\n        return\
    \ true\n    }\n    if n == 1 {\n        return false\n    }\n    var i = 1\n \
    \   while i < x {\n        i *= n\n    }\n    return i == x", "    if x == 1 {\n\
    \        return true\n    }\n    if n == 1 {\n        return false\n    }\n  \
    \  var result = n\n    while result < x {\n        result *= n\n    }\n    return\
    \ result == x", "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n\
    \        return false\n    }\n    var i = 2\n    while i < x {\n        if i ==\
    \ x {\n            return true\n        }\n        i *= n\n    }\n    return false",
  "    if n == 1 {\n        return x == 1\n    }\n    var i = 1\n    while i < x {\n\
    \        i *= n\n    }\n    return i == x", "    if n == 1 {\n        return x\
    \ == 1\n    }\n    if x == 1 {\n        return false\n    }\n    var i = 1\n \
    \   while i < x {\n        i *= n\n    }\n    return i == x", "    if x == 1 {\n\
    \        return true\n    }\n    var i = 1\n    while i < x {\n        i *= n\n\
    \        if i == x {\n            return true\n        }\n    }\n    return false",
  "    if x == 1 {\n        return true\n    }\n    var power = n\n    while power\
    \ < x {\n        power *= n\n    }\n    return power == x", "    if n == 1 {\n\
    \        return x == 1\n    }\n    var i = 1\n    while i <= x {\n        if i\
    \ == x {\n            return true\n        }\n        i *= n\n    }\n    return\
    \ false", "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n    \
    \    return false\n    }\n    var x = x\n    while x % n == 0 {\n        x /=\
    \ n\n    }\n    return x == 1", '    return false', '    return false', "    if\
    \ x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var power = n\n    while power < x {\n        power *= n\n    }\n\
    \    return power == x", "    if x == 1 {\n        return true\n    }\n    if\
    \ n == 1 {\n        return false\n    }\n    var result = x\n    while result\
    \ % n == 0 {\n        result /= n\n    }\n    return result == 1", '    return
    false', "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n      \
    \  return false\n    }\n    var power = n\n    while power < x {\n        power\
    \ *= n\n    }\n    return power == x", '    return false', "    if x == 1 {\n\
    \        return true\n    }\n    if n == 1 {\n        return false\n    }\n  \
    \  var i = 1\n    while i <= x {\n        if i == x {\n            return true\n\
    \        }\n        i *= n\n    }\n    return false", "    if x == 1 {\n     \
    \   return true\n    }\n    var i = 1\n    while i <= x {\n        if i == x {\n\
    \            return true\n        }\n        i *= n\n    }\n    return false",
  "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var i = 1\n    while i < x {\n        i *= n\n    }\n    return i\
    \ == x", "    if n == 1 {\n        return x == 1\n    }\n    var power = n\n \
    \   while power < x {\n        power *= n\n    }\n    return power == x", "  \
    \  if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var result = n\n    while result < x {\n        result *= n\n    }\n\
    \    return result == x", '    return x == Int(pow(Double(n), Double(Int(log(Double(x))
    / log(Double(n))))))', '    return false', "    if x == 1 {\n        return true\n\
    \    }\n    if n == 1 {\n        return false\n    }\n    var result = n\n   \
    \ while result < x {\n        result *= n\n    }\n    return result == x", " \
    \   if n == 1 {\n        return x == 1\n    }\n    var result = 1\n    var i =\
    \ 1\n    while result <= x {\n        result = n * n\n        i += 1\n    }\n\
    \    return result == x", '    return false', "    if x == 1 {\n        return\
    \ true\n    }\n    var i = 1\n    while i <= x {\n        if i == x {\n      \
    \      return true\n        }\n        i *= n\n    }\n    return false", "   \
    \ if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var result = n\n    while result < x {\n        result *= n\n    }\n\
    \    return result == x", "    if n == 1 {\n        return x == 1\n    }\n   \
    \ var i = 1\n    while i < x {\n        i *= n\n    }\n    return i == x", " \
    \   if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var power = n\n    while power < x {\n        power *= n\n    }\n\
    \    return power == x", '    return false', "    if x == 1 {\n        return\
    \ true\n    }\n    if n == 1 {\n        return false\n    }\n    if x == n {\n\
    \        return true\n    }\n    var result = n\n    while result < x {\n    \
    \    result *= n\n    }\n    return result == x", '    return false', "    if\
    \ n == 1 {\n        return x == 1\n    }\n    var power = n\n    while power <=\
    \ x {\n        if power == x {\n            return true\n        }\n        power\
    \ *= n\n    }\n    return false", "    if n == 1 {\n        return x == 1\n  \
    \  }\n    if x == 1 {\n        return false\n    }\n    var result = 1\n    var\
    \ i = 1\n    while result < x {\n        result *= n\n        i += 1\n    }\n\
    \    return result == x", "    if x == 1 {\n        return true\n    }\n    var\
    \ i = 1\n    while i < x {\n        if i == x {\n            return true\n   \
    \     }\n        i *= n\n    }\n    return false", "    if x == 1 {\n        return\
    \ true\n    }\n    if n == 1 {\n        return false\n    }\n    var result =\
    \ n\n    while result < x {\n        result *= n\n    }\n    return result ==\
    \ x", "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return\
    \ false\n    }\n    var i = 1\n    while i < x {\n        i *= n\n    }\n    return\
    \ i == x", "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n   \
    \     return false\n    }\n    var i = 1\n    while i <= x {\n        if i ==\
    \ x {\n            return true\n        }\n        i *= n\n    }\n    return false",
  "    if n == 1 {\n        return x == 1\n    }\n    if x == 1 {\n        return\
    \ false\n    }\n    var i = 1\n    while i < x {\n        i *= n\n    }\n    return\
    \ i == x", '    return x == Int(pow(Double(n), Double(Int(log(Double(x)) / log(Double(n))))))',
  "    var result = false\n    if n == 1 {\n        if x == 1 {\n            result\
    \ = true\n        }\n    } else {\n        var i = 1\n        while i <= x {\n\
    \            if i == x {\n                result = true\n            }\n     \
    \       i *= n\n        }\n    }\n    return result", "    if x == 1 {\n     \
    \   return true\n    }\n    if n == 1 {\n        return false\n    }\n    var\
    \ power = n\n    while power < x {\n        power *= n\n    }\n    return power\
    \ == x", '    return x == n * n', '    return x == n * n', "    if x == 1 {\n\
    \        return true\n    }\n    if n == 1 {\n        return false\n    }\n  \
    \  var power = n\n    while power < x {\n        power *= n\n    }\n    return\
    \ power == x", '    return false', "    guard x > 0 && n > 0 else { return false\
    \ }\n    guard x != 1 else { return true }\n    guard n != 1 else { return false\
    \ }\n    var result = 1\n    for _ in 1...n {\n        result *= n\n        if\
    \ result == x {\n            return true\n        }\n    }\n    return false",
  "    if x == 1 {\n        return true\n    }\n    var i = 1\n    while i < x {\n\
    \        i *= n\n        if i == x {\n            return true\n        }\n   \
    \ }\n    return false", "    if x == 1 {\n        return true\n    }\n    if n\
    \ == 1 {\n        return false\n    }\n    var result = 1\n    var i = 1\n   \
    \ while result < x {\n        result = n * i\n        i += 1\n    }\n    return\
    \ result == x", "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n\
    \        return false\n    }\n    var power = n\n    while power < x {\n     \
    \   power *= n\n    }\n    return power == x", "    if x == 1 {\n        return\
    \ true\n    }\n    if n == 1 {\n        return false\n    }\n    if x == n {\n\
    \        return true\n    }\n    var result = n\n    while result < x {\n    \
    \    result *= n\n    }\n    return result == x", '    return false', '    return
    false', '    return x == Int(pow(Double(n), Double(Int(log(Double(x)) / log(Double(n))))))',
  "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var i = 1\n    while i < x {\n        i *= n\n    }\n    return i\
    \ == x", "    if n == 1 {\n        return x == 1\n    }\n    var i = 1\n    while\
    \ i < x {\n        i *= n\n    }\n    return i == x", "    if x == 1 {\n     \
    \   return true\n    }\n    if n == 1 {\n        return false\n    }\n    var\
    \ x = x\n    var n = n\n    while x % n == 0 {\n        x /= n\n    }\n    return\
    \ x == 1", '    return x == Int(pow(Double(n), Double(Int(log(Double(x)) / log(Double(n))))))',
  '    return false', "    if x == 1 {\n        return true\n    }\n    if n == 1\
    \ {\n        return false\n    }\n    var result = n\n    while result < x {\n\
    \        result *= n\n    }\n    return result == x", '    return x == Int(pow(Double(n),
    Double(Int(log(Double(x)) / log(Double(n))))))', "    if x == 1 {\n        return\
    \ true\n    }\n    if n == 1 {\n        return false\n    }\n    var i = 1\n \
    \   while i <= x {\n        if i == x {\n            return true\n        }\n\
    \        i *= n\n    }\n    return false", "    if x == 1 {\n        return true\n\
    \    }\n    if n == 1 {\n        return false\n    }\n    var result = n\n   \
    \ while result < x {\n        result *= n\n    }\n    return result == x", '    return
    false', "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n      \
    \  return false\n    }\n    var i = 2\n    while i < x {\n        if i == x {\n\
    \            return true\n        }\n        i *= n\n    }\n    return false",
  "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var x = x\n    var n = n\n    while x % n == 0 {\n        x /= n\n\
    \    }\n    return x == 1", "    guard x > 0 && n > 0 else { return false }\n\
    \    guard x != 1 else { return true }\n    guard n != 1 else { return false }\n\
    \    var i = 1\n    while i <= x {\n        if i == x { return true }\n      \
    \  i *= n\n    }\n    return false", "    if x == 1 {\n        return true\n \
    \   }\n    var result = n\n    while result < x {\n        result *= n\n    }\n\
    \    return result == x", "    if x == 1 {\n        return true\n    }\n    if\
    \ n == 1 {\n        return false\n    }\n    var result = n\n    while result\
    \ < x {\n        result *= n\n    }\n    return result == x", "    if x == 1 {\n\
    \        return true\n    }\n    if n == 1 {\n        return false\n    }\n  \
    \  var result = 1\n    for _ in 1...x {\n        result *= n\n        if result\
    \ == x {\n            return true\n        }\n    }\n    return false", "    if\
    \ x == 0 {\n        return false\n    }\n    if n == 0 {\n        return false\n\
    \    }\n    if x == 1 {\n        return true\n    }\n    if n == 1 {\n       \
    \ return false\n    }\n    var result = 1\n    var count = 0\n    while result\
    \ < x {\n        result *= n\n        count += 1\n    }\n    if result == x {\n\
    \        return true\n    }\n    return false", '    return false', '    return
    false', "    if n == 1 {\n        return x == 1\n    }\n    if x == 1 {\n    \
    \    return false\n    }\n    var i = 1\n    while i <= x {\n        if i == x\
    \ {\n            return true\n        }\n        i *= n\n    }\n    return false",
  '    return false', '    return false', "    if x == 1 {\n        return true\n\
    \    }\n    if n == 1 {\n        return false\n    }\n    var result = n\n   \
    \ while result < x {\n        result *= n\n    }\n    return result == x", '    return
    false', "    var result = false\n    if x == 1 {\n        result = true\n    }\
    \ else if x == n {\n        result = true\n    } else if x % n == 0 {\n      \
    \  result = is_simple_power(x: x / n, n: n)\n    }\n    return result", "    if\
    \ x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var power = n\n    while power < x {\n        power *= n\n    }\n\
    \    return power == x", "    if x == 1 {\n        return true\n    }\n    var\
    \ result = n\n    while result < x {\n        result *= n\n    }\n    return result\
    \ == x", '    return false', "    if x == 1 {\n        return true\n    }\n  \
    \  var result = 1\n    for _ in 1...x {\n        result *= n\n        if result\
    \ == x {\n            return true\n        }\n    }\n    return false", "    if\
    \ x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var i = 1\n    while i <= x {\n        if i == x {\n            return\
    \ true\n        }\n        i *= n\n    }\n    return false", "    if x == 0 {\n\
    \        return false\n    }\n    if n == 0 {\n        return false\n    }\n \
    \   if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var power = n\n    while power < x {\n        power *= n\n    }\n\
    \    return power == x", "    if n == 1 {\n        return x == 1\n    }\n    var\
    \ result = 1\n    for _ in 1...x {\n        result *= n\n        if result ==\
    \ x {\n            return true\n        }\n    }\n    return false", "    if x\
    \ == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var i = 1\n    while i <= x {\n        if i == x {\n            return\
    \ true\n        }\n        i *= n\n    }\n    return false", '    return false',
  "    if n == 1 {\n        return x == 1\n    }\n    var power = n\n    while power\
    \ < x {\n        power *= n\n    }\n    return power == x", "    if x == 1 {\n\
    \        return true\n    }\n    if n == 1 {\n        return false\n    }\n  \
    \  var result = n\n    while result < x {\n        result *= n\n    }\n    return\
    \ result == x", '    return false', "    if x == 1 {\n        return true\n  \
    \  }\n    var result = n\n    while result < x {\n        result *= n\n    }\n\
    \    return result == x", "    var result = false\n    if x == 1 {\n        result\
    \ = true\n    } else if n == 1 {\n        result = false\n    } else {\n     \
    \   var i = 1\n        while i < x {\n            i *= n\n            if i ==\
    \ x {\n                result = true\n            }\n        }\n    }\n    return\
    \ result", "    if x == 1 {\n        return true\n    }\n    if n == 1 {\n   \
    \     return false\n    }\n    var i = 1\n    while pow(Double(n), Double(i))\
    \ <= Double(x) {\n        if pow(Double(n), Double(i)) == Double(x) {\n      \
    \      return true\n        }\n        i += 1\n    }\n    return false", "   \
    \ if x == 1 {\n        return true\n    }\n    if n == 1 {\n        return false\n\
    \    }\n    var result = n\n    while result < x {\n        result *= n\n    }\n\
    \    return result == x", "    if x == 1 {\n        return true\n    }\n    if\
    \ n == 1 {\n        return false\n    }\n    var result = n\n    while result\
    \ < x {\n        result *= n\n    }\n    return result == x", "    if x == 1 {\n\
    \        return true\n    }\n    if n == 1 {\n        return false\n    }\n  \
    \  var power = n\n    while power < x {\n        power *= n\n    }\n    return\
    \ power == x", '    return false', "    guard x > 0 && n > 0 else { return false\
    \ }\n    guard x != 1 else { return true }\n    guard n != 1 else { return false\
    \ }\n    var result = 1\n    for _ in 1...n {\n        result *= n\n        if\
    \ result == x {\n            return true\n        }\n    }\n    return false",
  '    return x == Int(pow(Double(n), Double(Int(log(Double(x)) / log(Double(n))))))',
  '    return false', "    if n == 1 {\n        return x == 1\n    }\n    var x =\
    \ x\n    var n = n\n    while x > 1 {\n        if x % n != 0 {\n            return\
    \ false\n        }\n        x /= n\n    }\n    return true"]
stop_tokens:
- "\n}"

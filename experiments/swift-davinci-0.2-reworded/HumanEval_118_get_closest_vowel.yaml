name: HumanEval_118_get_closest_vowel
language: swift
prompt: "\n/// You are given a word. Your task is to find the closest vowel that stands\
  \ between \n/// two consonants from the right side of the word (case sensitive).\n\
  /// Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n/// find any vowel met the above condition. \n/// You may assume that\
  \ the given string contains English letter only.\n/// Example:\n/// >>> get_closest_vowel(word:\
  \ \"yogurt\")\n/// \"u\"\n/// >>> get_closest_vowel(word: \"FULL\")\n/// \"U\"\n\
  /// >>> get_closest_vowel(word: \"quick\")\n/// \"\"\n/// >>> get_closest_vowel(word:\
  \ \"ab\")\n/// \"\"\nfunc get_closest_vowel(word: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(get_closest_vowel(word: \"yogurt\") == \"\
  u\")\nassert(get_closest_vowel(word: \"full\") == \"u\")\nassert(get_closest_vowel(word:\
  \ \"easy\") == \"\")\nassert(get_closest_vowel(word: \"eAsy\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ali\") == \"\")\nassert(get_closest_vowel(word: \"bad\") == \"a\")\nassert(get_closest_vowel(word:\
  \ \"most\") == \"o\")\nassert(get_closest_vowel(word: \"ab\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ba\") == \"\")\nassert(get_closest_vowel(word: \"quick\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"anime\") == \"i\")\nassert(get_closest_vowel(word: \"Asia\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"Above\") == \"o\")"
completions: ["    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var index = 0\n    var prev = \"\"\n    var\
    \ curr = \"\"\n    var next = \"\"\n    for char in word.characters {\n      \
    \  if index == 0 {\n            prev = \" \"\n        } else {\n            prev\
    \ = String(word[word.index(word.startIndex, offsetBy: index - 1)])\n        }\n\
    \        curr = String(char)\n        if index == word.characters.count - 1 {\n\
    \            next = \" \"\n        } else {\n            next = String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])\n        }\n        if vowels.contains(curr) && consonants.contains(prev)\
    \ && consonants.contains(next) {\n            closestVowel = curr\n        }\n\
    \        index += 1\n    }\n    return closestVowel", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestIndex\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ !vowels.contains(String(word[word.index(word.startIndex, offsetBy: index - 1)]))\
    \ && !vowels.contains(String(word[word.index(word.startIndex, offsetBy: index\
    \ + 1)])) {\n                    if index < closestIndex {\n                 \
    \       closestIndex = index\n                        closestVowel = String(char)\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var result = \"\"\n    var index = word.count - 1\n    var\
    \ prev = \"\"\n    var next = \"\"\n    while index >= 0 {\n        let char =\
    \ String(word[word.index(word.startIndex, offsetBy: index)])\n        if vowels.contains(char)\
    \ {\n            if prev != \"\" && next != \"\" {\n                result = char\n\
    \                break\n            }\n        } else if consonants.contains(char)\
    \ {\n            if prev == \"\" {\n                prev = char\n            }\
    \ else {\n                next = char\n            }\n        }\n        index\
    \ -= 1\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel: String = \"\
    \"\n    var index: Int = 0\n    for i in stride(from: word.count - 1, to: 0, by:\
    \ -1) {\n        let char = word[word.index(word.startIndex, offsetBy: i)]\n \
    \       if vowels.contains(char) {\n            vowel = String(char)\n       \
    \     index = i\n            break\n        }\n    }\n    if vowel == \"\" {\n\
    \        return \"\"\n    }\n    for i in stride(from: index - 1, to: 0, by: -1)\
    \ {\n        let char = word[word.index(word.startIndex, offsetBy: i)]\n     \
    \   if consonants.contains(char) {\n            return vowel\n        }\n    }\n\
    \    return \"\"", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    y\", \"z\"]\n    var closestVowel: String = \"\"\n    var lastConsonantIndex:\
    \ Int = -1\n    for (index, char) in word.lowercased().reversed().enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if lastConsonantIndex\
    \ != -1 {\n                closestVowel = String(char)\n                break\n\
    \            }\n        } else if consonants.contains(String(char)) {\n      \
    \      lastConsonantIndex = index\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestVowelIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                let previousChar = word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]\n                let nextChar = word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]\n                if !vowels.contains(String(previousChar))\
    \ && !vowels.contains(String(nextChar)) {\n                    if index < closestVowelIndex\
    \ {\n                        closestVowel = String(char)\n                   \
    \     closestVowelIndex = index\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return closestVowel", "    let vowels = \"\
    aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            vowelIndex = index\n        }\n        if consonants.contains(char)\
    \ {\n            consonantIndex = index\n        }\n        if vowelIndex > consonantIndex\
    \ {\n            closestVowel = String(char)\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel\
    \ = \"\"\n    var closestVowelIndex = -1\n    var lastConsonantIndex = -1\n  \
    \  var currentIndex = 0\n    for char in word {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            if lastConsonantIndex != -1 && currentIndex - lastConsonantIndex\
    \ < closestVowelIndex - lastConsonantIndex || closestVowelIndex == -1 {\n    \
    \            closestVowel = String(char)\n                closestVowelIndex =\
    \ currentIndex\n            }\n        } else if consonants.contains(String(char).lowercased())\
    \ {\n            lastConsonantIndex = currentIndex\n        }\n        currentIndex\
    \ += 1\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var index = 0\n    var\
    \ vowelIndex = 0\n    var consonantIndex = 0\n    var vowelCount = 0\n    var\
    \ consonantCount = 0\n    for char in word.characters {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            vowelCount += 1\n            vowelIndex = index\n        } else\
    \ if consonants.contains(String(char).lowercased()) {\n            consonantCount\
    \ += 1\n            consonantIndex = index\n        }\n        index += 1\n  \
    \  }\n    if vowelCount == 0 || consonantCount == 0 {\n        return \"\"\n \
    \   }\n    if vowelIndex > consonantIndex {\n        return \"\"\n    }\n    return\
    \ String(word[word.index(word.startIndex, offsetBy: vowelIndex)])", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = -1\n    var consonantIndex\
    \ = -1\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            vowelIndex = index\n        }\n        if consonants.contains(char)\
    \ {\n            consonantIndex = index\n        }\n        if vowelIndex != -1\
    \ && consonantIndex != -1 && consonantIndex > vowelIndex {\n            closestVowel\
    \ = String(char)\n            break\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var distance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    if index < distance {\n     \
    \                   distance = index\n                        closestVowel = String(char)\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    var closestVowel = \"\"\n    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var wordArray = Array(word)\n\
    \    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowelDistance = 0\n\
    \    var consonantDistance = 0\n    var closestDistance = 0\n    for i in 0..<wordArray.count\
    \ {\n        if vowels.contains(String(wordArray[i]).lowercased()) {\n       \
    \     vowelIndex = i\n            for j in (0..<wordArray.count).reversed() {\n\
    \                if consonants.contains(String(wordArray[j]).lowercased()) {\n\
    \                    consonantIndex = j\n                    vowelDistance = vowelIndex\
    \ - consonantIndex\n                    if vowelDistance > 0 {\n             \
    \           if closestDistance == 0 {\n                            closestDistance\
    \ = vowelDistance\n                            closestVowel = String(wordArray[vowelIndex])\n\
    \                        } else if vowelDistance < closestDistance {\n       \
    \                     closestDistance = vowelDistance\n                      \
    \      closestVowel = String(wordArray[vowelIndex])\n                        }\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var closest_vowel = \"\"\n    var closest_vowel_index = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ consonants.contains(String(word[word.index(word.startIndex, offsetBy: index\
    \ - 1)]).lowercased()) && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]).lowercased()) {\n                    if index < closest_vowel_index\
    \ {\n                        closest_vowel = String(char)\n                  \
    \      closest_vowel_index = index\n                    }\n                }\n\
    \            }\n        }\n    }\n    return closest_vowel", "    let vowels =\
    \ \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var index = word.count - 1\n    var foundVowel\
    \ = false\n    var foundConsonant = false\n    while index >= 0 {\n        let\
    \ char = String(word[word.index(word.startIndex, offsetBy: index)])\n        if\
    \ vowels.contains(char) {\n            if foundConsonant {\n                closestVowel\
    \ = char\n                foundVowel = true\n                break\n         \
    \   }\n        } else if consonants.contains(char) {\n            foundConsonant\
    \ = true\n        }\n        index -= 1\n    }\n    if !foundVowel {\n       \
    \ closestVowel = \"\"\n    }\n    return closestVowel", "    var vowel = \"\"\n\
    \    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var arr\
    \ = Array(word)\n    var i = arr.count - 1\n    while i >= 0 {\n        if vowels.contains(String(arr[i]).lowercased())\
    \ {\n            vowel = String(arr[i])\n            break\n        }\n      \
    \  i -= 1\n    }\n    if vowel == \"\" {\n        return \"\"\n    }\n    var\
    \ j = i - 1\n    while j >= 0 {\n        if consonants.contains(String(arr[j]).lowercased())\
    \ {\n            return vowel\n        }\n        j -= 1\n    }\n    return \"\
    \"", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    var prev = \"\"\n\
    \    var next = \"\"\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            if prev\
    \ != \"\" && next != \"\" {\n                result = char\n                break\n\
    \            }\n        } else if consonants.contains(char) {\n            if\
    \ prev == \"\" {\n                prev = char\n            } else {\n        \
    \        next = char\n            }\n        }\n        index -= 1\n    }\n  \
    \  return result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    for i in (0..<word.count).reversed() {\n        let\
    \ index = word.index(word.startIndex, offsetBy: i)\n        if vowels.contains(word[index])\
    \ {\n            vowel = String(word[index])\n            if i > 0 && consonants.contains(word[word.index(before:\
    \ index)]) {\n                return vowel\n            }\n        }\n    }\n\
    \    return vowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel = \"\"\n    var consonant\
    \ = \"\"\n    var result = \"\"\n    for char in word.characters {\n        if\
    \ vowels.containsString(String(char)) {\n            vowel = String(char)\n  \
    \      }\n        if consonants.containsString(String(char)) {\n            consonant\
    \ = String(char)\n        }\n        if vowel != \"\" && consonant != \"\" {\n\
    \            result = vowel\n            vowel = \"\"\n            consonant =\
    \ \"\"\n        }\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\
    \n    var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   var distance = word.count - index\n            if distance < closestDistance\
    \ {\n                closestDistance = distance\n                closestVowel\
    \ = String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var vowel_index = 0\n    var consonant_index = 0\n\
    \    var vowel_count = 0\n    var consonant_count = 0\n    var i = word.count\
    \ - 1\n    while i >= 0 {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let char = word[index]\n        if vowels.contains(char) {\n   \
    \         vowel_count += 1\n            vowel_index = i\n        } else if consonants.contains(char)\
    \ {\n            consonant_count += 1\n            consonant_index = i\n     \
    \   }\n        if vowel_count == 1 && consonant_count == 2 {\n            result\
    \ = String(word[word.index(word.startIndex, offsetBy: vowel_index)])\n       \
    \     break\n        }\n        i -= 1\n    }\n    return result", "    let vowels\
    \ = \"aeiouAEIOU\"\n    var closest_vowel = \"\"\n    var closest_index = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ word[word.index(before: word.index(after: index))] != char && word[word.index(after:\
    \ word.index(before: index))] != char {\n                    if index < closest_index\
    \ {\n                        closest_index = index\n                        closest_vowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closest_vowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestIndex = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ vowels.contains(String(word[word.index(word.startIndex, offsetBy: index - 1)]))\
    \ == false && vowels.contains(String(word[word.index(word.startIndex, offsetBy:\
    \ index + 1)])) == false {\n                    if index < closestIndex {\n  \
    \                      closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestDistance\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            var distance = 0\n            for (i, c) in word.enumerated()\
    \ {\n                if consonants.contains(String(c).lowercased()) {\n      \
    \              distance = abs(index - i)\n                    break\n        \
    \        }\n            }\n            if distance < closestDistance {\n     \
    \           closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"AEIOUaeiou\"\n    let consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    var vowelFound = false\n    var consonantFound = false\n    for i in\
    \ 0..<word.count {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let char = word[index]\n        if vowels.contains(char) {\n   \
    \         vowelFound = true\n            vowelIndex = i\n        }\n        if\
    \ consonants.contains(char) {\n            consonantFound = true\n           \
    \ consonantIndex = i\n        }\n        if vowelFound && consonantFound {\n \
    \           if vowelIndex > consonantIndex {\n                closestVowel = String(char)\n\
    \            }\n            vowelFound = false\n            consonantFound = false\n\
    \        }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var closestVowelIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   if index > 0 && consonants.contains(word[word.index(word.startIndex, offsetBy:\
    \ index - 1)]) &&\n                index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                if index < closestVowelIndex {\n \
    \                   closestVowel = String(char)\n                    closestVowelIndex\
    \ = index\n                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestDistance = word.count\n    for i in 0..<word.count {\n    \
    \    let index = word.index(word.startIndex, offsetBy: i)\n        let char =\
    \ String(word[index])\n        if vowels.contains(char) {\n            var distance\
    \ = 0\n            for j in i..<word.count {\n                let index = word.index(word.startIndex,\
    \ offsetBy: j)\n                let char = String(word[index])\n             \
    \   if !vowels.contains(char) {\n                    distance += 1\n         \
    \       } else {\n                    break\n                }\n            }\n\
    \            if distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = char\n            }\n        }\n\
    \    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"]\n    var result = \"\"\n    for i in stride(from: word.count\
    \ - 1, through: 0, by: -1) {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let character = String(word[index])\n        if vowels.contains(character)\
    \ {\n            result = character\n            break\n        }\n    }\n   \
    \ if result == \"\" {\n        return result\n    }\n    for i in stride(from:\
    \ word.count - 1, through: 0, by: -1) {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let character = String(word[index])\n        if consonants.contains(character)\
    \ {\n            return result\n        }\n    }\n    return \"\"", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    var vowelFound = false\n    var consonantFound = false\n    var index\
    \ = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if !vowelFound {\n            if vowels.contains(char)\
    \ {\n                vowelFound = true\n                vowelIndex = index\n \
    \           }\n        }\n        if !consonantFound {\n            if consonants.contains(char)\
    \ {\n                consonantFound = true\n                consonantIndex = index\n\
    \            }\n        }\n        if vowelFound && consonantFound {\n       \
    \     break\n        }\n        index -= 1\n    }\n    if vowelFound && consonantFound\
    \ && vowelIndex > consonantIndex {\n        closestVowel = String(word[word.index(word.startIndex,\
    \ offsetBy: vowelIndex)])\n    }\n    return closestVowel", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel =\
    \ \"\"\n    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char).lowercased()) {\n            var\
    \ distance = word.count - index\n            if distance < closestDistance {\n\
    \                closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiouAEIOU\"\n    var closest_vowel = \"\"\n    var closest_vowel_index =\
    \ 0\n    var closest_vowel_distance = 0\n    var index = 0\n    for char in word.characters\
    \ {\n        if vowels.containsString(String(char)) {\n            if index >\
    \ closest_vowel_index {\n                closest_vowel = String(char)\n      \
    \          closest_vowel_index = index\n                closest_vowel_distance\
    \ = index - closest_vowel_index\n            }\n        }\n        index += 1\n\
    \    }\n    return closest_vowel", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var is_vowel = false\n \
    \   var is_consonant = false\n    var is_first_vowel = false\n    var is_first_consonant\
    \ = false\n    var is_second_vowel = false\n    var is_second_consonant = false\n\
    \    var is_third_vowel = false\n    var is_third_consonant = false\n    var is_fourth_vowel\
    \ = false\n    var is_fourth_consonant = false\n    var is_fifth_vowel = false\n\
    \    var is_fifth_consonant = false\n    var is_sixth_vowel = false\n    var is_sixth_consonant\
    \ = false\n    var is_seventh_vowel = false\n    var is_seventh_consonant = false\n\
    \    var is_eighth_vowel = false\n    var is_eighth_consonant = false\n    var\
    \ is_ninth_vowel = false\n    var is_ninth_consonant = false\n    var is_tenth_vowel\
    \ = false\n    var is_tenth_consonant = false\n    var is_eleventh_vowel = false\n\
    \    var is_eleventh_consonant = false\n    var is_twelfth_vowel = false\n   \
    \ var is_twelfth_consonant = false\n    var is_thirteenth_vowel = false\n    var\
    \ is_thirteenth_consonant = false\n    var is_fourteenth_vowel = false\n    var\
    \ is_fourteenth_consonant = false\n    var is_fifteenth_vowel = false\n    var\
    \ is_fifteenth_consonant = false\n    var is_sixteenth_vowel = false\n", "   \
    \ let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\"\
    , \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\"\
    , \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var vowel_index\
    \ = -1\n    var consonant_index = -1\n    for i in 0..<word.count {\n        let\
    \ index = word.index(word.startIndex, offsetBy: i)\n        let letter = String(word[index])\n\
    \        if vowels.contains(letter) {\n            vowel_index = i\n        }\n\
    \        if consonants.contains(letter) {\n            consonant_index = i\n \
    \       }\n        if vowel_index != -1 && consonant_index != -1 && vowel_index\
    \ < consonant_index {\n            return String(word[index])\n        }\n   \
    \ }\n    return \"\"", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n\
    \    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex = 0\n\
    \    var closestConsonantIndex = 0\n    var closestConsonant = \"\"\n    var vowelFound\
    \ = false\n    var consonantFound = false\n    for (index, letter) in word.lowercased().reversed().enumerated()\
    \ {\n        if vowels.contains(String(letter)) {\n            closestVowel =\
    \ String(letter)\n            closestVowelIndex = index\n            vowelFound\
    \ = true\n        }\n        if consonants.contains(String(letter)) && vowelFound\
    \ {\n            closestConsonant = String(letter)\n            closestConsonantIndex\
    \ = index\n            consonantFound = true\n        }\n        if vowelFound\
    \ && consonantFound {\n            break\n        }\n    }\n    if vowelFound\
    \ && consonantFound && closestVowelIndex < closestConsonantIndex {\n        return\
    \ closestVowel\n    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n  \
    \  let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowelDistance\
    \ = 0\n    var consonantDistance = 0\n    var distance = 0\n    for char in word.characters\
    \ {\n        if vowels.containsString(String(char)) {\n            vowelIndex\
    \ = word.characters.indexOf(char)!\n            vowelDistance = word.characters.count\
    \ - vowelIndex\n            for char in word.characters {\n                if\
    \ consonants.containsString(String(char)) {\n                    consonantIndex\
    \ = word.characters.indexOf(char)!\n                    consonantDistance = word.characters.count\
    \ - consonantIndex\n                    distance = vowelDistance - consonantDistance\n\
    \                    if distance > 0 {\n                        closestVowel =\
    \ String(char)\n                    }\n                }\n            }\n    \
    \    }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n  \
    \  let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var index = 0\n    for char in word.reversed() {\n        if consonants.contains(char)\
    \ {\n            index += 1\n        } else if vowels.contains(char) {\n     \
    \       if index > 0 {\n                closestVowel = String(char)\n        \
    \        break\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var index = 0\n    for i in word.indices.reversed()\
    \ {\n        if vowels.contains(word[i]) {\n            vowel = String(word[i])\n\
    \            index = word.distance(from: word.startIndex, to: i)\n        } else\
    \ if consonants.contains(word[i]) {\n            if index > 0 {\n            \
    \    return vowel\n            }\n        }\n    }\n    return \"\"", "    let\
    \ vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    while index >= 0\
    \ {\n        let char = word[word.index(word.startIndex, offsetBy: index)]\n \
    \       if consonants.contains(char) {\n            break\n        }\n       \
    \ index -= 1\n    }\n    if index == 0 {\n        return \"\"\n    }\n    for\
    \ i in index - 1...0 {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ i)]\n        if vowels.contains(char) {\n            result = String(char)\n\
    \            break\n        }\n    }\n    return result", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index = 0\n \
    \   var prev = \"\"\n    var next = \"\"\n    for letter in word.reversed() {\n\
    \        if vowels.contains(String(letter)) {\n            if index == 0 {\n \
    \               result = String(letter)\n            } else if index == 1 {\n\
    \                if prev != \"\" {\n                    result = String(letter)\n\
    \                }\n            } else {\n                if prev != \"\" && next\
    \ != \"\" {\n                    result = String(letter)\n                }\n\
    \            }\n        } else {\n            prev = String(letter)\n        }\n\
    \        index += 1\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var closestIndex = -1\n    for (index, char) in word.enumerated()\
    \ {\n        if consonants.contains(char) {\n            for (i, vowel) in vowels.enumerated()\
    \ {\n                if word.contains(vowel) {\n                    if index <\
    \ word.firstIndex(of: vowel)!.encodedOffset && word.firstIndex(of: vowel)!.encodedOffset\
    \ < closestIndex {\n                        closestVowel = String(vowel)\n   \
    \                     closestIndex = word.firstIndex(of: vowel)!.encodedOffset\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    var result = \"\"\n    let vowels: [Character]\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants: [Character] = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var is_consonant\
    \ = false\n    for char in word.reversed() {\n        if is_consonant {\n    \
    \        if vowels.contains(char) {\n                result = String(char)\n \
    \               break\n            }\n        } else {\n            if consonants.contains(char)\
    \ {\n                is_consonant = true\n            }\n        }\n    }\n  \
    \  return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ var closestVowel = \"\"\n    var distance = word.count\n    for (index, char)\
    \ in word.enumerated() {\n        if vowels.contains(String(char)) {\n       \
    \     if index > 0 && index < word.count - 1 {\n                if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    if index < distance {\n     \
    \                   distance = index\n                        closestVowel = String(char)\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let word = word.lowercased()\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            result\
    \ = String(char)\n            break\n        }\n        index -= 1\n    }\n  \
    \  return result", "    let vowels = \"aeiouAEIOU\"\n    var closestVowel = \"\
    \"\n    var closestDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            var distance = 0\n      \
    \      for i in index..<word.count {\n                if vowels.contains(word[i])\
    \ {\n                    break\n                }\n                distance +=\
    \ 1\n            }\n            if distance < closestDistance {\n            \
    \    closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closest_vowel = \"\"\n    var vowel_index = 0\n    var consonant_index\
    \ = 0\n    var closest_vowel_index = 0\n    var closest_consonant_index = 0\n\
    \    for i in stride(from: word.count - 1, through: 0, by: -1) {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: i)]\n        if vowels.contains(char)\
    \ {\n            vowel_index = i\n            break\n        }\n    }\n    for\
    \ i in stride(from: vowel_index - 1, through: 0, by: -1) {\n        let char =\
    \ word[word.index(word.startIndex, offsetBy: i)]\n        if consonants.contains(char)\
    \ {\n            consonant_index = i\n            break\n        }\n    }\n  \
    \  if vowel_index > consonant_index {\n        closest_vowel = String(word[word.index(word.startIndex,\
    \ offsetBy: vowel_index)])\n        closest_vowel_index = vowel_index\n      \
    \  closest_consonant_index = consonant_index\n    }\n    for i in stride(from:\
    \ vowel_index - 1, through: 0, by: -1) {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: i)]\n        if vowels.contains(char) {\n            vowel_index =\
    \ i\n            break\n        }\n    }\n    for i in stride(from: vowel_index\
    \ - 1, through: 0, by: -1) {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: i)]\n        if consonants.contains(char) {\n            consonant_index\
    \ = i\n            break\n        }\n    }\n    if vowel_index > consonant_index\
    \ && vowel_index - consonant_index < closest_vowel_index - closest_consonant_index\
    \ {\n        closest_vow", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestDistance = 0\n  \
    \  var currentDistance = 0\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(String(char).lowercased()) {\n            currentDistance\
    \ = 0\n            for i in index+1..<word.characters.count {\n              \
    \  if consonants.contains(String(word[word.index(word.startIndex, offsetBy: i)]).lowercased())\
    \ {\n                    currentDistance += 1\n                } else {\n    \
    \                break\n                }\n            }\n            if currentDistance\
    \ > closestDistance {\n                closestDistance = currentDistance\n   \
    \             closestVowel = String(char)\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var closest_vowel = \"\"\n    for (index, letter) in word.enumerated()\
    \ {\n        if vowels.contains(String(letter)) {\n            if index != 0 &&\
    \ index != word.count - 1 {\n                if !vowels.contains(String(word[word.index(before:\
    \ word.index(after: word.startIndex, offsetBy: index))])) && !vowels.contains(String(word[word.index(before:\
    \ word.index(after: word.startIndex, offsetBy: index))])) {\n                \
    \    closest_vowel = String(letter)\n                    break\n             \
    \   }\n            }\n        }\n    }\n    return closest_vowel", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    var vowelFound = false\n    var consonantFound = false\n    for i in\
    \ (0..<word.count).reversed() {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowelFound = true\n            vowelIndex = i\n        }\n  \
    \      if consonants.contains(char) && vowelFound {\n            consonantFound\
    \ = true\n            consonantIndex = i\n            break\n        }\n    }\n\
    \    if vowelFound && consonantFound {\n        let index = word.index(word.startIndex,\
    \ offsetBy: vowelIndex)\n        closestVowel = String(word[index])\n    }\n \
    \   return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var closestIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestIndex {\n  \
    \                      closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ result = \"\"\n    var is_consonant = false\n    var is_vowel = false\n    var\
    \ is_first_vowel = false\n    var is_first_consonant = false\n    var is_second_vowel\
    \ = false\n    var is_second_consonant = false\n    var is_third_vowel = false\n\
    \    var is_third_consonant = false\n    var is_fourth_vowel = false\n    var\
    \ is_fourth_consonant = false\n    var is_fifth_vowel = false\n    var is_fifth_consonant\
    \ = false\n    var is_sixth_vowel = false\n    var is_sixth_consonant = false\n\
    \    var is_seventh_vowel = false\n    var is_seventh_consonant = false\n    var\
    \ is_eighth_vowel = false\n    var is_eighth_consonant = false\n    var is_ninth_vowel\
    \ = false\n    var is_ninth_consonant = false\n    var is_tenth_vowel = false\n\
    \    var is_tenth_consonant = false\n    var is_eleventh_vowel = false\n    var\
    \ is_eleventh_consonant = false\n    var is_twelfth_vowel = false\n    var is_twelfth_consonant\
    \ = false\n    var is_thirteenth_vowel = false\n    var is_thirteenth_consonant\
    \ = false\n    var is_fourteenth_vowel = false\n    var is_fourteenth_consonant\
    \ = false\n    var is_fifteenth_vowel = false\n    var is_fifteenth_consonant\
    \ = false\n    var is_sixteenth_vowel = false\n    var is_sixteenth_consonant\
    \ = false\n    var is_seventeenth_vowel = false\n    var is_seventeenth_consonant\
    \ = false\n", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = String(word[word.index(word.startIndex, offsetBy: index)])\n        if\
    \ vowels.contains(char) {\n            result = char\n            break\n    \
    \    }\n        index -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\
    \n    var closestVowel = \"\"\n    var closestIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   if index > 0 && index < word.count - 1 {\n                let prevChar = word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]\n                let nextChar = word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]\n                if !vowels.contains(prevChar) && !vowels.contains(nextChar)\
    \ {\n                    if index < closestIndex {\n                        closestIndex\
    \ = index\n                        closestVowel = String(char)\n             \
    \       }\n                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    var previous = \"\
    \"\n    var current = \"\"\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            if previous\
    \ == \"\" {\n                break\n            }\n            if consonants.contains(previous)\
    \ {\n                result = char\n                break\n            }\n   \
    \     }\n        if consonants.contains(char) {\n            if current == \"\"\
    \ {\n                previous = char\n            } else {\n                if\
    \ vowels.contains(current) {\n                    result = current\n         \
    \           break\n                }\n                previous = char\n      \
    \      }\n        }\n        current = char\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var closestVowel = \"\"\n    var closestVowelIndex = 0\n    var closestConsonantIndex\
    \ = 0\n    for (index, char) in word.lowercased().reversed().enumerated() {\n\
    \        if vowels.contains(String(char)) {\n            closestVowel = String(char)\n\
    \            closestVowelIndex = index\n        }\n        if consonants.contains(String(char))\
    \ && closestVowelIndex != 0 {\n            closestConsonantIndex = index\n   \
    \         break\n        }\n    }\n    if closestVowelIndex - closestConsonantIndex\
    \ == 1 {\n        return \"\"\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var distance = word.count\n    for (i, char)\
    \ in word.enumerated() {\n        if vowels.contains(char) {\n            if i\
    \ > 0 && consonants.contains(word[word.index(word.startIndex, offsetBy: i - 1)])\
    \ {\n                if i < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: i + 1)]) {\n                    if i < distance {\n              \
    \          distance = i\n                        closestVowel = String(char)\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var closestVowel = \"\"\n    var closestIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(String(char)) {\n \
    \           if index > 0 && index < word.count - 1 {\n                if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    if index < closestIndex {\n \
    \                       closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestDistance = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            var distance = 0\n            for i in index..<word.count {\n\
    \                if vowels.contains(String(word[word.index(word.startIndex, offsetBy:\
    \ i)])) {\n                    break\n                }\n                distance\
    \ += 1\n            }\n            if distance < closestDistance {\n         \
    \       closestDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result =\
    \ \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let char\
    \ = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(char)\
    \ {\n            result = String(char)\n            break\n        } else if consonants.contains(char)\
    \ {\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    var found_vowel =\
    \ false\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            if found_vowel\
    \ {\n                result = String(char)\n                break\n          \
    \  }\n        } else if consonants.contains(char) {\n            found_vowel =\
    \ true\n        }\n        index -= 1\n    }\n    return result", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var\
    \ index = word.count - 1\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            closestVowel\
    \ = char\n            break\n        }\n        index -= 1\n    }\n    return\
    \ closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   if index > 0 && consonants.contains(word[word.index(word.startIndex, offsetBy:\
    \ index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestIndex {\n  \
    \                      closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = 0\n    var closestConsonantIndex = 0\n    var consonantIndex = 0\n    var\
    \ vowelIndex = 0\n    var vowelFound = false\n    var consonantFound = false\n\
    \    for char in word.characters {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            vowelFound = true\n            vowelIndex = word.characters.distance(from:\
    \ word.startIndex, to: char)\n            if vowelIndex > closestConsonantIndex\
    \ {\n                closestVowel = String(char)\n                closestVowelIndex\
    \ = vowelIndex\n            }\n        }\n        if consonants.contains(String(char).lowercased())\
    \ {\n            consonantFound = true\n            consonantIndex = word.characters.distance(from:\
    \ word.startIndex, to: char)\n            if consonantIndex > closestVowelIndex\
    \ {\n                closestConsonantIndex = consonantIndex\n            }\n \
    \       }\n    }\n    if vowelFound && consonantFound {\n        return closestVowel\n\
    \    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel_index = -1\n\
    \    var consonant_index = -1\n    for (index, char) in word.enumerated() {\n\
    \        if vowels.contains(char) {\n            vowel_index = index\n       \
    \ }\n        if consonants.contains(char) {\n            consonant_index = index\n\
    \        }\n        if vowel_index != -1 && consonant_index != -1 {\n        \
    \    if vowel_index > consonant_index {\n                return String(char)\n\
    \            }\n        }\n    }\n    return \"\"", "    let vowels = [\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"]\n    var closest_vowel = \"\"\n    var distance\
    \ = word.count\n    for (index, letter) in word.enumerated() {\n        if vowels.contains(String(letter))\
    \ {\n            if index > 0 && index < word.count - 1 {\n                let\
    \ left_letter = word[word.index(word.startIndex, offsetBy: index - 1)]\n     \
    \           let right_letter = word[word.index(word.startIndex, offsetBy: index\
    \ + 1)]\n                if !vowels.contains(String(left_letter)) && !vowels.contains(String(right_letter))\
    \ {\n                    if index < distance {\n                        distance\
    \ = index\n                        closest_vowel = String(letter)\n          \
    \          }\n                }\n            }\n        }\n    }\n    return closest_vowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var index = word.count - 1\n    var vowelIndex\
    \ = 0\n    var consonantIndex = 0\n    while index > 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            vowelIndex\
    \ = index\n        } else if consonants.contains(char) {\n            consonantIndex\
    \ = index\n            break\n        }\n        index -= 1\n    }\n    if vowelIndex\
    \ > consonantIndex {\n        closestVowel = String(word[word.index(word.startIndex,\
    \ offsetBy: vowelIndex)])\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiou\"\n    var closestVowel: Character = \" \"\n    var closestIndex = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index > 0 && !vowels.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < closestIndex {\n      \
    \              closestIndex = index\n                    closestVowel = char\n\
    \                }\n            }\n        }\n    }\n    return String(closestVowel)",
  "    let vowels = \"AEIOUaeiou\"\n    let consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n    var result = \"\"\n    var vowel_index = 0\n    var consonant_index = 0\n\
    \    var vowel_distance = 0\n    var consonant_distance = 0\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        if\
    \ vowels.contains(word[index]) {\n            vowel_index = i\n            vowel_distance\
    \ = word.count - i\n        }\n        if consonants.contains(word[index]) {\n\
    \            consonant_index = i\n            consonant_distance = word.count\
    \ - i\n        }\n        if vowel_index > consonant_index {\n            result\
    \ = String(word[index])\n        }\n    }\n    return result", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel =\
    \ \"\"\n    var closestIndex = 0\n    var index = 0\n    for letter in word.reversed()\
    \ {\n        if vowels.contains(String(letter)) {\n            closestVowel =\
    \ String(letter)\n            closestIndex = index\n        }\n        if consonants.contains(String(letter))\
    \ && closestVowel != \"\" {\n            if index == closestIndex + 1 {\n    \
    \            return closestVowel\n            }\n        }\n        index += 1\n\
    \    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowelCount = 0\n\
    \    var consonantCount = 0\n    var vowelFound = false\n    var consonantFound\
    \ = false\n    var vowelIndexes = [Int]()\n    var consonantIndexes = [Int]()\n\
    \    for i in 0..<word.count {\n        if vowels.contains(Array(word)[i]) {\n\
    \            vowelFound = true\n            vowelIndex = i\n            vowelIndexes.append(vowelIndex)\n\
    \            vowelCount += 1\n        }\n        if consonants.contains(Array(word)[i])\
    \ {\n            consonantFound = true\n            consonantIndex = i\n     \
    \       consonantIndexes.append(consonantIndex)\n            consonantCount +=\
    \ 1\n        }\n    }\n    if vowelFound && consonantFound {\n        for i in\
    \ 0..<vowelCount {\n            for j in 0..<consonantCount {\n              \
    \  if vowelIndexes[i] > consonantIndexes[j] {\n                    closestVowel\
    \ = String(Array(word)[vowelIndexes[i]])\n                }\n            }\n \
    \       }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   var distance = 0\n            for i in index..<word.count {\n            \
    \    if !vowels.contains(word[word.index(word.startIndex, offsetBy: i)]) {\n \
    \                   distance += 1\n                } else {\n                \
    \    break\n                }\n            }\n            if distance < closestDistance\
    \ {\n                closestDistance = distance\n                closestVowel\
    \ = String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var vowel_index = -1\n    var consonant_index = -1\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            vowel_index = index\n        }\n        if consonants.contains(char)\
    \ {\n            consonant_index = index\n        }\n        if vowel_index !=\
    \ -1 && consonant_index != -1 && vowel_index > consonant_index {\n           \
    \ result = String(char)\n            break\n        }\n    }\n    return result",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel_index = -1\n    var consonant_index = -1\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = word[index]\n        if vowels.contains(char) {\n            vowel_index\
    \ = i\n        } else if consonants.contains(char) {\n            consonant_index\
    \ = i\n        }\n        if vowel_index != -1 && consonant_index != -1 {\n  \
    \          if vowel_index > consonant_index {\n                return String(char)\n\
    \            }\n        }\n    }\n    return \"\"", "    let vowels = [\"a\",\
    \ \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n   \
    \ var index = word.count - 1\n    var vowelIndex = 0\n    var consonantIndex =\
    \ 0\n    while index >= 0 {\n        let character = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(character)) {\n       \
    \     vowelIndex = index\n        }\n        if consonants.contains(String(character))\
    \ {\n            consonantIndex = index\n        }\n        if vowelIndex > consonantIndex\
    \ {\n            closestVowel = String(character)\n            break\n       \
    \ }\n        index -= 1\n    }\n    return closestVowel", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var vowel_index = 0\n    var\
    \ consonant_index = 0\n    var vowel_found = false\n    var consonant_found =\
    \ false\n    var closest_vowel = \"\"\n    for (index, char) in word.lowercased().reversed().enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            vowel_index = index\n\
    \            vowel_found = true\n        }\n        if consonants.contains(String(char))\
    \ {\n            consonant_index = index\n            consonant_found = true\n\
    \        }\n        if vowel_found && consonant_found {\n            if vowel_index\
    \ < consonant_index {\n                closest_vowel = String(char)\n        \
    \    }\n            break\n        }\n    }\n    return closest_vowel", "    let\
    \ vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var consonant = \"\"\n    for char in word.characters\
    \ {\n        if vowels.containsString(String(char)) {\n            vowel = String(char)\n\
    \        }\n        if consonants.containsString(String(char)) {\n           \
    \ consonant = String(char)\n        }\n        if vowel != \"\" && consonant !=\
    \ \"\" {\n            return vowel\n        }\n    }\n    return \"\"", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n\
    \    var minDistance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            var distance = 0\n\
    \            for i in index..<word.count {\n                if vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: i)])) {\n                    break\n                }\n          \
    \      distance += 1\n            }\n            if distance < minDistance {\n\
    \                minDistance = distance\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    var index =\
    \ word.count - 1\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            result =\
    \ char\n            break\n        }\n        index -= 1\n    }\n    return result",
  "    let vowels = \"AEIOU\"\n    let consonants = \"BCDFGHJKLMNPQRSTVWXYZ\"\n  \
    \  var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n\
    \    var vowelFound = false\n    for i in 0..<word.count {\n        let char =\
    \ word[word.index(word.startIndex, offsetBy: i)]\n        if vowels.contains(char)\
    \ {\n            vowelFound = true\n            vowelIndex = i\n        }\n  \
    \      if consonants.contains(char) {\n            consonantIndex = i\n      \
    \  }\n        if vowelFound && vowelIndex < consonantIndex {\n            closestVowel\
    \ = String(char)\n            break\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var vowel_index = -1\n    var consonant_index = -1\n\
    \    for i in (0..<word.count).reversed() {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = word[index]\n        if vowels.contains(char)\
    \ {\n            vowel_index = i\n        } else if consonants.contains(char)\
    \ {\n            consonant_index = i\n            break\n        }\n    }\n  \
    \  if vowel_index != -1 && consonant_index != -1 && vowel_index > consonant_index\
    \ {\n        let index = word.index(word.startIndex, offsetBy: vowel_index)\n\
    \        result = String(word[index])\n    }\n    return result", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel =\
    \ \"\"\n    var index = word.count - 1\n    var previousChar = \"\"\n    var currentChar\
    \ = \"\"\n    var nextChar = \"\"\n    while index >= 0 {\n        currentChar\
    \ = String(word[word.index(word.startIndex, offsetBy: index)])\n        if index\
    \ == word.count - 1 {\n            nextChar = \"\"\n        } else {\n       \
    \     nextChar = String(word[word.index(word.startIndex, offsetBy: index + 1)])\n\
    \        }\n        if vowels.contains(currentChar) && consonants.contains(previousChar)\
    \ && consonants.contains(nextChar) {\n            closestVowel = currentChar\n\
    \            break\n        }\n        previousChar = currentChar\n        index\
    \ -= 1\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n  \
    \  let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closest_vowel\
    \ = \"\"\n    var vowel_index = 0\n    var consonant_index = 0\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = String(word[index])\n        if vowels.contains(char) {\n           \
    \ vowel_index = i\n        }\n        if consonants.contains(char) {\n       \
    \     consonant_index = i\n        }\n        if vowel_index > consonant_index\
    \ {\n            closest_vowel = char\n            break\n        }\n    }\n \
    \   return closest_vowel", "    let vowels = \"aeiouAEIOU\"\n    var closestVowel\
    \ = \"\"\n    var closestIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && index < word.count\
    \ - 1 {\n                if !vowels.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) && !vowels.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestIndex {\n  \
    \                      closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = 0\n    var closestConsonantIndex = 0\n    var closestConsonant = \"\"\n  \
    \  var wordArray = Array(word)\n    for i in 0..<wordArray.count {\n        if\
    \ vowels.contains(String(wordArray[i]).lowercased()) {\n            closestVowel\
    \ = String(wordArray[i])\n            closestVowelIndex = i\n            break\n\
    \        }\n    }\n    for i in (0..<wordArray.count).reversed() {\n        if\
    \ consonants.contains(String(wordArray[i]).lowercased()) {\n            closestConsonant\
    \ = String(wordArray[i])\n            closestConsonantIndex = i\n            break\n\
    \        }\n    }\n    if closestVowelIndex < closestConsonantIndex {\n      \
    \  return closestVowel\n    } else {\n        return \"\"\n    }", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel: Character = \" \"\n    var closestVowelIndex = 0\n   \
    \ var closestConsonantIndex = 0\n    var closestConsonant: Character = \" \"\n\
    \    var foundVowel = false\n    var foundConsonant = false\n    for (index, char)\
    \ in word.enumerated() {\n        if vowels.contains(char) {\n            closestVowel\
    \ = char\n            closestVowelIndex = index\n            foundVowel = true\n\
    \        }\n        if consonants.contains(char) && foundVowel {\n           \
    \ closestConsonant = char\n            closestConsonantIndex = index\n       \
    \     foundConsonant = true\n        }\n        if foundVowel && foundConsonant\
    \ {\n            break\n        }\n    }\n    if foundVowel && foundConsonant\
    \ && closestVowelIndex < closestConsonantIndex {\n        return String(closestVowel)\n\
    \    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var closestVowelIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestVowelIndex {\n\
    \                        closestVowel = String(char)\n                       \
    \ closestVowelIndex = index\n                    }\n                }\n      \
    \      }\n        }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ result = \"\"\n    var prev = \"\"\n    var next = \"\"\n    for c in word.characters\
    \ {\n        if vowels.containsString(String(c)) {\n            if consonants.containsString(prev)\
    \ && consonants.containsString(next) {\n                result = String(c)\n \
    \               break\n            }\n        }\n        prev = String(c)\n  \
    \  }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var closestVowel = \"\"\n    var closestDistance = word.count\n    for\
    \ (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index > 0 && index < word.count - 1 {\n                let\
    \ prevChar = word[word.index(word.startIndex, offsetBy: index - 1)]\n        \
    \        let nextChar = word[word.index(word.startIndex, offsetBy: index + 1)]\n\
    \                if !vowels.contains(String(prevChar)) && !vowels.contains(String(nextChar))\
    \ {\n                    if index < closestDistance {\n                      \
    \  closestDistance = index\n                        closestVowel = String(char)\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closest_vowel = \"\
    \"\n    var vowel_index = 0\n    var consonant_index = 0\n    var vowel_found\
    \ = false\n    var consonant_found = false\n    for i in stride(from: word.count\
    \ - 1, through: 0, by: -1) {\n        if !vowel_found {\n            if vowels.contains(word[i])\
    \ {\n                vowel_index = i\n                vowel_found = true\n   \
    \         }\n        }\n        if !consonant_found {\n            if consonants.contains(word[i])\
    \ {\n                consonant_index = i\n                consonant_found = true\n\
    \            }\n        }\n        if vowel_found && consonant_found {\n     \
    \       break\n        }\n    }\n    if vowel_found && consonant_found {\n   \
    \     if vowel_index > consonant_index {\n            closest_vowel = String(word[vowel_index])\n\
    \        }\n    }\n    return closest_vowel", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var index = 0\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    var consonantCount = 0\n    var vowelCount = 0\n    for letter in word.characters\
    \ {\n        if vowels.containsString(String(letter)) {\n            vowelCount\
    \ += 1\n            vowelIndex = index\n        }\n        if consonants.containsString(String(letter))\
    \ {\n            consonantCount += 1\n            consonantIndex = index\n   \
    \     }\n        if consonantCount == 2 && vowelCount == 1 {\n            closestVowel\
    \ = String(word[word.startIndex.advancedBy(vowelIndex)])\n            break\n\
    \        }\n        index += 1\n    }\n    return closestVowel", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel =\
    \ \"\"\n    var closestDistance = -1\n    for i in 0..<word.count {\n        let\
    \ index = word.index(word.startIndex, offsetBy: i)\n        let char = String(word[index])\n\
    \        if vowels.contains(char) {\n            if closestDistance == -1 {\n\
    \                closestDistance = i\n                closestVowel = char\n  \
    \          } else {\n                if i < closestDistance {\n              \
    \      closestDistance = i\n                    closestVowel = char\n        \
    \        }\n            }\n        }\n    }\n    if closestDistance == -1 {\n\
    \        return \"\"\n    }\n    for i in (0..<closestDistance).reversed() {\n\
    \        let index = word.index(word.startIndex, offsetBy: i)\n        let char\
    \ = String(word[index])\n        if consonants.contains(char) {\n            return\
    \ closestVowel\n        }\n    }\n    return \"\"", "    var vowel = \"\"\n  \
    \  let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    for (i, c) in word.reversed().enumerated()\
    \ {\n        if vowels.contains(String(c)) {\n            vowel = String(c)\n\
    \            if i > 0 {\n                let next = word.reversed()[i-1]\n   \
    \             if !vowels.contains(String(next)) {\n                    return\
    \ vowel\n                }\n            }\n        }\n    }\n    return vowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var index = 0\n    for i in word.indices {\n     \
    \   if consonants.contains(word[i]) {\n            index = word.distance(from:\
    \ word.startIndex, to: i)\n            break\n        }\n    }\n    for i in word.indices\
    \ {\n        if vowels.contains(word[i]) {\n            if word.distance(from:\
    \ word.startIndex, to: i) > index {\n                vowel = String(word[i])\n\
    \                break\n            }\n        }\n    }\n    return vowel", " \
    \   let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result\
    \ = \"\"\n    var prev = \"\"\n    var next = \"\"\n    for char in word.reversed()\
    \ {\n        if vowels.contains(String(char)) {\n            if consonants.contains(prev)\
    \ && consonants.contains(next) {\n                result = String(char)\n    \
    \            break\n            }\n        }\n        next = prev\n        prev\
    \ = String(char)\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ result = \"\"\n    var vowel_index = -1\n    var consonant_index = -1\n    for\
    \ (index, char) in word.enumerated() {\n        if vowels.contains(char) {\n \
    \           vowel_index = index\n        }\n        if consonants.contains(char)\
    \ {\n            consonant_index = index\n        }\n        if vowel_index !=\
    \ -1 && consonant_index != -1 && vowel_index > consonant_index {\n           \
    \ result = String(char)\n            break\n        }\n    }\n    return result",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var consonant = \"\"\n    var result = \"\"\n    for\
    \ char in word.characters {\n        if vowels.containsString(String(char)) {\n\
    \            vowel = String(char)\n        }\n        if consonants.containsString(String(char))\
    \ {\n            consonant = String(char)\n        }\n        if vowel != \"\"\
    \ && consonant != \"\" {\n            result = vowel\n            vowel = \"\"\
    \n            consonant = \"\"\n        }\n    }\n    return result", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var result = \"\"\n    for\
    \ i in stride(from: word.count - 1, to: 0, by: -1) {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            result = char\n            break\n        }\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants\
    \ = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"\
    n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n \
    \   var closestVowel = \"\"\n    var closestIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            if index > 0 && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]).lowercased()) {\n                if index < word.count\
    \ - 1 && consonants.contains(String(word[word.index(word.startIndex, offsetBy:\
    \ index + 1)]).lowercased()) {\n                    if index < closestIndex {\n\
    \                        closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"\
    h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"\
    v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = 0\n    var closestConsonantIndex = 0\n    for (index, char) in word.lowercased().reversed().enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            closestVowel = String(char)\n\
    \            closestVowelIndex = index\n        }\n        if consonants.contains(String(char))\
    \ && closestVowel != \"\" {\n            closestConsonantIndex = index\n     \
    \       break\n        }\n    }\n    if closestVowelIndex - closestConsonantIndex\
    \ > 1 {\n        return closestVowel\n    }\n    return \"\"", "    let vowels\
    \ = \"aeiouAEIOU\"\n    var closestVowel = \"\"\n    var closestIndex = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index < closestIndex {\n                closestIndex = index\n\
    \                closestVowel = String(char)\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = \"AEIOUaeiou\"\n    let consonants\
    \ = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n    var vowel = \"\"\n   \
    \ var index = 0\n    for i in word.indices {\n        if consonants.contains(word[i])\
    \ {\n            index = word.distance(from: word.startIndex, to: i)\n       \
    \     break\n        }\n    }\n    for i in word.indices {\n        if vowels.contains(word[i])\
    \ {\n            if word.distance(from: word.startIndex, to: i) > index {\n  \
    \              vowel = String(word[i])\n                break\n            }\n\
    \        }\n    }\n    return vowel", "    let vowels = [\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var vowelIndex\
    \ = 0\n    var consonantIndex = 0\n    var vowelFound = false\n    var consonantFound\
    \ = false\n    var closestVowelIndex = 0\n    var closestConsonantIndex = 0\n\
    \    var closestVowelFound = false\n    var closestConsonantFound = false\n  \
    \  for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowelFound\
    \ == false {\n            for j in 0..<vowels.count {\n                if char\
    \ == vowels[j] {\n                    vowelFound = true\n                    vowelIndex\
    \ = i\n                }\n            }\n        }\n        if consonantFound\
    \ == false {\n            for j in 0..<consonants.count {\n                if\
    \ char == consonants[j] {\n                    consonantFound = true\n       \
    \             consonantIndex = i\n                }\n            }\n        }\n\
    \        if vowelFound == true && consonantFound == true {\n            if vowelIndex\
    \ > consonantIndex {\n                if closestVowelFound == false {\n      \
    \              closestVowelFound = true\n                    closestVowelIndex\
    \ = vowelIndex\n                    closestConsonantIndex = consonantIndex\n \
    \               } else {\n                    if vowelIndex < closestVowelIndex\
    \ {\n                        closestVowelIndex = vowelIndex\n                \
    \        closestConsonantIndex = consonantIndex\n                    }\n     \
    \           }\n            }\n            vowelFound = false\n            consonantFound\
    \ = false\n        }\n    }\n    if closestVowelFound == true {\n        let index\
    \ = word.index(word.startIndex, offsetBy: closestVowelIndex)\n        closestVowel\
    \ = String(word[index])\n    }\n    return closestVowel", "    let vowels = \"\
    aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel_index = 0\n    var consonant_index = 0\n    var closest_vowel\
    \ = \"\"\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            vowel_index = index\n        }\n        if consonants.contains(char)\
    \ {\n            consonant_index = index\n        }\n        if vowel_index >\
    \ consonant_index {\n            closest_vowel = String(char)\n        }\n   \
    \ }\n    return closest_vowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var result = \"\"\n    for i in (0..<word.count).reversed() {\n\
    \        let index = word.index(word.startIndex, offsetBy: i)\n        let char\
    \ = String(word[index])\n        if vowels.contains(char) {\n            result\
    \ = char\n            break\n        }\n    }\n    return result", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    var vowelFound = false\n    var consonantFound = false\n    for i in\
    \ stride(from: word.count - 1, through: 0, by: -1) {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = word[index]\n        if vowels.contains(char)\
    \ {\n            vowelFound = true\n            vowelIndex = i\n        }\n  \
    \      if consonants.contains(char) && vowelFound {\n            consonantFound\
    \ = true\n            consonantIndex = i\n            break\n        }\n    }\n\
    \    if vowelFound && consonantFound {\n        let index = word.index(word.startIndex,\
    \ offsetBy: vowelIndex)\n        closestVowel = String(word[index])\n    }\n \
    \   return closestVowel", "    let vowels = \"aeiou\"\n    let consonants = \"\
    bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var vowelIndex = 0\n\
    \    var consonantIndex = 0\n    var vowelFound = false\n    var consonantFound\
    \ = false\n    var vowelFoundIndex = 0\n    var consonantFoundIndex = 0\n    for\
    \ i in 0..<word.count {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowelFound = true\n            vowelFoundIndex = i\n        }\n\
    \        if consonants.contains(char) {\n            consonantFound = true\n \
    \           consonantFoundIndex = i\n        }\n        if vowelFound && consonantFound\
    \ {\n            if vowelFoundIndex > consonantFoundIndex {\n                vowelIndex\
    \ = vowelFoundIndex\n                consonantIndex = consonantFoundIndex\n  \
    \          }\n            vowelFound = false\n            consonantFound = false\n\
    \        }\n    }\n    if vowelIndex > consonantIndex {\n        let index = word.index(word.startIndex,\
    \ offsetBy: vowelIndex)\n        closestVowel = String(word[index])\n    }\n \
    \   return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var vowelIndex = 0\n    var consonantIndex = 0\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        if\
    \ vowels.contains(word[index]) {\n            vowelIndex = i\n        }\n    \
    \    if consonants.contains(word[index]) {\n            consonantIndex = i\n \
    \       }\n        if vowelIndex > consonantIndex {\n            closestVowel\
    \ = String(word[index])\n            break\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    var vowel = \"\"\n    var index = 0\n    var\
    \ i = word.count - 1\n    while i >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: i)]\n        if vowels.contains(char) {\n            vowel = String(char)\n\
    \            index = i\n            break\n        }\n        i -= 1\n    }\n\
    \    if vowel == \"\" {\n        return \"\"\n    }\n    i = index - 1\n    while\
    \ i >= 0 {\n        let char = word[word.index(word.startIndex, offsetBy: i)]\n\
    \        if !vowels.contains(char) {\n            return vowel\n        }\n  \
    \      i -= 1\n    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n   \
    \ let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n    for i in (0..<word.count).reversed()\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        if\
    \ vowels.contains(word[index]) {\n            vowelIndex = i\n            for\
    \ j in (0..<i).reversed() {\n                let index = word.index(word.startIndex,\
    \ offsetBy: j)\n                if consonants.contains(word[index]) {\n      \
    \              consonantIndex = j\n                    closestVowel = String(word[index])\n\
    \                    break\n                }\n            }\n            break\n\
    \        }\n    }\n    if vowelIndex - consonantIndex > 1 {\n        return closestVowel\n\
    \    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel = \"\"\n   \
    \ var consonant = \"\"\n    var closest_vowel = \"\"\n    for char in word.characters\
    \ {\n        if vowels.containsString(String(char)) {\n            vowel = String(char)\n\
    \        }\n        if consonants.containsString(String(char)) {\n           \
    \ consonant = String(char)\n        }\n        if vowel != \"\" && consonant !=\
    \ \"\" {\n            closest_vowel = vowel\n            vowel = \"\"\n      \
    \      consonant = \"\"\n        }\n    }\n    return closest_vowel", "    let\
    \ vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var\
    \ vowel_index = -1\n    var consonant_index = -1\n    var vowel_distance = Int.max\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            vowel_index = index\n        } else if consonants.contains(char)\
    \ {\n            consonant_index = index\n        }\n        if vowel_index !=\
    \ -1 && consonant_index != -1 {\n            vowel_distance = min(vowel_distance,\
    \ consonant_index - vowel_index)\n        }\n    }\n    if vowel_distance == Int.max\
    \ {\n        return \"\"\n    }\n    return String(word[word.index(word.endIndex,\
    \ offsetBy: -vowel_distance)])", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var vowelIndex = 0\n\
    \    var consonantIndex = 0\n    for (index, char) in word.enumerated() {\n  \
    \      if vowels.contains(String(char).lowercased()) {\n            vowelIndex\
    \ = index\n        }\n        if consonants.contains(String(char).lowercased())\
    \ {\n            consonantIndex = index\n        }\n        if vowelIndex > consonantIndex\
    \ {\n            closestVowel = String(char)\n            break\n        }\n \
    \   }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var closest_vowel = \"\"\n    var closest_vowel_index = word.count\n\
    \    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            if i < closest_vowel_index {\n                closest_vowel =\
    \ char\n                closest_vowel_index = i\n            }\n        }\n  \
    \  }\n    return closest_vowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var word =\
    \ word\n    var index = 0\n    var closestIndex = 0\n    var closestDistance =\
    \ 0\n    var distance = 0\n    var isFirstVowel = true\n    var isFirstConsonant\
    \ = true\n    while word.count > 0 {\n        let character = word.removeLast()\n\
    \        if vowels.contains(String(character)) {\n            vowelIndex = index\n\
    \            if isFirstVowel {\n                isFirstVowel = false\n       \
    \     } else {\n                distance = vowelIndex - closestIndex\n       \
    \         if distance > closestDistance {\n                    closestDistance\
    \ = distance\n                    closestVowel = String(character)\n         \
    \       }\n            }\n        } else {\n            if isFirstConsonant {\n\
    \                isFirstConsonant = false\n            } else {\n            \
    \    closestIndex = index\n            }\n        }\n        index += 1\n    }\n\
    \    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var vowelIndex = 0\n    var consonantIndex = 0\n    for i in stride(from:\
    \ word.count - 1, through: 0, by: -1) {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let character = word[index]\n        if vowels.contains(character)\
    \ {\n            vowelIndex = i\n        } else if consonants.contains(character)\
    \ {\n            consonantIndex = i\n            break\n        }\n    }\n   \
    \ if vowelIndex > consonantIndex {\n        closestVowel = String(word[word.index(word.startIndex,\
    \ offsetBy: vowelIndex)])\n    }\n    return closestVowel", "    let vowels =\
    \ \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel\
    \ = \"\"\n    var indexOfVowel = 0\n    var indexOfConsonant = 0\n    for char\
    \ in word.characters {\n        if vowels.contains(String(char)) {\n         \
    \   indexOfVowel = word.characters.index(of: char)!\n        }\n        if consonants.contains(String(char))\
    \ {\n            indexOfConsonant = word.characters.index(of: char)!\n       \
    \     if indexOfConsonant > indexOfVowel {\n                closestVowel = String(char)\n\
    \            }\n        }\n    }\n    return closestVowel", "    let vowels =\
    \ [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closest_vowel =\
    \ \"\"\n    var closest_distance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            var distance = 0\n\
    \            var i = index\n            while i >= 0 {\n                if consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: i)])) {\n                    break\n                }\n          \
    \      distance += 1\n                i -= 1\n            }\n            if distance\
    \ < closest_distance {\n                closest_distance = distance\n        \
    \        closest_vowel = String(char)\n            }\n        }\n    }\n    return\
    \ closest_vowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestVowelIndex = 0\n    var index =\
    \ 0\n    for letter in word.reversed() {\n        if vowels.contains(letter) {\n\
    \            closestVowel = String(letter)\n            closestVowelIndex = index\n\
    \        }\n        if consonants.contains(letter) && closestVowelIndex > 0 {\n\
    \            break\n        }\n        index += 1\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestVowelIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    if index < closestVowelIndex\
    \ {\n                        closestVowelIndex = index\n                     \
    \   closestVowel = String(char)\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return closestVowel", "    let vowels = \"\
    aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var index = word.count - 1\n    var isConsonant\
    \ = false\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if consonants.contains(char) {\n            if isConsonant\
    \ {\n                return closestVowel\n            }\n            isConsonant\
    \ = true\n        } else if vowels.contains(char) {\n            closestVowel\
    \ = String(char)\n        }\n        index -= 1\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestVowelIndex = word.count\n    for\
    \ (index, char) in word.enumerated() {\n        if consonants.contains(char) {\n\
    \            for (i, vowel) in vowels.enumerated() {\n                if word.contains(vowel)\
    \ && word.distance(from: word.startIndex, to: word.firstIndex(of: vowel)!) > index\
    \ && word.distance(from: word.startIndex, to: word.firstIndex(of: vowel)!) < closestVowelIndex\
    \ {\n                    closestVowel = String(vowel)\n                    closestVowelIndex\
    \ = word.distance(from: word.startIndex, to: word.firstIndex(of: vowel)!)\n  \
    \              }\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"AEIOUaeiou\"\n    let consonants = \"BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\
    \n    var result = \"\"\n    var vowelIndex = -1\n    var consonantIndex = -1\n\
    \    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = word[index]\n        if vowels.contains(char)\
    \ {\n            vowelIndex = i\n        } else if consonants.contains(char) {\n\
    \            consonantIndex = i\n        }\n        if vowelIndex != -1 && consonantIndex\
    \ != -1 && vowelIndex > consonantIndex {\n            result = String(char)\n\
    \            break\n        }\n    }\n    return result", "    let vowels = \"\
    aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\
    \n    var index = word.count - 1\n    var vowel_index = 0\n    var consonant_index\
    \ = 0\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            vowel_index\
    \ = index\n        } else if consonants.contains(char) {\n            consonant_index\
    \ = index\n            break\n        }\n        index -= 1\n    }\n    if vowel_index\
    \ > consonant_index {\n        result = String(word[word.index(word.startIndex,\
    \ offsetBy: vowel_index)])\n    }\n    return result", "    let vowels = \"aeiou\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result = \"\"\n    var\
    \ distance = Int.max\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            for j in (0..<i).reversed() {\n                let index = word.index(word.startIndex,\
    \ offsetBy: j)\n                let char = String(word[index])\n             \
    \   if consonants.contains(char) {\n                    if i - j < distance {\n\
    \                        distance = i - j\n                        result = char\n\
    \                    }\n                    break\n                }\n       \
    \     }\n        }\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var distance = 0\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            var distanceToRight = 0\n\
    \            var distanceToLeft = 0\n            for (index2, char2) in word.enumerated()\
    \ {\n                if consonants.contains(char2) && index2 > index {\n     \
    \               distanceToRight += 1\n                }\n                if consonants.contains(char2)\
    \ && index2 < index {\n                    distanceToLeft += 1\n             \
    \   }\n            }\n            if distanceToRight > distanceToLeft {\n    \
    \            if distanceToLeft > distance {\n                    distance = distanceToLeft\n\
    \                    closestVowel = String(char)\n                }\n        \
    \    } else {\n                if distanceToRight > distance {\n             \
    \       distance = distanceToRight\n                    closestVowel = String(char)\n\
    \                }\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n  \
    \  var closest_vowel = \"\"\n    var closest_index = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   if index > 0 && consonants.contains(word[word.index(word.startIndex, offsetBy:\
    \ index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closest_index {\n \
    \                       closest_index = index\n                        closest_vowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closest_vowel", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var closest_vowel = \"\"\n    var distance = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index < distance {\n                distance = index\n   \
    \             closest_vowel = String(char)\n            }\n        }\n    }\n\
    \    return closest_vowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel_index = -1\n\
    \    var consonant_index = -1\n    for i in (0..<word.count).reversed() {\n  \
    \      let index = word.index(word.startIndex, offsetBy: i)\n        let char\
    \ = word[index]\n        if vowels.contains(char) {\n            vowel_index =\
    \ i\n        } else if consonants.contains(char) {\n            consonant_index\
    \ = i\n            break\n        }\n    }\n    if vowel_index == -1 || consonant_index\
    \ == -1 {\n        return \"\"\n    }\n    return String(word[word.index(word.startIndex,\
    \ offsetBy: vowel_index)])", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel_index = -1\n\
    \    var consonant_index = -1\n    for (index, char) in word.enumerated() {\n\
    \        if vowels.contains(char) {\n            vowel_index = index\n       \
    \ }\n        if consonants.contains(char) {\n            consonant_index = index\n\
    \        }\n        if vowel_index > -1 && consonant_index > -1 {\n          \
    \  if vowel_index > consonant_index {\n                return String(char)\n \
    \           }\n        }\n    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closest_vowel = \"\"\n    var vowel_index = 0\n    var consonant_index = 0\n\
    \    var vowel_found = false\n    for (index, char) in word.enumerated() {\n \
    \       if vowels.contains(char) {\n            vowel_index = index\n        \
    \    vowel_found = true\n        }\n        if consonants.contains(char) && vowel_found\
    \ {\n            consonant_index = index\n            break\n        }\n    }\n\
    \    if vowel_found && consonant_index > vowel_index {\n        closest_vowel\
    \ = String(word[word.index(word.startIndex, offsetBy: vowel_index)])\n    }\n\
    \    return closest_vowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"\
    u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"\
    k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"\
    x\", \"y\", \"z\"]\n    var vowel = \"\"\n    var consonant = \"\"\n    for char\
    \ in word.reversed() {\n        if consonants.contains(String(char).lowercased())\
    \ {\n            consonant = String(char)\n            break\n        }\n    }\n\
    \    for char in word.reversed() {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            vowel = String(char)\n            break\n        }\n    }\n \
    \   if vowel == \"\" || consonant == \"\" {\n        return \"\"\n    }\n    return\
    \ vowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = -1\n    var consonantIndex\
    \ = -1\n    var closestDistance = Int.max\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            vowelIndex = index\n    \
    \    } else if consonants.contains(char) {\n            consonantIndex = index\n\
    \        }\n        if vowelIndex != -1 && consonantIndex != -1 {\n          \
    \  let distance = consonantIndex - vowelIndex\n            if distance > 0 &&\
    \ distance < closestDistance {\n                closestDistance = distance\n \
    \               closestVowel = String(char)\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    var result = \"\"\n    var index = word.count - 1\n    while index >= 0\
    \ {\n        let char = String(word[word.index(word.startIndex, offsetBy: index)])\n\
    \        if vowels.contains(char) {\n            result = char\n            break\n\
    \        }\n        index -= 1\n    }\n    return result", "    var vowel = \"\
    \"\n    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants =\
    \ [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    let\
    \ word = word.lowercased()\n    for i in 0..<word.count {\n        let index =\
    \ word.index(word.startIndex, offsetBy: i)\n        if vowels.contains(String(word[index]))\
    \ {\n            vowel = String(word[index])\n            let index2 = word.index(word.startIndex,\
    \ offsetBy: i-1)\n            let index3 = word.index(word.startIndex, offsetBy:\
    \ i+1)\n            if consonants.contains(String(word[index2])) && consonants.contains(String(word[index3]))\
    \ {\n                return vowel\n            }\n        }\n    }\n    return\
    \ \"\"", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   let distance = word.count - index\n            if distance < closestDistance\
    \ {\n                closestDistance = distance\n                closestVowel\
    \ = String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var index = 0\n    for i in word.indices {\n     \
    \   if vowels.contains(word[i]) {\n            vowel = String(word[i])\n     \
    \       index = word.distance(from: word.startIndex, to: i)\n        }\n    }\n\
    \    if vowel == \"\" {\n        return \"\"\n    }\n    for i in (0..<index).reversed()\
    \ {\n        if consonants.contains(word[word.index(word.startIndex, offsetBy:\
    \ i)]) {\n            return vowel\n        }\n    }\n    return \"\"", "    let\
    \ vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var closestVowelIndex = 0\n    var closestConsonantIndex\
    \ = 0\n    var vowelIndex = 0\n    var consonantIndex = 0\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        if\
    \ vowels.contains(word[index]) {\n            vowelIndex = i\n            if consonantIndex\
    \ != 0 {\n                if vowelIndex - consonantIndex < closestVowelIndex -\
    \ closestConsonantIndex {\n                    closestVowelIndex = vowelIndex\n\
    \                    closestConsonantIndex = consonantIndex\n                \
    \    closestVowel = String(word[index])\n                }\n            }\n  \
    \      } else if consonants.contains(word[index]) {\n            consonantIndex\
    \ = i\n        }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var closestVowelIndex = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   if index > 0 && consonants.contains(word[word.index(word.startIndex, offsetBy:\
    \ index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestVowelIndex {\n\
    \                        closestVowel = String(char)\n                       \
    \ closestVowelIndex = index\n                    }\n                }\n      \
    \      }\n        }\n    }\n    return closestVowel", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var vowel = \"\"\n    var consonant\
    \ = \"\"\n    var result = \"\"\n    for i in word.characters.reversed() {\n \
    \       if vowels.contains(String(i)) {\n            vowel = String(i)\n     \
    \   }\n        if consonants.contains(String(i)) {\n            consonant = String(i)\n\
    \        }\n        if vowel != \"\" && consonant != \"\" {\n            result\
    \ = vowel\n            break\n        }\n    }\n    return result", "    let vowels\
    \ = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"\
    d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"\
    r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n\
    \    var vowelIndex = 0\n    var consonantIndex = 0\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = String(word[index])\n        if vowels.contains(char) {\n           \
    \ vowelIndex = i\n        }\n        if consonants.contains(char) {\n        \
    \    consonantIndex = i\n        }\n        if vowelIndex > consonantIndex {\n\
    \            result = String(word[index])\n            break\n        }\n    }\n\
    \    return result", "    var vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n \
    \   var closest_vowel = \"\"\n    var index = word.count - 1\n    var found_consonant\
    \ = false\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(String(char)) {\n            if\
    \ found_consonant {\n                closest_vowel = String(char)\n          \
    \      break\n            }\n        } else {\n            found_consonant = true\n\
    \        }\n        index -= 1\n    }\n    return closest_vowel", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    var vowelFound = false\n    var consonantFound = false\n    var vowelFoundIndex\
    \ = 0\n    var consonantFoundIndex = 0\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(char) {\n            vowelFound = true\n     \
    \       vowelFoundIndex = index\n        }\n        if consonants.contains(char)\
    \ {\n            consonantFound = true\n            consonantFoundIndex = index\n\
    \        }\n        if vowelFound && consonantFound {\n            if vowelFoundIndex\
    \ > consonantFoundIndex {\n                vowelIndex = vowelFoundIndex\n    \
    \            consonantIndex = consonantFoundIndex\n                closestVowel\
    \ = String(char)\n            }\n            vowelFound = false\n            consonantFound\
    \ = false\n        }\n    }\n    return closestVowel", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n   \
    \ var closestVowelIndex = 0\n    var closestConsonantIndex = 0\n    var closestConsonant\
    \ = \"\"\n    var vowelFound = false\n    var consonantFound = false\n    for\
    \ (index, char) in word.lowercased().reversed().enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            closestVowel = String(char)\n            closestVowelIndex =\
    \ index\n            vowelFound = true\n        }\n        if consonants.contains(String(char))\
    \ && vowelFound {\n            closestConsonant = String(char)\n            closestConsonantIndex\
    \ = index\n            consonantFound = true\n        }\n        if vowelFound\
    \ && consonantFound {\n            break\n        }\n    }\n    if vowelFound\
    \ && consonantFound && closestVowelIndex < closestConsonantIndex {\n        return\
    \ closestVowel\n    }\n    return \"\"", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestDistance = word.count\n\
    \    for (index, letter) in word.enumerated() {\n        if vowels.contains(String(letter))\
    \ {\n            var distance = 0\n            var isVowel = false\n         \
    \   for i in index..<word.count {\n                distance += 1\n           \
    \     if vowels.contains(String(word[word.index(word.startIndex, offsetBy: i)]))\
    \ {\n                    isVowel = true\n                    break\n         \
    \       }\n            }\n            if !isVowel {\n                for i in\
    \ (0..<index).reversed() {\n                    distance += 1\n              \
    \      if vowels.contains(String(word[word.index(word.startIndex, offsetBy: i)]))\
    \ {\n                        isVowel = true\n                        break\n \
    \                   }\n                }\n            }\n            if isVowel\
    \ && distance < closestDistance {\n                closestDistance = distance\n\
    \                closestVowel = String(letter)\n            }\n        }\n   \
    \ }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closest_vowel = \"\
    \"\n    var closest_vowel_index = 0\n    var closest_vowel_distance = 0\n    var\
    \ vowel_index = 0\n    var consonant_index = 0\n    var vowel_distance = 0\n \
    \   var vowel_found = false\n    for i in 0..<word.count {\n        let index\
    \ = word.index(word.startIndex, offsetBy: i)\n        let char = String(word[index])\n\
    \        if vowels.contains(char) {\n            vowel_index = i\n           \
    \ vowel_found = true\n        }\n        if consonants.contains(char) && vowel_found\
    \ {\n            consonant_index = i\n            vowel_distance = consonant_index\
    \ - vowel_index\n            if closest_vowel_distance == 0 || vowel_distance\
    \ < closest_vowel_distance {\n                closest_vowel_distance = vowel_distance\n\
    \                closest_vowel_index = vowel_index\n            }\n          \
    \  vowel_found = false\n        }\n    }\n    if closest_vowel_distance > 0 {\n\
    \        let index = word.index(word.startIndex, offsetBy: closest_vowel_index)\n\
    \        closest_vowel = String(word[index])\n    }\n    return closest_vowel",
  "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var distance = word.count\n    for (index, char)\
    \ in word.enumerated() {\n        if vowels.contains(char) {\n            if index\
    \ > 0 && consonants.contains(word[word.index(word.startIndex, offsetBy: index\
    \ - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < distance {\n      \
    \                  distance = index\n                        result = String(char)\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  \
    \  var result = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n\
    \        let char = String(word[word.index(word.startIndex, offsetBy: index)])\n\
    \        if vowels.contains(char) {\n            result = char\n            break\n\
    \        }\n        index -= 1\n    }\n    return result", "    let vowels = \"\
    aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closest_vowel\
    \ = \"\"\n    var closest_vowel_index = 0\n    var closest_consonant_index = 0\n\
    \    var closest_consonant_index_2 = 0\n    var vowel_index = 0\n    var consonant_index\
    \ = 0\n    var consonant_index_2 = 0\n    for char in word.characters {\n    \
    \    if vowels.contains(String(char)) {\n            vowel_index = word.characters.index(of:\
    \ char)!\n            if vowel_index > closest_vowel_index && vowel_index < closest_consonant_index\
    \ {\n                closest_vowel_index = vowel_index\n                closest_vowel\
    \ = String(char)\n            }\n        } else if consonants.contains(String(char))\
    \ {\n            consonant_index = word.characters.index(of: char)!\n        \
    \    if consonant_index > closest_consonant_index {\n                closest_consonant_index_2\
    \ = closest_consonant_index\n                closest_consonant_index = consonant_index\n\
    \            }\n        }\n    }\n    if closest_vowel_index > closest_consonant_index_2\
    \ && closest_vowel_index < closest_consonant_index {\n        return closest_vowel\n\
    \    } else {\n        return \"\"\n    }", "    let vowels = [\"a\", \"e\", \"\
    i\", \"o\", \"u\"]\n    var vowel = \"\"\n    var index = 0\n    for i in word.indices\
    \ {\n        if vowels.contains(String(word[i])) {\n            vowel = String(word[i])\n\
    \            index = word.distance(from: word.startIndex, to: i)\n        }\n\
    \    }\n    if index == 0 || index == word.count - 1 {\n        return \"\"\n\
    \    }\n    return vowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel = \"\"\n   \
    \ var consonant = \"\"\n    var closest_vowel = \"\"\n    for char in word.characters\
    \ {\n        if vowels.containsString(String(char)) {\n            vowel = String(char)\n\
    \        }\n        if consonants.containsString(String(char)) {\n           \
    \ consonant = String(char)\n        }\n        if vowel != \"\" && consonant !=\
    \ \"\" {\n            closest_vowel = vowel\n            break\n        }\n  \
    \  }\n    return closest_vowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"]\n    var closest_vowel = \"\"\n    var closest_index =\
    \ 0\n    var index = 0\n    for char in word.lowercased() {\n        if vowels.contains(String(char))\
    \ {\n            if consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) {\n                if index > closest_index {\n    \
    \                closest_vowel = String(char)\n                    closest_index\
    \ = index\n                }\n            }\n        }\n        index += 1\n \
    \   }\n    return closest_vowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel = \"\"\n   \
    \ var index = 0\n    for i in (0..<word.count).reversed() {\n        let char\
    \ = word[word.index(word.startIndex, offsetBy: i)]\n        if consonants.contains(char)\
    \ {\n            index = i\n            break\n        }\n    }\n    for i in\
    \ (index+1..<word.count).reversed() {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: i)]\n        if vowels.contains(char) {\n            vowel = String(char)\n\
    \            break\n        }\n    }\n    return vowel", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n\
    \    var closestVowelIndex = 0\n    var closestConsonantIndex = 0\n    var index\
    \ = 0\n    for letter in word {\n        if vowels.contains(String(letter).lowercased())\
    \ {\n            if index > closestVowelIndex {\n                closestVowel\
    \ = String(letter)\n                closestVowelIndex = index\n            }\n\
    \        } else if consonants.contains(String(letter).lowercased()) {\n      \
    \      if index < closestVowelIndex && index > closestConsonantIndex {\n     \
    \           closestConsonantIndex = index\n            }\n        }\n        index\
    \ += 1\n    }\n    if closestVowelIndex > closestConsonantIndex {\n        return\
    \ closestVowel\n    } else {\n        return \"\"\n    }", "    let vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"\
    f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"\
    s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n\
    \    var closestVowelIndex = 0\n    var closestConsonantIndex = 0\n    for (index,\
    \ char) in word.lowercased().reversed().enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            closestVowel = String(char)\n            closestVowelIndex =\
    \ index\n        }\n        if consonants.contains(String(char)) && closestVowelIndex\
    \ != 0 {\n            closestConsonantIndex = index\n            break\n     \
    \   }\n    }\n    if closestVowelIndex == 0 || closestConsonantIndex == 0 {\n\
    \        return \"\"\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n  \
    \  for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowelIndex = i\n        }\n        if consonants.contains(char)\
    \ {\n            consonantIndex = i\n        }\n        if vowelIndex > consonantIndex\
    \ {\n            closestVowel = char\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    var index = word.count\
    \ - 1\n    while index >= 0 {\n        if vowels.contains(word[index]) {\n   \
    \         result = String(word[index])\n            break\n        }\n       \
    \ index -= 1\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\n  \
    \  let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var closestVowelIndex = 0\n    var closestConsonantIndex = 0\n \
    \   var closestConsonant = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    for letter in word {\n        if vowels.contains(letter) {\n      \
    \      vowelIndex = word.firstIndex(of: letter)!.encodedOffset\n            if\
    \ vowelIndex > closestConsonantIndex && vowelIndex < closestVowelIndex {\n   \
    \             closestVowel = String(letter)\n                closestVowelIndex\
    \ = vowelIndex\n            }\n        } else if consonants.contains(letter) {\n\
    \            consonantIndex = word.firstIndex(of: letter)!.encodedOffset\n   \
    \         if consonantIndex > closestVowelIndex && consonantIndex > closestConsonantIndex\
    \ {\n                closestConsonant = String(letter)\n                closestConsonantIndex\
    \ = consonantIndex\n            }\n        }\n    }\n    return closestVowel",
  "    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    var vowel_index = 0\n\
    \    var consonant_index = 0\n    for (index, char) in word.characters.enumerated()\
    \ {\n        if vowels.contains(char) {\n            vowel_index = index\n   \
    \     } else {\n            consonant_index = index\n        }\n        if vowel_index\
    \ < consonant_index {\n            result = String(char)\n            break\n\
    \        }\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel\
    \ = \"\"\n    var vowelIndex = 0\n    var consonantIndex = 0\n    var index =\
    \ 0\n    var vowelFound = false\n    var consonantFound = false\n    while index\
    \ < word.count {\n        let char = word[word.index(word.startIndex, offsetBy:\
    \ index)]\n        if vowels.contains(char) {\n            vowelFound = true\n\
    \            vowelIndex = index\n        }\n        if consonants.contains(char)\
    \ {\n            consonantFound = true\n            consonantIndex = index\n \
    \       }\n        if vowelFound && consonantFound {\n            if vowelIndex\
    \ > consonantIndex {\n                closestVowel = String(char)\n          \
    \  }\n            vowelFound = false\n            consonantFound = false\n   \
    \     }\n        index += 1\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel_index = -1\n    var consonant_index = -1\n    var vowel_found\
    \ = false\n    var consonant_found = false\n    for i in (0..<word.count).reversed()\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = word[index]\n        if vowels.contains(char) {\n            vowel_index\
    \ = i\n            vowel_found = true\n        }\n        if consonants.contains(char)\
    \ {\n            consonant_index = i\n            consonant_found = true\n   \
    \     }\n        if vowel_found && consonant_found {\n            break\n    \
    \    }\n    }\n    if vowel_index > consonant_index {\n        return String(word[word.index(word.startIndex,\
    \ offsetBy: vowel_index)])\n    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closest_vowel = \"\"\n    var vowel_index = -1\n    var consonant_index = -1\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            vowel_index = index\n        }\n        if consonants.contains(char)\
    \ {\n            consonant_index = index\n        }\n        if vowel_index >\
    \ -1 && consonant_index > -1 {\n            if consonant_index > vowel_index {\n\
    \                closest_vowel = String(char)\n            }\n        }\n    }\n\
    \    return closest_vowel", "    let vowels = \"aeiou\"\n    let consonants =\
    \ \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var closestIndex\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            if index > 0 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestIndex {\n  \
    \                      closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var\
    \ closestIndex = word.count\n    for (index, char) in word.enumerated() {\n  \
    \      if consonants.contains(char) {\n            for i in index..<word.count\
    \ {\n                if vowels.contains(word[i]) {\n                    if i -\
    \ index < closestIndex {\n                        closestIndex = i - index\n \
    \                       closestVowel = String(word[i])\n                    }\n\
    \                    break\n                }\n            }\n        }\n    }\n\
    \    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel = \"\"\n   \
    \ var index = 0\n    for i in word.indices.reversed() {\n        if vowels.contains(word[i])\
    \ {\n            vowel = String(word[i])\n            index = word.distance(from:\
    \ word.startIndex, to: i)\n        } else if consonants.contains(word[i]) {\n\
    \            if index > 0 && index < word.count - 1 {\n                return\
    \ vowel\n            }\n        }\n    }\n    return \"\"", "    let vowels =\
    \ \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowelIndex = i\n        }\n        if consonants.contains(char)\
    \ {\n            consonantIndex = i\n        }\n        if vowelIndex > consonantIndex\
    \ {\n            closestVowel = char\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel\
    \ = \"\"\n    var closestVowelIndex = 0\n    for (index, char) in word.enumerated()\
    \ {\n        if consonants.contains(String(char).lowercased()) {\n           \
    \ for (index2, char2) in word.enumerated() {\n                if vowels.contains(String(char2).lowercased())\
    \ {\n                    if index2 > index {\n                        if closestVowelIndex\
    \ == 0 {\n                            closestVowelIndex = index2\n           \
    \                 closestVowel = String(char2)\n                        } else\
    \ if index2 < closestVowelIndex {\n                            closestVowelIndex\
    \ = index2\n                            closestVowel = String(char2)\n       \
    \                 }\n                    }\n                }\n            }\n\
    \        }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\",\
    \ \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\"\
    , \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var vowel_index\
    \ = 0\n    var consonant_index = 0\n    var vowel_count = 0\n    var consonant_count\
    \ = 0\n    var vowel_flag = false\n    var consonant_flag = false\n    for i in\
    \ word.characters.indices {\n        if vowels.contains(String(word[i]).lowercased())\
    \ {\n            vowel_count += 1\n            if vowel_flag == false {\n    \
    \            vowel_index = i\n                vowel_flag = true\n            }\n\
    \        }\n        if consonants.contains(String(word[i]).lowercased()) {\n \
    \           consonant_count += 1\n            if consonant_flag == false {\n \
    \               consonant_index = i\n                consonant_flag = true\n \
    \           }\n        }\n    }\n    if vowel_count == 0 || consonant_count ==\
    \ 0 {\n        return result\n    }\n    if vowel_index > consonant_index {\n\
    \        result = String(word[vowel_index])\n    }\n    return result", "    let\
    \ vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var vowel_index = -1\n   \
    \ for i in 0..<word.count {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowel_index = i\n        }\n    }\n    if vowel_index == -1 {\n\
    \        return \"\"\n    }\n    var closest_vowel = \"\"\n    var closest_distance\
    \ = word.count\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            let distance = vowel_index - i\n            if distance > 0 &&\
    \ distance < closest_distance {\n                closest_distance = distance\n\
    \                closest_vowel = char\n            }\n        }\n    }\n    return\
    \ closest_vowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    var consonant = \"\"\n    var result = \"\"\n    for\
    \ char in word.characters {\n        if vowels.containsString(String(char)) {\n\
    \            vowel = String(char)\n        }\n        if consonants.containsString(String(char))\
    \ {\n            consonant = String(char)\n        }\n        if vowel != \"\"\
    \ && consonant != \"\" {\n            result = vowel\n            break\n    \
    \    }\n    }\n    return result", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"]\n    var closestVowel: String = \"\"\n    var closestDistance:\
    \ Int = 0\n    var distance: Int = 0\n    for i in 0..<word.count {\n        let\
    \ index = word.index(word.startIndex, offsetBy: i)\n        let letter = String(word[index])\n\
    \        if vowels.contains(letter) {\n            if i > 0 {\n              \
    \  let prevIndex = word.index(word.startIndex, offsetBy: i - 1)\n            \
    \    let prevLetter = String(word[prevIndex])\n                if consonants.contains(prevLetter)\
    \ {\n                    distance = i\n                    if closestDistance\
    \ == 0 {\n                        closestDistance = distance\n               \
    \         closestVowel = letter\n                    } else if distance < closestDistance\
    \ {\n                        closestDistance = distance\n                    \
    \    closestVowel = letter\n                    }\n                }\n       \
    \     }\n        }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ result = \"\"\n    var index = word.count - 1\n    var previous_char = \"\"\n\
    \    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            if previous_char\
    \ != \"\" && consonants.contains(previous_char) {\n                result = char\n\
    \                break\n            }\n        }\n        previous_char = char\n\
    \        index -= 1\n    }\n    return result", "    let vowels = [\"a\", \"e\"\
    , \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\"\
    , \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\"\
    , \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel: String = \"\"\n  \
    \  var closestDistance: Int = word.count\n    for i in 0..<word.count {\n    \
    \    let index = word.index(word.startIndex, offsetBy: i)\n        let char =\
    \ String(word[index])\n        if vowels.contains(char) {\n            var distance:\
    \ Int = 0\n            for j in (i+1)..<word.count {\n                let index\
    \ = word.index(word.startIndex, offsetBy: j)\n                let char = String(word[index])\n\
    \                if consonants.contains(char) {\n                    distance\
    \ = j - i\n                    break\n                }\n            }\n     \
    \       if distance > 0 && distance < closestDistance {\n                closestDistance\
    \ = distance\n                closestVowel = char\n            }\n        }\n\
    \    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowelCount = 0\n\
    \    var consonantCount = 0\n    var vowelFound = false\n    var consonantFound\
    \ = false\n    for i in 0..<word.count {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            vowelFound = true\n            vowelCount += 1\n            vowelIndex\
    \ = i\n        }\n        if consonants.contains(char) {\n            consonantFound\
    \ = true\n            consonantCount += 1\n            consonantIndex = i\n  \
    \      }\n        if vowelFound && consonantFound {\n            if vowelCount\
    \ == 1 && consonantCount == 1 {\n                closestVowel = char\n       \
    \     } else if vowelCount == 1 && consonantCount > 1 {\n                if consonantIndex\
    \ - vowelIndex == 1 {\n                    closestVowel = char\n             \
    \   }\n            } else if vowelCount > 1 && consonantCount == 1 {\n       \
    \         if vowelIndex - consonantIndex == 1 {\n                    closestVowel\
    \ = char\n                }\n            } else if vowelCount > 1 && consonantCount\
    \ > 1 {\n                if vowelIndex - consonantIndex == 1 {\n             \
    \       closestVowel = char\n                }\n            }\n        }\n   \
    \ }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel_index = -1\n\
    \    var consonant_index = -1\n    for (index, char) in word.enumerated() {\n\
    \        if vowels.contains(char) {\n            vowel_index = index\n       \
    \ }\n        if consonants.contains(char) {\n            consonant_index = index\n\
    \        }\n        if vowel_index != -1 && consonant_index != -1 {\n        \
    \    if vowel_index > consonant_index {\n                return String(char)\n\
    \            }\n        }\n    }\n    return \"\"", "    // TODO: Implement this\
    \ function\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(char)\
    \ {\n            result = String(char)\n            break\n        }\n       \
    \ index -= 1\n    }\n    return result", "    let vowels = \"aeiou\"\n    let\
    \ consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n    var\
    \ vowelIndex = 0\n    var consonantIndex = 0\n    for i in 0..<word.count {\n\
    \        let index = word.index(word.startIndex, offsetBy: i)\n        if vowels.contains(word[index])\
    \ {\n            vowelIndex = i\n        }\n        if consonants.contains(word[index])\
    \ {\n            consonantIndex = i\n        }\n        if vowelIndex > consonantIndex\
    \ {\n            closestVowel = String(word[index])\n            break\n     \
    \   }\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var index = word.count\
    \ - 1\n    var isConsonant = false\n    while index >= 0 {\n        let letter\
    \ = word[word.index(word.startIndex, offsetBy: index)]\n        if consonants.contains(String(letter).lowercased())\
    \ {\n            if isConsonant {\n                break\n            }\n    \
    \        isConsonant = true\n        } else if vowels.contains(String(letter).lowercased())\
    \ {\n            closestVowel = String(letter)\n            isConsonant = false\n\
    \        }\n        index -= 1\n    }\n    return closestVowel", "    let vowels\
    \ = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\n    var result\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: index)]\n        if consonants.contains(char)\
    \ {\n            if index + 1 < word.count {\n                let nextChar = word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]\n                if vowels.contains(nextChar) {\n    \
    \                result = String(nextChar)\n                    break\n      \
    \          }\n            }\n        }\n        index -= 1\n    }\n    return\
    \ result", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closest_vowel\
    \ = \"\"\n    var vowel_index = 0\n    var consonant_index = 0\n    var i = word.count\
    \ - 1\n    while i >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: i)])\n        if vowels.contains(char) {\n            vowel_index\
    \ = i\n        } else {\n            consonant_index = i\n            break\n\
    \        }\n        i -= 1\n    }\n    if vowel_index > consonant_index {\n  \
    \      closest_vowel = String(word[word.index(word.startIndex, offsetBy: vowel_index)])\n\
    \    }\n    return closest_vowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var closestVowel = \"\"\
    \n    var closestIndex = word.count\n    for (index, letter) in word.enumerated()\
    \ {\n        if consonants.contains(letter) {\n            for (vowelIndex, vowel)\
    \ in word[index..<word.count].enumerated() {\n                if vowels.contains(vowel)\
    \ {\n                    if vowelIndex < closestIndex {\n                    \
    \    closestIndex = vowelIndex\n                        closestVowel = String(vowel)\n\
    \                    }\n                    break\n                }\n       \
    \     }\n        }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ closestVowel = \"\"\n    var closestIndex = word.count\n    for (index, char)\
    \ in word.enumerated() {\n        if vowels.contains(char) {\n            if index\
    \ > 0 && consonants.contains(word[word.index(word.startIndex, offsetBy: index\
    \ - 1)]) {\n                if index < word.count - 1 && consonants.contains(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]) {\n                    if index < closestIndex {\n  \
    \                      closestIndex = index\n                        closestVowel\
    \ = String(char)\n                    }\n                }\n            }\n  \
    \      }\n    }\n    return closestVowel", "    let vowels = \"aeiouAEIOU\"\n\
    \    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ result = \"\"\n    var last_consonant = \"\"\n    var last_vowel = \"\"\n  \
    \  for char in word {\n        if vowels.contains(char) {\n            last_vowel\
    \ = String(char)\n        } else if consonants.contains(char) {\n            last_consonant\
    \ = String(char)\n        }\n        if last_consonant != \"\" && last_vowel !=\
    \ \"\" {\n            result = last_vowel\n            break\n        }\n    }\n\
    \    return result", "    let vowels = \"AEIOUaeiou\"\n    let consonants = \"\
    BCDFGHJKLMNPQRSTVWXYZbcdfghjklmnpqrstvwxyz\"\n    var closestVowel = \"\"\n  \
    \  var vowelIndex = 0\n    var consonantIndex = 0\n    var vowelFound = false\n\
    \    var consonantFound = false\n    var index = word.count - 1\n    while index\
    \ >= 0 {\n        let character = word[word.index(word.startIndex, offsetBy: index)]\n\
    \        if !vowelFound {\n            vowelIndex = vowels.index(of: character)\n\
    \            if vowelIndex != nil {\n                vowelFound = true\n     \
    \       }\n        }\n        if !consonantFound {\n            consonantIndex\
    \ = consonants.index(of: character)\n            if consonantIndex != nil {\n\
    \                consonantFound = true\n            }\n        }\n        if vowelFound\
    \ && consonantFound {\n            closestVowel = String(character)\n        \
    \    break\n        }\n        index -= 1\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = 0\n    var vowel_index = 0\n    var consonant_index\
    \ = 0\n    var vowel_found = false\n    var consonant_found = false\n    for char\
    \ in word.characters {\n        if vowels.containsString(String(char)) {\n   \
    \         vowel_found = true\n            vowel_index = index\n        }\n   \
    \     if consonants.containsString(String(char)) {\n            consonant_found\
    \ = true\n            consonant_index = index\n        }\n        if vowel_found\
    \ && consonant_found {\n            if vowel_index > consonant_index {\n     \
    \           result = String(char)\n            }\n            vowel_found = false\n\
    \            consonant_found = false\n        }\n        index += 1\n    }\n \
    \   return result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel_index = 0\n    var\
    \ consonant_index = 0\n    for i in (0..<word.count).reversed() {\n        let\
    \ index = word.index(word.startIndex, offsetBy: i)\n        let char = word[index]\n\
    \        if vowels.contains(char) {\n            vowel_index = i\n        } else\
    \ if consonants.contains(char) {\n            consonant_index = i\n          \
    \  break\n        }\n    }\n    if vowel_index > consonant_index {\n        return\
    \ String(word[word.index(word.startIndex, offsetBy: vowel_index)])\n    }\n  \
    \  return \"\"", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let\
    \ consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\"\
    , \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\"\
    , \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex = 0\n    var\
    \ closestConsonantIndex = 0\n    var consonantIndex = 0\n    var vowelIndex =\
    \ 0\n    var vowelFound = false\n    var consonantFound = false\n    for (index,\
    \ char) in word.lowercased().reversed().enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            vowelFound = true\n            vowelIndex = index\n        }\n\
    \        if consonants.contains(String(char)) {\n            consonantFound =\
    \ true\n            consonantIndex = index\n        }\n        if vowelFound &&\
    \ consonantFound {\n            if vowelIndex > closestVowelIndex && consonantIndex\
    \ > closestConsonantIndex {\n                closestVowelIndex = vowelIndex\n\
    \                closestConsonantIndex = consonantIndex\n                closestVowel\
    \ = String(char)\n            }\n            vowelFound = false\n            consonantFound\
    \ = false\n        }\n    }\n    return closestVowel", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n   \
    \ var closestVowelIndex = 0\n    var closestConsonantIndex = 0\n    var closestConsonant\
    \ = \"\"\n    var wordArray = Array(word)\n    for (index, letter) in wordArray.enumerated()\
    \ {\n        if vowels.contains(String(letter).lowercased()) {\n            closestVowel\
    \ = String(letter)\n            closestVowelIndex = index\n            for (index,\
    \ letter) in wordArray.enumerated() {\n                if consonants.contains(String(letter).lowercased())\
    \ && index > closestVowelIndex {\n                    closestConsonant = String(letter)\n\
    \                    closestConsonantIndex = index\n                    break\n\
    \                }\n            }\n            if closestConsonantIndex > closestVowelIndex\
    \ {\n                return closestVowel\n            }\n        }\n    }\n  \
    \  return \"\"", "    let vowels = \"aeiou\"\n    let consonants = \"bcdfghjklmnpqrstvwxyz\"\
    \n    var closestVowel = \"\"\n    var closestVowelIndex = 0\n    var closestConsonantIndex\
    \ = 0\n    for (index, character) in word.characters.enumerated() {\n        if\
    \ consonants.contains(String(character)) {\n            closestConsonantIndex\
    \ = index\n            for (index2, character2) in word.characters.enumerated()\
    \ {\n                if vowels.contains(String(character2)) {\n              \
    \      if index2 > closestConsonantIndex && index2 > closestVowelIndex {\n   \
    \                     closestVowel = String(character2)\n                    \
    \    closestVowelIndex = index2\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return closestVowel", "    let vowels = \"\
    aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var lastConsonant = \"\"\n    var lastVowel\
    \ = \"\"\n    for char in word {\n        if vowels.contains(char) {\n       \
    \     lastVowel = String(char)\n            if lastConsonant != \"\" {\n     \
    \           closestVowel = lastVowel\n            }\n        } else if consonants.contains(char)\
    \ {\n            lastConsonant = String(char)\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closest_vowel\
    \ = \"\"\n    var closest_vowel_index = 0\n    var closest_vowel_distance = 0\n\
    \    for (index, char) in word.lowercased().reversed().enumerated() {\n      \
    \  if vowels.contains(String(char)) {\n            closest_vowel = String(char)\n\
    \            closest_vowel_index = index\n            break\n        }\n    }\n\
    \    for (index, char) in word.lowercased().reversed().enumerated() {\n      \
    \  if consonants.contains(String(char)) && index < closest_vowel_index {\n   \
    \         closest_vowel_distance = closest_vowel_index - index\n            break\n\
    \        }\n    }\n    if closest_vowel_distance == 0 {\n        return \"\"\n\
    \    }\n    return closest_vowel", "    let vowels = [\"a\", \"e\", \"i\", \"\
    o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"\
    j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"\
    w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n    var closestVowelIndex\
    \ = 0\n    var closestConsonantIndex = 0\n    var isVowel = false\n    var isConsonant\
    \ = false\n    for (index, char) in word.lowercased().reversed().enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            isVowel = true\n\
    \            closestVowel = String(char)\n            closestVowelIndex = index\n\
    \        }\n        if consonants.contains(String(char)) {\n            isConsonant\
    \ = true\n            closestConsonantIndex = index\n        }\n        if isVowel\
    \ && isConsonant {\n            if closestVowelIndex - closestConsonantIndex ==\
    \ 1 {\n                return closestVowel\n            }\n        }\n    }\n\
    \    return \"\"", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelDistance = 0\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = String(word[index])\n        if vowels.contains(char) {\n           \
    \ let distance = word.count - i\n            if vowelDistance == 0 {\n       \
    \         vowelDistance = distance\n                closestVowel = char\n    \
    \        } else if distance < vowelDistance {\n                vowelDistance =\
    \ distance\n                closestVowel = char\n            }\n        }\n  \
    \  }\n    if vowelDistance == 0 {\n        return \"\"\n    }\n    for i in 0..<vowelDistance\
    \ {\n        let index = word.index(word.startIndex, offsetBy: word.count - i\
    \ - 1)\n        let char = String(word[index])\n        if consonants.contains(char)\
    \ {\n            return closestVowel\n        }\n    }\n    return \"\"", "  \
    \  let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel_index = 0\n    var consonant_index = 0\n    var result = \"\"\n\
    \    for char in word.characters {\n        if vowels.containsString(String(char))\
    \ {\n            vowel_index = word.characters.indexOf(char)!\n        }\n   \
    \     if consonants.containsString(String(char)) {\n            consonant_index\
    \ = word.characters.indexOf(char)!\n            if vowel_index > consonant_index\
    \ {\n                result = String(char)\n            }\n        }\n    }\n\
    \    return result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var result = \"\"\n    for i\
    \ in (0..<word.count).reversed() {\n        let index = word.index(word.startIndex,\
    \ offsetBy: i)\n        let char = String(word[index])\n        if vowels.contains(char)\
    \ {\n            if i == word.count - 1 {\n                return \"\"\n     \
    \       }\n            let nextIndex = word.index(word.startIndex, offsetBy: i\
    \ + 1)\n            let nextChar = String(word[nextIndex])\n            if consonants.contains(nextChar)\
    \ {\n                return char\n            }\n        }\n    }\n    return\
    \ result", "    let vowels = \"aeiouAEIOU\"\n    var result = \"\"\n    var index\
    \ = word.count - 1\n    while index >= 0 {\n        let char = word[word.index(word.startIndex,\
    \ offsetBy: index)]\n        if vowels.contains(char) {\n            result =\
    \ String(char)\n            break\n        }\n        index -= 1\n    }\n    return\
    \ result", "    var result = \"\"\n    let vowels = [\"a\", \"e\", \"i\", \"o\"\
    , \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\"\
    , \"x\", \"y\", \"z\"]\n    var consonant_count = 0\n    var vowel_count = 0\n\
    \    var vowel_index = 0\n    var consonant_index = 0\n    for i in 0..<word.count\
    \ {\n        let index = word.index(word.startIndex, offsetBy: i)\n        let\
    \ char = String(word[index])\n        if vowels.contains(char) {\n           \
    \ vowel_count += 1\n            vowel_index = i\n        } else if consonants.contains(char)\
    \ {\n            consonant_count += 1\n            consonant_index = i\n     \
    \   }\n    }\n    if consonant_count > 1 && vowel_count > 0 {\n        if vowel_index\
    \ > consonant_index {\n            let index = word.index(word.startIndex, offsetBy:\
    \ vowel_index)\n            result = String(word[index])\n        }\n    }\n \
    \   return result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel = \"\"\n    var index\
    \ = 0\n    for i in word.indices.reversed() {\n        if consonants.contains(word[i])\
    \ {\n            index = word.index(after: i)\n            break\n        }\n\
    \    }\n    for i in index..<word.count {\n        if vowels.contains(word[i])\
    \ {\n            vowel = String(word[i])\n            break\n        }\n    }\n\
    \    return vowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n  \
    \  let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    y\", \"z\"]\n    var vowel = \"\"\n    var index = 0\n    var found = false\n\
    \    for letter in word.reversed() {\n        if consonants.contains(String(letter).lowercased())\
    \ {\n            if found {\n                break\n            }\n        } else\
    \ if vowels.contains(String(letter).lowercased()) {\n            vowel = String(letter)\n\
    \            found = true\n        }\n        index += 1\n    }\n    if found\
    \ {\n        return vowel\n    }\n    return \"\"", "    let vowels = \"aeiouAEIOU\"\
    \n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var\
    \ vowel = \"\"\n    var consonant = \"\"\n    var closest_vowel = \"\"\n    var\
    \ closest_distance = 0\n    for char in word.characters {\n        if vowels.containsString(String(char))\
    \ {\n            vowel = String(char)\n        }\n        if consonants.containsString(String(char))\
    \ {\n            consonant = String(char)\n        }\n        if vowel != \"\"\
    \ && consonant != \"\" {\n            let distance = word.characters.distanceOf(vowel,\
    \ from: consonant)\n            if distance > closest_distance {\n           \
    \     closest_distance = distance\n                closest_vowel = vowel\n   \
    \         }\n            vowel = \"\"\n            consonant = \"\"\n        }\n\
    \    }\n    return closest_vowel", "    let vowels = \"aeiouAEIOU\"\n    var closestVowel\
    \ = \"\"\n    var index = word.count - 1\n    while index >= 0 {\n        let\
    \ char = word[word.index(word.startIndex, offsetBy: index)]\n        if vowels.contains(char)\
    \ {\n            closestVowel = String(char)\n            break\n        }\n \
    \       index -= 1\n    }\n    return closestVowel", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel = \"\"\n   \
    \ var closestVowelIndex = 0\n    var closestConsonantIndex = 0\n    var closestConsonant\
    \ = \"\"\n    var vowelFound = false\n    var consonantFound = false\n    for\
    \ (index, letter) in word.enumerated() {\n        if vowels.contains(String(letter).lowercased())\
    \ {\n            vowelFound = true\n            closestVowel = String(letter)\n\
    \            closestVowelIndex = index\n        }\n        if consonants.contains(String(letter).lowercased())\
    \ && vowelFound {\n            consonantFound = true\n            closestConsonant\
    \ = String(letter)\n            closestConsonantIndex = index\n        }\n   \
    \     if vowelFound && consonantFound {\n            break\n        }\n    }\n\
    \    if closestVowelIndex < closestConsonantIndex {\n        return closestVowel\n\
    \    }\n    return \"\""]
stop_tokens:
- "\n}"

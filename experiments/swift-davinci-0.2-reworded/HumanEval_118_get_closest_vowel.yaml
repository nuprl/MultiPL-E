name: HumanEval_118_get_closest_vowel
language: swift
prompt: "\n/// You are given a word. Your task is to find the closest vowel that stands\
  \ between \n/// two consonants from the right side of the word (case sensitive).\n\
  /// Vowels in the beginning and ending doesn't count. Return empty string if you\
  \ didn't\n/// find any vowel met the above condition. \n/// You may assume that\
  \ the given string contains English letter only.\n/// Example:\n/// >>> get_closest_vowel(word:\
  \ \"yogurt\")\n/// \"u\"\n/// >>> get_closest_vowel(word: \"FULL\")\n/// \"U\"\n\
  /// >>> get_closest_vowel(word: \"quick\")\n/// \"\"\n/// >>> get_closest_vowel(word:\
  \ \"ab\")\n/// \"\"\nfunc get_closest_vowel(word: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(get_closest_vowel(word: \"yogurt\") == \"\
  u\")\nassert(get_closest_vowel(word: \"full\") == \"u\")\nassert(get_closest_vowel(word:\
  \ \"easy\") == \"\")\nassert(get_closest_vowel(word: \"eAsy\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ali\") == \"\")\nassert(get_closest_vowel(word: \"bad\") == \"a\")\nassert(get_closest_vowel(word:\
  \ \"most\") == \"o\")\nassert(get_closest_vowel(word: \"ab\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"ba\") == \"\")\nassert(get_closest_vowel(word: \"quick\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"anime\") == \"i\")\nassert(get_closest_vowel(word: \"Asia\") == \"\")\nassert(get_closest_vowel(word:\
  \ \"Above\") == \"o\")"
completions: ["    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var index = 0\n    var prev = \"\"\n    var\
    \ curr = \"\"\n    var next = \"\"\n    for char in word.characters {\n      \
    \  if index == 0 {\n            prev = \" \"\n        } else {\n            prev\
    \ = String(word[word.index(word.startIndex, offsetBy: index - 1)])\n        }\n\
    \        curr = String(char)\n        if index == word.characters.count - 1 {\n\
    \            next = \" \"\n        } else {\n            next = String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])\n        }\n        if vowels.contains(curr) && consonants.contains(prev)\
    \ && consonants.contains(next) {\n            closestVowel = curr\n        }\n\
    \        index += 1\n    }\n    return closestVowel", "    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\"\n    var closestIndex\
    \ = word.count\n    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char))\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ !vowels.contains(String(word[word.index(word.startIndex, offsetBy: index - 1)]))\
    \ && !vowels.contains(String(word[word.index(word.startIndex, offsetBy: index\
    \ + 1)])) {\n                    if index < closestIndex {\n                 \
    \       closestIndex = index\n                        closestVowel = String(char)\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var result = \"\"\n    var index = word.count - 1\n    var\
    \ prev = \"\"\n    var next = \"\"\n    while index >= 0 {\n        let char =\
    \ String(word[word.index(word.startIndex, offsetBy: index)])\n        if vowels.contains(char)\
    \ {\n            if prev != \"\" && next != \"\" {\n                result = char\n\
    \                break\n            }\n        } else if consonants.contains(char)\
    \ {\n            if prev == \"\" {\n                prev = char\n            }\
    \ else {\n                next = char\n            }\n        }\n        index\
    \ -= 1\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\n    let consonants\
    \ = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel: String = \"\
    \"\n    var index: Int = 0\n    for i in stride(from: word.count - 1, to: 0, by:\
    \ -1) {\n        let char = word[word.index(word.startIndex, offsetBy: i)]\n \
    \       if vowels.contains(char) {\n            vowel = String(char)\n       \
    \     index = i\n            break\n        }\n    }\n    if vowel == \"\" {\n\
    \        return \"\"\n    }\n    for i in stride(from: index - 1, to: 0, by: -1)\
    \ {\n        let char = word[word.index(word.startIndex, offsetBy: i)]\n     \
    \   if consonants.contains(char) {\n            return vowel\n        }\n    }\n\
    \    return \"\"", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n   \
    \ let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"\
    l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"\
    y\", \"z\"]\n    var closestVowel: String = \"\"\n    var lastConsonantIndex:\
    \ Int = -1\n    for (index, char) in word.lowercased().reversed().enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if lastConsonantIndex\
    \ != -1 {\n                closestVowel = String(char)\n                break\n\
    \            }\n        } else if consonants.contains(String(char)) {\n      \
    \      lastConsonantIndex = index\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var closestVowelIndex = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                let previousChar = word[word.index(word.startIndex,\
    \ offsetBy: index - 1)]\n                let nextChar = word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]\n                if !vowels.contains(String(previousChar))\
    \ && !vowels.contains(String(nextChar)) {\n                    if index < closestVowelIndex\
    \ {\n                        closestVowel = String(char)\n                   \
    \     closestVowelIndex = index\n                    }\n                }\n  \
    \          }\n        }\n    }\n    return closestVowel", "    let vowels = \"\
    aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = 0\n    var consonantIndex\
    \ = 0\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            vowelIndex = index\n        }\n        if consonants.contains(char)\
    \ {\n            consonantIndex = index\n        }\n        if vowelIndex > consonantIndex\
    \ {\n            closestVowel = String(char)\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var closestVowel\
    \ = \"\"\n    var closestVowelIndex = -1\n    var lastConsonantIndex = -1\n  \
    \  var currentIndex = 0\n    for char in word {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            if lastConsonantIndex != -1 && currentIndex - lastConsonantIndex\
    \ < closestVowelIndex - lastConsonantIndex || closestVowelIndex == -1 {\n    \
    \            closestVowel = String(char)\n                closestVowelIndex =\
    \ currentIndex\n            }\n        } else if consonants.contains(String(char).lowercased())\
    \ {\n            lastConsonantIndex = currentIndex\n        }\n        currentIndex\
    \ += 1\n    }\n    return closestVowel", "    let vowels = [\"a\", \"e\", \"i\"\
    , \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\"\
    , \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\"\
    , \"w\", \"x\", \"y\", \"z\"]\n    var result = \"\"\n    var index = 0\n    var\
    \ vowelIndex = 0\n    var consonantIndex = 0\n    var vowelCount = 0\n    var\
    \ consonantCount = 0\n    for char in word.characters {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            vowelCount += 1\n            vowelIndex = index\n        } else\
    \ if consonants.contains(String(char).lowercased()) {\n            consonantCount\
    \ += 1\n            consonantIndex = index\n        }\n        index += 1\n  \
    \  }\n    if vowelCount == 0 || consonantCount == 0 {\n        return \"\"\n \
    \   }\n    if vowelIndex > consonantIndex {\n        return \"\"\n    }\n    return\
    \ String(word[word.index(word.startIndex, offsetBy: vowelIndex)])", "    let vowels\
    \ = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var vowelIndex = -1\n    var consonantIndex\
    \ = -1\n    for (index, char) in word.enumerated() {\n        if vowels.contains(char)\
    \ {\n            vowelIndex = index\n        }\n        if consonants.contains(char)\
    \ {\n            consonantIndex = index\n        }\n        if vowelIndex != -1\
    \ && consonantIndex != -1 && consonantIndex > vowelIndex {\n            closestVowel\
    \ = String(char)\n            break\n        }\n    }\n    return closestVowel",
  "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    var closestVowel = \"\
    \"\n    var distance = word.count\n    for (index, char) in word.enumerated()\
    \ {\n        if vowels.contains(String(char)) {\n            if index > 0 && index\
    \ < word.count - 1 {\n                if !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index - 1)])) && !vowels.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)])) {\n                    if index < distance {\n     \
    \                   distance = index\n                        closestVowel = String(char)\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    var closestVowel = \"\"\n    let vowels = [\"a\"\
    , \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"b\", \"c\", \"d\", \"f\"\
    , \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\"\
    , \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var wordArray = Array(word)\n\
    \    var vowelIndex = 0\n    var consonantIndex = 0\n    var vowelDistance = 0\n\
    \    var consonantDistance = 0\n    var closestDistance = 0\n    for i in 0..<wordArray.count\
    \ {\n        if vowels.contains(String(wordArray[i]).lowercased()) {\n       \
    \     vowelIndex = i\n            for j in (0..<wordArray.count).reversed() {\n\
    \                if consonants.contains(String(wordArray[j]).lowercased()) {\n\
    \                    consonantIndex = j\n                    vowelDistance = vowelIndex\
    \ - consonantIndex\n                    if vowelDistance > 0 {\n             \
    \           if closestDistance == 0 {\n                            closestDistance\
    \ = vowelDistance\n                            closestVowel = String(wordArray[vowelIndex])\n\
    \                        } else if vowelDistance < closestDistance {\n       \
    \                     closestDistance = vowelDistance\n                      \
    \      closestVowel = String(wordArray[vowelIndex])\n                        }\n\
    \                    }\n                }\n            }\n        }\n    }\n \
    \   return closestVowel", "    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"\
    ]\n    let consonants = [\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\"\
    , \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\"\
    , \"y\", \"z\"]\n    var closest_vowel = \"\"\n    var closest_vowel_index = word.count\n\
    \    for (index, char) in word.enumerated() {\n        if vowels.contains(String(char).lowercased())\
    \ {\n            if index > 0 && index < word.count - 1 {\n                if\
    \ consonants.contains(String(word[word.index(word.startIndex, offsetBy: index\
    \ - 1)]).lowercased()) && consonants.contains(String(word[word.index(word.startIndex,\
    \ offsetBy: index + 1)]).lowercased()) {\n                    if index < closest_vowel_index\
    \ {\n                        closest_vowel = String(char)\n                  \
    \      closest_vowel_index = index\n                    }\n                }\n\
    \            }\n        }\n    }\n    return closest_vowel", "    let vowels =\
    \ \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var closestVowel = \"\"\n    var index = word.count - 1\n    var foundVowel\
    \ = false\n    var foundConsonant = false\n    while index >= 0 {\n        let\
    \ char = String(word[word.index(word.startIndex, offsetBy: index)])\n        if\
    \ vowels.contains(char) {\n            if foundConsonant {\n                closestVowel\
    \ = char\n                foundVowel = true\n                break\n         \
    \   }\n        } else if consonants.contains(char) {\n            foundConsonant\
    \ = true\n        }\n        index -= 1\n    }\n    if !foundVowel {\n       \
    \ closestVowel = \"\"\n    }\n    return closestVowel", "    var vowel = \"\"\n\
    \    let vowels = [\"a\", \"e\", \"i\", \"o\", \"u\"]\n    let consonants = [\"\
    b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\", \"k\", \"l\", \"m\", \"n\", \"\
    p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\", \"x\", \"y\", \"z\"]\n    var arr\
    \ = Array(word)\n    var i = arr.count - 1\n    while i >= 0 {\n        if vowels.contains(String(arr[i]).lowercased())\
    \ {\n            vowel = String(arr[i])\n            break\n        }\n      \
    \  i -= 1\n    }\n    if vowel == \"\" {\n        return \"\"\n    }\n    var\
    \ j = i - 1\n    while j >= 0 {\n        if consonants.contains(String(arr[j]).lowercased())\
    \ {\n            return vowel\n        }\n        j -= 1\n    }\n    return \"\
    \"", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var index = word.count - 1\n    var prev = \"\"\n\
    \    var next = \"\"\n    while index >= 0 {\n        let char = String(word[word.index(word.startIndex,\
    \ offsetBy: index)])\n        if vowels.contains(char) {\n            if prev\
    \ != \"\" && next != \"\" {\n                result = char\n                break\n\
    \            }\n        } else if consonants.contains(char) {\n            if\
    \ prev == \"\" {\n                prev = char\n            } else {\n        \
    \        next = char\n            }\n        }\n        index -= 1\n    }\n  \
    \  return result", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var vowel = \"\"\n    for i in (0..<word.count).reversed() {\n        let\
    \ index = word.index(word.startIndex, offsetBy: i)\n        if vowels.contains(word[index])\
    \ {\n            vowel = String(word[index])\n            if i > 0 && consonants.contains(word[word.index(before:\
    \ index)]) {\n                return vowel\n            }\n        }\n    }\n\
    \    return vowel", "    let vowels = \"aeiouAEIOU\"\n    let consonants = \"\
    bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\n    var vowel = \"\"\n    var consonant\
    \ = \"\"\n    var result = \"\"\n    for char in word.characters {\n        if\
    \ vowels.containsString(String(char)) {\n            vowel = String(char)\n  \
    \      }\n        if consonants.containsString(String(char)) {\n            consonant\
    \ = String(char)\n        }\n        if vowel != \"\" && consonant != \"\" {\n\
    \            result = vowel\n            vowel = \"\"\n            consonant =\
    \ \"\"\n        }\n    }\n    return result", "    let vowels = \"aeiouAEIOU\"\
    \n    var closestVowel = \"\"\n    var closestDistance = word.count\n    for (index,\
    \ char) in word.enumerated() {\n        if vowels.contains(char) {\n         \
    \   var distance = word.count - index\n            if distance < closestDistance\
    \ {\n                closestDistance = distance\n                closestVowel\
    \ = String(char)\n            }\n        }\n    }\n    return closestVowel", " \
    \   let vowels = \"aeiouAEIOU\"\n    let consonants = \"bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ\"\
    \n    var result = \"\"\n    var vowel_index = 0\n    var consonant_index = 0\n\
    \    var vowel_count = 0\n    var consonant_count = 0\n    var i = word.count\
    \ - 1\n    while i >= 0 {\n        let index = word.index(word.startIndex, offsetBy:\
    \ i)\n        let char = word[index]\n        if vowels.contains(char) {\n   \
    \         vowel_count += 1\n            vowel_index = i\n        } else if consonants.contains(char)\
    \ {\n            consonant_count += 1\n            consonant_index = i\n     \
    \   }\n        if vowel_count == 1 && consonant_count == 2 {\n            result\
    \ = String(word[word.index(word.startIndex, offsetBy: vowel_index)])\n       \
    \     break\n        }\n        i -= 1\n    }\n    return result"]
stop_tokens:
- "\n}"

name: HumanEval_19_sort_numbers
language: swift
prompt: "\n/// Input is a space-delimited string of numberals from 'zero' to 'nine'.\n\
  /// Valid choices are 'zero', 'one', 'two', 'three', 'four', 'five', 'six', 'seven',\
  \ 'eight' and 'nine'.\n/// Return the string with numbers sorted from smallest to\
  \ largest\n/// >>> sort_numbers(numbers: \"three one five\")\n/// \"one three five\"\
  \nfunc sort_numbers(numbers: String) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(sort_numbers(numbers: \"\") == \"\")\nassert(sort_numbers(numbers:\
  \ \"three\") == \"three\")\nassert(sort_numbers(numbers: \"three five nine\") ==\
  \ \"three five nine\")\nassert(sort_numbers(numbers: \"five zero four seven nine\
  \ eight\") == \"zero four five seven eight nine\")\nassert(sort_numbers(numbers:\
  \ \"six five four three two one zero\") == \"zero one two three four five six\")"
completions: ["    let numbers = numbers.split(separator: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (first, second) -> Bool in\n        return first < second\n\
    \    }\n    return sortedNumbers.joined(separator: \" \")", "    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.split(separator: \" \").sorted\
    \ {\n        numberals.firstIndex(of: String($0))! < numberals.firstIndex(of:\
    \ String($1))!\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let nums_sorted = nums.sorted { (a, b) -> Bool in\n        return\
    \ Int(a)! < Int(b)!\n    }\n    return nums_sorted.joined(separator: \" \")",
  "    let numbers = numbers.split(separator: \" \")\n    let sortedNumbers = numbers.sorted\
    \ { (lhs, rhs) -> Bool in\n        return Int(lhs)! < Int(rhs)!\n    }\n    return\
    \ sortedNumbers.joined(separator: \" \")", "    let numbers = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNumbers = numbers.sorted { (a, b) -> Bool in\n       \
    \ return number_to_int(number: a) < number_to_int(number: b)\n    }\n    return\
    \ sortedNumbers.joined(separator: \" \")", "    let number_map = [\"zero\": 0,\
    \ \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\": 6,\
    \ \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array = numbers.components(separatedBy:\
    \ \" \")\n    let sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n\
    \        return number_map[a]! < number_map[b]!\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral: a)\
    \ < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return numeral_to_int(numeral: String(a)) < numeral_to_int(numeral:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let numbers = numbers.split(separator:\
    \ \" \")\n    let sortedNumbers = numbers.sorted {\n        switch ($0, $1) {\n\
    \        case (\"zero\", \"zero\"): return false\n        case (\"zero\", _):\
    \ return true\n        case (_, \"zero\"): return false\n        case (\"one\"\
    , \"one\"): return false\n        case (\"one\", _): return true\n        case\
    \ (_, \"one\"): return false\n        case (\"two\", \"two\"): return false\n\
    \        case (\"two\", _): return true\n        case (_, \"two\"): return false\n\
    \        case (\"three\", \"three\"): return false\n        case (\"three\", _):\
    \ return true\n        case (_, \"three\"): return false\n        case (\"four\"\
    , \"four\"): return false\n        case (\"four\", _): return true\n        case\
    \ (_, \"four\"): return false\n        case (\"five\", \"five\"): return false\n\
    \        case (\"five\", _): return true\n        case (_, \"five\"): return false\n\
    \        case (\"six\", \"six\"): return false\n        case (\"six\", _): return\
    \ true\n        case (_, \"six\"): return false\n        case (\"seven\", \"seven\"\
    ): return false\n        case (\"seven\", _): return true\n        case (_, \"\
    seven\"): return false\n        case (\"eight\", \"eight\"): return false\n  \
    \      case (\"eight\", _): return true\n        case (_, \"eight\"): return false\n\
    \        case (\"nine\", \"nine\"): return false\n        case (\"nine\", _):\
    \ return true\n        case (_, \"nine\"): return false\n        default: return\
    \ false\n        }\n    }\n    return sortedNumbers.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (num1, num2) -> Bool in\n        return num_to_int(num: num1) < num_to_int(num:\
    \ num2)\n    }\n    return sorted.joined(separator: \" \")", "    let numbers\
    \ = numbers.split(separator: \" \")\n    let sortedNumbers = numbers.sorted {\
    \ (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numbers = numbers.components(separatedBy: \" \")\n    let\
    \ sorted = numbers.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numberals = numbers.split(separator: \" \")\n    let sorted =\
    \ numberals.sorted { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted {\n        switch $0 {\n        case \"\
    zero\":\n            return true\n        case \"one\":\n            return $1\
    \ != \"zero\"\n        case \"two\":\n            return $1 != \"zero\" && $1\
    \ != \"one\"\n        case \"three\":\n            return $1 != \"zero\" && $1\
    \ != \"one\" && $1 != \"two\"\n        case \"four\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\n        case\
    \ \"five\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\"\n        case \"six\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\"\n        case \"seven\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \ && $1 != \"five\" && $1 != \"six\"\n        case \"eight\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\"\n        case\
    \ \"nine\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1\
    \ != \"seven\" && $1 != \"eight\"\n        default:\n            return false\n\
    \        }\n    }\n    return sorted.joined(separator: \" \")", "    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.split(separator: \" \").sorted\
    \ {\n        numberals.firstIndex(of: String($0))! < numberals.firstIndex(of:\
    \ String($1))!\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let numsInt = nums.map { numberToInt(number:\
    \ $0) }\n    let sorted = numsInt.sorted()\n    let sortedNums = sorted.map {\
    \ intToNumber(int: $0) }\n    return sortedNums.joined(separator: \" \")", " \
    \   let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"]\n    let input = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = input.sorted { (a, b) -> Bool in\n        return numberals.firstIndex(of:\
    \ a)! < numberals.firstIndex(of: b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (s1, s2) -> Bool in\n        let n1 = Int(s1)!\n        let n2 = Int(s2)!\n\
    \        return n1 < n2\n    }\n    return sorted.joined(separator: \" \")", " \
    \   let numbers = numbers.components(separatedBy: \" \")\n    let sorted = numbers.sorted\
    \ { (first, second) -> Bool in\n        return first < second\n    }\n    return\
    \ sorted.joined(separator: \" \")", "    let numbers = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNumbers = numbers.sorted { (a, b) -> Bool in\n       \
    \ return number_to_int(number: a) < number_to_int(number: b)\n    }\n    return\
    \ sortedNumbers.joined(separator: \" \")", "    let numberals = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = numberals.sorted { (a, b) -> Bool in\n        return\
    \ number_to_int(number: a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numbers = numbers.split(separator: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n\
    \    return sortedNumbers.joined(separator: \" \")", "    let numberals = [\"\
    zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"\
    eight\", \"nine\"]\n    let sorted = numbers.split(separator: \" \").sorted {\
    \ numberals.firstIndex(of: String($0))! < numberals.firstIndex(of: String($1))!\
    \ }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").sorted { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of:\
    \ String($1))! }\n    return sorted.joined(separator: \" \")", "    let words\
    \ = numbers.split(separator: \" \")\n    let sorted = words.sorted { (a, b) ->\
    \ Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (lhs, rhs)\
    \ -> Bool in\n        return Int(lhs)! < Int(rhs)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sortedNumbers =\
    \ numbers.split(separator: \" \").sorted { (lhs, rhs) -> Bool in\n        return\
    \ numberals.firstIndex(of: String(lhs))! < numberals.firstIndex(of: String(rhs))!\n\
    \    }\n    return sortedNumbers.joined(separator: \" \")", "    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sortedNumbers = numbers.split(separator: \" \"\
    ).sorted { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of: String($1))!\
    \ }\n    return sortedNumbers.joined(separator: \" \")", "    let numberals =\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sorted = numbers.split(separator: \" \").sorted\
    \ { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of: String($1))!\
    \ }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) ->\
    \ Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let nums = numbers.split(separator:\
    \ \" \")\n    var nums_int = [Int]()\n    for num in nums {\n        nums_int.append(numberals.firstIndex(of:\
    \ String(num))!)\n    }\n    nums_int.sort()\n    var result = \"\"\n    for num\
    \ in nums_int {\n        result += numberals[num] + \" \"\n    }\n    return String(result.dropLast())",
  "    let nums = numbers.split(separator: \" \")\n    var nums_int = [Int]()\n  \
    \  for num in nums {\n        switch num {\n        case \"zero\":\n         \
    \   nums_int.append(0)\n        case \"one\":\n            nums_int.append(1)\n\
    \        case \"two\":\n            nums_int.append(2)\n        case \"three\"\
    :\n            nums_int.append(3)\n        case \"four\":\n            nums_int.append(4)\n\
    \        case \"five\":\n            nums_int.append(5)\n        case \"six\"\
    :\n            nums_int.append(6)\n        case \"seven\":\n            nums_int.append(7)\n\
    \        case \"eight\":\n            nums_int.append(8)\n        case \"nine\"\
    :\n            nums_int.append(9)\n        default:\n            print(\"Invalid\
    \ input\")\n        }\n    }\n    nums_int.sort()\n    var nums_str = [String]()\n\
    \    for num in nums_int {\n        switch num {\n        case 0:\n          \
    \  nums_str.append(\"zero\")\n        case 1:\n            nums_str.append(\"\
    one\")\n        case 2:\n            nums_str.append(\"two\")\n        case 3:\n\
    \            nums_str.append(\"three\")\n        case 4:\n            nums_str.append(\"\
    four\")\n        case 5:\n            nums_str.append(\"five\")\n        case\
    \ 6:\n            nums_str.append(\"six\")\n        case 7:\n            nums_str.append(\"\
    seven\")\n        case 8:\n            nums_str.append(\"eight\")\n        case\
    \ 9:\n            nums_str.append(\"nine\")\n        default:\n            print(\"\
    Invalid input\")\n        }\n    }\n    return nums_str.joined(separator: \" \"\
    )", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted(by:\
    \ {\n        return Int(String($0))! < Int(String($1))!\n    })\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").map { String($0) }.sorted { numberals.firstIndex(of: $0)! < numberals.firstIndex(of:\
    \ $1)! }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (s1, s2) ->\
    \ Bool in\n        return s1 < s2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numberals.firstIndex(of:\
    \ String(a))! < numberals.firstIndex(of: String(b))!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) ->\
    \ Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ a) < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral: a)\
    \ < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numbers = numbers.split(separator: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (a, b) -> Bool in\n        return number_to_int(number: String(a))\
    \ < number_to_int(number: String(b))\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return a < b\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").sorted { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of:\
    \ String($1))! }\n    return sorted.joined(separator: \" \")", "    let nums =\
    \ numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a, b)\
    \ -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let numbers = numbers.split(separator:\
    \ \" \")\n    let sorted = numbers.sorted { (a, b) -> Bool in\n        return\
    \ number_to_int(number: String(a)) < number_to_int(number: String(b))\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ a) < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = numbers.components(separatedBy: \" \")\n    let\
    \ sortedNumberals = numberals.sorted { (n1, n2) -> Bool in\n        return numberToInt(number:\
    \ n1) < numberToInt(number: n2)\n    }\n    return sortedNumberals.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral: a)\
    \ < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return numeral_to_int(numeral: a) < numeral_to_int(numeral:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let numbers = numbers.split(separator:\
    \ \" \")\n    let sortedNumbers = numbers.sorted { (s1, s2) -> Bool in\n     \
    \   return s1 < s2\n    }\n    return sortedNumbers.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let numsInt = nums.map\
    \ { Int(wordToNumeral[$0]!) }\n    let sortedNums = numsInt.sorted()\n    let\
    \ sortedNumsStr = sortedNums.map { numeralToWord[String($0)]! }\n    return sortedNumsStr.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (lhs, rhs) -> Bool in\n        return Int(lhs)! < Int(rhs)!\n    }\n    return\
    \ sorted.joined(separator: \" \")", "    let numberals = [\"zero\", \"one\", \"\
    two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\"\
    ]\n    let numbers = numbers.components(separatedBy: \" \")\n    let sorted =\
    \ numbers.sorted { (s1, s2) -> Bool in\n        return numberals.index(of: s1)!\
    \ < numberals.index(of: s2)!\n    }\n    return sorted.joined(separator: \" \"\
    )", "    let numbers = numbers.split(separator: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (first, second) -> Bool in\n        return first < second\n\
    \    }\n    return sortedNumbers.joined(separator: \" \")", '    return numbers.split(separator:
    " ").sorted(by: { number_to_int(number: String($0)) < number_to_int(number: String($1))
    }).joined(separator: " ")', "    let nums = numbers.components(separatedBy: \"\
    \ \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ a) < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numbers = numbers.split(separator: \" \")\n    let sorted\
    \ = numbers.sorted { (a, b) -> Bool in\n        return number_to_int(number: String(a))\
    \ < number_to_int(number: String(b))\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) ->\
    \ Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral: a)\
    \ < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let numbers = numbers.split(separator:\
    \ \" \")\n    let sortedNumbers = numbers.sorted { (lhs, rhs) -> Bool in\n   \
    \     return numberals.firstIndex(of: String(lhs))! < numberals.firstIndex(of:\
    \ String(rhs))!\n    }\n    return sortedNumbers.joined(separator: \" \")", " \
    \   let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let numberals =\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let input = numbers.components(separatedBy: \" \"\
    )\n    let sorted = input.sorted { numberals.index(of: $0)! < numberals.index(of:\
    \ $1)! }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a <\
    \ b\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ a) < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let numberals\
    \ = numbers.split(separator: \" \")\n    let sortedNumberals = numberals.sorted\
    \ { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sortedNumberals.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let numbers\
    \ = numbers.split(separator: \" \")\n    let sortedNumbers = numbers.sorted {\
    \ (lhs, rhs) -> Bool in\n        return lhs.count < rhs.count\n    }\n    return\
    \ sortedNumbers.joined(separator: \" \")", "    let number_map: [String: Int]\
    \ = [\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\": 2,\n      \
    \  \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n        \"six\"\
    : 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\": 9\n    ]\n\
    \    let numbers_array = numbers.split(separator: \" \")\n    let sorted_numbers\
    \ = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[String(a)]!\
    \ < number_map[String(b)]!\n    }\n    return sorted_numbers.joined(separator:\
    \ \" \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers_array = numbers.components(separatedBy: \" \")\n    let\
    \ sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[a]!\
    \ < number_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    var nums_int: [Int] = []\n\
    \    for num in nums {\n        switch num {\n        case \"zero\":\n       \
    \     nums_int.append(0)\n        case \"one\":\n            nums_int.append(1)\n\
    \        case \"two\":\n            nums_int.append(2)\n        case \"three\"\
    :\n            nums_int.append(3)\n        case \"four\":\n            nums_int.append(4)\n\
    \        case \"five\":\n            nums_int.append(5)\n        case \"six\"\
    :\n            nums_int.append(6)\n        case \"seven\":\n            nums_int.append(7)\n\
    \        case \"eight\":\n            nums_int.append(8)\n        case \"nine\"\
    :\n            nums_int.append(9)\n        default:\n            print(\"Invalid\
    \ input\")\n        }\n    }\n    let sorted_nums = nums_int.sorted()\n    var\
    \ sorted_nums_str: [String] = []\n    for num in sorted_nums {\n        switch\
    \ num {\n        case 0:\n            sorted_nums_str.append(\"zero\")\n     \
    \   case 1:\n            sorted_nums_str.append(\"one\")\n        case 2:\n  \
    \          sorted_nums_str.append(\"two\")\n        case 3:\n            sorted_nums_str.append(\"\
    three\")\n        case 4:\n            sorted_nums_str.append(\"four\")\n    \
    \    case 5:\n            sorted_nums_str.append(\"five\")\n        case 6:\n\
    \            sorted_nums_str.append(\"six\")\n        case 7:\n            sorted_nums_str.append(\"\
    seven\")\n        case 8:\n            sorted_nums_str.append(\"eight\")\n   \
    \     case 9:\n            sorted_nums_str.append(\"nine\")\n        default:\n\
    \            print(\"Invalid input\")\n        }\n    }\n    return sorted_nums_str.joined(separator:\
    \ \" \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers_array = numbers.components(separatedBy: \" \")\n    let\
    \ sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[a]!\
    \ < number_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ String(a)) < numeral_to_int(numeral: String(b))\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (a, b) ->\
    \ Bool in\n        return a.count < b.count\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted(by:\
    \ {\n        switch $0 {\n        case \"zero\":\n            return true\n  \
    \      case \"one\":\n            return $1 != \"zero\"\n        case \"two\"\
    :\n            return $1 != \"zero\" && $1 != \"one\"\n        case \"three\"\
    :\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\n     \
    \   case \"four\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 !=\
    \ \"two\" && $1 != \"three\"\n        case \"five\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \n        case \"six\":\n            return $1 != \"zero\" && $1 != \"one\" &&\
    \ $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\"\n     \
    \   case \"seven\":\n            return $1 != \"zero\" && $1 != \"one\" && $1\
    \ != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"\
    six\"\n        case \"eight\":\n            return $1 != \"zero\" && $1 != \"\
    one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\"\
    \ && $1 != \"six\" && $1 != \"seven\"\n        case \"nine\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\" && $1 != \"eight\"\
    \n        default:\n            return false\n        }\n    })\n    return sorted.joined(separator:\
    \ \" \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let number_array = numbers.split(separator: \" \")\n    let sorted_array\
    \ = number_array.sorted { (a, b) -> Bool in\n        return number_map[String(a)]!\
    \ < number_map[String(b)]!\n    }\n    return sorted_array.joined(separator: \"\
    \ \")", "    let numeral_dict = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numeral_array = numbers.components(separatedBy: \" \")\n    let\
    \ sorted_array = numeral_array.sorted { (numeral1, numeral2) -> Bool in\n    \
    \    return numeral_dict[numeral1]! < numeral_dict[numeral2]!\n    }\n    return\
    \ sorted_array.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let number_map\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numbers_array\
    \ = numbers.components(separatedBy: \" \")\n    let sorted_numbers = numbers_array.sorted\
    \ { (a, b) -> Bool in\n        return number_map[a]! < number_map[b]!\n    }\n\
    \    return sorted_numbers.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ a) < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        let numA = Int(a)!\n        let numB = Int(b)!\n\
    \        return numA < numB\n    }\n    return sorted.joined(separator: \" \")",
  "    let number_strings = numbers.split(separator: \" \")\n    let number_ints =\
    \ number_strings.map { Int(number_to_int($0)) }\n    let sorted_ints = number_ints.sorted()\n\
    \    let sorted_strings = sorted_ints.map { int_to_number($0) }\n    return sorted_strings.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers_array = numbers.components(separatedBy: \" \")\n    let\
    \ sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[a]!\
    \ < number_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").sorted { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of:\
    \ String($1))! }\n    return sorted.joined(separator: \" \")", "    let numeralDict\
    \ = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\"\
    : 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numeralArray\
    \ = numbers.components(separatedBy: \" \")\n    let sortedArray = numeralArray.sorted\
    \ { (numeral1, numeral2) -> Bool in\n        return numeralDict[numeral1]! < numeralDict[numeral2]!\n\
    \    }\n    return sortedArray.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted {\n        switch $0 {\n        case \"\
    zero\":\n            return true\n        case \"one\":\n            return $1\
    \ != \"zero\"\n        case \"two\":\n            return $1 != \"zero\" && $1\
    \ != \"one\"\n        case \"three\":\n            return $1 != \"zero\" && $1\
    \ != \"one\" && $1 != \"two\"\n        case \"four\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\"\n        case\
    \ \"five\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\"\n        case \"six\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\"\n        case \"seven\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \ && $1 != \"five\" && $1 != \"six\"\n        case \"eight\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\"\n        case\
    \ \"nine\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\
    \ && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"six\" && $1\
    \ != \"seven\" && $1 != \"eight\"\n        default:\n            return false\n\
    \        }\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let numsInt = nums.map { numberToInt(number:\
    \ $0) }\n    let sorted = numsInt.sorted()\n    let sortedStr = sorted.map { intToNumber(int:\
    \ $0) }\n    return sortedStr.joined(separator: \" \")", "    let numberals =\
    \ [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let sortedNumbers = numbers.split(separator: \" \"\
    ).sorted { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of: String($1))!\
    \ }\n    return sortedNumbers.joined(separator: \" \")", "    let words = numbers.split(separator:\
    \ \" \")\n    let nums = words.map { word -> Int in\n        switch word {\n \
    \       case \"zero\":\n            return 0\n        case \"one\":\n        \
    \    return 1\n        case \"two\":\n            return 2\n        case \"three\"\
    :\n            return 3\n        case \"four\":\n            return 4\n      \
    \  case \"five\":\n            return 5\n        case \"six\":\n            return\
    \ 6\n        case \"seven\":\n            return 7\n        case \"eight\":\n\
    \            return 8\n        case \"nine\":\n            return 9\n        default:\n\
    \            return 0\n        }\n    }\n    let sorted = nums.sorted()\n    let\
    \ result = sorted.map { num -> String in\n        switch num {\n        case 0:\n\
    \            return \"zero\"\n        case 1:\n            return \"one\"\n  \
    \      case 2:\n            return \"two\"\n        case 3:\n            return\
    \ \"three\"\n        case 4:\n            return \"four\"\n        case 5:\n \
    \           return \"five\"\n        case 6:\n            return \"six\"\n   \
    \     case 7:\n            return \"seven\"\n        case 8:\n            return\
    \ \"eight\"\n        case 9:\n            return \"nine\"\n        default:\n\
    \            return \"zero\"\n        }\n    }\n    return result.joined(separator:\
    \ \" \")", "    let numberals = numbers.split(separator: \" \")\n    let sorted\
    \ = numberals.sorted { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let numeral_map = [\"zero\"\
    : 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"six\":\
    \ 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let numeral_array = numbers.split(separator:\
    \ \" \")\n    var numeral_int_array = [Int]()\n    for numeral in numeral_array\
    \ {\n        numeral_int_array.append(numeral_map[String(numeral)]!)\n    }\n\
    \    numeral_int_array.sort()\n    var sorted_numeral_array = [String]()\n   \
    \ for numeral in numeral_int_array {\n        for (key, value) in numeral_map\
    \ {\n            if value == numeral {\n                sorted_numeral_array.append(key)\n\
    \            }\n        }\n    }\n    return sorted_numeral_array.joined(separator:\
    \ \" \")", "    let numbers = numbers.split(separator: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n\
    \    return sortedNumbers.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let nums = numbers.split(separator: \" \")\n    let\
    \ sorted = nums.sorted { (a, b) -> Bool in\n        return numberals.firstIndex(of:\
    \ String(a))! < numberals.firstIndex(of: String(b))!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numbers = numbers.split(separator: \" \")\n    let sortedNumbers\
    \ = numbers.sorted(by: {\n        return Int(numberToInt[String($0)]!) < Int(numberToInt[String($1)]!)\n\
    \    })\n    return sortedNumbers.joined(separator: \" \")", "    let numbers\
    \ = numbers.split(separator: \" \")\n    let sorted = numbers.sorted { (a, b)\
    \ -> Bool in\n        return number_to_int(number: String(a)) < number_to_int(number:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let numsInt = nums.map { Int(wordToNumeral[$0]!)\
    \ }\n    let sorted = numsInt.sorted()\n    let sortedWords = sorted.map { numeralToWord[String($0)]!\
    \ }\n    return sortedWords.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return s1\
    \ < s2\n    }\n    return sorted.joined(separator: \" \")", "    let number_map:\
    \ [String: Int] = [\n        \"zero\": 0,\n        \"one\": 1,\n        \"two\"\
    : 2,\n        \"three\": 3,\n        \"four\": 4,\n        \"five\": 5,\n    \
    \    \"six\": 6,\n        \"seven\": 7,\n        \"eight\": 8,\n        \"nine\"\
    : 9\n    ]\n    let nums = numbers.split(separator: \" \").map { String($0) }\n\
    \    let sorted = nums.sorted { number_map[$0]! < number_map[$1]! }\n    return\
    \ sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return numeral_to_int(numeral: String(a)) < numeral_to_int(numeral:\
    \ String(b))\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted(by: {\n    \
    \    let a = Int(word_to_number(word: String($0)))\n        let b = Int(word_to_number(word:\
    \ String($1)))\n        return a! < b!\n    })\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let numsInt =\
    \ nums.map { Int(number_to_int(number: String($0))!) }\n    let sortedNums = numsInt.sorted()\n\
    \    let sortedNumsStr = sortedNums.map { int_to_number(int: $0) }\n    return\
    \ sortedNumsStr.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (lhs, rhs)\
    \ -> Bool in\n        return Int(lhs)! < Int(rhs)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\n\
    \        return number_to_int(number: String($0)) < number_to_int(number: String($1))\n\
    \    }\n    return sorted.joined(separator: \" \")", "    let number_map = [\"\
    zero\": 0, \"one\": 1, \"two\": 2, \"three\": 3, \"four\": 4, \"five\": 5, \"\
    six\": 6, \"seven\": 7, \"eight\": 8, \"nine\": 9]\n    let number_list = numbers.split(separator:\
    \ \" \")\n    var sorted_numbers = [Int]()\n    for number in number_list {\n\
    \        if let number_int = number_map[String(number)] {\n            sorted_numbers.append(number_int)\n\
    \        }\n    }\n    sorted_numbers.sort()\n    var sorted_string = \"\"\n \
    \   for number in sorted_numbers {\n        for (key, value) in number_map {\n\
    \            if value == number {\n                sorted_string += key + \" \"\
    \n            }\n        }\n    }\n    return sorted_string.trimmingCharacters(in:\
    \ .whitespaces)", "    let nums = numbers.split(separator: \" \")\n    let sortedNums\
    \ = nums.sorted { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n\
    \    return sortedNums.joined(separator: \" \")", "    let numbers = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNumbers = numbers.sorted { (first, second) -> Bool in\n\
    \        return first < second\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (lhs, rhs) -> Bool in\n        return lhs < rhs\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted(by:\
    \ {\n        let num1 = Int(String($0))!\n        let num2 = Int(String($1))!\n\
    \        return num1 < num2\n    })\n    return sorted.joined(separator: \" \"\
    )", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return numeral_to_int(numeral: a) < numeral_to_int(numeral:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return a.count < b.count\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let numbers = numbers.split(separator:\
    \ \" \")\n    let sorted = numbers.sorted { (a, b) -> Bool in\n        return\
    \ number_to_int(number: String(a)) < number_to_int(number: String(b))\n    }\n\
    \    return sorted.joined(separator: \" \")", "    let numbers = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNumbers = numbers.sorted { (s1, s2) -> Bool in\n     \
    \   return s1 < s2\n    }\n    return sortedNumbers.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let nums_sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        let a_num = num_to_int(num: String(a))\n      \
    \  let b_num = num_to_int(num: String(b))\n        return a_num < b_num\n    }\n\
    \    return nums_sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral:\
    \ a) < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numbers = numbers.split(separator: \" \")\n    let sorted\
    \ = numbers.sorted { (lhs, rhs) -> Bool in\n        return number_to_int(number:\
    \ String(lhs)) < number_to_int(number: String(rhs))\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberMap = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers = numbers.components(separatedBy: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (a, b) -> Bool in\n        return numberMap[a]! < numberMap[b]!\n\
    \    }\n    return sortedNumbers.joined(separator: \" \")", "    let numberals\
    \ = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\"\
    , \"eight\", \"nine\"]\n    let nums = numbers.split(separator: \" \")\n    let\
    \ sorted = nums.sorted { (lhs, rhs) -> Bool in\n        return numberals.firstIndex(of:\
    \ String(lhs))! < numberals.firstIndex(of: String(rhs))!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numeral_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numeral_array = numbers.split(separator: \" \")\n    let sorted_numbers\
    \ = numeral_array.sorted {\n        numeral_map[String($0)]! < numeral_map[String($1)]!\n\
    \    }\n    return sorted_numbers.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    var nums_int = [Int]()\n    for num in nums {\n        nums_int.append(number_to_int(number:\
    \ String(num)))\n    }\n    nums_int.sort()\n    var result = \"\"\n    for num\
    \ in nums_int {\n        result += int_to_number(number: num) + \" \"\n    }\n\
    \    return String(result.dropLast())", "    let numbers = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNumbers = numbers.sorted { (n1, n2) -> Bool in\n     \
    \   return number_to_int(number: n1) < number_to_int(number: n2)\n    }\n    return\
    \ sortedNumbers.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a.count\
    \ < b.count\n    }\n    return sorted.joined(separator: \" \")", "    let numbers\
    \ = numbers.components(separatedBy: \" \")\n    let sortedNumbers = numbers.sorted\
    \ { (a, b) -> Bool in\n        return numberToInt(number: a) < numberToInt(number:\
    \ b)\n    }\n    return sortedNumbers.joined(separator: \" \")", "    let numbers\
    \ = numbers.components(separatedBy: \" \")\n    let sortedNumbers = numbers.sorted\
    \ { (a, b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sortedNumbers.joined(separator: \" \")", "    let nums\
    \ = numbers.split(separator: \" \")\n    let sorted = nums.sorted { (lhs, rhs)\
    \ -> Bool in\n        return Int(lhs)! < Int(rhs)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (lhs, rhs) -> Bool in\n        return\
    \ numberals.firstIndex(of: String(lhs))! < numberals.firstIndex(of: String(rhs))!\n\
    \    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let numsInt = nums.map { Int(numberToInt[String($0)]!) }\n    let\
    \ sortedNums = numsInt.sorted()\n    let sortedNumsStr = sortedNums.map { intToNumber[String($0)]!\
    \ }\n    return sortedNumsStr.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted(by: {\n        let num1 = Int(numbers_to_digits[String($0)])!\n\
    \        let num2 = Int(numbers_to_digits[String($1)])!\n        return num1 <\
    \ num2\n    })\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numeral_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numeral_array = numbers.split(separator: \" \")\n    var numeral_int_array\
    \ = [Int]()\n    for numeral in numeral_array {\n        numeral_int_array.append(numeral_map[String(numeral)]!)\n\
    \    }\n    numeral_int_array.sort()\n    var numeral_string_array = [String]()\n\
    \    for numeral in numeral_int_array {\n        numeral_string_array.append(String(numeral))\n\
    \    }\n    return numeral_string_array.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return numeral_to_int(numeral: a) < numeral_to_int(numeral:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    var nums_int = [Int]()\n    for num in nums {\n        nums_int.append(number_to_int(number:\
    \ String(num)))\n    }\n    nums_int.sort()\n    var sorted_nums = [String]()\n\
    \    for num in nums_int {\n        sorted_nums.append(int_to_number(num: num))\n\
    \    }\n    return sorted_nums.joined(separator: \" \")", "    let numbers = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNumbers = numbers.sorted { (number1, number2) -> Bool\
    \ in\n        let number1 = number1.toInt()\n        let number2 = number2.toInt()\n\
    \        return number1 < number2\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted(by:\
    \ {\n        let a = Int(String($0))!\n        let b = Int(String($1))!\n    \
    \    return a < b\n    })\n    return sorted.joined(separator: \" \")", "    let\
    \ numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\", \"six\"\
    , \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator: \"\
    \ \").map { String($0) }.sorted { numberals.firstIndex(of: $0)! < numberals.firstIndex(of:\
    \ $1)! }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return a <\
    \ b\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ String(a)) < number_to_int(number: String(b))\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted {\
    \ (a, b) -> Bool in\n        return a < b\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let input = numbers.split(separator:\
    \ \" \")\n    var output = [String]()\n    for numeral in input {\n        output.append(String(numeral))\n\
    \    }\n    output.sort { (a, b) -> Bool in\n        return numberals.firstIndex(of:\
    \ a)! < numberals.firstIndex(of: b)!\n    }\n    return output.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral: a)\
    \ < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numbers = numbers.split(separator: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (lhs, rhs) -> Bool in\n        return Int(lhs)! < Int(rhs)!\n\
    \    }\n    return sortedNumbers.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (s1, s2) -> Bool in\n        return s1\
    \ < s2\n    }\n    return sorted.joined(separator: \" \")", "    let numbers =\
    \ numbers.split(separator: \" \")\n    let sorted = numbers.sorted { (lhs, rhs)\
    \ -> Bool in\n        return Int(lhs)! < Int(rhs)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let numbers_array = numbers.components(separatedBy: \" \")\n    let\
    \ sorted_numbers = numbers_array.sorted { (a, b) -> Bool in\n        return number_map[a]!\
    \ < number_map[b]!\n    }\n    return sorted_numbers.joined(separator: \" \")",
  "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\", \"five\"\
    , \"six\", \"seven\", \"eight\", \"nine\"]\n    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { numberals.firstIndex(of: String($0))!\
    \ < numberals.firstIndex(of: String($1))! }\n    return sorted.joined(separator:\
    \ \" \")", "    let numberals = [\"zero\", \"one\", \"two\", \"three\", \"four\"\
    , \"five\", \"six\", \"seven\", \"eight\", \"nine\"]\n    let sorted = numbers.split(separator:\
    \ \" \").sorted { numberals.firstIndex(of: String($0))! < numberals.firstIndex(of:\
    \ String($1))! }\n    return sorted.joined(separator: \" \")", "    let nums =\
    \ numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a, b)\
    \ -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ a) < number_to_int(number: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")", "    let numbers = numbers.components(separatedBy: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return\
    \ sortedNumbers.joined(separator: \" \")", "    let numbersArray = numbers.components(separatedBy:\
    \ \" \")\n    let sortedNumbers = numbersArray.sorted { (first, second) -> Bool\
    \ in\n        return first < second\n    }\n    return sortedNumbers.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ {\n        let a = Int(word_to_number(word: String($0))!)\n        let b = Int(word_to_number(word:\
    \ String($1))!)\n        return a < b\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number: a) <\
    \ number_to_int(number: b)\n    }\n    return sorted.joined(separator: \" \")",
  "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted(by:\
    \ {\n        switch $0 {\n        case \"zero\":\n            return true\n  \
    \      case \"one\":\n            return $1 != \"zero\"\n        case \"two\"\
    :\n            return $1 != \"zero\" && $1 != \"one\"\n        case \"three\"\
    :\n            return $1 != \"zero\" && $1 != \"one\" && $1 != \"two\"\n     \
    \   case \"four\":\n            return $1 != \"zero\" && $1 != \"one\" && $1 !=\
    \ \"two\" && $1 != \"three\"\n        case \"five\":\n            return $1 !=\
    \ \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\"\
    \n        case \"six\":\n            return $1 != \"zero\" && $1 != \"one\" &&\
    \ $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\"\n     \
    \   case \"seven\":\n            return $1 != \"zero\" && $1 != \"one\" && $1\
    \ != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\" && $1 != \"\
    six\"\n        case \"eight\":\n            return $1 != \"zero\" && $1 != \"\
    one\" && $1 != \"two\" && $1 != \"three\" && $1 != \"four\" && $1 != \"five\"\
    \ && $1 != \"six\" && $1 != \"seven\"\n        case \"nine\":\n            return\
    \ $1 != \"zero\" && $1 != \"one\" && $1 != \"two\" && $1 != \"three\" && $1 !=\
    \ \"four\" && $1 != \"five\" && $1 != \"six\" && $1 != \"seven\" && $1 != \"eight\"\
    \n        default:\n            return false\n        }\n    })\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.split(separator: \" \")\n    let sorted = nums.sorted\
    \ { (a, b) -> Bool in\n        return Int(a)! < Int(b)!\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let numbers = numbers.split(separator: \" \")\n    let sortedNumbers\
    \ = numbers.sorted { (first, second) -> Bool in\n        return first < second\n\
    \    }\n    return sortedNumbers.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)!\
    \ < Int(b)!\n    }\n    return sorted.joined(separator: \" \")", "    let nums\
    \ = numbers.components(separatedBy: \" \")\n    let sorted = nums.sorted { (a,\
    \ b) -> Bool in\n        return number_to_int(number: a) < number_to_int(number:\
    \ b)\n    }\n    return sorted.joined(separator: \" \")", "    let numberals =\
    \ numbers.components(separatedBy: \" \")\n    let sortedNumberals = numberals.sorted\
    \ { (numeral1, numeral2) -> Bool in\n        return numeral1 < numeral2\n    }\n\
    \    return sortedNumberals.joined(separator: \" \")", "    let nums = numbers.split(separator:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return number_to_int(number:\
    \ String(a)) < number_to_int(number: String(b))\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let number_map = [\"zero\": 0, \"one\": 1, \"two\": 2, \"three\"\
    : 3, \"four\": 4, \"five\": 5, \"six\": 6, \"seven\": 7, \"eight\": 8, \"nine\"\
    : 9]\n    let nums = numbers.split(separator: \" \")\n    var num_array = [Int]()\n\
    \    for num in nums {\n        num_array.append(number_map[String(num)]!)\n \
    \   }\n    num_array.sort()\n    var result = \"\"\n    for num in num_array {\n\
    \        for (key, value) in number_map {\n            if value == num {\n   \
    \             result += key + \" \"\n            }\n        }\n    }\n    return\
    \ String(result.dropLast())", "    let nums = numbers.components(separatedBy:\
    \ \" \")\n    let sorted = nums.sorted { (a, b) -> Bool in\n        return Int(a)\
    \ ?? 0 < Int(b) ?? 0\n    }\n    return sorted.joined(separator: \" \")", "  \
    \  let numbers = numbers.components(separatedBy: \" \")\n    let sorted = numbers.sorted\
    \ { (s1, s2) -> Bool in\n        return s1 < s2\n    }\n    return sorted.joined(separator:\
    \ \" \")", "    let nums = numbers.components(separatedBy: \" \")\n    let sorted\
    \ = nums.sorted { (a, b) -> Bool in\n        return numeral_to_int(numeral: a)\
    \ < numeral_to_int(numeral: b)\n    }\n    return sorted.joined(separator: \"\
    \ \")"]
stop_tokens:
- "\n}"

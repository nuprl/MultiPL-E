name: HumanEval_105_by_length
language: swift
prompt: "\n/// Given an array of integers, sort the integers that are between 1 and\
  \ 9 inclusive,\n/// reverse the resulting array, and then replace each digit by\
  \ its corresponding name from\n/// \"One\", \"Two\", \"Three\", \"Four\", \"Five\"\
  , \"Six\", \"Seven\", \"Eight\", \"Nine\".\n/// For example:\n/// >>> by_length(arr:\
  \ [2, 1, 1, 4, 5, 8, 2, 3])\n/// [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\"\
  , \"Two\", \"One\", \"One\"]\n/// If the array is empty, return an empty array:\n\
  /// >>> by_length(arr: [] as [Int])\n/// [] as [String]\n/// If the array has any\
  \ strange number ignore it:\n/// >>> by_length(arr: [1, -1, 55])\n/// [\"One\"]\n\
  func by_length(arr: [Int]) -> [String] {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(by_length(arr: [2, 1, 1, 4, 5, 8, 2, 3])\
  \ == [\"Eight\", \"Five\", \"Four\", \"Three\", \"Two\", \"Two\", \"One\", \"One\"\
  ])\nassert(by_length(arr: [] as [Int]) == [] as [String])\nassert(by_length(arr:\
  \ [1, -1, 55]) == [\"One\"])\nassert(by_length(arr: [1, -1, 3, 2]) == [\"Three\"\
  , \"Two\", \"One\"])\nassert(by_length(arr: [9, 4, 8]) == [\"Nine\", \"Eight\",\
  \ \"Four\"])"
completions: ["    let sorted = arr.filter({ $0 > 0 && $0 < 10 }).sorted()\n    let\
    \ reversed = sorted.reversed()\n    let mapped = reversed.map({ String($0) })\n\
    \    return mapped", "    let sorted = arr.filter({ $0 >= 1 && $0 <= 9 }).sorted()\n\
    \    let reversed = sorted.reversed()\n    let mapped = reversed.map({ String($0)\
    \ })\n    return mapped", "    let sorted = arr.filter({$0 > 0 && $0 < 10}).sorted()\n\
    \    let reversed = sorted.reversed()\n    let names = reversed.map({String($0)})\n\
    \    return names", "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n\
    \    let reversed = sorted.reversed()\n    let names = reversed.map { number in\n\
    \        switch number {\n        case 1: return \"One\"\n        case 2: return\
    \ \"Two\"\n        case 3: return \"Three\"\n        case 4: return \"Four\"\n\
    \        case 5: return \"Five\"\n        case 6: return \"Six\"\n        case\
    \ 7: return \"Seven\"\n        case 8: return \"Eight\"\n        case 9: return\
    \ \"Nine\"\n        default: return \"\"\n        }\n    }\n    return names",
  "    var result = [String]()\n    let numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9]\n  \
    \  for number in arr {\n        if numbers.contains(number) {\n            result.append(String(number))\n\
    \        }\n    }\n    result.sort()\n    result.reverse()\n    for i in 0..<result.count\
    \ {\n        switch result[i] {\n        case \"1\":\n            result[i] =\
    \ \"One\"\n        case \"2\":\n            result[i] = \"Two\"\n        case\
    \ \"3\":\n            result[i] = \"Three\"\n        case \"4\":\n           \
    \ result[i] = \"Four\"\n        case \"5\":\n            result[i] = \"Five\"\n\
    \        case \"6\":\n            result[i] = \"Six\"\n        case \"7\":\n \
    \           result[i] = \"Seven\"\n        case \"8\":\n            result[i]\
    \ = \"Eight\"\n        case \"9\":\n            result[i] = \"Nine\"\n       \
    \ default:\n            break\n        }\n    }\n    return result", "    var\
    \ result: [String] = []\n    for i in arr {\n        if i >= 1 && i <= 9 {\n \
    \           result.append(String(i))\n        }\n    }\n    result.sort()\n  \
    \  result.reverse()\n    for i in 0..<result.count {\n        switch result[i]\
    \ {\n        case \"1\":\n            result[i] = \"One\"\n        case \"2\"\
    :\n            result[i] = \"Two\"\n        case \"3\":\n            result[i]\
    \ = \"Three\"\n        case \"4\":\n            result[i] = \"Four\"\n       \
    \ case \"5\":\n            result[i] = \"Five\"\n        case \"6\":\n       \
    \     result[i] = \"Six\"\n        case \"7\":\n            result[i] = \"Seven\"\
    \n        case \"8\":\n            result[i] = \"Eight\"\n        case \"9\":\n\
    \            result[i] = \"Nine\"\n        default:\n            break\n     \
    \   }\n    }\n    return result", "    let sorted = arr.filter { $0 >= 1 && $0\
    \ <= 9 }.sorted()\n    let reversed = sorted.reversed()\n    let names = reversed.map\
    \ { String($0) }\n    return names", "    let numbers = arr.filter { $0 > 0 &&\
    \ $0 < 10 }\n    let sorted = numbers.sorted()\n    let reversed = sorted.reversed()\n\
    \    let names = reversed.map { number in\n        switch number {\n        case\
    \ 1:\n            return \"One\"\n        case 2:\n            return \"Two\"\n\
    \        case 3:\n            return \"Three\"\n        case 4:\n            return\
    \ \"Four\"\n        case 5:\n            return \"Five\"\n        case 6:\n  \
    \          return \"Six\"\n        case 7:\n            return \"Seven\"\n   \
    \     case 8:\n            return \"Eight\"\n        case 9:\n            return\
    \ \"Nine\"\n        default:\n            return \"\"\n        }\n    }\n    return\
    \ names", "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n    let\
    \ reversed = sorted.reversed()\n    let names = reversed.map { String($0) }\n\
    \    return names", "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n\
    \    let reversed = sorted.reversed()\n    let mapped = reversed.map { String($0)\
    \ }\n    return mapped", "    let sorted = arr.filter { $0 > 0 && $0 < 10 }.sorted()\n\
    \    let reversed = sorted.reversed()\n    let mapped = reversed.map { String($0)\
    \ }\n    return mapped", "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n\
    \    let reversed = sorted.reversed()\n    let mapped = reversed.map {\n     \
    \   switch $0 {\n        case 1: return \"One\"\n        case 2: return \"Two\"\
    \n        case 3: return \"Three\"\n        case 4: return \"Four\"\n        case\
    \ 5: return \"Five\"\n        case 6: return \"Six\"\n        case 7: return \"\
    Seven\"\n        case 8: return \"Eight\"\n        case 9: return \"Nine\"\n \
    \       default: return \"\"\n        }\n    }\n    return mapped", "    let sorted\
    \ = arr.filter { $0 > 0 && $0 < 10 }.sorted()\n    let reversed = sorted.reversed()\n\
    \    let names = reversed.map { number in\n        switch number {\n        case\
    \ 1:\n            return \"One\"\n        case 2:\n            return \"Two\"\n\
    \        case 3:\n            return \"Three\"\n        case 4:\n            return\
    \ \"Four\"\n        case 5:\n            return \"Five\"\n        case 6:\n  \
    \          return \"Six\"\n        case 7:\n            return \"Seven\"\n   \
    \     case 8:\n            return \"Eight\"\n        case 9:\n            return\
    \ \"Nine\"\n        default:\n            return \"\"\n        }\n    }\n    return\
    \ names", "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n    let\
    \ reversed = sorted.reversed()\n    let names = reversed.map { String($0) }\n\
    \    return names", "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n\
    \    let reversed = sorted.reversed()\n    let mapped = reversed.map { String($0)\
    \ }\n    return mapped", '    return arr.filter({ $0 > 0 && $0 < 10 }).sorted().reversed().map({
    String($0) })', "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n\
    \    let reversed = sorted.reversed()\n    let mapped = reversed.map { String($0)\
    \ }\n    return mapped", "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n\
    \    let reversed = sorted.reversed()\n    let mapped = reversed.map { String($0)\
    \ }\n    return mapped", "    let numbers = arr.filter { $0 >= 1 && $0 <= 9 }.sorted().reversed()\n\
    \    return numbers.map {\n        switch $0 {\n        case 1: return \"One\"\
    \n        case 2: return \"Two\"\n        case 3: return \"Three\"\n        case\
    \ 4: return \"Four\"\n        case 5: return \"Five\"\n        case 6: return\
    \ \"Six\"\n        case 7: return \"Seven\"\n        case 8: return \"Eight\"\n\
    \        case 9: return \"Nine\"\n        default: return \"\"\n        }\n  \
    \  }", "    let sorted = arr.filter { $0 >= 1 && $0 <= 9 }.sorted()\n    let reversed\
    \ = sorted.reversed()\n    let names = reversed.map { String($0) }\n    return\
    \ names"]
stop_tokens:
- "\n}"

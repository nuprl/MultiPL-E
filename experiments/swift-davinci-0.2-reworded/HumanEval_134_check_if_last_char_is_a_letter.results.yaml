language: swift
name: HumanEval_134_check_if_last_char_is_a_letter
results:
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && secondLastChar.isWhitespace {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b1026663c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b102635a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b102635a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b102635a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1026359bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b102648d6c9 <unavailable> + 2692809

    6    tmpv2zv4brz                        0x00005567f4c87dd6 <unavailable> + 7638

    7    tmpv2zv4brz                        0x00005567f4c87744 <unavailable> + 5956

    8    libc.so.6                          0x00002b102684f460 __libc_start_main +
    245

    9    tmpv2zv4brz                        0x00005567f4c87269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    let lastCharIsLetter = lastChar?.isLetter\
    \ ?? false\n    let lastCharIsSpace = lastChar == \" \"\n    let lastCharIsLastChar\
    \ = txt.lastIndex(of: \" \") == nil\n    return lastCharIsLetter && !lastCharIsSpace\
    \ && lastCharIsLastChar\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmppfzjeovi/tmppfzjeovi.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b966c154c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b966be4bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b966be4b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b966be4a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppfzjeovi                        0x000055ea0668351d <unavailable> + 5405

    5    libc.so.6                          0x00002b966c340460 __libc_start_main +
    245

    6    tmppfzjeovi                        0x000055ea066831a9 <unavailable> + 4521

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        if txt.count == 1\
    \ {\n            return true\n        }\n        let secondLastChar = txt[txt.index(before:\
    \ txt.endIndex)]\n        if secondLastChar.isLetter {\n            return false\n\
    \        }\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9a5_l322/tmp9a5_l322.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba846316c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba84600db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba84600d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba84600c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9a5_l322                        0x0000557eb8a9166b <unavailable> + 5739

    5    libc.so.6                          0x00002ba846502460 __libc_start_main +
    245

    6    tmp9a5_l322                        0x0000557eb8a91259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && !secondLastChar.isLetter {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b76c6739c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b76c6430561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b76c6430286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b76c643013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b76c642fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b76c65636c9 <unavailable> + 2692809

    6    tmporsablp1                        0x00005569162aed76 <unavailable> + 7542

    7    tmporsablp1                        0x00005569162ae6e4 <unavailable> + 5860

    8    libc.so.6                          0x00002b76c6925460 __libc_start_main +
    245

    9    tmporsablp1                        0x00005569162ae209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && lastChar.isLowercase && secondLastChar.isWhitespace {\n        return true\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b7bb8bbec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7bb88b5561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b7bb88b5286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b7bb88b513c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b7bb88b4bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b7bb89e86c9 <unavailable> + 2692809

    6    tmpzb3fzfqb                        0x000055b985faee26 <unavailable> + 7718

    7    tmpzb3fzfqb                        0x000055b985fae794 <unavailable> + 6036

    8    libc.so.6                          0x00002b7bb8daa460 __libc_start_main +
    245

    9    tmpzb3fzfqb                        0x000055b985fae2b9 <unavailable> + 4793

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    let lastCharIsLetter = lastChar?.isLetter\
    \ ?? false\n    let lastCharIsNotLetter = lastChar?.isLetter ?? true\n    let\
    \ lastCharIsNotSpace = lastChar?.isWhitespace ?? true\n    let lastCharIsSpace\
    \ = lastChar?.isWhitespace ?? false\n    let lastCharIsNotLetterOrSpace = lastCharIsNotLetter\
    \ && lastCharIsNotSpace\n    let lastCharIsLetterOrSpace = lastCharIsLetter ||\
    \ lastCharIsSpace\n    let lastCharIsLetterAndNotPartOfWord = lastCharIsNotLetterOrSpace\
    \ && lastCharIsLetterOrSpace\n    let lastCharIsLetterAndPartOfWord = lastCharIsLetterOrSpace\
    \ && lastCharIsNotLetterOrSpace\n    return lastCharIsLetterAndNotPartOfWord\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmptdgosuwe/tmptdgosuwe.swift:42: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad22dd2ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad22da25b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad22da25988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad22da247b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptdgosuwe                        0x000055cd47b4447b <unavailable> + 5243

    5    libc.so.6                          0x00002ad22df1a460 __libc_start_main +
    245

    6    tmptdgosuwe                        0x000055cd47b44069 <unavailable> + 4201

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        let lastCharIndex\
    \ = txt.index(before: txt.endIndex)\n        let secondLastChar = txt[txt.index(before:\
    \ lastCharIndex)]\n        if secondLastChar.isLetter {\n            return false\n\
    \        }\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002ad393b42c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad393839561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002ad393839286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002ad39383913c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002ad393838bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002ad39396c6c9 <unavailable> + 2692809

    6    tmpzpncjeo4                        0x000055d923681d7d <unavailable> + 7549

    7    tmpzpncjeo4                        0x000055d9236816e4 <unavailable> + 5860

    8    libc.so.6                          0x00002ad393d2e460 __libc_start_main +
    245

    9    tmpzpncjeo4                        0x000055d923681209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIsLetter = lastChar.isLetter\n    let\
    \ lastCharIsPartOfWord = txt.lastIndex(of: \" \") == txt.index(before: txt.endIndex)\n\
    \    return lastCharIsLetter && lastCharIsPartOfWord\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpb6oh2z0w/tmpb6oh2z0w.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affc139cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affc1093b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affc1093988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affc10927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb6oh2z0w                        0x000055781ce5070b <unavailable> + 5899

    5    libc.so.6                          0x00002affc1588460 __libc_start_main +
    245

    6    tmpb6oh2z0w                        0x000055781ce502f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && secondLastChar.isWhitespace {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b1026663c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b102635a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b102635a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b102635a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1026359bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b102648d6c9 <unavailable> + 2692809

    6    tmpv2zv4brz                        0x00005567f4c87dd6 <unavailable> + 7638

    7    tmpv2zv4brz                        0x00005567f4c87744 <unavailable> + 5956

    8    libc.so.6                          0x00002b102684f460 __libc_start_main +
    245

    9    tmpv2zv4brz                        0x00005567f4c87269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        if txt.count == 1\
    \ {\n            return true\n        }\n        let secondLastChar = txt[txt.index(before:\
    \ txt.endIndex)]\n        if secondLastChar.isLetter {\n            return false\n\
    \        }\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9a5_l322/tmp9a5_l322.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba846316c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba84600db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba84600d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba84600c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9a5_l322                        0x0000557eb8a9166b <unavailable> + 5739

    5    libc.so.6                          0x00002ba846502460 __libc_start_main +
    245

    6    tmp9a5_l322                        0x0000557eb8a91259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIsLetter = lastChar.isLetter\n    let\
    \ lastCharIsPartOfWord = txt.lastIndex(of: \" \") == txt.index(before: txt.endIndex)\n\
    \    return lastCharIsLetter && lastCharIsPartOfWord\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpb6oh2z0w/tmpb6oh2z0w.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affc139cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affc1093b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affc1093988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affc10927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb6oh2z0w                        0x000055781ce5070b <unavailable> + 5899

    5    libc.so.6                          0x00002affc1588460 __libc_start_main +
    245

    6    tmpb6oh2z0w                        0x000055781ce502f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    let isLastCharAlphabetical\
    \ = lastChar.isLetter\n    let isSecondLastCharAlphabetical = secondLastChar.isLetter\n\
    \    return isLastCharAlphabetical && !isSecondLastCharAlphabetical\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002aefc9722c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aefc9419561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002aefc9419286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002aefc941913c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002aefc9418bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002aefc954c6c9 <unavailable> + 2692809

    6    tmpxl6ols9o                        0x0000555d8f8acdba <unavailable> + 7610

    7    tmpxl6ols9o                        0x0000555d8f8ac6e4 <unavailable> + 5860

    8    libc.so.6                          0x00002aefc990e460 __libc_start_main +
    245

    9    tmpxl6ols9o                        0x0000555d8f8ac209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    let lastCharIsLetter = lastChar?.isLetter\
    \ ?? false\n    let lastCharIsPartOfWord = txt.lastIndex(of: \" \") == txt.index(before:\
    \ txt.endIndex)\n    return lastCharIsLetter && lastCharIsPartOfWord\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpx137n0to/tmpx137n0to.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af24be10c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af24bb07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af24bb07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af24bb067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx137n0to                        0x0000560251bdc62b <unavailable> + 5675

    5    libc.so.6                          0x00002af24bffc460 __libc_start_main +
    245

    6    tmpx137n0to                        0x0000560251bdc219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if let lastChar = lastChar\
    \ {\n        if lastChar.isLetter {\n            let lastIndex = txt.index(before:\
    \ txt.endIndex)\n            let secondLastChar = txt[lastIndex]\n           \
    \ if secondLastChar.isLetter {\n                return false\n            } else\
    \ {\n                return true\n            }\n        } else {\n          \
    \  return false\n        }\n    } else {\n        return false\n    }\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpoo3plsk1/tmpoo3plsk1.swift:48: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b5776de9c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5776ae0b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b5776ae0988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b5776adf7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpoo3plsk1                        0x000055de3410053b <unavailable> + 5435

    5    libc.so.6                          0x00002b5776fd5460 __libc_start_main +
    245

    6    tmpoo3plsk1                        0x000055de34100129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        let index = txt.index(before:\
    \ txt.endIndex)\n        let secondLastChar = txt[index]\n        if secondLastChar.isLetter\
    \ {\n            return false\n        }\n        return true\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpgqqsgxuj/tmpgqqsgxuj.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d29c26c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d2991db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d2991d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d2991c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgqqsgxuj                        0x0000560b6038361b <unavailable> + 5659

    5    libc.so.6                          0x00002b1d29e12460 __libc_start_main +
    245

    6    tmpgqqsgxuj                        0x0000560b60383209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && secondLastChar.isWhitespace {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b1026663c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b102635a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b102635a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b102635a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1026359bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b102648d6c9 <unavailable> + 2692809

    6    tmpv2zv4brz                        0x00005567f4c87dd6 <unavailable> + 7638

    7    tmpv2zv4brz                        0x00005567f4c87744 <unavailable> + 5956

    8    libc.so.6                          0x00002b102684f460 __libc_start_main +
    245

    9    tmpv2zv4brz                        0x00005567f4c87269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    // Write your code here\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpqdvmlv4s/tmpqdvmlv4s.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2a646c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2a643bdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2a643bd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2a643bc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqdvmlv4s                        0x00005559046c92fb <unavailable> + 4859

    5    libc.so.6                          0x00002b2a648b2460 __libc_start_main +
    245

    6    tmpqdvmlv4s                        0x00005559046c8ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    if txt[lastCharIndex] == \" \" {\n        return false\n    }\n    return\
    \ lastChar.isLetter\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpnvojdkj5/tmpnvojdkj5.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad644825c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad64451cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad64451c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad64451b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnvojdkj5                        0x000055ebb01d666d <unavailable> + 5741

    5    libc.so.6                          0x00002ad644a11460 __libc_start_main +
    245

    6    tmpnvojdkj5                        0x000055ebb01d62f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false && txt.last != \"\
    \ \"\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
    \ left.count != right.count {\n        return false\n    }\n    for (l, r) in\
    \ zip(left, right) {\n        if l != r {\n            return false\n        }\n\
    \    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpzs5wzxst/tmpzs5wzxst.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae636b19c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae636810b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae636810988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae63680f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpzs5wzxst                        0x000055771029247d <unavailable> + 5245

    5    libc.so.6                          0x00002ae636d05460 __libc_start_main +
    245

    6    tmpzs5wzxst                        0x0000557710292109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        let index = txt.index(before:\
    \ txt.endIndex)\n        let secondLastChar = txt[index]\n        if secondLastChar.isLetter\
    \ {\n            return false\n        }\n        return true\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpgqqsgxuj/tmpgqqsgxuj.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d29c26c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d2991db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d2991d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d2991c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgqqsgxuj                        0x0000560b6038361b <unavailable> + 5659

    5    libc.so.6                          0x00002b1d29e12460 __libc_start_main +
    245

    6    tmpgqqsgxuj                        0x0000560b60383209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return lastChar?.isLetter ?? false\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp2hkv7l25/tmp2hkv7l25.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1506367c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b150605eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b150605e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b150605d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2hkv7l25                        0x00005571c9d0947d <unavailable> + 5245

    5    libc.so.6                          0x00002b1506553460 __libc_start_main +
    245

    6    tmp2hkv7l25                        0x00005571c9d09109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    // Write your code here\n    return false\n}\n\n\nfunc\
    \ ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count !=\
    \ right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpqdvmlv4s/tmpqdvmlv4s.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2a646c6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2a643bdb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2a643bd988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2a643bc7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpqdvmlv4s                        0x00005559046c92fb <unavailable> + 4859

    5    libc.so.6                          0x00002b2a648b2460 __libc_start_main +
    245

    6    tmpqdvmlv4s                        0x00005559046c8ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if let lastChar = lastChar\
    \ {\n        if lastChar.isLetter {\n            let lastCharIndex = txt.index(before:\
    \ txt.endIndex)\n            let lastCharInWord = txt[lastCharIndex]\n       \
    \     if lastCharInWord.isLetter {\n                return false\n           \
    \ } else {\n                return true\n            }\n        } else {\n   \
    \         return false\n        }\n    } else {\n        return false\n    }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpej8lwuhi/tmpej8lwuhi.swift:48: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4bc39edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4bc36e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4bc36e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4bc36e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpej8lwuhi                        0x00005578841e253b <unavailable> + 5435

    5    libc.so.6                          0x00002b4bc3bd9460 __libc_start_main +
    245

    6    tmpej8lwuhi                        0x00005578841e2129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if let lastChar = lastChar\
    \ {\n        if lastChar.isLetter {\n            let lastCharIndex = txt.index(before:\
    \ txt.endIndex)\n            let lastCharBeforeIndex = txt.index(before: lastCharIndex)\n\
    \            let lastCharBefore = txt[lastCharBeforeIndex]\n            if lastCharBefore.isLetter\
    \ {\n                return false\n            } else {\n                return\
    \ true\n            }\n        } else {\n            return false\n        }\n\
    \    } else {\n        return false\n    }\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b6f59976c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6f5966d561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6f5966d286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6f5966d13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6f5966cbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b6f597a06c9 <unavailable> + 2692809

    6    tmpplxywjih                        0x000055f88777ec74 <unavailable> + 7284

    7    tmpplxywjih                        0x000055f88777e604 <unavailable> + 5636

    8    libc.so.6                          0x00002b6f59b62460 __libc_start_main +
    245

    9    tmpplxywjih                        0x000055f88777e129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: 1
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false && !txt.last!.isPartOfWord\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: SyntaxError
  stderr: "/tmp/tmpm79x56od.swift:16:54: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isPartOfWord'\n    return txt.last?.isLetter ??\
    \ false && !txt.last!.isPartOfWord\n                                         \
    \  ~~~~~~~~~ ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824297
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if let lastChar = lastChar\
    \ {\n        if lastChar.isLetter {\n            let lastCharIndex = txt.index(before:\
    \ txt.endIndex)\n            let lastCharInWord = txt[lastCharIndex]\n       \
    \     if lastCharInWord.isLetter {\n                return false\n           \
    \ } else {\n                return true\n            }\n        } else {\n   \
    \         return false\n        }\n    } else {\n        return false\n    }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpej8lwuhi/tmpej8lwuhi.swift:48: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b4bc39edc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b4bc36e4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b4bc36e4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b4bc36e37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpej8lwuhi                        0x00005578841e253b <unavailable> + 5435

    5    libc.so.6                          0x00002b4bc3bd9460 __libc_start_main +
    245

    6    tmpej8lwuhi                        0x00005578841e2129 <unavailable> + 4393

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    return lastChar.isLetter && !lastChar.isNumber\n}\n\
    \n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmppmhfi1nn/tmppmhfi1nn.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b383944bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3839142b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3839142988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b38391417b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppmhfi1nn                        0x0000563f2e2bd4bd <unavailable> + 5309

    5    libc.so.6                          0x00002b3839637460 __libc_start_main +
    245

    6    tmppmhfi1nn                        0x0000563f2e2bd149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && secondLastChar.isWhitespace {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b1026663c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b102635a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b102635a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b102635a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1026359bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b102648d6c9 <unavailable> + 2692809

    6    tmpv2zv4brz                        0x00005567f4c87dd6 <unavailable> + 7638

    7    tmpv2zv4brz                        0x00005567f4c87744 <unavailable> + 5956

    8    libc.so.6                          0x00002b102684f460 __libc_start_main +
    245

    9    tmpv2zv4brz                        0x00005567f4c87269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return lastChar!.isLetter\n    }\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmp6p4rddfi/tmp6p4rddfi.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d6c0a5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d6bd9cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d6bd9c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d6bd9b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp6p4rddfi                        0x000055ed7f11050d <unavailable> + 5389

    5    libc.so.6                          0x00002b2d6c291460 __libc_start_main +
    245

    6    tmp6p4rddfi                        0x000055ed7f110199 <unavailable> + 4505

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    // your code here\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmprjxvnh1y/tmprjxvnh1y.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b5fcc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b5f9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b5f9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b5f9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprjxvnh1y                        0x0000558eaa3cd2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b7b5feac460 __libc_start_main +
    245

    6    tmprjxvnh1y                        0x0000558eaa3ccee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIsLetter = lastChar.isLetter\n    let\
    \ lastCharIsPartOfWord = txt.lastIndex(of: \" \") == txt.index(before: txt.endIndex)\n\
    \    return lastCharIsLetter && lastCharIsPartOfWord\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpb6oh2z0w/tmpb6oh2z0w.swift:39: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002affc139cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002affc1093b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002affc1093988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002affc10927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpb6oh2z0w                        0x000055781ce5070b <unavailable> + 5899

    5    libc.so.6                          0x00002affc1588460 __libc_start_main +
    245

    6    tmpb6oh2z0w                        0x000055781ce502f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    return lastChar.isLetter && !lastChar.isLetter &&\
    \ !lastChar.isNumber\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpc5hj0wgn/tmpc5hj0wgn.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9cf0e04c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9cf0afbb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9cf0afb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9cf0afa7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc5hj0wgn                        0x0000564f3ffae55b <unavailable> + 5467

    5    libc.so.6                          0x00002b9cf0ff0460 __libc_start_main +
    245

    6    tmpc5hj0wgn                        0x0000564f3ffae149 <unavailable> + 4425

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    if txt[lastCharIndex] == \" \" {\n        return false\n    }\n    if lastChar.isLetter\
    \ {\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpph7sdqh2/tmpph7sdqh2.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9696250c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9695f47b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9695f47988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9695f467b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpph7sdqh2                        0x0000555bca51866d <unavailable> + 5741

    5    libc.so.6                          0x00002b969643c460 __libc_start_main +
    245

    6    tmpph7sdqh2                        0x0000555bca5182f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: 1
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let lastCharIsLetter = CharacterSet.letters.contains(lastChar.unicodeScalars.first!)\n\
    \    let lastCharIsNotPartOfWord = txt[lastCharIndex] == \" \"\n    return lastCharIsLetter\
    \ && lastCharIsNotPartOfWord\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: SyntaxError
  stderr: "/tmp/tmp4xe66yhg.swift:21:28: error: cannot find 'CharacterSet' in scope\n\
    \    let lastCharIsLetter = CharacterSet.letters.contains(lastChar.unicodeScalars.first!)\n\
    \                           ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && secondLastChar.isWhitespace {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b1026663c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b102635a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b102635a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b102635a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1026359bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b102648d6c9 <unavailable> + 2692809

    6    tmpv2zv4brz                        0x00005567f4c87dd6 <unavailable> + 7638

    7    tmpv2zv4brz                        0x00005567f4c87744 <unavailable> + 5956

    8    libc.so.6                          0x00002b102684f460 __libc_start_main +
    245

    9    tmpv2zv4brz                        0x00005567f4c87269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpjtgznljy/tmpjtgznljy.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b18cc3a6c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b18cc09db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b18cc09d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b18cc09c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjtgznljy                        0x00005633c8cd037d <unavailable> + 4989

    5    libc.so.6                          0x00002b18cc592460 __libc_start_main +
    245

    6    tmpjtgznljy                        0x00005633c8cd0009 <unavailable> + 4105

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        let index = txt.index(before:\
    \ txt.endIndex)\n        let secondLastChar = txt[index]\n        if secondLastChar.isLetter\
    \ {\n            return false\n        }\n        return true\n    }\n    return\
    \ false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n \
    \   if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpgqqsgxuj/tmpgqqsgxuj.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1d29c26c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b1d2991db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b1d2991d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b1d2991c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpgqqsgxuj                        0x0000560b6038361b <unavailable> + 5659

    5    libc.so.6                          0x00002b1d29e12460 __libc_start_main +
    245

    6    tmpgqqsgxuj                        0x0000560b60383209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let lastCharIsLetter = lastChar.isLetter\n    let lastCharIsLastCharOfWord\
    \ = txt[lastCharIndex] == \" \"\n    return lastCharIsLetter && lastCharIsLastCharOfWord\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmp14fa8tff/tmp14fa8tff.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ab22994ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ab229641b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ab229641988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ab2296407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp14fa8tff                        0x00005604ad8b870b <unavailable> + 5899

    5    libc.so.6                          0x00002ab229b36460 __libc_start_main +
    245

    6    tmp14fa8tff                        0x00005604ad8b82f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    if\
    \ txt.last!.isLetter {\n        if txt.last! == \" \" {\n            return false\n\
    \        }\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmprmgdb0y8/tmprmgdb0y8.swift:41: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b26ef9adc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b26ef6a4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b26ef6a4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b26ef6a37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprmgdb0y8                        0x00005578e1d3755d <unavailable> + 5469

    5    libc.so.6                          0x00002b26efb99460 __libc_start_main +
    245

    6    tmprmgdb0y8                        0x00005578e1d371e9 <unavailable> + 4585

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ {\n        if secondLastChar.isLetter {\n            return false\n        }\
    \ else {\n            return true\n        }\n    } else {\n        return false\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b6d47dc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6d47ab7561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b6d47ab7286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b6d47ab713c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b6d47ab6bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b6d47bea6c9 <unavailable> + 2692809

    6    tmp3f6ewgf_                        0x0000561809757d76 <unavailable> + 7542

    7    tmp3f6ewgf_                        0x00005618097576e4 <unavailable> + 5860

    8    libc.so.6                          0x00002b6d47fac460 __libc_start_main +
    245

    9    tmp3f6ewgf_                        0x0000561809757209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && !secondLastChar.isLetter {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b76c6739c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b76c6430561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b76c6430286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b76c643013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b76c642fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b76c65636c9 <unavailable> + 2692809

    6    tmporsablp1                        0x00005569162aed76 <unavailable> + 7542

    7    tmporsablp1                        0x00005569162ae6e4 <unavailable> + 5860

    8    libc.so.6                          0x00002b76c6925460 __libc_start_main +
    245

    9    tmporsablp1                        0x00005569162ae209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    if txt[lastCharIndex] == \" \" {\n        return false\n    }\n    return\
    \ lastChar.isLetter\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpnvojdkj5/tmpnvojdkj5.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad644825c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad64451cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad64451c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad64451b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnvojdkj5                        0x000055ebb01d666d <unavailable> + 5741

    5    libc.so.6                          0x00002ad644a11460 __libc_start_main +
    245

    6    tmpnvojdkj5                        0x000055ebb01d62f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && secondLastChar.isWhitespace {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b1026663c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b102635a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b102635a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b102635a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1026359bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b102648d6c9 <unavailable> + 2692809

    6    tmpv2zv4brz                        0x00005567f4c87dd6 <unavailable> + 7638

    7    tmpv2zv4brz                        0x00005567f4c87744 <unavailable> + 5956

    8    libc.so.6                          0x00002b102684f460 __libc_start_main +
    245

    9    tmpv2zv4brz                        0x00005567f4c87269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && !secondLastChar.isLetter {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b76c6739c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b76c6430561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b76c6430286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b76c643013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b76c642fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b76c65636c9 <unavailable> + 2692809

    6    tmporsablp1                        0x00005569162aed76 <unavailable> + 7542

    7    tmporsablp1                        0x00005569162ae6e4 <unavailable> + 5860

    8    libc.so.6                          0x00002b76c6925460 __libc_start_main +
    245

    9    tmporsablp1                        0x00005569162ae209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    // your code here\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmprjxvnh1y/tmprjxvnh1y.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b5fcc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b5f9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b5f9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b5f9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprjxvnh1y                        0x0000558eaa3cd2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b7b5feac460 __libc_start_main +
    245

    6    tmprjxvnh1y                        0x0000558eaa3ccee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    if txt[lastCharIndex] == \" \" {\n        return false\n    }\n    return\
    \ lastChar.isLetter\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmpnvojdkj5/tmpnvojdkj5.swift:40: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad644825c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad64451cb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad64451c988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad64451b7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpnvojdkj5                        0x000055ebb01d666d <unavailable> + 5741

    5    libc.so.6                          0x00002ad644a11460 __libc_start_main +
    245

    6    tmpnvojdkj5                        0x000055ebb01d62f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && secondLastChar.isWhitespace {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b1026663c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b102635a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b102635a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b102635a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1026359bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b102648d6c9 <unavailable> + 2692809

    6    tmpv2zv4brz                        0x00005567f4c87dd6 <unavailable> + 7638

    7    tmpv2zv4brz                        0x00005567f4c87744 <unavailable> + 5956

    8    libc.so.6                          0x00002b102684f460 __libc_start_main +
    245

    9    tmpv2zv4brz                        0x00005567f4c87269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    // your code here\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmprjxvnh1y/tmprjxvnh1y.swift:34: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b7b5fcc0c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b7b5f9b7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b7b5f9b7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b7b5f9b67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprjxvnh1y                        0x0000558eaa3cd2fb <unavailable> + 4859

    5    libc.so.6                          0x00002b7b5feac460 __libc_start_main +
    245

    6    tmprjxvnh1y                        0x0000558eaa3ccee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    }\n    if lastChar == nil {\n        return false\n\
    \    }\n    let lastCharIndex = txt.index(before: txt.endIndex)\n    let lastCharString\
    \ = txt[lastCharIndex]\n    let lastCharStringIndex = txt.index(before: txt.endIndex)\n\
    \    let lastCharStringIndex2 = txt.index(after: txt.endIndex)\n    let lastCharString2\
    \ = txt[lastCharStringIndex2]\n    if lastCharString == \" \" {\n        return\
    \ false\n    }\n    if lastCharString2 == \" \" {\n        return false\n    }\n\
    \    return true\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool\
    \ {\n    if left.count != right.count {\n        return false\n    }\n    for\
    \ (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'Swift/StringIndexValidation.swift:252: Fatal error: String index is out
    of bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b0c3d61ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b0c3d311561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b0c3d311286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b0c3d31113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b0c3d310bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b0c3d444455 <unavailable> + 2692181

    6    libswiftCore.so                    0x00002b0c3d31e210 String.index(after:)
    + 15

    7    tmpz0ey929t                        0x0000564102e05019 <unavailable> + 8217

    8    tmpz0ey929t                        0x0000564102e04526 <unavailable> + 5414

    9    libc.so.6                          0x00002b0c3d806460 __libc_start_main +
    245

    10   tmpz0ey929t                        0x0000564102e04229 <unavailable> + 4649

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    let isLastCharLetter\
    \ = lastChar.isLetter\n    let isSecondLastCharLetter = secondLastChar.isLetter\n\
    \    let isLastCharSpace = lastChar == \" \"\n    return isLastCharLetter && !isSecondLastCharLetter\
    \ && !isLastCharSpace\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b868fd81c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b868fa78561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b868fa78286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b868fa7813c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b868fa77bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b868fbab6c9 <unavailable> + 2692809

    6    tmphk9arwgn                        0x000055fb6f1ccebd <unavailable> + 7869

    7    tmphk9arwgn                        0x000055fb6f1cc7d4 <unavailable> + 6100

    8    libc.so.6                          0x00002b868ff6d460 __libc_start_main +
    245

    9    tmphk9arwgn                        0x000055fb6f1cc2f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    return lastChar.isLetter\
    \ && !secondLastChar.isLetter\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b5b60319c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b5b60010561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b5b60010286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b5b6001013c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b5b6000fbb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b5b601436c9 <unavailable> + 2692809

    6    tmpennms3g2                        0x00005565323aed76 <unavailable> + 7542

    7    tmpennms3g2                        0x00005565323ae6e4 <unavailable> + 5860

    8    libc.so.6                          0x00002b5b60505460 __libc_start_main +
    245

    9    tmpennms3g2                        0x00005565323ae209 <unavailable> + 4617

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        if txt.count == 1\
    \ {\n            return true\n        }\n        let secondLastChar = txt[txt.index(before:\
    \ txt.endIndex)]\n        if secondLastChar.isLetter {\n            return false\n\
    \        }\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmp9a5_l322/tmp9a5_l322.swift:47: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ba846316c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ba84600db6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ba84600d988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ba84600c7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9a5_l322                        0x0000557eb8a9166b <unavailable> + 5739

    5    libc.so.6                          0x00002ba846502460 __libc_start_main +
    245

    6    tmp9a5_l322                        0x0000557eb8a91259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: 1
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if let lastChar = lastChar\
    \ {\n        let lastCharIndex = txt.index(before: txt.endIndex)\n        let\
    \ lastCharIsLetter = txt[lastCharIndex].isLetter\n        let lastCharIsPartOfWord\
    \ = txt[lastCharIndex].isPartOfWord\n        return lastCharIsLetter && !lastCharIsPartOfWord\n\
    \    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpqkq_khmj.swift:20:55: error: value of type 'Character' has no member\
    \ 'isPartOfWord'\n        let lastCharIsPartOfWord = txt[lastCharIndex].isPartOfWord\n\
    \                                   ~~~~~~~~~~~~~~~~~~ ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    let lastCharIsLetter = lastChar?.isLetter\
    \ ?? false\n    let lastCharIsSpace = lastChar == \" \"\n    let lastCharIsLetterAndNotPartOfWord\
    \ = lastCharIsLetter && !lastCharIsSpace\n    return lastCharIsLetterAndNotPartOfWord\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmptg4z76w2/tmptg4z76w2.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ada26f92c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ada26c89b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ada26c89988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ada26c887b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptg4z76w2                        0x000055926e66a47d <unavailable> + 5245

    5    libc.so.6                          0x00002ada2717e460 __libc_start_main +
    245

    6    tmptg4z76w2                        0x000055926e66a109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    let lastCharIsLetter = lastChar?.isLetter\
    \ ?? false\n    let lastCharIsPartOfWord = txt.lastIndex(of: \" \") == txt.index(before:\
    \ txt.endIndex)\n    return lastCharIsLetter && lastCharIsPartOfWord\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmpx137n0to/tmpx137n0to.swift:36: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af24be10c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af24bb07b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af24bb07988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af24bb067b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx137n0to                        0x0000560251bdc62b <unavailable> + 5675

    5    libc.so.6                          0x00002af24bffc460 __libc_start_main +
    245

    6    tmpx137n0to                        0x0000560251bdc219 <unavailable> + 4633

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return lastChar?.isLetter ?? false\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp2hkv7l25/tmp2hkv7l25.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1506367c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b150605eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b150605e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b150605d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2hkv7l25                        0x00005571c9d0947d <unavailable> + 5245

    5    libc.so.6                          0x00002b1506553460 __libc_start_main +
    245

    6    tmp2hkv7l25                        0x00005571c9d09109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return lastChar?.isLetter ?? false\n\
    \    }\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n  \
    \  if left.count != right.count {\n        return false\n    }\n    for (l, r)\
    \ in zip(left, right) {\n        if l != r {\n            return false\n     \
    \   }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp2hkv7l25/tmp2hkv7l25.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b1506367c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b150605eb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b150605e988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b150605d7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp2hkv7l25                        0x00005571c9d0947d <unavailable> + 5245

    5    libc.so.6                          0x00002b1506553460 __libc_start_main +
    245

    6    tmp2hkv7l25                        0x00005571c9d09109 <unavailable> + 4361

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        if txt.count > 1 {\n\
    \            let secondLastChar = txt[txt.index(before: txt.endIndex)]\n     \
    \       if secondLastChar.isLetter {\n                return false\n         \
    \   }\n        }\n        return true\n    }\n    return false\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpx3enfmyd/tmpx3enfmyd.swift:46: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd0427fc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd03f76b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd03f76988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd03f757b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpx3enfmyd                        0x000055da1722966b <unavailable> + 5739

    5    libc.so.6                          0x00002abd0446b460 __libc_start_main +
    245

    6    tmpx3enfmyd                        0x000055da17229259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: 1
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return txt.last?.isLetter ?? false && txt.last?.isPartOfWord\
    \ == false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n\
    \    if left.count != right.count {\n        return false\n    }\n    for (l,\
    \ r) in zip(left, right) {\n        if l != r {\n            return false\n  \
    \      }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: SyntaxError
  stderr: "/tmp/tmpfzrhl40h.swift:16:53: error: value of type 'String.Element' (aka\
    \ 'Character') has no member 'isPartOfWord'\n    return txt.last?.isLetter ??\
    \ false && txt.last?.isPartOfWord == false\n                                 \
    \         ~~~~~~~~~ ^~~~~~~~~~~~\n"
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ && secondLastChar.isWhitespace {\n        return true\n    }\n    return false\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b1026663c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b102635a561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b102635a286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b102635a13c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b1026359bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b102648d6c9 <unavailable> + 2692809

    6    tmpv2zv4brz                        0x00005567f4c87dd6 <unavailable> + 7638

    7    tmpv2zv4brz                        0x00005567f4c87744 <unavailable> + 5956

    8    libc.so.6                          0x00002b102684f460 __libc_start_main +
    245

    9    tmpv2zv4brz                        0x00005567f4c87269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    let lastCharIndex = txt.index(before: txt.endIndex)\n\
    \    let secondLastChar = txt[txt.index(before: lastCharIndex)]\n    if lastChar.isLetter\
    \ {\n        if lastChar.isUppercase {\n            return true\n        }\n \
    \       if secondLastChar.isLetter {\n            return false\n        }\n  \
    \      return true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'Swift/StringCharacterView.swift:93: Fatal error: String index is out of
    bounds

    Current stack trace:

    0    libswiftCore.so                    0x00002b13c94cbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b13c91c2561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b13c91c2286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b13c91c213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b13c91c1bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    libswiftCore.so                    0x00002b13c92f56c9 <unavailable> + 2692809

    6    tmpgoj_18d4                        0x000055a5b71fcdd6 <unavailable> + 7638

    7    tmpgoj_18d4                        0x000055a5b71fc744 <unavailable> + 5956

    8    libc.so.6                          0x00002b13c96b7460 __libc_start_main +
    245

    9    tmpgoj_18d4                        0x000055a5b71fc269 <unavailable> + 4713

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    if\
    \ txt.last == \" \" {\n        return false\n    }\n    let lastChar = txt.last!\n\
    \    let lastCharIndex = txt.index(before: txt.endIndex)\n    if txt[lastCharIndex]\
    \ == \" \" {\n        return false\n    }\n    return lastChar.isLetter\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie 1\") ==\
    \ false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi e \"\
    ) == false)"
  status: Exception
  stderr: 'tmp5zk4xjy0/tmp5zk4xjy0.swift:43: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b8ed883bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8ed8532b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b8ed8532988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b8ed85317b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp5zk4xjy0                        0x00005565b885366d <unavailable> + 5741

    5    libc.so.6                          0x00002b8ed8a27460 __libc_start_main +
    245

    6    tmp5zk4xjy0                        0x00005565b88532f9 <unavailable> + 4857

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    if txt.isEmpty {\n        return false\n    }\n    let\
    \ lastChar = txt.last!\n    if lastChar.isLetter {\n        let index = txt.index(before:\
    \ txt.endIndex)\n        let secondLastChar = txt[index]\n        if secondLastChar.isLetter\
    \ || secondLastChar.isNumber {\n            return false\n        }\n        return\
    \ true\n    }\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple pi\
    \ e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp_ybr8udw/tmp_ybr8udw.swift:45: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ac29d1e5c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ac29cedcb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ac29cedc988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ac29cedb7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp_ybr8udw                        0x0000558690c0866b <unavailable> + 5739

    5    libc.so.6                          0x00002ac29d3d1460 __libc_start_main +
    245

    6    tmp_ybr8udw                        0x0000558690c08259 <unavailable> + 4697

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    let lastChar = txt.last\n    if lastChar == \" \" {\n\
    \        return false\n    } else {\n        return true\n    }\n}\n\n\nfunc ==(left:\
    \ [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count\
    \ {\n        return false\n    }\n    for (l, r) in zip(left, right) {\n     \
    \   if l != r {\n            return false\n        }\n    }\n    return true\n\
    }\n            \nassert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"eeeee\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\n\
    assert(check_if_last_char_is_a_letter(txt: \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e \") == false)"
  status: Exception
  stderr: 'tmpf1lg50pd/tmpf1lg50pd.swift:37: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002addfec6ec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002addfe965b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002addfe965988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002addfe9647b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpf1lg50pd                        0x000055d13b90642d <unavailable> + 5165

    5    libc.so.6                          0x00002addfee5a460 __libc_start_main +
    245

    6    tmpf1lg50pd                        0x000055d13b9060b9 <unavailable> + 4281

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298
- exit_code: -4
  program: "\n/// Create a function that returns true if the last character\n/// of\
    \ a given string is an alphabetical character and is not\n/// a part of a word,\
    \ and false otherwise.\n/// Note: \"word\" is a group of characters separated\
    \ by space.\n/// Examples:\n/// >>> check_if_last_char_is_a_letter(txt: \"apple\
    \ pie\")\n/// false\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e\"\
    )\n/// true\n/// >>> check_if_last_char_is_a_letter(txt: \"apple pi e \")\n///\
    \ false\n/// >>> check_if_last_char_is_a_letter(txt: \"\")\n/// false\nfunc check_if_last_char_is_a_letter(txt:\
    \ String) -> Bool {\n    return false\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(check_if_last_char_is_a_letter(txt: \"apple\") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pi e\") == true)\nassert(check_if_last_char_is_a_letter(txt: \"eeeee\"\
    ) == false)\nassert(check_if_last_char_is_a_letter(txt: \"A\") == true)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"Pumpkin pie \") == false)\nassert(check_if_last_char_is_a_letter(txt: \"Pumpkin\
    \ pie 1\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"\") == false)\n\
    assert(check_if_last_char_is_a_letter(txt: \"eeeee e \") == false)\nassert(check_if_last_char_is_a_letter(txt:\
    \ \"apple pie\") == false)\nassert(check_if_last_char_is_a_letter(txt: \"apple\
    \ pi e \") == false)"
  status: Exception
  stderr: 'tmp1tib89v7/tmp1tib89v7.swift:33: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acd57b5bc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acd57852b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acd57852988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acd578517b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp1tib89v7                        0x0000555ec6af62fb <unavailable> + 4859

    5    libc.so.6                          0x00002acd57d47460 __libc_start_main +
    245

    6    tmp1tib89v7                        0x0000555ec6af5ee9 <unavailable> + 3817

    '
  stdout: ''
  timestamp: 1659824298

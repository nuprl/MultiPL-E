name: HumanEval_85_add
language: swift
prompt: "\n/// Given a non-empty array of integers lst. add the even elements that\
  \ are at odd indices..\n/// Examples:\n/// >>> add(lst: [4, 2, 6, 7])\n/// 2\nfunc\
  \ add(lst: [Int]) -> Int {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(add(lst: [4, 88]) == 88)\nassert(add(lst:\
  \ [4, 5, 6, 7, 2, 122]) == 122)\nassert(add(lst: [4, 0, 6, 7]) == 0)\nassert(add(lst:\
  \ [4, 4, 6, 8]) == 12)"
completions: ["    var sum = 0\n    for (index, value) in lst.enumerated() {\n   \
    \     if index % 2 != 0 && value % 2 == 0 {\n            sum += value\n      \
    \  }\n    }\n    return sum", "    var sum = 0\n    for (index, value) in lst.enumerated()\
    \ {\n        if index % 2 != 0 && value % 2 == 0 {\n            sum += value\n\
    \        }\n    }\n    return sum", "    var sum = 0\n    for (index, element)\
    \ in lst.enumerated() {\n        if index % 2 != 0 && element % 2 == 0 {\n   \
    \         sum += element\n        }\n    }\n    return sum", "    var sum = 0\n\
    \    for (index, value) in lst.enumerated() {\n        if index % 2 != 0 && value\
    \ % 2 == 0 {\n            sum += value\n        }\n    }\n    return sum", " \
    \   var sum = 0\n    for (index, element) in lst.enumerated() {\n        if index\
    \ % 2 != 0 && element % 2 == 0 {\n            sum += element\n        }\n    }\n\
    \    return sum", "    var sum = 0\n    for (index, value) in lst.enumerated()\
    \ {\n        if index % 2 != 0 && value % 2 == 0 {\n            sum += value\n\
    \        }\n    }\n    return sum", "    var sum = 0\n    for (index, value) in\
    \ lst.enumerated() {\n        if index % 2 != 0 && value % 2 == 0 {\n        \
    \    sum += value\n        }\n    }\n    return sum", "    var sum = 0\n    for\
    \ (index, value) in lst.enumerated() {\n        if index % 2 != 0 && value % 2\
    \ == 0 {\n            sum += value\n        }\n    }\n    return sum", "    var\
    \ sum = 0\n    for (index, element) in lst.enumerated() {\n        if index %\
    \ 2 != 0 && element % 2 == 0 {\n            sum += element\n        }\n    }\n\
    \    return sum", '    return lst.enumerated().reduce(0) { $0 + ($1.offset % 2
    == 0 ? $1.element : 0) }', "    var sum = 0\n    for (index, element) in lst.enumerated()\
    \ {\n        if index % 2 != 0 && element % 2 == 0 {\n            sum += element\n\
    \        }\n    }\n    return sum", "    var sum = 0\n    for (index, value) in\
    \ lst.enumerated() {\n        if index % 2 != 0 && value % 2 == 0 {\n        \
    \    sum += value\n        }\n    }\n    return sum", "    return lst.enumerated().reduce(0)\
    \ { (result, element) in\n        return element.offset % 2 == 1 && element.element\
    \ % 2 == 0 ? result + element.element : result\n    }", "    return lst.enumerated().reduce(0)\
    \ { (result, element) in\n        return element.offset % 2 == 1 && element.element\
    \ % 2 == 0 ? result + element.element : result\n    }", "    var sum = 0\n   \
    \ for (i, num) in lst.enumerated() {\n        if i % 2 == 1 && num % 2 == 0 {\n\
    \            sum += num\n        }\n    }\n    return sum", "    var sum = 0\n\
    \    for (index, value) in lst.enumerated() {\n        if index % 2 != 0 && value\
    \ % 2 == 0 {\n            sum += value\n        }\n    }\n    return sum", " \
    \   var sum = 0\n    for (index, value) in lst.enumerated() {\n        if index\
    \ % 2 != 0 && value % 2 == 0 {\n            sum += value\n        }\n    }\n \
    \   return sum", "    var sum = 0\n    for (index, value) in lst.enumerated()\
    \ {\n        if index % 2 != 0 && value % 2 == 0 {\n            sum += value\n\
    \        }\n    }\n    return sum", "    var sum = 0\n    for (index, value) in\
    \ lst.enumerated() {\n        if index % 2 != 0 && value % 2 == 0 {\n        \
    \    sum += value\n        }\n    }\n    return sum", "    var sum = 0\n    for\
    \ (index, value) in lst.enumerated() {\n        if index % 2 != 0 && value % 2\
    \ == 0 {\n            sum += value\n        }\n    }\n    return sum"]
stop_tokens:
- "\n}"

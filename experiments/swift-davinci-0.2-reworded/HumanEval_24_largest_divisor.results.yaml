language: swift
name: HumanEval_24_largest_divisor
results:
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    for i in (1...n/2).reversed() {\n        if n % i == 0 {\n\
    \            return i\n        }\n    }\n    return 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7)\
    \ == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) ==\
    \ 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var divisor = n - 1\n    while n % divisor != 0 {\n     \
    \   divisor -= 1\n    }\n    return divisor\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7) == 1)\n\
    assert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n:\
    \ 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpcu682hrg/tmpcu682hrg.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd11cbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd119b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd119b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd119b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu682hrg                        0x0000563c1fd5a335 <unavailable> + 4917

    5    libc.so.6                          0x00002abd11ea8460 __libc_start_main +
    245

    6    tmpcu682hrg                        0x0000563c1fd59fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpcu682hrg/tmpcu682hrg.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd11cbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd119b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd119b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd119b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu682hrg                        0x0000563c1fd5a335 <unavailable> + 4917

    5    libc.so.6                          0x00002abd11ea8460 __libc_start_main +
    245

    6    tmpcu682hrg                        0x0000563c1fd59fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpcu682hrg/tmpcu682hrg.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd11cbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd119b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd119b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd119b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu682hrg                        0x0000563c1fd5a335 <unavailable> + 4917

    5    libc.so.6                          0x00002abd11ea8460 __libc_start_main +
    245

    6    tmpcu682hrg                        0x0000563c1fd59fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2..<n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 0\n    for i in 1...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmppcw3itcd/tmppcw3itcd.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3eeab73c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3eea86ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3eea86a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3eea8697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppcw3itcd                        0x000055a9ebf2e335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3eead5f460 __libc_start_main +
    245

    6    tmppcw3itcd                        0x000055a9ebf2dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpcu682hrg/tmpcu682hrg.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd11cbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd119b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd119b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd119b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu682hrg                        0x0000563c1fd5a335 <unavailable> + 4917

    5    libc.so.6                          0x00002abd11ea8460 __libc_start_main +
    245

    6    tmpcu682hrg                        0x0000563c1fd59fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largestDivisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largestDivisor = i\n        }\n    }\n    return largestDivisor\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmptubv57cu/tmptubv57cu.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acf5ac24c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acf5a91bb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acf5a91b988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acf5a91a7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmptubv57cu                        0x0000557c95b17335 <unavailable> + 4917

    5    libc.so.6                          0x00002acf5ae10460 __libc_start_main +
    245

    6    tmptubv57cu                        0x0000557c95b16fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 0\n    for i in 1..<n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2..<n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpcu682hrg/tmpcu682hrg.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd11cbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd119b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd119b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd119b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu682hrg                        0x0000563c1fd5a335 <unavailable> + 4917

    5    libc.so.6                          0x00002abd11ea8460 __libc_start_main +
    245

    6    tmpcu682hrg                        0x0000563c1fd59fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    for i in (1...n/2).reversed() {\n        if n % i == 0 {\n\
    \            return i\n        }\n    }\n    return 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7)\
    \ == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) ==\
    \ 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    for i in (1...n/2).reversed() {\n        if n % i == 0 {\n\
    \            return i\n        }\n    }\n    return 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7)\
    \ == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) ==\
    \ 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n/2 {\n        if n % i\
    \ == 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002abe965bbc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abe962b2561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002abe962b2286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002abe962b213c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002abe962b1bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpmo6go20e                        0x000055aa32ec96c9 <unavailable> + 5833

    6    tmpmo6go20e                        0x000055aa32ec92c8 <unavailable> + 4808

    7    libc.so.6                          0x00002abe967a7460 __libc_start_main +
    245

    8    tmpmo6go20e                        0x000055aa32ec8fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 0\n    for i in 1...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmppcw3itcd/tmppcw3itcd.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3eeab73c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3eea86ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3eea86a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3eea8697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppcw3itcd                        0x000055a9ebf2e335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3eead5f460 __libc_start_main +
    245

    6    tmppcw3itcd                        0x000055a9ebf2dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n/2 {\n       \
    \ if n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002b8a1938ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8a19081561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b8a19081286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b8a1908113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b8a19080bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpyzrdfc4k                        0x0000561cf8dbc6c9 <unavailable> + 5833

    6    tmpyzrdfc4k                        0x0000561cf8dbc2c8 <unavailable> + 4808

    7    libc.so.6                          0x00002b8a19576460 __libc_start_main +
    245

    8    tmpyzrdfc4k                        0x0000561cf8dbbfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var i = n - 1\n    while i > 0 {\n        if n % i == 0 {\n\
    \            return i\n        }\n        i -= 1\n    }\n    return 0\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpcu682hrg/tmpcu682hrg.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd11cbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd119b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd119b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd119b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu682hrg                        0x0000563c1fd5a335 <unavailable> + 4917

    5    libc.so.6                          0x00002abd11ea8460 __libc_start_main +
    245

    6    tmpcu682hrg                        0x0000563c1fd59fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    for i in (1...n/2).reversed() {\n        if n % i == 0 {\n\
    \            return i\n        }\n    }\n    return 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7)\
    \ == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) ==\
    \ 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var divisor = n - 1\n    while n % divisor != 0 {\n     \
    \   divisor -= 1\n    }\n    return divisor\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7) == 1)\n\
    assert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n:\
    \ 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 0\n    for i in 1...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmppcw3itcd/tmppcw3itcd.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3eeab73c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3eea86ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3eea86a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3eea8697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppcw3itcd                        0x000055a9ebf2e335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3eead5f460 __libc_start_main +
    245

    6    tmppcw3itcd                        0x000055a9ebf2dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpcu682hrg/tmpcu682hrg.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd11cbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd119b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd119b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd119b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu682hrg                        0x0000563c1fd5a335 <unavailable> + 4917

    5    libc.so.6                          0x00002abd11ea8460 __libc_start_main +
    245

    6    tmpcu682hrg                        0x0000563c1fd59fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2..<n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n/2 {\n       \
    \ if n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002b8a1938ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8a19081561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b8a19081286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b8a1908113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b8a19080bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpyzrdfc4k                        0x0000561cf8dbc6c9 <unavailable> + 5833

    6    tmpyzrdfc4k                        0x0000561cf8dbc2c8 <unavailable> + 4808

    7    libc.so.6                          0x00002b8a19576460 __libc_start_main +
    245

    8    tmpyzrdfc4k                        0x0000561cf8dbbfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n-1 {\n       \
    \ if n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2..<n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largestDivisor = 1\n    for i in 2..<n {\n        if\
    \ n % i == 0 {\n            largestDivisor = i\n        }\n    }\n    return largestDivisor\n\
    }\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    for i in (1...n/2).reversed() {\n        if n % i == 0 {\n\
    \            return i\n        }\n    }\n    return 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7)\
    \ == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) ==\
    \ 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2..<n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpcu682hrg/tmpcu682hrg.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd11cbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd119b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd119b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd119b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu682hrg                        0x0000563c1fd5a335 <unavailable> + 4917

    5    libc.so.6                          0x00002abd11ea8460 __libc_start_main +
    245

    6    tmpcu682hrg                        0x0000563c1fd59fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 0\n    for i in 1...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmppcw3itcd/tmppcw3itcd.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3eeab73c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3eea86ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3eea86a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3eea8697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppcw3itcd                        0x000055a9ebf2e335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3eead5f460 __libc_start_main +
    245

    6    tmppcw3itcd                        0x000055a9ebf2dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    if n % 2 == 0 {\n        return n / 2\n    }\n    for i in\
    \ stride(from: n - 1, through: 3, by: -1) {\n        if n % i == 0 {\n       \
    \     return i\n        }\n    }\n    return 1\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7) == 1)\n\
    assert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n:\
    \ 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2..<n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 0\n    for i in 1...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmppcw3itcd/tmppcw3itcd.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b3eeab73c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b3eea86ab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b3eea86a988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b3eea8697b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmppcw3itcd                        0x000055a9ebf2e335 <unavailable> + 4917

    5    libc.so.6                          0x00002b3eead5f460 __libc_start_main +
    245

    6    tmppcw3itcd                        0x000055a9ebf2dfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2..<n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpcu682hrg/tmpcu682hrg.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd11cbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd119b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd119b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd119b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu682hrg                        0x0000563c1fd5a335 <unavailable> + 4917

    5    libc.so.6                          0x00002abd11ea8460 __libc_start_main +
    245

    6    tmpcu682hrg                        0x0000563c1fd59fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var divisor = n - 1\n    while n % divisor != 0 {\n     \
    \   divisor -= 1\n    }\n    return divisor\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7) == 1)\n\
    assert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n:\
    \ 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n/2 {\n       \
    \ if n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002b8a1938ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8a19081561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b8a19081286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b8a1908113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b8a19080bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpyzrdfc4k                        0x0000561cf8dbc6c9 <unavailable> + 5833

    6    tmpyzrdfc4k                        0x0000561cf8dbc2c8 <unavailable> + 4808

    7    libc.so.6                          0x00002b8a19576460 __libc_start_main +
    245

    8    tmpyzrdfc4k                        0x0000561cf8dbbfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n/2 {\n        if n % i\
    \ == 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpcu682hrg/tmpcu682hrg.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd11cbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd119b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd119b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd119b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu682hrg                        0x0000563c1fd5a335 <unavailable> + 4917

    5    libc.so.6                          0x00002abd11ea8460 __libc_start_main +
    245

    6    tmpcu682hrg                        0x0000563c1fd59fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n/2 {\n       \
    \ if n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'Swift/ClosedRange.swift:347: Fatal error: Range requires lowerBound <=
    upperBound

    Current stack trace:

    0    libswiftCore.so                    0x00002b8a1938ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b8a19081561 <unavailable> + 1434977

    2    libswiftCore.so                    0x00002b8a19081286 <unavailable> + 1434246

    3    libswiftCore.so                    0x00002b8a1908113c <unavailable> + 1433916

    4    libswiftCore.so                    0x00002b8a19080bb0 _assertionFailure(_:_:file:line:flags:)
    + 251

    5    tmpyzrdfc4k                        0x0000561cf8dbc6c9 <unavailable> + 5833

    6    tmpyzrdfc4k                        0x0000561cf8dbc2c8 <unavailable> + 4808

    7    libc.so.6                          0x00002b8a19576460 __libc_start_main +
    245

    8    tmpyzrdfc4k                        0x0000561cf8dbbfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var divisor = n - 1\n    while n % divisor != 0 {\n     \
    \   divisor -= 1\n    }\n    return divisor\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7) == 1)\n\
    assert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n:\
    \ 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpcu682hrg/tmpcu682hrg.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd11cbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd119b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd119b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd119b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu682hrg                        0x0000563c1fd5a335 <unavailable> + 4917

    5    libc.so.6                          0x00002abd11ea8460 __libc_start_main +
    245

    6    tmpcu682hrg                        0x0000563c1fd59fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var divisor = n - 1\n    while n % divisor != 0 {\n     \
    \   divisor -= 1\n    }\n    return divisor\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7) == 1)\n\
    assert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n:\
    \ 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var divisor = n - 1\n    while n % divisor != 0 {\n     \
    \   divisor -= 1\n    }\n    return divisor\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7) == 1)\n\
    assert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n:\
    \ 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    for i in (1...n/2).reversed() {\n        if n % i == 0 {\n\
    \            return i\n        }\n    }\n    return 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7)\
    \ == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) ==\
    \ 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpcu682hrg/tmpcu682hrg.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002abd11cbcc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002abd119b3b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002abd119b3988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002abd119b27b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcu682hrg                        0x0000563c1fd5a335 <unavailable> + 4917

    5    libc.so.6                          0x00002abd11ea8460 __libc_start_main +
    245

    6    tmpcu682hrg                        0x0000563c1fd59fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    for i in (1...n/2).reversed() {\n        if n % i == 0 {\n\
    \            return i\n        }\n    }\n    return 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7)\
    \ == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) ==\
    \ 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 1\n    for i in 2..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1..<n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest_divisor = 1\n    for i in 2...n {\n        if\
    \ n % i == 0 {\n            largest_divisor = i\n        }\n    }\n    return\
    \ largest_divisor\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) ->\
    \ Bool {\n    if left.count != right.count {\n        return false\n    }\n  \
    \  for (l, r) in zip(left, right) {\n        if l != r {\n            return false\n\
    \        }\n    }\n    return true\n}\n            \nassert(largest_divisor(n:\
    \ 3) == 1)\nassert(largest_divisor(n: 7) == 1)\nassert(largest_divisor(n: 10)\
    \ == 5)\nassert(largest_divisor(n: 100) == 50)\nassert(largest_divisor(n: 49)\
    \ == 7)"
  status: Exception
  stderr: 'tmpo_kcn_cp/tmpo_kcn_cp.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af5ce7cfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af5ce4c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af5ce4c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af5ce4c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpo_kcn_cp                        0x0000560cf34d5335 <unavailable> + 4917

    5    libc.so.6                          0x00002af5ce9bb460 __libc_start_main +
    245

    6    tmpo_kcn_cp                        0x0000560cf34d4fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356
- exit_code: 0
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    for i in (1...n/2).reversed() {\n        if n % i == 0 {\n\
    \            return i\n        }\n    }\n    return 1\n}\n\n\nfunc ==(left: [(Int,\
    \ Int)], right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n\
    \        return false\n    }\n    for (l, r) in zip(left, right) {\n        if\
    \ l != r {\n            return false\n        }\n    }\n    return true\n}\n \
    \           \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n: 7)\
    \ == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100) ==\
    \ 50)\nassert(largest_divisor(n: 49) == 7)"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659824356
- exit_code: -4
  program: "\n/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\n/// >>> largest_divisor(n: 15)\n/// 5\nfunc largest_divisor(n:\
    \ Int) -> Int {\n    var largest = 0\n    for i in 1...n {\n        if n % i ==\
    \ 0 {\n            largest = i\n        }\n    }\n    return largest\n}\n\n\n\
    func ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(largest_divisor(n: 3) == 1)\nassert(largest_divisor(n:\
    \ 7) == 1)\nassert(largest_divisor(n: 10) == 5)\nassert(largest_divisor(n: 100)\
    \ == 50)\nassert(largest_divisor(n: 49) == 7)"
  status: Exception
  stderr: 'tmpvq4mn79d/tmpvq4mn79d.swift:28: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b94b9bcfc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b94b98c6b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b94b98c6988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b94b98c57b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpvq4mn79d                        0x000055b012dad335 <unavailable> + 4917

    5    libc.so.6                          0x00002b94b9dbb460 __libc_start_main +
    245

    6    tmpvq4mn79d                        0x000055b012dacfe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1659824356

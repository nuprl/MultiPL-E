name: HumanEval_110_exchange
language: swift
prompt: "\n/// In this problem, you will implement a function that takes two arrays\
  \ of numbers,\n/// and determines whether it is possible to perform an exchange\
  \ of elements\n/// between them to make lst1 an array of only even numbers.\n///\
  \ There is no limit on the number of exchanged elements between lst1 and lst2.\n\
  /// If it is possible to exchange elements between the lst1 and lst2 to make\n///\
  \ all the elements of lst1 to be even, return \"YES\".\n/// Otherwise, return \"\
  NO\".\n/// For example:\n/// >>> exchange(lst1: [1, 2, 3, 4], lst2: [1, 2, 3, 4])\n\
  /// \"YES\"\n/// >>> exchange(lst1: [1, 2, 3, 4], lst2: [1, 5, 3, 4])\n/// \"NO\"\
  \n/// It is assumed that the input arrays will be non-empty.\nfunc exchange(lst1:\
  \ [Int], lst2: [Int]) -> String {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(exchange(lst1: [1, 2, 3, 4], lst2: [1, 2,\
  \ 3, 4]) == \"YES\")\nassert(exchange(lst1: [1, 2, 3, 4], lst2: [1, 5, 3, 4]) ==\
  \ \"NO\")\nassert(exchange(lst1: [1, 2, 3, 4], lst2: [2, 1, 4, 3]) == \"YES\")\n\
  assert(exchange(lst1: [5, 7, 3], lst2: [2, 6, 4]) == \"YES\")\nassert(exchange(lst1:\
  \ [5, 7, 3], lst2: [2, 6, 3]) == \"NO\")\nassert(exchange(lst1: [3, 2, 6, 1, 8,\
  \ 9], lst2: [3, 5, 5, 1, 1, 1]) == \"NO\")\nassert(exchange(lst1: [100, 200], lst2:\
  \ [200, 200]) == \"YES\")"
completions: ["    var lst1 = lst1\n    var lst2 = lst2\n    var isExchange = false\n\
    \    for i in 0..<lst1.count {\n        if lst1[i] % 2 != 0 {\n            for\
    \ j in 0..<lst2.count {\n                if lst2[j] % 2 == 0 {\n             \
    \       lst1[i] = lst2[j]\n                    lst2[j] = lst1[i]\n           \
    \         isExchange = true\n                    break\n                }\n  \
    \          }\n        }\n        if !isExchange {\n            return \"NO\"\n\
    \        }\n    }\n    return \"YES\"", "    var lst1 = lst1\n    var lst2 = lst2\n\
    \    for i in 0..<lst1.count {\n        if lst1[i] % 2 != 0 {\n            for\
    \ j in 0..<lst2.count {\n                if lst2[j] % 2 == 0 {\n             \
    \       lst1[i] = lst2[j]\n                    lst2[j] = lst1[i]\n           \
    \         break\n                }\n            }\n        }\n    }\n    for i\
    \ in 0..<lst1.count {\n        if lst1[i] % 2 != 0 {\n            return \"NO\"\
    \n        }\n    }\n    return \"YES\"", "    let lst1Even = lst1.filter { $0\
    \ % 2 == 0 }\n    let lst2Even = lst2.filter { $0 % 2 == 0 }\n    if lst1Even.count\
    \ == lst1.count || lst2Even.count == lst2.count {\n        return \"YES\"\n  \
    \  }\n    return \"NO\"", "    var lst1 = lst1\n    var lst2 = lst2\n    var isExchange\
    \ = false\n    for i in 0..<lst1.count {\n        if lst1[i] % 2 != 0 {\n    \
    \        for j in 0..<lst2.count {\n                if lst2[j] % 2 == 0 {\n  \
    \                  lst1[i] = lst2[j]\n                    lst2[j] = lst1[i]\n\
    \                    isExchange = true\n                    break\n          \
    \      }\n            }\n        }\n        if !isExchange {\n            return\
    \ \"NO\"\n        }\n    }\n    return \"YES\"", "    var lst1 = lst1\n    var\
    \ lst2 = lst2\n    var i = 0\n    while i < lst1.count {\n        if lst1[i] %\
    \ 2 == 1 {\n            var j = 0\n            while j < lst2.count {\n      \
    \          if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j]\n    \
    \                lst2[j] = lst1[i]\n                    break\n              \
    \  }\n                j += 1\n            }\n            if j == lst2.count {\n\
    \                return \"NO\"\n            }\n        }\n        i += 1\n   \
    \ }\n    return \"YES\"", "    var lst1 = lst1\n    var lst2 = lst2\n    var lst1Even\
    \ = lst1.filter { $0 % 2 == 0 }\n    var lst2Even = lst2.filter { $0 % 2 == 0\
    \ }\n    var lst1Odd = lst1.filter { $0 % 2 != 0 }\n    var lst2Odd = lst2.filter\
    \ { $0 % 2 != 0 }\n    if lst1Even.count == lst1.count && lst2Even.count == lst2.count\
    \ {\n        return \"YES\"\n    } else if lst1Odd.count == lst1.count && lst2Odd.count\
    \ == lst2.count {\n        return \"YES\"\n    } else if lst1Even.count == lst1.count\
    \ {\n        return \"YES\"\n    } else if lst2Even.count == lst2.count {\n  \
    \      return \"YES\"\n    } else if lst1Odd.count == lst1.count {\n        return\
    \ \"YES\"\n    } else if lst2Odd.count == lst2.count {\n        return \"YES\"\
    \n    } else {\n        return \"NO\"\n    }", "    let evens = lst1.filter {\
    \ $0 % 2 == 0 }\n    let odds = lst2.filter { $0 % 2 != 0 }\n    return evens.count\
    \ + odds.count == lst1.count + lst2.count ? \"YES\" : \"NO\"", "    var lst1 =\
    \ lst1\n    var lst2 = lst2\n    var evenCount = 0\n    for i in 0..<lst1.count\
    \ {\n        if lst1[i] % 2 == 0 {\n            evenCount += 1\n        }\n  \
    \  }\n    if evenCount == lst1.count {\n        return \"YES\"\n    }\n    var\
    \ oddCount = 0\n    for i in 0..<lst2.count {\n        if lst2[i] % 2 != 0 {\n\
    \            oddCount += 1\n        }\n    }\n    if oddCount == lst2.count {\n\
    \        return \"NO\"\n    }\n    var evenCount1 = 0\n    for i in 0..<lst1.count\
    \ {\n        if lst1[i] % 2 == 0 {\n            evenCount1 += 1\n        }\n \
    \   }\n    if evenCount1 == lst1.count {\n        return \"YES\"\n    }\n    return\
    \ \"NO\"", "    var lst1 = lst1\n    var lst2 = lst2\n    var evens = 0\n    var\
    \ odds = 0\n    for i in lst1 {\n        if i % 2 == 0 {\n            evens +=\
    \ 1\n        } else {\n            odds += 1\n        }\n    }\n    for i in lst2\
    \ {\n        if i % 2 == 0 {\n            evens += 1\n        } else {\n     \
    \       odds += 1\n        }\n    }\n    if odds % 2 == 0 {\n        return \"\
    YES\"\n    } else {\n        return \"NO\"\n    }", "    let lst1Even = lst1.filter\
    \ { $0 % 2 == 0 }\n    let lst2Even = lst2.filter { $0 % 2 == 0 }\n    let lst1Odd\
    \ = lst1.filter { $0 % 2 != 0 }\n    let lst2Odd = lst2.filter { $0 % 2 != 0 }\n\
    \    if lst1Even.count + lst2Even.count == lst1.count + lst2.count {\n       \
    \ return \"YES\"\n    } else if lst1Odd.count + lst2Odd.count == lst1.count +\
    \ lst2.count {\n        return \"YES\"\n    } else {\n        return \"NO\"\n\
    \    }", "    var lst1 = lst1\n    var lst2 = lst2\n    var lst1Even = lst1.filter\
    \ { $0 % 2 == 0 }\n    var lst2Even = lst2.filter { $0 % 2 == 0 }\n    var lst1Odd\
    \ = lst1.filter { $0 % 2 != 0 }\n    var lst2Odd = lst2.filter { $0 % 2 != 0 }\n\
    \    if lst1Even.count == lst1.count {\n        return \"YES\"\n    } else if\
    \ lst2Even.count == lst2.count {\n        return \"YES\"\n    } else if lst1Odd.count\
    \ == lst1.count {\n        return \"NO\"\n    } else if lst2Odd.count == lst2.count\
    \ {\n        return \"NO\"\n    } else {\n        return \"YES\"\n    }", "  \
    \  var lst1 = lst1\n    var lst2 = lst2\n    var evens = 0\n    var odds = 0\n\
    \    for i in lst1 {\n        if i % 2 == 0 {\n            evens += 1\n      \
    \  } else {\n            odds += 1\n        }\n    }\n    for i in lst2 {\n  \
    \      if i % 2 == 0 {\n            evens += 1\n        } else {\n           \
    \ odds += 1\n        }\n    }\n    if evens % 2 == 0 && odds % 2 == 0 {\n    \
    \    return \"YES\"\n    } else {\n        return \"NO\"\n    }", "    var lst1\
    \ = lst1\n    var lst2 = lst2\n    var result = \"NO\"\n    for i in 0..<lst1.count\
    \ {\n        if lst1[i] % 2 != 0 {\n            for j in 0..<lst2.count {\n  \
    \              if lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j]\n\
    \                    lst2[j] = lst1[i]\n                    result = \"YES\"\n\
    \                    break\n                }\n            }\n        }\n    }\n\
    \    return result", "    var lst1 = lst1\n    var lst2 = lst2\n    var i = 0\n\
    \    var j = 0\n    while i < lst1.count && j < lst2.count {\n        if lst1[i]\
    \ % 2 == 0 {\n            i += 1\n        } else if lst2[j] % 2 == 1 {\n     \
    \       j += 1\n        } else {\n            let temp = lst1[i]\n           \
    \ lst1[i] = lst2[j]\n            lst2[j] = temp\n            i += 1\n        \
    \    j += 1\n        }\n    }\n    return lst1.allSatisfy { $0 % 2 == 0 } ? \"\
    YES\" : \"NO\"", "    var lst1 = lst1\n    var lst2 = lst2\n    var i = 0\n  \
    \  while i < lst1.count {\n        if lst1[i] % 2 == 1 {\n            var j =\
    \ 0\n            while j < lst2.count {\n                if lst2[j] % 2 == 0 {\n\
    \                    lst1[i] = lst2[j]\n                    lst2[j] = lst1[i]\n\
    \                    break\n                }\n                j += 1\n      \
    \      }\n            if j == lst2.count {\n                return \"NO\"\n  \
    \          }\n        }\n        i += 1\n    }\n    return \"YES\"", "    var\
    \ lst1 = lst1\n    var lst2 = lst2\n    for i in 0..<lst1.count {\n        if\
    \ lst1[i] % 2 != 0 {\n            for j in 0..<lst2.count {\n                if\
    \ lst2[j] % 2 == 0 {\n                    lst1[i] = lst2[j]\n                \
    \    lst2[j] = lst1[i]\n                    break\n                }\n       \
    \     }\n        }\n    }\n    for i in 0..<lst1.count {\n        if lst1[i] %\
    \ 2 != 0 {\n            return \"NO\"\n        }\n    }\n    return \"YES\"",
  "    var evens = 0\n    var odds = 0\n    for num in lst1 {\n        if num % 2\
    \ == 0 {\n            evens += 1\n        } else {\n            odds += 1\n  \
    \      }\n    }\n    for num in lst2 {\n        if num % 2 == 0 {\n          \
    \  evens += 1\n        } else {\n            odds += 1\n        }\n    }\n   \
    \ if odds % 2 == 0 {\n        return \"YES\"\n    } else {\n        return \"\
    NO\"\n    }", "    var evens = 0\n    var odds = 0\n    for num in lst1 {\n  \
    \      if num % 2 == 0 {\n            evens += 1\n        } else {\n         \
    \   odds += 1\n        }\n    }\n    for num in lst2 {\n        if num % 2 ==\
    \ 0 {\n            evens += 1\n        } else {\n            odds += 1\n     \
    \   }\n    }\n    if evens % 2 == 0 && odds % 2 == 0 {\n        return \"YES\"\
    \n    } else {\n        return \"NO\"\n    }", "    var lst1 = lst1\n    var lst2\
    \ = lst2\n    var lst1Even = lst1.filter { $0 % 2 == 0 }\n    var lst2Even = lst2.filter\
    \ { $0 % 2 == 0 }\n    var lst1Odd = lst1.filter { $0 % 2 != 0 }\n    var lst2Odd\
    \ = lst2.filter { $0 % 2 != 0 }\n    if lst1Even.count == lst1.count && lst2Even.count\
    \ == lst2.count {\n        return \"YES\"\n    } else if lst1Odd.count == lst1.count\
    \ && lst2Odd.count == lst2.count {\n        return \"YES\"\n    } else if lst1Even.count\
    \ == lst1.count && lst2Odd.count == lst2.count {\n        return \"NO\"\n    }\
    \ else if lst1Odd.count == lst1.count && lst2Even.count == lst2.count {\n    \
    \    return \"NO\"\n    } else if lst1Even.count == lst1.count && lst2Even.count\
    \ != lst2.count {\n        return \"YES\"\n    } else if lst1Odd.count == lst1.count\
    \ && lst2Even.count != lst2.count {\n        return \"NO\"\n    } else if lst1Even.count\
    \ != lst1.count && lst2Even.count == lst2.count {\n        return \"YES\"\n  \
    \  } else if lst1Even.count != lst1.count && lst2Odd.count == lst2.count {\n \
    \       return \"NO\"\n    } else if lst1Even.count != lst1.count && lst2Even.count\
    \ != lst2.count {\n        return \"YES\"\n    } else {\n        return \"NO\"\
    \n    }", "    var lst1 = lst1\n    var lst2 = lst2\n    var evens = [Int]()\n\
    \    var odds = [Int]()\n    for i in lst1 {\n        if i % 2 == 0 {\n      \
    \      evens.append(i)\n        } else {\n            odds.append(i)\n       \
    \ }\n    }\n    for i in lst2 {\n        if i % 2 == 0 {\n            evens.append(i)\n\
    \        } else {\n            odds.append(i)\n        }\n    }\n    if odds.count\
    \ > evens.count {\n        return \"NO\"\n    } else {\n        return \"YES\"\
    \n    }"]
stop_tokens:
- "\n}"

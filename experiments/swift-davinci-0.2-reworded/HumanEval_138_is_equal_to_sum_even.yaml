name: HumanEval_138_is_equal_to_sum_even
language: swift
prompt: "\n/// Evaluate whether the given number n can be written as the sum of exactly\
  \ 4 positive even numbers\n/// Example\n/// >>> is_equal_to_sum_even(n: 4)\n///\
  \ false\n/// >>> is_equal_to_sum_even(n: 6)\n/// false\n/// >>> is_equal_to_sum_even(n:\
  \ 8)\n/// true\nfunc is_equal_to_sum_even(n: Int) -> Bool {\n"
tests: "}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if\
  \ left.count != right.count {\n        return false\n    }\n    for (l, r) in zip(left,\
  \ right) {\n        if l != r {\n            return false\n        }\n    }\n  \
  \  return true\n}\n            \nassert(is_equal_to_sum_even(n: 4) == false)\nassert(is_equal_to_sum_even(n:\
  \ 6) == false)\nassert(is_equal_to_sum_even(n: 8) == true)\nassert(is_equal_to_sum_even(n:\
  \ 10) == true)\nassert(is_equal_to_sum_even(n: 11) == false)\nassert(is_equal_to_sum_even(n:\
  \ 12) == true)\nassert(is_equal_to_sum_even(n: 13) == false)\nassert(is_equal_to_sum_even(n:\
  \ 16) == true)"
completions: ["    var result = false\n    var sum = 0\n    var count = 0\n    for\
    \ i in 1...n {\n        if i % 2 == 0 {\n            sum += i\n            count\
    \ += 1\n        }\n        if sum == n && count == 4 {\n            result = true\n\
    \        }\n    }\n    return result", '    return false', "    // your code here\n\
    \    return false", '    return false', '    return false', "    if n % 2 != 0\
    \ {\n        return false\n    }\n    if n < 8 {\n        return false\n    }\n\
    \    var sum = 0\n    for i in 1...n {\n        if i % 2 == 0 {\n            sum\
    \ += i\n        }\n        if sum == n {\n            return true\n        }\n\
    \    }\n    return false", '    return false', "    // your code here\n    return\
    \ false", "    var result = false\n    var sum = 0\n    var i = 1\n    while i\
    \ <= n {\n        if i % 2 == 0 {\n            sum += i\n            if sum ==\
    \ n {\n                result = true\n                break\n            }\n \
    \       }\n        i += 1\n    }\n    return result", "    // your code here\n\
    \    return false", '    return false', '    return false', '    return false',
  '    return false', '    return false', "    if n % 2 != 0 {\n        return false\n\
    \    }\n    if n == 0 {\n        return true\n    }\n    return is_equal_to_sum_even(n:\
    \ n - 2)", '    return false', '    return false', '    return false', '    return
    false']
stop_tokens:
- "\n}"

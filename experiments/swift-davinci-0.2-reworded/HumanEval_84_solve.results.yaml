language: swift
name: HumanEval_84_solve
results:
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpt92mjhaw/tmpt92mjhaw.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb2aef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb2abebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb2abeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb2abea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt92mjhaw                        0x000055b7cb1ca493 <unavailable> + 5267

    5    libc.so.6                          0x00002aeb2b0e0460 __libc_start_main +
    245

    6    tmpt92mjhaw                        0x000055b7cb1ca0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var result = \"\"\
    \n    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmprf2mio6k/tmprf2mio6k.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae1f4889c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae1f4580b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae1f4580988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae1f457f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprf2mio6k                        0x000055b9406a7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae1f4a75460 __libc_start_main +
    245

    6    tmprf2mio6k                        0x000055b9406a70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = \"\\(n % 2)\" + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulfbetud/tmpulfbetud.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acaf2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acaf2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acaf2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acaf28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulfbetud                        0x00005586da0db623 <unavailable> + 5667

    5    libc.so.6                          0x00002acaf2d36460 __libc_start_main +
    245

    6    tmpulfbetud                        0x00005586da0db289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var result = \"\"\
    \n    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmprf2mio6k/tmprf2mio6k.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae1f4889c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae1f4580b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae1f4580988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae1f457f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprf2mio6k                        0x000055b9406a7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae1f4a75460 __libc_start_main +
    245

    6    tmprf2mio6k                        0x000055b9406a70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binary = \"\"\n    var num =\
    \ N\n    while num > 0 {\n        binary = String(num % 2) + binary\n        num\
    \ /= 2\n    }\n    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int,\
    \ Int)]) -> Bool {\n    if left.count != right.count {\n        return false\n\
    \    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n          \
    \  return false\n        }\n    }\n    return true\n}\n            \nassert(solve(N:\
    \ 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"\
    1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmposbqldzi/tmposbqldzi.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b14b3ce3c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b14b39dab6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b14b39da988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b14b39d97b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmposbqldzi                        0x000055ffa414d493 <unavailable> + 5267

    5    libc.so.6                          0x00002b14b3ecf460 __libc_start_main +
    245

    6    tmposbqldzi                        0x000055ffa414d0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binary = \"\"\n    var n = N\n\
    \    while n > 0 {\n        binary = String(n % 2) + binary\n        n /= 2\n\
    \    }\n    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp9rkyyv3s/tmp9rkyyv3s.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9e5f1eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9e5eee1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9e5eee1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9e5eee07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9rkyyv3s                        0x00005611e5306493 <unavailable> + 5267

    5    libc.so.6                          0x00002b9e5f3d6460 __libc_start_main +
    245

    6    tmp9rkyyv3s                        0x00005611e53060f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpt92mjhaw/tmpt92mjhaw.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb2aef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb2abebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb2abeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb2abea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt92mjhaw                        0x000055b7cb1ca493 <unavailable> + 5267

    5    libc.so.6                          0x00002aeb2b0e0460 __libc_start_main +
    245

    6    tmpt92mjhaw                        0x000055b7cb1ca0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpt92mjhaw/tmpt92mjhaw.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb2aef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb2abebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb2abeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb2abea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt92mjhaw                        0x000055b7cb1ca493 <unavailable> + 5267

    5    libc.so.6                          0x00002aeb2b0e0460 __libc_start_main +
    245

    6    tmpt92mjhaw                        0x000055b7cb1ca0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpt92mjhaw/tmpt92mjhaw.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb2aef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb2abebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb2abeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb2abea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt92mjhaw                        0x000055b7cb1ca493 <unavailable> + 5267

    5    libc.so.6                          0x00002aeb2b0e0460 __libc_start_main +
    245

    6    tmpt92mjhaw                        0x000055b7cb1ca0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binary = \"\"\n    var n = N\n\
    \    while n > 0 {\n        binary = String(n % 2) + binary\n        n /= 2\n\
    \    }\n    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp9rkyyv3s/tmp9rkyyv3s.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9e5f1eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9e5eee1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9e5eee1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9e5eee07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9rkyyv3s                        0x00005611e5306493 <unavailable> + 5267

    5    libc.so.6                          0x00002b9e5f3d6460 __libc_start_main +
    245

    6    tmp9rkyyv3s                        0x00005611e53060f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var result = \"\"\
    \n    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmprf2mio6k/tmprf2mio6k.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae1f4889c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae1f4580b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae1f4580988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae1f457f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprf2mio6k                        0x000055b9406a7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae1f4a75460 __libc_start_main +
    245

    6    tmprf2mio6k                        0x000055b9406a70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var temp\
    \ = N\n    while temp > 0 {\n        result = String(temp % 2) + result\n    \
    \    temp /= 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right:\
    \ [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n        return\
    \ false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r {\n  \
    \          return false\n        }\n    }\n    return true\n}\n            \n\
    assert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpt5u6mzg1/tmpt5u6mzg1.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b6f326dec80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6f323d5b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6f323d5988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b6f323d47b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt5u6mzg1                        0x0000560354d41493 <unavailable> + 5267

    5    libc.so.6                          0x00002b6f328ca460 __libc_start_main +
    245

    6    tmpt5u6mzg1                        0x0000560354d410f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = \"\\(n % 2)\" + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulfbetud/tmpulfbetud.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acaf2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acaf2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acaf2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acaf28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulfbetud                        0x00005586da0db623 <unavailable> + 5667

    5    libc.so.6                          0x00002acaf2d36460 __libc_start_main +
    245

    6    tmpulfbetud                        0x00005586da0db289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = \"\\(n % 2)\" + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulfbetud/tmpulfbetud.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acaf2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acaf2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acaf2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acaf28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulfbetud                        0x00005586da0db623 <unavailable> + 5667

    5    libc.so.6                          0x00002acaf2d36460 __libc_start_main +
    245

    6    tmpulfbetud                        0x00005586da0db289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var number\
    \ = N\n    while number > 0 {\n        result = String(number % 2) + result\n\
    \        number /= 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpcbv7wegt/tmpcbv7wegt.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af03e0c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af03ddb8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af03ddb8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af03ddb77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcbv7wegt                        0x00005570b32a0493 <unavailable> + 5267

    5    libc.so.6                          0x00002af03e2ad460 __libc_start_main +
    245

    6    tmpcbv7wegt                        0x00005570b32a00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpt92mjhaw/tmpt92mjhaw.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb2aef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb2abebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb2abeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb2abea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt92mjhaw                        0x000055b7cb1ca493 <unavailable> + 5267

    5    libc.so.6                          0x00002aeb2b0e0460 __libc_start_main +
    245

    6    tmpt92mjhaw                        0x000055b7cb1ca0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var result = \"\"\
    \n    while n > 0 {\n        result = \"\\(n % 2)\" + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpst5sjcqz/tmpst5sjcqz.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b0252500c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b02521f7b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b02521f7988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b02521f67b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpst5sjcqz                        0x0000559a5d8a1623 <unavailable> + 5667

    5    libc.so.6                          0x00002b02526ec460 __libc_start_main +
    245

    6    tmpst5sjcqz                        0x0000559a5d8a1289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var number\
    \ = N\n    while number > 0 {\n        result = String(number % 2) + result\n\
    \        number /= 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpcbv7wegt/tmpcbv7wegt.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af03e0c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af03ddb8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af03ddb8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af03ddb77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcbv7wegt                        0x00005570b32a0493 <unavailable> + 5267

    5    libc.so.6                          0x00002af03e2ad460 __libc_start_main +
    245

    6    tmpcbv7wegt                        0x00005570b32a00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binary = \"\"\n    var number\
    \ = N\n    while number > 0 {\n        binary = String(number % 2) + binary\n\
    \        number /= 2\n    }\n    return binary\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpxejlksmh/tmpxejlksmh.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b41f7dadc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b41f7aa4b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b41f7aa4988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b41f7aa37b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxejlksmh                        0x000055c4b11b4493 <unavailable> + 5267

    5    libc.so.6                          0x00002b41f7f99460 __libc_start_main +
    245

    6    tmpxejlksmh                        0x000055c4b11b40f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpt92mjhaw/tmpt92mjhaw.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb2aef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb2abebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb2abeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb2abea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt92mjhaw                        0x000055b7cb1ca493 <unavailable> + 5267

    5    libc.so.6                          0x00002aeb2b0e0460 __libc_start_main +
    245

    6    tmpt92mjhaw                        0x000055b7cb1ca0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        result = \"\\(N % 2)\" + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpjhh52zqc/tmpjhh52zqc.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b2d4ce21c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b2d4cb18b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b2d4cb18988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b2d4cb177b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpjhh52zqc                        0x0000557248da4623 <unavailable> + 5667

    5    libc.so.6                          0x00002b2d4d00d460 __libc_start_main +
    245

    6    tmpjhh52zqc                        0x0000557248da4289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result.append(String(N % 2))\n        N /= 2\n   \
    \ }\n    return String(result.reversed())\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpc5kbxl2h/tmpc5kbxl2h.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0c656cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0c6263b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0c6263988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0c62627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc5kbxl2h                        0x000055fc82077673 <unavailable> + 5747

    5    libc.so.6                          0x00002ad0c6758460 __libc_start_main +
    245

    6    tmpc5kbxl2h                        0x000055fc820772d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binary = \"\"\n    var n = N\n\
    \    while n > 0 {\n        binary = String(n % 2) + binary\n        n /= 2\n\
    \    }\n    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp9rkyyv3s/tmp9rkyyv3s.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9e5f1eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9e5eee1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9e5eee1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9e5eee07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9rkyyv3s                        0x00005611e5306493 <unavailable> + 5267

    5    libc.so.6                          0x00002b9e5f3d6460 __libc_start_main +
    245

    6    tmp9rkyyv3s                        0x00005611e53060f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var n = N\n    var result = \"\"\
    \n    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmprf2mio6k/tmprf2mio6k.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae1f4889c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae1f4580b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae1f4580988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae1f457f7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmprf2mio6k                        0x000055b9406a7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae1f4a75460 __libc_start_main +
    245

    6    tmprf2mio6k                        0x000055b9406a70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var number\
    \ = N\n    while number > 0 {\n        result = String(number % 2) + result\n\
    \        number /= 2\n    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpcbv7wegt/tmpcbv7wegt.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002af03e0c1c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002af03ddb8b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002af03ddb8988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002af03ddb77b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpcbv7wegt                        0x00005570b32a0493 <unavailable> + 5267

    5    libc.so.6                          0x00002af03e2ad460 __libc_start_main +
    245

    6    tmpcbv7wegt                        0x00005570b32a00f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpt92mjhaw/tmpt92mjhaw.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb2aef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb2abebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb2abeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb2abea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt92mjhaw                        0x000055b7cb1ca493 <unavailable> + 5267

    5    libc.so.6                          0x00002aeb2b0e0460 __libc_start_main +
    245

    6    tmpt92mjhaw                        0x000055b7cb1ca0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result.append(String(N % 2))\n        N /= 2\n   \
    \ }\n    return String(result.reversed())\n}\n\n\nfunc ==(left: [(Int, Int)],\
    \ right: [(Int, Int)]) -> Bool {\n    if left.count != right.count {\n       \
    \ return false\n    }\n    for (l, r) in zip(left, right) {\n        if l != r\
    \ {\n            return false\n        }\n    }\n    return true\n}\n        \
    \    \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N:\
    \ 147) == \"1100\")\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) ==\
    \ \"10010\")"
  status: Exception
  stderr: 'tmpc5kbxl2h/tmpc5kbxl2h.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ad0c656cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ad0c6263b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ad0c6263988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ad0c62627b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpc5kbxl2h                        0x000055fc82077673 <unavailable> + 5747

    5    libc.so.6                          0x00002ad0c6758460 __libc_start_main +
    245

    6    tmpc5kbxl2h                        0x000055fc820772d9 <unavailable> + 4825

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = \"\\(n % 2)\" + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulfbetud/tmpulfbetud.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acaf2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acaf2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acaf2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acaf28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulfbetud                        0x00005586da0db623 <unavailable> + 5667

    5    libc.so.6                          0x00002acaf2d36460 __libc_start_main +
    245

    6    tmpulfbetud                        0x00005586da0db289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpt92mjhaw/tmpt92mjhaw.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb2aef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb2abebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb2abeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb2abea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt92mjhaw                        0x000055b7cb1ca493 <unavailable> + 5267

    5    libc.so.6                          0x00002aeb2b0e0460 __libc_start_main +
    245

    6    tmpt92mjhaw                        0x000055b7cb1ca0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var N = N\n\
    \    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmplfqy034o/tmplfqy034o.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002afa37208c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002afa36effb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002afa36eff988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002afa36efe7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmplfqy034o                        0x000055fb0e17f493 <unavailable> + 5267

    5    libc.so.6                          0x00002afa373f4460 __libc_start_main +
    245

    6    tmplfqy034o                        0x000055fb0e17f0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var binary = \"\"\n    var n = N\n\
    \    while n > 0 {\n        binary = String(n % 2) + binary\n        n /= 2\n\
    \    }\n    return binary\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp9rkyyv3s/tmp9rkyyv3s.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b9e5f1eac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b9e5eee1b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b9e5eee1988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b9e5eee07b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp9rkyyv3s                        0x00005611e5306493 <unavailable> + 5267

    5    libc.so.6                          0x00002b9e5f3d6460 __libc_start_main +
    245

    6    tmp9rkyyv3s                        0x00005611e53060f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var N = N\n    var result = \"\"\
    \n    while N > 0 {\n        result = String(N % 2) + result\n        N /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpt92mjhaw/tmpt92mjhaw.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002aeb2aef4c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002aeb2abebb6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002aeb2abeb988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002aeb2abea7b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpt92mjhaw                        0x000055b7cb1ca493 <unavailable> + 5267

    5    libc.so.6                          0x00002aeb2b0e0460 __libc_start_main +
    245

    6    tmpt92mjhaw                        0x000055b7cb1ca0f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    return String(N, radix: 2)\n}\n\n\
    \nfunc ==(left: [(Int, Int)], right: [(Int, Int)]) -> Bool {\n    if left.count\
    \ != right.count {\n        return false\n    }\n    for (l, r) in zip(left, right)\
    \ {\n        if l != r {\n            return false\n        }\n    }\n    return\
    \ true\n}\n            \nassert(solve(N: 1000) == \"1\")\nassert(solve(N: 150)\
    \ == \"110\")\nassert(solve(N: 147) == \"1100\")\nassert(solve(N: 333) == \"1001\"\
    )\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmp58gke1jd/tmp58gke1jd.swift:32: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002b661179cc80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002b6611493b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002b6611493988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002b66114927b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmp58gke1jd                        0x000055dfab375383 <unavailable> + 4995

    5    libc.so.6                          0x00002b6611988460 __libc_start_main +
    245

    6    tmp58gke1jd                        0x000055dfab374fe9 <unavailable> + 4073

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = \"\\(n % 2)\" + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpulfbetud/tmpulfbetud.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002acaf2b4ac80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002acaf2841b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002acaf2841988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002acaf28407b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpulfbetud                        0x00005586da0db623 <unavailable> + 5667

    5    libc.so.6                          0x00002acaf2d36460 __libc_start_main +
    245

    6    tmpulfbetud                        0x00005586da0db289 <unavailable> + 4745

    '
  stdout: ''
  timestamp: 1660013845
- exit_code: -4
  program: "\n/// Given a positive integer N, return the total sum of its digits in\
    \ binary.\n/// Example\n/// >>> solve(N: 1000)\n/// \"1\"\n/// >>> solve(N: 150)\n\
    /// \"110\"\n/// >>> solve(N: 147)\n/// \"1100\"\n/// Variables:\n/// @N integer\n\
    /// Constraints: 0 \u2264 N \u2264 10000.\n/// Output:\n/// a string of binary\
    \ number\nfunc solve(N: Int) -> String {\n    var result = \"\"\n    var n = N\n\
    \    while n > 0 {\n        result = String(n % 2) + result\n        n /= 2\n\
    \    }\n    return result\n}\n\n\nfunc ==(left: [(Int, Int)], right: [(Int, Int)])\
    \ -> Bool {\n    if left.count != right.count {\n        return false\n    }\n\
    \    for (l, r) in zip(left, right) {\n        if l != r {\n            return\
    \ false\n        }\n    }\n    return true\n}\n            \nassert(solve(N: 1000)\
    \ == \"1\")\nassert(solve(N: 150) == \"110\")\nassert(solve(N: 147) == \"1100\"\
    )\nassert(solve(N: 333) == \"1001\")\nassert(solve(N: 963) == \"10010\")"
  status: Exception
  stderr: 'tmpxbr5_tng/tmpxbr5_tng.swift:38: Assertion failed

    Current stack trace:

    0    libswiftCore.so                    0x00002ae2817a2c80 _swift_stdlib_reportFatalErrorInFile
    + 112

    1    libswiftCore.so                    0x00002ae281499b6c <unavailable> + 1436524

    2    libswiftCore.so                    0x00002ae281499988 <unavailable> + 1436040

    3    libswiftCore.so                    0x00002ae2814987b0 _assertionFailure(_:_:file:line:flags:)
    + 699

    4    tmpxbr5_tng                        0x000055fe2dfa7493 <unavailable> + 5267

    5    libc.so.6                          0x00002ae28198e460 __libc_start_main +
    245

    6    tmpxbr5_tng                        0x000055fe2dfa70f9 <unavailable> + 4345

    '
  stdout: ''
  timestamp: 1660013845

name: HumanEval_70_strange_sort_list
language: rs
prompt: "/// Given list of integers, return list in strange order.\n/// Strange sorting,\
  \ is when you start with the minimum value,\n/// then maximum of the remaining integers,\
  \ then minimum and so on.\n/// Examples:\nfn strange_sort_list(lst: Vec<isize>)\
  \ -> Vec<isize> {\n"
tests: "}\n\nfn main() {\n    let candidate = strange_sort_list;\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left},\
  \ {right});\n    assert_eq!({left}, {right});\n    assert_eq!({left}, {right});\n\
  \    assert_eq!({left}, {right});\n}\n"
completions: []
stop_tokens:
- "\n}"

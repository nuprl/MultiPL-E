language: rs
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpl9psm_d7.rs:63:17\n   |\n\
    63 |     let mut max_\n   |                 ^ help: add `;` here\n64 | }\n   |\
    \ - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpl9psm_d7.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..n {\n        if\
    \ n % i == 0 {\n            if max_divisor < i {\n                max_divisor\
    \ = i;\n                max_divisor_remainder = n % i;\n            }\n      \
    \  }\n    }\n    max_divisor_remainder\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpke_koai0.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \            }\n            if max_divisor_value < i {\n                max_divisor_value\
    \ = i;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpuwpckrvo.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = divisor;\n            } else if divisor == max_divisor {\n               \
    \ max_divisor_size = divisor + 1;\n            }\n        }\n    }\n\n    if max_divisor_size\
    \ != max_divisor {\n        max_divisor_value = max_divisor_size / max_divisor;\n\
    \    }\n\n    max_divisor_value\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkny9hln7.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n\n    max_divisor_index\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpl0gvppe9.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for d in divisors(n) {\n      \
    \  if n % d == 0 {\n            if d > max_divisor {\n                max_divisor\
    \ = d;\n                max_divisor_size = 1;\n            } else if d == max_divisor\
    \ {\n                max_divisor_size += 1;\n            }\n        }\n    }\n\
    \    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n   \
    \ assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpz70f8082.rs:5:14\n\
    \  |\n5 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor_size\
    \ < i {\n                max_divisor_size = i;\n                max_divisor_size_size\
    \ = i;\n            }\n            if max_divisor_size == i {\n              \
    \  max_divisor_size_size = i;\n            }\n        }\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqqwozzr2.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow = 1;\n    let mut max_divisor_remainder_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow = 1;\n    let mut\
    \ max_divisor_remainder_pow_pow_pow_pow_pow_pow = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n\
    \    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n    let\
    \ mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n    let mut\
    \ max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsbb3show.rs:2:33\n  |\n2 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |    ---------------            \
    \  ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = 1;\n        \
    \    } else if divisor == max_divisor {\n                max_divisor_size += 1;\n\
    \            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp63ut13gz.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for d in divisors(n) {\n      \
    \  if n % d == 0 {\n            if d > max_divisor {\n                max_divisor\
    \ = d;\n                max_divisor_size = 1;\n            } else {\n        \
    \        max_divisor += d;\n                max_divisor_size++;\n            }\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `+`\n  --> /tmp/tmp9ajrb_95.rs:12:34\n\
    \   |\n12 |                 max_divisor_size++;\n   |                        \
    \          ^ expected expression\n\nerror[E0425]: cannot find function `divisors`\
    \ in this scope\n --> /tmp/tmp9ajrb_95.rs:5:14\n  |\n5 |     for d in divisors(n)\
    \ {\n  |              ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for i in 1..=n {\n        if n\
    \ % i == 0 {\n            if max_divisor < i {\n                max_divisor =\
    \ i;\n                max_divisor_index = i;\n            }\n        }\n    }\n\
    \    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp509qin0u.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1czxpnrp.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for divisor in 1..=n {\n \
    \       if n % divisor == 0 {\n            if divisor > max_divisor {\n      \
    \          max_divisor = divisor;\n                max_divisor_remainder = n %\
    \ divisor;\n            }\n        }\n    }\n    max_divisor_remainder\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp9ny1v13e.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1czxpnrp.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for d in divisors(n) {\n      \
    \  if n % d == 0 {\n            if d > max_divisor {\n                max_divisor\
    \ = d;\n                max_divisor_size = 1;\n            } else {\n        \
    \        max_divisor += d;\n                max_divisor_size++;\n            }\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `+`\n  --> /tmp/tmp9ajrb_95.rs:12:34\n\
    \   |\n12 |                 max_divisor_size++;\n   |                        \
    \          ^ expected expression\n\nerror[E0425]: cannot find function `divisors`\
    \ in this scope\n --> /tmp/tmp9ajrb_95.rs:5:14\n  |\n5 |     for d in divisors(n)\
    \ {\n  |              ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_indexes: Vec<usize>\
    \ = Vec::new();\n\n    for i in 1..=max_divisor {\n        if n % i == 0 {\n \
    \           if max_divisor > i {\n                max_divisor = i;\n         \
    \       max_divisor_index = i;\n            }\n        } else {\n            if\
    \ max_divisor > i {\n                max_divisor = i;\n                max_divisor_index\
    \ = i;\n                max_divisor_indexes.push(i);\n            }\n        }\n\
    \    }\n\n    if max_divisor == n {\n        max_divisor_indexes.push(max_divisor_index);\n\
    \    }\n\n    max_divisor_indexes.sort_unstable();\n\n    max_divisor_indexes.pop();\n\
    \n    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpet8zf6wf.rs:17:42\n   |\n\
    17 |                 max_divisor_indexes.push(i);\n   |                      \
    \                    ^ expected `usize`, found `isize`\n   |\nhelp: you can convert\
    \ an `isize` to a `usize` and panic if the converted value doesn't fit\n   |\n\
    17 |                 max_divisor_indexes.push(i.try_into().unwrap());\n   |  \
    \                                        ~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpet8zf6wf.rs:23:34\n   |\n23 |         max_divisor_indexes.push(max_divisor_index);\n\
    \   |                                  ^^^^^^^^^^^^^^^^^ expected `usize`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic if the\
    \ converted value doesn't fit\n   |\n23 |         max_divisor_indexes.push(max_divisor_index.try_into().unwrap());\n\
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = max_divisor_value - max_divisor;\n            }\n        }\n    }\n\n    max_divisor_value\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp_v714t35.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    let mut max_divisor_value = n;\n\
    \    while max_divisor_size != 1 {\n        if max_divisor_value % 2 == 0 {\n\
    \            max_divisor_value /= 2;\n        } else {\n            max_divisor_value\
    \ /= 3;\n        }\n        max_divisor_size = max_divisor_value + 1;\n      \
    \  if max_divisor_size > max_divisor {\n            max_divisor = max_divisor_size;\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpl9yfue01.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = divisor;\n  \
    \          } else if divisor == max_divisor {\n                max_divisor_size\
    \ = divisor + 1;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpwoxqld9t.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if max_divisor < divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_index = divisor as isize;\n                max_divisor_value\
    \ = n;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5s3gfo6u.rs:8:30\n  |\n8 |\
    \             if max_divisor < divisor {\n  |                              ^^^^^^^\
    \ expected `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n\
    \  |\n8 |             if max_divisor < *divisor {\n  |                       \
    \       +\n\nerror[E0308]: mismatched types\n --> /tmp/tmp5s3gfo6u.rs:9:31\n \
    \ |\n9 |                 max_divisor = divisor;\n  |                         \
    \      ^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp: consider dereferencing\
    \ the borrow\n  |\n9 |                 max_divisor = *divisor;\n  |          \
    \                     +\n\nerror[E0606]: casting `&isize` as `isize` is invalid\n\
    \  --> /tmp/tmp5s3gfo6u.rs:10:37\n   |\n10 |                 max_divisor_index\
    \ = divisor as isize;\n   |                                     -------^^^^^^^^^\n\
    \   |                                     |\n   |                            \
    \         cannot cast `&isize` as `isize`\n   |                              \
    \       help: dereference the expression: `*divisor`\n\nerror: aborting due to\
    \ 3 previous errors\n\nSome errors have detailed explanations: E0308, E0606.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for i in 1..=n {\n        if n\
    \ % i == 0 {\n            if max_divisor < i {\n                max_divisor =\
    \ i;\n                max_divisor_index = i;\n            }\n        }\n    }\n\
    \    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp509qin0u.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_indexes: Vec<usize>\
    \ = Vec::new();\n    for i in 1..=max_divisor {\n        if n % i == 0 {\n   \
    \         max_divisor = i;\n            max_divisor_index = i;\n        }\n  \
    \  }\n    max_divisor_indexes.push(max_divisor_index);\n    for i in 2..=max_divisor\
    \ {\n        if n % i == 0 {\n            if max_divisor == i {\n            \
    \    max_divisor = i;\n                max_divisor_index = i;\n            } else\
    \ {\n                max_divisor_indexes.push(i);\n            }\n        }\n\
    \    }\n    max_divisor_indexes.push(max_divisor_index);\n    for i in 3..=max_divisor\
    \ {\n        if n % i == 0 {\n            if max_divisor == i {\n            \
    \    max_divisor = i;\n                max_divisor_index = i;\n            } else\
    \ {\n                max_divisor_indexes.push(i);\n            }\n        }\n\
    \    }\n    max_divisor_indexes.push(max_divisor_index);\n    for i in 4..=max_divisor\
    \ {\n        if n % i == 0 {\n            if max_divisor == i {\n            \
    \    max_divisor = i;\n                max_divisor_index = i;\n            } else\
    \ {\n                max_divisor_indexes.push(i);\n            }\n        }\n\
    \    }\n    max_divisor_indexes.push(max_divisor_index);\n    for i in 5..=max_divisor\
    \ {\n        if n % i == 0 {\n            if max_divisor == i {\n            \
    \    max_divisor = i;\n                max_divisor_index = i;\n            } else\
    \ {\n                max_divisor_indexes.push(i);\n            }\n        }\n\
    \    }\n    max_divisor_indexes.push(max_divisor_index);\n    for i in 6..=max_divisor\
    \ {\n        if n % i == 0 {\n            if max_divisor == i {\n            \
    \    max_divisor = i;\n                max_divisor_index = i;\n            } else\
    \ {\n                max_divisor_indexes.push(i);\n            }\n        }\n\
    \    }\n    max_divisor_indexes.push(max_divisor_index);\n    for i in 7..=max_divisor\
    \ {\n        if n % i == 0 {\n            if max_divisor == i {\n            \
    \    max_divisor = i;\n                max_divisor_index = i;\n            } else\
    \ {\n                max_divisor_indexes.push(i);\n            }\n        }\n\
    \    }\n    max_divisor_indexes.push(max_divisor_index);\n    for i in 8..=max_divisor\
    \ {\n        if n % i == 0 {\n            if max_divisor == i {\n            \
    \    max_divisor = i;\n                max_divisor_index = i;\n            } else\
    \ {\n                max_divisor_indexes.push(i);\n            }\n        }\n\
    \    }\n    max_divisor_indexes.push(max_divisor_index);\n    for i in 9..=max_divisor\
    \ {\n        if n % i == 0 {\n            if max_divisor == i {\n            \
    \    max_divisor = i;\n                max_divisor_index = i;\n            } else\
    \ {\n                max_divisor_indexes.push(i);\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n   --> /tmp/tmp2ag2_yc8.rs:106:3\n\
    \    |\n2   | fn largest_divisor(n: isize) -> isize {\n    |                 \
    \                      - unclosed delimiter\n...\n90  |     for i in 9..=max_divisor\
    \ {\n    |                              - unclosed delimiter\n91  |         if\
    \ n % i == 0 {\n    |                       - unclosed delimiter\n...\n95  | \
    \            } else {\n    |                    - this delimiter might not be\
    \ properly closed...\n96  |                 max_divisor_indexes.push(i);\n97 \
    \ | }\n    | - ...as it matches this but it has different indentation\n...\n106\
    \ | }\n    |   ^\n\nerror[E0308]: mismatched types\n  --> /tmp/tmp2ag2_yc8.rs:12:30\n\
    \   |\n12 |     max_divisor_indexes.push(max_divisor_index);\n   |           \
    \                   ^^^^^^^^^^^^^^^^^ expected `usize`, found `isize`\n   |\n\
    help: you can convert an `isize` to a `usize` and panic if the converted value\
    \ doesn't fit\n   |\n12 |     max_divisor_indexes.push(max_divisor_index.try_into().unwrap());\n\
    \   |                                               ++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp2ag2_yc8.rs:19:42\n   |\n19 |              \
    \   max_divisor_indexes.push(i);\n   |                                       \
    \   ^ expected `usize`, found `isize`\n   |\nhelp: you can convert an `isize`\
    \ to a `usize` and panic if the converted value doesn't fit\n   |\n19 |      \
    \           max_divisor_indexes.push(i.try_into().unwrap());\n   |           \
    \                                ++++++++++++++++++++\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmp2ag2_yc8.rs:23:30\n   |\n23 |     max_divisor_indexes.push(max_divisor_index);\n\
    \   |                              ^^^^^^^^^^^^^^^^^ expected `usize`, found `isize`\n\
    \   |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n   |\n23 |     max_divisor_indexes.push(max_divisor_index.try_into().unwrap());\n\
    \   |                                               ++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp2ag2_yc8.rs:30:42\n   |\n30 |      "
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for divisor in 1..=n {\n \
    \       if n % divisor == 0 {\n            if max_divisor_remainder < divisor\
    \ {\n                max_divisor = divisor;\n                max_divisor_remainder\
    \ = n % divisor;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpl1g08tz6.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1czxpnrp.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count2 = 0;\n    let mut max_divisor_remainder_count3\
    \ = 0;\n    let mut max_divisor_remainder_count4 = 0;\n    let mut max_divisor_remainder_count5\
    \ = 0;\n    let mut max_divisor_remainder_count6 = 0;\n    let mut max_divisor_remainder_count7\
    \ = 0;\n    let mut max_divisor_remainder_count8 = 0;\n    let mut max_divisor_remainder_count9\
    \ = 0;\n    let mut max_divisor_remainder_count10 = 0;\n    let mut max_divisor_remainder_count11\
    \ = 0;\n    let mut max_divisor_remainder_count12 = 0;\n    let mut max_divisor_remainder_count13\
    \ = 0;\n    let mut max_divisor_remainder_count14 = 0;\n    let mut max_divisor_remainder_count15\
    \ = 0;\n    let mut max_divisor_remainder_count16 = 0;\n    let mut max_divisor_remainder_count17\
    \ = 0;\n    let mut max_divisor_remainder_count18 = 0;\n    let mut max_divisor_remainder_count19\
    \ = 0;\n    let mut max_divisor_remainder_count20 = 0;\n    let mut max_divisor_remainder_count21\
    \ = 0;\n    let mut max_divisor_remainder_count22 = 0;\n    let mut max_divisor_remainder_count23\
    \ = 0;\n    let mut max_divisor_remainder_count24 = 0;\n    let mut max_divisor_remainder_count25\
    \ = 0;\n    let mut max_divisor_remainder_count26 = 0;\n    let mut max_divisor_remainder_count27\
    \ = 0;\n    let mut max_divisor_remainder_count28 = 0;\n    let mut max_divisor_remainder_count29\
    \ = 0;\n    let mut max_divisor_remainder_count30 = 0;\n    let mut max_divisor_remainder_count31\
    \ = 0;\n    let mut max_divisor_remainder_count32 = 0;\n    let mut max_divisor_remainder_count33\
    \ = 0;\n    let mut max_divisor_remainder_count34 = 0;\n    let mut max_divisor_remainder_count35\
    \ = 0;\n    let mut max_divisor_remainder_count36 = 0;\n    let mut max_divisor_remainder_count37\
    \ = 0;\n    let mut max_divisor_remainder_count38 = 0;\n    let mut max_divisor_remainder_count39\
    \ = 0;\n    let mut max_divisor_remainder_count40 = 0;\n    let mut max_divisor_remainder_count41\
    \ = 0;\n    let mut max_divisor_remainder_count\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpl43e21s9.rs:46:40\n   |\n\
    46 |     let mut max_divisor_remainder_count\n   |                           \
    \             ^ help: add `;` here\n47 | }\n   | - unexpected token\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpl43e21s9.rs:2:33\n  |\n2 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_ind = -1;\n    let mut max_divisor_ind_ind = -1;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_ind = i;\n\
    \                max_divisor_ind_ind = i;\n            }\n            if max_divisor\
    \ == i {\n                max_divisor_ind_ind = i;\n            }\n        }\n\
    \    }\n    if max_divisor == 0 {\n        max_divisor_ind = -1;\n    }\n    max_divisor_ind_ind\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp9tbk6d1e.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_remainder =\
    \ 0;\n    let mut max_divisor_remainder_size = 0;\n    let mut max_divisor_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_size = 0;\n    let mut max_divisor_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_size = 0;\n    let\
    \ mut max_divisor_remainder_remainder_remainder_remainder = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpz05nqlfc.rs:35:17\n   |\n\
    35 |     let mut max_\n   |                 ^ help: add `;` here\n36 | }\n   |\
    \ - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpz05nqlfc.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    for i in 1..=n {\n \
    \       if n % i == 0 {\n            if max_divisor_remainder == 0 {\n       \
    \         max_divisor = i;\n                max_divisor_remainder = n;\n     \
    \           max_divisor_remainder_count = 0;\n            } else {\n         \
    \       if max_divisor_remainder > i {\n                    max_divisor = i;\n\
    \                    max_divisor_remainder = n;\n                    max_divisor_remainder_count\
    \ = 0;\n                }\n            }\n        }\n        if max_divisor_remainder_count\
    \ < max_divisor_remainder {\n            max_divisor_remainder_count = max_divisor_remainder;\n\
    \            max_divisor_remainder = i;\n        }\n    }\n    max_divisor_remainder_count\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpwlka35_1.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    for d in divisors(n) {\n      \
    \  if n % d == 0 {\n            if max_divisor < d {\n                max_divisor\
    \ = d;\n                max_divisor_size = n;\n            }\n        }\n    }\n\
    \    max_divisor_size\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmploq0i9r7.rs:5:14\n\
    \  |\n5 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_idx = -1;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_idx\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmper8pwy4e.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for divisor in 1..=n {\n \
    \       if n % divisor == 0 {\n            if divisor > max_divisor {\n      \
    \          max_divisor = divisor;\n                max_divisor_remainder = 0;\n\
    \            } else {\n                max_divisor_remainder += divisor - max_divisor;\n\
    \            }\n        }\n    }\n    if max_divisor_remainder > 0 {\n       \
    \ max_divisor = max_divisor + 1;\n    }\n    max_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp5pojmu8k.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_max = 0;\n    let mut max_divisor_remainder_pow_min\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc = 0;\n    let mut max_divisor_remainder_pow_min_dec\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc = 0;\n    let\
    \ mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc_inc_inc_inc_inc_inc_in\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp2mhifh19.rs:25:89\n   |\n\
    25 |     let mut max_divisor_remainder_pow_min_dec_inc_inc_inc_inc_inc_inc_inc_inc_inc_inc_in\n\
    \   |                                                                        \
    \                 ^ help: add `;` here\n26 | }\n   | - unexpected token\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmp2mhifh19.rs:2:33\n  |\n2 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor_size = n;\n    let mut max_divisor_size = max_divisor_size\
    \ / 2;\n    while max_divisor_size != 1 {\n        if n % max_divisor_size ==\
    \ 0 {\n            max_divisor = max_divisor * max_divisor_size;\n        }\n\
    \        max_divisor_size = max_divisor_size / 2;\n    }\n    max_divisor\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `5`', /tmp/tmpleggu_lb.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    for d in 2..=max_divisor_size.clone()\
    \ {\n        if n % d == 0 {\n            max_divisor = d;\n            max_divisor_size\
    \ = n;\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpnvbv_rit.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = n;\n            }\n        }\
    \ else {\n            if divisor > max_divisor_value {\n                max_divisor_value\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8b7gw4ew.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_indexes: Vec<usize>\
    \ = Vec::new();\n    let mut max_divisor_indexes_len = 0;\n    while max_divisor\
    \ % 2 == 0 {\n        max_divisor /= 2;\n        max_divisor_indexes.push(max_divisor_index);\n\
    \        max_divisor_indexes_len += 1;\n    }\n    for i in max_divisor_indexes.iter().rev()\
    \ {\n        if max_divisor % i == 0 {\n            max_divisor = i as isize;\n\
    \            max_divisor_index = i;\n        }\n    }\n    max_divisor_index\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpil5f9c8t.rs:13:26\n   |\n\
    13 |         if max_divisor % i == 0 {\n   |                          ^ expected\
    \ `isize`, found `usize`\n\nerror[E0277]: cannot mod `isize` by `&usize`\n  -->\
    \ /tmp/tmpil5f9c8t.rs:13:24\n   |\n13 |         if max_divisor % i == 0 {\n  \
    \ |                        ^ no implementation for `isize % &usize`\n   |\n  \
    \ = help: the trait `Rem<&usize>` is not implemented for `isize`\n   = help: the\
    \ following other types implement trait `Rem<Rhs>`:\n             <&'a f32 as\
    \ Rem<f32>>\n             <&'a f64 as Rem<f64>>\n             <&'a i128 as Rem<i128>>\n\
    \             <&'a i16 as Rem<i16>>\n             <&'a i32 as Rem<i32>>\n    \
    \         <&'a i64 as Rem<i64>>\n             <&'a i8 as Rem<i8>>\n          \
    \   <&'a isize as Rem<isize>>\n           and 54 others\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmpil5f9c8t.rs:15:33\n   |\n4  |     let mut max_divisor_index\
    \ = 0;\n   |                                 - expected due to this value\n...\n\
    15 |             max_divisor_index = i;\n   |                                \
    \ ^ expected `usize`, found `&usize`\n   |\nhelp: consider dereferencing the borrow\n\
    \   |\n15 |             max_divisor_index = *i;\n   |                        \
    \         +\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpil5f9c8t.rs:18:5\n\
    \   |\n2  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \             ----- expected `isize` because of return type\n...\n18 |     max_divisor_index\n\
    \   |     ^^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can\
    \ convert a `usize` to an `isize` and panic if the converted value doesn't fit\n\
    \   |\n18 |     max_divisor_index.try_into().unwrap()\n   |                  \
    \    ++++++++++++++++++++\n\nerror[E0606]: casting `&usize` as `isize` is invalid\n\
    \  --> /tmp/tmpil5f9c8t.rs:14:27\n   |\n14 |             max_divisor = i as isize;\n\
    \   |                           -^^^^^^^^^\n   |                           |\n\
    \   |                           cannot cast `&usize` as `isize`\n   |        \
    \                   help: dereference the expression: `*"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = n;\n        \
    \    }\n        } else {\n            break;\n        }\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmpcnksrn46.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for divisor in &[2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97] {\n        if n % divisor == 0 {\n            if divisor > max_divisor {\n\
    \                max_divisor = divisor;\n                max_divisor_index = 0;\n\
    \            }\n            if divisor == max_divisor {\n                max_divisor_index\
    \ += 1;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmptjk28rp_.rs:7:26\n  |\n7 |\
    \             if divisor > max_divisor {\n  |                          ^^^^^^^^^^^\n\
    \  |                          |\n  |                          expected `&isize`,\
    \ found integer\n  |                          help: consider borrowing here: `&max_divisor`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmptjk28rp_.rs:8:31\n  |\n3 |    \
    \ let mut max_divisor = 0;\n  |                           - expected due to this\
    \ value\n...\n8 |                 max_divisor = divisor;\n  |                \
    \               ^^^^^^^ expected integer, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n8 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0277]: can't compare `&isize` with\
    \ `{integer}`\n  --> /tmp/tmptjk28rp_.rs:11:24\n   |\n11 |             if divisor\
    \ == max_divisor {\n   |                        ^^ no implementation for `&isize\
    \ == {integer}`\n   |\n   = help: the trait `PartialEq<{integer}>` is not implemented\
    \ for `&isize`\n   = help: the following other types implement trait `PartialEq<Rhs>`:\n\
    \             f32\n             f64\n             i128\n             i16\n   \
    \          i32\n             i64\n             i8\n             isize\n      \
    \     and 6 others\n\nerror: aborting due to 3 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0308.\nFor more information about an error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = divisor;\n  \
    \          } else {\n                max_divisor_size = divisor;\n           \
    \ }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8jejcemy.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = 1;\n        \
    \    } else if divisor == max_divisor {\n                max_divisor_size += 1;\n\
    \            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp63ut13gz.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    let mut max_divisor_size_size_size = 0;\n    let mut max_divisor_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size = 0;\n    let mut\
    \ max_divisor_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size = 0;\n    let\
    \ mut max_divisor_size_size_size_size_size_size_size_size = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size =\
    \ 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size = 0;\n \
    \   let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size = 0;\n\
    \    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size\
    \ = 0;\n    let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpw0zfhz1b.rs:33:99\n   |\n\
    33 |     let mut max_divisor_size_size_size_size_size_size_size_size_size_size_size_size_size_size_size\n\
    \   |                                                                        \
    \                           ^ help: add `;` here\n34 | }\n   | - unexpected token\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpw0zfhz1b.rs:2:33\n  |\n2 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    for divisor in &[2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97] {\n        if n % divisor == 0 {\n            if max_divisor < divisor {\n\
    \                max_divisor = divisor;\n                max_divisor_index = 0;\n\
    \            }\n            if max_divisor == divisor {\n                max_divisor_index\
    \ += 1;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpge3but5g.rs:7:30\n  |\n7 |\
    \             if max_divisor < divisor {\n  |                              ^^^^^^^\
    \ expected `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n\
    \  |\n7 |             if max_divisor < *divisor {\n  |                       \
    \       +\n\nerror[E0308]: mismatched types\n --> /tmp/tmpge3but5g.rs:8:31\n \
    \ |\n3 |     let mut max_divisor = n;\n  |                           - expected\
    \ due to this value\n...\n8 |                 max_divisor = divisor;\n  |    \
    \                           ^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n8 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpge3but5g.rs:11:31\n   |\n11 |             if max_divisor == divisor\
    \ {\n   |                               ^^^^^^^ expected `isize`, found `&isize`\n\
    \   |\nhelp: consider dereferencing the borrow\n   |\n11 |             if max_divisor\
    \ == *divisor {\n   |                               +\n\nerror: aborting due to\
    \ 3 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor_size = n;\n    for divisor in 2..=max_divisor\
    \ {\n        if n % divisor == 0 {\n            max_divisor = divisor;\n     \
    \       max_divisor_size = n / divisor;\n        }\n    }\n    max_divisor\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp3siatm5w.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = 1;\n        \
    \    } else {\n                max_divisor += 1;\n                max_divisor_size\
    \ += 1;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpisbsqpjr.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..=n {\n       \
    \ if n % i == 0 {\n            if max_divisor_remainder == 0 {\n             \
    \   max_divisor = i;\n                max_divisor_remainder = n % i;\n       \
    \     } else {\n                if max_divisor_remainder > max_divisor {\n   \
    \                 max_divisor = i;\n                    max_divisor_remainder\
    \ = n % i;\n                }\n            }\n        }\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpjuewh3ld.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for divisor in 1..=n {\n \
    \       if n % divisor == 0 {\n            if max_divisor < divisor {\n      \
    \          max_divisor = divisor;\n                max_divisor_remainder = n %\
    \ divisor;\n            }\n        }\n    }\n    if max_divisor_remainder == 0\
    \ {\n        max_divisor\n    } else {\n        max_divisor_remainder\n    }\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpojp4bkmh.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..=n {\n       \
    \ if n % i == 0 {\n            if max_divisor == 0 {\n                max_divisor\
    \ = i;\n                max_divisor_remainder = n % i;\n            } else {\n\
    \                if max_divisor_remainder == 0 {\n                    max_divisor\
    \ = i;\n                    max_divisor_remainder = n % i;\n                }\
    \ else {\n                    if max_divisor > i {\n                        max_divisor\
    \ = i;\n                        max_divisor_remainder = n % i;\n             \
    \       }\n                }\n            }\n        }\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpt1qnrau5.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1czxpnrp.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor_size = n;\n\n    for divisor in 2..=n {\n    \
    \    if n % divisor == 0 {\n            if divisor > max_divisor {\n         \
    \       max_divisor = divisor;\n                max_divisor_size = n;\n      \
    \      }\n        }\n    }\n\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpeac8d_ly.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    let mut max_divisor_size_divisor = 0;\n    let mut max_divisor_size_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor = 0;\n    let mut max_divisor_size_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor = 0;\n    let mut\
    \ max_divisor_size_divisor_divisor_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_size = 0;\n\
    \    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor = 0;\n \
    \   let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_size = 0;\n\
    \    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpp9j5md0e.rs:31:24\n   |\n\
    31 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    32 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpp9j5md0e.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = divisor;\n  \
    \          } else {\n                max_divisor_size = divisor;\n           \
    \ }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8jejcemy.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = divisor;\n                max_divisor_value = n;\n            }\n        }\
    \ else {\n            if divisor > max_divisor_size {\n                max_divisor_size\
    \ = divisor;\n                max_divisor_value = n;\n            }\n        }\n\
    \    }\n    max_divisor_value\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp3vv_yv86.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for divisor in &[2, 3, 5,\
    \ 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83,\
    \ 89, 97] {\n        if n % divisor == 0 {\n            if max_divisor < divisor\
    \ {\n                max_divisor = divisor;\n                max_divisor_remainder\
    \ = n % divisor;\n            }\n        }\n    }\n    if max_divisor_remainder\
    \ == 0 {\n        max_divisor\n    } else {\n        max_divisor_remainder\n \
    \   }\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwaa1hu_j.rs:8:31\n  |\n3 |\
    \     let mut max_divisor = 0;\n  |                           - expected due to\
    \ this value\n...\n8 |                 max_divisor = divisor;\n  |           \
    \                    ^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n8 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0277]: can't compare `isize` with\
    \ `&isize`\n --> /tmp/tmpwaa1hu_j.rs:7:28\n  |\n7 |             if max_divisor\
    \ < divisor {\n  |                            ^ no implementation for `isize <\
    \ &isize` and `isize > &isize`\n  |\n  = help: the trait `PartialOrd<&isize>`\
    \ is not implemented for `isize`\n  = help: the following other types implement\
    \ trait `PartialOrd<Rhs>`:\n            f32\n            f64\n            i128\n\
    \            i16\n            i32\n            i64\n            i8\n         \
    \   isize\n          and 6 others\n\nerror: aborting due to 2 previous errors\n\
    \nSome errors have detailed explanations: E0277, E0308.\nFor more information\
    \ about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \                max_divisor_value = i;\n            }\n        }\n    }\n   \
    \ max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp3e58nzkn.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count_index = 0;\n    let mut max_divisor_remainder_count_index2\
    \ = 0;\n    let mut max_divisor_remainder_count_index3 = 0;\n    let mut max_divisor_remainder_count_index4\
    \ = 0;\n    let mut max_divisor_remainder_count_index5 = 0;\n    let mut max_divisor_remainder_count_index6\
    \ = 0;\n    let mut max_divisor_remainder_count_index7 = 0;\n    let mut max_divisor_remainder_count_index8\
    \ = 0;\n    let mut max_divisor_remainder_count_index9 = 0;\n    let mut max_divisor_remainder_count_index10\
    \ = 0;\n    let mut max_divisor_remainder_count_index11 = 0;\n    let mut max_divisor_remainder_count_index12\
    \ = 0;\n    let mut max_divisor_remainder_count_index13 = 0;\n    let mut max_divisor_remainder_count_index14\
    \ = 0;\n    let mut max_divisor_remainder_count_index15 = 0;\n    let mut max_divisor_remainder_count_index16\
    \ = 0;\n    let mut max_divisor_remainder_count_index17 = 0;\n    let mut max_divisor_remainder_count_index18\
    \ = 0;\n    let mut max_divisor_remainder_count_index19 = 0;\n    let mut max_divisor_remainder_count_index20\
    \ = 0;\n    let mut max_divisor_remainder_count_index21 = 0;\n    let mut max_divisor_remainder_count_index22\
    \ = 0;\n    let mut max_divisor_remainder_count_index23 = 0;\n    let mut max_divisor_remainder_count_index24\
    \ = 0;\n    let mut max_divisor_remainder_count_index25 = 0;\n    let mut max_divisor_remainder_count_index26\
    \ = 0;\n    let mut max_divisor_remainder_count_index27 = 0;\n    let mut max_divisor_remainder_count_index28\
    \ = 0;\n    let mut max_divisor_remainder_count_index29 = 0;\n    let mut max_divisor_remainder_count_index30\
    \ = 0;\n    let mut max_divisor_remainder_count_index31 = 0;\n    let mut max_divisor_remainder_count_index32\
    \ = 0;\n    let mut max_divisor_remainder_count_index33 = 0;\n    let mut max_divisor_remainder_count_index34\
    \ = 0;\n    let mut max_divisor_remainder_count_index35 = 0;\n    let mut max_divisor_remainder_count_index36\
    \ = 0;\n    let mut max_divisor_remainder_count_index37 = 0;\n    let mut max_divisor_remainder_count_\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmplsc1mh6k.rs:43:41\n   |\n\
    43 |     let mut max_divisor_remainder_count_\n   |                          \
    \               ^ help: add `;` here\n44 | }\n   | - unexpected token\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmplsc1mh6k.rs:2:33\n  |\n2 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for d in divisors(n) {\n      \
    \  if n % d == 0 {\n            if d > max_divisor {\n                max_divisor\
    \ = d;\n                max_divisor_size = 1;\n            } else {\n        \
    \        max_divisor += d;\n                max_divisor_size = 2;\n          \
    \  }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmp7bpk8ioz.rs:5:14\n\
    \  |\n5 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor_size = n;\n    while max_divisor_size != 1 {\n\
    \        max_divisor_size /= 2;\n        max_divisor *= 2;\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpu3znl569.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_n = 0;\n\
    \    let mut max_divisor_size_n_n = 0;\n    let mut max_divisor_size_n_n_n = 0;\n\
    \    let mut max_divisor_size_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut\
    \ max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut\
    \ max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let\
    \ mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n  \
    \  let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut\
    \ max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpu8ol78zu.rs:31:60\n   |\n\
    31 |     let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_\n   |       \
    \                                                     ^ help: add `;` here\n32\
    \ | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpu8ol78zu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if divisor > max_divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_index = divisor;\n                max_divisor_value\
    \ = n;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdigeh0md.rs:8:26\n  |\n8 |\
    \             if divisor > max_divisor {\n  |                          ^^^^^^^^^^^\n\
    \  |                          |\n  |                          expected `&isize`,\
    \ found integer\n  |                          help: consider borrowing here: `&max_divisor`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpdigeh0md.rs:9:31\n  |\n3 |    \
    \ let mut max_divisor = 0;\n  |                           - expected due to this\
    \ value\n...\n9 |                 max_divisor = divisor;\n  |                \
    \               ^^^^^^^ expected integer, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n9 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpdigeh0md.rs:10:37\n   |\n4  |     let mut max_divisor_index = 0;\n \
    \  |                                 - expected due to this value\n...\n10 | \
    \                max_divisor_index = divisor;\n   |                          \
    \           ^^^^^^^ expected integer, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n10 |                 max_divisor_index = *divisor;\n   | \
    \                                    +\n\nerror: aborting due to 3 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    let mut max_divisor_size_prime = 0;\n    let mut max_divisor_size_prime_size\
    \ = 0;\n    let mut max_divisor_size_prime_prime = 0;\n    let mut max_divisor_size_prime_prime_size\
    \ = 0;\n    let mut max_divisor_size_prime_prime_prime = 0;\n    let mut max_divisor_size_prime_prime_prime_size\
    \ = 0;\n    let mut max_divisor_size_prime_prime_prime_prime = 0;\n    let mut\
    \ max_divisor_size_prime_prime_prime_prime_size = 0;\n    let mut max_divisor_size_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_size_prime_prime_prime_prime_prime_size = 0;\n\
    \    let mut max_divisor_size_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut max_divisor_size_prime_prime_prime_prime_prime_prime_size = 0;\n    let\
    \ mut max_divisor_size_prime_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut max_divisor_size_prime_prime_prime_prime_prime_prime_size = 0;\n    let\
    \ mut max_divisor_size_prime_prime_prime_prime_prime_prime_prime = 0;\n    let\
    \ mut max_divisor_size_prime_prime_prime_prime_prime_prime_prime_size = 0;\n \
    \   let mut max_divisor_size_prime_prime_prime_prime_prime_prime_prime_prime =\
    \ 0;\n    let mut max_divisor_size_prime_prime_prime_prime_prime_prime_prime_size\
    \ = 0;\n    let mut max_divisor_size_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_size_prime_prime_prime_prime_prime_prime_prime_prime_size\
    \ = 0;\n    let mut max_divisor_size_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_size_prime_prime_prime_prime_prime_prime_prime_prime_prime_size\
    \ = 0;\n    let mut max_divisor_size_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_size_prime_prime_prime_prime_prime_prime_prime_prime_prime_size\
    \ = 0;\n    let mut max_divisor_size_prime_prime_prime_prime_prime_prime_prime_prime_prime_prime\
    \ = 0;\n    let mut max_divisor_size_prime\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpn8anesz3.rs:31:35\n   |\n\
    31 |     let mut max_divisor_size_prime\n   |                                \
    \   ^ help: add `;` here\n32 | }\n   | - unexpected token\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpn8anesz3.rs:2:33\n  |\n2 | fn largest_divisor(n: isize)\
    \ -> isize {\n  |    ---------------              ^^^^^ expected `isize`, found\
    \ `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    for divisor in &[2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97] {\n        if n % divisor == 0 {\n            if max_divisor % divisor ==\
    \ 0 {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor as usize;\n            }\n        }\n    }\n    max_divisor_index\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjv9s6fcx.rs:8:31\n  |\n3 |\
    \     let mut max_divisor = n;\n  |                           - expected due to\
    \ this value\n...\n8 |                 max_divisor = divisor;\n  |           \
    \                    ^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n8 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpjv9s6fcx.rs:13:5\n   |\n2  | fn largest_divisor(n: isize) -> isize {\n\
    \   |                                 ----- expected `isize` because of return\
    \ type\n...\n13 |     max_divisor_index\n   |     ^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n13 |     max_divisor_index.try_into().unwrap()\n\
    \   |                      ++++++++++++++++++++\n\nerror[E0606]: casting `&isize`\
    \ as `usize` is invalid\n --> /tmp/tmpjv9s6fcx.rs:9:37\n  |\n9 |             \
    \    max_divisor_index = divisor as usize;\n  |                              \
    \       -------^^^^^^^^^\n  |                                     |\n  |     \
    \                                cannot cast `&isize` as `usize`\n  |        \
    \                             help: dereference the expression: `*divisor`\n\n\
    error: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0606.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = 0;\n\
    \    let mut max_divisor_value_found = false;\n\n    for divisor in 1..=n {\n\
    \        if n % divisor == 0 {\n            if divisor > max_divisor {\n     \
    \           max_divisor = divisor;\n                max_divisor_index = divisor;\n\
    \                max_divisor_value = divisor;\n                max_divisor_value_found\
    \ = true;\n            } else if divisor == max_divisor {\n                max_divisor_value\
    \ = divisor;\n                max_divisor_value_found = true;\n            }\n\
    \        }\n    }\n\n    if max_divisor_value_found {\n        max_divisor_index\n\
    \    } else {\n        max_divisor\n    }\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpz4xakyeg.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = n;\n            }\n        }\
    \ else {\n            if divisor > max_divisor_value {\n                max_divisor_value\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      }\n    }\n    max_divisor_value\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpi37q9dkh.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: -1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor_size = n;\n\n    while max_divisor_size != 1 {\n\
    \        if n % max_divisor == 0 {\n            max_divisor += 1;\n        } else\
    \ {\n            max_divisor -= 1;\n        }\n        max_divisor_size = max_divisor\
    \ as isize;\n    }\n\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008870
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = 0;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \                max_divisor_value = i;\n            }\n            if max_divisor_value\
    \ < i {\n                max_divisor_value = i;\n            }\n        }\n  \
    \  }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpn743nsx5.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for divisor in 1..=n {\n     \
    \   if n % divisor == 0 {\n            if divisor > max_divisor {\n          \
    \      max_divisor = divisor;\n                max_divisor_index = 1;\n      \
    \      } else if divisor == max_divisor {\n                max_divisor_index +=\
    \ 1;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpd6fc7xyf.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for d in divisors(n) {\n      \
    \  if d > max_divisor {\n            max_divisor = d;\n            max_divisor_size\
    \ = 1;\n        }\n        if d > max_divisor_size {\n            max_divisor_size\
    \ = d;\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpbvsypda3.rs:5:14\n\
    \  |\n5 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if max_divisor < divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = n;\n        \
    \    }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkj2ja059.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_idx = 1;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_idx\
    \ = 1;\n            } else if divisor == max_divisor {\n                max_divisor_idx\
    \ += 1;\n            }\n        }\n    }\n\n    max_divisor\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpwtzsrb3k.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_n = 0;\n\
    \    let mut max_divisor_size_n_n = 0;\n    let mut max_divisor_size_n_n_n = 0;\n\
    \    let mut max_divisor_size_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut\
    \ max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut\
    \ max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let\
    \ mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n  \
    \  let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut\
    \ max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpu8ol78zu.rs:31:60\n   |\n\
    31 |     let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_\n   |       \
    \                                                     ^ help: add `;` here\n32\
    \ | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpu8ol78zu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    let mut max_divisor_value_found = false;\n    for i in 1..=n {\n        if\
    \ n % i == 0 {\n            if max_divisor < i {\n                max_divisor\
    \ = i;\n                max_divisor_index = i;\n                max_divisor_value\
    \ = i;\n                max_divisor_value_found = true;\n            }\n     \
    \   }\n    }\n    if max_divisor_value_found {\n        max_divisor_value\n  \
    \  } else {\n        max_divisor_value\n    }\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmptrb8qspl.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3oi7tksf.rs:54:24\n   |\n\
    54 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    55 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp3oi7tksf.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisors = vec![max_divisor];\n    let mut max_divisors_index\
    \ = 0;\n    let mut max_divisors_indexs = vec![max_divisors_index];\n    let mut\
    \ max_divisors_indexs_index = 0;\n    let mut max_divisors_indexs_indexs = vec![max_divisors_indexs_index];\n\
    \    let mut max_divisors_indexs_indexs_index = 0;\n    let mut max_divisors_indexs_indexs_indexs\
    \ = vec![max_divisors_indexs_indexs_index];\n\n    for divisor in &mut max_divisors\
    \ {\n        if n % divisor == 0 {\n            max_divisors_indexs[max_divisors_indexs_index]\
    \ = divisor;\n            max_divisors_indexs_indexs[max_divisors_indexs_indexs_index]\
    \ = max_divisors_indexs_index;\n            max_divisors_indexs_indexs_indexs[max_divisors_indexs_indexs_index]\
    \ = max_divisors_indexs_indexs_index;\n            max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_index]\
    \ = max_divisors_indexs_indexs_indexs_index;\n            max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_index]\
    \ = max_divisors_indexs_indexs_indexs_index;\n            max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_index]\
    \ = max_divisors_indexs_indexs_indexs_index;\n            max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_index]\
    \ = max_divisors_indexs_indexs_indexs_index;\n            max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_index]\
    \ = max_divisors_indexs_indexs_indexs_index;\n            max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_index]\
    \ = max_divisors_indexs_indexs_indexs_index;\n            max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_index]\
    \ = max_divisors_indexs_indexs_indexs_index;\n            max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_index]\
    \ = max_divisors_indexs_indexs_indexs_index;\n            max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_index]\
    \ = max_divisors_indexs_indexs_indexs_index;\n            max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: this file contains an unclosed delimiter\n  --> /tmp/tmp133444ov.rs:36:3\n\
    \   |\n2  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \                   - unclosed delimiter\n...\n12 |     for divisor in &mut max_divisors\
    \ {\n   |                                      - unclosed delimiter\n13 |    \
    \     if n % divisor == 0 {\n   |                             - this delimiter\
    \ might not be properly closed...\n...\n27 | }\n   | - ...as it matches this but\
    \ it has different indentation\n...\n36 | }\n   |   ^\n\nerror: mismatched closing\
    \ delimiter: `}`\n  --> /tmp/tmp133444ov.rs:26:53\n   |\n2  | fn largest_divisor(n:\
    \ isize) -> isize {\n   |                                       - closing delimiter\
    \ possibly meant for this\n...\n26 |             max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_\n\
    \   |                                                     ^ unclosed delimiter\n\
    27 | }\n   | ^ mismatched closing delimiter\n\nerror[E0425]: cannot find value\
    \ `max_divisors_indexs_indexs_indexs_indexs` in this scope\n  --> /tmp/tmp133444ov.rs:17:13\n\
    \   |\n17 |             max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_index]\
    \ = max_divisors_indexs_indexs_indexs_index;\n   |             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `max_divisors_indexs_indexs_indexs`\n\
    \nerror[E0425]: cannot find value `max_divisors_indexs_indexs_indexs_index` in\
    \ this scope\n  --> /tmp/tmp133444ov.rs:17:54\n   |\n17 |             max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_index]\
    \ = max_divisors_indexs_indexs_indexs_index;\n   |                           \
    \                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ help: a local\
    \ variable with a similar name exists: `max_divisors_indexs_indexs_indexs`\n\n\
    error[E0425]: cannot find value `max_divisors_indexs_indexs_indexs_index` in this\
    \ scope\n  --> /tmp/tmp133444ov.rs:17:97\n   |\n17 |             max_divisors_indexs_indexs_indexs_indexs[max_divisors_indexs_indexs_indexs_index]\
    \ = max_divisor"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for d in divisors(n) {\n      \
    \  if n % d == 0 {\n            if d > max_divisor {\n                max_divisor\
    \ = d;\n                max_divisor_size = 1;\n            } else {\n        \
    \        max_divisor += d;\n                max_divisor_size++;\n            }\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `+`\n  --> /tmp/tmp9ajrb_95.rs:12:34\n\
    \   |\n12 |                 max_divisor_size++;\n   |                        \
    \          ^ expected expression\n\nerror[E0425]: cannot find function `divisors`\
    \ in this scope\n --> /tmp/tmp9ajrb_95.rs:5:14\n  |\n5 |     for d in divisors(n)\
    \ {\n  |              ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor_size = n;\n    let mut max_divisor_size = max_divisor_size\
    \ / 2;\n    while max_divisor_size != 1 {\n        if n % max_divisor_size ==\
    \ 0 {\n            max_divisor = max_divisor_size;\n        }\n        max_divisor_size\
    \ = max_divisor_size / 2;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `5`', /tmp/tmprxjj3dv7.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: -1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_value = n;\n\
    \    let mut max_divisor_value_prime = 1;\n    let mut max_divisor_value_prime_prime\
    \ = 1;\n    let mut max_divisor_value_prime_prime_prime = 1;\n\n    for divisor\
    \ in 1..=n {\n        let mut divisor_value = n;\n        let mut divisor_value_prime\
    \ = 1;\n        let mut divisor_value_prime_prime = 1;\n        let mut divisor_value_prime_prime_prime\
    \ = 1;\n\n        while divisor_value % divisor == 0 {\n            divisor_value\
    \ /= divisor;\n            divisor_value_prime *= divisor;\n            divisor_value_prime_prime\
    \ *= divisor;\n            divisor_value_prime_prime_prime *= divisor;\n     \
    \   }\n\n        if divisor_value > max_divisor {\n            max_divisor = divisor_value;\n\
    \            max_divisor_size = divisor;\n            max_divisor_value = divisor_value;\n\
    \            max_divisor_value_prime = divisor_value_prime;\n            max_divisor_value_prime_prime\
    \ = divisor_value_prime_prime;\n            max_divisor_value_prime_prime_prime\
    \ = divisor_value_prime_prime_prime;\n        }\n\n        if divisor_value ==\
    \ 1 {\n            break;\n        }\n    }\n\n    max_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008870
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    while max_divisor_size != 1 {\n\
    \        max_divisor += 1;\n        max_divisor_size = max_divisor_size / 2;\n\
    \    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpj96esrmr.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = n;\n        \
    \    }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpm89stfek.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_ind = 1;\n    let mut max_divisor_ind_2 = 2;\n\
    \    let mut max_divisor_ind_3 = 3;\n    let mut max_divisor_ind_4 = 4;\n    let\
    \ mut max_divisor_ind_5 = 5;\n    let mut max_divisor_ind_6 = 6;\n    let mut\
    \ max_divisor_ind_7 = 7;\n    let mut max_divisor_ind_8 = 8;\n    let mut max_divisor_ind_9\
    \ = 9;\n    let mut max_divisor_ind_10 = 10;\n    let mut max_divisor_ind_11 =\
    \ 11;\n    let mut max_divisor_ind_12 = 12;\n    let mut max_divisor_ind_13 =\
    \ 13;\n    let mut max_divisor_ind_14 = 14;\n    let mut max_divisor_ind_15 =\
    \ 15;\n    let mut max_divisor_ind_16 = 16;\n    let mut max_divisor_ind_17 =\
    \ 17;\n    let mut max_divisor_ind_18 = 18;\n    let mut max_divisor_ind_19 =\
    \ 19;\n    let mut max_divisor_ind_20 = 20;\n    let mut max_divisor_ind_21 =\
    \ 21;\n    let mut max_divisor_ind_22 = 22;\n    let mut max_divisor_ind_23 =\
    \ 23;\n    let mut max_divisor_ind_24 = 24;\n    let mut max_divisor_ind_25 =\
    \ 25;\n    let mut max_divisor_ind_26 = 26;\n    let mut max_divisor_ind_27 =\
    \ 27;\n    let mut max_divisor_ind_28 = 28;\n    let mut max_divisor_ind_29 =\
    \ 29;\n    let mut max_divisor_ind_30 = 30;\n    let mut max_divisor_ind_31 =\
    \ 31;\n    let mut max_divisor_ind_32 = 32;\n    let mut max_divisor_ind_33 =\
    \ 33;\n    let mut max_divisor_ind_34 = 34;\n    let mut max_divisor_ind_35 =\
    \ 35;\n    let mut max_divisor_ind_36 = 36;\n    let mut max_divisor_ind_37 =\
    \ 37;\n    let mut max_divisor_ind_38 = 38;\n    let mut max_divisor_ind_39 =\
    \ 39;\n    let mut max_divisor_ind_40 = 40;\n    let mut max_divisor_ind_41 =\
    \ 41;\n    let mut max_divisor_ind_42 = 42;\n    let mut max_divisor_ind_43 =\
    \ 43;\n    let mut max_divisor_ind_44 = 44;\n    let mut max_divisor_ind_45 =\
    \ 45;\n    let mut max_divisor_ind_46 = 46;\n\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpk3iko3zb.rs:2:33\n  |\n2 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |    ---------------            \
    \  ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for i in 1..=n {\n        if n\
    \ % i == 0 {\n            if max_divisor < i {\n                max_divisor =\
    \ i;\n                max_divisor_index = i;\n            }\n        }\n    }\n\
    \    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp509qin0u.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if max_divisor < divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_index = divisor as usize;\n                max_divisor_value\
    \ = n / divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpudb9mz6j.rs:8:30\n  |\n8 |\
    \             if max_divisor < divisor {\n  |                              ^^^^^^^\
    \ expected `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n\
    \  |\n8 |             if max_divisor < *divisor {\n  |                       \
    \       +\n\nerror[E0308]: mismatched types\n --> /tmp/tmpudb9mz6j.rs:9:31\n \
    \ |\n3 |     let mut max_divisor = n;\n  |                           - expected\
    \ due to this value\n...\n9 |                 max_divisor = divisor;\n  |    \
    \                           ^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp:\
    \ consider dereferencing the borrow\n  |\n9 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpudb9mz6j.rs:15:5\n   |\n2  | fn largest_divisor(n: isize) -> isize {\n\
    \   |                                 ----- expected `isize` because of return\
    \ type\n...\n15 |     max_divisor_index\n   |     ^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n15 |     max_divisor_index.try_into().unwrap()\n\
    \   |                      ++++++++++++++++++++\n\nerror[E0606]: casting `&isize`\
    \ as `usize` is invalid\n  --> /tmp/tmpudb9mz6j.rs:10:37\n   |\n10 |         \
    \        max_divisor_index = divisor as usize;\n   |                         \
    \            -------^^^^^^^^^\n   |                                     |\n  \
    \ |                                     cannot cast `&isize` as `usize`\n   |\
    \                                     help: dereference the expression: `*divisor`\n\
    \nerror: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0606.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for divisor in &[2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97] {\n        if n % divisor == 0 {\n            if divisor > max_divisor {\n\
    \                max_divisor = divisor;\n                max_divisor_index = divisor\
    \ as usize;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwprx3ldw.rs:7:26\n  |\n7 |\
    \             if divisor > max_divisor {\n  |                          ^^^^^^^^^^^\n\
    \  |                          |\n  |                          expected `&isize`,\
    \ found integer\n  |                          help: consider borrowing here: `&max_divisor`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpwprx3ldw.rs:8:31\n  |\n3 |    \
    \ let mut max_divisor = 0;\n  |                           - expected due to this\
    \ value\n...\n8 |                 max_divisor = divisor;\n  |                \
    \               ^^^^^^^ expected integer, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n8 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpwprx3ldw.rs:13:5\n   |\n2  | fn largest_divisor(n: isize) -> isize {\n\
    \   |                                 ----- expected `isize` because of return\
    \ type\n...\n13 |     max_divisor_index\n   |     ^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n13 |     max_divisor_index.try_into().unwrap()\n\
    \   |                      ++++++++++++++++++++\n\nerror[E0606]: casting `&isize`\
    \ as `usize` is invalid\n --> /tmp/tmpwprx3ldw.rs:9:37\n  |\n9 |             \
    \    max_divisor_index = divisor as usize;\n  |                              \
    \       -------^^^^^^^^^\n  |                                     |\n  |     \
    \                                cannot cast `&isize` as `usize`\n  |        \
    \                             help: dereference the expression: `*divisor`\n\n\
    error: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0606.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = n;\n            }\n        }\
    \ else {\n            if divisor > max_divisor_value {\n                max_divisor_value\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8b7gw4ew.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    let mut max_divisor_size_divisor = 0;\n    let mut max_divisor_size_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor = 0;\n    let mut max_divisor_size_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor = 0;\n    let mut\
    \ max_divisor_size_divisor_divisor_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_size = 0;\n\
    \    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor = 0;\n \
    \   let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_size = 0;\n\
    \    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpp9j5md0e.rs:31:24\n   |\n\
    31 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    32 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpp9j5md0e.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    while max_divisor_size != 0 {\n\
    \        let divisor = max_divisor_size % 2 == 0 ? max_divisor_size / 2 : (max_divisor_size\
    \ + 1);\n        if divisor > max_divisor {\n            max_divisor = divisor;\n\
    \            max_divisor_size = divisor;\n        }\n        max_divisor_size\
    \ /= 2;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `else`, or an operator, found `max_divisor_size`\n\
    \ --> /tmp/tmpdrrprq8x.rs:6:51\n  |\n6 |         let divisor = max_divisor_size\
    \ % 2 == 0 ? max_divisor_size / 2 : (max_divisor_size + 1);\n  |             \
    \                                      ^^^^^^^^^^^^^^^^ expected one of `.`, `;`,\
    \ `?`, `else`, or an operator\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count2 = 0;\n    let mut max_divisor_remainder_count3\
    \ = 0;\n    let mut max_divisor_remainder_count4 = 0;\n    let mut max_divisor_remainder_count5\
    \ = 0;\n    let mut max_divisor_remainder_count6 = 0;\n    let mut max_divisor_remainder_count7\
    \ = 0;\n    let mut max_divisor_remainder_count8 = 0;\n    let mut max_divisor_remainder_count9\
    \ = 0;\n    let mut max_divisor_remainder_count10 = 0;\n    let mut max_divisor_remainder_count11\
    \ = 0;\n    let mut max_divisor_remainder_count12 = 0;\n    let mut max_divisor_remainder_count13\
    \ = 0;\n    let mut max_divisor_remainder_count14 = 0;\n    let mut max_divisor_remainder_count15\
    \ = 0;\n    let mut max_divisor_remainder_count16 = 0;\n    let mut max_divisor_remainder_count17\
    \ = 0;\n    let mut max_divisor_remainder_count18 = 0;\n    let mut max_divisor_remainder_count19\
    \ = 0;\n    let mut max_divisor_remainder_count20 = 0;\n    let mut max_divisor_remainder_count21\
    \ = 0;\n    let mut max_divisor_remainder_count22 = 0;\n    let mut max_divisor_remainder_count23\
    \ = 0;\n    let mut max_divisor_remainder_count24 = 0;\n    let mut max_divisor_remainder_count25\
    \ = 0;\n    let mut max_divisor_remainder_count26 = 0;\n    let mut max_divisor_remainder_count27\
    \ = 0;\n    let mut max_divisor_remainder_count28 = 0;\n    let mut max_divisor_remainder_count29\
    \ = 0;\n    let mut max_divisor_remainder_count30 = 0;\n    let mut max_divisor_remainder_count31\
    \ = 0;\n    let mut max_divisor_remainder_count32 = 0;\n    let mut max_divisor_remainder_count33\
    \ = 0;\n    let mut max_divisor_remainder_count34 = 0;\n    let mut max_divisor_remainder_count35\
    \ = 0;\n    let mut max_divisor_remainder_count36 = 0;\n    let mut max_divisor_remainder_count37\
    \ = 0;\n    let mut max_divisor_remainder_count38 = 0;\n    let mut max_divisor_remainder_count39\
    \ = 0;\n    let mut max_divisor_remainder_count40 = 0;\n    let mut max_divisor_remainder_count41\
    \ = 0;\n    let mut max_divisor_remainder_count\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpl43e21s9.rs:46:40\n   |\n\
    46 |     let mut max_divisor_remainder_count\n   |                           \
    \             ^ help: add `;` here\n47 | }\n   | - unexpected token\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpl43e21s9.rs:2:33\n  |\n2 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = n;\n            }\n        }\
    \ else {\n            if divisor > max_divisor_value {\n                max_divisor_value\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8b7gw4ew.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = divisor;\n  \
    \          } else {\n                max_divisor_size = divisor;\n           \
    \ }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8jejcemy.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_index2 = 0;\n\
    \    let mut max_divisor_index3 = 0;\n    let mut max_divisor_index4 = 0;\n  \
    \  let mut max_divisor_index5 = 0;\n    let mut max_divisor_index6 = 0;\n    let\
    \ mut max_divisor_index7 = 0;\n    let mut max_divisor_index8 = 0;\n    let mut\
    \ max_divisor_index9 = 0;\n    let mut max_divisor_index10 = 0;\n    let mut max_divisor_index11\
    \ = 0;\n    let mut max_divisor_index12 = 0;\n    let mut max_divisor_index13\
    \ = 0;\n    let mut max_divisor_index14 = 0;\n    let mut max_divisor_index15\
    \ = 0;\n    let mut max_divisor_index16 = 0;\n    let mut max_divisor_index17\
    \ = 0;\n    let mut max_divisor_index18 = 0;\n    let mut max_divisor_index19\
    \ = 0;\n    let mut max_divisor_index20 = 0;\n    let mut max_divisor_index21\
    \ = 0;\n    let mut max_divisor_index22 = 0;\n    let mut max_divisor_index23\
    \ = 0;\n    let mut max_divisor_index24 = 0;\n    let mut max_divisor_index25\
    \ = 0;\n    let mut max_divisor_index26 = 0;\n    let mut max_divisor_index27\
    \ = 0;\n    let mut max_divisor_index28 = 0;\n    let mut max_divisor_index29\
    \ = 0;\n    let mut max_divisor_index30 = 0;\n    let mut max_divisor_index31\
    \ = 0;\n    let mut max_divisor_index32 = 0;\n    let mut max_divisor_index33\
    \ = 0;\n    let mut max_divisor_index34 = 0;\n    let mut max_divisor_index35\
    \ = 0;\n    let mut max_divisor_index36 = 0;\n    let mut max_divisor_index37\
    \ = 0;\n    let mut max_divisor_index38 = 0;\n    let mut max_divisor_index39\
    \ = 0;\n    let mut max_divisor_index40 = 0;\n    let mut max_divisor_index41\
    \ = 0;\n    let mut max_divisor_index42 = 0;\n    let mut max_divisor_index43\
    \ = 0;\n    let mut max_divisor_index44 = 0;\n    let mut max_divisor_index45\
    \ = 0;\n    let mut max_divisor_index46 = 0;\n    let mut max_divisor_index47\
    \ = 0;\n    let mut max_divisor_index48 = 0;\n    let mut max_divisor_index49\
    \ = 0;\n    let mut max_divisor_index50 = 0;\n    let mut max_divisor_index51\
    \ = 0;\n    let mut max_divisor_index52 = 0;\n    let mut max_divisor_index53\
    \ = 0;\n    let mut max_divisor_index54 = 0;\n    let mut max_divisor_index55\
    \ = 0;\n    let mut max_divisor_index56 = 0;\n    let mut max_divisor\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp0c14s99_.rs:60:24\n   |\n\
    60 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    61 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp0c14s99_.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for divisor in 1..=n {\n     \
    \   if n % divisor == 0 {\n            if divisor > max_divisor {\n          \
    \      max_divisor = divisor;\n                max_divisor_index = divisor;\n\
    \            }\n        } else {\n            if divisor > max_divisor {\n   \
    \             max_divisor = divisor;\n                max_divisor_index = divisor;\n\
    \            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpfb9bmhfy.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_indexes: Vec<usize>\
    \ = vec![];\n\n    for divisor in 1..=max_divisor {\n        if n % divisor ==\
    \ 0 {\n            max_divisor = divisor;\n            max_divisor_index = 0;\n\
    \            max_divisor_indexes.clear();\n        }\n        if max_divisor %\
    \ divisor == 0 {\n            max_divisor_indexes.push(divisor);\n           \
    \ if max_divisor_indexes.len() > max_divisor_index {\n                max_divisor_index\
    \ = max_divisor_indexes.len();\n            }\n        }\n    }\n    max_divisor_index\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmp061hdk4k.rs:14:38\n   |\n\
    14 |             max_divisor_indexes.push(divisor);\n   |                    \
    \                  ^^^^^^^ expected `usize`, found `isize`\n   |\nhelp: you can\
    \ convert an `isize` to a `usize` and panic if the converted value doesn't fit\n\
    \   |\n14 |             max_divisor_indexes.push(divisor.try_into().unwrap());\n\
    \   |                                             ++++++++++++++++++++\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp061hdk4k.rs:20:5\n   |\n2  | fn largest_divisor(n:\
    \ isize) -> isize {\n   |                                 ----- expected `isize`\
    \ because of return type\n...\n20 |     max_divisor_index\n   |     ^^^^^^^^^^^^^^^^^\
    \ expected `isize`, found `usize`\n   |\nhelp: you can convert a `usize` to an\
    \ `isize` and panic if the converted value doesn't fit\n   |\n20 |     max_divisor_index.try_into().unwrap()\n\
    \   |                      ++++++++++++++++++++\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: -1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_pow\
    \ = 0;\n\n    for i in 1..=n {\n        let mut divisor = i;\n        let mut\
    \ remainder = 0;\n        let mut remainder_pow = 0;\n\n        while divisor\
    \ != 0 {\n            remainder_pow = remainder_pow + 1;\n            remainder\
    \ = remainder + divisor % i;\n            divisor = divisor / i;\n        }\n\n\
    \        if remainder > max_divisor_remainder {\n            max_divisor = i;\n\
    \            max_divisor_remainder = remainder;\n            max_divisor_remainder_pow\
    \ = remainder_pow;\n        }\n    }\n\n    max_divisor\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1660008870
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if max_divisor < divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_index = divisor as usize;\n                max_divisor_value\
    \ = n;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmps0rj_n0x.rs:9:31\n  |\n3 |\
    \     let mut max_divisor = 0;\n  |                           - expected due to\
    \ this value\n...\n9 |                 max_divisor = divisor;\n  |           \
    \                    ^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n9 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0277]: can't compare `isize` with\
    \ `&isize`\n --> /tmp/tmps0rj_n0x.rs:8:28\n  |\n8 |             if max_divisor\
    \ < divisor {\n  |                            ^ no implementation for `isize <\
    \ &isize` and `isize > &isize`\n  |\n  = help: the trait `PartialOrd<&isize>`\
    \ is not implemented for `isize`\n  = help: the following other types implement\
    \ trait `PartialOrd<Rhs>`:\n            f32\n            f64\n            i128\n\
    \            i16\n            i32\n            i64\n            i8\n         \
    \   isize\n          and 6 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmps0rj_n0x.rs:15:5\n\
    \   |\n2  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \             ----- expected `isize` because of return type\n...\n15 |     max_divisor_index\n\
    \   |     ^^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can\
    \ convert a `usize` to an `isize` and panic if the converted value doesn't fit\n\
    \   |\n15 |     max_divisor_index.try_into().unwrap()\n   |                  \
    \    ++++++++++++++++++++\n\nerror[E0606]: casting `&isize` as `usize` is invalid\n\
    \  --> /tmp/tmps0rj_n0x.rs:10:37\n   |\n10 |                 max_divisor_index\
    \ = divisor as usize;\n   |                                     -------^^^^^^^^^\n\
    \   |                                     |\n   |                            \
    \         cannot cast `&isize` as `usize`\n   |                              \
    \       help: dereference the expression: `*divisor`\n\nerror: aborting due to\
    \ 4 previous errors\n\nSome errors have detailed explanations: E0277, E0308, E0606.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for d in divisors(n) {\n \
    \       if n % d == 0 {\n            if d > max_divisor {\n                max_divisor\
    \ = d;\n                max_divisor_remainder = n % d;\n            }\n      \
    \  }\n    }\n    max_divisor_remainder\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpbi9g2nk5.rs:5:14\n\
    \  |\n5 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor_size = n;\n    while max_divisor_size != 1 {\n\
    \        max_divisor_size /= 2;\n        max_divisor *= 2;\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpu3znl569.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n\n    for divisor in 1..=n {\n        if n % divisor == 0 {\n        \
    \    if divisor > max_divisor {\n                max_divisor = divisor;\n    \
    \            max_divisor_remainder = n % divisor;\n                max_divisor_remainder_count\
    \ = 0;\n            }\n            else {\n                max_divisor_remainder_count\
    \ += 1;\n            }\n        }\n    }\n\n    if max_divisor_remainder_count\
    \ == 0 {\n        max_divisor_remainder_count = 1;\n    }\n\n    max_divisor_remainder\
    \ += max_divisor_remainder_count * max_divisor;\n\n    max_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpuscdydfc.rs:31:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = divisor;\n            } else {\n                max_divisor = max_divisor;\n\
    \                max_divisor_size = max_divisor_size;\n            }\n       \
    \ }\n    }\n\n    if max_divisor_size == n {\n        max_divisor = max_divisor_value;\n\
    \    }\n\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmprcrq0wdn.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = n;\n        \
    \    }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpm89stfek.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow = 0;\n    let mut max_divisor_remainder_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow = 0;\n    let mut\
    \ max_divisor_remainder_pow_pow_pow_pow_pow_pow = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 0;\n\
    \    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 0;\n    let\
    \ mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 0;\n    let mut\
    \ max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_\n}\n\nfn main() {\n   \
    \ let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpzaobi5x_.rs:32:47\n   |\n\
    32 |     let mut max_divisor_remainder_pow_pow_pow_\n   |                    \
    \                           ^ help: add `;` here\n33 | }\n   | - unexpected token\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpzaobi5x_.rs:2:33\n  |\n2 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    let mut max_divisor_size_divisor = 0;\n    let mut max_divisor_size_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor = 0;\n    let mut max_divisor_size_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor = 0;\n    let mut\
    \ max_divisor_size_divisor_divisor_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_size = 0;\n\
    \    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor = 0;\n \
    \   let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_size = 0;\n\
    \    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut \n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmp421uy_o8.rs:32:1\n\
    \   |\n32 | }\n   | ^ expected identifier\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \            }\n        }\n    }\n    max_divisor_value\n}\n\nfn main() {\n  \
    \  let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpb_y18ygo.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = divisor;\n                max_divisor_value = n;\n            } else {\n \
    \               max_divisor_size = divisor;\n            }\n        }\n    }\n\
    \    max_divisor_value\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp_cyonx5h.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    for divisor in 1..=n {\n        if n % divisor == 0 {\n          \
    \  if divisor > max_divisor {\n                max_divisor = divisor;\n      \
    \          max_divisor_remainder = n % divisor;\n                max_divisor_remainder_count\
    \ = 0;\n            }\n            if divisor == max_divisor {\n             \
    \   max_divisor_remainder_count += 1;\n            }\n        }\n    }\n    if\
    \ max_divisor_remainder_count == 0 {\n        max_divisor_remainder_count = 1;\n\
    \    }\n    if max_divisor_remainder_count > 1 {\n        max_divisor_remainder\
    \ *= max_divisor_remainder_count;\n    }\n    max_divisor * max_divisor_remainder\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpn6bax6q6.rs:29:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_max = 0;\n    let mut max_divisor_remainder_pow_min\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc = 0;\n    let mut max_divisor_remainder_pow_min_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc_inc_inc = 0;\n    let mut\
    \ max_divisor_remainder_pow_min_inc_inc_inc_inc = 0;\n    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc_inc = 0;\n\
    \    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc_inc_inc = 0;\n\
    \    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc_inc_inc = 0;\n\
    \    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc_inc_inc_inc = 0;\n\
    \    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc_inc_inc_inc_inc_inc_inc_inc_inc_inc_inc\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc_inc\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpy0x44_ps.rs:25:50\n   |\n\
    25 |     let mut max_divisor_remainder_pow_min_inc_inc\n   |                 \
    \                                 ^ help: add `;` here\n26 | }\n   | - unexpected\
    \ token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpy0x44_ps.rs:2:33\n  |\n\
    2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------          \
    \    ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg = 0;\n    let mut max_divisor_remainder_pow_neg2\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg3 = 0;\n    let mut max_divisor_remainder_pow_neg4\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg5 = 0;\n    let mut max_divisor_remainder_pow_neg6\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg7 = 0;\n    let mut max_divisor_remainder_pow_neg8\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg9 = 0;\n    let mut max_divisor_remainder_pow_neg10\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg11 = 0;\n    let mut max_divisor_remainder_pow_neg12\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg13 = 0;\n    let mut max_divisor_remainder_pow_neg14\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg15 = 0;\n    let mut max_divisor_remainder_pow_neg16\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg17 = 0;\n    let mut max_divisor_remainder_pow_neg18\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg19 = 0;\n    let mut max_divisor_remainder_pow_neg20\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg21 = 0;\n    let mut max_divisor_remainder_pow_neg22\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg23 = 0;\n    let mut max_divisor_remainder_pow_neg24\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg25 = 0;\n    let mut max_divisor_remainder_pow_neg26\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg27 = 0;\n    let mut max_divisor_remainder_pow_neg28\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg29 = 0;\n    let mut max_divisor_remainder_pow_neg30\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg31 = 0;\n    let mut max_divisor_remainder_pow_neg32\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg33 = 0;\n    let mut max_divisor_remainder_pow_neg34\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg35 = 0;\n    let mut max_divisor_remainder_pow_neg36\
    \ = 0;\n    let mut max_divisor_remainder_pow_neg37 = 0;\n    let mut max_divisor_re\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpop8f4evc.rs:43:27\n   |\n\
    43 |     let mut max_divisor_re\n   |                           ^ help: add `;`\
    \ here\n44 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n -->\
    \ /tmp/tmpop8f4evc.rs:2:33\n  |\n2 | fn largest_divisor(n: isize) -> isize {\n\
    \  |    ---------------              ^^^^^ expected `isize`, found `()`\n  | \
    \   |\n  |    implicitly returns `()` as its body has no tail or `return` expression\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    let mut max_divisor_size_divisor = 0;\n    let mut max_divisor_size_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor = 0;\n    let mut max_divisor_size_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor = 0;\n    let mut\
    \ max_divisor_size_divisor_divisor_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_size = 0;\n\
    \    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor = 0;\n \
    \   let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_size = 0;\n\
    \    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divis\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpf7qke0sb.rs:31:35\n   |\n\
    31 |     let mut max_divisor_size_divis\n   |                                \
    \   ^ help: add `;` here\n32 | }\n   | - unexpected token\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpf7qke0sb.rs:2:33\n  |\n2 | fn largest_divisor(n: isize)\
    \ -> isize {\n  |    ---------------              ^^^^^ expected `isize`, found\
    \ `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor_size\
    \ < i {\n                max_divisor = i;\n                max_divisor_size =\
    \ i;\n                max_divisor_size_size = i;\n            }\n            if\
    \ max_divisor_size == i {\n                max_divisor_size_size = i;\n      \
    \      }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp5iko4e5v.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    for d in divisors(n) {\n        if n % d == 0 {\n            if d >\
    \ max_divisor {\n                max_divisor = d;\n                max_divisor_size\
    \ = n;\n                max_divisor_size_size = n;\n            }\n          \
    \  if d > max_divisor_size_size {\n                max_divisor_size = d;\n   \
    \             max_divisor_size_size = n;\n            }\n        }\n    }\n  \
    \  max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpg0ocmtpz.rs:6:14\n\
    \  |\n6 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor_remainder = 0;\n    for i in 2..=n {\n       \
    \ if n % i == 0 {\n            if max_divisor_remainder == 0 {\n             \
    \   max_divisor = i;\n                max_divisor_remainder = n % i;\n       \
    \     } else {\n                if max_divisor_remainder > max_divisor {\n   \
    \                 max_divisor = max_divisor_remainder;\n                    max_divisor_remainder\
    \ = n % max_divisor;\n                }\n            }\n        }\n    }\n   \
    \ max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpxoub59ee.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..=n {\n       \
    \ if n % i == 0 {\n            if max_divisor == 0 {\n                max_divisor\
    \ = i;\n                max_divisor_remainder = n % i;\n            } else {\n\
    \                if max_divisor_remainder > max_divisor_remainder {\n        \
    \            max_divisor = i;\n                    max_divisor_remainder = n %\
    \ i;\n                }\n            }\n        }\n    }\n    max_divisor\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp363wn127.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3oi7tksf.rs:54:24\n   |\n\
    54 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    55 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp3oi7tksf.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..n {\n        let\
    \ remainder = n % i;\n        if remainder == 0 {\n            max_divisor = i;\n\
    \            max_divisor_remainder = remainder;\n        }\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor_remainder = 0;\n    for divisor in 1..=n {\n \
    \       if n % divisor == 0 {\n            if divisor > max_divisor {\n      \
    \          max_divisor = divisor;\n                max_divisor_remainder = 0;\n\
    \            } else {\n                max_divisor_remainder += divisor - max_divisor;\n\
    \            }\n        }\n    }\n    max_divisor + max_divisor_remainder\n}\n\
    \nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpq3605qwh.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if divisor > max_divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_size = divisor;\n                max_divisor_size_index\
    \ = divisor;\n                max_divisor_index = divisor;\n                max_divisor_value\
    \ = n;\n            }\n            if divisor > max_divisor_value {\n        \
    \        max_divisor_value = divisor;\n                max_divisor_size_index\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      }\n    }\n\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmppe5j11zi.rs:11:26\n   |\n\
    11 |             if divisor > max_divisor {\n   |                          ^^^^^^^^^^^\n\
    \   |                          |\n   |                          expected `&isize`,\
    \ found integer\n   |                          help: consider borrowing here:\
    \ `&max_divisor`\n\nerror[E0308]: mismatched types\n  --> /tmp/tmppe5j11zi.rs:12:31\n\
    \   |\n3  |     let mut max_divisor = 0;\n   |                           - expected\
    \ due to this value\n...\n12 |                 max_divisor = divisor;\n   |  \
    \                             ^^^^^^^ expected integer, found `&isize`\n   |\n\
    help: consider dereferencing the borrow\n   |\n12 |                 max_divisor\
    \ = *divisor;\n   |                               +\n\nerror[E0308]: mismatched\
    \ types\n  --> /tmp/tmppe5j11zi.rs:13:36\n   |\n4  |     let mut max_divisor_size\
    \ = 0;\n   |                                - expected due to this value\n...\n\
    13 |                 max_divisor_size = divisor;\n   |                       \
    \             ^^^^^^^ expected integer, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n13 |                 max_divisor_size = *divisor;\n   |  \
    \                                  +\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmppe5j11zi.rs:14:42\n   |\n5  |     let mut max_divisor_size_index = 0;\n\
    \   |                                      - expected due to this value\n...\n\
    14 |                 max_divisor_size_index = divisor;\n   |                 \
    \                         ^^^^^^^ expected integer, found `&isize`\n   |\nhelp:\
    \ consider dereferencing the borrow\n   |\n14 |                 max_divisor_size_index\
    \ = *divisor;\n   |                                          +\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmppe5j11zi.rs:15:37\n   |\n6  |     let mut max_divisor_index\
    \ = 0;\n   |                                 - expected due to this value\n...\n\
    15 |                 max_divisor_index = divisor;\n   |                      \
    \               ^^^^^^^ expected integer, found `&isize`\n   |\nhelp: consider\
    \ dereferencing the borrow\n   |\n15 |     "
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    while max_divisor_size != 0 {\n\
    \        max_divisor += 1;\n        max_divisor_size = max_divisor_size / 2;\n\
    \    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp1l6qpaa1.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    let mut max_divisor_value_pos = 0;\n    let mut max_divisor_value_neg = 0;\n\
    \    let mut max_divisor_value_neg_index = 0;\n    let mut max_divisor_value_neg_size\
    \ = 0;\n    let mut max_divisor_value_neg_size_index = 0;\n    let mut max_divisor_value_neg_index2\
    \ = 0;\n    let mut max_divisor_value_neg_index2_size = 0;\n    let mut max_divisor_value_neg_index2_size_index\
    \ = 0;\n    let mut max_divisor_value_neg_index3 = 0;\n    let mut max_divisor_value_neg_index3_size\
    \ = 0;\n    let mut max_divisor_value_neg_index3_size_index = 0;\n    let mut\
    \ max_divisor_value_neg_index4 = 0;\n    let mut max_divisor_value_neg_index4_size\
    \ = 0;\n    let mut max_divisor_value_neg_index4_size_index = 0;\n    let mut\
    \ max_divisor_value_neg_index5 = 0;\n    let mut max_divisor_value_neg_index5_size\
    \ = 0;\n    let mut max_divisor_value_neg_index5_size_index = 0;\n    let mut\
    \ max_divisor_value_neg_index6 = 0;\n    let mut max_divisor_value_neg_index6_size\
    \ = 0;\n    let mut max_divisor_value_neg_index6_size_index = 0;\n    let mut\
    \ max_divisor_value_neg_index7 = 0;\n    let mut max_divisor_value_neg_index7_size\
    \ = 0;\n    let mut max_divisor_value_neg_index7_size_index = 0;\n    let mut\
    \ max_divisor_value_neg_index8 = 0;\n    let mut max_divisor_value_neg_index8_size\
    \ = 0;\n    let mut max_divisor_value_neg_index8_size_index = 0;\n    let mut\
    \ max_divisor_value_neg_index9 = 0;\n    let mut max_divisor_value_neg_index9_size\
    \ = 0;\n    let mut max_divisor_value_neg_index9_size_index = 0;\n    let mut\
    \ max_divisor_value_neg_index10 = 0;\n    let mut max_divisor_value_neg_index10_size\
    \ = 0;\n    let mut max_divisor_value_neg_index10_size_index = 0;\n    let mut\
    \ max_divisor_value_neg_index11 = 0;\n    let mut max_divisor_value_neg_index11_size\
    \ = 0;\n    let mut max_divisor_value_neg_index11_size_index = 0;\n    let mut\
    \ max_divisor_value_neg_index12 = 0;\n    let mut max_divisor_value_neg_index12_size\
    \ = 0;\n    let mut max_divisor_value_neg_index12_size_index = 0;\n    let mut\
    \ max_divisor_value_neg_index13 = 0;\n    let mut max_divisor_value_neg_index13_size\
    \ = 0;\n    let mut max_divisor_value_neg_index\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpn7vy3ias.rs:48:40\n   |\n\
    48 |     let mut max_divisor_value_neg_index\n   |                           \
    \             ^ help: add `;` here\n49 | }\n   | - unexpected token\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpn7vy3ias.rs:2:33\n  |\n2 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = 0;\n\
    \    let mut max_divisor_value_index = 0;\n    let mut max_divisor_value_value\
    \ = 0;\n    let mut max_divisor_value_value_index = 0;\n    let mut max_divisor_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let mut max_divisor_value_value_value_value\
    \ = 0;\n    let mut max_divisor_value_value_value_index = 0;\n    let \n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected pattern, found `}`\n  --> /tmp/tmpms0x5h07.rs:52:1\n  \
    \ |\n52 | }\n   | ^ expected pattern\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = n;\n            }\n        }\
    \ else {\n            if divisor > max_divisor_value {\n                max_divisor_value\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8b7gw4ew.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = divisor;\n            } else {\n                max_divisor = max_divisor;\n\
    \                max_divisor_size = max_divisor_size;\n            }\n       \
    \ }\n    }\n\n    if max_divisor_size > n {\n        max_divisor = max_divisor_size;\n\
    \    }\n\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpqljonsep.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..=n {\n       \
    \ let mut divisor = i;\n        while divisor % 2 == 0 {\n            divisor\
    \ /= 2;\n        }\n        if divisor > max_divisor {\n            max_divisor\
    \ = divisor;\n            max_divisor_remainder = i;\n        }\n    }\n    max_divisor_remainder\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpel0saq4r.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    while max_divisor_size != 1 {\n\
    \        max_divisor += 1;\n        max_divisor_size = max_divisor_size / 2;\n\
    \    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpj96esrmr.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = n;\n            }\n        }\n\
    \    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpbp2ndw4b.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..=n {\n       \
    \ if n % i == 0 {\n            if max_divisor == 0 {\n                max_divisor\
    \ = i;\n                max_divisor_remainder = n % i;\n            } else {\n\
    \                if max_divisor_remainder == 0 {\n                    max_divisor\
    \ = i;\n                    max_divisor_remainder = n % i;\n                }\
    \ else {\n                    if max_divisor_remainder > max_divisor_remainder\
    \ {\n                        max_divisor = i;\n                        max_divisor_remainder\
    \ = n % i;\n                    }\n                }\n            }\n        }\n\
    \    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmph8rwile6.rs:28:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for i in 1..n {\n        if n %\
    \ i == 0 {\n            if max_divisor_size == 0 {\n                max_divisor\
    \ = i;\n                max_divisor_size = 1;\n            } else {\n        \
    \        if max_divisor_size > i {\n                    max_divisor = i;\n   \
    \                 max_divisor_size = i;\n                }\n            }\n  \
    \      }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp820__l7w.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for divisor in 1..=n {\n \
    \       if n % divisor == 0 {\n            if divisor > max_divisor {\n      \
    \          max_divisor = divisor;\n                max_divisor_remainder = n %\
    \ divisor;\n            }\n        }\n    }\n    if max_divisor_remainder == 0\
    \ {\n        max_divisor\n    } else {\n        max_divisor_remainder\n    }\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp_q7zkg82.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..=n {\n       \
    \ let divisor = i / n;\n        if divisor > max_divisor {\n            max_divisor\
    \ = divisor;\n            max_divisor_remainder = i;\n        }\n    }\n    max_divisor_remainder\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpdfa2aqq6.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for i in 1..=n {\n        if n\
    \ % i == 0 {\n            if max_divisor < i {\n                max_divisor =\
    \ i;\n                max_divisor_index = i;\n            }\n        }\n    }\n\
    \    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp509qin0u.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \                max_divisor_value = i;\n            }\n            if max_divisor_value\
    \ == i {\n                max_divisor_value = i;\n            }\n        }\n \
    \   }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp3opprs2s.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_value = 0;\n\
    \    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut max_divisor_value_found = false;\n    let mut max_divisor_value_found\
    \ = false;\n    let mut \n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected identifier, found `}`\n  --> /tmp/tmpcpu_zn2g.rs:61:1\n\
    \   |\n61 | }\n   | ^ expected identifier\n\nerror: aborting due to previous error\n\
    \n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = n;\n            }\n        }\n\
    \    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpbp2ndw4b.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp3oi7tksf.rs:54:24\n   |\n\
    54 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    55 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp3oi7tksf.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..=n {\n       \
    \ let remainder = n % i;\n        if remainder == 0 {\n            max_divisor\
    \ = i;\n            max_divisor_remainder = remainder;\n        }\n    }\n   \
    \ max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp5y8hpymp.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for i in 1..=n {\n        if n\
    \ % i == 0 {\n            if max_divisor < i {\n                max_divisor =\
    \ i;\n                max_divisor_index = i;\n            }\n        }\n    }\n\
    \    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp509qin0u.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    let mut max_divisor_size_pow2 = 0;\n\n    for divisor in &[isize::MIN,\
    \ isize::MAX] {\n        if n % divisor == 0 {\n            let divisor_size =\
    \ divisor as isize;\n            let divisor_size_size = divisor_size * divisor_size;\n\
    \            if divisor_size > max_divisor_size {\n                max_divisor\
    \ = divisor;\n                max_divisor_size = divisor_size;\n             \
    \   max_divisor_size_size = divisor_size_size;\n                max_divisor_size_pow2\
    \ = divisor_size_pow2;\n            }\n        }\n    }\n\n    if max_divisor_size\
    \ > max_divisor_size_pow2 {\n        max_divisor_size_pow2 = max_divisor_size;\n\
    \    }\n\n    max_divisor_size_pow2\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find value `divisor_size_pow2` in this scope\n  -->\
    \ /tmp/tmp_1g0v95m.rs:16:41\n   |\n16 |                 max_divisor_size_pow2\
    \ = divisor_size_pow2;\n   |                                         ^^^^^^^^^^^^^^^^^\
    \ help: a local variable with a similar name exists: `divisor_size_size`\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmp_1g0v95m.rs:13:31\n   |\n3  |     let mut max_divisor\
    \ = 0;\n   |                           - expected due to this value\n...\n13 |\
    \                 max_divisor = divisor;\n   |                               ^^^^^^^\
    \ expected integer, found `&isize`\n   |\nhelp: consider dereferencing the borrow\n\
    \   |\n13 |                 max_divisor = *divisor;\n   |                    \
    \           +\n\nerror[E0606]: casting `&isize` as `isize` is invalid\n  --> /tmp/tmp_1g0v95m.rs:10:32\n\
    \   |\n10 |             let divisor_size = divisor as isize;\n   |           \
    \                     -------^^^^^^^^^\n   |                                |\n\
    \   |                                cannot cast `&isize` as `isize`\n   |   \
    \                             help: dereference the expression: `*divisor`\n\n\
    error: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0425, E0606.\nFor more information about an error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\
    \    let mut max_divisor_ind_ind = 1;\n    let mut max_divisor_ind_ind = 1;\n\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpu8dpihx1.rs:2:33\n  |\n2 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |    ---------------            \
    \  ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    let mut max_divisor_size_divisor = 0;\n    let mut max_divisor_size_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor = 0;\n    let mut max_divisor_size_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor = 0;\n    let mut\
    \ max_divisor_size_divisor_divisor_divisor_size = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_size = 0;\n\
    \    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor = 0;\n \
    \   let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_size = 0;\n\
    \    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_size\
    \ = 0;\n    let mut max_divisor_size_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor_divisor\
    \ = 0;\n    let mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpp9j5md0e.rs:31:24\n   |\n\
    31 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    32 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpp9j5md0e.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..=n {\n       \
    \ if n % i == 0 {\n            let mut divisor = i;\n            while divisor\
    \ < n {\n                divisor += i;\n            }\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_remainder\
    \ = n % divisor;\n            }\n        }\n    }\n    max_divisor_remainder\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqv2uok_5.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..=n {\n       \
    \ if n % i == 0 {\n            if max_divisor == 0 {\n                max_divisor\
    \ = i;\n                max_divisor_remainder = n % i;\n            } else {\n\
    \                if max_divisor_remainder == 0 {\n                    max_divisor\
    \ = i;\n                    max_divisor_remainder = n % i;\n                }\n\
    \            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpbzbne4j2.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = n;\n            }\n        }\
    \ else {\n            if divisor > max_divisor_value {\n                max_divisor_value\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8b7gw4ew.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    for d in divisors(n) {\n        if n % d == 0 {\n            if max_divisor_size\
    \ == 0 {\n                max_divisor = d;\n                max_divisor_size =\
    \ n;\n                max_divisor_size_size = n;\n            } else {\n     \
    \           if n > max_divisor_size {\n                    max_divisor = d;\n\
    \                    max_divisor_size = n;\n                    max_divisor_size_size\
    \ = n;\n                }\n            }\n        }\n    }\n    if max_divisor_size\
    \ == 0 {\n        max_divisor = n;\n        max_divisor_size = n;\n        max_divisor_size_size\
    \ = n;\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmp8r946xl5.rs:6:14\n\
    \  |\n6 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n\n    for divisor in 1..=n {\n    \
    \    if n % divisor == 0 {\n            if max_divisor < divisor {\n         \
    \       max_divisor = divisor;\n                max_divisor_size = n;\n      \
    \      }\n        }\n    }\n\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8nvhon2k.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = n;\n            }\n        }\
    \ else {\n            if divisor > max_divisor_value {\n                max_divisor_value\
    \ = divisor;\n                max_divisor_index = divisor;\n            }\n  \
    \      }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8b7gw4ew.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_n\
    \ = 0;\n    let mut max_divisor_remainder_n2 = 0;\n    let mut max_divisor_remainder_n3\
    \ = 0;\n    let mut max_divisor_remainder_n4 = 0;\n    let mut max_divisor_remainder_n5\
    \ = 0;\n    let mut max_divisor_remainder_n6 = 0;\n    let mut max_divisor_remainder_n7\
    \ = 0;\n    let mut max_divisor_remainder_n8 = 0;\n    let mut max_divisor_remainder_n9\
    \ = 0;\n    let mut max_divisor_remainder_n10 = 0;\n    let mut max_divisor_remainder_n11\
    \ = 0;\n    let mut max_divisor_remainder_n12 = 0;\n    let mut max_divisor_remainder_n13\
    \ = 0;\n    let mut max_divisor_remainder_n14 = 0;\n    let mut max_divisor_remainder_n15\
    \ = 0;\n    let mut max_divisor_remainder_n16 = 0;\n    let mut max_divisor_remainder_n17\
    \ = 0;\n    let mut max_divisor_remainder_n18 = 0;\n    let mut max_divisor_remainder_n19\
    \ = 0;\n    let mut max_divisor_remainder_n20 = 0;\n    let mut max_divisor_remainder_n21\
    \ = 0;\n    let mut max_divisor_remainder_n22 = 0;\n    let mut max_divisor_remainder_n23\
    \ = 0;\n    let mut max_divisor_remainder_n24 = 0;\n    let mut max_divisor_remainder_n25\
    \ = 0;\n    let mut max_divisor_remainder_n26 = 0;\n    let mut max_divisor_remainder_n27\
    \ = 0;\n    let mut max_divisor_remainder_n28 = 0;\n    let mut max_divisor_remainder_n29\
    \ = 0;\n    let mut max_divisor_remainder_n30 = 0;\n    let mut max_divisor_remainder_n31\
    \ = 0;\n    let mut max_divisor_remainder_n32 = 0;\n    let mut max_divisor_remainder_n33\
    \ = 0;\n    let mut max_divisor_remainder_n34 = 0;\n    let mut max_divisor_remainder_n35\
    \ = 0;\n    let mut max_divisor_remainder_n36 = 0;\n    let mut max_divisor_remainder_n37\
    \ = 0;\n    let mut max_divisor_remainder_n38 = 0;\n    let mut max_divisor_remainder_n39\
    \ = 0;\n    let mut max_divisor_remainder_n40 = 0;\n    let mut max_divisor_remainder_n41\
    \ = 0;\n    let mut max_divisor_remainder_\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpm5735pdm.rs:46:35\n   |\n\
    46 |     let mut max_divisor_remainder_\n   |                                \
    \   ^ help: add `;` here\n47 | }\n   | - unexpected token\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpm5735pdm.rs:2:33\n  |\n2 | fn largest_divisor(n: isize)\
    \ -> isize {\n  |    ---------------              ^^^^^ expected `isize`, found\
    \ `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail or `return`\
    \ expression\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_max = 0;\n    let mut max_divisor_remainder_pow_min\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc = 0;\n    let mut max_divisor_remainder_pow_min_dec\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc_dec = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_inc_dec_dec = 0;\n    let mut\
    \ max_divisor_remainder_pow_min_dec_dec_dec = 0;\n    let mut max_divisor_remainder_pow_min_inc_dec_dec_dec\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let\
    \ mut max_divisor_remainder_pow_min_inc_dec_dec_dec_dec = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let\
    \ mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let\
    \ mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let\
    \ mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let\
    \ mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let\
    \ mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let\
    \ mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec\
    \ = 0;\n    let mut max_divisor_remainder_pow_min_dec_dec_dec_dec = 0;\n    let\
    \ mu\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmp9_z3jsw1.rs:37:11\n   |\n\
    37 |     let mu\n   |           ^ help: add `;` here\n38 | }\n   | - unexpected\
    \ token\n\nerror[E0308]: mismatched types\n --> /tmp/tmp9_z3jsw1.rs:2:33\n  |\n\
    2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------          \
    \    ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = divisor;\n                max_divisor_value = n;\n            }\n        }\n\
    \    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2urm03ul.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = divisor;\n  \
    \          } else {\n                max_divisor_size = divisor;\n           \
    \ }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp8jejcemy.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if divisor > max_divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_size = divisor;\n                max_divisor_value\
    \ = n;\n            }\n        }\n    }\n    max_divisor_value\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpj0e0n_9_.rs:8:26\n  |\n8 |\
    \             if divisor > max_divisor {\n  |                          ^^^^^^^^^^^\n\
    \  |                          |\n  |                          expected `&isize`,\
    \ found integer\n  |                          help: consider borrowing here: `&max_divisor`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpj0e0n_9_.rs:9:31\n  |\n3 |    \
    \ let mut max_divisor = 0;\n  |                           - expected due to this\
    \ value\n...\n9 |                 max_divisor = divisor;\n  |                \
    \               ^^^^^^^ expected integer, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n9 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpj0e0n_9_.rs:10:36\n   |\n4  |     let mut max_divisor_size = 0;\n  \
    \ |                                - expected due to this value\n...\n10 |   \
    \              max_divisor_size = divisor;\n   |                             \
    \       ^^^^^^^ expected integer, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n10 |                 max_divisor_size = *divisor;\n   |  \
    \                                  +\n\nerror: aborting due to 3 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count_remainder = 0;\n\n    for i in\
    \ 1..=n {\n        if n % i == 0 {\n            if max_divisor_remainder < i {\n\
    \                max_divisor_remainder = i;\n                max_divisor_remainder_count\
    \ = max_divisor_remainder_count_remainder;\n            }\n            if max_divisor_remainder\
    \ == i {\n                max_divisor_remainder_count_remainder += 1;\n      \
    \      }\n        }\n    }\n\n    if max_divisor_remainder == 0 {\n        max_divisor_remainder\
    \ = n;\n        max_divisor_remainder_count = max_divisor_remainder_count_remainder;\n\
    \    }\n\n    max_divisor_remainder\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp08ox1bqv.rs:30:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    for divisor in &[2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97] {\n        if n % divisor == 0 {\n            if max_divisor % divisor ==\
    \ 0 {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor as usize;\n            }\n        }\n    }\n    max_divisor_index\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpjv9s6fcx.rs:8:31\n  |\n3 |\
    \     let mut max_divisor = n;\n  |                           - expected due to\
    \ this value\n...\n8 |                 max_divisor = divisor;\n  |           \
    \                    ^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n8 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpjv9s6fcx.rs:13:5\n   |\n2  | fn largest_divisor(n: isize) -> isize {\n\
    \   |                                 ----- expected `isize` because of return\
    \ type\n...\n13 |     max_divisor_index\n   |     ^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n13 |     max_divisor_index.try_into().unwrap()\n\
    \   |                      ++++++++++++++++++++\n\nerror[E0606]: casting `&isize`\
    \ as `usize` is invalid\n --> /tmp/tmpjv9s6fcx.rs:9:37\n  |\n9 |             \
    \    max_divisor_index = divisor as usize;\n  |                              \
    \       -------^^^^^^^^^\n  |                                     |\n  |     \
    \                                cannot cast `&isize` as `usize`\n  |        \
    \                             help: dereference the expression: `*divisor`\n\n\
    error: aborting due to 3 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0606.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_ind = 1;\n\n    for divisor in &[2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97] {\n        if n % divisor == 0 {\n            if divisor > max_divisor {\n\
    \                max_divisor = divisor;\n                max_divisor_ind = 1;\n\
    \            } else {\n                max_divisor_ind += 1;\n            }\n\
    \        }\n    }\n\n    max_divisor_ind\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpt_n3wl65.rs:8:26\n  |\n8 |\
    \             if divisor > max_divisor {\n  |                          ^^^^^^^^^^^\n\
    \  |                          |\n  |                          expected `&isize`,\
    \ found `isize`\n  |                          help: consider borrowing here: `&max_divisor`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpt_n3wl65.rs:9:31\n  |\n3 |    \
    \ let mut max_divisor = n;\n  |                           - expected due to this\
    \ value\n...\n9 |                 max_divisor = divisor;\n  |                \
    \               ^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n9 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count2 = 0;\n    let mut max_divisor_remainder_count3\
    \ = 0;\n    let mut max_divisor_remainder_count4 = 0;\n    let mut max_divisor_remainder_count5\
    \ = 0;\n    let mut max_divisor_remainder_count6 = 0;\n    let mut max_divisor_remainder_count7\
    \ = 0;\n    let mut max_divisor_remainder_count8 = 0;\n    let mut max_divisor_remainder_count9\
    \ = 0;\n    let mut max_divisor_remainder_count10 = 0;\n    let mut max_divisor_remainder_count11\
    \ = 0;\n    let mut max_divisor_remainder_count12 = 0;\n    let mut max_divisor_remainder_count13\
    \ = 0;\n    let mut max_divisor_remainder_count14 = 0;\n    let mut max_divisor_remainder_count15\
    \ = 0;\n    let mut max_divisor_remainder_count16 = 0;\n    let mut max_divisor_remainder_count17\
    \ = 0;\n    let mut max_divisor_remainder_count18 = 0;\n    let mut max_divisor_remainder_count19\
    \ = 0;\n    let mut max_divisor_remainder_count20 = 0;\n    let mut max_divisor_remainder_count21\
    \ = 0;\n    let mut max_divisor_remainder_count22 = 0;\n    let mut max_divisor_remainder_count23\
    \ = 0;\n    let mut max_divisor_remainder_count24 = 0;\n    let mut max_divisor_remainder_count25\
    \ = 0;\n    let mut max_divisor_remainder_count26 = 0;\n    let mut max_divisor_remainder_count27\
    \ = 0;\n    let mut max_divisor_remainder_count28 = 0;\n    let mut max_divisor_remainder_count29\
    \ = 0;\n    let mut max_divisor_remainder_count30 = 0;\n    let mut max_divisor_remainder_count31\
    \ = 0;\n    let mut max_divisor_remainder_count32 = 0;\n    let mut max_divisor_remainder_count33\
    \ = 0;\n    let mut max_divisor_remainder_count34 = 0;\n    let mut max_divisor_remainder_count35\
    \ = 0;\n    let mut max_divisor_remainder_count36 = 0;\n    let mut max_divisor_remainder_count37\
    \ = 0;\n    let mut max_divisor_remainder_count38 = 0;\n    let mut max_divisor_remainder_count39\
    \ = 0;\n    let mut max_divisor_remainder_count40 = 0;\n    let mut max_divisor_remainder_count41\
    \ = 0;\n    let mut max_divisor_remainder_count\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpl43e21s9.rs:46:40\n   |\n\
    46 |     let mut max_divisor_remainder_count\n   |                           \
    \             ^ help: add `;` here\n47 | }\n   | - unexpected token\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpl43e21s9.rs:2:33\n  |\n2 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for divisor in &[2, 3, 5, 7, 11,\
    \ 13, 17, 19, 23, 29, 31, 37, 41, 43, 47, 53, 59, 61, 67, 71, 73, 79, 83, 89,\
    \ 97] {\n        if n % divisor == 0 {\n            if divisor > max_divisor {\n\
    \                max_divisor = divisor;\n                max_divisor_index = divisor\
    \ as usize;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpwprx3ldw.rs:7:26\n  |\n7 |\
    \             if divisor > max_divisor {\n  |                          ^^^^^^^^^^^\n\
    \  |                          |\n  |                          expected `&isize`,\
    \ found integer\n  |                          help: consider borrowing here: `&max_divisor`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpwprx3ldw.rs:8:31\n  |\n3 |    \
    \ let mut max_divisor = 0;\n  |                           - expected due to this\
    \ value\n...\n8 |                 max_divisor = divisor;\n  |                \
    \               ^^^^^^^ expected integer, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n8 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpwprx3ldw.rs:13:5\n   |\n2  | fn largest_divisor(n: isize) -> isize {\n\
    \   |                                 ----- expected `isize` because of return\
    \ type\n...\n13 |     max_divisor_index\n   |     ^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n13 |     max_divisor_index.try_into().unwrap()\n\
    \   |                      ++++++++++++++++++++\n\nerror[E0606]: casting `&isize`\
    \ as `usize` is invalid\n --> /tmp/tmpwprx3ldw.rs:9:37\n  |\n9 |             \
    \    max_divisor_index = divisor as usize;\n  |                              \
    \       -------^^^^^^^^^\n  |                                     |\n  |     \
    \                                cannot cast `&isize` as `usize`\n  |        \
    \                             help: dereference the expression: `*divisor`\n\n\
    error: aborting due to 4 previous errors\n\nSome errors have detailed explanations:\
    \ E0308, E0606.\nFor more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..=n {\n       \
    \ let remainder = i % n;\n        if remainder == 0 {\n            max_divisor\
    \ = i;\n            max_divisor_remainder = remainder;\n        }\n    }\n   \
    \ max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp3jzmcajk.rs:17:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008866
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1czxpnrp.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if divisor > max_divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_index = divisor;\n                max_divisor_value\
    \ = n;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpdigeh0md.rs:8:26\n  |\n8 |\
    \             if divisor > max_divisor {\n  |                          ^^^^^^^^^^^\n\
    \  |                          |\n  |                          expected `&isize`,\
    \ found integer\n  |                          help: consider borrowing here: `&max_divisor`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpdigeh0md.rs:9:31\n  |\n3 |    \
    \ let mut max_divisor = 0;\n  |                           - expected due to this\
    \ value\n...\n9 |                 max_divisor = divisor;\n  |                \
    \               ^^^^^^^ expected integer, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n9 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpdigeh0md.rs:10:37\n   |\n4  |     let mut max_divisor_index = 0;\n \
    \  |                                 - expected due to this value\n...\n10 | \
    \                max_divisor_index = divisor;\n   |                          \
    \           ^^^^^^^ expected integer, found `&isize`\n   |\nhelp: consider dereferencing\
    \ the borrow\n   |\n10 |                 max_divisor_index = *divisor;\n   | \
    \                                    +\n\nerror: aborting due to 3 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    for i in 1..=max_divisor {\n \
    \       if n % i == 0 {\n            max_divisor = i;\n            max_divisor_index\
    \ = i;\n        }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpx72c3z_q.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008866
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for i in 1..=n {\n        if n\
    \ % i == 0 {\n            if max_divisor < i {\n                max_divisor =\
    \ i;\n                max_divisor_index = i;\n            }\n        }\n    }\n\
    \    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp509qin0u.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    while max_divisor_size != 1 {\n\
    \        max_divisor += 1;\n        max_divisor_size = max_divisor_size / 2;\n\
    \    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpj96esrmr.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for i in 1..=n {\n        if n\
    \ % i == 0 {\n            if max_divisor < i {\n                max_divisor =\
    \ i;\n                max_divisor_index = i;\n            }\n        }\n    }\n\
    \    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp509qin0u.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if divisor > max_divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_index = divisor as usize;\n                max_divisor_value\
    \ = n / divisor as isize;\n            }\n        }\n    }\n    max_divisor_index\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp3s4wg514.rs:8:26\n  |\n8 |\
    \             if divisor > max_divisor {\n  |                          ^^^^^^^^^^^\n\
    \  |                          |\n  |                          expected `&isize`,\
    \ found integer\n  |                          help: consider borrowing here: `&max_divisor`\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmp3s4wg514.rs:9:31\n  |\n3 |    \
    \ let mut max_divisor = 0;\n  |                           - expected due to this\
    \ value\n...\n9 |                 max_divisor = divisor;\n  |                \
    \               ^^^^^^^ expected integer, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n9 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmp3s4wg514.rs:15:5\n   |\n2  | fn largest_divisor(n: isize) -> isize {\n\
    \   |                                 ----- expected `isize` because of return\
    \ type\n...\n15 |     max_divisor_index\n   |     ^^^^^^^^^^^^^^^^^ expected `isize`,\
    \ found `usize`\n   |\nhelp: you can convert a `usize` to an `isize` and panic\
    \ if the converted value doesn't fit\n   |\n15 |     max_divisor_index.try_into().unwrap()\n\
    \   |                      ++++++++++++++++++++\n\nerror[E0606]: casting `&isize`\
    \ as `usize` is invalid\n  --> /tmp/tmp3s4wg514.rs:10:37\n   |\n10 |         \
    \        max_divisor_index = divisor as usize;\n   |                         \
    \            -------^^^^^^^^^\n   |                                     |\n  \
    \ |                                     cannot cast `&isize` as `usize`\n   |\
    \                                     help: dereference the expression: `*divisor`\n\
    \nerror[E0606]: casting `&isize` as `isize` is invalid\n  --> /tmp/tmp3s4wg514.rs:11:41\n\
    \   |\n11 |                 max_divisor_value = n / divisor as isize;\n   |  \
    \                                       -------^^^^^^^^^\n   |               \
    \                          |\n   |                                         cannot\
    \ cast `&isize` as `isize`\n   |                                         help:\
    \ dereference the expression: `*divisor`\n\ne"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for i in 1..=n {\n        if n\
    \ % i == 0 {\n            if max_divisor < i {\n                max_divisor =\
    \ i;\n                max_divisor_size = 1;\n            }\n            else {\n\
    \                max_divisor += 1;\n                max_divisor_size += 1;\n \
    \           }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkfxcgy_f.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008866
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_n = 0;\n\
    \    let mut max_divisor_size_n_n = 0;\n    let mut max_divisor_size_n_n_n = 0;\n\
    \    let mut max_divisor_size_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut\
    \ max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut\
    \ max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let\
    \ mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n  \
    \  let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut\
    \ max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n\
    \ = 0;\n    let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpu8ol78zu.rs:31:60\n   |\n\
    31 |     let mut max_divisor_size_n_n_n_n_n_n_n_n_n_n_n_n_n_n_n_\n   |       \
    \                                                     ^ help: add `;` here\n32\
    \ | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpu8ol78zu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = divisor;\n            }\n            else {\n                max_divisor =\
    \ max_divisor;\n                max_divisor_size = max_divisor_size;\n       \
    \     }\n        }\n    }\n\n    max_divisor_value\n}\n\nfn main() {\n    let\
    \ candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpdzzlib_p.rs:25:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008866
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if max_divisor < divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_index = divisor;\n                max_divisor_value\
    \ = n;\n            }\n        }\n    }\n\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpgetf5_un.rs:10:31\n   |\n\
    3  |     let mut max_divisor = 0;\n   |                           - expected due\
    \ to this value\n...\n10 |                 max_divisor = divisor;\n   |      \
    \                         ^^^^^^^ expected `isize`, found `&isize`\n   |\nhelp:\
    \ consider dereferencing the borrow\n   |\n10 |                 max_divisor =\
    \ *divisor;\n   |                               +\n\nerror[E0277]: can't compare\
    \ `isize` with `&isize`\n --> /tmp/tmpgetf5_un.rs:9:28\n  |\n9 |             if\
    \ max_divisor < divisor {\n  |                            ^ no implementation\
    \ for `isize < &isize` and `isize > &isize`\n  |\n  = help: the trait `PartialOrd<&isize>`\
    \ is not implemented for `isize`\n  = help: the following other types implement\
    \ trait `PartialOrd<Rhs>`:\n            f32\n            f64\n            i128\n\
    \            i16\n            i32\n            i64\n            i8\n         \
    \   isize\n          and 6 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmpgetf5_un.rs:11:37\n\
    \   |\n4  |     let mut max_divisor_index = 0;\n   |                         \
    \        - expected due to this value\n...\n11 |                 max_divisor_index\
    \ = divisor;\n   |                                     ^^^^^^^ expected integer,\
    \ found `&isize`\n   |\nhelp: consider dereferencing the borrow\n   |\n11 |  \
    \               max_divisor_index = *divisor;\n   |                          \
    \           +\n\nerror: aborting due to 3 previous errors\n\nSome errors have\
    \ detailed explanations: E0277, E0308.\nFor more information about an error, try\
    \ `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1czxpnrp.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n\n    max_divisor_index\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpl0gvppe9.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for i in 1..=n {\n        if n\
    \ % i == 0 {\n            if max_divisor < i {\n                max_divisor =\
    \ i;\n                max_divisor_index = i;\n            }\n        }\n    }\n\
    \    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp509qin0u.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..=n {\n       \
    \ if n % i == 0 {\n            if max_divisor_remainder == 0 {\n             \
    \   max_divisor = i;\n                max_divisor_remainder = n % i;\n       \
    \     } else {\n                if max_divisor_remainder > max_divisor {\n   \
    \                 max_divisor = i;\n                    max_divisor_remainder\
    \ = n % i;\n                }\n            }\n        }\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpjuewh3ld.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_remainder =\
    \ 0;\n    let mut max_divisor_remainder_size = 0;\n    let mut max_divisor_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_size = 0;\n    let mut max_divisor_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_size = 0;\n    let\
    \ mut max_divisor_remainder_remainder_remainder_remainder = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_remainder\
    \ = 0;\n    let mut max_divisor_remainder_remainder_remainder_remainder_size =\
    \ 0;\n    let mut max_\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpz05nqlfc.rs:35:17\n   |\n\
    35 |     let mut max_\n   |                 ^ help: add `;` here\n36 | }\n   |\
    \ - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpz05nqlfc.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 0
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..n {\n        if\
    \ n % i == 0 {\n            if max_divisor == 0 {\n                max_divisor\
    \ = i;\n                max_divisor_remainder = 0;\n            } else {\n   \
    \             if max_divisor_remainder < i {\n                    max_divisor\
    \ = i;\n                    max_divisor_remainder = i;\n                } else\
    \ {\n                    max_divisor_remainder = i;\n                }\n     \
    \       }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1660008866
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if max_divisor < divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_index = divisor as usize;\n                max_divisor_value\
    \ = n;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmps0rj_n0x.rs:9:31\n  |\n3 |\
    \     let mut max_divisor = 0;\n  |                           - expected due to\
    \ this value\n...\n9 |                 max_divisor = divisor;\n  |           \
    \                    ^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp: consider\
    \ dereferencing the borrow\n  |\n9 |                 max_divisor = *divisor;\n\
    \  |                               +\n\nerror[E0277]: can't compare `isize` with\
    \ `&isize`\n --> /tmp/tmps0rj_n0x.rs:8:28\n  |\n8 |             if max_divisor\
    \ < divisor {\n  |                            ^ no implementation for `isize <\
    \ &isize` and `isize > &isize`\n  |\n  = help: the trait `PartialOrd<&isize>`\
    \ is not implemented for `isize`\n  = help: the following other types implement\
    \ trait `PartialOrd<Rhs>`:\n            f32\n            f64\n            i128\n\
    \            i16\n            i32\n            i64\n            i8\n         \
    \   isize\n          and 6 others\n\nerror[E0308]: mismatched types\n  --> /tmp/tmps0rj_n0x.rs:15:5\n\
    \   |\n2  | fn largest_divisor(n: isize) -> isize {\n   |                    \
    \             ----- expected `isize` because of return type\n...\n15 |     max_divisor_index\n\
    \   |     ^^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can\
    \ convert a `usize` to an `isize` and panic if the converted value doesn't fit\n\
    \   |\n15 |     max_divisor_index.try_into().unwrap()\n   |                  \
    \    ++++++++++++++++++++\n\nerror[E0606]: casting `&isize` as `usize` is invalid\n\
    \  --> /tmp/tmps0rj_n0x.rs:10:37\n   |\n10 |                 max_divisor_index\
    \ = divisor as usize;\n   |                                     -------^^^^^^^^^\n\
    \   |                                     |\n   |                            \
    \         cannot cast `&isize` as `usize`\n   |                              \
    \       help: dereference the expression: `*divisor`\n\nerror: aborting due to\
    \ 4 previous errors\n\nSome errors have detailed explanations: E0277, E0308, E0606.\n\
    For more information about an error, try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_indexes: Vec<usize>\
    \ = Vec::new();\n    while max_divisor % 2 == 0 {\n        max_divisor /= 2;\n\
    \        max_divisor_indexes.push(max_divisor_index);\n    }\n    for i in 1..max_divisor_indexes.len()\
    \ {\n        let mut max_divisor_index2 = max_divisor_indexes[i];\n        let\
    \ mut max_divisor_index3 = max_divisor_indexes[i + 1];\n        while max_divisor_index2\
    \ % 2 == 0 {\n            max_divisor_index2 /= 2;\n        }\n        while max_divisor_index3\
    \ % 2 == 0 {\n            max_divisor_index3 /= 2;\n        }\n        if max_divisor_index2\
    \ < max_divisor_index3 {\n            max_divisor = max_divisor_index2;\n    \
    \        max_divisor_index = i;\n        } else {\n            max_divisor = max_divisor_index3;\n\
    \            max_divisor_index = i + 1;\n        }\n    }\n    max_divisor_index\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmplujs2az4.rs:20:27\n   |\n\
    3  |     let mut max_divisor = n;\n   |                           - expected due\
    \ to this value\n...\n20 |             max_divisor = max_divisor_index2;\n   |\
    \                           ^^^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmplujs2az4.rs:23:27\n   |\n3  |\
    \     let mut max_divisor = n;\n   |                           - expected due\
    \ to this value\n...\n23 |             max_divisor = max_divisor_index3;\n   |\
    \                           ^^^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n\
    \nerror[E0308]: mismatched types\n  --> /tmp/tmplujs2az4.rs:27:5\n   |\n2  | fn\
    \ largest_divisor(n: isize) -> isize {\n   |                                 -----\
    \ expected `isize` because of return type\n...\n27 |     max_divisor_index\n \
    \  |     ^^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n   |\nhelp: you can\
    \ convert a `usize` to an `isize` and panic if the converted value doesn't fit\n\
    \   |\n27 |     max_divisor_index.try_into().unwrap()\n   |                  \
    \    ++++++++++++++++++++\n\nerror: aborting due to 3 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if max_divisor_size < divisor {\n      \
    \          max_divisor = divisor;\n                max_divisor_size = divisor;\n\
    \            } else {\n                max_divisor_size = divisor + 1;\n     \
    \       }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp2w62ywnn.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008866
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor_size = n;\n    while max_divisor_size != 1 {\n\
    \        max_divisor_size /= 2;\n        max_divisor *= 2;\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpu3znl569.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_count\
    \ = 0;\n    let mut max_divisor_remainder_count_max = 0;\n    let mut max_divisor_remainder_count_min\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index = 0;\n    let mut max_divisor_remainder_count_min_index2\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index3 = 0;\n    let mut max_divisor_remainder_count_min_index4\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index5 = 0;\n    let mut max_divisor_remainder_count_min_index6\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index7 = 0;\n    let mut max_divisor_remainder_count_min_index8\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index9 = 0;\n    let mut max_divisor_remainder_count_min_index10\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index11 = 0;\n    let mut\
    \ max_divisor_remainder_count_min_index12 = 0;\n    let mut max_divisor_remainder_count_min_index13\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index14 = 0;\n    let mut\
    \ max_divisor_remainder_count_min_index15 = 0;\n    let mut max_divisor_remainder_count_min_index16\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index17 = 0;\n    let mut\
    \ max_divisor_remainder_count_min_index18 = 0;\n    let mut max_divisor_remainder_count_min_index19\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index20 = 0;\n    let mut\
    \ max_divisor_remainder_count_min_index21 = 0;\n    let mut max_divisor_remainder_count_min_index22\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index23 = 0;\n    let mut\
    \ max_divisor_remainder_count_min_index24 = 0;\n    let mut max_divisor_remainder_count_min_index25\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index26 = 0;\n    let mut\
    \ max_divisor_remainder_count_min_index27 = 0;\n    let mut max_divisor_remainder_count_min_index28\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index29 = 0;\n    let mut\
    \ max_divisor_remainder_count_min_index30 = 0;\n    let mut max_divisor_remainder_count_min_index31\
    \ = 0;\n    let mut max_divisor_remainder_count_min_index32 = 0;\n    let mut\
    \ max_divisor_remainder_count_min_index33 = 0;\n    let mut max_\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpqkq2zk20.rs:41:17\n   |\n\
    41 |     let mut max_\n   |                 ^ help: add `;` here\n42 | }\n   |\
    \ - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpqkq2zk20.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = 0;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = divisor;\n            } else\
    \ {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n                max_divisor_value = divisor;\n            }\n  \
    \      }\n    }\n    max_divisor_index\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp6_dn67f0.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008866
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1czxpnrp.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for d in divisors(n) {\n      \
    \  if n % d == 0 {\n            if d > max_divisor {\n                max_divisor\
    \ = d;\n                max_divisor_size = 1;\n            } else {\n        \
    \        max_divisor += d;\n                max_divisor_size++;\n            }\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `+`\n  --> /tmp/tmp9ajrb_95.rs:12:34\n\
    \   |\n12 |                 max_divisor_size++;\n   |                        \
    \          ^ expected expression\n\nerror[E0425]: cannot find function `divisors`\
    \ in this scope\n --> /tmp/tmp9ajrb_95.rs:5:14\n  |\n5 |     for d in divisors(n)\
    \ {\n  |              ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor2 = 1;\n    let mut max_divisor3 = 1;\n    let\
    \ mut max_divisor4 = 1;\n    let mut max_divisor5 = 1;\n    let mut max_divisor6\
    \ = 1;\n    let mut max_divisor7 = 1;\n    let mut max_divisor8 = 1;\n    let\
    \ mut max_divisor9 = 1;\n    let mut max_divisor10 = 1;\n    let mut max_divisor11\
    \ = 1;\n    let mut max_divisor12 = 1;\n    let mut max_divisor13 = 1;\n    let\
    \ mut max_divisor14 = 1;\n    let mut max_divisor15 = 1;\n    let mut max_divisor16\
    \ = 1;\n    let mut max_divisor17 = 1;\n    let mut max_divisor18 = 1;\n    let\
    \ mut max_divisor19 = 1;\n    let mut max_divisor20 = 1;\n    let mut max_divisor21\
    \ = 1;\n    let mut max_divisor22 = 1;\n    let mut max_divisor23 = 1;\n    let\
    \ mut max_divisor24 = 1;\n    let mut max_divisor25 = 1;\n    let mut max_divisor26\
    \ = 1;\n    let mut max_divisor27 = 1;\n    let mut max_divisor28 = 1;\n    let\
    \ mut max_divisor29 = 1;\n    let mut max_divisor30 = 1;\n    let mut max_divisor31\
    \ = 1;\n    let mut max_divisor32 = 1;\n    let mut max_divisor33 = 1;\n    let\
    \ mut max_divisor34 = 1;\n    let mut max_divisor35 = 1;\n    let mut max_divisor36\
    \ = 1;\n    let mut max_divisor37 = 1;\n    let mut max_divisor38 = 1;\n    let\
    \ mut max_divisor39 = 1;\n    let mut max_divisor40 = 1;\n    let mut max_divisor41\
    \ = 1;\n    let mut max_divisor42 = 1;\n    let mut max_divisor43 = 1;\n    let\
    \ mut max_divisor44 = 1;\n    let mut max_divisor45 = 1;\n    let mut max_divisor46\
    \ = 1;\n    let mut max_divisor47 = 1;\n    let mut max_divisor48 = 1;\n    let\
    \ mut max_divisor49 = 1;\n    let mut max_divisor50 = 1;\n    let mut max_divisor51\
    \ = 1;\n    let mut max_divisor52 = 1;\n    let mut max_divisor53 = 1;\n    let\
    \ mut max_divisor54 = 1;\n    let mut max_divisor55 = 1;\n    let mut max_divisor56\
    \ = 1;\n    let mut max_divisor57 = 1;\n    let mut max_divisor58 = 1;\n    let\
    \ mut max_divisor59 = 1;\n    let mut max_divisor60 = 1;\n    let mut max_divisor61\
    \ = 1;\n    let mut max_divisor62 = 1;\n    let mut max_divisor63 = 1;\n    let\
    \ mut max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n  \
    \  assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpnlrnwmsu.rs:66:24\n   |\n\
    66 |     let mut max_divisor\n   |                        ^ help: add `;` here\n\
    67 | }\n   | - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpnlrnwmsu.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1660008864
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    while max_divisor_size != 0 {\n\
    \        max_divisor += 1;\n        max_divisor_size = max_divisor_size / 2;\n\
    \    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmp1l6qpaa1.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for divisor in 1..=n {\n \
    \       if n % divisor == 0 {\n            if max_divisor < divisor {\n      \
    \          max_divisor = divisor;\n                max_divisor_remainder = n %\
    \ divisor;\n            }\n        }\n    }\n    if max_divisor_remainder == 0\
    \ {\n        max_divisor\n    } else {\n        max_divisor + 1\n    }\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp928o0573.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008866
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for i in 1..=n {\n        if n\
    \ % i == 0 {\n            if max_divisor < i {\n                max_divisor =\
    \ i;\n                max_divisor_size = i;\n            }\n            if max_divisor_size\
    \ == i {\n                max_divisor_size = i;\n            }\n        }\n  \
    \  }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpp85xfuhg.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008866
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for d in divisors(n) {\n      \
    \  if n % d == 0 {\n            if d > max_divisor {\n                max_divisor\
    \ = d;\n                max_divisor_size = 1;\n            } else {\n        \
    \        max_divisor += d;\n                max_divisor_size++;\n            }\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `+`\n  --> /tmp/tmp9ajrb_95.rs:12:34\n\
    \   |\n12 |                 max_divisor_size++;\n   |                        \
    \          ^ expected expression\n\nerror[E0425]: cannot find function `divisors`\
    \ in this scope\n --> /tmp/tmp9ajrb_95.rs:5:14\n  |\n5 |     for d in divisors(n)\
    \ {\n  |              ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_idx = 1;\n    let mut max_divisor_remainder =\
    \ 0;\n    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor_remainder\
    \ < i {\n                max_divisor = i;\n                max_divisor_remainder\
    \ = i;\n            }\n            else {\n                max_divisor_remainder\
    \ = i;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n \
    \   let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpi0jo2z3c.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008866
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow = 0;\n    let mut max_divisor_remainder_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow = 0;\n    let mut\
    \ max_divisor_remainder_pow_pow_pow_pow_pow_pow = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 0;\n\
    \    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 0;\n    let\
    \ mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 0;\n    let mut\
    \ max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 0;\n    let mut max_divisor_remainder_pow_pow_pow_\n}\n\nfn main() {\n   \
    \ let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpzaobi5x_.rs:32:47\n   |\n\
    32 |     let mut max_divisor_remainder_pow_pow_pow_\n   |                    \
    \                           ^ help: add `;` here\n33 | }\n   | - unexpected token\n\
    \nerror[E0308]: mismatched types\n --> /tmp/tmpzaobi5x_.rs:2:33\n  |\n2 | fn largest_divisor(n:\
    \ isize) -> isize {\n  |    ---------------              ^^^^^ expected `isize`,\
    \ found `()`\n  |    |\n  |    implicitly returns `()` as its body has no tail\
    \ or `return` expression\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1660008865
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = 1;\n        \
    \    } else {\n                max_divisor += 1;\n                max_divisor_size\
    \ += 1;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpisbsqpjr.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1660008865

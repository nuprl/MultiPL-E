language: rs
name: HumanEval_24_largest_divisor
results:
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_size_index\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_\n}\n\nfn main() {\n\
    \    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error: expected `;`, found `}`\n  --> /tmp/tmpl9psm_d7.rs:63:17\n   |\n\
    63 |     let mut max_\n   |                 ^ help: add `;` here\n64 | }\n   |\
    \ - unexpected token\n\nerror[E0308]: mismatched types\n --> /tmp/tmpl9psm_d7.rs:2:33\n\
    \  |\n2 | fn largest_divisor(n: isize) -> isize {\n  |    ---------------    \
    \          ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns\
    \ `()` as its body has no tail or `return` expression\n\nerror: aborting due to\
    \ 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0308`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for i in 1..n {\n        if\
    \ n % i == 0 {\n            if max_divisor < i {\n                max_divisor\
    \ = i;\n                max_divisor_remainder = n % i;\n            }\n      \
    \  }\n    }\n    max_divisor_remainder\n}\n\nfn main() {\n    let candidate =\
    \ largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpke_koai0.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor < i\
    \ {\n                max_divisor = i;\n                max_divisor_index = i;\n\
    \            }\n            if max_divisor_value < i {\n                max_divisor_value\
    \ = i;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpuwpckrvo.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = divisor;\n            } else if divisor == max_divisor {\n               \
    \ max_divisor_size = divisor + 1;\n            }\n        }\n    }\n\n    if max_divisor_size\
    \ != max_divisor {\n        max_divisor_value = max_divisor_size / max_divisor;\n\
    \    }\n\n    max_divisor_value\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkny9hln7.rs:27:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n\n    max_divisor_index\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpl0gvppe9.rs:26:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for d in divisors(n) {\n      \
    \  if n % d == 0 {\n            if d > max_divisor {\n                max_divisor\
    \ = d;\n                max_divisor_size = 1;\n            } else if d == max_divisor\
    \ {\n                max_divisor_size += 1;\n            }\n        }\n    }\n\
    \    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n   \
    \ assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divisors` in this scope\n --> /tmp/tmpz70f8082.rs:5:14\n\
    \  |\n5 |     for d in divisors(n) {\n  |              ^^^^^^^^ not found in this\
    \ scope\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    let mut max_divisor_size_size =\
    \ 0;\n    for i in 1..=n {\n        if n % i == 0 {\n            if max_divisor_size\
    \ < i {\n                max_divisor_size = i;\n                max_divisor_size_size\
    \ = i;\n            }\n            if max_divisor_size == i {\n              \
    \  max_divisor_size_size = i;\n            }\n        }\n    }\n    max_divisor\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqqwozzr2.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 1;\n    let mut max_divisor_remainder = 0;\n    let mut max_divisor_remainder_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow = 1;\n    let mut max_divisor_remainder_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow = 1;\n    let mut\
    \ max_divisor_remainder_pow_pow_pow_pow_pow_pow = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n\
    \    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n    let\
    \ mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n    let mut\
    \ max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n    let mut max_divisor_remainder_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow_pow\
    \ = 1;\n\n}\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpsbb3show.rs:2:33\n  |\n2 |\
    \ fn largest_divisor(n: isize) -> isize {\n  |    ---------------            \
    \  ^^^^^ expected `isize`, found `()`\n  |    |\n  |    implicitly returns `()`\
    \ as its body has no tail or `return` expression\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = 1;\n        \
    \    } else if divisor == max_divisor {\n                max_divisor_size += 1;\n\
    \            }\n        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate\
    \ = largest_divisor;\n    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7),\
    \ 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100), 50);\n\
    \    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp63ut13gz.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for d in divisors(n) {\n      \
    \  if n % d == 0 {\n            if d > max_divisor {\n                max_divisor\
    \ = d;\n                max_divisor_size = 1;\n            } else {\n        \
    \        max_divisor += d;\n                max_divisor_size++;\n            }\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `+`\n  --> /tmp/tmp9ajrb_95.rs:12:34\n\
    \   |\n12 |                 max_divisor_size++;\n   |                        \
    \          ^ expected expression\n\nerror[E0425]: cannot find function `divisors`\
    \ in this scope\n --> /tmp/tmp9ajrb_95.rs:5:14\n  |\n5 |     for d in divisors(n)\
    \ {\n  |              ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    for i in 1..=n {\n        if n\
    \ % i == 0 {\n            if max_divisor < i {\n                max_divisor =\
    \ i;\n                max_divisor_index = i;\n            }\n        }\n    }\n\
    \    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp509qin0u.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1czxpnrp.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_remainder = 0;\n    for divisor in 1..=n {\n \
    \       if n % divisor == 0 {\n            if divisor > max_divisor {\n      \
    \          max_divisor = divisor;\n                max_divisor_remainder = n %\
    \ divisor;\n            }\n        }\n    }\n    max_divisor_remainder\n}\n\n\
    fn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp9ny1v13e.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        } else {\n            if divisor > max_divisor_value\
    \ {\n                max_divisor_value = divisor;\n                max_divisor_index\
    \ = divisor;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn\
    \ main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1czxpnrp.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for d in divisors(n) {\n      \
    \  if n % d == 0 {\n            if d > max_divisor {\n                max_divisor\
    \ = d;\n                max_divisor_size = 1;\n            } else {\n        \
    \        max_divisor += d;\n                max_divisor_size++;\n            }\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error: expected expression, found `+`\n  --> /tmp/tmp9ajrb_95.rs:12:34\n\
    \   |\n12 |                 max_divisor_size++;\n   |                        \
    \          ^ expected expression\n\nerror[E0425]: cannot find function `divisors`\
    \ in this scope\n --> /tmp/tmp9ajrb_95.rs:5:14\n  |\n5 |     for d in divisors(n)\
    \ {\n  |              ^^^^^^^^ not found in this scope\n\nerror: aborting due\
    \ to 2 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_indexes: Vec<usize>\
    \ = Vec::new();\n\n    for i in 1..=max_divisor {\n        if n % i == 0 {\n \
    \           if max_divisor > i {\n                max_divisor = i;\n         \
    \       max_divisor_index = i;\n            }\n        } else {\n            if\
    \ max_divisor > i {\n                max_divisor = i;\n                max_divisor_index\
    \ = i;\n                max_divisor_indexes.push(i);\n            }\n        }\n\
    \    }\n\n    if max_divisor == n {\n        max_divisor_indexes.push(max_divisor_index);\n\
    \    }\n\n    max_divisor_indexes.sort_unstable();\n\n    max_divisor_indexes.pop();\n\
    \n    max_divisor_index\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n  --> /tmp/tmpet8zf6wf.rs:17:42\n   |\n\
    17 |                 max_divisor_indexes.push(i);\n   |                      \
    \                    ^ expected `usize`, found `isize`\n   |\nhelp: you can convert\
    \ an `isize` to a `usize` and panic if the converted value doesn't fit\n   |\n\
    17 |                 max_divisor_indexes.push(i.try_into().unwrap());\n   |  \
    \                                        ~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0308]:\
    \ mismatched types\n  --> /tmp/tmpet8zf6wf.rs:23:34\n   |\n23 |         max_divisor_indexes.push(max_divisor_index);\n\
    \   |                                  ^^^^^^^^^^^^^^^^^ expected `usize`, found\
    \ `isize`\n   |\nhelp: you can convert an `isize` to a `usize` and panic if the\
    \ converted value doesn't fit\n   |\n23 |         max_divisor_indexes.push(max_divisor_index.try_into().unwrap());\n\
    \   |                                  ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    let mut max_divisor_value = n;\n\
    \n    for divisor in 1..=n {\n        if n % divisor == 0 {\n            if divisor\
    \ > max_divisor {\n                max_divisor = divisor;\n                max_divisor_size\
    \ = max_divisor_value - max_divisor;\n            }\n        }\n    }\n\n    max_divisor_value\n\
    }\n\nfn main() {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3),\
    \ 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n \
    \   assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp_v714t35.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = n;\n    let mut max_divisor_value = n;\n\
    \    while max_divisor_size != 1 {\n        if max_divisor_value % 2 == 0 {\n\
    \            max_divisor_value /= 2;\n        } else {\n            max_divisor_value\
    \ /= 3;\n        }\n        max_divisor_size = max_divisor_value + 1;\n      \
    \  if max_divisor_size > max_divisor {\n            max_divisor = max_divisor_size;\n\
    \        }\n    }\n    max_divisor\n}\n\nfn main() {\n    let candidate = largest_divisor;\n\
    \    assert_eq!(candidate(3), 1);\n    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10),\
    \ 5);\n    assert_eq!(candidate(100), 50);\n    assert_eq!(candidate(49), 7);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `2`,\n right: `1`', /tmp/tmpl9yfue01.rs:22:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 101
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = 0;\n    let mut max_divisor_size = 0;\n    for divisor in 1..=n {\n      \
    \  if n % divisor == 0 {\n            if divisor > max_divisor {\n           \
    \     max_divisor = divisor;\n                max_divisor_size = divisor;\n  \
    \          } else if divisor == max_divisor {\n                max_divisor_size\
    \ = divisor + 1;\n            }\n        }\n    }\n    max_divisor\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpwoxqld9t.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659746633
- exit_code: 1
  program: "/// For a given number n, find the largest number that divides n evenly,\
    \ smaller than n\nfn largest_divisor(n: isize) -> isize {\n    let mut max_divisor\
    \ = n;\n    let mut max_divisor_index = 0;\n    let mut max_divisor_value = n;\n\
    \    for divisor in &[2, 3, 5, 7, 11, 13, 17, 19, 23, 29, 31, 37, 41, 43, 47,\
    \ 53, 59, 61, 67, 71, 73, 79, 83, 89, 97] {\n        if n % divisor == 0 {\n \
    \           if max_divisor < divisor {\n                max_divisor = divisor;\n\
    \                max_divisor_index = divisor as isize;\n                max_divisor_value\
    \ = n;\n            }\n        }\n    }\n    max_divisor_index\n}\n\nfn main()\
    \ {\n    let candidate = largest_divisor;\n    assert_eq!(candidate(3), 1);\n\
    \    assert_eq!(candidate(7), 1);\n    assert_eq!(candidate(10), 5);\n    assert_eq!(candidate(100),\
    \ 50);\n    assert_eq!(candidate(49), 7);\n}\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmp5s3gfo6u.rs:8:30\n  |\n8 |\
    \             if max_divisor < divisor {\n  |                              ^^^^^^^\
    \ expected `isize`, found `&isize`\n  |\nhelp: consider dereferencing the borrow\n\
    \  |\n8 |             if max_divisor < *divisor {\n  |                       \
    \       +\n\nerror[E0308]: mismatched types\n --> /tmp/tmp5s3gfo6u.rs:9:31\n \
    \ |\n9 |                 max_divisor = divisor;\n  |                         \
    \      ^^^^^^^ expected `isize`, found `&isize`\n  |\nhelp: consider dereferencing\
    \ the borrow\n  |\n9 |                 max_divisor = *divisor;\n  |          \
    \                     +\n\nerror[E0606]: casting `&isize` as `isize` is invalid\n\
    \  --> /tmp/tmp5s3gfo6u.rs:10:37\n   |\n10 |                 max_divisor_index\
    \ = divisor as isize;\n   |                                     -------^^^^^^^^^\n\
    \   |                                     |\n   |                            \
    \         cannot cast `&isize` as `isize`\n   |                              \
    \       help: dereference the expression: `*divisor`\n\nerror: aborting due to\
    \ 3 previous errors\n\nSome errors have detailed explanations: E0308, E0606.\n\
    For more information about an error, try `rustc --explain E0308`.\n"
  stdout: ''
  timestamp: 1659746633

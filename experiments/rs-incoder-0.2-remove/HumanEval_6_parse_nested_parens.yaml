name: HumanEval_6_parse_nested_parens
language: rs
prompt: "/// Input to this function is a string represented multiple groups for nested\
  \ parentheses separated by spaces.\n/// For each of the group, output the deepest\
  \ level of nesting of parentheses.\n/// E.g. (()()) has maximum two levels of nesting\
  \ while ((())) has three.\nfn parse_nested_parens(paren_string: String) -> Vec<isize>\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = parse_nested_parens;\n    assert_eq!(candidate(String::from(\"\
  (()()) ((())) () ((())()())\")), vec![2, 3, 1, 3]);\n    assert_eq!(candidate(String::from(\"\
  () (()) ((())) (((())))\")), vec![1, 2, 3, 4]);\n    assert_eq!(candidate(String::from(\"\
  (()(())((())))\")), vec![4]);\n}\n"
completions: ["    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_level_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack", " \
    \   let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = vec![];\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = &mut paren_levels_stack;\n    let mut paren_levels_ptr = &mut paren_levels;\n\
    \    let mut paren_levels_ptr_end = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr\
    \ = &mut paren_levels_ptr_end;\n    let mut paren_levels_ptr_end_ptr_end = &mut\
    \ paren_levels_ptr_end_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr = &mut\
    \ paren_levels_ptr_end_ptr_end;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end\
    \ = &mut paren_levels_ptr_end_ptr_end_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr\
    \ = &mut paren_levels_ptr_end_ptr_end_ptr_end_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut\
    \ paren_levels_ptr_end_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr = &mut\
    \ paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_level", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n\
    \    let mut paren_level_char_count = 0;\n    let mut paren_level_char = 0;\n\
    \    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index =\
    \ 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut ", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_next = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_next = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_next = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_next = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_next = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_next = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_next = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_len = paren_level", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = &mut paren_levels_stack;\n    let mut paren_levels_ptr\
    \ = &mut paren_levels;\n    let mut paren_levels_ptr_end = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n    let mut\
    \ paren_levels_ptr_end_ptr_ptr = &mut paren_levels_ptr_end_ptr;\n    let mut paren_levels_ptr_end_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_ptr;\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr;\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr;\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let mut\
    \ paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_end_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_end_ptr_end_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len\
    \ - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_len - 1;\n   \
    \ let mut paren_levels_stack_bottom = paren_levels_stack_len - 1;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_len\
    \ - 1;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len - 1;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_len - 1;\n    let mut\
    \ paren_levels_stack_bottom = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len\
    \ - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_len - 1;\n   \
    \ let mut paren_levels_stack_bottom = paren_levels_stack_len - 1;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_len\
    \ - 1;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len - 1;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_len - 1;\n    let mut\
    \ paren_levels_stack_bottom = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_bottom = paren_levels_stack_len\
    \ - 1;\n    let mut paren_levels_stack_top = paren_levels_stack_len - 1;\n   \
    \ let mut paren_levels_stack_bottom = paren_levels_stack_len - 1;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len - 1;\n    let mut paren_levels_stack_bottom\
    \ = paren_level", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = &mut paren_levels_stack;\n    let mut paren_levels_ptr = &mut paren_levels;\n\
    \    let mut paren_levels_ptr_ptr = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_end\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr = &mut paren_levels_ptr_end_ptr;\n \
    \   let mut paren_levels_ptr_end_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let\
    \ mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = &mut\
    \ paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let mut\
    \ paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = ",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let ", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let ", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_levels_iter = paren_string.char_indices().map(|i| {\n        if paren_level_count\
    \ == 0 {\n            paren_level_count = paren_level + 1;\n        }\n      \
    \  let level = paren_level_count;\n        let mut paren_levels_iter = i.map(|j|\
    \ {\n            if paren_level_count == 0 {\n                paren_level_count\
    \ = paren_level + 1;\n            }\n            paren_level_count = paren_level_count\
    \ + 1;\n            paren_level_count\n        });\n        paren_levels.push(level);\n\
    \        paren_levels_iter\n    });\n    paren_levels_iter", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index =\
    \ 0;\n    let mut paren_levels_index = 0;\n    let mut paren_levels_index2 = 0;\n\
    \    let mut paren_levels_index3 = 0;\n    let mut paren_levels_index4 = 0;\n\
    \    let mut paren_levels_index5 = 0;\n    let mut paren_levels_index6 = 0;\n\
    \    let mut paren_levels_index7 = 0;\n    let mut paren_levels_index8 = 0;\n\
    \    let mut paren_levels_index9 = 0;\n    let mut paren_levels_index10 = 0;\n\
    \    let mut paren_levels_index11 = 0;\n    let mut paren_levels_index12 = 0;\n\
    \    let mut paren_levels_index13 = 0;\n    let mut paren_levels_index14 = 0;\n\
    \    let mut paren_levels_index15 = 0;\n    let mut paren_levels_index16 = 0;\n\
    \    let mut paren_levels_index17 = 0;\n    let mut paren_levels_index18 = 0;\n\
    \    let mut paren_levels_index19 = 0;\n    let mut paren_levels_index20 = 0;\n\
    \    let mut paren_levels_index21 = 0;\n    let mut paren_levels_index22 = 0;\n\
    \    let mut paren_levels_index23 = 0;\n    let mut paren_levels_index24 = 0;\n\
    \    let mut paren_levels_index25 = 0;\n    let mut paren_levels_index26 = 0;\n\
    \    let mut paren_levels_index27 = 0;\n    let mut paren_levels_index28 = 0;\n\
    \    let mut paren_levels_index29 = 0;\n    let mut paren_levels_index30 = 0;\n\
    \    let mut paren_levels_index31 = 0;\n    let mut paren_levels_index32 = 0;\n\
    \    let mut paren_levels_index33 = 0;\n    let mut paren_levels_index34 = 0;\n\
    \    let mut paren_levels_index35 = 0;\n    let mut paren_levels_index36 = 0;\n\
    \    let mut paren_levels_index37 = 0;\n    let mut paren_levels_index38 = 0;\n\
    \    let mut paren_levels_index39 = 0;\n    let mut paren_levels_index40 = 0;\n\
    \    let mut paren_levels_index41 = 0;\n    let mut paren_levels_index42 = 0;\n\
    \    let mut paren_levels_index43 = 0;\n    let mut paren_levels_index44 = 0;\n\
    \    let mut paren", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    while paren_level_count <\
    \ MAX_NESTING_DEPTH {\n        let mut paren_level_string = paren_string;\n  \
    \      let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mu", "    let mut paren_levels = Vec::new();\n    let mut paren_level =\
    \ 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count =\
    \ 0;\n    let mut paren_level_char = 0;\n    let mut paren_level_char_next = 0;\n\
    \    let mut paren_level_char_next2 = 0;\n    let mut paren_level_char_next3 =\
    \ 0;\n    let mut paren_level_char_next4 = 0;\n    let mut paren_level_char_next5\
    \ = 0;\n    let mut paren_level_char_next6 = 0;\n    let mut paren_level_char_next7\
    \ = 0;\n    let mut paren_level_char_next8 = 0;\n    let mut paren_level_char_next9\
    \ = 0;\n    let mut paren_level_char_next10 = 0;\n    let mut paren_level_char_next11\
    \ = 0;\n    let mut paren_level_char_next12 = 0;\n    let mut paren_level_char_next13\
    \ = 0;\n    let mut paren_level_char_next14 = 0;\n    let mut paren_level_char_next15\
    \ = 0;\n    let mut paren_level_char_next16 = 0;\n    let mut paren_level_char_next17\
    \ = 0;\n    let mut paren_level_char_next18 = 0;\n    let mut paren_level_char_next19\
    \ = 0;\n    let mut paren_level_char_next20 = 0;\n    let mut paren_level_char_next21\
    \ = 0;\n    let mut paren_level_char_next22 = 0;\n    let mut paren_level_char_next23\
    \ = 0;\n    let mut paren_level_char_next24 = 0;\n    let mut paren_level_char_next25\
    \ = 0;\n    let mut paren_level_char_next26 = 0;\n    let mut paren_level_char_next27\
    \ = 0;\n    let mut paren_level_char_next28 = 0;\n    let mut paren_level_char_next29\
    \ = 0;\n    let mut paren_level_char_next30 = 0;\n    let mut paren_level_char_next31\
    \ = 0;\n    let mut paren_level_char_next32 = 0;\n    let mut paren_level_char_next33\
    \ = 0;\n    let mut paren_level_char_next34 = 0;\n    let mut paren_level_char_next35\
    \ = 0;\n    let mut paren_level_char_next36 = 0;\n    let mut paren_level_char_next37\
    \ = 0;\n    let mut paren_level_char_next38 = 0;\n    let mut paren_level_char_next39\
    \ = 0;\n    let mut paren_level_char_next40 = 0;\n    let mut paren_level_char_next41\
    \ = 0;\n    let mut paren_level_char_next42 = 0;\n    let mut paren_", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_levels = Vec::new();\n\
    \    let mut ", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_next = 0;\n    let mut paren_levels_stack_ptr_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next = 0;\n   \
    \ let mut paren_levels_stack_ptr_next_next_next_next_next_next = 0;\n    let mut\
    \ paren_levels_stack_ptr_next_next_next_next_next_next_next = 0;\n    let mut\
    \ paren_levels_stack_ptr_next_next_next_next_next_next_next_next = 0;\n    let\
    \ mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next = 0;\n\
    \    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n\
    \    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_chars: Vec<char>;",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_chars = Vec::new();\n    let mut paren_level_char = 0;\n    let\
    \ mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_len;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_len;\n    let mut paren_", "   \
    \ let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    for c in paren_string.chars() {\n        if c == '('\
    \ {\n            paren_level += 1;\n            paren_nesting += 1;\n        }\
    \ else if c == ')' {\n            paren_level -= 1;\n            paren_nesting\
    \ -= 1;\n            if paren_level == 0 {\n                paren_levels.push(paren_nesting);\n\
    \            }\n        }\n    }\n    paren_levels", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nest", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index =\
    \ 0;\n    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_chars_iter\
    \ = paren_level_chars.iter();\n    let mut paren_level_chars_iter_next = paren_level_chars_iter.next();\n\
    \    while let Some(paren_level_char) = paren_level_chars_iter_next {\n      \
    \  if paren_level_char == ')' {\n            paren_levels.push(paren_level);\n\
    \            paren_level = 0;\n            paren_level_index += 1;\n         \
    \   paren_level_chars_iter_next = paren_level_chars_iter.next();\n        } else\
    \ {\n            paren_level += 1;\n            paren_level_chars_iter_next =\
    \ paren_level_chars_iter.next();\n        }\n    }\n    paren_levels.push(paren_level);\n\
    \    paren_levels", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_count = 0;\n    let mut paren_level_char_pos_char_count\
    \ = 0;\n    let mut paren_level_char_pos_chars = Vec::new();\n    let mut paren_level_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_count = 0;\n    let mut paren_level_char_pos_char_pos_char_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_chars = Vec::new();\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_count = 0;\n \
    \   let mut paren_level_char_pos_char_pos_char_pos_chars = Vec::new();\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_chars = Vec::new();\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos = 0;\n \
    \   let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut ", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_index = 0;\n    let mut paren_levels_index = 0;\n    let mut paren_levels_index2\
    \ = 0;\n    let mut paren_levels_index3 = 0;\n    let mut paren_levels_index4\
    \ = 0;\n    let mut paren_levels_index5 = 0;\n    let mut paren_levels_index6\
    \ = 0;\n    let mut paren_levels_index7 = 0;\n    let mut paren_levels_index8\
    \ = 0;\n    let mut paren_levels_index9 = 0;\n    let mut paren_levels_index10\
    \ = 0;\n    let mut paren_levels_index11 = 0;\n    let mut paren_levels_index12\
    \ = 0;\n    let mut paren_levels_index13 = 0;\n    let mut paren_levels_index14\
    \ = 0;\n    let mut paren_levels_index15 = 0;\n    let mut paren_levels_index16\
    \ = 0;\n    let mut paren_levels_index17 = 0;\n    let mut paren_levels_index18\
    \ = 0;\n    let mut paren_levels_index19 = 0;\n    let mut paren_levels_index20\
    \ = 0;\n    let mut paren_levels_index21 = 0;\n    let mut paren_levels_index22\
    \ = 0;\n    let mut paren_levels_index23 = 0;\n    let mut paren_levels_index24\
    \ = 0;\n    let mut paren_levels_index25 = 0;\n    let mut paren_levels_index26\
    \ = 0;\n    let mut paren_levels_index27 = 0;\n    let mut paren_levels_index28\
    \ = 0;\n    let mut paren_levels_index29 = 0;\n    let mut paren_levels_index30\
    \ = 0;\n    let mut paren_levels_index31 = 0;\n    let mut paren_levels_index32\
    \ = 0;\n    let mut paren_levels_index33 = 0;\n    let mut paren_levels_index34\
    \ = 0;\n    let mut paren_levels_index35 = 0;\n    let mut paren_levels_index36\
    \ = 0;\n    let mut paren_levels_index37 = 0;\n    let mut paren_levels_index38\
    \ = 0;\n    let mut paren_levels_index39 = 0;\n    let mut paren_levels_index40\
    \ = 0;\n    let mut paren_levels_index41 = 0;\n    let mut paren_levels_index42\
    \ = 0;\n    let mut paren_levels_index43 = 0;\n    let mut paren_levels_index44\
    \ = 0;\n    let mut paren", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren", "    let mut paren_levels =\
    \ Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack =\
    \ Vec::new();\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_level", "    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = Vec::new();\n\
    \    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.as_mut_ptr();\n    let\
    \ mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(paren_levels_stack_size);\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr.offset(", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_level_count = 0;\n    let mut paren_level_start = paren_string.len();\n\
    \    let mut paren_level_end = paren_level_start;\n    let mut paren_level_end_pos\
    \ = 0;\n    let mut paren_level_end_pos = paren_level_start;\n    let mut paren_level_end_pos\
    \ = paren_level_start;\n    let mut paren_level_end_pos = paren_level_start;\n\
    \    let mut paren_level_end_pos = paren_level_start;\n    let mut paren_level_end_pos\
    \ = paren_level_start;\n    let mut paren_level_end_pos = paren_level_start;\n\
    \    let mut paren_level_end_pos = paren_level_start;\n    let mut paren_level_end_pos\
    \ = paren_level_start;\n    let mut paren_level_end_pos = paren_level_start;\n\
    \    let mut paren_level_end_pos = paren_level_start;\n    let mut paren_level_end_pos\
    \ = paren_level_start;\n    let mut paren_level_end_pos = paren_level_start;\n\
    \    let mut paren_level_end_pos = paren_level_start;\n    let mut paren_level_end_pos\
    \ = paren_level_start;\n    let mut paren_level_end_pos = paren_level_start;\n\
    \    let mut paren_level_end_pos = paren_level_start;\n    let mut paren_level_end_pos\
    \ = paren_level_start;\n    let mut paren_level_end_pos = paren_level_start;\n\
    \    let mut paren_level_end_pos = paren_level_start;\n    let mut paren_level_end_pos\
    \ = paren_level_start;\n    let mut paren_level_end_pos = paren_level_start;\n\
    \    let mut paren_level_end_pos = paren_level_start;\n    let mut paren_level_end_pos\
    \ = paren_level_start;\n    let mut paren_level_end_pos = paren_level_start;\n\
    \    let mut paren_level_end_pos = paren_level_start;\n    let mut paren_level_end_pos\
    \ = paren_level_start;\n    let mut paren_level_end_pos = paren_level_start;\n\
    \    let mut paren_level_end_pos = paren_level_start;\n    let mut paren_level_end_pos\
    \ = paren_level_start;\n    let mut paren_level_end_pos = paren_level_start;\n\
    \    let mut paren_level_end_pos = paren_level_start;\n    let mut paren_level_end_pos\
    \ = paren_level_start;\n    let mut paren_level_end_pos = paren_level_start;\n\
    \    let mut paren_level_end_pos = paren_level_start;\n    let mut paren_level_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = &mut\
    \ paren_levels_stack;\n    let mut paren_levels_stack_ptr_end = &mut paren_levels_stack;\n\
    \    let mut paren_levels_stack_ptr_end_ptr = &mut paren_levels_stack_ptr;\n \
    \   let mut paren_levels_stack_ptr_end_ptr_end = &mut paren_levels_stack_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr = &mut paren_levels_stack_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end = &mut paren_levels_stack_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr = &mut paren_levels_stack_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end = &mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr = &mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr = &mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = &mut\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = &mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end;\n    let\
    \ mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = &mut\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end_ptr_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_start = paren_string.find('(');\n    let mut paren_level_end = paren_string.find(')');\n\
    \    while paren_level_start != paren_level_end {\n        paren_levels.push(paren_level);\n\
    \        paren_level_count = paren_level_count;\n        paren_level_start = paren_string.find('(',\
    \ paren_level_start + 1);\n        paren_level_end = paren_string.find(')', paren_level_start\
    \ + 1);\n        paren_level += 1;\n    }\n    paren_levels.push(paren_level);\n\
    \    paren_level_count", "    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut\
    \ paren_level_char_count = 0;\n    let mut paren_level_char = 0;\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_pos_count = 0;\n   \
    \ let mut paren_level_char_pos_char = 0;\n    let mut paren_level_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_count = 0;\n    let mut paren_level_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char = 0;\n    let\
    \ mut paren_level_char_pos_char_pos_char_pos_char_pos = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos = 0;\n \
    \   let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_count = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char = 0;\n\
    \    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_count\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char_pos_char\
    \ = 0;\n    let mut paren_level_char_pos_char_pos_char_pos_char_pos_char_pos_char_",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars =\
    \ Vec::new();\n    let mut paren_level_char: char;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let ", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    while paren_level_count < MAX_NESTING {\n        let mut\
    \ paren_level_string = paren_string;\n        let mut paren_level_string = paren_string;\n\
    \        let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut paren_level_string = paren_string;\n      \
    \  let mut paren_level_string = paren_string;\n        let mut paren_level_string\
    \ = paren_string;\n        let mut ", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_level", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr =\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end;\n    let\
    \ mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr =\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n  \
    \  let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_pos = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_len = paren_levels_stack.len();\n    let mut paren_levels_stack_max_pos\
    \ = paren_levels_stack.len();\n    let ", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next = Vec::new();\n    let mut\
    \ paren_levels_ptr_next_ptr = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_next_ptr_next_ptr_next = Vec::new();\n    let mut\
    \ paren_levels_ptr_next_ptr_next_ptr_next_ptr = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = Vec::new();\n    let mut paren_level", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_level", "    let mut paren_level\
    \ = 0;\n    let mut paren_levels = Vec::new();\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_", "    let mut paren_level = 0;\n    let mut\
    \ paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_level_index = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string_index = 0;\n    let mut paren_level_string_len\
    \ = 0;\n    while paren_level_string_index < paren_string.len() {\n        let\
    \ mut paren_level_string = paren_string;\n        let mut paren_level_string_len\
    \ = 0;\n        while paren_level_string_len < paren_level_string.len() {\n  \
    \          let mut paren_level_string = paren_string;\n            let mut paren_level_string_len\
    \ = 0;\n            while paren_level_string_len < paren_level_string.len() {\n\
    \                let mut paren_level_string = paren_string;\n                let\
    \ mut paren_level_string_len = 0;\n                while paren_level_string_len\
    \ < paren_level_string.len() {\n                    let mut paren_level_string\
    \ = paren_string;\n                    let mut paren_level_string_len = 0;\n \
    \                   while paren_level_string_len < paren_level_string.len() {\n\
    \                        let mut paren_level_string = paren_string;\n        \
    \                let mut paren_level_string_len = 0;\n                       \
    \ while paren_level_string_len < paren_level_string.len() {\n                \
    \            let mut paren_level_string = paren_string;\n                    \
    \        let mut paren_level_string_len = 0;\n                            while\
    \ paren_level_string_len < paren_level_string.len() {\n                      \
    \          let mut paren_level_string = paren_string;\n                      \
    \          let mut paren_level_string_len = 0;\n                             \
    \   while paren_level_string_len < paren_level_string.len() {\n              \
    \                      let mut paren_level_string = paren_string;\n          \
    \                          let mut paren_level_string_len = 0;\n             \
    \                       while paren_level_string_len < paren_level_string.len()\
    \ {\n                                        let mut paren_level_string = paren_string;\n\
    \                                        let mut paren_level_string_len = 0;\n\
    \                                        while paren_level_string_len < paren_level_string.len()\
    \ {\n                                            let mut paren_level_string =\
    \ paren_string;\n                                            let mut paren_level_string_len\
    \ = 0;\n                                            while paren_level_string_len\
    \ < paren_level_string.len() {\n                                             \
    \   let mut paren_level_string = paren_string;\n                             \
    \                   let mut paren_level_string_len = 0;\n                    \
    \                            while paren_level_string_len < paren_level_string.len()\
    \ {\n                                                    let mut paren", "   \
    \ let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mu", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_char = 0;\n\
    \    let mut paren_level_char_next = 0;\n    let mut paren_level_char_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next = 0;\n    let mut paren_level_char_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next = 0;\n    let mut\
    \ paren_level_char_next_next_next_next_next_next = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next =\
    \ 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_next_next_next_next_next_next_next_next_next_next_next_next_next_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_ptr;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_start = paren_string.chars().nth(0).unwrap();\n\
    \    let mut paren_level_end = paren_string.chars().nth(1).unwrap();\n    let\
    \ mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let mut\
    \ paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let mut paren_level_end\
    \ = paren_level_end.chars().nth(1).unwrap();\n    let mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n\
    \    let mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let\
    \ mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let mut\
    \ paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let mut paren_level_end\
    \ = paren_level_end.chars().nth(1).unwrap();\n    let mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n\
    \    let mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let\
    \ mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let mut\
    \ paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let mut paren_level_end\
    \ = paren_level_end.chars().nth(1).unwrap();\n    let mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n\
    \    let mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let\
    \ mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let mut\
    \ paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let mut paren_level_end\
    \ = paren_level_end.chars().nth(1).unwrap();\n    let mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n\
    \    let mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let\
    \ mut paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let mut\
    \ paren_level_end = paren_level_end.chars().nth(1).unwrap();\n    let mut paren_level_end\
    \ = paren_level_end.chars().nth(1).unwrap();\n    let mut paren_level_end = paren_level_end.",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n  \
    \  let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_len = paren_string.len();\n\
    \    let mut paren_levels_index = 0;\n    let mut paren_levels_index2 = 0;\n \
    \   let mut paren_levels_index3 = 0;\n    let mut paren_levels_index4 = 0;\n \
    \   let mut paren_levels_index5 = 0;\n    let mut paren_levels_index6 = 0;\n \
    \   let mut paren_levels_index7 = 0;\n    let mut paren_levels_index8 = 0;\n \
    \   let mut paren_levels_index9 = 0;\n    let mut paren_levels_index10 = 0;\n\
    \    let mut paren_levels_index11 = 0;\n    let mut paren_levels_index12 = 0;\n\
    \    let mut paren_levels_index13 = 0;\n    let mut paren_levels_index14 = 0;\n\
    \    let mut paren_levels_index15 = 0;\n    let mut paren_levels_index16 = 0;\n\
    \    let mut paren_levels_index17 = 0;\n    let mut paren_levels_index18 = 0;\n\
    \    let mut paren_levels_index19 = 0;\n    let mut paren_levels_index20 = 0;\n\
    \    let mut paren_levels_index21 = 0;\n    let mut paren_levels_index22 = 0;\n\
    \    let mut paren_levels_index23 = 0;\n    let mut paren_levels_index24 = 0;\n\
    \    let mut paren_levels_index25 = 0;\n    let mut paren_levels_index26 = 0;\n\
    \    let mut paren_levels_index27 = 0;\n    let mut paren_levels_index28 = 0;\n\
    \    let mut paren_levels_index29 = 0;\n    let mut paren_levels_index30 = 0;\n\
    \    let mut paren_levels_index31 = 0;\n    let mut paren_levels_index32 = 0;\n\
    \    let mut paren_levels_index33 = 0;\n    let mut paren_levels_index34 = 0;\n\
    \    let mut paren_levels_index35 = 0;\n    let mut paren_levels_index36 = 0;\n\
    \    let mut paren_levels_index37 = 0;\n    let mut paren_levels_index38 = 0;\n\
    \    let mut paren_levels_index39 = 0;\n    let mut paren_levels_index40 = 0;\n\
    \    let mut paren_levels_index41 = 0;\n    let mut paren_levels_index42 = 0;\n\
    \    let mut paren_levels_index43 = 0;\n    let mut paren_levels_index44 = 0;\n",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index =\
    \ 0;\n    let mut paren_level_indexes: Vec<isize> = Vec::new();\n    let mut paren_level_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_indexes\
    \ = 0;\n    let mut paren_level_indexes_len_indexe = 0;\n    let mut paren_level_indexes_len_indexe_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_index", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut ", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_chars\
    \ = Vec::new();\n    let mut paren_level_char: char;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_string.len();\n    let mut paren_level_char_len\
    \ = paren_level_char_len.saturating_sub(1);\n    while paren_level_char_pos <\
    \ paren_level_char_len {\n        paren_level_char = paren_string[paren_level_char_pos];\n\
    \        if paren_level_char == '(' {\n            paren_level_char_count++;\n\
    \            paren_level_chars.push(paren_level_char);\n            paren_level_count\
    \ = paren_level_count + 1;\n            paren_levels.push(paren_level_count);\n\
    \            paren_level_char_pos = paren_level_char_pos + 1;\n        } else\
    \ if paren_level_char == ')' {\n            paren_level_char_count--;\n      \
    \      if paren_level_char_count == 0 {\n                paren_level_chars.pop();\n\
    \                paren_levels.pop();\n                paren_level_char_pos = paren_level_char_pos\
    \ - 1;\n            }\n        }\n        paren_level_char_pos = paren_level_char_pos\
    \ + 1;\n    }\n    paren_levels", "    let mut paren_levels = Vec::new();\n  \
    \  let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_pos_end = 0;\n    let\
    \ mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end =\
    \ 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let mut paren_level_char_pos_end\
    \ = 0;\n    let mut paren_level_char_pos_start = 0;\n    let ", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n  \
    \  for paren in paren_string.chars() {\n        if paren == '(' {\n          \
    \  paren_level += 1;\n            paren_nesting += 1;\n        } else if paren\
    \ == ')' {\n            paren_level -= 1;\n            paren_nesting -= 1;\n \
    \           if paren_level == 0 {\n                paren_levels.push(paren_nesting);\n\
    \            }\n        }\n    }\n    paren_levels", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = ", "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n \
    \   let mut paren_levels_stack_ptr_start = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_start = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_start = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_start = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_start = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_start = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end = ", "   \
    \ let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_chars_index\
    \ = 0;\n    let mut paren_level_chars_index2 = 0;\n    let mut paren_level_chars_index3\
    \ = 0;\n    let mut paren_level_chars_index4 = 0;\n    let mut paren_level_chars_index5\
    \ = 0;\n    let mut paren_level_chars_index6 = 0;\n    let mut paren_level_chars_index7\
    \ = 0;\n    let mut paren_level_chars_index8 = 0;\n    let mut paren_level_chars_index9\
    \ = 0;\n    let mut paren_level_chars_index10 = 0;\n    let mut paren_level_chars_index11\
    \ = 0;\n    let mut paren_level_chars_index12 = 0;\n    let mut paren_level_chars_index13\
    \ = 0;\n    let mut paren_level_chars_index14 = 0;\n    let mut paren_level_chars_index15\
    \ = 0;\n    let mut paren_level_chars_index16 = 0;\n    let mut paren_level_chars_index17\
    \ = 0;\n    let mut paren_level_chars_index18 = 0;\n    let mut paren_level_chars_index19\
    \ = 0;\n    let mut paren_level_chars_index20 = 0;\n    let mut paren_level_chars_index21\
    \ = 0;\n    let mut paren_level_chars_index22 = 0;\n    let mut paren_level_chars_index23\
    \ = 0;\n    let mut paren_level_chars_index24 = 0;\n    let mut paren_level_chars_index25\
    \ = 0;\n    let mut paren_level_chars_index26 = 0;\n    let mut paren_level_chars_index27\
    \ = 0;\n    let mut paren_level_chars_index28 = 0;\n    let mut paren_level_chars_index29\
    \ = 0;\n    let mut paren_level_chars_index30 = 0;\n    let mut paren_level_chars_index31\
    \ = 0;\n    let mut paren_level_chars_index32 = 0;\n    let mut paren_level_chars_index33\
    \ = 0;\n    let mut paren_level_chars_index34 = 0;\n    let mut paren_level_chars_index35\
    \ = 0;\n    let mut paren_level_chars_index36 = 0;\n    let mut paren_level_chars_index37\
    \ = 0;\n    let mut paren_level_chars_index38 = 0;\n    let mut paren_level_chars_index39\
    \ = 0;\n    let mut paren_level_chars_index40 = 0;\n    let mut paren_level_chars_index41\
    \ = 1;\n    let mut paren_level_chars_index42 = 1;\n    let mut paren_level_chars_index43\
    \ = 1;\n    let mut ", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_char = 0;\n    let mut paren_level_chars = Vec::new();\n\
    \    let mut paren_level_char_index = 0;\n    let mut paren_level_char_length\
    \ = 0;\n    let mut paren_level_char_lengths = Vec::new();\n    let mut paren_level_char_length_index\
    \ = 0;\n    let mut paren_level_char_lengths_index = 0;\n    let mut paren_level_char_lengths_index2\
    \ = 0;\n    let mut paren_level_char_lengths_index3 = 0;\n    let mut paren_level_char_lengths_index4\
    \ = 0;\n    let mut paren_level_char_lengths_index5 = 0;\n    let mut paren_level_char_lengths_index6\
    \ = 0;\n    let mut paren_level_char_lengths_index7 = 0;\n    let mut paren_level_char_lengths_index8\
    \ = 0;\n    let mut paren_level_char_lengths_index9 = 0;\n    let mut paren_level_char_lengths_index10\
    \ = 0;\n    let mut paren_level_char_lengths_index11 = 0;\n    let mut paren_level_char_lengths_index12\
    \ = 0;\n    let mut paren_level_char_lengths_index13 = 0;\n    let mut paren_level_char_lengths_index14\
    \ = 0;\n    let mut paren_level_char_lengths_index15 = 0;\n    let mut paren_level_char_lengths_index16\
    \ = 0;\n    let mut paren_level_char_lengths_index17 = 0;\n    let mut paren_level_char_lengths_index18\
    \ = 0;\n    let mut paren_level_char_lengths_index19 = 0;\n    let mut paren_level_char_lengths_index20\
    \ = 0;\n    let mut paren_level_char_lengths_index21 = 0;\n    let mut paren_level_char_lengths_index22\
    \ = 0;\n    let mut paren_level_char_lengths_index23 = 0;\n    let mut paren_level_char_lengths_index24\
    \ = 0;\n    let mut paren_level_char_lengths_index25 = 0;\n    let mut paren_level_char_lengths_index26\
    \ = 0;\n    let mut paren_level_char_lengths_index27 = 0;\n    let mut paren_level_char_lengths_index28\
    \ = 0;\n    let mut paren_level_char_lengths_index29 = 0;\n    let mut paren_level_char_lengths_index30\
    \ = 0;\n    let mut paren_level_char_lengths_index31 = 0;\n    let mut paren_level_char_length",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n   \
    \ let mut paren_level_string = paren_string;\n    let mut paren_level_string =\
    \ paren_string;\n    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut ", "    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_size = paren_levels.size();\n    let\
    \ mut paren_levels_ptr = paren_levels.as_mut_ptr();\n    let mut paren_levels_end\
    \ = paren_levels_ptr.offset(paren_levels_size);\n    let mut paren_levels_ptr_end\
    \ = paren_levels_end;\n    let mut paren_levels_ptr_end = paren_levels_end;\n\
    \    let mut paren_levels_ptr_end = paren_levels_end;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_end;\n    let mut paren_levels_ptr_end = paren_levels_end;\n\
    \    let mut paren_levels_ptr_end = paren_levels_end;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_end;\n    let mut paren_levels_ptr_end = paren_levels_end;\n\
    \    let mut paren_levels_ptr_end = paren_levels_end;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_end;\n    let mut paren_levels_ptr_end = paren_levels_end;\n\
    \    let mut paren_levels_ptr_end = paren_levels_end;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_end;\n    let mut paren_levels_ptr_end = paren_levels_end;\n\
    \    let mut paren_levels_ptr_end = paren_levels_end;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_end;\n    let mut paren_levels_ptr_end = paren_levels_end;\n\
    \    let mut paren_levels_ptr_end = paren_levels_end;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_end;\n    let mut paren_levels_ptr_end = paren_levels_end;\n\
    \    let mut paren_levels_ptr_end = paren_levels_end;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_end;\n    let mut paren_levels_ptr_end = paren_levels_end;\n\
    \    let mut paren_levels_ptr_end = paren_levels_end;\n    let mut paren_levels_ptr_end\
    \ = paren_levels_end;\n    let mut paren_levels_ptr_end = paren_levels_end;\n\
    \    let mut paren_levels_ptr_end = paren_levels_end;\n    let mut paren_level",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = ", "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n   \
    \ let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = ", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = 0;\n    let\
    \ mut paren_levels_stack_ptr_len = paren_levels_stack_ptr.len();\n    let mut\
    \ paren_levels_stack_ptr_pos = 0;\n    let mut paren_levels_stack_ptr_pos_len\
    \ = paren_levels_stack_ptr_pos.len();\n    let mut paren_levels_stack_ptr_pos_ptr\
    \ = paren_levels_stack_ptr_pos.as_ptr();\n    let mut paren_levels_stack_ptr_pos_ptr_len\
    \ = paren_levels_stack_ptr_pos_ptr.len();\n    let mut paren_levels_stack_ptr_pos_ptr_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr_pos_ptr_pos_len = paren_levels_stack_ptr_pos_ptr_pos.len();\n\
    \    let mut paren_levels_stack_ptr_pos_ptr_pos_ptr = paren_levels_stack_ptr_pos_ptr_pos.as_ptr();\n\
    \    let mut paren_levels_stack_ptr_pos_ptr_pos_ptr_len = paren_levels_stack_ptr_pos_ptr_pos_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_pos_ptr_pos_ptr_pos = 0;\n    let mut paren_levels_stack_ptr_pos_ptr_pos_ptr_pos_len\
    \ = paren_levels_stack_ptr_pos_ptr_pos_ptr_pos.len();\n    let mut paren_levels_stack_ptr_pos_ptr_pos_ptr_pos_ptr\
    \ = paren_levels_stack_ptr_pos_ptr_pos_ptr_pos_ptr.as_ptr();\n    let mut paren_levels_stack_ptr_pos_ptr_pos_ptr_pos_ptr_len\
    \ = paren_levels_stack_ptr_pos_ptr_pos_ptr_pos_ptr.len();\n    let mut paren_levels_stack_ptr_pos_ptr_pos_ptr_pos_ptr_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr_pos_ptr_pos_ptr_pos_ptr_pos_len = paren_levels_stack_ptr_pos_ptr_pos_ptr_pos_ptr_pos.len();\n\
    \    let mut paren_levels_stack_ptr_pos_ptr_pos_ptr_pos_ptr_pos_ptr = paren_levels_stack_ptr_pos_ptr_pos_ptr_pos_ptr_pos_",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nest", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nest", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_iter = paren_levels_iter.filter_map(|(_, char)| {\n\
    \        if char == '(' {\n            paren_level += 1;\n            Some(paren_level)\n\
    \        } else {\n            Some(paren_level)\n        }\n    });\n    let\
    \ mut paren_levels_iter = paren_levels_iter.filter_map(|level| {\n        if level\
    \ == paren_level {\n            Some(level)\n        } else {\n            None\n\
    \        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|level|\
    \ {\n        if level == paren_level {\n            Some(level)\n        } else\
    \ {\n            None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|level|\
    \ {\n        if level == paren_level {\n            Some(level)\n        } else\
    \ {\n            None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|level|\
    \ {\n        if level == paren_level {\n            Some(level)\n        } else\
    \ {\n            None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|level|\
    \ {\n        if level == paren_level {\n            Some(level)\n        } else\
    \ {\n            None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|level|\
    \ {\n        if level == paren_level {\n            Some(level)\n        } else\
    \ {\n            None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|level|\
    \ {\n        if level == paren_level {\n            Some(level)\n        } else\
    \ {\n            None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|level|\
    \ {\n        if level == paren_level {\n            Some(level)\n        } else\
    \ {\n            None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|level|\
    \ {\n        if level == paren_level {\n            Some(level)\n        } else\
    \ {\n            None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.filter_map(|level|\
    \ {\n        if level == paren_level {\n            Some(level)\n        } else\
    \ {\n            None\n        }\n    });\n    let mut paren_levels_iter = paren_levels_iter.",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n  \
    \  for paren in paren_string.chars() {\n        if paren == '(' {\n          \
    \  paren_level += 1;\n            paren_nesting += 1;\n        } else if paren\
    \ == ')' {\n            paren_level -= 1;\n            paren_nesting -= 1;\n \
    \           if paren_nesting == 0 {\n                paren_levels.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_levels", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_next = 0;\n\
    \    let mut paren_levels_ptr = paren_levels_stack.as_mut_ptr();\n    let mut\
    \ paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_next\
    \ = paren_levels_ptr;\n    let mut paren_levels_ptr_next = paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next = paren_levels_ptr;\n    let mut paren_levels_ptr_",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_iter\
    \ = paren_string.char_indices();\n    for paren_level in paren_levels_iter {\n\
    \        if paren_level == paren_string.len() {\n            break;\n        }\n\
    \        let mut paren_levels_iter = paren_string.char_indices();\n        let\
    \ mut paren_levels_iter_next = paren_levels_iter.next();\n        let mut paren_levels_iter_next_next\
    \ = paren_levels_iter_next.next();\n        let mut paren_levels_iter_next_next_next\
    \ = paren_levels_iter_next_next.next();\n        let mut paren_levels_iter_next_next_next_next\
    \ = paren_levels_iter_next_next_next.next();\n        let mut paren_levels_iter_next_next_next_next_next\
    \ = paren_levels_iter_next_next_next_next.next();\n        let mut paren_levels_iter_next_next_next_next_next_next\
    \ = paren_levels_iter_next_next_next_next_next.next();\n        let mut paren_levels_iter_next_next_next_next_next_next_next\
    \ = paren_levels_iter_next_next_next_next_next_next.next();\n        let mut paren_levels_iter_next_next_next_next_next_next_next_next\
    \ = paren_levels_iter_next_next_next_next_next_next_next.next();\n        let\
    \ mut paren_levels_iter_next_next_next_next_next_next_next_next_next = paren_levels_iter_next_next_next_next_next_next_next_next.next();\n\
    \        let mut paren_levels_iter_next_next_next_next_next_next_next_next_next_next\
    \ = paren_levels_iter_next_next_next_next_next_next_next_next_next.next();\n \
    \       let mut paren_levels_iter_next_next_next_next_next_next_next_next_next_next_next\
    \ = paren_levels_iter_next_next_next_next_next_next_next_next_next_next.next();\n\
    \        let mut paren_levels_iter_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = paren_levels_iter_next_next_next_next_next_next_next_next_next_next_next_next.next();\n\
    \        let mut paren_levels_iter_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = paren_levels_iter_next_next_next_next_next_next_next_next_next_next_next_next_next.next();\n\
    \        let mut paren_levels_iter_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = paren_levels_iter_next_next_next_next_next_next_next_next_next_next_next_next_next.next();\n\
    \        let mut paren_levels_iter_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = paren_levels_iter_next_next_", "    let mut paren_levels = Vec::new();\n \
    \   let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n \
    \   let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack;\n\
    \    let mut paren_levels_stack_ptr_pos = 0;\n    let mut paren_levels_stack_ptr_size\
    \ = paren_levels_stack_ptr.len();\n    let mut paren_levels_stack_ptr_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_pos = 0;\n    let mut paren_levels_stack_ptr_ptr_size\
    \ = paren_levels_stack_ptr_ptr.len();\n    let mut paren_levels_stack_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_size = paren_levels_stack_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_pos = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_size\
    \ = paren_levels_stack_ptr_ptr_ptr_ptr.len();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_ptr_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_pos\
    \ = 0;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_size = paren_levels_stack_ptr_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_pos = 0;\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_size = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_pos = 0;\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_size = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr.len();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_pos = 0;\n    let\
    \ mut paren", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = &mut paren_levels_stack;\n    let mut paren_levels_ptr = &mut paren_levels;\n\
    \    let mut paren_levels_ptr_next = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next = &mut\
    \ paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next = &mut\
    \ paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr =\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_curr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = &mut\
    \ paren_levels_stack;\n    let mut paren_levels_ptr = &mut paren_levels;\n   \
    \ let mut paren_levels_ptr_end = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_end\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n\
    \    let mut paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n    let mut\
    \ paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n    let mut paren_levels_ptr_end_ptr\
    \ = &mut paren_levels_ptr_end;\n    let mut paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n\
    \    let mut paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n    let mut\
    \ paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n    let mut paren_levels_ptr_end_ptr\
    \ = &mut paren_levels_ptr_end;\n    let mut paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n\
    \    let mut paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n    let mut\
    \ paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n    let mut paren_levels_ptr_end_ptr\
    \ = &mut paren_levels_ptr_end;\n    let mut paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n\
    \    let mut paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n    let mut\
    \ paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n    let mut paren_levels_ptr_end_ptr\
    \ = &mut paren_levels_ptr_end;\n    let mut paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n\
    \    let mut paren_levels_ptr_end_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_len;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack_len;\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n  \
    \  let mut paren_levels_stack_ptr_end_ptr_end = paren_levels_stack_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr =\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = &mut paren_levels_stack;\n\
    \    let mut paren_levels_ptr = &mut paren_levels;\n    let mut paren_levels_ptr_end\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_end_ptr = &mut paren_levels_ptr_end;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr = &mut paren_levels_ptr_end_ptr;\n \
    \   let mut paren_levels_ptr_end_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n \
    \   let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_ptr_end_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = &mut paren_levels_ptr_end_ptr", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut\
    \ paren_levels_index = 0;\n    let mut paren_levels_index2 = 0;\n    let mut paren_levels_index3\
    \ = 0;\n    let mut paren_levels_index4 = 0;\n    let mut paren_levels_index5\
    \ = 0;\n    let mut paren_levels_index6 = 0;\n    let mut paren_levels_index7\
    \ = 0;\n    let mut paren_levels_index8 = 0;\n    let mut paren_levels_index9\
    \ = 0;\n    let mut paren_levels_index10 = 0;\n    let mut paren_levels_index11\
    \ = 0;\n    let mut paren_levels_index12 = 0;\n    let mut paren_levels_index13\
    \ = 0;\n    let mut paren_levels_index14 = 0;\n    let mut paren_levels_index15\
    \ = 0;\n    let mut paren_levels_index16 = 0;\n    let mut paren_levels_index17\
    \ = 0;\n    let mut paren_levels_index18 = 0;\n    let mut paren_levels_index19\
    \ = 0;\n    let mut paren_levels_index20 = 0;\n    let mut paren_levels_index21\
    \ = 0;\n    let mut paren_levels_index22 = 0;\n    let mut paren_levels_index23\
    \ = 0;\n    let mut paren_levels_index24 = 0;\n    let mut paren_levels_index25\
    \ = 0;\n    let mut paren_levels_index26 = 0;\n    let mut paren_levels_index27\
    \ = 0;\n    let mut paren_levels_index28 = 0;\n    let mut paren_levels_index29\
    \ = 0;\n    let mut paren_levels_index30 = 0;\n    let mut paren_levels_index31\
    \ = 0;\n    let mut paren_levels_index32 = 0;\n    let mut paren_levels_index33\
    \ = 0;\n    let mut paren_levels_index34 = 0;\n    let mut paren_levels_index35\
    \ = 0;\n    let mut paren_levels_index36 = 0;\n    let mut paren_levels_index37\
    \ = 0;\n    let mut paren_levels_index38 = 0;\n    let mut paren_levels_index39\
    \ = 0;\n    let mut paren_levels_index40 = 0;\n    let mut paren_levels_index41\
    \ = 0;\n    let mut paren_levels_index42 = 0;\n    let mut paren_levels_index43\
    \ = 0;\n    let mut paren_levels_index44 = 0;\n    let mut paren", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_next = paren_levels_stack_ptr;\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack_ptr;\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_next = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_next = paren_levels_stack_ptr;\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack_ptr;\n    let mut paren_levels_stack_next\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_next = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_next = paren_levels_stack_ptr;\n    let ", " \
    \   let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_chars = vec![];\n    let mut paren_level_char = 0;\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let ", "    let mut paren_levels =\
    \ Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack =\
    \ Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_end = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_end\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr;\n    let\
    \ mut paren_levels_stack_ptr_end_ptr_end = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end_ptr_end_ptr = paren_levels_stack_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr;\n    let\
    \ mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr =\
    \ paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr;", "    let mut paren_level = 0;\n    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut\
    \ paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_", "    let mut paren_levels = vec![];\n    let mut\
    \ paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_end = paren_levels_iter.end();\n\
    \    let mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_end\
    \ = paren_levels_iter.end();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_end = paren_levels_iter.end();\n    let mut paren_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_end = paren_levels_iter.end();\n\
    \    let mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_end\
    \ = paren_levels_iter.end();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_end = paren_levels_iter.end();\n    let mut paren_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_end = paren_levels_iter.end();\n\
    \    let mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_end\
    \ = paren_levels_iter.end();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_end = paren_levels_iter.end();\n    let mut paren_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_end = paren_levels_iter.end();\n\
    \    let mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_end\
    \ = paren_levels_iter.end();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_end = paren_levels_iter.end();\n    let mut paren_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_end = paren_levels_iter.end();\n\
    \    let mut paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_end\
    \ = paren_levels_iter.end();\n    let mut paren_levels_iter = paren_string.char_indices();\n\
    \    let mut paren_levels_end = paren_levels_iter.end();\n    let mut paren_levels_iter\
    \ = paren_string.char_indices();\n    let mut paren_levels_end = paren_levels_iter.end();\n\
    \    let mut paren_levels_iter = paren_string.char_indices", "    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_levels = Vec::new();\n\
    \    let mut paren_nestings = Vec::new();\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n\
    \    let mut paren_nestings_iter = paren_string.char_indices().rev();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices().rev();\n    let mut paren_nestings_iter\
    \ = paren_string.char_indices().rev();\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n\
    \    let mut paren_nestings_iter = paren_string.char_indices().rev();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices().rev();\n    let mut paren_nestings_iter\
    \ = paren_string.char_indices().rev();\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n\
    \    let mut paren_nestings_iter = paren_string.char_indices().rev();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices().rev();\n    let mut paren_nestings_iter\
    \ = paren_string.char_indices().rev();\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n\
    \    let mut paren_nestings_iter = paren_string.char_indices().rev();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices().rev();\n    let mut paren_nestings_iter\
    \ = paren_string.char_indices().rev();\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n\
    \    let mut paren_nestings_iter = paren_string.char_indices().rev();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices().rev();\n    let mut paren_nestings_iter\
    \ = paren_string.char_indices().rev();\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n\
    \    let mut paren_nestings_iter = paren_string.char_indices().rev();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices().rev();\n    let mut paren_nestings_iter\
    \ = paren_string.char_indices().rev();\n    let mut paren_levels_iter = paren_string.char_indices().rev();\n\
    \    let mut paren_nestings_iter = paren_string.char_indices().rev();\n    let\
    \ mut paren_levels_iter = paren_string.char_indices().rev", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_level", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_chars_index\
    \ = 0;\n    let mut paren_level_chars_index2 = 0;\n    let mut paren_level_chars_index3\
    \ = 0;\n    let mut paren_level_chars_index4 = 0;\n    let mut paren_level_chars_index5\
    \ = 0;\n    let mut paren_level_chars_index6 = 0;\n    let mut paren_level_chars_index7\
    \ = 0;\n    let mut paren_level_chars_index8 = 0;\n    let mut paren_level_chars_index9\
    \ = 0;\n    let mut paren_level_chars_index10 = 0;\n    let mut paren_level_chars_index11\
    \ = 0;\n    let mut paren_level_chars_index12 = 0;\n    let mut paren_level_chars_index13\
    \ = 0;\n    let mut paren_level_chars_index14 = 0;\n    let mut paren_level_chars_index15\
    \ = 0;\n    let mut paren_level_chars_index16 = 0;\n    let mut paren_level_chars_index17\
    \ = 0;\n    let mut paren_level_chars_index18 = 0;\n    let mut paren_level_chars_index19\
    \ = 0;\n    let mut paren_level_chars_index20 = 0;\n    let mut paren_level_chars_index21\
    \ = 0;\n    let mut paren_level_chars_index22 = 0;\n    let mut paren_level_chars_index23\
    \ = 0;\n    let mut paren_level_chars_index24 = 0;\n    let mut paren_level_chars_index25\
    \ = 0;\n    let mut paren_level_chars_index26 = 0;\n    let mut paren_level_chars_index27\
    \ = 0;\n    let mut paren_level_chars_index28 = 0;\n    let mut paren_level_chars_index29\
    \ = 0;\n    let mut paren_level_chars_index30 = 0;\n    let mut paren_level_chars_index31\
    \ = 0;\n    let mut paren_level_chars_index32 = 0;\n    let mut paren_level_chars_index33\
    \ = 0;\n    let mut paren_level_chars_index34 = 0;\n    let mut paren_level_chars_index35\
    \ = 0;\n    let mut paren_level_chars_index36 = 0;\n    let mut paren_level_chars_index37\
    \ = 0;\n    let mut paren_level_chars_index38 = 0;\n    let mut paren_level_chars_index39\
    \ = 0;\n    let mut paren_level_chars_index40 = 0;\n    let mut paren_level_chars_index41\
    \ = 0;\n    let mut paren_level_chars_index42 = 0;\n    let mut paren_level_chars_index43\
    \ = 0;\n    let mut paren", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end = ", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_level", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_iter = paren_string.char_indices();\n    let\
    \ mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mu", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let\
    \ mut paren_level_char = 0;\n    let mut paren_level_char_pos = 0;\n    let mut\
    \ paren_level_char_len = paren_string.len();\n    let mut paren_level_char_end\
    \ = paren_level_char_len;\n    let mut paren_level_char_end_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_end_len = paren_level_char_len;\n    let mut paren_level_char_end_char\
    \ = paren_level_char_len;\n    let mut paren_level_char_end_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_len = paren_level_char_len;\n    let mut\
    \ paren_level_char_end_char_char = paren_level_char_len;\n    let mut paren_level_char_end_char_char_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_end_char_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char_char = paren_level_char_len;\n   \
    \ let mut paren_level_char_end_char_char_char_pos = paren_level_char_len;\n  \
    \  let mut paren_level_char_end_char_char_char_len = paren_level_char_len;\n \
    \   let mut paren_level_char_end_char_char_char_char = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char_char_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char_char_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char_char_char_char = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char_char_char_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char_char_char_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char_char_char_char_char = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char_char_char_char_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char_char_char_char_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char_char_char_char_char_char = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char_char_char_char_char_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char_char_char_char_char_char_len = paren_level_char_len;\n\
    \    let mut paren", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_ptr = paren_levels_stack.as_mut_ptr();\n    let\
    \ mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_string = paren_string;\n    let mut paren_level_string\
    \ = paren_string;\n    let mut paren_level_string = paren_string;\n    let mut\
    \ paren_level_string = paren_string;\n    let mut paren", "    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n\
    \    let mut paren_levels_ptr = paren_levels_stack.as_mut_ptr();\n    let mut\
    \ paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = &mut paren_levels_stack;\n    let mut paren_levels_ptr = &mut paren_levels;\n\
    \    let mut paren_levels_ptr_next = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next = &mut\
    \ paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next = &mut\
    \ paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mu", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = &mut\
    \ paren_levels_stack;\n    let mut paren_levels_ptr = &mut paren_levels;\n   \
    \ let mut paren_levels_ptr_next = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_ptr\
    \ = &mut paren_levels_ptr_next;\n    let mut paren_levels_ptr_next_ptr_next =\
    \ &mut paren_levels_ptr_next_ptr;\n    let mut paren_levels_ptr_next_ptr_next_ptr\
    \ = &mut paren_levels_ptr_next_ptr_next;\n    let mut paren_levels_ptr_next_ptr_next_ptr_next\
    \ = &mut paren_levels_ptr_next_ptr_next_ptr;\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr\
    \ = &mut paren_levels_ptr_next_ptr_next_ptr_next;\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = &mut paren_levels_ptr_next_ptr_next_ptr_next_ptr;\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr\
    \ = &mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next;\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = &mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr;\n    let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = &mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr;\n    let\
    \ mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr =\
    \ &mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next;\n \
    \   let mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next\
    \ = &mut paren_levels_ptr_next_ptr_next_ptr_next_ptr_next_ptr_next_", "    let\
    \ mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n   \
    \ let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut paren_level_string = paren_string.clone();\n    let mut paren_level_string\
    \ = paren_string.clone();\n    let mut paren_level_string = paren_string.clone();\n\
    \    let mut ", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_start = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_start_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let ", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index =\
    \ 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_char: char;\n    let mut paren_level_chars: Vec<char>\
    \ = paren_string.chars().collect();\n    while paren_level_char_index < paren_level_chars.len()\
    \ {\n        paren_level_char = paren_level_chars[paren_level_char_index];\n \
    \       if paren_level_char == ')' {\n            paren_levels.push(paren_level);\n\
    \            paren_level = 0;\n            paren_level_index += 1;\n         \
    \   paren_level_char_index += 1;\n        } else if paren_level_char == '(' {\n\
    \            paren_level += 1;\n            paren_level_index += 1;\n        }\
    \ else {\n            paren_level_char_index += 1;\n        }\n    }\n    paren_levels.push(paren_level);\n\
    \    paren_levels", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_top = paren_levels_stack_size;\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_level", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n \
    \   let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n   \
    \ let mut paren_levels_stack_ptr_end_ptr_end = paren_levels_stack_ptr_end;\n \
    \   let mut paren_levels_stack_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr =\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut\
    \ paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr\
    \ = &mut paren_levels_stack;\n    let mut paren_levels_ptr = &mut paren_levels;\n\
    \    let mut paren_levels_ptr_next = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next = &mut\
    \ paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next_next = &mut paren_levels_ptr;\n\
    \    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next = &mut\
    \ paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = &mut paren_levels_ptr;\n    let mut paren_levels_ptr_next_", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_index\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_index\
    \ = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr = paren_levels_stack;\n    let mut paren_levels_stack_ptr_ptr\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr = paren_levels_stack_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let mut\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n    let\
    \ mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr;\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_index = 0;\n    let mut paren_levels_size = paren_string.len();\n\
    \    let mut paren_levels_index = 0;\n    let mut paren_levels_size_index = 0;\n\
    \    let mut paren_levels_size_minus_1 = paren_levels_size;\n    let mut paren_levels_size_minus_2\
    \ = paren_levels_size;\n    let mut paren_levels_size_minus_3 = paren_levels_size;\n\
    \    let mut paren_levels_size_minus_4 = paren_levels_size;\n    let mut paren_levels_size_minus_5\
    \ = paren_levels_size;\n    let mut paren_levels_size_minus_6 = paren_levels_size;\n\
    \    let mut paren_levels_size_minus_7 = paren_levels_size;\n    let mut paren_levels_size_minus_8\
    \ = paren_levels_size;\n    let mut paren_levels_size_minus_9 = paren_levels_size;\n\
    \    let mut paren_levels_size_minus_10 = paren_levels_size;\n    let mut paren_levels_size_minus_11\
    \ = paren_levels_size;\n    let mut paren_levels_size_minus_12 = paren_levels_size;\n\
    \    let mut paren_levels_size_minus_13 = paren_levels_size;\n    let mut paren_levels_size_minus_14\
    \ = paren_levels_size;\n    let mut paren_levels_size_minus_15 = paren_levels_size;\n\
    \    let mut paren_levels_size_minus_16 = paren_levels_size;\n    let mut paren_levels_size_minus_17\
    \ = paren_levels_size;\n    let mut paren_levels_size_minus_18 = paren_levels_size;\n\
    \    let mut paren_levels_size_minus_19 = paren_levels_size;\n    let mut paren_levels_size_minus_20\
    \ = paren_levels_size;\n    let mut paren_levels_size_minus_21 = paren_levels_size;\n\
    \    let mut paren_levels_size_minus_22 = paren_levels_size;\n    let mut paren_levels_size_minus_23\
    \ = paren_levels_size;\n    let mut paren_levels_size_minus_24 = paren_levels_size;\n\
    \    let mut paren_levels_size_minus_25 = paren_levels_size;\n    let mut paren_levels_size_minus_",
  "    let mut paren_level = 0;\n    let mut paren_levels: Vec<isize> = vec![];\n\
    \    let mut paren_levels_stack: Vec<isize> = vec![];\n    let mut paren_levels_stack_top:\
    \ isize = 0;\n    let mut paren_levels_stack_end: isize = 0;\n    let mut paren_levels_stack_level:\
    \ isize = 0;\n    let mut paren_levels_stack_levels: Vec<isize> = vec![];\n  \
    \  let mut paren_levels_stack_levels_end: isize = 0;\n    let mut paren_levels_stack_levels_start:\
    \ isize = 0;\n    let mut paren_levels_stack_levels_level: isize = 0;\n    let\
    \ mut paren_levels_stack_levels_levels: Vec<isize> = vec![];\n    let mut paren_levels_stack_levels_levels_end:\
    \ isize = 0;\n    let mut paren_levels_stack_levels_levels_start: isize = 0;\n\
    \    let mut paren_levels_stack_levels_levels_level: isize = 0;\n    let mut paren_levels_stack_levels_levels_levels:\
    \ Vec<isize> = vec![];\n    let mut paren_levels_stack_levels_levels_levels_end:\
    \ isize = 0;\n    let mut paren_levels_stack_levels_levels_levels_start: isize\
    \ = 0;\n    let mut paren_levels_stack_levels_levels_levels_level: isize = 0;\n\
    \    let mut paren_levels_stack_levels_levels_levels_levels: Vec<isize> = vec![];\n\
    \    let mut paren_levels_stack_levels_levels_levels_levels_end: isize = 0;\n\
    \    let mut paren_levels_stack_levels_levels_levels_levels_start: isize = 0;\n\
    \    let mut paren_levels_stack_levels_levels_levels_levels_level: isize = 0;\n\
    \    let mut paren_levels_stack_levels_levels_levels_levels_levels: Vec<isize>\
    \ = vec![];\n    let mut paren_levels_stack_levels_levels_levels_levels_levels_end:\
    \ isize = 0;\n    let mut paren_levels_stack_levels_levels_levels_levels_levels_start:\
    \ isize = 0;\n    let mut paren_levels_stack_levels_levels_levels_levels_levels_level:\
    \ isize = 0;\n    let mut paren_levels_stack_levels_levels_levels_levels_levels_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_levels\
    \ = vec![];\n    let mut paren_level = 0;\n    let mut paren_levels_stack = vec![];\n\
    \    let mut paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_top =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_len\
    \ = paren", "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n\
    \    let mut paren_levels_stack = vec![];\n    let mut paren_levels_stack_len\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_index = 0;\n    let mut paren_level_indexes: Vec<isize> = Vec::new();\n\
    \    let mut paren_level_indexes_len = 0;\n    let mut paren_level_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes = 0;\n    let mut paren_level_indexes_len_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_index = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_indexe_indexe\
    \ = 0;\n    let mut paren_level_indexes_len_indexe_indexe = 0;\n    let mut paren_level_indexes_len_index",
  "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr;\n    let mut\
    \ paren_levels_", "    let mut paren_levels = vec![];\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_iter = paren_string.char_indices();\n    let\
    \ mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mu", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_level_count = 0;\n    let mut paren_level_string = paren_string;\n\
    \    let mut paren_level_chars = paren_string.chars();\n    let mut paren_level_chars_iter\
    \ = paren_level_chars.iter();\n    let mut paren_level_chars_next = paren_level_chars.next();\n\
    \    while paren_level_chars_next.is_some() {\n        paren_level_chars_next\
    \ = paren_level_chars.next();\n        if paren_level_chars_next.is_none() {\n\
    \            break;\n        }\n        let paren_level_char = paren_level_chars_next.unwrap();\n\
    \        if paren_level_char == ')' {\n            paren_level_count = paren_level_count;\n\
    \            paren_level_string = paren_level_string.trim_end(')');\n        \
    \    paren_level_string = paren_level_string.trim_start('(');\n            paren_levels.push(paren_level);\n\
    \            paren_level = 0;\n        } else {\n            paren_level += 1;\n\
    \        }\n    }\n    paren_levels.push(paren_level);\n    paren_levels", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n\
    \    let mut paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_ptr_end = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr =\
    \ paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n  \
    \  let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let\
    \ mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let mut\
    \ paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr =\
    \ paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n  \
    \  let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let\
    \ mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let mut\
    \ paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr\
    \ = paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr =\
    \ paren_levels_stack_ptr_end;\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n\
    \    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n  \
    \  let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr_end;\n    let\
    \ mut paren_levels_stack_ptr_end_", "    let mut paren_level = 0;\n    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_levels_stack = Vec::new();\n \
    \   let mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_level", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_char\
    \ = 0;\n    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len\
    \ = paren_level_char.len();\n    let mut paren_level_char_pos = 0;\n    let mut\
    \ paren_level_char_len = paren_level_char.len();\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n    let mut\
    \ paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_char.len();\n\
    \    let mut paren_level_char_pos = 0;", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = 0;\n    let mut paren_levels_ptr = paren_levels_stack.as_mut_ptr();\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_levels_ptr_end = paren_levels_ptr.offset(paren_levels_stack.len());\n\
    \    let mut paren_", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_level_count = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_count = 0;\n    let mut paren_levels_stack_ptr\
    \ = 0;\n    let mut paren_levels_stack_ptr_next = 0;\n    let mut paren_levels_stack_ptr_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next = 0;\n   \
    \ let mut paren_levels_stack_ptr_next_next_next_next_next_next = 0;\n    let mut\
    \ paren_levels_stack_ptr_next_next_next_next_next_next_next = 0;\n    let mut\
    \ paren_levels_stack_ptr_next_next_next_next_next_next_next_next = 0;\n    let\
    \ mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next = 0;\n  \
    \  let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_levels_stack_ptr_next_next_", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack_size;\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack_size;\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n   \
    \ let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_bottom =\
    \ paren_levels_stack_size;\n    let mut paren_levels_stack_pos = 0;\n    let mut\
    \ paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n   \
    \ let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_bottom =\
    \ paren_levels_stack_size;\n    let mut paren_levels_stack_pos = 0;\n    let mut\
    \ paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n   \
    \ let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_bottom =\
    \ paren_levels_stack_size;\n    let mut paren_levels_stack_pos = 0;\n    let mut\
    \ paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_bottom = paren_levels_stack_size;\n   \
    \ let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_bottom =\
    \ paren_levels_stack_size;\n    let mut paren_levels_stack_pos = 0;\n    let mut\
    \ paren_levels_stack_bottom = paren_levels_stack_size;\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_bottom = ", "    let mut paren_levels =\
    \ vec![];\n    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n\
    \    let mut paren_level_indexes: Vec<isize> = vec![];\n    let mut paren_level_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_indexes:\
    \ Vec<isize> = vec![];\n    let mut paren_level_indexes_len_indexes_len = 0;\n\
    \    let mut paren_level_indexes_len_indexes_len_index = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes:\
    \ Vec<isize> = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_index = 0;\n\
    \    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes: Vec<isize>\
    \ = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes: Vec<isize>\
    \ = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes: Vec<isize>\
    \ = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes: Vec<isize>\
    \ = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes: Vec<isize>\
    \ = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes: Vec<isize>\
    \ = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes: Vec<isize>\
    \ = vec![];\n    let mut paren_level_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len", "    let mut paren_levels = vec![];\n\
    \    let mut paren_level = 0;\n    let mut paren_level_count = 0;\n    for paren\
    \ in paren_string.chars() {\n        if paren == '(' {\n            paren_level\
    \ += 1;\n            paren_level_count += 1;\n        } else if paren == ')' {\n\
    \            paren_level -= 1;\n            paren_level_count += 1;\n        \
    \    if paren_level == 0 {\n                paren_levels.push(paren_level_count);\n\
    \            }\n        }\n    }\n    paren_levels", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nest", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_levels_iter = paren_string.char_indices().peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_char:\
    \ char = '(';\n    let mut paren_level_char_index = 0;\n    let mut paren_level_char_length\
    \ = 0;\n    let mut paren_level_char_length_index = 0;\n    let mut paren_level_char_length_value\
    \ = 0;\n    let mut paren_level_char_length_next = 0;\n    let mut paren_level_char_length_next_index\
    \ = 0;\n    let mut paren_level_char_length_next_value = 0;\n    let mut paren_level_char_length_next_next\
    \ = 0;\n    let mut paren_level_char_length_next_next_index = 0;\n    let mut\
    \ paren_level_char_length_next_next_value = 0;\n    let mut paren_level_char_length_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_next_next_index = 0;\n    let mut\
    \ paren_level_char_length_next_next_value = 0;\n    let mut paren_level_char_length_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_next_next_index = 0;\n    let mut\
    \ paren_level_char_length_next_next_value = 0;\n    let mut paren_level_char_length_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_next_next_index = 0;\n    let mut\
    \ paren_level_char_length_next_next_value = 0;\n    let mut paren_level_char_length_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_next_next_index = 0;\n    let mut\
    \ paren_level_char_length_next_next_value = 0;\n    let mut paren_level_char_length_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_next_next_index = 0;\n    let mut\
    \ paren_level_char_length_next_next_value = 0;\n    let mut paren_level_char_length_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_next_next_index = 0;\n    let mut\
    \ paren_level_char_length_next_next_value = 0;\n    let mut paren_level_char_length_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_next_next_index = 0;\n    let mut\
    \ paren_level_char_length_next_next_value = 0;\n    let mut paren_level_char_length_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_next_next_index = 0;\n    let mut\
    \ paren_level_char_length_next_next_value = 0;\n    let mut paren_level_char_length_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_next_next_index = 0;\n    let mut\
    \ paren_level_char_length_next_next_value = 0;\n    let mut paren", "    let mut\
    \ paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_char_pos\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let mut paren_level_char_pos_end = 0;\n    let mut paren_level_char_pos_start\
    \ = 0;\n    let ", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_iter = paren_string.char_indices();\n    let\
    \ mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.peekable();\n    let mut paren_levels_iter = paren_levels_iter.peekable();\n\
    \    let mut paren_levels_iter = paren_levels_iter.peekable();\n    let ", " \
    \   let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let\
    \ mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_curr = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_curr = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_curr = paren_levels_stack.len();\n\
    \    let ", "    let mut paren_levels = Vec::new();\n    let mut paren_level =\
    \ 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_level", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nest",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_chars = Vec::new();\n    let mut paren_level_char = 0;\n    let\
    \ mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_level_chars.len();\n\
    \    let mut paren_level_char_pos = 0;", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_cur\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut\
    \ paren_levels_stack_ptr = 0;\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_cur = paren_levels_stack.len();\n    let mut paren_levels_stack_max\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_cur = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max_max = paren_levels_stack.len();\n    let mut paren_levels_stack_max_max_ptr\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_max_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_max_max_max_ptr = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_max_max_max_cur = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_max_max_max_max = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_max_max_max_max_ptr = paren_levels_stack.len();\n   \
    \ let mut paren_levels_stack_max_max_max_max_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_max = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_max_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_max_cur = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_max_max = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_max_max_ptr = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut\
    \ paren_level_indexes: Vec<isize> = Vec::new();\n    let mut paren_level_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_index = 0;\n    let mut paren_level_indexes_len_indexes:\
    \ Vec<isize> = Vec::new();\n    let mut paren_level_indexes_len_indexes_len =\
    \ 0;\n    let mut paren_level_indexes_len_indexes_len_index = 0;\n    let mut\
    \ paren_level_indexes_len_indexes_len_indexes: Vec<isize> = Vec::new();\n    let\
    \ mut paren_level_indexes_len_indexes_len_indexes_len = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes: Vec<isize>\
    \ = Vec::new();\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes:\
    \ Vec<isize> = Vec::new();\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes:\
    \ Vec<isize> = Vec::new();\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_index\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes:\
    \ Vec<isize> = Vec::new();\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len\
    \ = 0;\n    let mut paren_level_indexes_len_indexes_len_indexes_len_indexes_len_indexes_len_indexes_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_level", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nest", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_level_count =\
    \ 0;\n    let mut paren_level_stack = Vec::new();\n    let mut paren_level_stack_len\
    \ = paren_level_stack.len();\n    let mut paren_level_stack_pos = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_stack_top = paren_level_stack_len;\n    let mut paren_level_stack_bottom\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_top = paren_level_stack_len;\n\
    \    let mut paren_level_stack_bottom = paren_level_stack_len;\n    let mut paren_level_stack_top\
    \ = paren_level_stack_len;\n    let mut paren_level_stack_bottom = paren_level_stack_len;\n\
    \    let mut paren_level_", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_char\
    \ = 0;\n    let mut paren_level_char_index = 0;\n    let mut paren_level_char_length\
    \ = 0;\n    let mut paren_level_char_length_index = 0;\n    let mut paren_level_char_length_value\
    \ = 0;\n    let mut paren_level_char_length_value_next = 0;\n    let mut paren_level_char_length_value_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next = 0;\n    let\
    \ mut paren_level_char_length_value_next_next_next_next = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next_next_next_next_next_next\
    \ = 0;\n    let mut paren_level_char_length_value_next_next_next_next_next_next_next_next_next_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_ptr = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end = paren_levels_stack_ptr;\n  \
    \  let mut paren_levels_stack_ptr_end_ptr_end_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr =\
    \ paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end_ptr_end\
    \ = paren_levels_stack", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_index = 0;\n    let mut paren_level_char:\
    \ char;\n    let mut paren_level_chars: Vec<char> = paren_string.chars().collect();\n\
    \    while paren_level_chars.len() > 0 {\n        paren_level_char = paren_level_chars.remove(0);\n\
    \        if paren_level_char == '(' {\n            paren_level += 1;\n       \
    \     paren_levels.push(paren_level);\n            paren_level_index += 1;\n \
    \       } else if paren_level_char == ')' {\n            paren_level -= 1;\n \
    \           if paren_level == 0 {\n                paren_level_index -= 1;\n \
    \           }\n        }\n    }\n    paren_levels", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n\
    \    let mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n\
    \    let mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nest", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_ptr = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_pos = 0;\n    let\
    \ mut paren_levels_stack_len = paren_levels_stack.len();\n    let mut paren_levels_stack_ptr\
    \ = paren_levels_stack_ptr;\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_pos = 0;\n    let mut paren_levels_stack_len =\
    \ paren_levels_stack.len();\n    let mut paren_levels_stack_ptr = paren_levels_stack_ptr;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_pos\
    \ = 0;\n    let mut paren_levels_stack_len = ", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nest",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_pos = 0;\n\
    \    let mut paren_levels_stack_size = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_max = paren_levels_stack_size;\n    let mut paren_levels_stack_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_pos = 0;\n    let mut paren_levels_stack_max_max_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_max_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_max_max_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_pos = 0;\n    let mut paren_levels_stack_max_max_max_max_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_max_max_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_max_max_max_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_pos = 0;\n    let mut paren_levels_stack_max_max_max_max_max_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_max_max_max_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_max_max_max_max_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_pos = 0;\n    let mut paren_levels_stack_max_max_max_max_max_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_max_max_max_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_max_max_max_max_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_pos = 0;\n    let mut paren_levels_stack_max_max_max_max_max_size\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_max_max_max_max_max_pos\
    \ = 0;\n    let mut paren_levels_stack_max_max_max_max_max_size = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_max_max_max_max_max_pos = 0;\n    let mut paren_levels_stack_max_max_max_max_max_size\
    \ = paren_levels_stack.len();", "    let mut paren_levels = Vec::new();\n    let\
    \ mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nest",
  "    let mut paren_levels = vec![];\n    let mut paren_level = 0;\n    let mut paren_level_count\
    \ = 0;\n    let mut paren_level_char_count = 0;\n    let mut paren_level_char\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut paren_level_chars = vec![];\n    let mut paren_level_char_index\
    \ = 0;\n    let mut ", "    let mut paren_levels = Vec::new();\n    let mut paren_level\
    \ = 0;\n    let mut paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_top\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_level",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_iter = paren_string.char_indices();\n    let mut paren_levels_end\
    \ = paren_levels_iter.end();\n    let mut paren_levels_iter = paren_levels_iter.clone();\n\
    \    let mut paren_levels_end = paren_levels_iter.end();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.clone();\n    let mut paren_levels_end = paren_levels_iter.end();\n\
    \    let mut paren_levels_iter = paren_levels_iter.clone();\n    let mut paren_levels_end\
    \ = paren_levels_iter.end();\n    let mut paren_levels_iter = paren_levels_iter.clone();\n\
    \    let mut paren_levels_end = paren_levels_iter.end();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.clone();\n    let mut paren_levels_end = paren_levels_iter.end();\n\
    \    let mut paren_levels_iter = paren_levels_iter.clone();\n    let mut paren_levels_end\
    \ = paren_levels_iter.end();\n    let mut paren_levels_iter = paren_levels_iter.clone();\n\
    \    let mut paren_levels_end = paren_levels_iter.end();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.clone();\n    let mut paren_levels_end = paren_levels_iter.end();\n\
    \    let mut paren_levels_iter = paren_levels_iter.clone();\n    let mut paren_levels_end\
    \ = paren_levels_iter.end();\n    let mut paren_levels_iter = paren_levels_iter.clone();\n\
    \    let mut paren_levels_end = paren_levels_iter.end();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.clone();\n    let mut paren_levels_end = paren_levels_iter.end();\n\
    \    let mut paren_levels_iter = paren_levels_iter.clone();\n    let mut paren_levels_end\
    \ = paren_levels_iter.end();\n    let mut paren_levels_iter = paren_levels_iter.clone();\n\
    \    let mut paren_levels_end = paren_levels_iter.end();\n    let mut paren_levels_iter\
    \ = paren_levels_iter.clone();\n    let mut paren_levels_end = paren_levels_iter.end();\n\
    \    let mut paren_levels_iter = paren_levels_iter.clone();\n    let mut paren_levels_end\
    \ = paren_levels_iter.end();\n    let mut paren_levels_iter = paren_levels_",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_ptr = 0;\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = 0;\n    let mut paren_levels_stack_len = paren_levels_stack.len();\n    let\
    \ mut paren_levels_stack_top = paren_levels_stack.len();\n", "    let mut paren_levels\
    \ = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_levels_stack\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr = &mut paren_levels_stack;\n\
    \    let mut paren_levels_ptr = &mut paren_levels;\n    let mut paren_level_ptr\
    \ = &mut paren_level;\n    let mut paren_levels_ptr = &mut paren_levels;\n   \
    \ let mut paren_level_ptr = &mut paren_level;\n    let mut paren_levels_ptr =\
    \ &mut paren_levels;\n    let mut paren_level_ptr = &mut paren_level;\n    let\
    \ mut paren_levels_ptr = &mut paren_levels;\n    let mut paren_level_ptr = &mut\
    \ paren_level;\n    let mut paren_levels_ptr = &mut paren_levels;\n    let mut\
    \ paren_level_ptr = &mut paren_level;\n    let mut paren_levels_ptr = &mut paren_levels;\n\
    \    let mut paren_level_ptr = &mut paren_level;\n    let mut paren_levels_ptr\
    \ = &mut paren_levels;\n    let mut paren_level_ptr = &mut paren_level;\n    let\
    \ mut paren_levels_ptr = &mut paren_levels;\n    let mut paren_level_ptr = &mut\
    \ paren_level;\n    let mut paren_levels_ptr = &mut paren_levels;\n    let mut\
    \ paren_level_ptr = &mut paren_level;\n    let mut paren_levels_ptr = &mut paren_levels;\n\
    \    let mut paren_level_ptr = &mut paren_level;\n    let mut paren_levels_ptr\
    \ = &mut paren_levels;\n    let mut paren_level_ptr = &mut paren_level;\n    let\
    \ mut paren_levels_ptr = &mut paren_levels;\n    let mut paren_level_ptr = &mut\
    \ paren_level;\n    let mut paren_levels_ptr = &mut paren_levels;\n    let mut\
    \ paren_level_ptr = &mut paren_level;\n    let mut paren_levels_ptr = &mut paren_levels;\n\
    \    let mut paren_level_ptr = &mut paren", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_levels_stack = Vec::new();\n\
    \    let mut paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_levels_stack_bottom = paren_levels_stack.len();\n    let mut\
    \ paren_levels_stack_top = paren_levels_stack.len();\n    let mut paren_levels_stack_bottom\
    \ = paren_levels_stack.len();\n    let mut paren_levels_stack_top = paren_levels_stack.len();\n\
    \    let mut paren_level", "    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_level = 0;\n    let mut paren_level_count = 0;\n    let mut paren_level_char_count\
    \ = 0;\n    let mut paren_level_chars = Vec::new();\n    let mut paren_level_chars_count\
    \ = 0;\n    let mut paren_level_chars_index = Vec::new();\n    let mut paren_level_chars_index\
    \ = 0;\n    let mut paren_level_chars_index_count = 0;\n    let mut paren_level_chars_index_char_count\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = 0;\n    let mut paren_level_chars_index_char_pos = 0;\n    let mut paren_level_chars_index_char_pos\
    \ = ", "    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let\
    \ mut paren_nesting_level = 0;\n    let mut paren_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n\
    \    let mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_", "    let mut paren_levels = Vec::new();\n\
    \    let mut paren_level = 0;\n    let mut paren_nesting = 0;\n    let mut paren_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting = 0;\n    let mut paren_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let mut paren_nesting_nesting_nesting_nesting_nesting\
    \ = 0;\n    let mut paren_nesting_nesting_nesting_nesting_level = 0;\n    let\
    \ mut paren_nesting_nesting_nesting_nesting_nesting = 0;\n    let mut paren_nesting_nesting_nesting_nest",
  "    let mut paren_level = 0;\n    let mut paren_levels = Vec::new();\n    let mut\
    \ paren_levels_stack = Vec::new();\n    let mut paren_levels_stack_size = Vec::new();\n\
    \    let mut paren_levels_stack_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n  \
    \  let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr = Vec::new();\n\
    \    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr =\
    \ Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr_ptr\
    \ = Vec::new();\n    let mut paren_levels_stack_ptr_ptr_ptr_ptr_ptr_ptr_ptr",
  "    let mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut\
    \ paren_level_count = 0;\n    let mut paren_level_char_count = 0;\n    let mut\
    \ paren_level_chars = Vec::new();\n    let mut paren_level_char = 0;\n    let\
    \ mut paren_level_char_pos = 0;\n    let mut paren_level_char_len = paren_string.len();\n\
    \    let mut paren_level_char_end = paren_level_char_len;\n    let mut paren_level_char_end_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_end_len = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char = paren_level_char_len;\n    let mut paren_level_char_end_char_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_end_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char = paren_level_char_len;\n    let mut\
    \ paren_level_char_end_char_pos = paren_level_char_len;\n    let mut paren_level_char_end_char_len\
    \ = paren_level_char_len;\n    let mut paren_level_char_end_char_char = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_pos = paren_level_char_len;\n    let mut\
    \ paren_level_char_end_char_len = paren_level_char_len;\n    let mut paren_level_char_end_char_char\
    \ = paren_level_char_len;\n    let mut paren_level_char_end_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_len = paren_level_char_len;\n    let mut\
    \ paren_level_char_end_char_char = paren_level_char_len;\n    let mut paren_level_char_end_char_pos\
    \ = paren_level_char_len;\n    let mut paren_level_char_end_char_len = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_char = paren_level_char_len;\n    let mut\
    \ paren_level_char_end_char_pos = paren_level_char_len;\n    let mut paren_level_char_end_char_len\
    \ = paren_level_char_len;\n    let mut paren_level_char_end_char_char = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_pos = paren_level_char_len;\n    let mut\
    \ paren_level_char_end_char_len = paren_level_char_len;\n    let mut paren_level_char_end_char_char\
    \ = paren_level_char_len;\n    let mut paren_level_char_end_char_pos = paren_level_char_len;\n\
    \    let mut paren_level_char_end_char_len = paren_level_char_len;\n", "    let\
    \ mut paren_levels = Vec::new();\n    let mut paren_level = 0;\n    let mut paren_nesting\
    \ = 0;\n    for paren in paren_string.chars() {\n        if paren == '(' {\n \
    \           paren_level += 1;\n            paren_nesting += 1;\n        } else\
    \ if paren == ')' {\n            paren_level -= 1;\n            paren_nesting\
    \ -= 1;\n            if paren_nesting == 0 {\n                paren_levels.push(paren_level);\n\
    \            }\n        }\n    }\n    paren_levels"]
stop_tokens:
- "\n}"

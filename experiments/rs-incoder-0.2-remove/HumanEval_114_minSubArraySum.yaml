name: HumanEval_114_minSubArraySum
language: rs
prompt: "/// Given an array of integers nums, find the minimum sum of any non-empty\
  \ sub-array\n/// of nums.\n/// Example\nfn minSubArraySum(nums: Vec<isize>) -> isize\
  \ {\n"
tests: "}\n\nfn main() {\n    let candidate = minSubArraySum;\n    assert_eq!(candidate(vec![2,\
  \ 3, 4, 1, 2, 4]), 1);\n    assert_eq!(candidate(vec![-1, -2, -3]), -6);\n    assert_eq!(candidate(vec![-1,\
  \ -2, -3, 2, -10]), -14);\n    assert_eq!(candidate(vec![-9999999999999999]), -9999999999999999);\n\
  \    assert_eq!(candidate(vec![0, 10, 20, 1000000]), 0);\n    assert_eq!(candidate(vec![-1,\
  \ -2, -3, 10, -5]), -6);\n    assert_eq!(candidate(vec![100, -1, -2, -3, 10, -5]),\
  \ -6);\n    assert_eq!(candidate(vec![10, 11, 13, 8, 3, 4]), 3);\n    assert_eq!(candidate(vec![100,\
  \ -33, 32, -1, 0, -2]), -33);\n    assert_eq!(candidate(vec![-10]), -10);\n    assert_eq!(candidate(vec![7]),\
  \ 7);\n    assert_eq!(candidate(vec![1, -1]), -1);\n}\n"
completions: ["    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n\
    \    for num in nums.iter().skip(1) {\n        min_sum = min_sum - num;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for &n in nums.iter().rev() {\n        min_sum = min_sum - n;\n    }\n  \
    \  min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n     \
    \   min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum =\
    \ 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for &n in nums.iter() {\n        min_sum = min_sum - n;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n      \
    \  min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for &n in nums.iter().skip(1) {\n\
    \        min_sum = min_sum - n;\n    }\n    min_sum", "    let mut min_sum = isize::MAX;\n\
    \    for num in nums.iter() {\n        min_sum = min(min_sum, num + min_sum);\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum\
    \ + num);\n    for num in nums.iter() {\n        min_sum = min_sum - num;\n  \
    \      if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter().skip(1) {\n        min_sum = min_sum.min(|a, b| a + b - i);\n  \
    \  }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, i| sum +\
    \ i);\n    for &i in nums.iter().skip(1) {\n        min_sum = min_sum - i;\n \
    \   }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in\
    \ nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n        min_sum\
    \ = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n        if min_sum < 0 {\n            break;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = nums.iter().sum();\n    for &n in nums.iter().rev()\
    \ {\n        min_sum = min_sum - n;\n    }\n    min_sum", "    let mut min = nums.iter().min().unwrap();\n\
    \    for num in nums.iter() {\n        if num < min {\n            min = num;\n\
    \        }\n    }\n    min", "    let mut min_sum = nums.iter().sum();\n    for\
    \ num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = isize::MAX;\n    for i in 0..nums.len() {\n        let mut\
    \ min_sub_sum = isize::MAX;\n        for j in 0..i {\n            min_sub_sum\
    \ += nums[j];\n        }\n        if min_sub_sum < min_sum {\n            min_sum\
    \ = min_sub_sum;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n    for num in\
    \ nums.iter() {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n\
    \            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |sum, i| sum + i);\n    for &i in nums.iter().rev() {\n\
    \        min_sum = min_sum - i;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter().skip(1) {\n        min_sum\
    \ = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = isize::MAX;\n\
    \    for num in nums {\n        min_sum = min(min_sum, num + minSubArraySum(nums));\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum\
    \ + num);\n    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n\
    \        if min_sum < 0 {\n            break;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n    for num in nums.iter()\
    \ {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    let mut min_sub_array = vec![];\n    for num in nums {\n        if min_sum\
    \ > num {\n            min_sum = num;\n            min_sub_array = [num];\n  \
    \      } else {\n            min_sub_array.push(num);\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    let mut min_sub_arr = nums.iter().cloned().skip(1).take(nums.len()\
    \ - 1).collect::<Vec<_>>();\n    min_sub_arr.sort_unstable();\n    min_sub_arr.iter().for_each(|&x|\
    \ {\n        min_sum = min_sum - x;\n    });\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |sum, num| sum + num);\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - num + num;\n    }\n    min_sum", "    let mut\
    \ min_sum = nums.iter().fold(0, |sum, num| sum + num);\n    let mut min_sub_arr\
    \ = vec![];\n    for num in nums.iter() {\n        if min_sum > num {\n      \
    \      min_sum = num;\n            min_sub_arr.clear();\n        }\n        if\
    \ min_sum == num {\n            min_sub_arr.push(num);\n        }\n    }\n   \
    \ min_sub_arr.iter().fold(0, |sum, num| sum + num)", "    let mut min_sum = isize::MAX;\n\
    \    for i in 0..nums.len() {\n        let mut min_sub_sum = 0;\n        for j\
    \ in 0..i {\n            min_sub_sum += nums[j];\n        }\n        if min_sub_sum\
    \ < min_sum {\n            min_sum = min_sub_sum;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n      \
    \  min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for num in\
    \ nums.iter().skip(1) {\n        min_sum = min_sum - num + nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = isize::MAX;\n    for num in nums.iter() {\n        min_sum\
    \ = min(min_sum, num + minSubArraySum(vec![num] + nums));\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n      \
    \  min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().min().unwrap();\n    for num in nums.iter() {\n\
    \        min_sum = min_sum + num;\n    }\n    min_sum", "    let mut min_sum =\
    \ nums.iter().sum();\n    for &n in nums.iter().rev() {\n        min_sum = min_sum\
    \ - n;\n    }\n    min_sum", "    let mut min = nums.iter().min().unwrap();\n\
    \    for num in nums.iter().skip(1) {\n        let sum = num + min;\n        min\
    \ = sum;\n    }\n    min", "    let mut min_sum = nums.iter().sum();\n    for\
    \ &n in nums.iter().rev() {\n        min_sum = min_sum - n;\n    }\n    min_sum",
  "    let mut min_sum = isize::MAX;\n    for n in nums.iter() {\n        min_sum\
    \ = min(min_sum, n);\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n        if min_sum < 0 {\n            break;\n        }\n    }\n   \
    \ min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n    for num in\
    \ nums.iter().skip(1) {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = isize::MAX;\n    for i in 0..nums.len() {\n        let mut\
    \ min_sum = isize::MAX;\n        for j in 0..i {\n            min_sum = min(min_sum,\
    \ nums[j] + nums[i]);\n        }\n        min_sum = min(min_sum, nums[i]);\n \
    \   }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in\
    \ nums.iter().rev() {\n        min_sum = min_sum - num;\n        if min_sum <\
    \ 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = isize::MAX;\n    let mut min_sub_array: Vec<isize> = Vec::new();\n\
    \    for num in nums.iter() {\n        if min_sum > num {\n            min_sum\
    \ = num;\n            min_sub_array.clear();\n        }\n        if min_sum ==\
    \ num {\n            min_sub_array.push(num);\n        }\n    }\n    min_sub_array.iter().fold(min_sum,\
    \ |a, b| a + b)", "    let mut min_sum = nums.iter().fold(0, |sum, i| sum + i);\n\
    \    for &i in nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |sum, i| sum + i);\n    for &i in nums.iter()\
    \ {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |sum, i| sum + i);\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum.min(num + min_sum);\n    }\n    min_sum", "   \
    \ let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n \
    \       min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n        if min_sum\
    \ < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = nums.iter().sum();\n    for &n in nums.iter().rev() {\n        min_sum\
    \ = min_sum - n;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, i| sum + i);\n    for &i in nums.iter().skip(1) {\n        min_sum = min_sum\
    \ - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum,\
    \ i| sum + i);\n    for &i in nums.iter().skip(1) {\n        min_sum = min_sum\
    \ - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum,\
    \ i| sum + i);\n    for &i in nums.iter().skip(1) {\n        min_sum = min_sum\
    \ - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum,\
    \ i| sum + i);\n    for num in nums.iter().skip(1) {\n        min_sum = min_sum\
    \ - num + nums.iter().sum();\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter().skip(1) {\n        min_sum\
    \ = min_sum - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for &n in nums.iter().rev() {\n        min_sum = min_sum - n;\n    }\n  \
    \  min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n\
    \    for num in nums.iter().skip(1) {\n        min_sum = min_sum - num;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n      \
    \  min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter().skip(1) {\n        min_sum\
    \ = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().min().unwrap();\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum + num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut\
    \ sum, i| sum + i);\n    for num in nums.iter().skip(1) {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum,\
    \ num| sum + num);\n    for num in nums.iter() {\n        min_sum = min_sum -\
    \ num;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().min().unwrap();\n    for &n\
    \ in nums.iter().skip(1) {\n        min_sum = min_sum + n;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter() {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n     \
    \   min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum =\
    \ 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n\
    \    let mut min_sub_array = Vec::new();\n    for num in nums {\n        if min_sum\
    \ > num {\n            min_sum = num;\n            min_sub_array.clear();\n  \
    \      }\n        if min_sum == num {\n            min_sub_array.push(num);\n\
    \        }\n    }\n    min_sub_array.iter().fold(0, |sum, num| sum + num)", " \
    \   let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n    for num\
    \ in nums.iter() {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n\
    \            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n        if min_sum < 0 {\n            min_sum = 0;\n       \
    \ }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum,\
    \ i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum - i;\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().min().unwrap();\n   \
    \ for num in nums.iter().skip(1) {\n        min_sum = min_sum + num;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter()\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |sum, i| sum + i);\n    for &i in nums.iter().rev() {\n\
    \        min_sum = min_sum - i;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    let mut min_sub_array = Vec::new();\n    for num in nums {\n        if min_sum\
    \ > num {\n            min_sum = num;\n        }\n        if min_sum > 0 {\n \
    \           min_sub_array.push(num);\n        }\n    }\n    min_sub_array.iter().sum().unwrap()",
  "    let mut min_sum = nums.iter().sum();\n    for &n in nums.iter() {\n       \
    \ min_sum = min_sum - n;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter().skip(1) {\n        min_sum\
    \ = min_sum - i;\n    }\n    min_sum", "    let mut min_sum = isize::MAX;\n  \
    \  for num in nums.iter() {\n        min_sum = min(min_sum, num + minSubArraySum(nums.iter().skip(1).take(1).collect()));\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum\
    \ + num);\n    for num in nums.iter().skip(1) {\n        min_sum = min_sum - num;\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum, i|\
    \ sum + i);\n    for &i in nums.iter().skip(1) {\n        min_sum = min_sum -\
    \ i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().min().unwrap();\n\
    \    for &n in nums.iter().skip(1) {\n        min_sum = min_sum + n;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n        if min_sum < 0 {\n            min_sum = 0;\n       \
    \ }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num\
    \ in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum", " \
    \   let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for &n in nums.iter() {\n       \
    \ min_sum = min_sum - n;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum.min(|a,\
    \ b| a + b - i);\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n      \
    \  min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n\
    \    min_sum", "    let mut min = isize::MAX;\n    for i in nums.iter() {\n  \
    \      if i < min {\n            min = i;\n        }\n    }\n    min", "    let\
    \ mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n     \
    \   min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum =\
    \ 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum =\
    \ nums.iter().fold(0, |sum, num| sum + num);\n    for num in nums.iter() {\n \
    \       min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum\
    \ - i;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n\
    \    for num in nums.iter().skip(1) {\n        min_sum = min_sum - num;\n    }\n\
    \    min_sum", "    let mut min_sum = isize::MAX;\n    for i in 0..nums.len()\
    \ {\n        let mut curr_sum = nums[i];\n        for j in (i + 1)..nums.len()\
    \ {\n            curr_sum += nums[j];\n            if curr_sum < min_sum {\n \
    \               min_sum = curr_sum;\n            }\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n    for num in\
    \ nums.iter() {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n\
    \            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n\
    \    for num in nums.iter().skip(1) {\n        min_sum = min_sum - num;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n\
    \    for num in nums.iter().skip(1) {\n        min_sum = min_sum - num + nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, i| sum + i);\n    for num in nums.iter().skip(1) {\n        min_sum =\
    \ min_sum - num;\n    }\n    min_sum", "    let mut min_sum = isize::MAX;\n  \
    \  let mut min_sub_array: Vec<isize> = Vec::new();\n    for n in nums.iter() {\n\
    \        if min_sum > n {\n            min_sum = n;\n            min_sub_array.clear();\n\
    \        }\n        if min_sum == n {\n            min_sub_array.push(n);\n  \
    \      }\n    }\n    min_sub_array.iter().fold(min_sum, |a, b| a + b)", "    let\
    \ mut min_sum = nums.iter().min().unwrap();\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum + num;\n    }\n    min_sum", "    let mut min_sum\
    \ = isize::MAX;\n    for i in 0..nums.len() {\n        let mut min_so_far = isize::MAX;\n\
    \        for j in 0..i {\n            min_so_far = min_so_far + nums[j];\n   \
    \     }\n        min_sum = min_so_far if min_so_far < min_sum else min_sum;\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num| sum\
    \ + num);\n    for num in nums.iter().skip(1) {\n        min_sum = min_sum - num;\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |mut sum, i|\
    \ sum + i);\n    let mut sub_arrays = Vec::new();\n    for num in nums.iter()\
    \ {\n        if num > min_sum {\n            sub_arrays.push(num - min_sum);\n\
    \            min_sum = num;\n        }\n    }\n    min_sum + sub_arrays.iter().fold(0,\
    \ |mut sum, i| sum + i).unwrap()", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n    for num in\
    \ nums.iter() {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n\
    \            break;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum\
    \ - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum,\
    \ i| sum + i);\n    for &i in nums.iter().skip(1) {\n        min_sum = min_sum\
    \ - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().min().unwrap();\n\
    \    for &n in nums.iter().skip(1) {\n        min_sum = min_sum + n;\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    let mut sub_nums\
    \ = nums.iter().filter(|&i| i != 0).collect::<Vec<_>>();\n    while sub_nums.len()\
    \ > 0 {\n        let mut sub_sum = sub_nums.iter().fold(0, |mut sum, i| sum +\
    \ i);\n        if sub_sum < min_sum {\n            min_sum = sub_sum;\n      \
    \  }\n        sub_nums = sub_nums.iter().filter(|&i| i != 0).collect::<Vec<_>>();\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in\
    \ nums.iter() {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n\
    \            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = isize::MAX;\n    for num in nums.iter() {\n        min_sum = min(min_sum,\
    \ num + minSubArraySum(nums.iter().skip(1).take(num).collect()));\n    }\n   \
    \ min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in\
    \ nums.iter().skip(1) {\n        min_sum = min_sum - i;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n      \
    \  min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n        if min_sum\
    \ < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = nums.iter().fold(0, |mut sum, i| sum + i);\n    for &i in nums.iter()\
    \ {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().fold(0, |sum, num| sum + num);\n    for num in nums.iter() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter().skip(1) {\n        min_sum\
    \ = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for &n in nums.iter().rev() {\n \
    \       min_sum = min_sum - n;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min = nums.iter().min().unwrap();\n    for n in nums.iter().skip(1)\
    \ {\n        min = min + n;\n    }\n    min", "    let mut min_sum = nums.iter().min().unwrap();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum + num;\n    }\n\
    \    min_sum", "    let mut min = nums.iter().sum();\n    for &n in nums.iter()\
    \ {\n        min = min.min(&n);\n    }\n    min", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n\
    \    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev()\
    \ {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |sum, i| sum + i);\n    for &i in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum - i;\n    }\n    min_sum", "    let mut min_sum\
    \ = isize::MAX;\n    for num in nums.iter() {\n        min_sum = min(min_sum,\
    \ num + min_sum);\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().min().unwrap();\n    for num in nums.iter().skip(1)\
    \ {\n        min_sum = min_sum + num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().min().unwrap();\n    for num in nums.iter() {\n        min_sum\
    \ = min_sum + num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter().skip(1) {\n        min_sum\
    \ = min_sum - num + nums.iter().fold(0, |sum, num| sum + num);\n    }\n    min_sum",
  "    let mut min_sum = isize::MAX;\n    for num in nums.iter() {\n        min_sum\
    \ = min(min_sum, num + min_sum);\n    }\n    min_sum", "    let mut min_sum =\
    \ isize::MAX;\n    for num in nums.iter() {\n        min_sum = min_sum.min(num);\n\
    \    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num in\
    \ nums.iter() {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let\
    \ mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n        min_sum\
    \ = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter().skip(1) {\n        min_sum\
    \ = min_sum - num;\n        if min_sum < 0 {\n            min_sum = 0;\n     \
    \   }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for\
    \ num in nums.iter().rev() {\n        min_sum = min_sum - num;\n        if min_sum\
    \ < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum\
    \ = min_sum - num;\n        if min_sum < 0 {\n            min_sum = 0;\n     \
    \   }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for\
    \ &n in nums.iter().rev() {\n        min_sum = min_sum - n;\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for &n in nums.iter() {\n       \
    \ min_sum = min_sum - n;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |sum, num| sum + num);\n    for num in nums.iter().skip(1) {\n        min_sum\
    \ = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |sum, i| sum + i);\n    for num in nums.iter()\
    \ {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min = nums.iter().min().unwrap();\n\
    \    for n in nums.iter().skip(1) {\n        min = min + n;\n    }\n    min",
  "    let mut min_sum = nums.iter().sum();\n    for &n in nums.iter().rev() {\n \
    \       min_sum = min_sum - n;\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for num in nums.iter() {\n        min_sum = min_sum\
    \ - num;\n        if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n\
    \    min_sum", "    let mut min = nums.iter().min().unwrap();\n    for i in nums.iter().rev()\
    \ {\n        if i < min {\n            min = i;\n        }\n    }\n    min", " \
    \   let mut min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n\
    \        min_sum = min_sum - num;\n        if min_sum < 0 {\n            min_sum\
    \ = 0;\n        }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0,\
    \ |mut sum, i| sum + i);\n    for &i in nums.iter() {\n        min_sum = min_sum\
    \ - i;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for\
    \ num in nums.iter().rev() {\n        min_sum = min_sum - num;\n        if min_sum\
    \ < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = nums.iter().fold(0, |sum, num| sum + num);\n    for num in nums.iter()\
    \ {\n        min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n        if min_sum < 0 {\n            min_sum = 0;\n       \
    \ }\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n    for num\
    \ in nums.iter().rev() {\n        min_sum = min_sum - num;\n        if min_sum\
    \ < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut\
    \ min_sum = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum\
    \ = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n      \
    \  min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().sum();\n    for num in nums.iter() {\n      \
    \  min_sum = min_sum - num;\n    }\n    min_sum", "    let mut min_sum = nums.iter().sum();\n\
    \    for num in nums.iter().rev() {\n        min_sum = min_sum - num;\n      \
    \  if min_sum < 0 {\n            min_sum = 0;\n        }\n    }\n    min_sum",
  "    let mut min_sum = nums.iter().fold(0, |sum, num| sum + num);\n    for num in\
    \ nums.iter() {\n        min_sum = min_sum - num;\n        if min_sum < 0 {\n\
    \            min_sum = 0;\n        }\n    }\n    min_sum", "    let mut min_sum\
    \ = nums.iter().sum();\n    for num in nums.iter().rev() {\n        min_sum =\
    \ min_sum - num;\n        if min_sum < 0 {\n            min_sum = 0;\n       \
    \ }\n    }\n    min_sum", "    let mut min_sum = nums.iter().fold(0, |sum, num|\
    \ sum + num);\n    for num in nums.iter().skip(1) {\n        min_sum = min_sum\
    \ - num;\n    }\n    min_sum"]
stop_tokens:
- "\n}"

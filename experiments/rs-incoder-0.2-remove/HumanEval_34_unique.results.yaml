language: rs
name: HumanEval_34_unique
results:
- exit_code: 1
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpkbu3pcz0.rs:3:20\n  |\n3 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 1
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: HashSet<isize> = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmp5b951glw.rs:3:19\n\
    \  |\n3 |     let mut seen: HashSet<isize> = HashSet::new();\n  |            \
    \       ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmp5b951glw.rs:3:36\n  |\n3 |  \
    \   let mut seen: HashSet<isize> = HashSet::new();\n  |                      \
    \              ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to 2 previous errors\n\nSome errors have detailed explanations: E0412, E0433.\n\
    For more information about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 101
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp_nymailo.rs:8:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 101
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for elt in l {\n    \
    \    if !result.contains(&elt) {\n            result.push(elt);\n        }\n \
    \   }\n    result\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmprxl98k9s.rs:14:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 1
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![];\n    let mut seen = HashSet::new();\n\
    \    for x in l {\n        if !seen.insert(x).is_inserted() {\n            result.push(x);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpnxn2wn9p.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 101
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![];\n    for i in l {\n        if\
    \ !result.contains(&i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpiz9_kt1t.rs:14:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 101
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![];\n    for i in l {\n        if\
    \ !result.contains(&i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpiz9_kt1t.rs:14:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 101
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![];\n    for i in l {\n        if\
    \ !result.contains(&i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpiz9_kt1t.rs:14:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 1
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![];\n    let mut seen = HashSet::new();\n\
    \    for elt in l {\n        if !seen.insert(elt).unwrap() {\n            result.push(elt);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpe095z_lj.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut v = l.iter().cloned().collect::<Vec<_>>();\n  \
    \  v.sort();\n    v.dedup();\n    v\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749260
- exit_code: 101
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    l.iter().cloned().collect()\n}\n\nfn main() {\n    let\
    \ candidate = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]),\
    \ vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 5, 2, 3, 3, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmp_nymailo.rs:8:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 101
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![];\n    for i in l {\n        if\
    \ !result.contains(&i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpiz9_kt1t.rs:14:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 101
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = Vec::new();\n    for i in l {\n      \
    \  if !result.contains(&i) {\n            result.push(i);\n        }\n    }\n\
    \    result\n}\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpykts1m1q.rs:14:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 101
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![];\n    for i in l {\n        if\
    \ !result.contains(&i) {\n            result.push(i);\n        }\n    }\n    result\n\
    }\n\nfn main() {\n    let candidate = unique;\n    assert_eq!(candidate(vec![5,\
    \ 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5, 9, 123]);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `[5, 3, 2, 9, 0, 123]`,\n right: `[0, 2, 3, 5, 9, 123]`', /tmp/tmpiz9_kt1t.rs:14:5\n\
    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 1
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut result = vec![];\n    let mut seen = HashSet::new();\n\
    \    for elt in l {\n        if !seen.insert(elt).unwrap() {\n            result.push(elt);\n\
    \        }\n    }\n    result\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpe095z_lj.rs:4:20\n  |\n4 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 1
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpkbu3pcz0.rs:3:20\n  |\n3 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 1
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpkbu3pcz0.rs:3:20\n  |\n3 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 1
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen: HashSet<_> = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0412]: cannot find type `HashSet` in this scope\n --> /tmp/tmpy1e9459c.rs:3:19\n\
    \  |\n3 |     let mut seen: HashSet<_> = HashSet::new();\n  |                \
    \   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror[E0433]: failed to resolve:\
    \ use of undeclared type `HashSet`\n --> /tmp/tmpy1e9459c.rs:3:32\n  |\n3 |  \
    \   let mut seen: HashSet<_> = HashSet::new();\n  |                          \
    \      ^^^^^^^ not found in this scope\n  |\nhelp: consider importing this struct\n\
    \  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting due to 2 previous\
    \ errors\n\nSome errors have detailed explanations: E0412, E0433.\nFor more information\
    \ about an error, try `rustc --explain E0412`.\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 1
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut seen = HashSet::new();\n    l.iter().cloned().filter(|&x|\
    \ !seen.insert(x).unwrap()).collect()\n}\n\nfn main() {\n    let candidate = unique;\n\
    \    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0, 2, 3, 5,\
    \ 9, 123]);\n}\n"
  status: SyntaxError
  stderr: "error[E0433]: failed to resolve: use of undeclared type `HashSet`\n -->\
    \ /tmp/tmpkbu3pcz0.rs:3:20\n  |\n3 |     let mut seen = HashSet::new();\n  | \
    \                   ^^^^^^^ not found in this scope\n  |\nhelp: consider importing\
    \ this struct\n  |\n1 | use std::collections::HashSet;\n  |\n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0433`.\n"
  stdout: ''
  timestamp: 1659749260
- exit_code: 0
  program: "/// Return sorted unique elements in a list\nfn unique(l: Vec<isize>)\
    \ -> Vec<isize> {\n    let mut l = l.iter().cloned().collect::<Vec<_>>();\n  \
    \  l.sort_unstable();\n    l.dedup();\n    l\n}\n\nfn main() {\n    let candidate\
    \ = unique;\n    assert_eq!(candidate(vec![5, 3, 5, 2, 3, 3, 9, 0, 123]), vec![0,\
    \ 2, 3, 5, 9, 123]);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659749260

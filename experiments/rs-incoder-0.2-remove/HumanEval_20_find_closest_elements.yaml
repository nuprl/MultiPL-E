name: HumanEval_20_find_closest_elements
language: rs
prompt: "/// From a supplied list of numbers (of length at least two) select and return\
  \ two that are the closest to each\n/// other and return them in order (smaller\
  \ number, larger number).\nfn find_closest_elements(numbers: Vec<f64>) -> (f64,\
  \ f64) {\n"
tests: "}\n\nfn main() {\n    let candidate = find_closest_elements;\n    assert_eq!(candidate(vec![1.0,\
  \ 2.0, 3.9, 4.0, 5.0, 2.2]), (3.9, 4.0));\n    assert_eq!(candidate(vec![1.0, 2.0,\
  \ 5.9, 4.0, 5.0]), (5.0, 5.9));\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0,\
  \ 5.0, 2.2]), (2.0, 2.2));\n    assert_eq!(candidate(vec![1.0, 2.0, 3.0, 4.0, 5.0,\
  \ 2.0]), (2.0, 2.0));\n    assert_eq!(candidate(vec![1.1, 2.2, 3.1, 4.1, 5.1]),\
  \ (2.2, 3.1));\n}\n"
completions: ["    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n\
    \    for n in numbers {\n        if n < smallest {\n            smallest = n;\n\
    \        }\n        if n > largest {\n            largest = n;\n        }\n  \
    \  }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut\
    \ largest = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n\
    \            smallest = n;\n        }\n        if n > largest {\n            largest\
    \ = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n    for &n in numbers\
    \ {\n        if n < smallest_number {\n            smallest_number = n;\n    \
    \    }\n        if n > largest_number {\n            largest_number = n;\n   \
    \     }\n    }\n    (smallest_number, largest_number)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n    for &n in numbers\
    \ {\n        if n < smallest_number {\n            smallest_number = n;\n    \
    \    }\n        if n > largest_number {\n            largest_number = n;\n   \
    \     }\n    }\n    (smallest_number, largest_number)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n \
    \       if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n \
    \       if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for i in 1..numbers.len() {\n        if numbers[i] < smallest\
    \ {\n            smallest = numbers[i];\n        }\n        if numbers[i] > largest\
    \ {\n            largest = numbers[i];\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n    for &n in numbers\
    \ {\n        if n < smallest_number {\n            smallest_number = n;\n    \
    \    }\n        if n > largest_number {\n            largest_number = n;\n   \
    \     }\n    }\n    (smallest_number, largest_number)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n \
    \       if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n\n    for &n in numbers\
    \ {\n        if n < smallest_number {\n            smallest_number = n;\n    \
    \    }\n\n        if n > largest_number {\n            largest_number = n;\n \
    \       }\n    }\n\n    (smallest_number, largest_number)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n \
    \       if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ i in 1..numbers.len() {\n        if numbers[i] < smallest {\n            smallest\
    \ = numbers[i];\n        }\n        if numbers[i] > largest {\n            largest\
    \ = numbers[i];\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest_number = numbers[0];\n    let\
    \ mut largest_number = numbers[0];\n    for number in numbers {\n        if number\
    \ < smallest_number {\n            smallest_number = number;\n        }\n    \
    \    if number > largest_number {\n            largest_number = number;\n    \
    \    }\n    }\n    (smallest_number, largest_number)", "    let mut smallest =\
    \ numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n   \
    \     if n < smallest {\n            smallest = n;\n        }\n        if n >\
    \ largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ i in 1..numbers.len() {\n        if numbers[i] < smallest {\n            smallest\
    \ = numbers[i];\n        }\n        if numbers[i] > largest {\n            largest\
    \ = numbers[i];\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n    for n in numbers\
    \ {\n        if n < smallest_number {\n            smallest_number = n;\n    \
    \    }\n        if n > largest_number {\n            largest_number = n;\n   \
    \     }\n    }\n    (smallest_number, largest_number)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest_distance = std::f64::MAX;\n    let mut second_smallest_distance\
    \ = std::f64::MAX;\n    let mut smallest_number = std::f64::MAX;\n    let mut\
    \ second_smallest_number = std::f64::MAX;\n    for number in numbers {\n     \
    \   let distance = number.abs() - smallest_number;\n        if distance < smallest_distance\
    \ {\n            smallest_distance = distance;\n            smallest_number =\
    \ number;\n        }\n        if distance < second_smallest_distance {\n     \
    \       second_smallest_distance = distance;\n            second_smallest_number\
    \ = number;\n        }\n    }\n    (smallest_number, second_smallest_number)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest_number = numbers[0];\n    let\
    \ mut largest_number = numbers[0];\n\n    for number in numbers.iter().rev() {\n\
    \        if number < smallest_number {\n            smallest_number = number;\n\
    \        }\n        if number > largest_number {\n            largest_number =\
    \ number;\n        }\n    }\n\n    (smallest_number, largest_number)", "    let\
    \ mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for &n in\
    \ numbers {\n        if n < smallest {\n            smallest = n;\n        }\n\
    \        if n > largest {\n            largest = n;\n        }\n    }\n    (smallest,\
    \ largest)", "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n\
    \    for n in numbers {\n        if n < smallest {\n            smallest = n;\n\
    \        }\n        if n > largest {\n            largest = n;\n        }\n  \
    \  }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut\
    \ largest = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n\
    \            smallest = n;\n        }\n        if n > largest {\n            largest\
    \ = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n    for &n in numbers\
    \ {\n        if n < smallest_number {\n            smallest_number = n;\n    \
    \    }\n        if n > largest_number {\n            largest_number = n;\n   \
    \     }\n    }\n    (smallest_number, largest_number)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n \
    \       if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ i in 1..numbers.len() {\n        if numbers[i] > largest {\n            largest\
    \ = numbers[i];\n        }\n        if numbers[i] < smallest {\n            smallest\
    \ = numbers[i];\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest_number = numbers[0];\n    let\
    \ mut largest_number = numbers[0];\n    for number in numbers {\n        if number\
    \ < smallest_number {\n            smallest_number = number;\n        }\n    \
    \    if number > largest_number {\n            largest_number = number;\n    \
    \    }\n    }\n    (smallest_number, largest_number)", "    let mut smallest =\
    \ numbers[0];\n    let mut largest = numbers[0];\n    for i in 1..numbers.len()\
    \ {\n        if numbers[i] < smallest {\n            smallest = numbers[i];\n\
    \        }\n        if numbers[i] > largest {\n            largest = numbers[i];\n\
    \        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n \
    \       if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest_number = numbers[0];\n    let mut largest_number = numbers[0];\n\
    \    for number in numbers {\n        if number < smallest_number {\n        \
    \    smallest_number = number;\n        }\n        if number > largest_number\
    \ {\n            largest_number = number;\n        }\n    }\n    (smallest_number,\
    \ largest_number)", "    let mut smallest = numbers[0];\n    let mut largest =\
    \ numbers[0];\n    for n in numbers {\n        if n < smallest {\n           \
    \ smallest = n;\n        }\n        if n > largest {\n            largest = n;\n\
    \        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n    for number in numbers\
    \ {\n        if number < smallest_number {\n            smallest_number = number;\n\
    \        }\n        if number > largest_number {\n            largest_number =\
    \ number;\n        }\n    }\n    (smallest_number, largest_number)", "    let\
    \ mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for &n in\
    \ numbers {\n        if n < smallest {\n            smallest = n;\n        }\n\
    \        if n > largest {\n            largest = n;\n        }\n    }\n    (smallest,\
    \ largest)", "    let mut smallest_number = numbers[0];\n    let mut largest_number\
    \ = numbers[0];\n    for number in numbers.iter().rev() {\n        if number <\
    \ smallest_number {\n            smallest_number = number;\n        }\n      \
    \  if number > largest_number {\n            largest_number = number;\n      \
    \  }\n    }\n    (smallest_number, largest_number)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest_number = numbers[0];\n    let mut largest_number = numbers[0];\n\
    \    for number in numbers {\n        if number < smallest_number {\n        \
    \    smallest_number = number;\n        }\n        if number > largest_number\
    \ {\n            largest_number = number;\n        }\n    }\n    (smallest_number,\
    \ largest_number)", "    let mut smallest = numbers[0];\n    let mut largest =\
    \ numbers[0];\n    for &n in numbers {\n        if n < smallest {\n          \
    \  smallest = n;\n        }\n        if n > largest {\n            largest = n;\n\
    \        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n    for i in 1..numbers.len()\
    \ {\n        if numbers[i] < smallest_number {\n            smallest_number =\
    \ numbers[i];\n        }\n        if numbers[i] > largest_number {\n         \
    \   largest_number = numbers[i];\n        }\n    }\n    (smallest_number, largest_number)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n\n    for number in\
    \ numbers {\n        if number < smallest_number {\n            smallest_number\
    \ = number;\n        }\n        if number > largest_number {\n            largest_number\
    \ = number;\n        }\n    }\n\n    (smallest_number, largest_number)", "   \
    \ let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for n\
    \ in numbers {\n        if n < smallest {\n            smallest = n;\n       \
    \ }\n        if n > largest {\n            largest = n;\n        }\n    }\n  \
    \  (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n \
    \       if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for i in 1..numbers.len() {\n        if\
    \ numbers[i] < smallest {\n            smallest = numbers[i];\n        }\n   \
    \     if numbers[i] > largest {\n            largest = numbers[i];\n        }\n\
    \    }\n    (smallest, largest)", "    let mut smallest_number = numbers[0];\n\
    \    let mut largest_number = numbers[0];\n    for n in numbers {\n        if\
    \ n < smallest_number {\n            smallest_number = n;\n        }\n       \
    \ if n > largest_number {\n            largest_number = n;\n        }\n    }\n\
    \    (smallest_number, largest_number)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n \
    \       if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for i in 1..numbers.len() {\n        if\
    \ numbers[i] < smallest {\n            smallest = numbers[i];\n        }\n   \
    \     if numbers[i] > largest {\n            largest = numbers[i];\n        }\n\
    \    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n    let\
    \ mut largest = numbers[0];\n    for i in 1..numbers.len() {\n        if numbers[i]\
    \ > largest {\n            largest = numbers[i];\n        }\n        if numbers[i]\
    \ < smallest {\n            smallest = numbers[i];\n        }\n    }\n    (smallest,\
    \ largest)", "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n\
    \    for &n in numbers {\n        if n < smallest {\n            smallest = n;\n\
    \        }\n        if n > largest {\n            largest = n;\n        }\n  \
    \  }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut\
    \ largest = numbers[0];\n    for n in numbers {\n        if n < smallest {\n \
    \           smallest = n;\n        }\n        if n > largest {\n            largest\
    \ = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for i in 1..numbers.len()\
    \ {\n        if numbers[i] < smallest {\n            smallest = numbers[i];\n\
    \        }\n        if numbers[i] > largest {\n            largest = numbers[i];\n\
    \        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest_number = numbers[0];\n    let\
    \ mut largest_number = numbers[0];\n    for &n in numbers {\n        if n < smallest_number\
    \ {\n            smallest_number = n;\n        }\n        if n > largest_number\
    \ {\n            largest_number = n;\n        }\n    }\n    (smallest_number,\
    \ largest_number)", "    let mut smallest_number = numbers[0];\n    let mut largest_number\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest_number {\n \
    \           smallest_number = n;\n        }\n        if n > largest_number {\n\
    \            largest_number = n;\n        }\n    }\n    (smallest_number, largest_number)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n    for i in 1..numbers.len()\
    \ {\n        if numbers[i] < smallest_number {\n            smallest_number =\
    \ numbers[i];\n        }\n        if numbers[i] > largest_number {\n         \
    \   largest_number = numbers[i];\n        }\n    }\n    (smallest_number, largest_number)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n    for number in numbers\
    \ {\n        if number < smallest_number {\n            smallest_number = number;\n\
    \        }\n        if number > largest_number {\n            largest_number =\
    \ number;\n        }\n    }\n    (smallest_number, largest_number)", "    let\
    \ mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for &n in\
    \ numbers {\n        if n < smallest {\n            smallest = n;\n        }\n\
    \        if n > largest {\n            largest = n;\n        }\n    }\n    (smallest,\
    \ largest)", "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n\
    \    for &n in numbers {\n        if n < smallest {\n            smallest = n;\n\
    \        }\n        if n > largest {\n            largest = n;\n        }\n  \
    \  }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut\
    \ largest = numbers[0];\n    for n in numbers {\n        if n < smallest {\n \
    \           smallest = n;\n        }\n        if n > largest {\n            largest\
    \ = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for i in 1..numbers.len()\
    \ {\n        if numbers[i] < smallest {\n            smallest = numbers[i];\n\
    \        }\n        if numbers[i] > largest {\n            largest = numbers[i];\n\
    \        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n\n    for number in\
    \ numbers.iter().rev() {\n        if number < smallest_number {\n            smallest_number\
    \ = number;\n        }\n        if number > largest_number {\n            largest_number\
    \ = number;\n        }\n    }\n\n    (smallest_number, largest_number)", "   \
    \ let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for n\
    \ in numbers {\n        if n < smallest {\n            smallest = n;\n       \
    \ }\n        if n > largest {\n            largest = n;\n        }\n    }\n  \
    \  (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n \
    \       if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest_number = numbers[0];\n    let\
    \ mut largest_number = numbers[0];\n    for number in numbers {\n        if number\
    \ < smallest_number {\n            smallest_number = number;\n        }\n    \
    \    if number > largest_number {\n            largest_number = number;\n    \
    \    }\n    }\n    (smallest_number, largest_number)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n    for n in numbers\
    \ {\n        if n < smallest_number {\n            smallest_number = n;\n    \
    \    }\n        if n > largest_number {\n            largest_number = n;\n   \
    \     }\n    }\n    (smallest_number, largest_number)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n \
    \       if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ n in numbers {\n        if n < smallest {\n            smallest = n;\n     \
    \   }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest_number\
    \ = numbers[0];\n    let mut largest_number = numbers[0];\n    for &n in numbers\
    \ {\n        if n < smallest_number {\n            smallest_number = n;\n    \
    \    }\n        if n > largest_number {\n            largest_number = n;\n   \
    \     }\n    }\n    (smallest_number, largest_number)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n \
    \       if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for n in numbers {\n        if n < smallest {\n         \
    \   smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for &n in numbers {\n\
    \        if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for i in 1..numbers.len()\
    \ {\n        if numbers[i] < smallest {\n            smallest = numbers[i];\n\
    \        }\n        if numbers[i] > largest {\n            largest = numbers[i];\n\
    \        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest\
    \ = numbers[0];\n    let mut largest = numbers[0];\n    for n in numbers {\n \
    \       if n < smallest {\n            smallest = n;\n        }\n        if n\
    \ > largest {\n            largest = n;\n        }\n    }\n    (smallest, largest)",
  "    let mut smallest = numbers[0];\n    let mut largest = numbers[0];\n    for\
    \ &n in numbers {\n        if n < smallest {\n            smallest = n;\n    \
    \    }\n        if n > largest {\n            largest = n;\n        }\n    }\n\
    \    (smallest, largest)", "    let mut smallest = numbers[0];\n    let mut largest\
    \ = numbers[0];\n    for &n in numbers {\n        if n < smallest {\n        \
    \    smallest = n;\n        }\n        if n > largest {\n            largest =\
    \ n;\n        }\n    }\n    (smallest, largest)", "    let mut smallest = numbers[0];\n\
    \    let mut largest = numbers[0];\n    for &n in numbers {\n        if n < smallest\
    \ {\n            smallest = n;\n        }\n        if n > largest {\n        \
    \    largest = n;\n        }\n    }\n    (smallest, largest)"]
stop_tokens:
- "\n}"

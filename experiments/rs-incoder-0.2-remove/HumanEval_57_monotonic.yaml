name: HumanEval_57_monotonic
language: rs
prompt: "/// Return True is list elements are monotonically increasing or decreasing.\n\
  fn monotonic(l: Vec<isize>) -> bool {\n"
tests: "}\n\nfn main() {\n    let candidate = monotonic;\n    assert_eq!(candidate(vec![1,\
  \ 2, 4, 10]), true);\n    assert_eq!(candidate(vec![1, 2, 4, 20]), true);\n    assert_eq!(candidate(vec![1,\
  \ 20, 4, 10]), false);\n    assert_eq!(candidate(vec![4, 1, 0, -10]), true);\n \
  \   assert_eq!(candidate(vec![4, 1, 1, 0]), true);\n    assert_eq!(candidate(vec![1,\
  \ 2, 3, 2, 5, 60]), false);\n    assert_eq!(candidate(vec![1, 2, 3, 4, 5, 60]),\
  \ true);\n    assert_eq!(candidate(vec![9, 9, 9, 9]), true);\n}\n"
completions: ["    let mut min_value = l[0];\n    let mut max_value = l[0];\n    for\
    \ &x in l {\n        if x < min_value {\n            min_value = x;\n        }\n\
    \        if x > max_value {\n            max_value = x;\n        }\n    }\n  \
    \  min_value <= max_value", '    l.iter().all(|&x| x <= l.iter().rev().next().unwrap())',
  "    let mut i = 0;\n    let mut j = 1;\n    let mut k = 0;\n    let mut l = l.len();\n\
    \    while i < l && j < l {\n        if l[i] < l[j] {\n            i += 1;\n \
    \       } else {\n            j += 1;\n        }\n        k += 1;\n    }\n   \
    \ i == l && j == l && k == l", '    l.iter().all(|&x| x >= l.iter().rev().first())',
  "    let mut i = 0;\n    let mut j = 1;\n    while i < l.len() && j < l.len() {\n\
    \        if l[i] < l[j] {\n            i += 1;\n        } else {\n           \
    \ j += 1;\n        }\n    }\n    i == l.len() || j == l.len()", "    let mut i\
    \ = 0;\n    let mut j = 0;\n    let mut k = l.len() - 1;\n    while i < k {\n\
    \        if l[i] < l[j] {\n            return false;\n        }\n        if l[i]\
    \ > l[j] {\n            return true;\n        }\n        i += 1;\n        j +=\
    \ 1;\n    }\n    false", "    let mut i = 0;\n    let mut j = 0;\n    let mut\
    \ k = l.len() - 1;\n    while i < k {\n        if l[i] > l[j] {\n            return\
    \ false;\n        }\n        if l[i] < l[k] {\n            return true;\n    \
    \    }\n        if l[i] > l[k] {\n            i += 1;\n        } else {\n    \
    \        j += 1;\n        }\n        k -= 1;\n    }\n    false", "    let mut\
    \ i = 0;\n    let mut j = 0;\n    let mut k = l.len() - 1;\n    while i < k {\n\
    \        if l[i] < l[j] {\n            return false;\n        }\n        if l[i]\
    \ > l[j] {\n            return true;\n        }\n        i += 1;\n        j +=\
    \ 1;\n    }\n    false", "    let mut min_value = l[0];\n    let mut max_value\
    \ = l[0];\n    for i in l.iter().rev() {\n        if i < min_value {\n       \
    \     min_value = i;\n        }\n        if i > max_value {\n            max_value\
    \ = i;\n        }\n    }\n    min_value <= max_value", "    let mut i = 0;\n \
    \   let mut j = 0;\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    while i < l.len() {\n        if l[i] > l[j] {\n            is_increasing\
    \ = false;\n        } else {\n            is_decreasing = false;\n        }\n\
    \        if i == j {\n            break;\n        }\n        i += 1;\n       \
    \ j += 1;\n    }\n    is_increasing && is_decreasing", "    let mut i = 0;\n \
    \   let mut j = 0;\n    let mut is_increasing = true;\n    let mut is_decreasing\
    \ = true;\n    while i < l.len() {\n        if l[i] < l[j] {\n            is_decreasing\
    \ = false;\n        } else {\n            is_increasing = false;\n        }\n\
    \        if i == j {\n            break;\n        }\n        if l[i] > l[j] {\n\
    \            is_decreasing = false;\n        } else {\n            is_increasing\
    \ = false;\n        }\n        i += 1;\n        j += 1;\n    }\n    is_increasing\
    \ || is_decreasing", '    l.iter().all(|&x| x > l.iter().rev().next().unwrap())',
  '    l.iter().all(|&x| x <= l.iter().rev().next().unwrap())', "    let mut i = 0;\n\
    \    let mut j = 0;\n    let mut k = 0;\n    let mut l = l.iter().cloned().collect::<Vec<_>>();\n\
    \    while i < l.len() {\n        if l[i] < l[j] {\n            i += 1;\n    \
    \    } else if l[i] > l[j] {\n            j += 1;\n        } else {\n        \
    \    i += 1;\n            j += 1;\n        }\n        if i == l.len() {\n    \
    \        return true;\n        }\n        if j == l.len() {\n            return\
    \ false;\n        }\n        if l[i] < l[j] {\n            i += 1;\n        }\
    \ else {\n            j += 1;\n        }\n    }\n    false", "    let mut min_val\
    \ = l[0];\n    let mut max_val = l[0];\n    for i in l.iter().rev() {\n      \
    \  if i < min_val {\n            min_val = i;\n        }\n        if i > max_val\
    \ {\n            max_val = i;\n        }\n    }\n    min_val < max_val", "   \
    \ let mut i = 0;\n    let mut j = 0;\n    let mut k = l.len() - 1;\n    while\
    \ i < k {\n        if l[i] < l[j] {\n            return false;\n        }\n  \
    \      if l[i] > l[j] {\n            return true;\n        }\n        i += 1;\n\
    \        j -= 1;\n    }\n    false", "    let mut i = 0;\n    let mut j = 1;\n\
    \    while i < l.len() && j < l.len() {\n        if l[i] < l[j] {\n          \
    \  i += 1;\n        } else {\n            j += 1;\n        }\n    }\n    i ==\
    \ l.len() || j == l.len()", "    let mut i = 0;\n    let mut j = 1;\n    let mut\
    \ k = 0;\n    while i < l.len() && j < l.len() {\n        if l[i] < l[j] {\n \
    \           i += 1;\n        } else if l[i] > l[j] {\n            j += 1;\n  \
    \      } else {\n            i += 1;\n            j += 1;\n        }\n       \
    \ k += 1;\n    }\n    i == l.len() || j == l.len() || k == l.len()", "    let\
    \ mut i = 0;\n    let mut j = 0;\n    let mut k = 0;\n    let mut l = l.len();\n\
    \    while i < l && j < l {\n        if l[i] < l[j] {\n            i += 1;\n \
    \       } else {\n            j += 1;\n        }\n        if i == j {\n      \
    \      i += 1;\n            j += 1;\n        }\n        if i == k {\n        \
    \    i += 1;\n        }\n        if j == k {\n            j += 1;\n        }\n\
    \        if i == k {\n            i += 1;\n        }\n        if j == k {\n  \
    \          j += 1;\n        }\n        if i == k {\n            i += 1;\n    \
    \    }\n        if j == k {\n            j += 1;\n        }\n        if i == k\
    \ {\n            i += 1;\n        }\n        if j == k {\n            j += 1;\n\
    \        }\n        if i == k {\n            i += 1;\n        }\n        if j\
    \ == k {\n            j += 1;\n        }\n        if i == k {\n            i +=\
    \ 1;\n        }\n        if j == k {\n            j += 1;\n        }\n       \
    \ if i == k {\n            i += 1;\n        }\n        if j == k {\n         \
    \   j += 1;\n        }\n        if i == k {\n            i += 1;\n        }\n\
    \        if j == k {\n            j += 1;\n        }\n        if i == k {\n  \
    \          i += 1;\n        }\n        if j == k {\n            j += 1;\n    \
    \    }\n        if i == k {\n            i += 1;\n        }\n        if j == k\
    \ {\n            j += 1;\n        }\n        if i == k {\n            i += 1;\n\
    \        }\n        if j == k {\n            j += 1;\n        }\n        if i\
    \ == k {\n            i += 1;\n        }\n        if j == k {\n            j +=\
    \ 1;\n        }\n        if i == k {\n            i += 1;\n        }\n       \
    \ if j == k {\n            j += 1;\n        }\n        if i == k {\n         \
    \   i += 1;\n        }\n        if j == k {\n            j += 1;\n        }\n\
    \        if i == k {\n            i += 1;\n        }\n        if j == k {\n  \
    \          j += 1;\n        }\n        if i == k {\n            i += 1;\n    \
    \    }\n        if j == k {\n            j += 1;\n        }\n        if i == k\
    \ {\n            i += 1;\n        }\n        if j == k {\n            j += 1;\n\
    \        }\n        if i == k {\n            i += 1;\n        }\n        if j\
    \ == k {\n            j += 1;\n        }\n        if i == k {\n            i +=\
    \ 1;\n        }\n        if j == k {\n            j += 1;\n        }\n       \
    \ if i == k {\n            i += ", "    let mut i = 0;\n    let mut j = 1;\n \
    \   let mut k = 0;\n    while i < l.len() {\n        if l[i] < l[j] {\n      \
    \      i += 1;\n        } else {\n            j += 1;\n        }\n        if i\
    \ == l.len() || l[i] < l[k] {\n            i += 1;\n            k += 1;\n    \
    \    }\n    }\n    i == l.len() || l[i] < l[k]"]
stop_tokens:
- "\n}"

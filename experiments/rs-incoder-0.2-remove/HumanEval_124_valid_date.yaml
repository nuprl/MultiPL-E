name: HumanEval_124_valid_date
language: rs
prompt: "/// You have to write a function which validates a given date string and\n\
  /// returns True if the date is valid otherwise False.\n/// The date is valid if\
  \ all of the following rules are satisfied:\n/// 1. The date string is not empty.\n\
  /// 2. The number of days is not less than 1 or higher than 31 days for months 1,3,5,7,8,10,12.\
  \ And the number of days is not less than 1 or higher than 30 days for months 4,6,9,11.\
  \ And, the number of days is not less than 1 or higher than 29 for the month 2.\n\
  /// 3. The months should not be less than 1 or higher than 12.\n/// 4. The date\
  \ should be in the format: mm-dd-yyyy\nfn valid_date(date: String) -> bool {\n"
tests: "}\n\nfn main() {\n    let candidate = valid_date;\n    assert_eq!(candidate(String::from(\"\
  03-11-2000\")), true);\n    assert_eq!(candidate(String::from(\"15-01-2012\")),\
  \ false);\n    assert_eq!(candidate(String::from(\"04-0-2040\")), false);\n    assert_eq!(candidate(String::from(\"\
  06-04-2020\")), true);\n    assert_eq!(candidate(String::from(\"01-01-2007\")),\
  \ true);\n    assert_eq!(candidate(String::from(\"03-32-2011\")), false);\n    assert_eq!(candidate(String::from(\"\
  \")), false);\n    assert_eq!(candidate(String::from(\"04-31-3000\")), false);\n\
  \    assert_eq!(candidate(String::from(\"06-06-2005\")), true);\n    assert_eq!(candidate(String::from(\"\
  21-31-2000\")), false);\n    assert_eq!(candidate(String::from(\"04-12-2003\")),\
  \ true);\n    assert_eq!(candidate(String::from(\"04122003\")), false);\n    assert_eq!(candidate(String::from(\"\
  20030412\")), false);\n    assert_eq!(candidate(String::from(\"2003-04\")), false);\n\
  \    assert_eq!(candidate(String::from(\"2003-04-12\")), false);\n    assert_eq!(candidate(String::from(\"\
  04-2003\")), false);\n}\n"
completions: ["    let mut date_components = DateComponents::new();\n    date_components.year\
    \ = date.parse().unwrap();\n    date_components.month = date.parse().unwrap();\n\
    \    date_components.day = date.parse().unwrap();\n    date_components.year_month_day\
    \ = date.parse().unwrap();\n    date_components.year_month_day.day = 1;\n    date_components.year_month_day.month\
    \ = 1;\n    date_components.year_month_day.year = 1;\n    date_components.year_month_day.weekday\
    \ = Weekday::Monday;\n    date_components.year_month_day.day = 1;\n    date_components.year_month_day.month\
    \ = 1;\n    date_components.year_month_day.year = 1;\n    date_components.year_month_day.weekday\
    \ = Weekday::Monday;\n    date_components.year_month_day.day = 1;\n    date_components.year_month_day.month\
    \ = 1;\n    date_components.year_month_day.year = 1;\n    date_components.year_month_day.weekday\
    \ = Weekday::Monday;\n    date_components.year_month_day.day = 1;\n    date_components.year_month_day.month\
    \ = 1;\n    date_components.year_month_day.year = 1;\n    date_components.year_month_day.weekday\
    \ = Weekday::Monday;\n    date_components.year_month_day.day = 1;\n    date_components.year_month_day.month\
    \ = 1;\n    date_components.year_month_day.year = 1;\n    date_components.year_month_day.weekday\
    \ = Weekday::Monday;\n    date_components.year_month_day.day = 1;\n    date_components.year_month_day.month\
    \ = 1;\n    date_components.year_month_day.year = 1;\n    date_components.year_month_day.weekday\
    \ = Weekday::Monday;\n    date_components.year_month_day.day = 1;\n    date_components.year_month_day.month\
    \ = 1;\n    date_components.year_month_day.year = 1;\n    date_components.year_month_day.weekday\
    \ = Weekday::Monday;\n    date_components.year_month_day.day = 1;\n    date_components.year_month_day.month\
    \ = 1;\n    date_components.year_month_day.year = 1;\n    date_components.year_month_day.weekday\
    \ = Weekday::Monday;\n    date_components.year_month_day.day = 1;\n    date_components.year_month_day.month\
    \ = 1;\n    date_components.year_month_day.year = 1;\n    date_components.year_month_day.weekday\
    \ = Weekday::Monday;\n    date_components.year_month_day.day = 1;\n    date_components.year_month_day.month\
    \ = 1;\n    date_components.year_month_day.year = 1;\n    date_components.year_month_day.weekday\
    \ = Weekday::Monday;\n    date_components.year_month_day.day = 1;\n    date_components.year_month_day.month\
    \ = 1;\n    date_components.year_month_day.year = 1;\n    date_components.year_month_day.weekday\
    \ = Weekday::Monday;\n    date_components.year_month_day.day = 1;\n    date_components.year_month_day.month\
    \ = 1;\n", "    !date.is_empty()\n        && date.len() != 0\n        && date.len()\
    \ <= 31\n        && date.len() <= 30\n        && date.len() <= 29\n        &&\
    \ date.len() <= 12\n        && date.len() == date.rfind('-')\n        && date.len()\
    \ == date.rfind('-')\n        && date.len() == date.rfind('-')", "    let mut\
    \ date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<usize>().unwrap()\
    \ > 0 &&\n    date_str.parse::<usize>().unwrap() <= 31 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 30 &&\n    date_str.parse::<usize>().unwrap() <= 29 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 12 &&\n    date_str.parse::<usize>().unwrap() >= 1 &&\n    date_str.parse::<usize>().unwrap()\
    \ <= 31", '    !date.is_empty() && date.len() > 0 && valid_day(date) && valid_month(date)
    && valid_year(date)', "    let mut date_components = String::new();\n    date_components.push_str(date);\n\
    \    date_components.trim_end();\n    let mut date_components_array = date_components.split_whitespace();\n\
    \    date_components_array.sort();\n    let mut date_components_array_size = date_components_array.len();\n\
    \    let mut current_date = 0;\n    let mut current_month = 0;\n    let mut current_year\
    \ = 0;\n    let mut current_day = 0;\n    let mut current_month_string = \"\"\
    ;\n    let mut current_day_string = \"\";\n    let mut current_year_string = \"\
    \";\n    let mut current_month_string_string = \"\";\n    let mut current_day_string_string\
    \ = \"\";\n    let mut current_year_string_string = \"\";\n    let mut current_month_string_string_string\
    \ = \"\";\n    let mut current_day_string_string_string = \"\";\n    let mut current_year_string_string_string\
    \ = \"\";\n    let mut current_month_string_string_string_string = \"\";\n   \
    \ let mut current_day_string_string_string_string = \"\";\n    let mut current_year_string_string_string_string\
    \ = \"\";\n    let mut current_month_string_string_string_string = \"\";\n   \
    \ let mut current_day_string_string_string_string = \"\";\n    let mut current_year_string_string_string_string\
    \ = \"\";\n    let mut current_month_string_string_string_string = \"\";\n   \
    \ let mut current_day_string_string_string_string = \"\";\n    let mut current_year_string_string_string_string\
    \ = \"\";\n    let mut current_month_string_string_string_string = \"\";\n   \
    \ let mut current_day_string_string_string_string = \"\";\n    let mut current_year_string_string_string_string\
    \ = \"\";\n    let mut current_month_string_string_string_string = \"\";\n   \
    \ let mut current_day_string_string_string_string = \"\";\n    let mut current_year_string_string_string_string\
    \ = \"\";\n    let mut current_month_string_string_string_string = \"\";\n   \
    \ let mut current_day_string_string_string_string = \"\";\n    let mut current_year_string_string_string_string\
    \ = \"\";\n    let mut current_month_string_string_string_string = \"\";\n   \
    \ let mut current_day_string_string_string_string = \"\";\n    let mut current_year_string_string_string_string\
    \ = \"\";\n    let mut current_month_string_string_string_string = \"\";\n   \
    \ let mut current_day_string_string_string_string = \"\";\n    let mut current_year_string_string_string_string\
    \ = \"\";\n    let mut current_month_string_string_string_string = \"\";\n   \
    \ let mut current_day_string_string_string_string = \"\";\n    let mut current_year_string_string_string_string\
    \ = \"\";\n    let mut current_month_string_string_string_string = \"\";\n   \
    \ let mut current_day_string_string_string_string = \"\";\n    let mut current_year_string_string_string_string\
    \ = \"\";\n    let mut current_month_string_string_string_string = \"\";\n", " \
    \   let mut date_str = date.to_string();\n    date_str.trim();\n    date_str.parse::<i64>().is_ok()",
  "    !date.is_empty() && date.len() == 10 && date.chars().all(|c| c.is_digit())\
    \ && date.chars().all(|c| c != '-') && date.chars().all(|c| c != '/') && date.chars().all(|c|\
    \ c != '-') && date.chars().all(|c| c != '/')", "    if !date.is_empty() {\n \
    \       let mut date_str = date.to_string();\n        let mut date_str = date_str.trim_right();\n\
    \        let mut date_str = date_str.trim_left();\n        let mut date_str =\
    \ date_str.trim_right();\n        let mut date_str = date_str.trim_left();\n \
    \       let mut date_str = date_str.trim_right();\n        let mut date_str =\
    \ date_str.trim_left();\n        let mut date_str = date_str.trim_right();\n \
    \       let mut date_str = date_str.trim_left();\n        let mut date_str = date_str.trim_right();\n\
    \        let mut date_str = date_str.trim_left();\n        let mut date_str =\
    \ date_str.trim_right();\n        let mut date_str = date_str.trim_left();\n \
    \       let mut date_str = date_str.trim_right();\n        let mut date_str =\
    \ date_str.trim_left();\n        let mut date_str = date_str.trim_right();\n \
    \       let mut date_str = date_str.trim_left();\n        let mut date_str = date_str.trim_right();\n\
    \        let mut date_str = date_str.trim_left();\n        let mut date_str =\
    \ date_str.trim_right();\n        let mut date_str = date_str.trim_left();\n \
    \       let mut date_str = date_str.trim_right();\n        let mut date_str =\
    \ date_str.trim_left();\n        let mut date_str = date_str.trim_right();\n \
    \       let mut date_str = date_str.trim_left();\n        let mut date_str = date_str.trim_right();\n\
    \        let mut date_str = date_str.trim_left();\n        let mut date_str =\
    \ date_str.trim_right();\n        let mut date_str = date_str.trim_left();\n \
    \       let mut date_str = date_str.trim_right();\n        let mut date_str =\
    \ date_str.trim_left();\n        let mut date_str = date_str.trim_right();\n \
    \       let mut date_str = date_str.trim_left();\n        let mut date_str = date_str.trim_right();\n\
    \        let mut date_str = date_str.trim_left();\n        let mut date_str =\
    \ date_str.trim_right();\n        let mut date_str = date_str.trim_left();\n \
    \       let mut date_str = date_str.trim_right();\n        let mut date_str =\
    \ date_str.trim_left();\n        let mut date_str = date_str.trim_right();\n \
    \       let mut date_str = date_str.trim_left();\n        let mut date_str = date_str.trim_right();\n\
    \        let mut date_str = date_str.trim_left();\n        let mut date_str =\
    \ date_str.trim_right();\n        let mut date_str = date_str.trim_left();\n \
    \       let mut date_str = date_str.trim_right();\n        let ", '    !date.is_empty()
    && valid_day(date) && valid_month(date) && valid_year(date)', "    let mut date_components\
    \ = DateComponents::new();\n    date_components.year = date.parse().unwrap();\n\
    \    date_components.month = date.parse().unwrap();\n    date_components.day =\
    \ date.parse().unwrap();\n    date_components.weekday = date.parse().unwrap();\n\
    \    date_components.year = date_components.year + 1900;\n    date_components.month\
    \ = date_components.month + 1;\n    date_components.day = date_components.day\
    \ + 1;\n    date_components.weekday = date_components.weekday + 1;\n    date_components.year\
    \ = date_components.year % 100;\n    date_components.month = date_components.month\
    \ % 100;\n    date_components.day = date_components.day % 100;\n    date_components.weekday\
    \ = date_components.weekday % 100;\n    date_components.year = date_components.year\
    \ as u16;\n    date_components.month = date_components.month as u16;\n    date_components.day\
    \ = date_components.day as u16;\n    date_components.weekday = date_components.weekday\
    \ as u16;\n    date_components.year -= 1900;\n    date_components.month -= 1;\n\
    \    date_components.day -= 1;\n    date_components.weekday -= 1;\n    date_components.year\
    \ -= 100;\n    date_components.month -= 100;\n    date_components.day -= 100;\n\
    \    date_components.weekday -= 100;\n    date_components.year -= 1;\n    date_components.month\
    \ -= 1;\n    date_components.day -= 1;\n    date_components.weekday -= 1;\n  \
    \  date_components.year -= 1;\n    date_components.month -= 1;\n    date_components.day\
    \ -= 1;\n    date_components.weekday -= 1;\n    date_components.year -= 1;\n \
    \   date_components.month -= 1;\n    date_components.day -= 1;\n    date_components.weekday\
    \ -= 1;\n    date_components.year -= 1;\n    date_components.month -= 1;\n   \
    \ date_components.day -= 1;\n    date_components.weekday -= 1;\n    date_components.year\
    \ -= 1;\n    date_components.month -= 1;\n    date_components.day -= 1;\n    date_components.weekday\
    \ -= 1;\n    date_components.year -= 1;\n    date_components.month -= 1;\n   \
    \ date_components.day -= 1;\n    date_components.weekday -= 1;\n    date_components.year\
    \ -= 1;\n    date_components.month -= 1;\n    date_components.day -= 1;\n    date_components.weekday\
    \ -= 1;\n    date_components.year -= 1;\n    date_components.month -= 1;\n   \
    \ date_components.day -= 1;\n    date_components.weekday -= 1;\n    date_components.year\
    \ -= 1;\n    date_components.month -= 1;\n    date_components.day -= 1;\n    date_components.weekday\
    \ -= 1;\n    date_components.year -= 1;\n    date_components.month -= 1;\n   \
    \ date_components.day -= 1;\n    date_", '    !date.is_empty() && date.len() !=
    0 && valid_day(date) && valid_month(date) && valid_year(date)', "    if !date.is_empty()\
    \ {\n        let date_components = date.split('-');\n        let month = date_components[0];\n\
    \        let day = date_components[1];\n        let year = date_components[2];\n\
    \        let month_components = month.split('-');\n        let month_length =\
    \ month_components.len();\n        let day_components = day.split('-');\n    \
    \    let day_length = day_components.len();\n        if month_length == 3 && day_length\
    \ == 3 {\n            if month_components[0] > 12 || month_components[0] < 1 {\n\
    \                return false;\n            }\n            if month_components[1]\
    \ > 12 || month_components[1] < 1 {\n                return false;\n         \
    \   }\n            if month_components[2] > 12 || month_components[2] < 1 {\n\
    \                return false;\n            }\n            if day_components[0]\
    \ > 31 || day_components[0] < 1 {\n                return false;\n           \
    \ }\n            if day_components[1] > 30 || day_components[1] < 1 {\n      \
    \          return false;\n            }\n            if day_components[2] > 29\
    \ || day_components[2] < 1 {\n                return false;\n            }\n \
    \           if year > 9999 || year < 1000 {\n                return false;\n \
    \           }\n        }\n    }\n    return true;", "    !date.is_empty()\n  \
    \      && date.len() >= 3\n        && date.len() <= 31\n        && date.chars().all(|c|\
    \ c.is_digit())\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '/')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| c != '-')\n        && date.chars().all(|c|\
    \ c != '-')\n        && date.chars().all(|c| ", "    !date.is_empty() && date.len()\
    \ == 10 && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '9') && date.chars().all(|c| c >= '0' && c <= '9') && date.chars().all(|c|\
    \ c >= '0' && c <= '", "    if !date.is_empty() {\n        let mut date_components\
    \ = date.split('-');\n        let mut days: u32 = 0;\n        let mut months:\
    \ u32 = 0;\n        let mut years: u32 = 0;\n        let mut days_in_month: u32\
    \ = 0;\n        let mut days_in_year: u32 = 0;\n        let mut days_in_year_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month: u32 = 0;\n       \
    \ let mut days_in_year_in_month_in_month_in_month: u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut days_in_year_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month_in_month:\
    \ u32 = 0;\n        let mut ", "    !date.is_empty() && date.len() > 1 && date.len()\
    \ <= 31 &&\n        date.len() <= 29 && date.len() >= 1 && date.len() <= 12 &&\n\
    \        date.chars().all(|c| c >= '0' && c <= '9')", "    !date.is_empty() &&\
    \ date.len() == 10 && date.len() <= 29 && date.len() >= 1 && date.len() <= 12\
    \ && date.len() == date.chars().filter(|c| c >= '0' && c <= '9').count() == 3\
    \ && date.chars().filter(|c| c >= '0' && c <= '9').count() == date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == date.chars().filter(|c| c >= '0' && c <= '9').count()\
    \ == date.chars().filter(|c| c >= '0' && c <= '9').count() == date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == date.chars().filter(|c| c >= '0' && c <= '9').count()\
    \ == date.chars().filter(|c| c >= '0' && c <= '9').count() == date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == date.chars().filter(|c| c >= '0' && c <= '9').count()\
    \ == date.chars().filter(|c| c >= '0' && c <= '9').count() == date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == date.chars().filter(|c| c >= '0' && c <= '9').count()\
    \ == date.chars().filter(|c| c >= '0' && c <= '9').count() == date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == date.chars().filter(|c| c >= '0' && c <= '9').count()\
    \ == date.chars().filter(|c| c >= '0' && c <= '9').count() == date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == date.chars().filter(|c| c >= '0' && c <= '9').count()\
    \ == date.chars().filter(|c| c >= '0' && c <= '9').count() == date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == date.chars().filter(|c| c >= '0' && c <= '9').count()\
    \ == date.chars().filter(|c| c >= '0' && c <= '9').count() == date.chars().filter(|c|\
    \ c >= '0' && c <= '9').count() == date.chars().filter(|c| c >= '0' && c <= '9').count()\
    \ == date.chars().filter(|c| ", "    let mut date_str = date.to_string();\n  \
    \  date_str.trim();\n    if date_str.len() == 0 {\n        return false;\n   \
    \ }\n    let mut date_parts = date_str.split_whitespace();\n    if date_parts.len()\
    \ != 3 {\n        return false;\n    }\n    let mut date_parts = date_str.split_whitespace();\n\
    \    let months = date_parts[0].parse::<usize>().unwrap();\n    let days = date_parts[1].parse::<usize>().unwrap();\n\
    \    let year = date_parts[2].parse::<usize>().unwrap();\n    if months < 1 ||\
    \ months > 12 {\n        return false;\n    }\n    if days < 1 || days > 31 {\n\
    \        return false;\n    }\n    if months == 2 {\n        if days > 29 {\n\
    \            return false;\n        }\n    }\n    if months == 4 {\n        if\
    \ days > 30 {\n            return false;\n        }\n    }\n    if months == 6\
    \ {\n        if days > 31 {\n            return false;\n        }\n    }\n   \
    \ if months == 9 {\n        if days > 31 {\n            return false;\n      \
    \  }\n    }\n    if months == 11 {\n        if days > 30 {\n            return\
    \ false;\n        }\n    }\n    if months == 12 {\n        if days > 31 {\n  \
    \          return false;\n        }\n    }\n    if months == 1 {\n        if days\
    \ > 31 {\n            return false;\n        }\n    }\n    if months == 3 {\n\
    \        if days > 30 {\n            return false;\n        }\n    }\n    if months\
    \ == 5 {\n        if days > 31 {\n            return false;\n        }\n    }\n\
    \    if months == 7 {\n        if days > 31 {\n            return false;\n   \
    \     }\n    }\n    if months == 8 {\n        if days > 31 {\n            return\
    \ false;\n        }\n    }\n    if months == 10 {\n        if days > 31 {\n  \
    \          return false;\n        }\n    }\n    if months == 12 {\n        if\
    \ days > 31 {\n            return false;\n        }\n    }\n    if months == 2\
    \ {\n        if days > 29 {\n            return false;\n        }\n    }\n   \
    \ if months == 4 {\n        if days > 30 {\n            return false;\n      \
    \  }\n    }\n    if months == 6 {\n        if days > 31 {\n            return\
    \ false;\n        }\n    }\n    if months == 9 {\n        if days > 31 {\n   \
    \         return false;\n        }\n    }\n    if months == 11 {\n        if days\
    \ > 30 {\n            return false;\n        }\n    }\n    if months == 12 {\n\
    \        if days > 31 {\n            return false;\n        }\n    }\n    if months\
    \ == 1 {\n        if days > 31 {\n            return false;\n        }\n    }\n\
    \    if months == 3 {\n        if days > ", "    if !date.is_empty() {\n     \
    \   let mut date_components = date.split('-');\n        let mut year = date_components[0];\n\
    \        let mut month = date_components[1];\n        let mut day = date_components[2];\n\
    \        let mut days_in_month = [31,28,31,30,31,30,31,30,31,30,31,30];\n    \
    \    let mut days_in_year = 365;\n        if month == \"01\" {\n            days_in_month\
    \ = [31,29,31,30,31,30,31,30,31,30,31,30];\n        }\n        if month == \"\
    02\" {\n            days_in_month = [31,28,31,30,31,30,31,30,31,30,31,30];\n \
    \       }\n        if month == \"03\" {\n            days_in_month = [31,29,31,30,31,30,31,30,31,30,31,30];\n\
    \        }\n        if month == \"04\" {\n            days_in_month = [31,30,31,30,31,30,31,30,31,30,31,30];\n\
    \        }\n        if month == \"05\" {\n            days_in_month = [31,31,31,31,31,31,31,31,31,31,31];\n\
    \        }\n        if month == \"06\" {\n            days_in_month = [31,30,31,30,31,30,31,30,31,30,31,30];\n\
    \        }\n        if month == \"07\" {\n            days_in_month = [31,31,31,31,31,31,31,31,31,31,31];\n\
    \        }\n        if month == \"08\" {\n            days_in_month = [31,30,31,30,31,30,31,30,31,30,31,30];\n\
    \        }\n        if month == \"09\" {\n            days_in_month = [31,31,31,31,31,31,31,31,31,31,31];\n\
    \        }\n        if month == \"10\" {\n            days_in_month = [31,30,31,30,31,30,31,30,31,30,31,30];\n\
    \        }\n        if month == \"11\" {\n            days_in_month = [31,31,31,31,31,31,31,31,31,31,31];\n\
    \        }\n        if month == \"12\" {\n            days_in_month = [31,30,31,30,31,30,31,30,31,30,31,30];\n\
    \        }\n        if month == \"01\" {\n            days_in_year = 366;\n  \
    \      }\n        if month == \"02\" {\n            days_in_year = 365;\n    \
    \    }\n        if month == \"03\" {\n            days_in_year = 365;\n      \
    \  }\n        if month == \"04\" {\n            days_in_year = 365;\n        }\n\
    \        if month == \"05\" {\n            days_in_year = 365;\n        }\n  \
    \      if month == \"06\" {\n            days_in_year = 365;\n        }\n    \
    \    if ", '    !date.is_empty() && valid_day(date) && valid_month(date) && valid_year(date)']
stop_tokens:
- "\n}"

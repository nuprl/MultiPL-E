name: HumanEval_102_choose_num
language: rs
prompt: "/// This function takes two positive numbers x and y and returns the\n///\
  \ biggest even integer number that is in the range [x, y] inclusive. If \n/// there's\
  \ no such number, then the function should return -1.\n/// For example:\nfn choose_num(x:\
  \ isize, y: isize) -> isize {\n"
tests: "}\n\nfn main() {\n    let candidate = choose_num;\n    assert_eq!(candidate(12,\
  \ 15), 14);\n    assert_eq!(candidate(13, 12), -1);\n    assert_eq!(candidate(33,\
  \ 12354), 12354);\n    assert_eq!(candidate(5234, 5233), -1);\n    assert_eq!(candidate(6,\
  \ 29), 28);\n    assert_eq!(candidate(27, 10), -1);\n    assert_eq!(candidate(7,\
  \ 7), -1);\n    assert_eq!(candidate(546, 546), 546);\n}\n"
completions: ["    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    let mut result = x;\n    let\
    \ mut remainder = y;\n    while remainder > 0 {\n        if remainder % 2 == 0\
    \ {\n            result = result + 1;\n        }\n        remainder = remainder\
    \ / 2;\n    }\n    result", "    let mut num: isize = 0;\n    let mut even: isize\
    \ = 0;\n    let mut odd: isize = 0;\n    while num < y {\n        if even < x\
    \ {\n            even += 1;\n            num += 1\n        } else {\n        \
    \    odd += 1;\n        }\n    }\n    if even > x {\n        even = x\n    }\n\
    \    if odd > y {\n        odd = y\n    }\n    if even > odd {\n        even =\
    \ odd\n    }\n    even", "    if x <= y {\n        choose_num(y, x)\n    } else\
    \ {\n        choose_num(x, y)\n    }", "    if x <= y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    let mut num: isize\
    \ = 0;\n    while num < x || num < y {\n        if num % 2 == 0 {\n          \
    \  num = num + 2;\n        } else {\n            num = num + 1;\n        }\n \
    \   }\n    return num;", "    if x < y {\n        choose_num(y, x)\n    } else\
    \ {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ <= y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n \
    \   }", "    if x <= y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x <= y {\n        choose_num(x, y)\n    }\
    \ else {\n        choose_num(y, x)\n    }", "    if x <= y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    let mut max_num = -1;\n\
    \    let mut min_num = x;\n    loop {\n        if min_num > y {\n            break;\n\
    \        }\n        if max_num < min_num {\n            max_num = min_num;\n \
    \       }\n        if max_num % 2 == 0 {\n            max_num += 1;\n        }\n\
    \        min_num += 1;\n    }\n    max_num", "    if x <= y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if\
    \ x > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut num = x;\n    \n\
    \    while num < y {\n        if num % 2 == 0 {\n            num = num + 2\n \
    \       } else {\n            num = num + 1\n        }\n    }\n    \n    num",
  "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    let mut even: isize = 0;\n    let mut odd: isize = 0;\n    while\
    \ even < y && odd < x {\n        if x % 2 == 0 {\n            even += 1;\n   \
    \         x /= 2;\n        } else {\n            odd += 1;\n            x /= 2;\n\
    \        }\n    }\n    if even < y {\n        even\n    } else {\n        odd\n\
    \    }", "    let mut x: isize = 0;\n    let mut y: isize = 0;\n    loop {\n \
    \       if x % 2 == 0 {\n            x = x + 1;\n        } else {\n          \
    \  x = x + 2;\n        }\n        if y % 2 == 0 {\n            y = y + 1;\n  \
    \      } else {\n            y = y + 2;\n        }\n        if x >= y {\n    \
    \        return -1;\n        }\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x > y {\n      \
    \  (x, y) = (y, x)\n    }\n    \n    let mut even = x;\n    let mut odd = y;\n\
    \    \n    while even > 0 || odd > 0 {\n        if even % 2 == 0 {\n         \
    \   even /= 2;\n        } else {\n            odd /= 2;\n        }\n    }\n  \
    \  \n    if even == 0 {\n        even = -1;\n    }\n    \n    if odd > 0 {\n \
    \       odd\n    } else {\n        even\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ <= y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n \
    \   }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x <= y {\n        choose_num(x, y)\n    } else {\n     \
    \   choose_num(y, x)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if\
    \ x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x <= y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n  \
    \  }", "    if x > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut x: isize\
    \ = 0;\n    let mut y: isize = 0;\n    \n    while x < y {\n        \n       \
    \ if x % 2 == 0 {\n            x = x + 1;\n        } else {\n            y = y\
    \ + 1;\n        }\n    }\n    \n    if x == y {\n        x\n    } else {\n   \
    \     -1\n    }", "    if x <= y {\n        choose_num(y, x)\n    } else {\n \
    \       choose_num(x, y)\n    }", "    if x > y {\n        (x, y) = (y, x)\n \
    \   }\n    \n    let mut num: isize = 0;\n    let mut even: isize = 0;\n    \n\
    \    while even < x {\n        even += y;\n        num += 1\n    }\n    \n   \
    \ num", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    let mut num = x;\n    while num < y {\n        if num % 2 ==\
    \ 0 {\n            num = num + 2;\n        } else {\n            num = num + 1;\n\
    \        }\n    }\n    num", "    let mut num: isize = 0;\n    while num < x ||\
    \ num < y {\n        if num % 2 == 0 {\n            num = num + 2;\n        }\
    \ else {\n            num = num + 1;\n        }\n    }\n    if num == x || num\
    \ == y {\n        return -1;\n    }\n    return num;", "    if x < y {\n     \
    \   choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if\
    \ x <= y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x <= y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    let mut result = x;\n    while\
    \ result < y {\n        if result % 2 == 0 {\n            result = result + 1;\n\
    \        } else {\n            result = result + 2;\n        }\n    }\n    result",
  "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x <= y {\n        return -1\n    }\n    if x == y {\n  \
    \      return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x / 2,\
    \ y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n    }\n\
    \    if x > y {\n        return choose_num(x / 2, y)\n    }\n    if y > x {\n\
    \        return choose_num(x, y / 2)\n    }\n    return -1", "    if x <= y {\n\
    \        choose_num(x, y)\n    } else {\n        choose_num(y, x)\n    }", " \
    \   if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x <= y {\n        choose_num(x, y)\n    } else {\n     \
    \   choose_num(y, x)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x <= y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n  \
    \  }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut\
    \ x: isize = 0;\n    let mut y: isize = 0;\n    \n    while x < y {\n        (x,\
    \ y) = (x + y, x + y)\n    }\n    \n    if x == y {\n        x\n    } else {\n\
    \        -1\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n\
    \        choose_num(x, y)\n    }", "    if x > y {\n        (x, y) = (y, x)\n\
    \    }\n    \n    let mut max_num: isize = 0;\n    let mut min_num: isize = 0;\n\
    \    \n    for i in 0..x {\n        if i % 2 == 0 {\n            max_num = i;\n\
    \        }\n    }\n    for i in 0..y {\n        if i % 2 == 0 {\n            min_num\
    \ = i;\n        }\n    }\n    \n    if max_num == min_num {\n        return -1;\n\
    \    }\n    \n    for i in 0..x {\n        if i % 2 == 0 {\n            if max_num\
    \ < i {\n                max_num = i;\n            }\n        }\n    }\n    for\
    \ i in 0..y {\n        if i % 2 == 0 {\n            if min_num > i {\n       \
    \         min_num = i;\n            }\n        }\n    }\n    \n    if max_num\
    \ == min_num {\n        return -1;\n    }\n    \n    return max_num;", "    if\
    \ x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x <= y {\n        choose_num(y, x)\n    } else {\n     \
    \   choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x > y {\n        (x, y) =\
    \ (y, x)\n    }\n    \n    let mut even = x;\n    let mut odd = y;\n    \n   \
    \ while even > 0 && odd > 0 {\n        if even % 2 == 0 {\n            even /=\
    \ 2;\n        } else {\n            odd /= 2;\n        }\n    }\n    \n    if\
    \ even > 0 {\n        even\n    } else {\n        odd\n    }", "    if x < y {\n\
    \        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", " \
    \   if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    let\
    \ mut num: isize = 1;\n    while num < y {\n        if num % 2 == 0 {\n      \
    \      num = num * 3 + 1\n        } else {\n            num = num * 3\n      \
    \  }\n    }\n    return num", "    if x <= y {\n        choose_num(y, x)\n   \
    \ } else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n  \
    \  }", "    if x <= y {\n        choose_num(x, y)\n    } else {\n        choose_num(y,\
    \ x)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x <= y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n  \
    \  }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x > y {\n        (x, y) = (y, x)\n    }\n\
    \    \n    let mut num: isize = 0;\n    \n    while num < x || num < y {\n   \
    \     if num % 2 == 0 {\n            num /= 2;\n        } else {\n           \
    \ num = num * 3 + 1;\n        }\n    }\n    \n    num", "    let mut result =\
    \ x;\n    while result <= y {\n        if result % 2 == 0 {\n            result\
    \ = result + 1;\n        } else {\n            result = result + 2;\n        }\n\
    \    }\n    if result == x {\n        result = -1;\n    }\n    result", "    let\
    \ mut num: isize = 0;\n    while num < x || num < y {\n        if num % 2 == 0\
    \ {\n            num = num + 2;\n        } else {\n            num = num + 1;\n\
    \        }\n    }\n    num", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x <= y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ <= y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n \
    \   }", "    if x > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut num:\
    \ isize = 0;\n    \n    while num < x {\n        if num % 2 == 0 {\n         \
    \   num = num + 2\n        } else {\n            num = num + 1\n        }\n  \
    \  }\n    \n    while num > y {\n        if num % 2 == 0 {\n            num =\
    \ num - 2\n        } else {\n            num = num - 1\n        }\n    }\n   \
    \ \n    num", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x > y {\n        (x, y) = (y, x)\n    }\n\
    \    \n    let mut even = x;\n    let mut odd = y;\n    \n    while even > 0 &&\
    \ odd > 0 {\n        if even % 2 == 0 {\n            even /= 2;\n        } else\
    \ {\n            odd /= 2;\n        }\n    }\n    \n    if even > 0 {\n      \
    \  even\n    } else {\n        -1\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ <= y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n \
    \   }", "    let mut num: isize = 0;\n    while num < x || num < y {\n       \
    \ if num % 2 == 0 {\n            num = num + 2;\n        } else {\n          \
    \  num = num + 1;\n        }\n    }\n    return num;", "    if x < y {\n     \
    \   choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if\
    \ x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    let mut num = x;\n    while num < y {\n        if num % 2 == 0 {\n\
    \            num = num + 2;\n        } else {\n            num = num + 1;\n  \
    \      }\n    }\n    num", "    if x <= y {\n        return -1\n    }\n    if\
    \ x == y {\n        return x\n    }\n    if x % 2 == 0 {\n        return choose_num(x\
    \ / 2, y)\n    }\n    if y % 2 == 0 {\n        return choose_num(x, y / 2)\n \
    \   }\n    if x > y {\n        return choose_num(x / 2, y)\n    }\n    if y >\
    \ x {\n        return choose_num(x, y / 2)\n    }\n    return -1", "    if x <\
    \ y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }",
  "    if x <= y {\n        choose_num(x, y)\n    } else {\n        choose_num(y,\
    \ x)\n    }", "    if x <= y {\n        choose_num(x, y)\n    } else {\n     \
    \   choose_num(y, x)\n    }", "    if x <= y {\n        choose_num(y, x)\n   \
    \ } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n        choose_num(x,\
    \ y)\n    } else {\n        choose_num(y, x)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut even = x;\n    let\
    \ mut odd = y;\n    \n    while even > 0 && odd > 0 {\n        if even % 2 ==\
    \ 0 {\n            even /= 2;\n        } else {\n            odd /= 2;\n     \
    \   }\n    }\n    \n    if even > 0 {\n        even\n    } else {\n        odd\n\
    \    }", "    let mut num: isize = 0;\n    while num < x || num < y {\n      \
    \  if num % 2 == 0 {\n            num = num + 2;\n        } else {\n         \
    \   num = num + 1;\n        }\n    }\n    num", "    if x <= y {\n        return\
    \ -1\n    }\n    \n    let mut num: isize = 0\n    \n    while num < x {\n   \
    \     num = num + y\n    }\n    \n    num", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    let mut num: isize\
    \ = 0;\n    let mut flag = false;\n    while num < y {\n        if flag {\n  \
    \          flag = false;\n        } else {\n            if num % 2 == 0 {\n  \
    \              num += 1;\n            } else {\n                flag = true;\n\
    \            }\n        }\n    }\n    if flag {\n        -1\n    } else {\n  \
    \      num\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n\
    \        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n\
    \    } else {\n        choose_num(x, y)\n    }", "    let mut num: isize = 0;\n\
    \    while num < x || num < y {\n        if num % 2 == 0 {\n            num =\
    \ num + 2;\n        } else {\n            num = num + 1;\n        }\n    }\n \
    \   return num;", "    if x < y {\n        choose_num(y, x)\n    } else {\n  \
    \      choose_num(x, y)\n    }", "    if x > y {\n        (x, y) = (y, x)\n  \
    \  }\n    \n    let mut num: isize = 0;\n    \n    while num < x {\n        num\
    \ = num + y;\n    }\n    \n    while num > y {\n        num = num - x;\n    }\n\
    \    \n    num", "    if x < y {\n        choose_num(y, x)\n    } else {\n   \
    \     choose_num(x, y)\n    }", "    if x <= y {\n        choose_num(y, x)\n \
    \   } else {\n        choose_num(x, y)\n    }", "    let mut num = x;\n    while\
    \ num < y {\n        if num % 2 == 0 {\n            num = num + 1;\n        }\
    \ else {\n            num = num - 1;\n        }\n    }\n    num", "    let mut\
    \ result = x;\n    let mut even = 1;\n    while even <= y {\n        if even %\
    \ 2 == 0 {\n            result = even;\n            even += 1;\n        }\n  \
    \      even += 1;\n    }\n    result", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    let mut num = x;\n\
    \    while num < y {\n        if num % 2 == 0 {\n            num = num + 2;\n\
    \        } else {\n            num = num + 1;\n        }\n    }\n    if num >\
    \ y {\n        -1\n    } else {\n        num\n    }", "    if x <= y {\n     \
    \   return -1\n    }\n    let mut num: isize = 0\n    while num < x {\n      \
    \  num = num + y\n    }\n    while num > y {\n        num = num - x\n    }\n \
    \   num", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x <= y {\n        return -1\n\
    \    }\n    let mut num: isize = 0\n    for i in 1..y {\n        if x % i == 0\
    \ {\n            num = i\n        }\n    }\n    num", "    let mut num = x;\n\
    \    while num < y {\n        if num % 2 == 0 {\n            num = num * 3 + 1\n\
    \        } else {\n            num = num * 3\n        }\n    }\n    num", "  \
    \  if x > y {\n        (x, y) = (y, x)\n    }\n    let mut num: isize = (x as\
    \ isize) + (y as isize);\n    let mut even: isize = 0;\n    let mut odd: isize\
    \ = 0;\n    while num > 0 {\n        if num % 2 == 0 {\n            even += 1;\n\
    \        } else {\n            odd += 1;\n        }\n        num -= 1;\n    }\n\
    \    if even > odd {\n        even\n    } else {\n        odd\n    }", "    if\
    \ x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x <= y {\n        if x % 2 == 0 {\n            x\n        } else\
    \ {\n            y\n        }\n    } else {\n        if y % 2 == 0 {\n       \
    \     y\n        } else {\n            x\n        }\n    }", "    if x <= y {\n\
    \        return -1\n    }\n    let mut max_num: isize = 0;\n    let mut min_num:\
    \ isize = x;\n    while min_num < y {\n        if max_num < min_num {\n      \
    \      max_num = min_num;\n        }\n        if max_num % 2 == 0 {\n        \
    \    max_num += 1;\n        }\n        else {\n            max_num -= 1;\n   \
    \     }\n        min_num += 1;\n    }\n    return max_num;", "    if x < y {\n\
    \        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", " \
    \   if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    let mut num: isize = 0;\n    let mut even: isize = 0;\n   \
    \ let mut odd: isize = 0;\n    while num < y {\n        if even < x {\n      \
    \      even = even + 1;\n            num = num + even;\n        } else {\n   \
    \         odd = odd + 1;\n            num = num + odd;\n        }\n    }\n   \
    \ if even > x {\n        even = even - 1;\n        num = num + even;\n    }\n\
    \    if odd > y {\n        odd = odd - 1;\n        num = num + odd;\n    }\n \
    \   if even > x {\n        even = even - 1;\n        num = num + even;\n    }\n\
    \    if odd > y {\n        odd = odd - 1;\n        num = num + odd;\n    }\n \
    \   if even > x {\n        even = even - 1;\n        num = num + even;\n    }\n\
    \    if odd > y {\n        odd = odd - 1;\n        num = num + odd;\n    }\n \
    \   if even > x {\n        even = even - 1;\n        num = num + even;\n    }\n\
    \    if odd > y {\n        odd = odd - 1;\n        num = num + odd;\n    }\n \
    \   if even > x {\n        even = even - 1;\n        num = num + even;\n    }\n\
    \    if odd > y {\n        odd = odd - 1;\n        num = num + odd;\n    }\n \
    \   if even > x {\n        even = even - 1;\n        num = num + even;\n    }\n\
    \    if odd > y {\n        odd = odd - 1;\n        num = num + odd;\n    }\n \
    \   if even > x {\n        even = even - 1;\n        num = num + even;\n    }\n\
    \    if odd > y {\n        odd = odd - 1;\n        num = num + odd;\n    }\n \
    \   if even > x {\n        even = even - 1;\n        num = num + even;\n    }\n\
    \    if odd > y {\n        odd = odd - 1;\n        num = num + odd;\n    }\n \
    \   if even > x {\n        even = even - 1;\n        num = num + even;\n    }\n\
    \    if odd > y {\n        odd = odd - 1;\n        num = num + odd;\n    }\n \
    \   if even > x {\n        even = even - 1;\n        num = num + even;\n    }\n\
    \    if odd > y {\n        odd = odd - 1;\n        num = num + odd;\n    }", " \
    \   if x > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut even = x;\n\
    \    let mut odd = y;\n    \n    while even > 0 && odd > 0 {\n        if even\
    \ % 2 == 0 {\n            even /= 2;\n        } else {\n            odd /= 2;\n\
    \        }\n    }\n    \n    if even > 0 {\n        even\n    } else {\n     \
    \   -1\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n    \
    \    choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n   \
    \ } else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    let\
    \ mut num = x;\n    while num < y {\n        if num % 2 == 0 {\n            num\
    \ = num + 2;\n        } else {\n            num = num + 1;\n        }\n    }\n\
    \    if num == y {\n        num\n    } else {\n        -1\n    }", "    if x <\
    \ y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }",
  "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    let mut num: isize = 0;\n    while num < x || num < y {\n \
    \       if num % 2 == 0 {\n            num = num + 2;\n        } else {\n    \
    \        num = num + 1;\n        }\n    }\n    num", "    if x < y {\n       \
    \ choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ <= y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n \
    \   }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x <= y {\n        if x % 2\
    \ == 0 {\n            x\n        } else {\n            y\n        }\n    } else\
    \ {\n        if y % 2 == 0 {\n            y\n        } else {\n            x\n\
    \        }\n    }", "    let mut max_num: isize = 0;\n    let mut min_num = y;\n\
    \    while min_num < x {\n        max_num = max_num * 2 + 1;\n        min_num\
    \ = min_num * 2 + 1;\n    }\n    if max_num == x {\n        max_num\n    } else\
    \ {\n        -1\n    }", "    if x < y {\n        choose_num(y, x)\n    } else\
    \ {\n        choose_num(x, y)\n    }", "    if x <= y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    let\
    \ mut even: isize = 0;\n    let mut odd: isize = 0;\n    while even < y && odd\
    \ < x {\n        if x % 2 == 0 {\n            even += 1;\n        } else {\n \
    \           odd += 1;\n        }\n    }\n    if even > y {\n        even = -1\n\
    \    } else if odd > x {\n        odd = -1\n    }\n    even", "    if x <= y {\n\
    \        choose_num(x, y)\n    } else {\n        choose_num(y, x)\n    }", " \
    \   if x <= y {\n        choose_num(x, y)\n    } else {\n        choose_num(y,\
    \ x)\n    }", "    if x > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut\
    \ num = 1\n    \n    while num < y {\n        if x % 2 == 0 {\n            num\
    \ += 1\n        }\n        \n        x /= 2\n    }\n    \n    num", "    if x\
    \ <= y {\n        return -1\n    }\n    \n    let mut num: isize = 0\n    \n \
    \   for i in 0..x {\n        if i % 2 == 0 {\n            num = i\n          \
    \  break\n        }\n    }\n    \n    for i in 0..y {\n        if i % 2 == 0 {\n\
    \            num = i\n            break\n        }\n    }\n    \n    return num",
  "    if x > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut num: isize =\
    \ 0;\n    \n    while num < x {\n        num = num + y;\n    }\n    \n    while\
    \ num > y {\n        num = num - x;\n    }\n    \n    num", "    if x <= y {\n\
    \        return -1\n    }\n    if x == y {\n        return x\n    }\n    if x\
    \ % 2 == 0 {\n        return choose_num(x / 2, y)\n    }\n    if y % 2 == 0 {\n\
    \        return choose_num(x, y / 2)\n    }\n    if x % 2 == y % 2 {\n       \
    \ return choose_num(x / 2, y / 2)\n    }\n    if x > y {\n        return choose_num(x\
    \ / 2, y)\n    }\n    return choose_num(x, y / 2)", "    let mut num = x;\n  \
    \  while num < y {\n        if num % 2 == 0 {\n            num = num + 2;\n  \
    \      } else {\n            num = num + 1;\n        }\n    }\n    num", "   \
    \ if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n\
    \    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    let mut even = x;\n    let mut odd = y;\n    \n    while even\
    \ > 0 && odd > 0 {\n        if even % 2 == 0 {\n            even /= 2;\n     \
    \   } else {\n            odd /= 2;\n        }\n    }\n    \n    if even > 0 {\n\
    \        even\n    } else {\n        odd\n    }", "    if x <= y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x <= y {\n     \
    \   choose_num(x, y)\n    } else {\n        choose_num(y, x)\n    }", "    if\
    \ x > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut num: isize = 0;\n\
    \    \n    while num < x {\n        num <<= 1;\n        num |= 1;\n    }\n   \
    \ \n    while num < y {\n        num <<= 1;\n        num |= 1;\n    }\n    \n\
    \    num", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x < y {\n        choose_num(y, x)\n    } else {\n      \
    \  choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n    }\
    \ else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x > y {\n      \
    \  (x, y) = (y, x)\n    }\n    \n    let mut even = x;\n    let mut odd = y;\n\
    \    \n    while even > 0 && odd > 0 {\n        if even % 2 == 0 {\n         \
    \   even /= 2;\n        } else {\n            odd /= 2;\n        }\n    }\n  \
    \  \n    if even > 0 {\n        even\n    } else {\n        odd\n    }", "   \
    \ if x > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut num: isize = 0;\n\
    \    let mut even: isize = 0;\n    \n    while even < y {\n        if num < x\
    \ {\n            even = even + 1;\n            num = num + 2;\n        } else\
    \ {\n            even = even + 2;\n            num = num + 4;\n        }\n   \
    \ }\n    \n    if even > y {\n        even = -1;\n    }\n    \n    even", "  \
    \  if x > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut x = x;\n    let\
    \ mut y = y;\n    \n    while x < y {\n        if x % 2 == 0 {\n            x\
    \ = x + 1;\n        } else {\n            y = y - 1;\n        }\n    }\n    \n\
    \    if x == y {\n        x\n    } else {\n        -1\n    }", "    let mut num:\
    \ isize = 0;\n    let mut even: isize = 0;\n    let mut odd: isize = 0;\n    while\
    \ num < y {\n        if even > y {\n            even = even * 2;\n           \
    \ odd = 0;\n        }\n        if even < x {\n            even = even * 2;\n \
    \           odd = 0;\n        }\n        if even + odd > y {\n            even\
    \ = even * 2;\n            odd = 0;\n        }\n        if even + odd < x {\n\
    \            even = even * 2;\n            odd = 0;\n        }\n        num =\
    \ num + 1;\n    }\n    if even > y {\n        even = even * 2;\n        odd =\
    \ 0;\n    }\n    if even < x {\n        even = even * 2;\n        odd = 0;\n \
    \   }\n    if even + odd > y {\n        even = even * 2;\n        odd = 0;\n \
    \   }\n    if even + odd < x {\n        even = even * 2;\n        odd = 0;\n \
    \   }\n    even", "    if x > y {\n        (x, y) = (y, x)\n    }\n    \n    let\
    \ mut num: isize = 0;\n    \n    for i in 1..y {\n        if x % i == 0 {\n  \
    \          num = i;\n            break;\n        }\n    }\n    \n    if num ==\
    \ 0 {\n        -1\n    } else {\n        num\n    }", "    if x <= y {\n     \
    \   if x % 2 == 0 {\n            return x\n        } else {\n            return\
    \ y\n        }\n    } else {\n        if y % 2 == 0 {\n            return y\n\
    \        } else {\n            return x\n        }\n    }", "    if x > y {\n\
    \        (x, y) = (y, x)\n    }\n    let mut num: isize = 0;\n    let mut even:\
    \ isize = 0;\n    let mut odd: isize = 0;\n    while num < y {\n        if even\
    \ < x {\n            even += 1;\n            num += 1\n        } else {\n    \
    \        odd += 1;\n        }\n    }\n    if even > x {\n        even = x - even\n\
    \    }\n    if odd > y {\n        odd = y - odd\n    }\n    if even > odd {\n\
    \        even = odd\n    }\n    even", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n  \
    \  }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }", "    if x > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut\
    \ result = x;\n    \n    while result < y {\n        result *= 2;\n        if\
    \ result > y {\n            return -1;\n        }\n    }\n    \n    result", " \
    \   if x > y {\n        (x, y) = (y, x)\n    }\n    \n    let mut max_num = x;\n\
    \    let mut min_num = y;\n    \n    while max_num < min_num {\n        max_num\
    \ += 2;\n        min_num -= 2;\n    }\n    \n    while max_num % 2 == 0 {\n  \
    \      max_num += 1;\n    }\n    \n    while min_num % 2 == 0 {\n        min_num\
    \ -= 1;\n    }\n    \n    if max_num == min_num {\n        return -1\n    }\n\
    \    \n    max_num", "    if x < y {\n        choose_num(y, x)\n    } else {\n\
    \        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y, x)\n\
    \    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n        choose_num(y,\
    \ x)\n    } else {\n        choose_num(x, y)\n    }", "    if x < y {\n      \
    \  choose_num(y, x)\n    } else {\n        choose_num(x, y)\n    }", "    if x\
    \ < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x, y)\n  \
    \  }", "    if x < y {\n        choose_num(y, x)\n    } else {\n        choose_num(x,\
    \ y)\n    }"]
stop_tokens:
- "\n}"

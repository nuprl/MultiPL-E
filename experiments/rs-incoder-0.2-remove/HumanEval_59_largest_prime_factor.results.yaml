language: rs
name: HumanEval_59_largest_prime_factor
results:
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    let mut\
    \ prime_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n       \
    \     prime_factor = i;\n            i += 1;\n        }\n        else {\n    \
    \        i += 1;\n        }\n    }\n    prime_factor\n}\n\nfn main() {\n    let\
    \ candidate = largest_prime_factor;\n    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27),\
    \ 3);\n    assert_eq!(candidate(63), 7);\n    assert_eq!(candidate(330), 11);\n\
    \    assert_eq!(candidate(13195), 29);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmp0kfpc6d9.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_prime_factor;\n\
    \    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63),\
    \ 7);\n    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpw9ywwa9y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_prime_factor;\n\
    \    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63),\
    \ 7);\n    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpw9ywwa9y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 1
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    let mut\
    \ factor = 1;\n    while i <= n {\n        if n % i == 0 {\n            factor\
    \ *= i;\n            n /= i;\n        }\n        i += 1;\n    }\n    factor\n\
    }\n\nfn main() {\n    let candidate = largest_prime_factor;\n    assert_eq!(candidate(15),\
    \ 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63), 7);\n\
    \    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `n`\n --> /tmp/tmp5c0x71sx.rs:8:13\n\
    \  |\n2 | fn largest_prime_factor(n: isize) -> isize {\n  |                  \
    \       - help: consider making this binding mutable: `mut n`\n...\n8 |      \
    \       n /= i;\n  |             ^^^^^^ cannot assign to immutable argument\n\n\
    error: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659805570
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_prime_factor;\n\
    \    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63),\
    \ 7);\n    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpw9ywwa9y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    let mut\
    \ prime_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n       \
    \     prime_factor = i;\n            i += 1;\n        } else {\n            i\
    \ += 1;\n        }\n    }\n    prime_factor\n}\n\nfn main() {\n    let candidate\
    \ = largest_prime_factor;\n    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27),\
    \ 3);\n    assert_eq!(candidate(63), 7);\n    assert_eq!(candidate(330), 11);\n\
    \    assert_eq!(candidate(13195), 29);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmplf9x3usr.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_prime_factor;\n\
    \    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63),\
    \ 7);\n    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpw9ywwa9y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_prime_factor;\n\
    \    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63),\
    \ 7);\n    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpw9ywwa9y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_prime_factor;\n\
    \    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63),\
    \ 7);\n    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpw9ywwa9y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_prime_factor;\n\
    \    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63),\
    \ 7);\n    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpw9ywwa9y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    let mut\
    \ prime_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n       \
    \     prime_factor = i;\n            i += 1;\n        }\n        else {\n    \
    \        i += 1;\n        }\n    }\n    prime_factor\n}\n\nfn main() {\n    let\
    \ candidate = largest_prime_factor;\n    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27),\
    \ 3);\n    assert_eq!(candidate(63), 7);\n    assert_eq!(candidate(330), 11);\n\
    \    assert_eq!(candidate(13195), 29);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmp0kfpc6d9.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: -1
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            i += 1;\n        } else {\n\
    \            i -= 1;\n        }\n    }\n    i\n}\n\nfn main() {\n    let candidate\
    \ = largest_prime_factor;\n    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27),\
    \ 3);\n    assert_eq!(candidate(63), 7);\n    assert_eq!(candidate(330), 11);\n\
    \    assert_eq!(candidate(13195), 29);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659805576
- exit_code: -1
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            i += 1;\n        } else {\n\
    \            i -= 1;\n        }\n    }\n    i\n}\n\nfn main() {\n    let candidate\
    \ = largest_prime_factor;\n    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27),\
    \ 3);\n    assert_eq!(candidate(63), 7);\n    assert_eq!(candidate(330), 11);\n\
    \    assert_eq!(candidate(13195), 29);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659805576
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_prime_factor;\n\
    \    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63),\
    \ 7);\n    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpw9ywwa9y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 1
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut prime_factors = vec![1usize;\
    \ n];\n    let mut i = 2;\n    while prime_factors[i] < n {\n        if n % prime_factors[i]\
    \ == 0 {\n            i += 1;\n        } else {\n            prime_factors[i]\
    \ = n;\n            break;\n        }\n    }\n    prime_factors[i]\n}\n\nfn main()\
    \ {\n    let candidate = largest_prime_factor;\n    assert_eq!(candidate(15),\
    \ 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63), 7);\n\
    \    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0308]: mismatched types\n --> /tmp/tmpfar40480.rs:3:42\n  |\n3 |\
    \     let mut prime_factors = vec![1usize; n];\n  |                          \
    \                ^ expected `usize`, found `isize`\n  |\nhelp: you can convert\
    \ an `isize` to a `usize` and panic if the converted value doesn't fit\n  |\n\
    3 |     let mut prime_factors = vec![1usize; n.try_into().unwrap()];\n  |    \
    \                                      ~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0308]:\
    \ mismatched types\n --> /tmp/tmpfar40480.rs:5:30\n  |\n5 |     while prime_factors[i]\
    \ < n {\n  |                              ^ expected `usize`, found `isize`\n\
    \  |\nhelp: you can convert an `isize` to a `usize` and panic if the converted\
    \ value doesn't fit\n  |\n5 |     while prime_factors[i] < n.try_into().unwrap()\
    \ {\n  |                              ~~~~~~~~~~~~~~~~~~~~~\n\nerror[E0308]: mismatched\
    \ types\n --> /tmp/tmpfar40480.rs:6:16\n  |\n6 |         if n % prime_factors[i]\
    \ == 0 {\n  |                ^^^^^^^^^^^^^^^^ expected `isize`, found `usize`\n\
    \nerror[E0277]: cannot mod `isize` by `usize`\n --> /tmp/tmpfar40480.rs:6:14\n\
    \  |\n6 |         if n % prime_factors[i] == 0 {\n  |              ^ no implementation\
    \ for `isize % usize`\n  |\n  = help: the trait `Rem<usize>` is not implemented\
    \ for `isize`\n\nerror[E0308]: mismatched types\n --> /tmp/tmpfar40480.rs:9:32\n\
    \  |\n9 |             prime_factors[i] = n;\n  |                             \
    \   ^ expected `usize`, found `isize`\n\nerror[E0308]: mismatched types\n  -->\
    \ /tmp/tmpfar40480.rs:13:5\n   |\n2  | fn largest_prime_factor(n: isize) -> isize\
    \ {\n   |                                      ----- expected `isize` because\
    \ of return type\n...\n13 |     prime_factors[i]\n   |     ^^^^^^^^^^^^^^^^ expected\
    \ `isize`, found `usize`\n\nerror: aborting due to 6 previous errors\n\nSome errors\
    \ have detailed explanations: E0277, E0308.\nFor more information about an error,\
    \ try `rustc --explain E0277`.\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_prime_factor;\n\
    \    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63),\
    \ 7);\n    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpw9ywwa9y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_prime_factor;\n\
    \    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63),\
    \ 7);\n    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpw9ywwa9y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_prime_factor;\n\
    \    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63),\
    \ 7);\n    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpw9ywwa9y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    let mut\
    \ max_factor = 1;\n    while i * i <= n {\n        if n % i == 0 {\n         \
    \   max_factor = i;\n        }\n        i += 1;\n    }\n    max_factor\n}\n\n\
    fn main() {\n    let candidate = largest_prime_factor;\n    assert_eq!(candidate(15),\
    \ 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63), 7);\n\
    \    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpqfyniwez.rs:16:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571
- exit_code: 101
  program: "/// Return the largest prime factor of n. Assume n > 1 and is not a prime.\n\
    fn largest_prime_factor(n: isize) -> isize {\n    let mut i = 2;\n    while i\
    \ * i <= n {\n        if n % i == 0 {\n            return i;\n        }\n    \
    \    i += 1;\n    }\n    n\n}\n\nfn main() {\n    let candidate = largest_prime_factor;\n\
    \    assert_eq!(candidate(15), 5);\n    assert_eq!(candidate(27), 3);\n    assert_eq!(candidate(63),\
    \ 7);\n    assert_eq!(candidate(330), 11);\n    assert_eq!(candidate(13195), 29);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `5`', /tmp/tmpw9ywwa9y.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659805571

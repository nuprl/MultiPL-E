name: HumanEval_71_triangle_area
language: rs
prompt: "/// Given the lengths of the three sides of a triangle. Return the area of\n\
  /// the triangle rounded to 2 decimal points if the three sides form a valid triangle.\
  \ \n/// Otherwise return -1\n/// Three sides make a valid triangle when the sum\
  \ of any two sides is greater \n/// than the third side.\n/// Example:\nfn triangle_area(a:\
  \ isize, b: isize, c: isize) -> f64 {\n"
tests: "}\n\nfn main() {\n    let candidate = triangle_area;\n    assert_eq!(candidate(3,\
  \ 4, 5), 6.0);\n    assert_eq!(candidate(1, 2, 10), -1.0);\n    assert_eq!(candidate(4,\
  \ 8, 5), 8.18);\n    assert_eq!(candidate(2, 2, 2), 1.73);\n    assert_eq!(candidate(1,\
  \ 2, 3), -1.0);\n    assert_eq!(candidate(10, 5, 7), 16.25);\n    assert_eq!(candidate(2,\
  \ 6, 3), -1.0);\n    assert_eq!(candidate(1, 1, 1), 0.43);\n    assert_eq!(candidate(2,\
  \ 2, 10), -1.0);\n}\n"
completions: ["    if a + b > c {\n        return -1.0\n    }\n    if a + c > b {\n\
    \        return -1.0\n    }\n    if b + c > a {\n        return -1.0\n    }\n\
    \    let area = (a * b + c * a - b * c) / (2.0 * a)\n    return area.round()",
  "    if a + b > c {\n        return -1\n    }\n    if a + c > b {\n        return\
    \ -1\n    }\n    if b + c > a {\n        return -1\n    }\n    let area = (a *\
    \ b + c * a + b * c) / 2;\n    if area > 0 {\n        return area.round()\n  \
    \  } else {\n        return -1\n    }", "    let mut area: f64 = 0.0;\n    if\
    \ a + b > c {\n        area = (a * b) / c;\n    } else {\n        area = ((a +\
    \ b) * c) / b;\n    }\n    if area > 1.0 {\n        area = 1.0;\n    }\n    area",
  "    match a + b + c {\n        0 => 0.,\n        _ => if a + b > c { \n       \
    \     (a * b) / c\n        } else {\n            (a * c) / b\n        }\n    }",
  "    let mut s = 0.0;\n    if a + b > c {\n        s = s + (b - c) * (b + c);\n\
    \    }\n    if a + c > b {\n        s = s + (c - b) * (c + b);\n    }\n    if\
    \ b + c > a {\n        s = s + (a - b) * (a + b);\n    }\n    s / 2.0", "    match\
    \ a + b + c {\n        0 => 0.0,\n        1 => 1.0,\n        _ => -1.0,\n    }",
  "    match a + b + c {\n        0 => 0.,\n        1 => 1.,\n        _ => 0.,\n \
    \   }", "    let mut s = 0.0;\n    let mut t = 0.0;\n    let mut u = 0.0;\n  \
    \  let mut v = 0.0;\n    let mut w = 0.0;\n    \n    if a + b > c {\n        s\
    \ = b - c;\n        w = c - (a + b);\n    } else {\n        s = a - c;\n     \
    \   w = a - (a + b);\n    }\n    \n    if s > 0.0 {\n        t = s / 2.0;\n  \
    \      u = w / 2.0;\n        v = u * t;\n    } else {\n        t = w / 2.0;\n\
    \        u = t / 2.0;\n        v = u * t;\n    }\n    \n    if u + v > 1.0 {\n\
    \        return -1.0;\n    }\n    \n    return s * v + w * u;", "    if a + b\
    \ > c {\n        return -1\n    }\n    if a + c > b {\n        return -1\n   \
    \ }\n    if b + c > a {\n        return -1\n    }\n    let mut s = a + b + c;\n\
    \    if s % 2 == 0 {\n        return s / 2\n    }\n    s / 2", "    match a +\
    \ b + c {\n        0 => 0.0\n        1 => 1.0\n        2 => 2.0\n        _ =>\
    \ return -1.0 // not a valid triangle\n    }\n    match a + c {\n        0 =>\
    \ 0.0\n        1 => 1.0\n        2 => 2.0\n        _ => return -1.0 // not a valid\
    \ triangle\n    }\n    match b + c {\n        0 => 0.0\n        1 => 1.0\n   \
    \     2 => 2.0\n        _ => return -1.0 // not a valid triangle\n    }\n    match\
    \ a + b {\n        0 => 0.0\n        1 => 1.0\n        2 => 2.0\n        _ =>\
    \ return -1.0 // not a valid triangle\n    }\n    match b + c {\n        0 =>\
    \ 0.0\n        1 => 1.0\n        2 => 2.0\n        _ => return -1.0 // not a valid\
    \ triangle\n    }\n    match a + c {\n        0 => 0.0\n        1 => 1.0\n   \
    \     2 => 2.0\n        _ => return -1.0 // not a valid triangle\n    }\n    match\
    \ a + b {\n        0 => 0.0\n        1 => 1.0\n        2 => 2.0\n        _ =>\
    \ return -1.0 // not a valid triangle\n    }\n    match b + a {\n        0 =>\
    \ 0.0\n        1 => 1.0\n        2 => 2.0\n        _ => return -1.0 // not a valid\
    \ triangle\n    }\n    match a + c {\n        0 => 0.0\n        1 => 1.0\n   \
    \     2 => 2.0\n        _ => return -1.0 // not a valid triangle\n    }\n    match\
    \ b + a {\n        0 => 0.0\n        1 => 1.0\n        2 => 2.0\n        _ =>\
    \ return -1.0 // not a valid triangle\n    }\n    match c + a {\n        0 =>\
    \ 0.0\n        1 => 1.0\n        2 => 2.0\n        _ => return -1.0 // not a valid\
    \ triangle\n    }\n    match a + b {\n        0 => 0.0\n        1 => 1.0\n   \
    \     2 => 2.0\n        _ => return -1.0 // not a valid triangle\n    }\n    match\
    \ c + a {\n        0 => 0.0\n        1 => 1.0\n        2 => 2.0\n        _ =>\
    \ return -1.0 // not a valid triangle\n    }\n    match b + c {\n        0 =>\
    \ 0.0\n        1 => 1.0\n        2 => 2.0\n        _ => return -1.0 // not a valid\
    \ triangle\n    }\n    match c + b {\n        0 => 0.0\n        1 => 1.0\n   \
    \     2 => 2.0\n        _ => return -1.0 // not a valid triangle\n    }", "  \
    \  let mut sum: f64 = a + b + c;\n    if sum < b {\n        sum = b;\n    }\n\
    \    if sum < c {\n        sum = c\n    }\n    if sum < a {\n        sum = a\n\
    \    }\n    sum", "    if a + b > c {\n        return -1.0;\n    }\n    if a +\
    \ c > b {\n        return -1.0;\n    }\n    if b + c > a {\n        return -1.0;\n\
    \    }\n    let mut s = (a + b + c) / 2.0;\n    if s > 0.0 {\n        return s\
    \ * s;\n    }\n    return -1.0;", "    match a + b + c {\n        0 => 0.,\n \
    \       1 => 1.,\n        _ => 0.,\n    }", "    let mut s = a + b + c;\n    if\
    \ s > 0 {\n        s /= 2;\n    }\n    if s == 0 || s == 1 {\n        return 0.0;\n\
    \    }\n    if s == 2 {\n        return 1.0;\n    }\n    if s == 3 {\n       \
    \ return 0.0;\n    }\n    if s == 4 {\n        return 1.0;\n    }\n    if s ==\
    \ 5 {\n        return 0.0;\n    }\n    if s == 6 {\n        return 1.0;\n    }\n\
    \    if s == 7 {\n        return 0.0;\n    }\n    if s == 8 {\n        return\
    \ 1.0;\n    }\n    if s == 9 {\n        return 0.0;\n    }\n    if s == 10 {\n\
    \        return 1.0;\n    }\n    if s == 11 {\n        return 0.0;\n    }\n  \
    \  if s == 12 {\n        return 1.0;\n    }\n    if s == 13 {\n        return\
    \ 0.0;\n    }\n    if s == 14 {\n        return 1.0;\n    }\n    if s == 15 {\n\
    \        return 0.0;\n    }\n    if s == 16 {\n        return 1.0;\n    }\n  \
    \  if s == 17 {\n        return 0.0;\n    }\n    if s == 18 {\n        return\
    \ 1.0;\n    }\n    if s == 19 {\n        return 0.0;\n    }\n    if s == 20 {\n\
    \        return 1.0;\n    }\n    if s == 21 {\n        return 0.0;\n    }\n  \
    \  if s == 22 {\n        return 1.0;\n    }\n    if s == 23 {\n        return\
    \ 0.0;\n    }\n    if s == 24 {\n        return 1.0;\n    }\n    if s == 25 {\n\
    \        return 0.0;\n    }\n    if s == 26 {\n        return 1.0;\n    }\n  \
    \  if s == 27 {\n        return 0.0;\n    }\n    if s == 28 {\n        return\
    \ 1.0;\n    }\n    if s == 29 {\n        return 0.0;\n    }\n    if s == 30 {\n\
    \        return 1.0;\n    }\n    if s == 31 {\n        return 0.0;\n    }\n  \
    \  if s == 32 {\n        return 1.0;\n    }\n    if s == 33 {\n        return\
    \ 0.0;\n    }\n    if s == 34 {\n        return 1.0;\n    }\n    if s == 35 {\n\
    \        return 0.0;\n    }\n    if s == 36 {\n        return 1.0;\n    }\n  \
    \  if s == 37 {\n        return 0.0;\n    }\n    if s == 38 {\n        return\
    \ 1.0;\n    }\n    if s == 39 {\n        return 0.0;\n    }\n    if s == 40 {\n\
    \        return 1.0;\n    }\n    if s == 41 {\n        return 0.0;\n    }\n  \
    \  if s == 42 {\n        return 1.0;\n    }\n    if s == 43 {\n        return\
    \ 0.0;\n    }\n    if s == 44 {\n        return 1.0;\n    }\n    if s == 45 {\n\
    \        return 0.0;\n    }", "    match a + b + c {\n        0 => 0.0,\n    \
    \    _ => if a + b > c { \n            (a * b) / c\n        } else {\n       \
    \     -1.0\n        }\n    }", "    if a + b > c {\n        return -1\n    }\n\
    \    if a + c > b {\n        return -1\n    }\n    if b + c > a {\n        return\
    \ -1\n    }\n    let mut area = 0.0;\n    area = area + (a + b + c) / 2.0;\n \
    \   area = area - (a + b) * (b + c) / 2.0;\n    area = area - (b + c) * (a + c)\
    \ / 2.0;\n    area = area / 2.0;\n    area = area / 3.0;\n    area = area / 4.0;\n\
    \    area = area / 5.0;\n    area = area / 6.0;\n    area = area / 7.0;\n    area\
    \ = area / 8.0;\n    area = area / 9.0;\n    area = area / 10.0;\n    area = area\
    \ / 11.0;\n    area = area / 12.0;\n    area = area / 13.0;\n    area = area /\
    \ 14.0;\n    area = area / 15.0;\n    area = area / 16.0;\n    area = area / 17.0;\n\
    \    area = area / 18.0;\n    area = area / 19.0;\n    area = area / 20.0;\n \
    \   area = area / 21.0;\n    area = area / 22.0;\n    area = area / 23.0;\n  \
    \  area = area / 24.0;\n    area = area / 25.0;\n    area = area / 26.0;\n   \
    \ area = area / 27.0;\n    area = area / 28.0;\n    area = area / 29.0;\n    area\
    \ = area / 30.0;\n    area = area / 31.0;\n    area = area / 32.0;\n    area =\
    \ area / 33.0;\n    area = area / 34.0;\n    area = area / 35.0;\n    area = area\
    \ / 36.0;\n    area = area / 37.0;\n    area = area / 38.0;\n    area = area /\
    \ 39.0;\n    area = area / 40.0;\n    area = area / 41.0;\n    area = area / 42.0;\n\
    \    area = area / 43.0;\n    area = area / 44.0;\n    area = area / 45.0;\n \
    \   area = area / 46.0;\n    area = area / 47.0;\n    area = area / 48.0;\n  \
    \  area = area / 49.0;\n    area = area / 50.0;\n    area = area / 51.0;\n   \
    \ area = area / 52.0;\n    area = area / 53.0;\n    area = area / 54.0;\n    area\
    \ = area / 55.0;\n    area = area / 56.0;\n    area = area / 57.0;\n    area =\
    \ area / 58.0;\n    area = area / 59.0;\n    area = area / 60.0;\n    ", "   \
    \ if a + b > c {\n        return -1\n    }\n    if a + c > b {\n        return\
    \ -1\n    }\n    if b + c > a {\n        return -1\n    }\n    let mut s = a +\
    \ b + c;\n    if s % 2 == 0 {\n        return s / 2\n    }\n    s / 2", "    let\
    \ mut s = a + b + c;\n    if s > 0 {\n        s /= 2;\n    }\n    if s > c {\n\
    \        s /= 2;\n    }\n    if s > b {\n        s /= 2;\n    }\n    s", "   \
    \ if a + b > c {\n        return -1\n    }\n    if a + c > b {\n        return\
    \ -1\n    }\n    if b + c > a {\n        return -1\n    }\n    let mut s = (a\
    \ + b + c) / 2;\n    if s == 0 {\n        return -1\n    }\n    let mut area =\
    \ 0.0;\n    while s > 0 {\n        area += s * (s - a) * (s - b) * (s - c);\n\
    \        s /= 2.0;\n    }\n    area /= 3.0;\n    area", "    if a + b > c {\n\
    \        return 0.0;\n    }\n    if a + c > b {\n        return 0.0;\n    }\n\
    \    if b + c > a {\n        return 0.0;\n    }\n    let mut s = 0.0;\n    if\
    \ a + b > c {\n        s = s + (a + b - c) / 2.0;\n    }\n    if a + c > b {\n\
    \        s = s + (a + c - b) / 2.0;\n    }\n    if b + c > a {\n        s = s\
    \ + (b + c - a) / 2.0;\n    }\n    s /= 2.0;\n    s * s"]
stop_tokens:
- "\n}"

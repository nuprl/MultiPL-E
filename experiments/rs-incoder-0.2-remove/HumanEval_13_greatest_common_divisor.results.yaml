language: rs
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = 1;\n    while a\
    \ % greatest_divisor == 0 && b != 0 {\n        greatest_divisor *= b;\n      \
    \  a /= b;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmplryl2dtv.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor > b {\n        greatest_common_divisor -= b;\n    }\n\
    \    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmplfhro7df.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a.clone();\n\
    \    while greatest_common_divisor < b {\n        greatest_common_divisor += a;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpqz0zhhbq.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    if a > b {\n        (a, b) = (b, a)\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    while greatest_common_divisor > b {\n        greatest_common_divisor\
    \ -= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0658]: destructuring assignments are unstable\n --> /tmp/tmp487l1hyy.rs:7:16\n\
    \  |\n7 |         (a, b) = (b, a)\n  |         ------ ^\n  |         |\n  |  \
    \       cannot assign to this expression\n  |\n  = note: see issue #71126 <https://github.com/rust-lang/rust/issues/71126>\
    \ for more information\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0658`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while b != 0 {\n        let (q, r) = divrem(a,\
    \ b);\n        a = b;\n        b = r;\n    }\n    a\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `divrem` in this scope\n --> /tmp/tmp6w_81snk.rs:4:22\n\
    \  |\n4 |         let (q, r) = divrem(a, b);\n  |                      ^^^^^^\
    \ not found in this scope\n\nerror: aborting due to previous error\n\nFor more\
    \ information about this error, try `rustc --explain E0425`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor -=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747730
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor -=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747730
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = a % b;\n    while greatest_common_divisor\
    \ != 0 {\n        greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747730
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = a % b;\n    while\
    \ greatest_divisor != 0 {\n        greatest_divisor = b;\n        b = a % b;\n\
    \        a = greatest_divisor;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpaard47jr.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = a % b;\n  |         ^^^^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \ --> /tmp/tmpaard47jr.rs:7:9\n  |\n2 | fn greatest_common_divisor(a: isize, b:\
    \ isize) -> isize {\n  |                            - help: consider making this\
    \ binding mutable: `mut a`\n...\n7 |         a = greatest_divisor;\n  |      \
    \   ^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to 2 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor > b {\n        greatest_common_divisor -= b;\n    }\n\
    \    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmplfhro7df.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor: isize = 1;\n    let\
    \ mut a_mod_greatest_divisor: isize = 0;\n    let mut b_mod_greatest_divisor:\
    \ isize = 0;\n    while greatest_divisor < a && greatest_divisor < b {\n     \
    \   if a % greatest_divisor == 0 && b % greatest_divisor == 0 {\n            greatest_divisor\
    \ = greatest_divisor + 1;\n            a_mod_greatest_divisor = a_mod_greatest_divisor\
    \ + 1;\n            b_mod_greatest_divisor = b_mod_greatest_divisor + 1;\n   \
    \     } else {\n            greatest_divisor = greatest_divisor + 1;\n       \
    \ }\n    }\n    if greatest_divisor == a {\n        greatest_divisor\n    } else\
    \ {\n        greatest_divisor\n    }\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpv2ipiqtr.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = a;\n    while gcd != 0 {\n  \
    \      if b % gcd == 0 {\n            gcd = b / gcd;\n        } else {\n     \
    \       gcd = gcd / gcd;\n        }\n    }\n    gcd\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747730
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a > 0 && b > 0\
    \ {\n        if a > b {\n            a %= b;\n        } else {\n            b\
    \ %= a;\n        }\n        gcd = a % gcd < b % gcd ? a : gcd;\n    }\n    gcd\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `a`\n\
    \  --> /tmp/tmpfk6cva_m.rs:10:35\n   |\n10 |         gcd = a % gcd < b % gcd ?\
    \ a : gcd;\n   |                                   ^ expected one of `.`, `;`,\
    \ `?`, `}`, or an operator\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 {\n    \
    \    if a % b == 0 {\n            gcd = b;\n        }\n        b /= 2;\n    }\n\
    \    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmp3fysbqwd.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor -=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747730
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor > b {\n        greatest_common_divisor -= b;\n    }\n\
    \    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmplfhro7df.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ = b;\n        }\n        greatest_common_divisor /= b;\n        a = (a / b).floor();\n\
    \        b = (b / greatest_common_divisor).floor();\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmpv4y9h3pf.rs:9:21\n  |\n9 |         a = (a / b).floor();\n\
    \  |                     ^^^^^ method not found in `isize`\n\nerror[E0599]: no\
    \ method named `floor` found for type `isize` in the current scope\n  --> /tmp/tmpv4y9h3pf.rs:10:43\n\
    \   |\n10 |         b = (b / greatest_common_divisor).floor();\n   |         \
    \                                  ^^^^^ method not found in `isize`\n\nerror:\
    \ aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor > b {\n        greatest_common_divisor -= b;\n    }\n\
    \    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmplfhro7df.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut remainder = 0;\n    while a > 0 && b > 0 {\n        if a > b {\n       \
    \     remainder += a;\n            a -= b;\n        } else {\n            remainder\
    \ += b;\n            b -= a;\n        }\n        greatest_common_divisor = remainder\
    \ / greatest_common_divisor;\n        remainder = remainder % greatest_common_divisor;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp6lijy633.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |             a -= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp6lijy633.rs:11:13\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |             b -= a;\n   |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor % b != 0 {\n        greatest_common_divisor /= b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqb75ymu2.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while b != 0 {\n        let t = a % b;\n  \
    \      a = b;\n        b = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdpvljdfp.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdpvljdfp.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = t;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut a = a;\n    let mut b = b;\n    while a != 0 {\n        if b == 0 {\n  \
    \          return greatest_common_divisor;\n        }\n        greatest_common_divisor\
    \ %= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmprnpcxs2a.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while b != 0 {\n        let t = a % b;\n  \
    \      a = b;\n        b = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdpvljdfp.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdpvljdfp.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = t;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 && b !=\
    \ 0 {\n        if a > b {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd = gcd * b;\n    }\n    gcd\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpcup3lr02.rs:6:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpcup3lr02.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |             b %= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = a % b;\n    while greatest_common_divisor\
    \ != 0 {\n        greatest_common_divisor = b;\n        b = a % b;\n        a\
    \ = b;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpd2j8v6jj.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b = a % b;\n  |         ^^^^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpd2j8v6jj.rs:10:9\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n10 |         a = b;\n   |         ^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor % b != 0 {\n        greatest_common_divisor /= b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqb75ymu2.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 && b !=\
    \ 0 {\n        if a > b {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd = (gcd + (a % b)) % b;\n    }\n    gcd\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmphkbxlit3.rs:6:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmphkbxlit3.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |             b %= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 {\n    \
    \    if a % gcd == 0 {\n            gcd = b;\n        } else {\n            gcd\
    \ = a;\n        }\n        a /= gcd ;\n    }\n    gcd\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp_q_s3hel.rs:10:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |         a /= gcd ;\n   |         ^^^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 && b !=\
    \ 0 {\n        if a > b {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd = a % gcd < b % gcd ? a : b;\n    }\n    gcd\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error: expected one of `.`, `;`, `?`, `}`, or an operator, found `a`\n\
    \  --> /tmp/tmpwrtmsusv.rs:10:35\n   |\n10 |         gcd = a % gcd < b % gcd ?\
    \ a : b;\n   |                                   ^ expected one of `.`, `;`, `?`,\
    \ `}`, or an operator\n\nerror: aborting due to previous error\n\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    greatest_common_divisor(b, a % b)\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpgq8qu9jl.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a as isize;\n\
    \    while greatest_common_divisor >= b {\n        greatest_common_divisor -=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpd2fxm55b.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor % b != 0 {\n        greatest_common_divisor /= b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqb75ymu2.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut a_mod_b = 0;\n    while a % b != 0 {\n        greatest_common_divisor +=\
    \ 1;\n        a %= b;\n    }\n    while greatest_common_divisor != 0 {\n     \
    \   a_mod_b += 1;\n        greatest_common_divisor %= a_mod_b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpu16gra6p.rs:7:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n7 |         a %= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a as isize;\n\
    \    while b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += 1;\n        }\n        a /= b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp6i3bla_0.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = 1;\n    let mut\
    \ a_mod_greatest_divisor = a;\n    let mut b_mod_greatest_divisor = b;\n    while\
    \ a_mod_greatest_divisor > b_mod_greatest_divisor {\n        greatest_divisor\
    \ *= a_mod_greatest_divisor;\n        a_mod_greatest_divisor /= b_mod_greatest_divisor;\n\
    \    }\n    while b_mod_greatest_divisor > a_mod_greatest_divisor {\n        greatest_divisor\
    \ *= b_mod_greatest_divisor;\n        b_mod_greatest_divisor /= a_mod_greatest_divisor;\n\
    \    }\n    greatest_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `7`,\n right: `1`', /tmp/tmpz3navhi3.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while a != 0 && b != 0 {\n        if a % b\
    \ == 0 {\n            a /= b;\n        } else {\n            b /= a;\n       \
    \ }\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpkwfel4k3.rs:5:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |             a /= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpkwfel4k3.rs:7:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n7 |             b /= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 && b !=\
    \ 0 {\n        if a > b {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd = a % gcd;\n        a = b;\n        b = gcd;\n\
    \    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmppn700yth.rs:6:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmppn700yth.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |             b %= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmppn700yth.rs:11:9\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n11 |         a = b;\n   |         ^^^^^\
    \ cannot assign to immutable argument\n\nerror[E0384]: cannot assign to immutable\
    \ argument `b`\n  --> /tmp/tmppn700yth.rs:12:9\n   |\n2  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n12 |         b = gcd;\n\
    \   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 4 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = 1;\n    let mut\
    \ greatest_divisor2 = 1;\n    let mut greatest_divisor3 = 1;\n    while greatest_divisor\
    \ < a && greatest_divisor2 < b && greatest_divisor3 < b {\n        if a % greatest_divisor\
    \ == 0 && b % greatest_divisor2 == 0 && b % greatest_divisor3 == 0 {\n       \
    \     greatest_divisor = greatest_divisor2;\n            greatest_divisor2 = greatest_divisor3;\n\
    \            greatest_divisor3 = 1;\n        } else {\n            greatest_divisor\
    \ = greatest_divisor;\n            greatest_divisor2 = greatest_divisor2;\n  \
    \          greatest_divisor3 = greatest_divisor3;\n        }\n    }\n    greatest_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976063
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n\n    let mut greatest_common_divisor = 1;\n    let mut a_mod_b = (a %\
    \ b);\n    while a_mod_b != 0 {\n        greatest_common_divisor = a_mod_b;\n\
    \        a_mod_b = (a % b);\n    }\n\n    greatest_common_divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976063
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a as isize;\n\
    \    while greatest_common_divisor != 0 {\n        if b == 0 {\n            return\
    \ greatest_common_divisor;\n        }\n        greatest_common_divisor %= b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976063
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \    while a != 0 && b != 0 {\n        if a > b {\n            greatest_common_divisor\
    \ = greatest_common_divisor + 1;\n            a = a % greatest_common_divisor;\n\
    \        } else {\n            greatest_common_divisor = greatest_common_divisor\
    \ + 1;\n            b = b % greatest_common_divisor;\n        }\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpbtrvisjz.rs:21:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while b != 0 {\n        let t = a % b;\n  \
    \      a = b;\n        b = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdpvljdfp.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdpvljdfp.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = t;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = a;\n    while gcd < b {\n   \
    \     gcd *= a;\n    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpvjk2ujd3.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n            a /= b;\n        } else {\n            a /= b;\n        }\n\
    \        b /= 2;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpsk47dh5j.rs:7:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n7 |             a /= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpsk47dh5j.rs:9:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |             a /= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpsk47dh5j.rs:11:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b /= 2;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = 0;\n    let mut\
    \ a = a;\n    let mut b = b;\n    while a > 0 && b > 0 {\n        if a % b ==\
    \ 0 {\n            greatest_divisor = b;\n        }\n        a /= b;\n       \
    \ b /= 2;\n    }\n    greatest_divisor\n}\n\nfn main() {\n    let candidate =\
    \ greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpzbqcitvm.rs:18:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = a;\n    let mut\
    \ greatest_divisor_found = false;\n    while !greatest_divisor_found {\n     \
    \   if b == 0 {\n            greatest_divisor_found = true;\n        } else {\n\
    \            greatest_divisor = a % b;\n        }\n    }\n    greatest_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976063
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 {\n    \
    \    if b % a == 0 {\n            gcd = a;\n        }\n        a /= 2;\n    }\n\
    \    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpq7vv_gbb.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= 2;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    if a > b {\n        (a, b) = (b, a)\n    }\n    let mut greatest_common_divisor\
    \ = a;\n    let mut remainder = a % b;\n    while remainder != 0 {\n        greatest_common_divisor\
    \ = remainder;\n        remainder = a % b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpujo9ooqi.rs:7:10\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n7 |         (a, b) = (b, a)\n  |          ^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpujo9ooqi.rs:7:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n7 |         (a, b) = (b, a)\n  |             ^ cannot assign to\
    \ immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = a;\n    while gcd < b {\n   \
    \     gcd *= 2;\n    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `1`', /tmp/tmprzji5y2t.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor < b {\n        greatest_common_divisor += a;\n    }\n\
    \    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpjdvcjnze.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = 0;\n    let mut\
    \ a = a % b;\n    while a != 0 {\n        greatest_divisor = a % b;\n        a\
    \ = b;\n        b = greatest_divisor;\n    }\n    greatest_divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpkrderres.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |         b = greatest_divisor;\n  |         ^^^^^^^^^^^^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a > b {\n            greatest_common_divisor +=\
    \ a;\n            a -= b;\n        } else {\n            greatest_common_divisor\
    \ += b;\n            b -= a;\n        }\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpr6gujbhw.rs:7:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n7 |             a -= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpr6gujbhw.rs:10:13\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |             b -= a;\n   |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = a;\n    let mut\
    \ greatest_divisor_found = false;\n    while !greatest_divisor_found && greatest_divisor\
    \ < b {\n        greatest_divisor_found = true;\n        greatest_divisor += a;\n\
    \    }\n    greatest_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `6`,\n right: `1`', /tmp/tmpsfkdzmv0.rs:14:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 && b !=\
    \ 0 {\n        if a > b {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd = a % gcd;\n        a = b;\n        b = gcd;\n\
    \    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmppn700yth.rs:6:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmppn700yth.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |             b %= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmppn700yth.rs:11:9\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n11 |         a = b;\n   |         ^^^^^\
    \ cannot assign to immutable argument\n\nerror[E0384]: cannot assign to immutable\
    \ argument `b`\n  --> /tmp/tmppn700yth.rs:12:9\n   |\n2  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n12 |         b = gcd;\n\
    \   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 4 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = a % b;\n    while greatest_common_divisor\
    \ != 0 {\n        greatest_common_divisor = b;\n        b = a % b;\n        a\
    \ = b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpacfd1vxo.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b = a % b;\n  |         ^^^^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpacfd1vxo.rs:10:9\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n10 |         a = b;\n   |         ^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ = b;\n        }\n        greatest_common_divisor /= b;\n        a /= b;\n  \
    \      b /= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqbba6cod.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpqbba6cod.rs:10:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = a;\n    while greatest_divisor\
    \ < b {\n        greatest_divisor += a;\n    }\n    greatest_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpv_bstxux.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 && b !=\
    \ 0 {\n        if a > b {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd = a % gcd;\n        a = b;\n        b = gcd;\n\
    \    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmppn700yth.rs:6:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmppn700yth.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |             b %= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmppn700yth.rs:11:9\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n11 |         a = b;\n   |         ^^^^^\
    \ cannot assign to immutable argument\n\nerror[E0384]: cannot assign to immutable\
    \ argument `b`\n  --> /tmp/tmppn700yth.rs:12:9\n   |\n2  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n12 |         b = gcd;\n\
    \   |         ^^^^^^^ cannot assign to immutable argument\n\nerror: aborting due\
    \ to 4 previous errors\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = a;\n    while gcd < b {\n   \
    \     gcd *= a;\n    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpvjk2ujd3.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    greatest_common_divisor(b, a % b)\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpgq8qu9jl.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a < b {\n        greatest_common_divisor(b,\
    \ a)\n    } else {\n        greatest_common_divisor(a, a)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976064
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor -=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747730
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while a % b != 0 {\n        a = a % b;\n  \
    \  }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpgsp1w9__.rs:4:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    3 |     while a % b != 0 {\n4 |         a = a % b;\n  |         ^^^^^^^^^ cannot\
    \ assign to immutable argument\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n\n    let mut greatest_common_divisor = a % b;\n    while greatest_common_divisor\
    \ != 0 {\n        greatest_common_divisor -= b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976063
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = 0;\n    let mut\
    \ remainder = 0;\n    while a > 0 && b > 0 {\n        if a > b {\n           \
    \ greatest_divisor = a % b;\n            remainder = b;\n        } else {\n  \
    \          greatest_divisor = b % a;\n            remainder = a;\n        }\n\
    \        a = remainder;\n        b = greatest_divisor;\n    }\n    greatest_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "warning: value assigned to `remainder` is never read\n --> /tmp/tmp__f77710.rs:4:13\n\
    \  |\n4 |     let mut remainder = 0;\n  |             ^^^^^^^^^\n  |\n  = note:\
    \ `#[warn(unused_assignments)]` on by default\n  = help: maybe it is overwritten\
    \ before being read?\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmp__f77710.rs:13:9\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n13 |         a = remainder;\n   |      \
    \   ^^^^^^^^^^^^^ cannot assign to immutable argument\n\nerror[E0384]: cannot\
    \ assign to immutable argument `b`\n  --> /tmp/tmp__f77710.rs:14:9\n   |\n2  |\
    \ fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |            \
    \                          - help: consider making this binding mutable: `mut\
    \ b`\n...\n14 |         b = greatest_divisor;\n   |         ^^^^^^^^^^^^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 2 previous errors;\
    \ 1 warning emitted\n\nFor more information about this error, try `rustc --explain\
    \ E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor /=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpnkkadnz5.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        greatest_common_divisor += a;\n        a /= b;\n \
    \       b /= a;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqwble567.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpqwble567.rs:10:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b /= a;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = 1;\n    while a\
    \ % greatest_divisor == 0 && b != 0 {\n        greatest_divisor *= b;\n      \
    \  a /= b;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmplryl2dtv.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = a;\n    while gcd < b {\n   \
    \     gcd *= a;\n    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpvjk2ujd3.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a > b {\n            greatest_common_divisor =\
    \ b;\n            b -= a;\n        } else {\n            greatest_common_divisor\
    \ = a;\n            a -= b;\n        }\n    }\n    greatest_common_divisor\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpoe_0zi5l.rs:7:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n7 |             b -= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpoe_0zi5l.rs:10:13\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n10 |             a -= b;\n   |         \
    \    ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor < b {\n        greatest_common_divisor += a;\n    }\n\
    \    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpjdvcjnze.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n            a /= b;\n        } else {\n            a /= b;\n        }\n\
    \        b /= 2;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpsk47dh5j.rs:7:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n7 |             a /= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpsk47dh5j.rs:9:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |             a /= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpsk47dh5j.rs:11:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b /= 2;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = a;\n    let mut a = a % b;\n   \
    \ while a != 0 {\n        greatest_common_divisor = b;\n        b = a % b;\n \
    \       a = a % b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n   \
    \ let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp4z2mu_fp.rs:10:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 && b !=\
    \ 0 {\n        if a > b {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd *= b;\n    }\n    gcd\n}\n\nfn main() {\n  \
    \  let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp712gtghm.rs:6:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmp712gtghm.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |             b %= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while a != 0 {\n        let t = a % b;\n  \
    \      a = b;\n        b = t;\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpgm54fc42.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpgm54fc42.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = t;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor /=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpnkkadnz5.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut a_minus_b = a - b;\n    while a_minus_b > 0 {\n        greatest_common_divisor\
    \ *= a_minus_b;\n        a_minus_b -= 1;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpwwgu0gug.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut a_mod_b = 0;\n    while a % b != 0 {\n        greatest_common_divisor +=\
    \ 1;\n        a %= b;\n    }\n    while greatest_common_divisor != 1 {\n     \
    \   a_mod_b += 1;\n        greatest_common_divisor %= a_mod_b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpoy9j7c2z.rs:7:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n7 |         a %= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor % b != 0 {\n        greatest_common_divisor /= b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqb75ymu2.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    if a > b {\n        (a, b) = (b, a)\n    }\n    while a % b != 0 {\n\
    \        a = a / b;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp277ofjjt.rs:7:10\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n7 |         (a, b) = (b, a)\n  |          ^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmp277ofjjt.rs:7:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n7 |         (a, b) = (b, a)\n  |             ^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmp277ofjjt.rs:10:9\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n10 |         a = a / b;\n   |         ^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 3 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while b != 0 {\n        let t = a % b;\n  \
    \      a = b;\n        b = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdpvljdfp.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdpvljdfp.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = t;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while a != 0 {\n        let t = a % b;\n  \
    \      a = b;\n        b = t;\n    }\n    b\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpgm54fc42.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpgm54fc42.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = t;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    if a > b {\n        std::swap(a, b);\n    }\n    let mut greatest_common_divisor\
    \ = 1;\n    let mut a_mod_b = 0;\n    while a > 0 {\n        a_mod_b = a % b;\n\
    \        a = b;\n        b = a_mod_b;\n        greatest_common_divisor *= b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0425]: cannot find function `swap` in crate `std`\n --> /tmp/tmp2hwbtc81.rs:7:14\n\
    \  |\n7 |         std::swap(a, b);\n  |              ^^^^ not found in `std`\n\
    \  |\nhelp: consider importing one of these items\n  |\n1 | use std::mem::swap;\n\
    \  |\n1 | use std::ptr::swap;\n  |\nhelp: if you import `swap`, refer to it directly\n\
    \  |\n7 -         std::swap(a, b);\n7 +         swap(a, b);\n  | \n\nerror: aborting\
    \ due to previous error\n\nFor more information about this error, try `rustc --explain\
    \ E0425`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor -=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747730
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor < b {\n        greatest_common_divisor += a;\n    }\n\
    \    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpjdvcjnze.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 && b !=\
    \ 0 {\n        if a > b {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd *= b;\n    }\n    gcd\n}\n\nfn main() {\n  \
    \  let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp712gtghm.rs:6:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmp712gtghm.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |             b %= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor % b != 0 {\n        greatest_common_divisor /= b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqb75ymu2.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor -=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747730
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    if a > b {\n        (a, b) = (b, a)\n    }\n    while a % b != 0 {\n\
    \        (a, b) = (b, a % b)\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp9wsjjkal.rs:7:10\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n7 |         (a, b) = (b, a)\n  |          ^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmp9wsjjkal.rs:7:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n7 |         (a, b) = (b, a)\n  |             ^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmp9wsjjkal.rs:10:10\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n10 |         (a, b) = (b, a % b)\n   | \
    \         ^ cannot assign to immutable argument\n\nerror[E0384]: cannot assign\
    \ to immutable argument `b`\n  --> /tmp/tmp9wsjjkal.rs:10:13\n   |\n2  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n10 |         (a, b) = (b,\
    \ a % b)\n   |             ^ cannot assign to immutable argument\n\nerror: aborting\
    \ due to 4 previous errors\n\nFor more information about this error, try `rustc\
    \ --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a as isize;\n\
    \    while greatest_common_divisor != 0 {\n        if b == 0 {\n            return\
    \ greatest_common_divisor;\n        }\n        greatest_common_divisor %= b;\n\
    \    }\n    return b;\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976063
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor % b != 0 {\n        greatest_common_divisor /= b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqb75ymu2.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a > b {\n            greatest_common_divisor =\
    \ b;\n            b -= a;\n        } else {\n            greatest_common_divisor\
    \ = a;\n            a -= b;\n        }\n    }\n    greatest_common_divisor\n}\n\
    \nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpoe_0zi5l.rs:7:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n7 |             b -= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpoe_0zi5l.rs:10:13\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n10 |             a -= b;\n   |         \
    \    ^^^^^^ cannot assign to immutable argument\n\nerror: aborting due to 2 previous\
    \ errors\n\nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a > 0 && b > 0\
    \ {\n        if a > b {\n            a %= b;\n        } else {\n            b\
    \ %= a;\n        }\n        gcd = gcd * b;\n    }\n    gcd\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpjadpyx5i.rs:6:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpjadpyx5i.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |             b %= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut a = a;\n    let mut b = b;\n    while a != 0 {\n        if b == 0 {\n  \
    \          break;\n        }\n        greatest_common_divisor = a % b;\n     \
    \   a = b;\n        b = greatest_common_divisor;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpth41_jpp.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a > 0 && b > 0\
    \ {\n        if a % b == 0 {\n            gcd = b;\n        }\n        b /= 2;\n\
    \    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpya6g5g5q.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut a = a;\n    let mut b = b;\n    while a > 0 && b > 0 {\n        if a % b\
    \ == 0 {\n            greatest_common_divisor += b;\n        }\n        a /= b;\n\
    \        b /= 2;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpfiyu2oud.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        b /= 2;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmp3w5pktvj.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 && b !=\
    \ 0 {\n        if a > b {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd *= b;\n    }\n    gcd\n}\n\nfn main() {\n  \
    \  let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp712gtghm.rs:6:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmp712gtghm.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |             b %= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        b /= 2;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmp3w5pktvj.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = 1;\n    let mut a = a % greatest_common_divisor;\n\
    \    let mut b = b % greatest_common_divisor;\n    while a != 0 && b != 0 {\n\
    \        if a > b {\n            greatest_common_divisor += 1;\n            a\
    \ %= greatest_common_divisor;\n        } else {\n            greatest_common_divisor\
    \ += 1;\n            b %= greatest_common_divisor;\n        }\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmp_vredri1.rs:24:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor % b != 0 {\n        greatest_common_divisor /= b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqb75ymu2.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut a = a;\n    let mut b = b;\n    while a > 0 && b > 0 {\n        if a % b\
    \ == 0 {\n            greatest_common_divisor = b;\n        }\n        greatest_common_divisor\
    \ /= b;\n        a /= b;\n        b /= b;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpan8e64b4.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor % b != 0 {\n        greatest_common_divisor /= b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpqb75ymu2.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n\n    let mut greatest_common_divisor = a;\n    let mut a = a % b;\n \
    \   while a != 0 {\n        greatest_common_divisor = b;\n        b = a % b;\n\
    \        a = a % b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n  \
    \  let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpzdhiqh7j.rs:11:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = a % b;\n    while greatest_common_divisor\
    \ != 0 {\n        greatest_common_divisor = b;\n        b = a % b;\n        a\
    \ = b;\n    }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpd2j8v6jj.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b = a % b;\n  |         ^^^^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpd2j8v6jj.rs:10:9\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n10 |         a = b;\n   |         ^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = 0;\n    let mut\
    \ a_mod_greatest_divisor = 0;\n    let mut b_mod_greatest_divisor = 0;\n    while\
    \ a != 0 {\n        greatest_divisor = a % greatest_divisor;\n        a = a /\
    \ greatest_divisor;\n        a_mod_greatest_divisor = a_mod_greatest_divisor +\
    \ 1;\n    }\n    while b != 0 {\n        greatest_divisor = b % greatest_divisor;\n\
    \        b = b / greatest_divisor;\n        b_mod_greatest_divisor = b_mod_greatest_divisor\
    \ + 1;\n    }\n    greatest_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpd_zaxr_p.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a = a / greatest_divisor;\n  |         ^^^^^^^^^^^^^^^^^^^^^^^^\
    \ cannot assign to immutable argument\n\nerror[E0384]: cannot assign to immutable\
    \ argument `b`\n  --> /tmp/tmpd_zaxr_p.rs:13:9\n   |\n2  | fn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n   |                                      - help:\
    \ consider making this binding mutable: `mut b`\n...\n13 |         b = b / greatest_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\n\
    error: aborting due to 2 previous errors\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = a;\n    while greatest_divisor\
    \ > b {\n        greatest_divisor -= b;\n    }\n    greatest_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkncc6dhb.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n\
    \        if a % b == 0 {\n            greatest_common_divisor += b;\n        }\n\
    \        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpnxi85kg7.rs:11:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpnxi85kg7.rs:12:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n12 |         b /= 2;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while b != 0 {\n        let t = a % b;\n  \
    \      a = b;\n        b = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdpvljdfp.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdpvljdfp.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = t;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 0
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if b == 0 {\n        a\n    } else {\n    \
    \    greatest_common_divisor(b, a % b)\n    }\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: OK
  stderr: ''
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    greatest_common_divisor(b, a % b)\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpgq8qu9jl.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a < b {\n        greatest_common_divisor(b,\
    \ a)\n    } else {\n        greatest_common_divisor(a, a)\n    }\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976064
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor -=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747730
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while b != 0 {\n        let t = a % b;\n  \
    \      a = b;\n        b = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdpvljdfp.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdpvljdfp.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = t;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut a = a;\n    let mut b = b;\n    while a != 0 {\n        if a % b == 0 {\n\
    \            greatest_common_divisor = b;\n        }\n        b /= 2;\n    }\n\
    \    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmp80uubodw.rs:7:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut a_minus_b = a - b;\n    while a_minus_b > greatest_common_divisor {\n  \
    \      greatest_common_divisor <<= 1;\n        greatest_common_divisor += 1;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpz93f323p.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while b != 0 {\n        let t = a % b;\n  \
    \      a = b;\n        b = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdpvljdfp.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdpvljdfp.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = t;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor -=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659747730
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor < b {\n        greatest_common_divisor += a;\n    }\n\
    \    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpjdvcjnze.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n            a /= b;\n        } else {\n            a %= b;\n        }\n\
    \        b /= 2;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmppang2qwr.rs:7:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n7 |             a /= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmppang2qwr.rs:9:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n9 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmppang2qwr.rs:11:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b /= 2;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 3 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 && b !=\
    \ 0 {\n        if a > b {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd = gcd * b;\n    }\n    gcd\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpcup3lr02.rs:6:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpcup3lr02.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |             b %= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a as isize;\n\
    \    while greatest_common_divisor > b {\n        greatest_common_divisor -= b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpn0c0fjyc.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut a = a % greatest_common_divisor;\n    let mut b = b % greatest_common_divisor;\n\
    \    while a != 0 {\n        if b == 0 {\n            return greatest_common_divisor;\n\
    \        }\n        greatest_common_divisor = greatest_common_divisor % b;\n \
    \       a = a % b;\n        b = b % greatest_common_divisor;\n    }\n    return\
    \ greatest_common_divisor;\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpm2kn5sci.rs:20:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a % b;\n\
    \    while greatest_common_divisor != 0 {\n        greatest_common_divisor /=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpnkkadnz5.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ = b;\n            break;\n        }\n        greatest_common_divisor += 1;\n\
    \        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmp99n7jwn8.rs:10:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n10 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmp99n7jwn8.rs:11:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b /= 2;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    let\
    \ mut a = a;\n    let mut b = b;\n    while a != 0 {\n        if a % b == 0 {\n\
    \            greatest_common_divisor = b;\n        }\n        b = b * 2;\n   \
    \     a = a / b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let\
    \ candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `1`,\n right: `5`', /tmp/tmpgreqxeyv.rs:19:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n\n    let mut greatest_common_divisor = 1;\n    let mut a = a;\n    let\
    \ mut b = b;\n    while a != 0 && b != 0 {\n        if a > b {\n            a\
    \ %= b;\n        } else {\n            b %= a;\n        }\n        greatest_common_divisor\
    \ *= a;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmp5agx1yq3.rs:23:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n\n    let mut greatest_common_divisor = a % b;\n    while greatest_common_divisor\
    \ != 0 {\n        greatest_common_divisor = b;\n        b = a % b;\n        a\
    \ = b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmporbeymcn.rs:10:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n10 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmporbeymcn.rs:11:9\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n11 |         a = b;\n   |         ^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = a;\n    while greatest_common_divisor\
    \ != 0 && greatest_common_divisor % b == 0 {\n        greatest_common_divisor\
    \ /= b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmp1h4rjujl.rs:15:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while b != 0 {\n        let t = a % b;\n  \
    \      a = b;\n        b = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdpvljdfp.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdpvljdfp.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = t;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n\n    let mut greatest_common_divisor = a;\n    let mut a = a % b;\n \
    \   while a != 0 {\n        greatest_common_divisor = b;\n        b = a % b;\n\
    \        a = a / b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n  \
    \  let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n\
    \    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n\
    \    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpbq2ui5zl.rs:11:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n11 |         b = a % b;\n   |         ^^^^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = a;\n    while gcd < b {\n   \
    \     gcd *= 2;\n    }\n    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `12`,\n right: `1`', /tmp/tmprzji5y2t.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    (a / b).floor() as isize\n}\n\nfn main() {\n\
    \    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3, 7),\
    \ 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49, 14),\
    \ 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `floor` found for type `isize` in the current\
    \ scope\n --> /tmp/tmptvo8xcyi.rs:3:13\n  |\n3 |     (a / b).floor() as isize\n\
    \  |             ^^^^^ method not found in `isize`\n\nerror: aborting due to previous\
    \ error\n\nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = a % b;\n    while greatest_common_divisor\
    \ != 0 {\n        greatest_common_divisor = b;\n        b = a % b;\n        a\
    \ = greatest_common_divisor;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmplypi1t78.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b = a % b;\n  |         ^^^^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmplypi1t78.rs:10:9\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n10 |         a = greatest_common_divisor;\n\
    \   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to 2 previous errors\n\nFor more information about this\
    \ error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while a != b {\n        if a > b {\n      \
    \      a -= b;\n        } else {\n            b -= a;\n        }\n    }\n    a\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpbrl9q_l5.rs:5:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |             a -= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpbrl9q_l5.rs:7:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n7 |             b -= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    if a > b {\n        (a, b) = (b, a)\n    }\n    let mut greatest_common_divisor\
    \ = a as isize;\n    for i in 1..b {\n        if greatest_common_divisor % i ==\
    \ 0 {\n            greatest_common_divisor /= i;\n        }\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmp1gjacog6.rs:7:10\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n7 |         (a, b) = (b, a)\n  |          ^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmp1gjacog6.rs:7:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n7 |         (a, b) = (b, a)\n  |             ^ cannot assign to\
    \ immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    a.gcd(b).unwrap()\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0599]: no method named `gcd` found for type `isize` in the current\
    \ scope\n --> /tmp/tmp84pa7up2.rs:6:7\n  |\n6 |     a.gcd(b).unwrap()\n  |   \
    \    ^^^ method not found in `isize`\n\nerror: aborting due to previous error\n\
    \nFor more information about this error, try `rustc --explain E0599`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while b != 0 {\n        let t = a % b;\n  \
    \      a = b;\n        b = t;\n    }\n    a\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpdpvljdfp.rs:5:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n5 |         a = b;\n  |         ^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpdpvljdfp.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = t;\n  |         ^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = a;\n    while greatest_divisor\
    \ > b {\n        greatest_divisor -= b;\n    }\n    greatest_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpkncc6dhb.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = 1;\n    let mut a_minus_b = a %\
    \ b;\n    while a_minus_b != 0 {\n        greatest_common_divisor = a_minus_b;\n\
    \        a_minus_b = a % b;\n    }\n    greatest_common_divisor\n}\n\nfn main()\
    \ {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976063
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = a % b;\n    while\
    \ greatest_divisor != 0 {\n        greatest_divisor = b;\n        b = a % b;\n\
    \    }\n    b\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmplgutxr8n.rs:6:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n6 |         b = a % b;\n  |         ^^^^^^^^^ cannot assign to\
    \ immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_divisor = 1;\n    let mut\
    \ greatest_divisor_index = 0;\n    for i in 0..(b - a) {\n        if a % i ==\
    \ 0 {\n            greatest_divisor = i;\n            greatest_divisor_index =\
    \ i;\n        }\n    }\n    greatest_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: 'thread ''main'' panicked at ''attempt to calculate the remainder with a
    divisor of zero'', /tmp/tmpo8_f49mg.rs:6:12

    note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

    '
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a.clone();\n\
    \    while greatest_common_divisor < b {\n        greatest_common_divisor += b;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `10`,\n right: `1`', /tmp/tmpwnt67o8g.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 {\n    \
    \    if b % a == 0 {\n            gcd = a;\n        }\n        a /= 2;\n    }\n\
    \    gcd\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n   \
    \ assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n   \
    \ assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpq7vv_gbb.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= 2;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror: aborting due to previous error\n\nFor more information about this error,\
    \ try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        b /= 2;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmp3w5pktvj.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to previous error\n\nFor more information about\
    \ this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 && b !=\
    \ 0 {\n        if a > b {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd = (gcd + (a % b)) % b;\n    }\n    gcd\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmphkbxlit3.rs:6:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmphkbxlit3.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |             b %= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    greatest_common_divisor(b, a % b)\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `0`,\n right: `1`', /tmp/tmpgq8qu9jl.rs:11:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = 1;\n    while\
    \ a > 0 && b > 0 {\n        if a % b == 0 {\n            greatest_common_divisor\
    \ += b;\n        }\n        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n\
    }\n\nfn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpqexkhoa7.rs:8:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n8 |         a /= b;\n  |         ^^^^^^ cannot assign to immutable argument\n\
    \nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpqexkhoa7.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b /= 2;\n  |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut gcd = 1;\n    while a != 0 && b !=\
    \ 0 {\n        if a > b {\n            a %= b;\n        } else {\n           \
    \ b %= a;\n        }\n        gcd = (gcd + (a % b)) % b;\n    }\n    gcd\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmphkbxlit3.rs:6:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    ...\n6 |             a %= b;\n  |             ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmphkbxlit3.rs:8:13\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n8 |             b %= a;\n  |             ^^^^^^ cannot assign\
    \ to immutable argument\n\nerror: aborting due to 2 previous errors\n\nFor more\
    \ information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = a % b;\n    while greatest_common_divisor\
    \ != 0 {\n        greatest_common_divisor = b;\n        b = a % b;\n        a\
    \ = b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpacfd1vxo.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b = a % b;\n  |         ^^^^^^^^^ cannot assign to\
    \ immutable argument\n\nerror[E0384]: cannot assign to immutable argument `a`\n\
    \  --> /tmp/tmpacfd1vxo.rs:10:9\n   |\n2  | fn greatest_common_divisor(a: isize,\
    \ b: isize) -> isize {\n   |                            - help: consider making\
    \ this binding mutable: `mut a`\n...\n10 |         a = b;\n   |         ^^^^^\
    \ cannot assign to immutable argument\n\nerror: aborting due to 2 previous errors\n\
    \nFor more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a as isize;\n\
    \    while greatest_common_divisor >= b {\n        greatest_common_divisor -=\
    \ b;\n    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate\
    \ = greatest_common_divisor;\n    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10,\
    \ 15), 5);\n    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144,\
    \ 60), 12);\n}\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `3`,\n right: `1`', /tmp/tmpd2fxm55b.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: -1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = a as isize;\n    let mut remainder\
    \ = a % b;\n    while remainder != 0 {\n        greatest_common_divisor += 1;\n\
    \        remainder = remainder % b;\n    }\n    greatest_common_divisor\n}\n\n\
    fn main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659976063
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = a % b;\n    while greatest_common_divisor\
    \ != 0 {\n        greatest_common_divisor = b;\n        b = a % b;\n    }\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpi1q5q2a5.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b = a % b;\n  |         ^^^^^^^^^ cannot assign to\
    \ immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    while a % b != 0 {\n        a = a % b;\n  \
    \  }\n    a\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n --> /tmp/tmpgsp1w9__.rs:4:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                       - help: consider making this binding mutable: `mut a`\n\
    3 |     while a % b != 0 {\n4 |         a = a % b;\n  |         ^^^^^^^^^ cannot\
    \ assign to immutable argument\n\nerror: aborting due to previous error\n\nFor\
    \ more information about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a.clone();\n\
    \    while greatest_common_divisor < b {\n        greatest_common_divisor += a;\n\
    \    }\n    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpqz0zhhbq.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659747725
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = 1;\n    while a > 0 && b > 0 {\n\
    \        if a % b == 0 {\n            greatest_common_divisor += b;\n        }\n\
    \        a /= b;\n        b /= 2;\n    }\n    greatest_common_divisor\n}\n\nfn\
    \ main() {\n    let candidate = greatest_common_divisor;\n    assert_eq!(candidate(3,\
    \ 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n    assert_eq!(candidate(49,\
    \ 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n}\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `a`\n  --> /tmp/tmpnxi85kg7.rs:11:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                          - help: consider making this binding mutable: `mut\
    \ a`\n...\n11 |         a /= b;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror[E0384]: cannot assign to immutable argument `b`\n  --> /tmp/tmpnxi85kg7.rs:12:9\n\
    \   |\n2  | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n   |  \
    \                                    - help: consider making this binding mutable:\
    \ `mut b`\n...\n12 |         b /= 2;\n   |         ^^^^^^ cannot assign to immutable\
    \ argument\n\nerror: aborting due to 2 previous errors\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 101
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    let mut greatest_common_divisor = a;\n    while\
    \ greatest_common_divisor < b {\n        greatest_common_divisor += a;\n    }\n\
    \    greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: Exception
  stderr: "thread 'main' panicked at 'assertion failed: `(left == right)`\n  left:\
    \ `9`,\n right: `1`', /tmp/tmpjdvcjnze.rs:12:5\nnote: run with `RUST_BACKTRACE=1`\
    \ environment variable to display a backtrace\n"
  stdout: ''
  timestamp: 1659976058
- exit_code: 1
  program: "/// Return a greatest common divisor of two integers a and b\nfn greatest_common_divisor(a:\
    \ isize, b: isize) -> isize {\n    if a == 0 || b == 0 {\n        return 0;\n\
    \    }\n    let mut greatest_common_divisor = a % b;\n    while greatest_common_divisor\
    \ != 0 {\n        greatest_common_divisor = b;\n        b = a % b;\n    }\n  \
    \  greatest_common_divisor\n}\n\nfn main() {\n    let candidate = greatest_common_divisor;\n\
    \    assert_eq!(candidate(3, 7), 1);\n    assert_eq!(candidate(10, 15), 5);\n\
    \    assert_eq!(candidate(49, 14), 7);\n    assert_eq!(candidate(144, 60), 12);\n\
    }\n"
  status: SyntaxError
  stderr: "error[E0384]: cannot assign to immutable argument `b`\n --> /tmp/tmpi1q5q2a5.rs:9:9\n\
    \  |\n2 | fn greatest_common_divisor(a: isize, b: isize) -> isize {\n  |     \
    \                                 - help: consider making this binding mutable:\
    \ `mut b`\n...\n9 |         b = a % b;\n  |         ^^^^^^^^^ cannot assign to\
    \ immutable argument\n\nerror: aborting due to previous error\n\nFor more information\
    \ about this error, try `rustc --explain E0384`.\n"
  stdout: ''
  timestamp: 1659976058
